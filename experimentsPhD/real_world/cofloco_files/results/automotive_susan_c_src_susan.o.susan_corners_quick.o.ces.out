WARNING: Excluded non-linear constraints:[D=4*A*B]
Warning: Ignored call to eval_susan_corners_quick_stop/1 in equation eval_susan_corners_quick_1165/1 
Warning: Ignored call to eval_susan_corners_quick_stop/1 in equation loop_cont_eval_susan_corners_quick_bb25_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_susan_corners_quick_bb23_in/8,eval_susan_corners_quick_bb2_in/8]
1. recursive  : [eval_susan_corners_quick_bb1_in/7,loop_cont_eval_susan_corners_quick_bb2_in/8]
2. recursive  : [eval_susan_corners_quick_bb26_in/8,eval_susan_corners_quick_bb78_in/8]
3. recursive  : [eval_susan_corners_quick_bb25_in/4,loop_cont_eval_susan_corners_quick_bb26_in/5]
4. non_recursive  : [eval_susan_corners_quick_1165/1]
5. non_recursive  : [eval_susan_corners_quick_1164/1]
6. non_recursive  : [eval_susan_corners_quick_1163/1]
7. non_recursive  : [loop_cont_eval_susan_corners_quick_bb25_in/2]
8. non_recursive  : [loop_cont_eval_susan_corners_quick_bb1_in/5]
9. non_recursive  : [eval_susan_corners_quick_4/3]
10. non_recursive  : [eval_susan_corners_quick_3/4]
11. non_recursive  : [eval_susan_corners_quick_bb0_in/3]
12. non_recursive  : [eval_susan_corners_quick_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_susan_corners_quick_bb2_in/8
1. SCC is partially evaluated into eval_susan_corners_quick_bb1_in/7
2. SCC is partially evaluated into eval_susan_corners_quick_bb26_in/8
3. SCC is partially evaluated into eval_susan_corners_quick_bb25_in/4
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_susan_corners_quick_bb25_in/2
8. SCC is partially evaluated into loop_cont_eval_susan_corners_quick_bb1_in/5
9. SCC is partially evaluated into eval_susan_corners_quick_4/3
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_susan_corners_quick_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_susan_corners_quick_bb2_in/8 
* CE 8 is refined into CE [17] 
* CE 7 is refined into CE [18] 


#### Refined cost equations eval_susan_corners_quick_bb2_in/8 
* CE 17: eval_susan_corners_quick_bb2_in(A,B,C,D,E,A,B,F) = 0
     [B>=C+8,D+7>=A,D>=7,C+1=F,E=4] 
* CE 18: eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) = 1+ eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,F,G,C,D,E)
     [V_x_size>=V_j_0+8,V_y_size>=V_i_0+8,V_j_0>=7,V_j_0+1=F,G=4,B=4] 

### Cost equations --> "Loop" of eval_susan_corners_quick_bb2_in/8 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_susan_corners_quick_bb2_in/8 
* Loop 16: eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E)->  eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0',B',C,D,E)
                  [V_x_size>=V_j_0+8,V_y_size>=V_i_0+8,V_j_0>=7,V_j_0+1=V_j_0',B'=4,B=4] 
* Loop 17: eval_susan_corners_quick_bb2_in(A,B,C,D,E,A,B,F) [B>=C+8,D+7>=A,D>=7,C+1=F,E=4] 

### Ranking functions of CR eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) 
* RF of phase [16]: [V_x_size-V_j_0-7]

#### Partial ranking functions of CR eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_x_size-V_j_0-7


### Resulting Chains:eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) 
* [[16],17]
* [17]


### Merging Chains  eval_susan_corners_quick_bb2_in/8 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[16]]] --> 2 


### Specialization of cost equations eval_susan_corners_quick_bb1_in/7 
* CE 5 is refined into CE [19] 
* CE 4 is refined into CE [20,21] 


#### Refined cost equations eval_susan_corners_quick_bb1_in/7 
* CE 19: eval_susan_corners_quick_bb1_in(A,B,C,D,A,B,E) = 0
     [C+7>=B,E=7,D=3] 
* CE 20: eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) = 2+ eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,F,G,H,V_x_size,V_y_size,I):1+ eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,I,B,C,D,E)
     [V_y_size>=I+7,14>=V_x_size,I=F+1,I=V_i_0+1,H=4,G=7] 
* CE 21: eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) = 2+ eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,F,G,H,V_x_size,V_y_size,I):2+ eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,I,B,C,D,E)
     [V_y_size>=I+7,V_x_size>=15,I=F+1,I=V_i_0+1,H=4,G=7] 

### Cost equations --> "Loop" of eval_susan_corners_quick_bb1_in/7 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [19] --> Loop 20 

#### Loops of eval_susan_corners_quick_bb1_in/7 
* Loop 18: eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E)->  eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0',B,C,D,E)
                  [V_y_size>=V_i_0+8,V_x_size>=15,V_i_0+1=V_i_0'] 
* Loop 19: eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E)->  eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0',B,C,D,E)
                  [V_y_size>=V_i_0+8,14>=V_x_size,V_i_0+1=V_i_0'] 
* Loop 20: eval_susan_corners_quick_bb1_in(A,B,C,D,A,B,E) [C+7>=B,E=7,D=3] 

### Ranking functions of CR eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) 
* RF of phase [18]: [V_y_size-V_i_0-7]
* RF of phase [19]: [V_y_size-V_i_0-7]

#### Partial ranking functions of CR eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_y_size-V_i_0-7
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V_y_size-V_i_0-7


### Resulting Chains:eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) 
* [[19],20]
* [[18],20]
* [20]


### Merging Chains  eval_susan_corners_quick_bb1_in/7 into  External patterns of execution 
* [[20]] --> 1 
* [[20,[19]]] --> 2 
* [[20,[18]]] --> 3 


### Specialization of cost equations eval_susan_corners_quick_bb26_in/8 
* CE 16 is refined into CE [22] 
* CE 15 is refined into CE [23] 
* CE 14 is refined into CE [24] 


#### Refined cost equations eval_susan_corners_quick_bb26_in/8 
* CE 22: eval_susan_corners_quick_bb26_in(A,B,C,D,E,A,B,F) = 0
     [B>=C+8,D+7>=A,D>=7,C+1=F,E=3] 
* CE 23: eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) = 0
     [V_x_size>=V_j_1+8,V_y_size>=V_i_1+8,V_j_1>=7,B=2] 
* CE 24: eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) = 1+ eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,F,B,C,D,E)
     [V_x_size>=V_j_1+8,V_y_size>=V_i_1+8,B>=2,V_j_1>=7,3>=B,V_j_1+1=F] 

### Cost equations --> "Loop" of eval_susan_corners_quick_bb26_in/8 
* CEs [24] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [23] --> Loop 23 

#### Loops of eval_susan_corners_quick_bb26_in/8 
* Loop 21: eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E)->  eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1',B,C,D,E)
                  [V_x_size>=V_j_1+8,V_y_size>=V_i_1+8,B>=2,V_j_1>=7,3>=B,V_j_1+1=V_j_1'] 
* Loop 22: eval_susan_corners_quick_bb26_in(A,B,C,D,E,A,B,F) [B>=C+8,D+7>=A,D>=7,C+1=F,E=3] 
* Loop 23: eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) [V_x_size>=V_j_1+8,V_y_size>=V_i_1+8,V_j_1>=7,B=2] 

### Ranking functions of CR eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) 
* RF of phase [21]: [V_x_size-V_j_1-7]

#### Partial ranking functions of CR eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_x_size-V_j_1-7


### Resulting Chains:eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) 
* [[21],23]
* [[21],22]
* [23]
* [22]


### Merging Chains  eval_susan_corners_quick_bb26_in/8 into  External patterns of execution 
* [[23],[23,[21]]] --> 1 
* [[22]] --> 2 
* [[22,[21]]] --> 3 


### Specialization of cost equations eval_susan_corners_quick_bb25_in/4 
* CE 11 is refined into CE [25] 
* CE 10 is refined into CE [26] 
* CE 9 is refined into CE [27,28] 


#### Refined cost equations eval_susan_corners_quick_bb25_in/4 
* CE 25: eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) = 0
     [V_i_1+7>=V_y_size,B=5] 
* CE 26: eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) = 1+ eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,C,D,E,F,G):1
     [V_y_size>=V_i_1+8,V_x_size>=15,D=2,C=7,B=2] 
* CE 27: eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) = 2+ eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,C,D,E,V_x_size,V_y_size,F):2+ eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,F,B)
     [V_y_size>=F+7,14>=V_x_size,F=C+1,F=V_i_1+1,E=3,D=7] 
* CE 28: eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) = 2+ eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,C,D,E,V_x_size,V_y_size,F):3+ eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,F,B)
     [V_y_size>=F+7,V_x_size>=15,F=C+1,F=V_i_1+1,E=3,D=7] 

### Cost equations --> "Loop" of eval_susan_corners_quick_bb25_in/4 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [25] --> Loop 26 
* CEs [26] --> Loop 27 

#### Loops of eval_susan_corners_quick_bb25_in/4 
* Loop 24: eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B)->  eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1',B)
                  [V_y_size>=V_i_1+8,V_x_size>=15,V_i_1+1=V_i_1'] 
* Loop 25: eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B)->  eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1',B)
                  [V_y_size>=V_i_1+8,14>=V_x_size,V_i_1+1=V_i_1'] 
* Loop 26: eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) [V_i_1+7>=V_y_size,B=5] 
* Loop 27: eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) [V_y_size>=V_i_1+8,V_x_size>=15,B=2] 

### Ranking functions of CR eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) 
* RF of phase [24]: [V_y_size-V_i_1-7]
* RF of phase [25]: [V_y_size-V_i_1-7]

#### Partial ranking functions of CR eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V_y_size-V_i_1-7
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V_y_size-V_i_1-7


### Resulting Chains:eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) 
* [[25],26]
* [[24],27]
* [[24],26]
* [27]
* [26]


### Merging Chains  eval_susan_corners_quick_bb25_in/4 into  External patterns of execution 
* [[27],[27,[24]]] --> 1 
* [[26,[25]]] --> 2 
* [[26,[24]]] --> 3 
* [[26]] --> 4 


### Specialization of cost equations loop_cont_eval_susan_corners_quick_bb25_in/2 
* CE 12 is refined into CE [29] 
* CE 13 is refined into CE [30] 


#### Refined cost equations loop_cont_eval_susan_corners_quick_bb25_in/2 
* CE 29: loop_cont_eval_susan_corners_quick_bb25_in(D,A) = 0
     [D=5] 
* CE 30: loop_cont_eval_susan_corners_quick_bb25_in(D,A) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_susan_corners_quick_bb25_in/2 
* CEs [29] --> Loop 28 
* CEs [30] --> Loop 29 

#### Loops of loop_cont_eval_susan_corners_quick_bb25_in/2 
* Loop 28: loop_cont_eval_susan_corners_quick_bb25_in(D,A) [D=5] 
* Loop 29: loop_cont_eval_susan_corners_quick_bb25_in(D,A) [D=2] 

### Ranking functions of CR loop_cont_eval_susan_corners_quick_bb25_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_susan_corners_quick_bb25_in(D,A) 


### Resulting Chains:loop_cont_eval_susan_corners_quick_bb25_in(D,A) 
* [29]
* [28]


### Merging Chains  loop_cont_eval_susan_corners_quick_bb25_in/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations loop_cont_eval_susan_corners_quick_bb1_in/5 
* CE 6 is refined into CE [31,32,33,34] 


#### Refined cost equations loop_cont_eval_susan_corners_quick_bb1_in/5 
* CE 31: loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) = 1+ eval_susan_corners_quick_bb25_in(A,B,C,I):1+ loop_cont_eval_susan_corners_quick_bb25_in(J,D):1
     [B>=C+8,A>=15,J=2,I=2,H=3] 
* CE 32: loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) = 1+ eval_susan_corners_quick_bb25_in(A,B,C,I):2+ loop_cont_eval_susan_corners_quick_bb25_in(J,D):2
     [B>=C+8,14>=A,J=5,I=5,H=3] 
* CE 33: loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) = 1+ eval_susan_corners_quick_bb25_in(A,B,C,I):3+ loop_cont_eval_susan_corners_quick_bb25_in(J,D):2
     [B>=C+8,A>=15,J=5,I=5,H=3] 
* CE 34: loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) = 1+ eval_susan_corners_quick_bb25_in(A,B,C,I):4+ loop_cont_eval_susan_corners_quick_bb25_in(J,D):2
     [C+7>=B,J=5,I=5,H=3] 

### Cost equations --> "Loop" of loop_cont_eval_susan_corners_quick_bb1_in/5 
* CEs [34] --> Loop 30 
* CEs [31,33] --> Loop 31 
* CEs [32] --> Loop 32 

#### Loops of loop_cont_eval_susan_corners_quick_bb1_in/5 
* Loop 30: loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) [C+7>=B,H=3] 
* Loop 31: loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) [B>=C+8,A>=15,H=3] 
* Loop 32: loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) [B>=C+8,14>=A,H=3] 

### Ranking functions of CR loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) 


### Resulting Chains:loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D) 
* [32]
* [31]
* [30]


### Merging Chains  loop_cont_eval_susan_corners_quick_bb1_in/5 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 
* [[30]] --> 3 


### Specialization of cost equations eval_susan_corners_quick_4/3 
* CE 3 is refined into CE [35,36,37] 


#### Refined cost equations eval_susan_corners_quick_4/3 
* CE 35: eval_susan_corners_quick_4(V_x_size,V_y_size,B) = 1+ eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,C,D,V_x_size,V_y_size,E):1+ loop_cont_eval_susan_corners_quick_bb1_in(F,V_x_size,V_y_size,G,B):3
     [14>=V_y_size,G=7,F=3,E=7,D=3,C=7] 
* CE 36: eval_susan_corners_quick_4(V_x_size,V_y_size,B) = 1+ eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,C,D,V_x_size,V_y_size,E):2+ loop_cont_eval_susan_corners_quick_bb1_in(F,V_x_size,V_y_size,G,B):1
     [V_y_size>=15,14>=V_x_size,G=7,F=3,E=7,D=3,C=7] 
* CE 37: eval_susan_corners_quick_4(V_x_size,V_y_size,B) = 1+ eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,C,D,V_x_size,V_y_size,E):3+ loop_cont_eval_susan_corners_quick_bb1_in(F,V_x_size,V_y_size,G,B):2
     [V_y_size>=15,V_x_size>=15,G=7,F=3,E=7,D=3,C=7] 

### Cost equations --> "Loop" of eval_susan_corners_quick_4/3 
* CEs [37] --> Loop 33 
* CEs [35] --> Loop 34 
* CEs [36] --> Loop 35 

#### Loops of eval_susan_corners_quick_4/3 
* Loop 33: eval_susan_corners_quick_4(V_x_size,V_y_size,B) [V_y_size>=15,V_x_size>=15] 
* Loop 34: eval_susan_corners_quick_4(V_x_size,V_y_size,B) [14>=V_y_size] 
* Loop 35: eval_susan_corners_quick_4(V_x_size,V_y_size,B) [V_y_size>=15,14>=V_x_size] 

### Ranking functions of CR eval_susan_corners_quick_4(V_x_size,V_y_size,B) 

#### Partial ranking functions of CR eval_susan_corners_quick_4(V_x_size,V_y_size,B) 


### Resulting Chains:eval_susan_corners_quick_4(V_x_size,V_y_size,B) 
* [35]
* [34]
* [33]


### Merging Chains  eval_susan_corners_quick_4/3 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 
* [[33]] --> 3 


### Specialization of cost equations eval_susan_corners_quick_start/4 
* CE 2 is refined into CE [38,39,40] 


#### Refined cost equations eval_susan_corners_quick_start/4 
* CE 38: eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B) = 0+ eval_susan_corners_quick_4(V_x_size,V_y_size,B):1
     [V_y_size>=15,14>=V_x_size] 
* CE 39: eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B) = 0+ eval_susan_corners_quick_4(V_x_size,V_y_size,B):2
     [14>=V_y_size] 
* CE 40: eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B) = 0+ eval_susan_corners_quick_4(V_x_size,V_y_size,B):3
     [V_y_size>=15,V_x_size>=15] 

### Cost equations --> "Loop" of eval_susan_corners_quick_start/4 
* CEs [40] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [38] --> Loop 38 

#### Loops of eval_susan_corners_quick_start/4 
* Loop 36: eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B) [V_y_size>=15,V_x_size>=15] 
* Loop 37: eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B) [14>=V_y_size] 
* Loop 38: eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B) [V_y_size>=15,14>=V_x_size] 

### Ranking functions of CR eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B) 

#### Partial ranking functions of CR eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B) 


### Resulting Chains:eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B) 
* [38]
* [37]
* [36]


### Merging Chains  eval_susan_corners_quick_start/4 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 
* [[36]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) -> [eval_susan_corners_quick_bb2_in(V_x_size',V_y_size',V_i_0',V_j_0',B',C',D',E')] 
1
#### Cost of phase [16]:eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) -> [eval_susan_corners_quick_bb2_in(V_x_size',V_y_size',V_i_0',V_j_0',B',C',D',E')] 
1*it(16)+0
  Such that:it(16) =< V_x_size-V_j_0
it(16) =< V_x_size-V_j_0-V_x_size'+V_j_0'

#### Cost of chains of eval_susan_corners_quick_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_x_size-V_j_0

  with precondition: [B=4,V_x_size=C,V_y_size=D,V_i_0+1=E,V_j_0>=7,V_y_size>=V_i_0+8,V_x_size>=V_j_0+8] 

* Chain [17]: 0
  with precondition: [B=4,V_x_size=C,V_y_size=D,V_i_0+1=E,V_j_0>=7,V_j_0+7>=V_x_size,V_y_size>=V_i_0+8] 


#### Cost of loops [19] 

 * loop 19:eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) -> [eval_susan_corners_quick_bb1_in(V_x_size',V_y_size',V_i_0',B',C',D',E')] 
2
#### Cost of phase [19]:eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) -> [eval_susan_corners_quick_bb1_in(V_x_size',V_y_size',V_i_0',B',C',D',E')] 
2*it(19)+0
  Such that:it(19) =< V_y_size-V_i_0
it(19) =< V_y_size-V_i_0-V_y_size'+V_i_0'

#### Cost of loops [18] 

 * loop 18:eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) -> [eval_susan_corners_quick_bb1_in(V_x_size',V_y_size',V_i_0',B',C',D',E')] 
1*s(2)+2
  Such that:s(2) =< V_x_size'

#### Cost of phase [18]:eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) -> [eval_susan_corners_quick_bb1_in(V_x_size',V_y_size',V_i_0',B',C',D',E')] 
2*it(18)+1*s(3)+0
  Such that:aux(1) =< V_x_size
it(18) =< V_y_size-V_i_0
it(18) =< V_y_size-V_i_0-V_y_size'+V_i_0'
s(3) =< it(18)*aux(1)

#### Cost of chains of eval_susan_corners_quick_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E):
* Chain [[19],20]: 2*it(19)+0
  Such that:it(19) =< -V_i_0+D

  with precondition: [B=3,E=7,V_x_size=C,V_y_size=D,14>=V_x_size,V_i_0>=7,V_y_size>=V_i_0+8] 

* Chain [[18],20]: 2*it(18)+1*s(3)+0
  Such that:it(18) =< -V_i_0+D
aux(1) =< C
s(3) =< it(18)*aux(1)

  with precondition: [B=3,E=7,V_x_size=C,V_y_size=D,V_x_size>=15,V_i_0>=7,V_y_size>=V_i_0+8] 

* Chain [20]: 0
  with precondition: [B=3,E=7,C=V_x_size,V_y_size=D,V_i_0>=7,V_i_0+7>=V_y_size] 


#### Cost of loops [21] 

 * loop 21:eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) -> [eval_susan_corners_quick_bb26_in(V_x_size',V_y_size',V_i_1',V_j_1',B',C',D',E')] 
1
#### Cost of phase [21]:eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) -> [eval_susan_corners_quick_bb26_in(V_x_size',V_y_size',V_i_1',V_j_1',B',C',D',E')] 
1*it(21)+0
  Such that:it(21) =< V_x_size-V_j_1
it(21) =< V_x_size-V_j_1-V_x_size'+V_j_1'

#### Cost of phase [21]:eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) -> [eval_susan_corners_quick_bb26_in(V_x_size',V_y_size',V_i_1',V_j_1',B',C',D',E')] 
1*it(21)+0
  Such that:it(21) =< V_x_size-V_j_1
it(21) =< V_x_size-V_j_1-V_x_size'+V_j_1'

#### Cost of chains of eval_susan_corners_quick_bb26_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E):
* Chain [[21],23]: 1*it(21)+0
  Such that:it(21) =< V_x_size-V_j_1

  with precondition: [B=2,V_j_1>=7,V_y_size>=V_i_1+8,V_x_size>=V_j_1+9] 

* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V_x_size-V_j_1

  with precondition: [B=3,V_x_size=C,V_y_size=D,V_i_1+1=E,V_j_1>=7,V_y_size>=V_i_1+8,V_x_size>=V_j_1+8] 

* Chain [23]: 0
  with precondition: [B=2,V_j_1>=7,V_y_size>=V_i_1+8,V_x_size>=V_j_1+8] 

* Chain [22]: 0
  with precondition: [B=3,V_x_size=C,V_y_size=D,V_i_1+1=E,V_j_1>=7,V_j_1+7>=V_x_size,V_y_size>=V_i_1+8] 


#### Cost of loops [25] 

 * loop 25:eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_quick_bb25_in(V_x_size',V_y_size',V_i_1',B')] 
2
#### Cost of phase [25]:eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_quick_bb25_in(V_x_size',V_y_size',V_i_1',B')] 
2*it(25)+0
  Such that:it(25) =< V_y_size-V_i_1
it(25) =< V_y_size-V_i_1-V_y_size'+V_i_1'

#### Cost of loops [24] 

 * loop 24:eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_quick_bb25_in(V_x_size',V_y_size',V_i_1',B')] 
1*s(7)+2
  Such that:s(7) =< V_x_size

#### Cost of phase [24]:eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_quick_bb25_in(V_x_size',V_y_size',V_i_1',B')] 
2*it(24)+1*s(8)+0
  Such that:aux(2) =< V_x_size
it(24) =< V_y_size-V_i_1
it(24) =< V_y_size-V_i_1-V_y_size'+V_i_1'
s(8) =< it(24)*aux(2)

#### Cost of phase [24]:eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_quick_bb25_in(V_x_size',V_y_size',V_i_1',B')] 
2*it(24)+1*s(8)+0
  Such that:aux(2) =< V_x_size
it(24) =< V_y_size-V_i_1
it(24) =< V_y_size-V_i_1-V_y_size'+V_i_1'
s(8) =< it(24)*aux(2)

#### Cost of chains of eval_susan_corners_quick_bb25_in(V_x_size,V_y_size,V_i_1,B):
* Chain [[25],26]: 2*it(25)+0
  Such that:it(25) =< V_y_size-V_i_1

  with precondition: [B=5,14>=V_x_size,V_y_size>=V_i_1+8] 

* Chain [[24],27]: 2*it(24)+1*s(5)+1*s(8)+1
  Such that:it(24) =< V_y_size-V_i_1
aux(3) =< V_x_size
s(5) =< aux(3)
s(8) =< it(24)*aux(3)

  with precondition: [B=2,V_x_size>=15,V_y_size>=V_i_1+9] 

* Chain [[24],26]: 2*it(24)+1*s(8)+0
  Such that:aux(2) =< V_x_size
it(24) =< V_y_size-V_i_1
s(8) =< it(24)*aux(2)

  with precondition: [B=5,V_x_size>=15,V_y_size>=V_i_1+8] 

* Chain [27]: 1*s(5)+1
  Such that:s(5) =< V_x_size

  with precondition: [B=2,V_x_size>=15,V_y_size>=V_i_1+8] 

* Chain [26]: 0
  with precondition: [B=5,V_i_1+7>=V_y_size] 


#### Cost of chains of loop_cont_eval_susan_corners_quick_bb25_in(D,A):
* Chain [29]: 0
  with precondition: [D=2] 

* Chain [28]: 0
  with precondition: [D=5] 


#### Cost of chains of loop_cont_eval_susan_corners_quick_bb1_in(H,A,B,C,D):
* Chain [32]: 2*s(14)+1
  Such that:s(14) =< B-C

  with precondition: [H=3,14>=A,B>=C+8] 

* Chain [31]: 4*s(15)+2*s(17)+2*s(18)+2
  Such that:aux(5) =< A
aux(6) =< B-C
s(15) =< aux(6)
s(17) =< aux(5)
s(18) =< s(15)*aux(5)

  with precondition: [H=3,A>=15,B>=C+8] 

* Chain [30]: 1
  with precondition: [H=3,C+7>=B] 


#### Cost of chains of eval_susan_corners_quick_4(V_x_size,V_y_size,B):
* Chain [35]: 4*s(22)+2
  Such that:aux(7) =< V_y_size
s(22) =< aux(7)

  with precondition: [14>=V_x_size,V_y_size>=15] 

* Chain [34]: 2
  with precondition: [14>=V_y_size] 

* Chain [33]: 6*s(24)+3*s(26)+2*s(30)+3
  Such that:aux(8) =< V_x_size
aux(9) =< V_y_size
s(24) =< aux(9)
s(30) =< aux(8)
s(26) =< s(24)*aux(8)

  with precondition: [V_x_size>=15,V_y_size>=15] 


#### Cost of chains of eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B):
* Chain [38]: 4*s(33)+2
  Such that:s(32) =< V_y_size
s(33) =< s(32)

  with precondition: [14>=V_x_size,V_y_size>=15] 

* Chain [37]: 2
  with precondition: [14>=V_y_size] 

* Chain [36]: 6*s(36)+2*s(37)+3*s(38)+3
  Such that:s(34) =< V_x_size
s(35) =< V_y_size
s(36) =< s(35)
s(37) =< s(34)
s(38) =< s(36)*s(34)

  with precondition: [V_x_size>=15,V_y_size>=15] 


Closed-form bounds of eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B): 
-------------------------------------
* Chain [38] with precondition: [14>=V_x_size,V_y_size>=15] 
    - Upper bound: 4*V_y_size+2 
    - Complexity: n 
* Chain [37] with precondition: [14>=V_y_size] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [36] with precondition: [V_x_size>=15,V_y_size>=15] 
    - Upper bound: 2*V_x_size+3+3*V_x_size*V_y_size+6*V_y_size 
    - Complexity: n^2 

### Maximum cost of eval_susan_corners_quick_start(V_max_no,V_x_size,V_y_size,B): nat(V_x_size)*2+1+nat(V_x_size)*3*nat(V_y_size)+nat(V_y_size)*2+nat(V_y_size)*4+2 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 59 ms.
   - Backward Invariants 30 ms.
   - Transitive Invariants 13 ms.
* Refinement performed in 87 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 95 ms.
   - Equation cost structures 32 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 30 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 1346 ms.

