Warning: Ignored call to eval_LZWReadByte_stop/1 in equation eval_LZWReadByte_bb27_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_LZWReadByte_15/1,eval_LZWReadByte_16/2,eval_LZWReadByte_bb7_in/1]
1. non_recursive  : [eval_LZWReadByte_bb27_in/1]
2. non_recursive  : [eval_LZWReadByte_bb10_in/1]
3. non_recursive  : [eval_LZWReadByte_22/1]
4. non_recursive  : [eval_LZWReadByte_21/1]
5. non_recursive  : [loop_cont_eval_LZWReadByte_bb7_in/2]
6. non_recursive  : [eval_LZWReadByte_14/1]
7. non_recursive  : [eval_LZWReadByte_13/1]
8. non_recursive  : [eval_LZWReadByte_35/1]
9. non_recursive  : [eval_LZWReadByte_34/1]
10. non_recursive  : [eval_LZWReadByte_bb14_in/1]
11. non_recursive  : [eval_LZWReadByte_31/1]
12. non_recursive  : [eval_LZWReadByte_30/1]
13. recursive  : [eval_LZWReadByte_bb20_in/2]
14. non_recursive  : [eval_LZWReadByte_bb26_in/1]
15. non_recursive  : [loop_cont_eval_LZWReadByte_bb20_in/2]
16. non_recursive  : [eval_LZWReadByte_bb19_in/2]
17. non_recursive  : [eval_LZWReadByte_bb18_in/1]
18. non_recursive  : [eval_LZWReadByte_42/1]
19. non_recursive  : [eval_LZWReadByte_41/1]
20. non_recursive  : [eval_LZWReadByte_bb5_in/2]
21. non_recursive  : [eval_LZWReadByte_10/1]
22. non_recursive  : [eval_LZWReadByte_9/1]
23. non_recursive  : [eval_LZWReadByte_bb0_in/1]
24. non_recursive  : [eval_LZWReadByte_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_LZWReadByte_bb7_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_LZWReadByte_bb7_in/2
6. SCC is partially evaluated into eval_LZWReadByte_14/1
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_LZWReadByte_bb20_in/2
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_LZWReadByte_bb19_in/2
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_LZWReadByte_bb5_in/2
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_LZWReadByte_bb0_in/1
24. SCC is partially evaluated into eval_LZWReadByte_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_LZWReadByte_bb7_in/1 
* CE 12 is refined into CE [17] 
* CE 10 is refined into CE [18] 
* CE 11 is refined into CE [19] 


#### Refined cost equations eval_LZWReadByte_bb7_in/1 
* CE 17: eval_LZWReadByte_bb7_in(B) = 1+ eval_LZWReadByte_bb7_in(B)
     [] 
* CE 18: eval_LZWReadByte_bb7_in(B) = 0
     [B=3] 
* CE 19: eval_LZWReadByte_bb7_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_LZWReadByte_bb7_in/1 
* CEs [18] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of eval_LZWReadByte_bb7_in/1 
* Loop 13: eval_LZWReadByte_bb7_in(B) [B=3] 
* Loop 14: eval_LZWReadByte_bb7_in(B) [B=2] 
* Loop 15: eval_LZWReadByte_bb7_in(B)->  eval_LZWReadByte_bb7_in(B)
                  [] 

### Ranking functions of CR eval_LZWReadByte_bb7_in(B) 

#### Partial ranking functions of CR eval_LZWReadByte_bb7_in(B) 


### Resulting Chains:eval_LZWReadByte_bb7_in(B) 
* [[15]]...
* [[15],14]
* [[15],13]
* [14]
* [13]


### Merging Chains  eval_LZWReadByte_bb7_in/1 into  External patterns of execution 
* [[14],[14,[15]]] --> 1 
* [[13],[13,[15]]] --> 2 
* [[[15]]] --> 3 


### Specialization of cost equations loop_cont_eval_LZWReadByte_bb7_in/2 
* CE 14 is refined into CE [20] 
* CE 13 is refined into CE [21] 


#### Refined cost equations loop_cont_eval_LZWReadByte_bb7_in/2 
* CE 20: loop_cont_eval_LZWReadByte_bb7_in(B,A) = 0
     [B=3] 
* CE 21: loop_cont_eval_LZWReadByte_bb7_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_LZWReadByte_bb7_in/2 
* CEs [20] --> Loop 16 
* CEs [21] --> Loop 17 

#### Loops of loop_cont_eval_LZWReadByte_bb7_in/2 
* Loop 16: loop_cont_eval_LZWReadByte_bb7_in(B,A) [B=3] 
* Loop 17: loop_cont_eval_LZWReadByte_bb7_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_LZWReadByte_bb7_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_LZWReadByte_bb7_in(B,A) 


### Resulting Chains:loop_cont_eval_LZWReadByte_bb7_in(B,A) 
* [17]
* [16]


### Merging Chains  loop_cont_eval_LZWReadByte_bb7_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_LZWReadByte_14/1 
* CE 8 is refined into CE [22,23,24] 


#### Refined cost equations eval_LZWReadByte_14/1 
* CE 22: eval_LZWReadByte_14(B) = 1+ eval_LZWReadByte_bb7_in(C):1+ loop_cont_eval_LZWReadByte_bb7_in(D,B):1
     [D=2,C=2] 
* CE 23: eval_LZWReadByte_14(B) = 1+ eval_LZWReadByte_bb7_in(C):2+ loop_cont_eval_LZWReadByte_bb7_in(D,B):2
     [D=3,C=3] 
* CE 24: eval_LZWReadByte_14(B) = 1+ eval_LZWReadByte_bb7_in(C):3
     [] 

### Cost equations --> "Loop" of eval_LZWReadByte_14/1 
* CEs [24] --> Loop 18 
* CEs [22,23] --> Loop 19 

#### Loops of eval_LZWReadByte_14/1 
* Loop 18: eval_LZWReadByte_14(B) [] 
* Loop 19: eval_LZWReadByte_14(B) [] 

### Ranking functions of CR eval_LZWReadByte_14(B) 

#### Partial ranking functions of CR eval_LZWReadByte_14(B) 


### Resulting Chains:eval_LZWReadByte_14(B) 
* [19]
* [18]...


### Merging Chains  eval_LZWReadByte_14/1 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_LZWReadByte_bb20_in/2 
* CE 16 is refined into CE [25] 
* CE 15 is refined into CE [26] 


#### Refined cost equations eval_LZWReadByte_bb20_in/2 
* CE 25: eval_LZWReadByte_bb20_in(V_code_3,B) = 0
     [B=4] 
* CE 26: eval_LZWReadByte_bb20_in(V_code_3,B) = 1+ eval_LZWReadByte_bb20_in(C,D)
     [D=4,B=4] 

### Cost equations --> "Loop" of eval_LZWReadByte_bb20_in/2 
* CEs [26] --> Loop 20 
* CEs [25] --> Loop 21 

#### Loops of eval_LZWReadByte_bb20_in/2 
* Loop 20: eval_LZWReadByte_bb20_in(V_code_3,B)->  eval_LZWReadByte_bb20_in(V_code_3',B')
                  [B'=4,B=4] 
* Loop 21: eval_LZWReadByte_bb20_in(V_code_3,B) [B=4] 

### Ranking functions of CR eval_LZWReadByte_bb20_in(V_code_3,B) 

#### Partial ranking functions of CR eval_LZWReadByte_bb20_in(V_code_3,B) 


### Resulting Chains:eval_LZWReadByte_bb20_in(V_code_3,B) 
* [[20]]...
* [[20],21]
* [21]


### Merging Chains  eval_LZWReadByte_bb20_in/2 into  External patterns of execution 
* [[21],[21,[20]]] --> 1 
* [[[20]]] --> 2 


### Specialization of cost equations eval_LZWReadByte_bb19_in/2 
* CE 9 is refined into CE [27,28] 


#### Refined cost equations eval_LZWReadByte_bb19_in/2 
* CE 27: eval_LZWReadByte_bb19_in(V_code_2,B) = 1+ eval_LZWReadByte_bb20_in(V_code_2,C):1
     [C=4] 
* CE 28: eval_LZWReadByte_bb19_in(V_code_2,B) = 1+ eval_LZWReadByte_bb20_in(V_code_2,C):2
     [C=4] 

### Cost equations --> "Loop" of eval_LZWReadByte_bb19_in/2 
* CEs [28] --> Loop 22 
* CEs [27] --> Loop 23 

#### Loops of eval_LZWReadByte_bb19_in/2 
* Loop 22: eval_LZWReadByte_bb19_in(V_code_2,B) [] 
* Loop 23: eval_LZWReadByte_bb19_in(V_code_2,B) [] 

### Ranking functions of CR eval_LZWReadByte_bb19_in(V_code_2,B) 

#### Partial ranking functions of CR eval_LZWReadByte_bb19_in(V_code_2,B) 


### Resulting Chains:eval_LZWReadByte_bb19_in(V_code_2,B) 
* [23]
* [22]...


### Merging Chains  eval_LZWReadByte_bb19_in/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_LZWReadByte_bb5_in/2 
* CE 5 is refined into CE [29,30] 
* CE 6 is refined into CE [31] 
* CE 7 is refined into CE [32,33] 


#### Refined cost equations eval_LZWReadByte_bb5_in/2 
* CE 29: eval_LZWReadByte_bb5_in(V_code_0,B) = 0+ eval_LZWReadByte_14(B):1
     [] 
* CE 30: eval_LZWReadByte_bb5_in(V_code_0,B) = 0+ eval_LZWReadByte_14(B):2
     [] 
* CE 31: eval_LZWReadByte_bb5_in(V_code_0,B) = 0
     [] 
* CE 32: eval_LZWReadByte_bb5_in(V_code_0,B) = 0+ eval_LZWReadByte_bb19_in(C,B):1
     [] 
* CE 33: eval_LZWReadByte_bb5_in(V_code_0,B) = 0+ eval_LZWReadByte_bb19_in(C,B):2
     [] 

### Cost equations --> "Loop" of eval_LZWReadByte_bb5_in/2 
* CEs [30,33] --> Loop 24 
* CEs [29,31,32] --> Loop 25 

#### Loops of eval_LZWReadByte_bb5_in/2 
* Loop 24: eval_LZWReadByte_bb5_in(V_code_0,B) [] 
* Loop 25: eval_LZWReadByte_bb5_in(V_code_0,B) [] 

### Ranking functions of CR eval_LZWReadByte_bb5_in(V_code_0,B) 

#### Partial ranking functions of CR eval_LZWReadByte_bb5_in(V_code_0,B) 


### Resulting Chains:eval_LZWReadByte_bb5_in(V_code_0,B) 
* [25]
* [24]...


### Merging Chains  eval_LZWReadByte_bb5_in/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_LZWReadByte_bb0_in/1 
* CE 3 is refined into CE [34,35] 
* CE 4 is refined into CE [36] 


#### Refined cost equations eval_LZWReadByte_bb0_in/1 
* CE 34: eval_LZWReadByte_bb0_in(B) = 0+ eval_LZWReadByte_bb5_in(C,B):1
     [] 
* CE 35: eval_LZWReadByte_bb0_in(B) = 0+ eval_LZWReadByte_bb5_in(C,B):2
     [] 
* CE 36: eval_LZWReadByte_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_LZWReadByte_bb0_in/1 
* CEs [34,36] --> Loop 26 
* CEs [35] --> Loop 27 

#### Loops of eval_LZWReadByte_bb0_in/1 
* Loop 26: eval_LZWReadByte_bb0_in(B) [] 
* Loop 27: eval_LZWReadByte_bb0_in(B) [] 

### Ranking functions of CR eval_LZWReadByte_bb0_in(B) 

#### Partial ranking functions of CR eval_LZWReadByte_bb0_in(B) 


### Resulting Chains:eval_LZWReadByte_bb0_in(B) 
* [27]...
* [26]


### Merging Chains  eval_LZWReadByte_bb0_in/1 into  External patterns of execution 
* [[26]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_LZWReadByte_start/1 
* CE 2 is refined into CE [37,38] 


#### Refined cost equations eval_LZWReadByte_start/1 
* CE 37: eval_LZWReadByte_start(B) = 0+ eval_LZWReadByte_bb0_in(B):1
     [] 
* CE 38: eval_LZWReadByte_start(B) = 0+ eval_LZWReadByte_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_LZWReadByte_start/1 
* CEs [38] --> Loop 28 
* CEs [37] --> Loop 29 

#### Loops of eval_LZWReadByte_start/1 
* Loop 28: eval_LZWReadByte_start(B) [] 
* Loop 29: eval_LZWReadByte_start(B) [] 

### Ranking functions of CR eval_LZWReadByte_start(B) 

#### Partial ranking functions of CR eval_LZWReadByte_start(B) 


### Resulting Chains:eval_LZWReadByte_start(B) 
* [29]
* [28]...


### Merging Chains  eval_LZWReadByte_start/1 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_LZWReadByte_bb7_in(B) -> [eval_LZWReadByte_bb7_in(B')] 
1
#### Cost of phase [15]:eval_LZWReadByte_bb7_in(B) -> [eval_LZWReadByte_bb7_in(B')] 
1*it(15)+0
#### Cost of phase [15]:eval_LZWReadByte_bb7_in(B) -> [eval_LZWReadByte_bb7_in(B')] 
1*it(15)+0
#### Cost of phase [15]:eval_LZWReadByte_bb7_in(B) -> [eval_LZWReadByte_bb7_in(B')] 
1*it(15)+0
#### Cost of chains of eval_LZWReadByte_bb7_in(B):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [] 

* Chain [[15],14]: 1*it(15)+0
  with precondition: [B=2] 

* Chain [[15],13]: 1*it(15)+0
  with precondition: [B=3] 

* Chain [14]: 0
  with precondition: [B=2] 

* Chain [13]: 0
  with precondition: [B=3] 


#### Cost of chains of loop_cont_eval_LZWReadByte_bb7_in(B,A):
* Chain [17]: 0
  with precondition: [B=2] 

* Chain [16]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_LZWReadByte_14(B):
* Chain [19]: 1*aux(3)+0
  with precondition: [] 

* Chain [18]...: 1*s(5)+1
  with precondition: [] 


#### Cost of loops [20] 

 * loop 20:eval_LZWReadByte_bb20_in(V_code_3,B) -> [eval_LZWReadByte_bb20_in(V_code_3',B')] 
1
#### Cost of phase [20]:eval_LZWReadByte_bb20_in(V_code_3,B) -> [eval_LZWReadByte_bb20_in(V_code_3',B')] 
1*it(20)+0
#### Cost of phase [20]:eval_LZWReadByte_bb20_in(V_code_3,B) -> [eval_LZWReadByte_bb20_in(V_code_3',B')] 
1*it(20)+0
#### Cost of chains of eval_LZWReadByte_bb20_in(V_code_3,B):
* Chain [[20]]...: 1*it(20)+0
  with precondition: [B=4] 

* Chain [[20],21]: 1*it(20)+0
  with precondition: [B=4] 

* Chain [21]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_LZWReadByte_bb19_in(V_code_2,B):
* Chain [23]: 1*s(7)+1
  with precondition: [] 

* Chain [22]...: 1*s(8)+1
  with precondition: [] 


#### Cost of chains of eval_LZWReadByte_bb5_in(V_code_0,B):
* Chain [25]: 1*aux(5)+0
  with precondition: [] 

* Chain [24]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_LZWReadByte_bb0_in(B):
* Chain [27]...: 1*s(13)+0
  with precondition: [] 

* Chain [26]: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_LZWReadByte_start(B):
* Chain [29]: 1*s(15)+0
  with precondition: [] 

* Chain [28]...: 1*s(16)+0
  with precondition: [] 


Closed-form bounds of eval_LZWReadByte_start(B): 
-------------------------------------
* Chain [29] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [28]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_LZWReadByte_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 6 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 11 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 10 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 54 ms.

