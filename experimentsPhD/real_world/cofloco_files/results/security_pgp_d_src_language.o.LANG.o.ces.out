Warning: Ignored call to eval_LANG_stop/1 in equation eval_LANG_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_LANG_17/3,eval_LANG_18/3,eval_LANG_bb6_in/2]
1. non_recursive  : [eval_LANG_bb9_in/1]
2. non_recursive  : [loop_cont_eval_LANG_bb6_in/2]
3. non_recursive  : [eval_LANG_11/2]
4. non_recursive  : [eval_LANG_10/2]
5. non_recursive  : [eval_LANG_9/3]
6. non_recursive  : [eval_LANG_8/3]
7. non_recursive  : [eval_LANG_7/3]
8. non_recursive  : [eval_LANG_6/2]
9. non_recursive  : [eval_LANG_bb2_in/2]
10. non_recursive  : [eval_LANG_3/2]
11. non_recursive  : [eval_LANG_2/2]
12. non_recursive  : [eval_LANG_bb0_in/2]
13. non_recursive  : [eval_LANG_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_LANG_bb6_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_LANG_11/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_LANG_8/3
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_LANG_bb2_in/2
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_LANG_bb0_in/2
13. SCC is partially evaluated into eval_LANG_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_LANG_bb6_in/2 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 


#### Refined cost equations eval_LANG_bb6_in/2 
* CE 12: eval_LANG_bb6_in(V__subtitles_available,B) = 0
     [B=2] 
* CE 13: eval_LANG_bb6_in(V__subtitles_available,B) = 1+ eval_LANG_bb6_in(C,D)
     [D=2,B=2] 

### Cost equations --> "Loop" of eval_LANG_bb6_in/2 
* CEs [13] --> Loop 8 
* CEs [12] --> Loop 9 

#### Loops of eval_LANG_bb6_in/2 
* Loop 8: eval_LANG_bb6_in(V__subtitles_available,B)->  eval_LANG_bb6_in(V__subtitles_available',B')
                  [B'=2,B=2] 
* Loop 9: eval_LANG_bb6_in(V__subtitles_available,B) [B=2] 

### Ranking functions of CR eval_LANG_bb6_in(V__subtitles_available,B) 

#### Partial ranking functions of CR eval_LANG_bb6_in(V__subtitles_available,B) 


### Resulting Chains:eval_LANG_bb6_in(V__subtitles_available,B) 
* [[8]]...
* [[8],9]
* [9]


### Merging Chains  eval_LANG_bb6_in/2 into  External patterns of execution 
* [[9],[9,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval_LANG_11/2 
* CE 8 is refined into CE [14] 
* CE 9 is refined into CE [15,16] 


#### Refined cost equations eval_LANG_11/2 
* CE 14: eval_LANG_11(V__subtitles_available,B) = 0
     [] 
* CE 15: eval_LANG_11(V__subtitles_available,B) = 1+ eval_LANG_bb6_in(V__subtitles_available,C):1
     [C=2] 
* CE 16: eval_LANG_11(V__subtitles_available,B) = 1+ eval_LANG_bb6_in(V__subtitles_available,C):2
     [C=2] 

### Cost equations --> "Loop" of eval_LANG_11/2 
* CEs [16] --> Loop 10 
* CEs [14,15] --> Loop 11 

#### Loops of eval_LANG_11/2 
* Loop 10: eval_LANG_11(V__subtitles_available,B) [] 
* Loop 11: eval_LANG_11(V__subtitles_available,B) [] 

### Ranking functions of CR eval_LANG_11(V__subtitles_available,B) 

#### Partial ranking functions of CR eval_LANG_11(V__subtitles_available,B) 


### Resulting Chains:eval_LANG_11(V__subtitles_available,B) 
* [11]
* [10]...


### Merging Chains  eval_LANG_11/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_LANG_8/3 
* CE 6 is refined into CE [17] 
* CE 7 is refined into CE [18,19] 


#### Refined cost equations eval_LANG_8/3 
* CE 17: eval_LANG_8(V__subtitles_available,V_5,B) = 0
     [] 
* CE 18: eval_LANG_8(V__subtitles_available,V_5,B) = 0+ eval_LANG_11(V__subtitles_available,B):1
     [] 
* CE 19: eval_LANG_8(V__subtitles_available,V_5,B) = 0+ eval_LANG_11(V__subtitles_available,B):2
     [] 

### Cost equations --> "Loop" of eval_LANG_8/3 
* CEs [19] --> Loop 12 
* CEs [17,18] --> Loop 13 

#### Loops of eval_LANG_8/3 
* Loop 12: eval_LANG_8(V__subtitles_available,V_5,B) [] 
* Loop 13: eval_LANG_8(V__subtitles_available,V_5,B) [] 

### Ranking functions of CR eval_LANG_8(V__subtitles_available,V_5,B) 

#### Partial ranking functions of CR eval_LANG_8(V__subtitles_available,V_5,B) 


### Resulting Chains:eval_LANG_8(V__subtitles_available,V_5,B) 
* [13]
* [12]...


### Merging Chains  eval_LANG_8/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_LANG_bb2_in/2 
* CE 4 is refined into CE [20] 
* CE 5 is refined into CE [21,22] 


#### Refined cost equations eval_LANG_bb2_in/2 
* CE 20: eval_LANG_bb2_in(V__subtitles_available,B) = 0
     [] 
* CE 21: eval_LANG_bb2_in(V__subtitles_available,B) = 0+ eval_LANG_8(V__subtitles_available,C,B):1
     [] 
* CE 22: eval_LANG_bb2_in(V__subtitles_available,B) = 0+ eval_LANG_8(V__subtitles_available,C,B):2
     [] 

### Cost equations --> "Loop" of eval_LANG_bb2_in/2 
* CEs [22] --> Loop 14 
* CEs [20,21] --> Loop 15 

#### Loops of eval_LANG_bb2_in/2 
* Loop 14: eval_LANG_bb2_in(V__subtitles_available,B) [] 
* Loop 15: eval_LANG_bb2_in(V__subtitles_available,B) [] 

### Ranking functions of CR eval_LANG_bb2_in(V__subtitles_available,B) 

#### Partial ranking functions of CR eval_LANG_bb2_in(V__subtitles_available,B) 


### Resulting Chains:eval_LANG_bb2_in(V__subtitles_available,B) 
* [15]
* [14]...


### Merging Chains  eval_LANG_bb2_in/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_LANG_bb0_in/2 
* CE 3 is refined into CE [23,24] 


#### Refined cost equations eval_LANG_bb0_in/2 
* CE 23: eval_LANG_bb0_in(V__subtitles_available,B) = 0+ eval_LANG_bb2_in(V__subtitles_available,B):1
     [] 
* CE 24: eval_LANG_bb0_in(V__subtitles_available,B) = 0+ eval_LANG_bb2_in(V__subtitles_available,B):2
     [] 

### Cost equations --> "Loop" of eval_LANG_bb0_in/2 
* CEs [24] --> Loop 16 
* CEs [23] --> Loop 17 

#### Loops of eval_LANG_bb0_in/2 
* Loop 16: eval_LANG_bb0_in(V__subtitles_available,B) [] 
* Loop 17: eval_LANG_bb0_in(V__subtitles_available,B) [] 

### Ranking functions of CR eval_LANG_bb0_in(V__subtitles_available,B) 

#### Partial ranking functions of CR eval_LANG_bb0_in(V__subtitles_available,B) 


### Resulting Chains:eval_LANG_bb0_in(V__subtitles_available,B) 
* [17]
* [16]...


### Merging Chains  eval_LANG_bb0_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_LANG_start/2 
* CE 2 is refined into CE [25,26] 


#### Refined cost equations eval_LANG_start/2 
* CE 25: eval_LANG_start(V__subtitles_available,B) = 0+ eval_LANG_bb0_in(V__subtitles_available,B):1
     [] 
* CE 26: eval_LANG_start(V__subtitles_available,B) = 0+ eval_LANG_bb0_in(V__subtitles_available,B):2
     [] 

### Cost equations --> "Loop" of eval_LANG_start/2 
* CEs [26] --> Loop 18 
* CEs [25] --> Loop 19 

#### Loops of eval_LANG_start/2 
* Loop 18: eval_LANG_start(V__subtitles_available,B) [] 
* Loop 19: eval_LANG_start(V__subtitles_available,B) [] 

### Ranking functions of CR eval_LANG_start(V__subtitles_available,B) 

#### Partial ranking functions of CR eval_LANG_start(V__subtitles_available,B) 


### Resulting Chains:eval_LANG_start(V__subtitles_available,B) 
* [19]
* [18]...


### Merging Chains  eval_LANG_start/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_LANG_bb6_in(V__subtitles_available,B) -> [eval_LANG_bb6_in(V__subtitles_available',B')] 
1
#### Cost of phase [8]:eval_LANG_bb6_in(V__subtitles_available,B) -> [eval_LANG_bb6_in(V__subtitles_available',B')] 
1*it(8)+0
#### Cost of phase [8]:eval_LANG_bb6_in(V__subtitles_available,B) -> [eval_LANG_bb6_in(V__subtitles_available',B')] 
1*it(8)+0
#### Cost of chains of eval_LANG_bb6_in(V__subtitles_available,B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [B=2] 

* Chain [9]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_LANG_11(V__subtitles_available,B):
* Chain [11]: 1*aux(2)+0
  with precondition: [] 

* Chain [10]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_LANG_8(V__subtitles_available,V_5,B):
* Chain [13]: 1*aux(3)+0
  with precondition: [] 

* Chain [12]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_LANG_bb2_in(V__subtitles_available,B):
* Chain [15]: 1*aux(4)+0
  with precondition: [] 

* Chain [14]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_LANG_bb0_in(V__subtitles_available,B):
* Chain [17]: 1*s(8)+0
  with precondition: [] 

* Chain [16]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_LANG_start(V__subtitles_available,B):
* Chain [19]: 1*s(10)+0
  with precondition: [] 

* Chain [18]...: 1*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_LANG_start(V__subtitles_available,B): 
-------------------------------------
* Chain [19] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_LANG_start(V__subtitles_available,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 2 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 8 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 7 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 1 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 36 ms.

