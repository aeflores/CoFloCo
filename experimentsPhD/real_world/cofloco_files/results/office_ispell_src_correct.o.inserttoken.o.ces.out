Warning: Ignored call to eval_inserttoken_stop/1 in equation loop_cont_eval_inserttoken_bb10_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_inserttoken_bb1_in/1]
1. recursive  : [eval_inserttoken_bb4_in/1]
2. recursive  : [eval_inserttoken_bb10_in/1]
3. recursive  : [eval_inserttoken_bb8_in/1]
4. non_recursive  : [loop_cont_eval_inserttoken_bb10_in/2]
5. non_recursive  : [loop_cont_eval_inserttoken_bb8_in/2]
6. non_recursive  : [loop_cont_eval_inserttoken_bb4_in/2]
7. non_recursive  : [eval_inserttoken_9/1]
8. non_recursive  : [eval_inserttoken_8/1]
9. non_recursive  : [loop_cont_eval_inserttoken_bb1_in/2]
10. non_recursive  : [eval_inserttoken_1/1]
11. non_recursive  : [eval_inserttoken_0/1]
12. non_recursive  : [eval_inserttoken_bb0_in/1]
13. non_recursive  : [eval_inserttoken_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_inserttoken_bb1_in/1
1. SCC is partially evaluated into eval_inserttoken_bb4_in/1
2. SCC is partially evaluated into eval_inserttoken_bb10_in/1
3. SCC is partially evaluated into eval_inserttoken_bb8_in/1
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_inserttoken_bb8_in/2
6. SCC is partially evaluated into loop_cont_eval_inserttoken_bb4_in/2
7. SCC is partially evaluated into eval_inserttoken_9/1
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_inserttoken_1/1
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_inserttoken_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_inserttoken_bb1_in/1 
* CE 5 is refined into CE [17] 
* CE 4 is refined into CE [18] 


#### Refined cost equations eval_inserttoken_bb1_in/1 
* CE 17: eval_inserttoken_bb1_in(B) = 0
     [B=4] 
* CE 18: eval_inserttoken_bb1_in(B) = 1+ eval_inserttoken_bb1_in(C)
     [C=4,B=4] 

### Cost equations --> "Loop" of eval_inserttoken_bb1_in/1 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_inserttoken_bb1_in/1 
* Loop 16: eval_inserttoken_bb1_in(B)->  eval_inserttoken_bb1_in(B')
                  [B'=4,B=4] 
* Loop 17: eval_inserttoken_bb1_in(B) [B=4] 

### Ranking functions of CR eval_inserttoken_bb1_in(B) 

#### Partial ranking functions of CR eval_inserttoken_bb1_in(B) 


### Resulting Chains:eval_inserttoken_bb1_in(B) 
* [[16]]...
* [[16],17]
* [17]


### Merging Chains  eval_inserttoken_bb1_in/1 into  External patterns of execution 
* [[17],[17,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations eval_inserttoken_bb4_in/1 
* CE 8 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 7 is refined into CE [21] 


#### Refined cost equations eval_inserttoken_bb4_in/1 
* CE 19: eval_inserttoken_bb4_in(B) = 0
     [B=3] 
* CE 20: eval_inserttoken_bb4_in(B) = 0
     [B=2] 
* CE 21: eval_inserttoken_bb4_in(B) = 1+ eval_inserttoken_bb4_in(B)
     [] 

### Cost equations --> "Loop" of eval_inserttoken_bb4_in/1 
* CEs [21] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [20] --> Loop 20 

#### Loops of eval_inserttoken_bb4_in/1 
* Loop 18: eval_inserttoken_bb4_in(B)->  eval_inserttoken_bb4_in(B)
                  [] 
* Loop 19: eval_inserttoken_bb4_in(B) [B=3] 
* Loop 20: eval_inserttoken_bb4_in(B) [B=2] 

### Ranking functions of CR eval_inserttoken_bb4_in(B) 

#### Partial ranking functions of CR eval_inserttoken_bb4_in(B) 


### Resulting Chains:eval_inserttoken_bb4_in(B) 
* [[18]]...
* [[18],20]
* [[18],19]
* [20]
* [19]


### Merging Chains  eval_inserttoken_bb4_in/1 into  External patterns of execution 
* [[20],[20,[18]]] --> 1 
* [[19],[19,[18]]] --> 2 
* [[[18]]] --> 3 


### Specialization of cost equations eval_inserttoken_bb10_in/1 
* CE 16 is refined into CE [22] 
* CE 15 is refined into CE [23] 


#### Refined cost equations eval_inserttoken_bb10_in/1 
* CE 22: eval_inserttoken_bb10_in(B) = 0
     [B=5] 
* CE 23: eval_inserttoken_bb10_in(B) = 1+ eval_inserttoken_bb10_in(C)
     [C=5,B=5] 

### Cost equations --> "Loop" of eval_inserttoken_bb10_in/1 
* CEs [23] --> Loop 21 
* CEs [22] --> Loop 22 

#### Loops of eval_inserttoken_bb10_in/1 
* Loop 21: eval_inserttoken_bb10_in(B)->  eval_inserttoken_bb10_in(B')
                  [B'=5,B=5] 
* Loop 22: eval_inserttoken_bb10_in(B) [B=5] 

### Ranking functions of CR eval_inserttoken_bb10_in(B) 

#### Partial ranking functions of CR eval_inserttoken_bb10_in(B) 


### Resulting Chains:eval_inserttoken_bb10_in(B) 
* [[21]]...
* [[21],22]
* [22]


### Merging Chains  eval_inserttoken_bb10_in/1 into  External patterns of execution 
* [[22],[22,[21]]] --> 1 
* [[[21]]] --> 2 


### Specialization of cost equations eval_inserttoken_bb8_in/1 
* CE 13 is refined into CE [24] 
* CE 12 is refined into CE [25] 


#### Refined cost equations eval_inserttoken_bb8_in/1 
* CE 24: eval_inserttoken_bb8_in(B) = 0
     [B=2] 
* CE 25: eval_inserttoken_bb8_in(B) = 1+ eval_inserttoken_bb8_in(B)
     [] 

### Cost equations --> "Loop" of eval_inserttoken_bb8_in/1 
* CEs [25] --> Loop 23 
* CEs [24] --> Loop 24 

#### Loops of eval_inserttoken_bb8_in/1 
* Loop 23: eval_inserttoken_bb8_in(B)->  eval_inserttoken_bb8_in(B)
                  [] 
* Loop 24: eval_inserttoken_bb8_in(B) [B=2] 

### Ranking functions of CR eval_inserttoken_bb8_in(B) 

#### Partial ranking functions of CR eval_inserttoken_bb8_in(B) 


### Resulting Chains:eval_inserttoken_bb8_in(B) 
* [[23]]...
* [[23],24]
* [24]


### Merging Chains  eval_inserttoken_bb8_in/1 into  External patterns of execution 
* [[24],[24,[23]]] --> 1 
* [[[23]]] --> 2 


### Specialization of cost equations loop_cont_eval_inserttoken_bb8_in/2 
* CE 14 is refined into CE [26,27] 


#### Refined cost equations loop_cont_eval_inserttoken_bb8_in/2 
* CE 26: loop_cont_eval_inserttoken_bb8_in(C,A) = 1+ eval_inserttoken_bb10_in(D):1
     [D=5,C=2] 
* CE 27: loop_cont_eval_inserttoken_bb8_in(C,A) = 1+ eval_inserttoken_bb10_in(D):2
     [D=5,C=2] 

### Cost equations --> "Loop" of loop_cont_eval_inserttoken_bb8_in/2 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 

#### Loops of loop_cont_eval_inserttoken_bb8_in/2 
* Loop 25: loop_cont_eval_inserttoken_bb8_in(C,A) [C=2] 
* Loop 26: loop_cont_eval_inserttoken_bb8_in(C,A) [C=2] 

### Ranking functions of CR loop_cont_eval_inserttoken_bb8_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_inserttoken_bb8_in(C,A) 


### Resulting Chains:loop_cont_eval_inserttoken_bb8_in(C,A) 
* [26]
* [25]...


### Merging Chains  loop_cont_eval_inserttoken_bb8_in/2 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations loop_cont_eval_inserttoken_bb4_in/2 
* CE 10 is refined into CE [28,29,30] 
* CE 11 is refined into CE [31,32] 


#### Refined cost equations loop_cont_eval_inserttoken_bb4_in/2 
* CE 28: loop_cont_eval_inserttoken_bb4_in(C,A) = 1+ eval_inserttoken_bb8_in(D):1+ loop_cont_eval_inserttoken_bb8_in(E,A):1
     [E=2,D=2,C=3] 
* CE 29: loop_cont_eval_inserttoken_bb4_in(C,A) = 1+ eval_inserttoken_bb8_in(D):1+ loop_cont_eval_inserttoken_bb8_in(E,A):2
     [E=2,D=2,C=3] 
* CE 30: loop_cont_eval_inserttoken_bb4_in(C,A) = 1+ eval_inserttoken_bb8_in(D):2
     [C=3] 
* CE 31: loop_cont_eval_inserttoken_bb4_in(C,A) = 1+ eval_inserttoken_bb10_in(D):1
     [D=5,C=2] 
* CE 32: loop_cont_eval_inserttoken_bb4_in(C,A) = 1+ eval_inserttoken_bb10_in(D):2
     [D=5,C=2] 

### Cost equations --> "Loop" of loop_cont_eval_inserttoken_bb4_in/2 
* CEs [29,30] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [28] --> Loop 29 
* CEs [31] --> Loop 30 

#### Loops of loop_cont_eval_inserttoken_bb4_in/2 
* Loop 27: loop_cont_eval_inserttoken_bb4_in(C,A) [C=3] 
* Loop 28: loop_cont_eval_inserttoken_bb4_in(C,A) [C=2] 
* Loop 29: loop_cont_eval_inserttoken_bb4_in(C,A) [C=3] 
* Loop 30: loop_cont_eval_inserttoken_bb4_in(C,A) [C=2] 

### Ranking functions of CR loop_cont_eval_inserttoken_bb4_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_inserttoken_bb4_in(C,A) 


### Resulting Chains:loop_cont_eval_inserttoken_bb4_in(C,A) 
* [30]
* [29]
* [28]...
* [27]...


### Merging Chains  loop_cont_eval_inserttoken_bb4_in/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 
* [[27]] --> 4 


### Specialization of cost equations eval_inserttoken_9/1 
* CE 6 is refined into CE [33,34,35,36,37] 


#### Refined cost equations eval_inserttoken_9/1 
* CE 33: eval_inserttoken_9(B) = 1+ eval_inserttoken_bb4_in(C):1+ loop_cont_eval_inserttoken_bb4_in(D,B):1
     [D=2,C=2] 
* CE 34: eval_inserttoken_9(B) = 1+ eval_inserttoken_bb4_in(C):1+ loop_cont_eval_inserttoken_bb4_in(D,B):3
     [D=2,C=2] 
* CE 35: eval_inserttoken_9(B) = 1+ eval_inserttoken_bb4_in(C):2+ loop_cont_eval_inserttoken_bb4_in(D,B):2
     [D=3,C=3] 
* CE 36: eval_inserttoken_9(B) = 1+ eval_inserttoken_bb4_in(C):2+ loop_cont_eval_inserttoken_bb4_in(D,B):4
     [D=3,C=3] 
* CE 37: eval_inserttoken_9(B) = 1+ eval_inserttoken_bb4_in(C):3
     [] 

### Cost equations --> "Loop" of eval_inserttoken_9/1 
* CEs [34,36,37] --> Loop 31 
* CEs [33,35] --> Loop 32 

#### Loops of eval_inserttoken_9/1 
* Loop 31: eval_inserttoken_9(B) [] 
* Loop 32: eval_inserttoken_9(B) [] 

### Ranking functions of CR eval_inserttoken_9(B) 

#### Partial ranking functions of CR eval_inserttoken_9(B) 


### Resulting Chains:eval_inserttoken_9(B) 
* [32]
* [31]...


### Merging Chains  eval_inserttoken_9/1 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations eval_inserttoken_1/1 
* CE 3 is refined into CE [38,39,40] 


#### Refined cost equations eval_inserttoken_1/1 
* CE 38: eval_inserttoken_1(B) = 1+ eval_inserttoken_bb1_in(C):1+ eval_inserttoken_9(B):1
     [C=4] 
* CE 39: eval_inserttoken_1(B) = 1+ eval_inserttoken_bb1_in(C):1+ eval_inserttoken_9(B):2
     [C=4] 
* CE 40: eval_inserttoken_1(B) = 1+ eval_inserttoken_bb1_in(C):2
     [C=4] 

### Cost equations --> "Loop" of eval_inserttoken_1/1 
* CEs [39,40] --> Loop 33 
* CEs [38] --> Loop 34 

#### Loops of eval_inserttoken_1/1 
* Loop 33: eval_inserttoken_1(B) [] 
* Loop 34: eval_inserttoken_1(B) [] 

### Ranking functions of CR eval_inserttoken_1(B) 

#### Partial ranking functions of CR eval_inserttoken_1(B) 


### Resulting Chains:eval_inserttoken_1(B) 
* [34]
* [33]...


### Merging Chains  eval_inserttoken_1/1 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_inserttoken_start/1 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_inserttoken_start/1 
* CE 41: eval_inserttoken_start(B) = 0+ eval_inserttoken_1(B):1
     [] 
* CE 42: eval_inserttoken_start(B) = 0+ eval_inserttoken_1(B):2
     [] 

### Cost equations --> "Loop" of eval_inserttoken_start/1 
* CEs [42] --> Loop 35 
* CEs [41] --> Loop 36 

#### Loops of eval_inserttoken_start/1 
* Loop 35: eval_inserttoken_start(B) [] 
* Loop 36: eval_inserttoken_start(B) [] 

### Ranking functions of CR eval_inserttoken_start(B) 

#### Partial ranking functions of CR eval_inserttoken_start(B) 


### Resulting Chains:eval_inserttoken_start(B) 
* [36]
* [35]...


### Merging Chains  eval_inserttoken_start/1 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_inserttoken_bb1_in(B) -> [eval_inserttoken_bb1_in(B')] 
1
#### Cost of phase [16]:eval_inserttoken_bb1_in(B) -> [eval_inserttoken_bb1_in(B')] 
1*it(16)+0
#### Cost of phase [16]:eval_inserttoken_bb1_in(B) -> [eval_inserttoken_bb1_in(B')] 
1*it(16)+0
#### Cost of chains of eval_inserttoken_bb1_in(B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [B=4] 

* Chain [[16],17]: 1*it(16)+0
  with precondition: [B=4] 

* Chain [17]: 0
  with precondition: [B=4] 


#### Cost of loops [18] 

 * loop 18:eval_inserttoken_bb4_in(B) -> [eval_inserttoken_bb4_in(B')] 
1
#### Cost of phase [18]:eval_inserttoken_bb4_in(B) -> [eval_inserttoken_bb4_in(B')] 
1*it(18)+0
#### Cost of phase [18]:eval_inserttoken_bb4_in(B) -> [eval_inserttoken_bb4_in(B')] 
1*it(18)+0
#### Cost of phase [18]:eval_inserttoken_bb4_in(B) -> [eval_inserttoken_bb4_in(B')] 
1*it(18)+0
#### Cost of chains of eval_inserttoken_bb4_in(B):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [] 

* Chain [[18],20]: 1*it(18)+0
  with precondition: [B=2] 

* Chain [[18],19]: 1*it(18)+0
  with precondition: [B=3] 

* Chain [20]: 0
  with precondition: [B=2] 

* Chain [19]: 0
  with precondition: [B=3] 


#### Cost of loops [21] 

 * loop 21:eval_inserttoken_bb10_in(B) -> [eval_inserttoken_bb10_in(B')] 
1
#### Cost of phase [21]:eval_inserttoken_bb10_in(B) -> [eval_inserttoken_bb10_in(B')] 
1*it(21)+0
#### Cost of phase [21]:eval_inserttoken_bb10_in(B) -> [eval_inserttoken_bb10_in(B')] 
1*it(21)+0
#### Cost of chains of eval_inserttoken_bb10_in(B):
* Chain [[21]]...: 1*it(21)+0
  with precondition: [B=5] 

* Chain [[21],22]: 1*it(21)+0
  with precondition: [B=5] 

* Chain [22]: 0
  with precondition: [B=5] 


#### Cost of loops [23] 

 * loop 23:eval_inserttoken_bb8_in(B) -> [eval_inserttoken_bb8_in(B')] 
1
#### Cost of phase [23]:eval_inserttoken_bb8_in(B) -> [eval_inserttoken_bb8_in(B')] 
1*it(23)+0
#### Cost of phase [23]:eval_inserttoken_bb8_in(B) -> [eval_inserttoken_bb8_in(B')] 
1*it(23)+0
#### Cost of chains of eval_inserttoken_bb8_in(B):
* Chain [[23]]...: 1*it(23)+0
  with precondition: [] 

* Chain [[23],24]: 1*it(23)+0
  with precondition: [B=2] 

* Chain [24]: 0
  with precondition: [B=2] 


#### Cost of chains of loop_cont_eval_inserttoken_bb8_in(C,A):
* Chain [26]: 1*s(6)+1
  with precondition: [C=2] 

* Chain [25]...: 1*s(7)+1
  with precondition: [C=2] 


#### Cost of chains of loop_cont_eval_inserttoken_bb4_in(C,A):
* Chain [30]: 1*s(8)+1
  with precondition: [C=2] 

* Chain [29]: 2*s(9)+2
  with precondition: [C=3] 

* Chain [28]...: 1*s(11)+1
  with precondition: [C=2] 

* Chain [27]...: 1*aux(6)+0
  with precondition: [C=3] 


#### Cost of chains of eval_inserttoken_9(B):
* Chain [32]: 1*aux(7)+0
  with precondition: [] 

* Chain [31]...: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_inserttoken_1(B):
* Chain [34]: 2*s(24)+1
  with precondition: [] 

* Chain [33]...: 1*aux(9)+0
  with precondition: [] 


#### Cost of chains of eval_inserttoken_start(B):
* Chain [36]: 2*s(29)+1
  with precondition: [] 

* Chain [35]...: 1*s(30)+0
  with precondition: [] 


Closed-form bounds of eval_inserttoken_start(B): 
-------------------------------------
* Chain [36] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [35]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_inserttoken_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 24 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 24 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 74 ms.

