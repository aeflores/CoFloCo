Warning: Ignored call to eval_BF_FlushBitstream_stop/1 in equation eval_BF_FlushBitstream_22/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_BF_FlushBitstream_10/17,eval_BF_FlushBitstream_9/17,eval_BF_FlushBitstream_bb2_in/16]
1. non_recursive  : [eval_BF_FlushBitstream_22/1]
2. non_recursive  : [eval_BF_FlushBitstream_21/7]
3. non_recursive  : [eval_BF_FlushBitstream_bb5_in/7]
4. non_recursive  : [eval_BF_FlushBitstream_13/7]
5. non_recursive  : [eval_BF_FlushBitstream_12/8]
6. non_recursive  : [loop_cont_eval_BF_FlushBitstream_bb2_in/9]
7. non_recursive  : [eval_BF_FlushBitstream_bb0_in/7]
8. non_recursive  : [eval_BF_FlushBitstream_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_BF_FlushBitstream_bb2_in/16
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_BF_FlushBitstream_bb0_in/7
8. SCC is partially evaluated into eval_BF_FlushBitstream_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_BF_FlushBitstream_bb2_in/16 
* CE 10 is refined into CE [12] 
* CE 11 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 8 is refined into CE [16] 


#### Refined cost equations eval_BF_FlushBitstream_bb2_in/16 
* CE 12: eval_BF_FlushBitstream_bb2_in(A,B,C,D,E,F,G,H,I,A,B,C,J,E,F,K) = 0
     [K>=0,G>=1,31>=K,E+G=J,E+G=D,I=2,H=0] 
* CE 13: eval_BF_FlushBitstream_bb2_in(A,B,C,D,E,F,G,H,I,A,B,C,J,E,F,K) = 0
     [K+31>=0,G+31>=0,0>=K,0>=G+1,E+G=J,E+G=D,I=2,H=0] 
* CE 14: eval_BF_FlushBitstream_bb2_in(A,B,C,D,D,E,F,G,H,A,B,C,D,D,E,I) = 0
     [I=0,H=2,G=0,F=0] 
* CE 15: eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I) = 1+ eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,J,V__forwardSILength,V__elements,V_4,K,L,C,D,E,F,G,H,I)
     [V_4+31>=32*V_wordsRemaining_0,V_wordsRemaining_0>=1,V__forwardSILength+V_4=J,V__forwardSILength+V_4=V__forwardFrameLength,V_wordsRemaining_0=K+1,L=2,B=2] 
* CE 16: eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I) = 1+ eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,J,V__forwardSILength,V__elements,V_4,K,L,C,D,E,F,G,H,I)
     [V_4+31>=32*V_wordsRemaining_0,0>=V_wordsRemaining_0+1,V__forwardSILength+V_4=J,V__forwardSILength+V_4=V__forwardFrameLength,V_wordsRemaining_0=K+1,L=2,B=2] 

### Cost equations --> "Loop" of eval_BF_FlushBitstream_bb2_in/16 
* CEs [15] --> Loop 8 
* CEs [16] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_BF_FlushBitstream_bb2_in/16 
* Loop 8: eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I)->  eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4',V_wordsRemaining_0',B',C,D,E,F,G,H,I)
                  [V__forwardFrameLength+31>=32*V_wordsRemaining_0+V__forwardSILength,V_wordsRemaining_0>=1,V__forwardFrameLength=V__forwardSILength+V_4',V__forwardFrameLength=V__forwardSILength+V_4,V_wordsRemaining_0=V_wordsRemaining_0'+1,B'=2,B=2] 
* Loop 9: eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I)->  eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4',V_wordsRemaining_0',B',C,D,E,F,G,H,I)
                  [V__forwardFrameLength+31>=32*V_wordsRemaining_0+V__forwardSILength,0>=V_wordsRemaining_0+1,V__forwardFrameLength=V__forwardSILength+V_4',V__forwardFrameLength=V__forwardSILength+V_4,V_wordsRemaining_0=V_wordsRemaining_0'+1,B'=2,B=2] 
* Loop 10: eval_BF_FlushBitstream_bb2_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,J) [D>=E+1,J>=0,31>=J,D=E+G,I=2,H=0] 
* Loop 11: eval_BF_FlushBitstream_bb2_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,J) [D+31>=E,E>=D+1,J+31>=0,0>=J,D=E+G,I=2,H=0] 
* Loop 12: eval_BF_FlushBitstream_bb2_in(A,B,C,D,D,E,F,G,H,A,B,C,D,D,E,I) [I=0,H=2,G=0,F=0] 

### Ranking functions of CR eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I) 
* RF of phase [8]: [V_wordsRemaining_0]

#### Partial ranking functions of CR eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_wordsRemaining_0


### Resulting Chains:eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I) 
* [[9]]...
* [[8],10]
* [12]
* [11]
* [10]


### Merging Chains  eval_BF_FlushBitstream_bb2_in/16 into  External patterns of execution 
* [[12]] --> 1 
* [[10]] --> 2 
* [[11]] --> 3 
* [[10,[8]]] --> 4 
* [[[9]]] --> 5 


### Specialization of cost equations eval_BF_FlushBitstream_bb0_in/7 
* CE 3 is refined into CE [17] 
* CE 4 is refined into CE [18,19] 
* CE 5 is refined into CE [20,21] 
* CE 6 is refined into CE [22] 


#### Refined cost equations eval_BF_FlushBitstream_bb0_in/7 
* CE 17: eval_BF_FlushBitstream_bb0_in(A,B,C,D,D,E,F) = 1+ eval_BF_FlushBitstream_bb2_in(A,B,C,D,D,E,G,H,I,A,B,C,D,D,E,J):1
     [J=0,I=2,H=0,G=0] 
* CE 18: eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) = 1+ eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,C,D,E,V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,F):2
     [V__forwardFrameLength>=V__forwardSILength+1,V__forwardSILength+31>=V__forwardFrameLength,F>=0,31>=F,V__forwardFrameLength=V__forwardSILength+C,E=2,D=0] 
* CE 19: eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) = 1+ eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,C,D,E,V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,F):4
     [V__forwardSILength+32*D+31>=V__forwardFrameLength,V__forwardFrameLength>=32*D+V__forwardSILength,F>=0,D>=1,31>=F,V__forwardFrameLength=V__forwardSILength+C,E=2] 
* CE 20: eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) = 1+ eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,C,D,E,V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,F):3
     [V__forwardFrameLength+31>=V__forwardSILength,V__forwardSILength>=V__forwardFrameLength+1,F+31>=0,0>=F,V__forwardFrameLength=V__forwardSILength+C,E=2,D=0] 
* CE 21: eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) = 1+ eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,C,V__elements,D,E,F,G,H,I,J,K,L,M):5
     [32*E>=D,D+31>=32*E,0>=E+1,C+D=V__forwardFrameLength,V__forwardSILength+D=V__forwardFrameLength,F=2] 
* CE 22: eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) = 0
     [] 

### Cost equations --> "Loop" of eval_BF_FlushBitstream_bb0_in/7 
* CEs [17,18,19,20,22] --> Loop 13 
* CEs [21] --> Loop 14 

#### Loops of eval_BF_FlushBitstream_bb0_in/7 
* Loop 13: eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) [] 
* Loop 14: eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) [V__forwardSILength>=V__forwardFrameLength+32] 

### Ranking functions of CR eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) 

#### Partial ranking functions of CR eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) 


### Resulting Chains:eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) 
* [14]...
* [13]


### Merging Chains  eval_BF_FlushBitstream_bb0_in/7 into  External patterns of execution 
* [[13]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_BF_FlushBitstream_start/7 
* CE 2 is refined into CE [23,24] 


#### Refined cost equations eval_BF_FlushBitstream_start/7 
* CE 23: eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) = 0+ eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B):1
     [] 
* CE 24: eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) = 0+ eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B):2
     [V__forwardSILength>=V__forwardFrameLength+32] 

### Cost equations --> "Loop" of eval_BF_FlushBitstream_start/7 
* CEs [24] --> Loop 15 
* CEs [23] --> Loop 16 

#### Loops of eval_BF_FlushBitstream_start/7 
* Loop 15: eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) [V__forwardSILength>=V__forwardFrameLength+32] 
* Loop 16: eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) [] 

### Ranking functions of CR eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) 

#### Partial ranking functions of CR eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) 


### Resulting Chains:eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B) 
* [16]
* [15]...


### Merging Chains  eval_BF_FlushBitstream_start/7 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I) -> [eval_BF_FlushBitstream_bb2_in(V__BitCount',V__ThisFrameSize',V__BitsRemaining',V__forwardFrameLength',V__forwardSILength',V__elements',V_4',V_wordsRemaining_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [9]:eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I) -> [eval_BF_FlushBitstream_bb2_in(V__BitCount',V__ThisFrameSize',V__BitsRemaining',V__forwardFrameLength',V__forwardSILength',V__elements',V_4',V_wordsRemaining_0',B',C',D',E',F',G',H',I')] 
1*it(9)+0
#### Cost of loops [8] 

 * loop 8:eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I) -> [eval_BF_FlushBitstream_bb2_in(V__BitCount',V__ThisFrameSize',V__BitsRemaining',V__forwardFrameLength',V__forwardSILength',V__elements',V_4',V_wordsRemaining_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [8]:eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I) -> [eval_BF_FlushBitstream_bb2_in(V__BitCount',V__ThisFrameSize',V__BitsRemaining',V__forwardFrameLength',V__forwardSILength',V__elements',V_4',V_wordsRemaining_0',B',C',D',E',F',G',H',I')] 
1*it(8)+0
  Such that:it(8) =< V_wordsRemaining_0
it(8) =< V_wordsRemaining_0-V_wordsRemaining_0'

#### Cost of chains of eval_BF_FlushBitstream_bb2_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,V_4,V_wordsRemaining_0,B,C,D,E,F,G,H,I):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [0>=V_wordsRemaining_0+1,V_4+31>=32*V_wordsRemaining_0,V__forwardFrameLength=V_4+V__forwardSILength,B=2] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_wordsRemaining_0

  with precondition: [B=2,V__BitCount=C,V__ThisFrameSize=D,V__BitsRemaining=E,V__forwardFrameLength=F,V__forwardSILength=G,V__elements=H,V_4+V__forwardSILength=V__forwardFrameLength,31>=I,V_wordsRemaining_0>=1,I>=0,V__forwardFrameLength+31>=32*V_wordsRemaining_0+V__forwardSILength] 

* Chain [12]: 0
  with precondition: [V_4=0,V_wordsRemaining_0=0,B=2,I=0,C=V__BitCount,D=V__ThisFrameSize,E=V__BitsRemaining,V__forwardSILength=V__forwardFrameLength,H=V__elements,V__forwardSILength=F,V__forwardSILength=G] 

* Chain [11]: 0
  with precondition: [V_wordsRemaining_0=0,B=2,C=V__BitCount,D=V__ThisFrameSize,E=V__BitsRemaining,H=V__elements,V__forwardFrameLength=F,V__forwardSILength=G,V__forwardFrameLength=V_4+V__forwardSILength,0>=I,I+31>=0,V__forwardSILength>=V__forwardFrameLength+1,V__forwardFrameLength+31>=V__forwardSILength] 

* Chain [10]: 0
  with precondition: [V_wordsRemaining_0=0,B=2,C=V__BitCount,D=V__ThisFrameSize,E=V__BitsRemaining,H=V__elements,V__forwardFrameLength=F,V__forwardSILength=G,V__forwardFrameLength=V_4+V__forwardSILength,31>=I,I>=0,V__forwardFrameLength>=V__forwardSILength+1] 


#### Cost of chains of eval_BF_FlushBitstream_bb0_in(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B):
* Chain [14]...: 1*s(1)+1
  with precondition: [V__forwardSILength>=V__forwardFrameLength+32] 

* Chain [13]: 1*s(2)+1
  Such that:s(2) =< V__forwardFrameLength/32-V__forwardSILength/32

  with precondition: [] 


#### Cost of chains of eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B):
* Chain [16]: 1*s(3)+1
  Such that:s(3) =< V__forwardFrameLength/32-V__forwardSILength/32

  with precondition: [] 

* Chain [15]...: 1*s(4)+1
  with precondition: [V__forwardSILength>=V__forwardFrameLength+32] 


Closed-form bounds of eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: nat(V__forwardFrameLength/32-V__forwardSILength/32)+1 
    - Complexity: n 
* Chain [15]... with precondition: [V__forwardSILength>=V__forwardFrameLength+32] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_BF_FlushBitstream_start(V__BitCount,V__ThisFrameSize,V__BitsRemaining,V__forwardFrameLength,V__forwardSILength,V__elements,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 191 ms.
* Invariants computed in 122 ms.
   - Backward Invariants 48 ms.
   - Transitive Invariants 33 ms.
* Refinement performed in 319 ms.
* Termination proved in 29 ms.
* Upper bounds computed in 142 ms.
   - Equation cost structures 64 ms.
   - Phase cost structures 47 ms.
   - Chain cost structures 42 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 962 ms.

