WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=<A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=< -A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=<A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=< -A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=<A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=< -A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=<A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=< -A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=<A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=< -A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=<A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=< -A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=<A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=< -A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=<A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=< -A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=<A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=< -A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=<A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=< -A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=<A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=< -A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=<A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=< -A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=<A]
WARNING: Excluded non-linear constraints:[B-A*E>=0,B-A*E+1=< -A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=<A]
WARNING: Excluded non-linear constraints:[-B+A*E>=0,-B+A*E+1=< -A]
Warning: Ignored call to eval_II_samples_stop/1 in equation loop_cont_eval_II_samples_bb7_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_II_samples_bb2_in/4]
1. recursive  : [eval_II_samples_bb7_in/2]
2. non_recursive  : [loop_cont_eval_II_samples_bb7_in/2]
3. non_recursive  : [eval_II_samples_bb6_in/1]
4. non_recursive  : [loop_cont_eval_II_samples_bb2_in/2]
5. non_recursive  : [eval_II_samples_6/2]
6. non_recursive  : [eval_II_samples_5/2]
7. recursive  : [eval_II_samples_16/3,eval_II_samples_17/3,eval_II_samples_bb4_in/3]
8. non_recursive  : [loop_cont_eval_II_samples_bb4_in/2]
9. non_recursive  : [eval_II_samples_bb0_in/1]
10. non_recursive  : [eval_II_samples_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_II_samples_bb2_in/4
1. SCC is partially evaluated into eval_II_samples_bb7_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_II_samples_bb6_in/1
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_II_samples_6/2
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_II_samples_bb4_in/3
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_II_samples_bb0_in/1
10. SCC is partially evaluated into eval_II_samples_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_II_samples_bb2_in/4 
* CE 18 is refined into CE [21] 
* CE 14 is refined into CE [22] 
* CE 15 is refined into CE [23] 
* CE 16 is refined into CE [24] 
* CE 17 is refined into CE [25] 
* CE 9 is refined into CE [26] 
* CE 10 is refined into CE [27] 
* CE 11 is refined into CE [28] 
* CE 12 is refined into CE [29] 
* CE 13 is refined into CE [30] 


#### Refined cost equations eval_II_samples_bb2_in/4 
* CE 21: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 0
     [V_s_0>=3,B=3] 
* CE 22: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 1+ eval_II_samples_bb2_in(V_11,C,D,E)
     [C>=0,V_s_0>=0,V_c_0>=1,V_11>=2,2>=V_s_0,V_s_0+1=D,E=3,B=3] 
* CE 23: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 1+ eval_II_samples_bb2_in(V_11,C,D,E)
     [V_s_0>=0,V_11>=2,0>=C,2>=V_s_0,0>=V_c_0+1,V_s_0+1=D,E=3,B=3] 
* CE 24: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 1+ eval_II_samples_bb2_in(V_11,C,D,E)
     [V_s_0>=0,V_c_0>=1,0>=C,2>=V_s_0,0>=V_11+2,V_s_0+1=D,E=3,B=3] 
* CE 25: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 1+ eval_II_samples_bb2_in(V_11,C,D,E)
     [C>=0,V_s_0>=0,2>=V_s_0,0>=V_c_0+1,0>=V_11+2,V_s_0+1=D,E=3,B=3] 
* CE 26: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 1+ eval_II_samples_bb2_in(V_11,C,D,E)
     [V_s_0>=0,2>=V_s_0,V_s_0+1=D,E=3,C=0,B=3,V_c_0=0] 
* CE 27: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 1+ eval_II_samples_bb2_in(C,D,E,F)
     [D>=0,V_s_0>=0,V_c_0>=1,2>=V_s_0,V_s_0+1=E,F=3,C=1,B=3,V_11=1] 
* CE 28: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 1+ eval_II_samples_bb2_in(C,D,E,F)
     [V_s_0>=0,0>=D,2>=V_s_0,0>=V_c_0+1,V_s_0+1=E,F=3,C=1,B=3,V_11=1] 
* CE 29: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 1+ eval_II_samples_bb2_in(C,D,E,F)
     [V_s_0>=0,V_c_0>=1,0>=D,2>=V_s_0,V_s_0+1=E,F=3,C+1=0,B=3,V_11+1=0] 
* CE 30: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) = 1+ eval_II_samples_bb2_in(C,D,E,F)
     [D>=0,V_s_0>=0,2>=V_s_0,0>=V_c_0+1,V_s_0+1=E,F=3,C+1=0,B=3,V_11+1=0] 

### Cost equations --> "Loop" of eval_II_samples_bb2_in/4 
* CEs [22] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [27] --> Loop 24 
* CEs [28] --> Loop 25 
* CEs [29] --> Loop 26 
* CEs [30] --> Loop 27 
* CEs [21] --> Loop 28 

#### Loops of eval_II_samples_bb2_in/4 
* Loop 19: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B)->  eval_II_samples_bb2_in(V_11,V_c_0',V_s_0',B')
                  [V_c_0'>=0,V_s_0>=0,V_c_0>=1,V_11>=2,2>=V_s_0,V_s_0+1=V_s_0',B'=3,B=3] 
* Loop 20: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B)->  eval_II_samples_bb2_in(V_11,V_c_0',V_s_0',B')
                  [V_s_0>=0,V_11>=2,0>=V_c_0',2>=V_s_0,0>=V_c_0+1,V_s_0+1=V_s_0',B'=3,B=3] 
* Loop 21: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B)->  eval_II_samples_bb2_in(V_11,V_c_0',V_s_0',B')
                  [V_s_0>=0,V_c_0>=1,0>=V_c_0',2>=V_s_0,0>=V_11+2,V_s_0+1=V_s_0',B'=3,B=3] 
* Loop 22: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B)->  eval_II_samples_bb2_in(V_11,V_c_0',V_s_0',B')
                  [V_c_0'>=0,V_s_0>=0,2>=V_s_0,0>=V_c_0+1,0>=V_11+2,V_s_0+1=V_s_0',B'=3,B=3] 
* Loop 23: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B)->  eval_II_samples_bb2_in(V_11,V_c_0',V_s_0',B')
                  [V_s_0>=0,2>=V_s_0,V_s_0+1=V_s_0',B'=3,V_c_0'=0,B=3,V_c_0=0] 
* Loop 24: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B)->  eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')
                  [V_c_0'>=0,V_s_0>=0,V_c_0>=1,2>=V_s_0,V_s_0+1=V_s_0',B'=3,V_11'=1,B=3,V_11=1] 
* Loop 25: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B)->  eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')
                  [V_s_0>=0,0>=V_c_0',2>=V_s_0,0>=V_c_0+1,V_s_0+1=V_s_0',B'=3,V_11'=1,B=3,V_11=1] 
* Loop 26: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B)->  eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')
                  [V_s_0>=0,V_c_0>=1,0>=V_c_0',2>=V_s_0,V_s_0+1=V_s_0',B'=3,V_11'+1=0,B=3,V_11+1=0] 
* Loop 27: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B)->  eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')
                  [V_c_0'>=0,V_s_0>=0,2>=V_s_0,0>=V_c_0+1,V_s_0+1=V_s_0',B'=3,V_11'+1=0,B=3,V_11+1=0] 
* Loop 28: eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) [V_s_0>=3,B=3] 

### Ranking functions of CR eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) 
* RF of phase [19]: [-V_s_0+3]
* RF of phase [20]: [-V_s_0+3]
* RF of phase [21,22]: [-V_s_0+3]
* RF of phase [23]: [-V_s_0+3]
* RF of phase [24]: [-V_s_0+3]
* RF of phase [25]: [-V_s_0+3]
* RF of phase [26,27]: [-V_s_0+3]

#### Partial ranking functions of CR eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    -V_s_0+3
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    -V_s_0+3
* Partial RF of phase [21,22]:
  - RF of loop [21:1]:
    V_c_0 depends on loops [22:1] 
  - RF of loop [21:1,22:1]:
    -V_s_0+3
  - RF of loop [22:1]:
    -V_c_0 depends on loops [21:1] 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    -V_s_0+3
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    -V_s_0+3
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    -V_s_0+3
* Partial RF of phase [26,27]:
  - RF of loop [26:1]:
    V_c_0 depends on loops [27:1] 
  - RF of loop [26:1,27:1]:
    -V_s_0+3
  - RF of loop [27:1]:
    -V_c_0 depends on loops [26:1] 


### Resulting Chains:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) 
* [[26,27],[23],28]
* [[26,27],28]
* [[25],[23],28]
* [[25],28]
* [[24],[23],28]
* [[24],28]
* [[23],28]
* [[21,22],[23],28]
* [[21,22],28]
* [[20],[23],28]
* [[20],28]
* [[19],[23],28]
* [[19],28]


### Merging Chains  eval_II_samples_bb2_in/4 into  External patterns of execution 
* [[28,[26,27]],[28,[23],[26,27]]] --> 1 
* [[28,[25]],[28,[23],[25]]] --> 2 
* [[28,[24]],[28,[23],[24]]] --> 3 
* [[28,[23]]] --> 4 
* [[28,[21,22]],[28,[23],[21,22]]] --> 5 
* [[28,[20]],[28,[23],[20]]] --> 6 
* [[28,[19]],[28,[23],[19]]] --> 7 


### Specialization of cost equations eval_II_samples_bb7_in/2 
* CE 20 is refined into CE [31] 
* CE 19 is refined into CE [32] 


#### Refined cost equations eval_II_samples_bb7_in/2 
* CE 31: eval_II_samples_bb7_in(V_s_2,B) = 0
     [V_s_2>=3,B=2] 
* CE 32: eval_II_samples_bb7_in(V_s_2,B) = 1+ eval_II_samples_bb7_in(C,D)
     [V_s_2>=0,2>=V_s_2,V_s_2+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_II_samples_bb7_in/2 
* CEs [32] --> Loop 29 
* CEs [31] --> Loop 30 

#### Loops of eval_II_samples_bb7_in/2 
* Loop 29: eval_II_samples_bb7_in(V_s_2,B)->  eval_II_samples_bb7_in(V_s_2',B')
                  [V_s_2>=0,2>=V_s_2,V_s_2+1=V_s_2',B'=2,B=2] 
* Loop 30: eval_II_samples_bb7_in(V_s_2,B) [V_s_2>=3,B=2] 

### Ranking functions of CR eval_II_samples_bb7_in(V_s_2,B) 
* RF of phase [29]: [-V_s_2+3]

#### Partial ranking functions of CR eval_II_samples_bb7_in(V_s_2,B) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    -V_s_2+3


### Resulting Chains:eval_II_samples_bb7_in(V_s_2,B) 
* [[29],30]


### Merging Chains  eval_II_samples_bb7_in/2 into  External patterns of execution 
* [[30,[29]]] --> 1 


### Specialization of cost equations eval_II_samples_bb6_in/1 
* CE 8 is refined into CE [33] 


#### Refined cost equations eval_II_samples_bb6_in/1 
* CE 33: eval_II_samples_bb6_in(B) = 1+ eval_II_samples_bb7_in(C,D):1
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_II_samples_bb6_in/1 
* CEs [33] --> Loop 31 

#### Loops of eval_II_samples_bb6_in/1 
* Loop 31: eval_II_samples_bb6_in(B) [] 

### Ranking functions of CR eval_II_samples_bb6_in(B) 

#### Partial ranking functions of CR eval_II_samples_bb6_in(B) 


### Resulting Chains:eval_II_samples_bb6_in(B) 
* [31]


### Merging Chains  eval_II_samples_bb6_in/1 into  External patterns of execution 
* [[31]] --> 1 


### Specialization of cost equations eval_II_samples_6/2 
* CE 5 is refined into CE [34,35,36,37,38,39,40] 


#### Refined cost equations eval_II_samples_6/2 
* CE 34: eval_II_samples_6(V_7,B) = 1+ eval_II_samples_bb2_in(C,V_7,D,E):1+ eval_II_samples_bb6_in(B):1
     [E=3,D=0,C+1=0] 
* CE 35: eval_II_samples_6(V_7,B) = 1+ eval_II_samples_bb2_in(C,V_7,D,E):2+ eval_II_samples_bb6_in(B):1
     [0>=V_7+1,E=3,D=0,C=1] 
* CE 36: eval_II_samples_6(V_7,B) = 1+ eval_II_samples_bb2_in(C,V_7,D,E):3+ eval_II_samples_bb6_in(B):1
     [V_7>=1,E=3,D=0,C=1] 
* CE 37: eval_II_samples_6(V_7,B) = 1+ eval_II_samples_bb2_in(C,D,E,F):4+ eval_II_samples_bb6_in(B):1
     [F=3,E=0,D=0,V_7=0] 
* CE 38: eval_II_samples_6(V_7,B) = 1+ eval_II_samples_bb2_in(C,V_7,D,E):5+ eval_II_samples_bb6_in(B):1
     [0>=C+2,E=3,D=0] 
* CE 39: eval_II_samples_6(V_7,B) = 1+ eval_II_samples_bb2_in(C,V_7,D,E):6+ eval_II_samples_bb6_in(B):1
     [C>=2,0>=V_7+1,E=3,D=0] 
* CE 40: eval_II_samples_6(V_7,B) = 1+ eval_II_samples_bb2_in(C,V_7,D,E):7+ eval_II_samples_bb6_in(B):1
     [V_7>=1,C>=2,E=3,D=0] 

### Cost equations --> "Loop" of eval_II_samples_6/2 
* CEs [34,35,36,37,38,39,40] --> Loop 32 

#### Loops of eval_II_samples_6/2 
* Loop 32: eval_II_samples_6(V_7,B) [] 

### Ranking functions of CR eval_II_samples_6(V_7,B) 

#### Partial ranking functions of CR eval_II_samples_6(V_7,B) 


### Resulting Chains:eval_II_samples_6(V_7,B) 
* [32]


### Merging Chains  eval_II_samples_6/2 into  External patterns of execution 
* [[32]] --> 1 


### Specialization of cost equations eval_II_samples_bb4_in/3 
* CE 7 is refined into CE [41] 
* CE 6 is refined into CE [42] 


#### Refined cost equations eval_II_samples_bb4_in/3 
* CE 41: eval_II_samples_bb4_in(V_6,V_s_1,B) = 0
     [V_s_1>=3,B=3] 
* CE 42: eval_II_samples_bb4_in(V_6,V_s_1,B) = 1+ eval_II_samples_bb4_in(V_6,C,D)
     [V_s_1>=0,2>=V_s_1,V_s_1+1=C,D=3,B=3] 

### Cost equations --> "Loop" of eval_II_samples_bb4_in/3 
* CEs [42] --> Loop 33 
* CEs [41] --> Loop 34 

#### Loops of eval_II_samples_bb4_in/3 
* Loop 33: eval_II_samples_bb4_in(V_6,V_s_1,B)->  eval_II_samples_bb4_in(V_6,V_s_1',B')
                  [V_s_1>=0,2>=V_s_1,V_s_1+1=V_s_1',B'=3,B=3] 
* Loop 34: eval_II_samples_bb4_in(V_6,V_s_1,B) [V_s_1>=3,B=3] 

### Ranking functions of CR eval_II_samples_bb4_in(V_6,V_s_1,B) 
* RF of phase [33]: [-V_s_1+3]

#### Partial ranking functions of CR eval_II_samples_bb4_in(V_6,V_s_1,B) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    -V_s_1+3


### Resulting Chains:eval_II_samples_bb4_in(V_6,V_s_1,B) 
* [[33],34]


### Merging Chains  eval_II_samples_bb4_in/3 into  External patterns of execution 
* [[34,[33]]] --> 1 


### Specialization of cost equations eval_II_samples_bb0_in/1 
* CE 3 is refined into CE [43] 
* CE 4 is refined into CE [44] 


#### Refined cost equations eval_II_samples_bb0_in/1 
* CE 43: eval_II_samples_bb0_in(B) = 0+ eval_II_samples_6(C,B):1
     [] 
* CE 44: eval_II_samples_bb0_in(B) = 1+ eval_II_samples_bb4_in(C,D,E):1+ eval_II_samples_bb6_in(B):1
     [E=3,D=0] 

### Cost equations --> "Loop" of eval_II_samples_bb0_in/1 
* CEs [43,44] --> Loop 35 

#### Loops of eval_II_samples_bb0_in/1 
* Loop 35: eval_II_samples_bb0_in(B) [] 

### Ranking functions of CR eval_II_samples_bb0_in(B) 

#### Partial ranking functions of CR eval_II_samples_bb0_in(B) 


### Resulting Chains:eval_II_samples_bb0_in(B) 
* [35]


### Merging Chains  eval_II_samples_bb0_in/1 into  External patterns of execution 
* [[35]] --> 1 


### Specialization of cost equations eval_II_samples_start/1 
* CE 2 is refined into CE [45] 


#### Refined cost equations eval_II_samples_start/1 
* CE 45: eval_II_samples_start(B) = 0+ eval_II_samples_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_II_samples_start/1 
* CEs [45] --> Loop 36 

#### Loops of eval_II_samples_start/1 
* Loop 36: eval_II_samples_start(B) [] 

### Ranking functions of CR eval_II_samples_start(B) 

#### Partial ranking functions of CR eval_II_samples_start(B) 


### Resulting Chains:eval_II_samples_start(B) 
* [36]


### Merging Chains  eval_II_samples_start/1 into  External patterns of execution 
* [[36]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [23] 

 * loop 23:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1
#### Cost of phase [23]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1*it(23)+0
  Such that:it(23) =< -V_s_0+3
it(23) =< -V_s_0+V_s_0'

#### Cost of loops [26,27] 

 * loop 26:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1
 * loop 27:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1
#### Cost of phase [26,27]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
2*it(26)+0
  Such that:aux(1) =< -V_s_0+3
aux(2) =< -V_s_0+V_s_0'
it(26) =< aux(1)
it(26) =< aux(2)

#### Cost of phase [26,27]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
2*it(26)+0
  Such that:aux(1) =< -V_s_0+3
aux(2) =< -V_s_0+V_s_0'
it(26) =< aux(1)
it(26) =< aux(2)

#### Cost of loops [25] 

 * loop 25:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1
#### Cost of phase [25]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1*it(25)+0
  Such that:it(25) =< -V_s_0+3
it(25) =< -V_s_0+V_s_0'

#### Cost of phase [25]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1*it(25)+0
  Such that:it(25) =< -V_s_0+3
it(25) =< -V_s_0+V_s_0'

#### Cost of loops [24] 

 * loop 24:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1
#### Cost of phase [24]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1*it(24)+0
  Such that:it(24) =< -V_s_0+3
it(24) =< -V_s_0+V_s_0'

#### Cost of phase [24]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1*it(24)+0
  Such that:it(24) =< -V_s_0+3
it(24) =< -V_s_0+V_s_0'

#### Cost of loops [21,22] 

 * loop 21:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1
 * loop 22:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1
#### Cost of phase [21,22]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
2*it(21)+0
  Such that:aux(7) =< -V_s_0+3
aux(8) =< -V_s_0+V_s_0'
it(21) =< aux(7)
it(21) =< aux(8)

#### Cost of phase [21,22]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
2*it(21)+0
  Such that:aux(7) =< -V_s_0+3
aux(8) =< -V_s_0+V_s_0'
it(21) =< aux(7)
it(21) =< aux(8)

#### Cost of loops [20] 

 * loop 20:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1
#### Cost of phase [20]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1*it(20)+0
  Such that:it(20) =< -V_s_0+3
it(20) =< -V_s_0+V_s_0'

#### Cost of phase [20]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1*it(20)+0
  Such that:it(20) =< -V_s_0+3
it(20) =< -V_s_0+V_s_0'

#### Cost of loops [19] 

 * loop 19:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1
#### Cost of phase [19]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1*it(19)+0
  Such that:it(19) =< -V_s_0+3
it(19) =< -V_s_0+V_s_0'

#### Cost of phase [19]:eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B) -> [eval_II_samples_bb2_in(V_11',V_c_0',V_s_0',B')] 
1*it(19)+0
  Such that:it(19) =< -V_s_0+3
it(19) =< -V_s_0+V_s_0'

#### Cost of chains of eval_II_samples_bb2_in(V_11,V_c_0,V_s_0,B):
* Chain [[26,27],[23],28]: 3*it(23)+0
  Such that:aux(3) =< -V_s_0+3
it(23) =< aux(3)

  with precondition: [V_11+1=0,B=3,1>=V_s_0,V_s_0>=0] 

* Chain [[26,27],28]: 2*it(26)+0
  Such that:aux(4) =< -V_s_0+3
it(26) =< aux(4)

  with precondition: [V_11+1=0,B=3,2>=V_s_0,V_s_0>=0] 

* Chain [[25],[23],28]: 1*it(23)+1*it(25)+0
  Such that:it(23) =< -V_s_0+2
aux(5) =< -V_s_0+3
it(23) =< aux(5)
it(25) =< aux(5)

  with precondition: [V_11=1,B=3,0>=V_c_0+1,1>=V_s_0,V_s_0>=0] 

* Chain [[25],28]: 1*it(25)+0
  Such that:it(25) =< -V_s_0+3

  with precondition: [V_11=1,B=3,0>=V_c_0+1,2>=V_s_0,V_s_0>=0] 

* Chain [[24],[23],28]: 1*it(23)+1*it(24)+0
  Such that:it(23) =< -V_s_0+2
aux(6) =< -V_s_0+3
it(23) =< aux(6)
it(24) =< aux(6)

  with precondition: [V_11=1,B=3,1>=V_s_0,V_c_0>=1,V_s_0>=0] 

* Chain [[24],28]: 1*it(24)+0
  Such that:it(24) =< -V_s_0+3

  with precondition: [V_11=1,B=3,2>=V_s_0,V_c_0>=1,V_s_0>=0] 

* Chain [[23],28]: 1*it(23)+0
  Such that:it(23) =< -V_s_0+3

  with precondition: [V_c_0=0,B=3,2>=V_s_0,V_s_0>=0] 

* Chain [[21,22],[23],28]: 3*it(21)+0
  Such that:aux(9) =< -V_s_0+3
it(21) =< aux(9)

  with precondition: [B=3,0>=V_11+2,1>=V_s_0,V_s_0>=0] 

* Chain [[21,22],28]: 2*it(21)+0
  Such that:aux(10) =< -V_s_0+3
it(21) =< aux(10)

  with precondition: [B=3,0>=V_11+2,2>=V_s_0,V_s_0>=0] 

* Chain [[20],[23],28]: 2*it(20)+0
  Such that:aux(11) =< -V_s_0+3
it(20) =< aux(11)

  with precondition: [B=3,0>=V_c_0+1,1>=V_s_0,V_11>=2,V_s_0>=0] 

* Chain [[20],28]: 1*it(20)+0
  Such that:it(20) =< -V_s_0+3

  with precondition: [B=3,0>=V_c_0+1,2>=V_s_0,V_11>=2,V_s_0>=0] 

* Chain [[19],[23],28]: 2*it(19)+0
  Such that:aux(12) =< -V_s_0+3
it(19) =< aux(12)

  with precondition: [B=3,1>=V_s_0,V_11>=2,V_c_0>=1,V_s_0>=0] 

* Chain [[19],28]: 1*it(19)+0
  Such that:it(19) =< -V_s_0+3

  with precondition: [B=3,2>=V_s_0,V_11>=2,V_c_0>=1,V_s_0>=0] 


#### Cost of loops [29] 

 * loop 29:eval_II_samples_bb7_in(V_s_2,B) -> [eval_II_samples_bb7_in(V_s_2',B')] 
1
#### Cost of phase [29]:eval_II_samples_bb7_in(V_s_2,B) -> [eval_II_samples_bb7_in(V_s_2',B')] 
1*it(29)+0
  Such that:it(29) =< -V_s_2+3
it(29) =< -V_s_2+V_s_2'

#### Cost of chains of eval_II_samples_bb7_in(V_s_2,B):
* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< -V_s_2+3

  with precondition: [B=2,2>=V_s_2,V_s_2>=0] 


#### Cost of chains of eval_II_samples_bb6_in(B):
* Chain [31]: 1*s(23)+1
  Such that:s(23) =< 3

  with precondition: [] 


#### Cost of chains of eval_II_samples_6(V_7,B):
* Chain [32]: 90
  with precondition: [] 


#### Cost of loops [33] 

 * loop 33:eval_II_samples_bb4_in(V_6,V_s_1,B) -> [eval_II_samples_bb4_in(V_6',V_s_1',B')] 
1
#### Cost of phase [33]:eval_II_samples_bb4_in(V_6,V_s_1,B) -> [eval_II_samples_bb4_in(V_6',V_s_1',B')] 
1*it(33)+0
  Such that:it(33) =< -V_s_1+3
it(33) =< -V_s_1+V_s_1'

#### Cost of chains of eval_II_samples_bb4_in(V_6,V_s_1,B):
* Chain [[33],34]: 1*it(33)+0
  Such that:it(33) =< -V_s_1+3

  with precondition: [B=3,2>=V_s_1,V_s_1>=0] 


#### Cost of chains of eval_II_samples_bb0_in(B):
* Chain [35]: 96
  with precondition: [] 


#### Cost of chains of eval_II_samples_start(B):
* Chain [36]: 96
  with precondition: [] 


Closed-form bounds of eval_II_samples_start(B): 
-------------------------------------
* Chain [36] with precondition: [] 
    - Upper bound: 96 
    - Complexity: constant 

### Maximum cost of eval_II_samples_start(B): 96 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 83 ms.
* Invariants computed in 244 ms.
   - Backward Invariants 94 ms.
   - Transitive Invariants 56 ms.
* Refinement performed in 290 ms.
* Termination proved in 65 ms.
* Upper bounds computed in 276 ms.
   - Equation cost structures 68 ms.
   - Phase cost structures 106 ms.
   - Chain cost structures 121 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 1156 ms.

