Warning: Ignored call to eval_scan_bos_string_continue_stop/1 in equation eval_scan_bos_string_continue_bb28_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_scan_bos_string_continue_bb28_in/1]
1. recursive  : [eval_scan_bos_string_continue_21/8,eval_scan_bos_string_continue_22/9,eval_scan_bos_string_continue_bb9_in/7]
2. recursive  : [eval_scan_bos_string_continue_12/4,eval_scan_bos_string_continue_13/4,eval_scan_bos_string_continue_15/5,eval_scan_bos_string_continue_16/5,eval_scan_bos_string_continue_37/4,eval_scan_bos_string_continue_38/4,eval_scan_bos_string_continue_49/4,eval_scan_bos_string_continue_50/4,eval_scan_bos_string_continue_61/3,eval_scan_bos_string_continue_62/4,eval_scan_bos_string_continue_63/4,eval_scan_bos_string_continue_68/4,eval_scan_bos_string_continue_69/4,eval_scan_bos_string_continue_NewDefault_in/3,eval_scan_bos_string_continue_bb11_in/4,eval_scan_bos_string_continue_bb15_in/3,eval_scan_bos_string_continue_bb19_in/4,eval_scan_bos_string_continue_bb2_in/3,loop_cont_eval_scan_bos_string_continue_bb9_in/5]
3. recursive  : [eval_scan_bos_string_continue_81/2,eval_scan_bos_string_continue_82/2,eval_scan_bos_string_continue_91/2,eval_scan_bos_string_continue_92/2,eval_scan_bos_string_continue_bb22_in/2,eval_scan_bos_string_continue_bb26_in/2]
4. non_recursive  : [eval_scan_bos_string_continue_96/1]
5. non_recursive  : [eval_scan_bos_string_continue_95/1]
6. non_recursive  : [eval_scan_bos_string_continue_bb27_in/1]
7. non_recursive  : [loop_cont_eval_scan_bos_string_continue_bb22_in/2]
8. non_recursive  : [loop_cont_eval_scan_bos_string_continue_bb2_in/3]
9. non_recursive  : [eval_scan_bos_string_continue_1/1]
10. non_recursive  : [eval_scan_bos_string_continue_0/1]
11. non_recursive  : [eval_scan_bos_string_continue_bb0_in/1]
12. non_recursive  : [eval_scan_bos_string_continue_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_scan_bos_string_continue_bb9_in/7
2. SCC is partially evaluated into eval_scan_bos_string_continue_bb2_in/3
3. SCC is partially evaluated into eval_scan_bos_string_continue_bb22_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_scan_bos_string_continue_bb22_in/2
8. SCC is partially evaluated into loop_cont_eval_scan_bos_string_continue_bb2_in/3
9. SCC is partially evaluated into eval_scan_bos_string_continue_1/1
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_scan_bos_string_continue_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_scan_bos_string_continue_bb9_in/7 
* CE 20 is refined into CE [30] 
* CE 21 is refined into CE [31] 
* CE 22 is refined into CE [32] 
* CE 18 is refined into CE [33] 
* CE 19 is refined into CE [34] 


#### Refined cost equations eval_scan_bos_string_continue_bb9_in/7 
* CE 30: eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) = 0
     [V_35>=V_count_0,V_count_0>=1,B=2] 
* CE 31: eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) = 0
     [V_35>=V_count_0,0>=V_count_0+1,B=2] 
* CE 32: eval_scan_bos_string_continue_bb9_in(A,B,C,D,E,A,B) = 0
     [B>=0,E=3,D=0] 
* CE 33: eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,E,B,C,D)
     [V_35>=V_count_0,B>=2,V_count_0>=1,3>=B,V_count_0=E+2] 
* CE 34: eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,E,B,C,D)
     [V_35>=V_count_0,B>=2,3>=B,0>=V_count_0+1,V_count_0=E+2] 

### Cost equations --> "Loop" of eval_scan_bos_string_continue_bb9_in/7 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [31] --> Loop 27 
* CEs [32] --> Loop 28 

#### Loops of eval_scan_bos_string_continue_bb9_in/7 
* Loop 24: eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D)->  eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0',B,C,D)
                  [V_35>=V_count_0,B>=2,V_count_0>=1,3>=B,V_count_0=V_count_0'+2] 
* Loop 25: eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D)->  eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0',B,C,D)
                  [V_35>=V_count_0,B>=2,3>=B,0>=V_count_0+1,V_count_0=V_count_0'+2] 
* Loop 26: eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) [V_35>=V_count_0,V_count_0>=1,B=2] 
* Loop 27: eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) [V_35>=V_count_0,0>=V_count_0+1,B=2] 
* Loop 28: eval_scan_bos_string_continue_bb9_in(A,B,C,D,E,A,B) [B>=0,E=3,D=0] 

### Ranking functions of CR eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) 
* RF of phase [24]: [V_count_0/2]

#### Partial ranking functions of CR eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V_count_0/2


### Resulting Chains:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) 
* [[25]]...
* [[25],27]
* [[24],[25]]...
* [[24],[25],27]
* [[24],28]
* [[24],27]
* [[24],26]
* [28]
* [27]
* [26]


### Merging Chains  eval_scan_bos_string_continue_bb9_in/7 into  External patterns of execution 
* [[28]] --> 1 
* [[27],[27,[25]]] --> 2 
* [[26],[26,[24]],[27,[24]],[27,[25],[24]]] --> 3 
* [[28,[24]]] --> 4 
* [[[25]]] --> 5 
* [[[25],[24]]] --> 6 


### Specialization of cost equations eval_scan_bos_string_continue_bb2_in/3 
* CE 5 is refined into CE [35] 
* CE 11 is refined into CE [36,37,38,39] 
* CE 6 is refined into CE [40] 
* CE 12 is refined into CE [41,42,43,44] 
* CE 14 is refined into CE [45] 
* CE 13 is refined into CE [46] 
* CE 7 is refined into CE [47] 
* CE 9 is refined into CE [48,49,50,51] 
* CE 8 is refined into CE [52] 
* CE 10 is refined into CE [53,54,55,56] 


#### Refined cost equations eval_scan_bos_string_continue_bb2_in/3 
* CE 35: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 0
     [V_i_0>=1,B=2] 
* CE 36: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):2
     [V_i_0>=1,0>=D+1,F=2,B=2] 
* CE 37: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):3
     [D>=1,V_i_0>=1,F=2,B=2] 
* CE 38: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):5
     [V_i_0>=1,0>=D+1,F=2,B=2] 
* CE 39: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):6
     [D>=1,V_i_0>=1,F=2,B=2] 
* CE 40: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 0
     [0>=V_i_0+1,B=2] 
* CE 41: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):2
     [0>=D+1,0>=V_i_0+1,F=2,B=2] 
* CE 42: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):3
     [D>=1,0>=V_i_0+1,F=2,B=2] 
* CE 43: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):5
     [0>=D+1,0>=V_i_0+1,F=2,B=2] 
* CE 44: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):6
     [D>=1,0>=V_i_0+1,F=2,B=2] 
* CE 45: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 0
     [B=5,V_i_0=0] 
* CE 46: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 0
     [B=4,V_i_0=0] 
* CE 47: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb2_in(D,B,C)
     [V_i_0>=1,V_i_0=D+1] 
* CE 48: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 2+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,F,G,V_i_0,H):1+ eval_scan_bos_string_continue_bb2_in(I,B,C)
     [V_i_0>=1,V_i_0=I+1,H=0,G=3,F=0,D=0] 
* CE 49: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 2+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,V_i_0,D):4+ eval_scan_bos_string_continue_bb2_in(G,B,C)
     [D>=2,V_i_0>=1,V_i_0=G+1,F=3] 
* CE 50: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 2+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):5
     [V_i_0>=1,0>=D+1,I+1=G,F=3] 
* CE 51: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 2+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):6
     [D>=1,V_i_0>=1,I+1=G,F=3] 
* CE 52: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 1+ eval_scan_bos_string_continue_bb2_in(D,B,C)
     [0>=V_i_0+1,V_i_0=D+1] 
* CE 53: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 2+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,F,G,V_i_0,H):1+ eval_scan_bos_string_continue_bb2_in(I,B,C)
     [0>=V_i_0+1,V_i_0=I+1,H=0,G=3,F=0,D=0] 
* CE 54: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 2+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,V_i_0,D):4+ eval_scan_bos_string_continue_bb2_in(G,B,C)
     [D>=2,0>=V_i_0+1,V_i_0=G+1,F=3] 
* CE 55: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 2+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):5
     [0>=D+1,0>=V_i_0+1,I+1=G,F=3] 
* CE 56: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) = 2+ eval_scan_bos_string_continue_bb9_in(V_i_0,D,E,D,F,G,H):6
     [D>=1,0>=V_i_0+1,I+1=G,F=3] 

### Cost equations --> "Loop" of eval_scan_bos_string_continue_bb2_in/3 
* CEs [38,39,50,51] --> Loop 29 
* CEs [43,44,55,56] --> Loop 30 
* CEs [47,48,49] --> Loop 31 
* CEs [52,53,54] --> Loop 32 
* CEs [35,36,37] --> Loop 33 
* CEs [40,41,42] --> Loop 34 
* CEs [45] --> Loop 35 
* CEs [46] --> Loop 36 

#### Loops of eval_scan_bos_string_continue_bb2_in/3 
* Loop 29: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) [V_i_0>=1] 
* Loop 30: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) [0>=V_i_0+1] 
* Loop 31: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C)->  eval_scan_bos_string_continue_bb2_in(V_i_0',B,C)
                  [V_i_0>=1,V_i_0=V_i_0'+1] 
* Loop 32: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C)->  eval_scan_bos_string_continue_bb2_in(V_i_0',B,C)
                  [0>=V_i_0+1,V_i_0=V_i_0'+1] 
* Loop 33: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) [V_i_0>=1,B=2] 
* Loop 34: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) [0>=V_i_0+1,B=2] 
* Loop 35: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) [B=5,V_i_0=0] 
* Loop 36: eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) [B=4,V_i_0=0] 

### Ranking functions of CR eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) 
* RF of phase [31]: [V_i_0]

#### Partial ranking functions of CR eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V_i_0


### Resulting Chains:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) 
* [[32]]...
* [[32],34]
* [[32],30]...
* [[31],36]
* [[31],35]
* [[31],33]
* [[31],29]...
* [36]
* [35]
* [34]
* [33]
* [30]...
* [29]...


### Merging Chains  eval_scan_bos_string_continue_bb2_in/3 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 
* [[34],[34,[32]]] --> 3 
* [[33],[33,[31]]] --> 4 
* [[36,[31]]] --> 5 
* [[35,[31]]] --> 6 
* [[30],[[32]],[30,[32]]] --> 7 
* [[29]] --> 8 
* [[29,[31]]] --> 9 


### Specialization of cost equations eval_scan_bos_string_continue_bb22_in/2 
* CE 26 is refined into CE [57] 
* CE 25 is refined into CE [58] 
* CE 27 is refined into CE [59] 
* CE 23 is refined into CE [60] 
* CE 24 is refined into CE [61] 


#### Refined cost equations eval_scan_bos_string_continue_bb22_in/2 
* CE 57: eval_scan_bos_string_continue_bb22_in(V_i_1,B) = 0
     [V_i_1>=1,B=2] 
* CE 58: eval_scan_bos_string_continue_bb22_in(V_i_1,B) = 0
     [0>=V_i_1+1,B=2] 
* CE 59: eval_scan_bos_string_continue_bb22_in(V_i_1,B) = 0
     [B=5,V_i_1=0] 
* CE 60: eval_scan_bos_string_continue_bb22_in(V_i_1,B) = 1+ eval_scan_bos_string_continue_bb22_in(C,B)
     [V_i_1>=1,V_i_1=C+1] 
* CE 61: eval_scan_bos_string_continue_bb22_in(V_i_1,B) = 1+ eval_scan_bos_string_continue_bb22_in(C,B)
     [0>=V_i_1+1,V_i_1=C+1] 

### Cost equations --> "Loop" of eval_scan_bos_string_continue_bb22_in/2 
* CEs [60] --> Loop 37 
* CEs [61] --> Loop 38 
* CEs [57] --> Loop 39 
* CEs [58] --> Loop 40 
* CEs [59] --> Loop 41 

#### Loops of eval_scan_bos_string_continue_bb22_in/2 
* Loop 37: eval_scan_bos_string_continue_bb22_in(V_i_1,B)->  eval_scan_bos_string_continue_bb22_in(V_i_1',B)
                  [V_i_1>=1,V_i_1=V_i_1'+1] 
* Loop 38: eval_scan_bos_string_continue_bb22_in(V_i_1,B)->  eval_scan_bos_string_continue_bb22_in(V_i_1',B)
                  [0>=V_i_1+1,V_i_1=V_i_1'+1] 
* Loop 39: eval_scan_bos_string_continue_bb22_in(V_i_1,B) [V_i_1>=1,B=2] 
* Loop 40: eval_scan_bos_string_continue_bb22_in(V_i_1,B) [0>=V_i_1+1,B=2] 
* Loop 41: eval_scan_bos_string_continue_bb22_in(V_i_1,B) [B=5,V_i_1=0] 

### Ranking functions of CR eval_scan_bos_string_continue_bb22_in(V_i_1,B) 
* RF of phase [37]: [V_i_1]

#### Partial ranking functions of CR eval_scan_bos_string_continue_bb22_in(V_i_1,B) 
* Partial RF of phase [37]:
  - RF of loop [37:1]:
    V_i_1


### Resulting Chains:eval_scan_bos_string_continue_bb22_in(V_i_1,B) 
* [[38]]...
* [[38],40]
* [[37],41]
* [[37],39]
* [41]
* [40]
* [39]


### Merging Chains  eval_scan_bos_string_continue_bb22_in/2 into  External patterns of execution 
* [[41]] --> 1 
* [[40],[40,[38]]] --> 2 
* [[39],[39,[37]]] --> 3 
* [[41,[37]]] --> 4 
* [[[38]]] --> 5 


### Specialization of cost equations loop_cont_eval_scan_bos_string_continue_bb22_in/2 
* CE 29 is refined into CE [62] 
* CE 28 is refined into CE [63] 


#### Refined cost equations loop_cont_eval_scan_bos_string_continue_bb22_in/2 
* CE 62: loop_cont_eval_scan_bos_string_continue_bb22_in(C,A) = 0
     [C=5] 
* CE 63: loop_cont_eval_scan_bos_string_continue_bb22_in(C,A) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_scan_bos_string_continue_bb22_in/2 
* CEs [62] --> Loop 42 
* CEs [63] --> Loop 43 

#### Loops of loop_cont_eval_scan_bos_string_continue_bb22_in/2 
* Loop 42: loop_cont_eval_scan_bos_string_continue_bb22_in(C,A) [C=5] 
* Loop 43: loop_cont_eval_scan_bos_string_continue_bb22_in(C,A) [C=2] 

### Ranking functions of CR loop_cont_eval_scan_bos_string_continue_bb22_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_scan_bos_string_continue_bb22_in(C,A) 


### Resulting Chains:loop_cont_eval_scan_bos_string_continue_bb22_in(C,A) 
* [43]
* [42]


### Merging Chains  loop_cont_eval_scan_bos_string_continue_bb22_in/2 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations loop_cont_eval_scan_bos_string_continue_bb2_in/3 
* CE 17 is refined into CE [64] 
* CE 16 is refined into CE [65,66,67,68,69] 
* CE 15 is refined into CE [70] 


#### Refined cost equations loop_cont_eval_scan_bos_string_continue_bb2_in/3 
* CE 64: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) = 0
     [C=5] 
* CE 65: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) = 1+ eval_scan_bos_string_continue_bb22_in(D,E):1+ loop_cont_eval_scan_bos_string_continue_bb22_in(F,B):2
     [F=5,E=5,D=0,A=0,C=4] 
* CE 66: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) = 1+ eval_scan_bos_string_continue_bb22_in(A,D):2+ loop_cont_eval_scan_bos_string_continue_bb22_in(E,B):1
     [0>=A+1,E=2,D=2,C=4] 
* CE 67: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) = 1+ eval_scan_bos_string_continue_bb22_in(A,D):3+ loop_cont_eval_scan_bos_string_continue_bb22_in(E,B):1
     [A>=1,E=2,D=2,C=4] 
* CE 68: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) = 1+ eval_scan_bos_string_continue_bb22_in(A,D):4+ loop_cont_eval_scan_bos_string_continue_bb22_in(E,B):2
     [A>=1,E=5,D=5,C=4] 
* CE 69: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) = 1+ eval_scan_bos_string_continue_bb22_in(A,D):5
     [0>=A+1,C=4] 
* CE 70: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_scan_bos_string_continue_bb2_in/3 
* CEs [64] --> Loop 44 
* CEs [67,68] --> Loop 45 
* CEs [66] --> Loop 46 
* CEs [65] --> Loop 47 
* CEs [70] --> Loop 48 
* CEs [69] --> Loop 49 

#### Loops of loop_cont_eval_scan_bos_string_continue_bb2_in/3 
* Loop 44: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) [C=5] 
* Loop 45: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) [A>=1,C=4] 
* Loop 46: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) [0>=A+1,C=4] 
* Loop 47: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) [A=0,C=4] 
* Loop 48: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) [C=2] 
* Loop 49: loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) [0>=A+1,C=4] 

### Ranking functions of CR loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) 


### Resulting Chains:loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B) 
* [49]...
* [48]
* [47]
* [46]
* [45]
* [44]


### Merging Chains  loop_cont_eval_scan_bos_string_continue_bb2_in/3 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 
* [[46]] --> 3 
* [[45]] --> 4 
* [[44]] --> 5 
* [[49]] --> 6 


### Specialization of cost equations eval_scan_bos_string_continue_1/1 
* CE 3 is refined into CE [71] 
* CE 4 is refined into CE [72,73,74,75,76,77,78,79,80,81,82,83,84,85,86] 


#### Refined cost equations eval_scan_bos_string_continue_1/1 
* CE 71: eval_scan_bos_string_continue_1(B) = 0
     [] 
* CE 72: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):1+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,G,B):2
     [G=0,F=4,E=0,D=4,C=0] 
* CE 73: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):1+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):3
     [0>=E+1,F=4,D=4,C=0] 
* CE 74: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):1+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):4
     [E>=1,F=4,D=4,C=0] 
* CE 75: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):1+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):6
     [0>=E+1,F=4,D=4,C=0] 
* CE 76: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):2+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):5
     [F=5,D=5,C=0] 
* CE 77: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):3+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):1
     [0>=C+1,F=2,D=2] 
* CE 78: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):4+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):1
     [C>=1,F=2,D=2] 
* CE 79: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):5+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,G,B):2
     [C>=1,G=0,F=4,E=0,D=4] 
* CE 80: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):5+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):3
     [C>=1,0>=E+1,F=4,D=4] 
* CE 81: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):5+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):4
     [E>=1,C>=1,F=4,D=4] 
* CE 82: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):5+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):6
     [C>=1,0>=E+1,F=4,D=4] 
* CE 83: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):6+ loop_cont_eval_scan_bos_string_continue_bb2_in(F,E,B):5
     [C>=1,F=5,D=5] 
* CE 84: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):7
     [0>=C+1] 
* CE 85: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):8
     [C>=1] 
* CE 86: eval_scan_bos_string_continue_1(B) = 1+ eval_scan_bos_string_continue_bb2_in(C,D,E):9
     [C>=2] 

### Cost equations --> "Loop" of eval_scan_bos_string_continue_1/1 
* CEs [75,82,84,85,86] --> Loop 50 
* CEs [71,72,73,74,76,77,78,79,80,81,83] --> Loop 51 

#### Loops of eval_scan_bos_string_continue_1/1 
* Loop 50: eval_scan_bos_string_continue_1(B) [] 
* Loop 51: eval_scan_bos_string_continue_1(B) [] 

### Ranking functions of CR eval_scan_bos_string_continue_1(B) 

#### Partial ranking functions of CR eval_scan_bos_string_continue_1(B) 


### Resulting Chains:eval_scan_bos_string_continue_1(B) 
* [51]
* [50]...


### Merging Chains  eval_scan_bos_string_continue_1/1 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


### Specialization of cost equations eval_scan_bos_string_continue_start/1 
* CE 2 is refined into CE [87,88] 


#### Refined cost equations eval_scan_bos_string_continue_start/1 
* CE 87: eval_scan_bos_string_continue_start(B) = 0+ eval_scan_bos_string_continue_1(B):1
     [] 
* CE 88: eval_scan_bos_string_continue_start(B) = 0+ eval_scan_bos_string_continue_1(B):2
     [] 

### Cost equations --> "Loop" of eval_scan_bos_string_continue_start/1 
* CEs [88] --> Loop 52 
* CEs [87] --> Loop 53 

#### Loops of eval_scan_bos_string_continue_start/1 
* Loop 52: eval_scan_bos_string_continue_start(B) [] 
* Loop 53: eval_scan_bos_string_continue_start(B) [] 

### Ranking functions of CR eval_scan_bos_string_continue_start(B) 

#### Partial ranking functions of CR eval_scan_bos_string_continue_start(B) 


### Resulting Chains:eval_scan_bos_string_continue_start(B) 
* [53]
* [52]...


### Merging Chains  eval_scan_bos_string_continue_start/1 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [25] 

 * loop 25:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) -> [eval_scan_bos_string_continue_bb9_in(V_i_0',V_35',V_45',V_count_0',B',C',D')] 
1
#### Cost of phase [25]:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) -> [eval_scan_bos_string_continue_bb9_in(V_i_0',V_35',V_45',V_count_0',B',C',D')] 
1*it(25)+0
#### Cost of phase [25]:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) -> [eval_scan_bos_string_continue_bb9_in(V_i_0',V_35',V_45',V_count_0',B',C',D')] 
1*it(25)+0
#### Cost of loops [24] 

 * loop 24:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) -> [eval_scan_bos_string_continue_bb9_in(V_i_0',V_35',V_45',V_count_0',B',C',D')] 
1
#### Cost of phase [24]:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) -> [eval_scan_bos_string_continue_bb9_in(V_i_0',V_35',V_45',V_count_0',B',C',D')] 
1*it(24)+0
  Such that:it(24) =< V_count_0/2
it(24) =< V_count_0/2-V_count_0'/2

#### Cost of phase [24]:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) -> [eval_scan_bos_string_continue_bb9_in(V_i_0',V_35',V_45',V_count_0',B',C',D')] 
1*it(24)+0
  Such that:it(24) =< V_count_0/2
it(24) =< V_count_0/2-V_count_0'/2

#### Cost of phase [24]:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) -> [eval_scan_bos_string_continue_bb9_in(V_i_0',V_35',V_45',V_count_0',B',C',D')] 
1*it(24)+0
  Such that:it(24) =< V_count_0/2
it(24) =< V_count_0/2-V_count_0'/2

#### Cost of phase [24]:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) -> [eval_scan_bos_string_continue_bb9_in(V_i_0',V_35',V_45',V_count_0',B',C',D')] 
1*it(24)+0
  Such that:it(24) =< V_count_0/2
it(24) =< V_count_0/2-V_count_0'/2

#### Cost of phase [24]:eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D) -> [eval_scan_bos_string_continue_bb9_in(V_i_0',V_35',V_45',V_count_0',B',C',D')] 
1*it(24)+0
  Such that:it(24) =< V_count_0/2
it(24) =< V_count_0/2-V_count_0'/2

#### Cost of chains of eval_scan_bos_string_continue_bb9_in(V_i_0,V_35,V_45,V_count_0,B,C,D):
* Chain [[25]]...: 1*it(25)+0
  with precondition: [0>=V_count_0+1,V_35>=V_count_0,B>=2,3>=B] 

* Chain [[25],27]: 1*it(25)+0
  with precondition: [B=2,0>=V_count_0+1,V_35>=V_count_0] 

* Chain [[24],[25]]...: 1*it(24)+1*it(25)+0
  Such that:it(24) =< V_count_0/2

  with precondition: [3>=B,V_count_0>=1,B>=2,V_35>=V_count_0] 

* Chain [[24],[25],27]: 1*it(24)+1*it(25)+0
  Such that:it(24) =< V_count_0/2

  with precondition: [B=2,V_count_0>=1,V_35>=V_count_0] 

* Chain [[24],28]: 1*it(24)+0
  Such that:it(24) =< V_count_0/2

  with precondition: [B=3,V_i_0=C,V_35=D,V_count_0>=2,V_35>=V_count_0] 

* Chain [[24],27]: 1*it(24)+0
  Such that:it(24) =< V_count_0/2

  with precondition: [B=2,V_count_0>=1,V_35>=V_count_0] 

* Chain [[24],26]: 1*it(24)+0
  Such that:it(24) =< V_count_0/2

  with precondition: [B=2,V_count_0>=3,V_35>=V_count_0] 

* Chain [28]: 0
  with precondition: [V_count_0=0,B=3,C=V_i_0,V_35=D,V_35>=0] 

* Chain [27]: 0
  with precondition: [B=2,0>=V_count_0+1,V_35>=V_count_0] 

* Chain [26]: 0
  with precondition: [B=2,V_count_0>=1,V_35>=V_count_0] 


#### Cost of loops [32] 

 * loop 32:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) -> [eval_scan_bos_string_continue_bb2_in(V_i_0',B',C')] 
1*s(7)+0
#### Cost of phase [32]:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) -> [eval_scan_bos_string_continue_bb2_in(V_i_0',B',C')] 
1*s(8)+0
#### Cost of phase [32]:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) -> [eval_scan_bos_string_continue_bb2_in(V_i_0',B',C')] 
1*s(8)+0
#### Cost of phase [32]:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) -> [eval_scan_bos_string_continue_bb2_in(V_i_0',B',C')] 
1*s(8)+0
#### Cost of loops [31] 

 * loop 31:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) -> [eval_scan_bos_string_continue_bb2_in(V_i_0',B',C')] 
1*s(20)+0
#### Cost of phase [31]:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) -> [eval_scan_bos_string_continue_bb2_in(V_i_0',B',C')] 
1*s(21)+0
#### Cost of phase [31]:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) -> [eval_scan_bos_string_continue_bb2_in(V_i_0',B',C')] 
1*s(21)+0
#### Cost of phase [31]:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) -> [eval_scan_bos_string_continue_bb2_in(V_i_0',B',C')] 
1*s(21)+0
#### Cost of phase [31]:eval_scan_bos_string_continue_bb2_in(V_i_0,B,C) -> [eval_scan_bos_string_continue_bb2_in(V_i_0',B',C')] 
1*s(21)+0
#### Cost of chains of eval_scan_bos_string_continue_bb2_in(V_i_0,B,C):
* Chain [[32]]...: 1*s(8)+0
  with precondition: [0>=V_i_0+1] 

* Chain [[32],34]: 2*aux(4)+0
  with precondition: [B=2,0>=V_i_0+1] 

* Chain [[32],30]...: 2*aux(5)+0
  with precondition: [0>=V_i_0+1] 

* Chain [[31],36]: 1*s(21)+0
  with precondition: [B=4,V_i_0>=1] 

* Chain [[31],35]: 1*s(21)+0
  with precondition: [B=5,V_i_0>=1] 

* Chain [[31],33]: 2*aux(7)+0
  with precondition: [B=2,V_i_0>=2] 

* Chain [[31],29]...: 2*aux(8)+0
  with precondition: [V_i_0>=2] 

* Chain [36]: 0
  with precondition: [V_i_0=0,B=4] 

* Chain [35]: 0
  with precondition: [V_i_0=0,B=5] 

* Chain [34]: 1*aux(4)+0
  with precondition: [B=2,0>=V_i_0+1] 

* Chain [33]: 1*aux(7)+0
  with precondition: [B=2,V_i_0>=1] 

* Chain [30]...: 1*aux(5)+0
  with precondition: [0>=V_i_0+1] 

* Chain [29]...: 1*aux(8)+0
  with precondition: [V_i_0>=1] 


#### Cost of loops [38] 

 * loop 38:eval_scan_bos_string_continue_bb22_in(V_i_1,B) -> [eval_scan_bos_string_continue_bb22_in(V_i_1',B')] 
1
#### Cost of phase [38]:eval_scan_bos_string_continue_bb22_in(V_i_1,B) -> [eval_scan_bos_string_continue_bb22_in(V_i_1',B')] 
1*it(38)+0
#### Cost of phase [38]:eval_scan_bos_string_continue_bb22_in(V_i_1,B) -> [eval_scan_bos_string_continue_bb22_in(V_i_1',B')] 
1*it(38)+0
#### Cost of loops [37] 

 * loop 37:eval_scan_bos_string_continue_bb22_in(V_i_1,B) -> [eval_scan_bos_string_continue_bb22_in(V_i_1',B')] 
1
#### Cost of phase [37]:eval_scan_bos_string_continue_bb22_in(V_i_1,B) -> [eval_scan_bos_string_continue_bb22_in(V_i_1',B')] 
1*it(37)+0
  Such that:it(37) =< V_i_1
it(37) =< V_i_1-V_i_1'

#### Cost of phase [37]:eval_scan_bos_string_continue_bb22_in(V_i_1,B) -> [eval_scan_bos_string_continue_bb22_in(V_i_1',B')] 
1*it(37)+0
  Such that:it(37) =< V_i_1
it(37) =< V_i_1-V_i_1'

#### Cost of chains of eval_scan_bos_string_continue_bb22_in(V_i_1,B):
* Chain [[38]]...: 1*it(38)+0
  with precondition: [0>=V_i_1+1] 

* Chain [[38],40]: 1*it(38)+0
  with precondition: [B=2,0>=V_i_1+1] 

* Chain [[37],41]: 1*it(37)+0
  Such that:it(37) =< V_i_1

  with precondition: [B=5,V_i_1>=1] 

* Chain [[37],39]: 1*it(37)+0
  Such that:it(37) =< V_i_1

  with precondition: [B=2,V_i_1>=2] 

* Chain [41]: 0
  with precondition: [V_i_1=0,B=5] 

* Chain [40]: 0
  with precondition: [B=2,0>=V_i_1+1] 

* Chain [39]: 0
  with precondition: [B=2,V_i_1>=1] 


#### Cost of chains of loop_cont_eval_scan_bos_string_continue_bb22_in(C,A):
* Chain [43]: 0
  with precondition: [C=2] 

* Chain [42]: 0
  with precondition: [C=5] 


#### Cost of chains of loop_cont_eval_scan_bos_string_continue_bb2_in(C,A,B):
* Chain [49]...: 1*s(41)+1
  with precondition: [C=4,0>=A+1] 

* Chain [48]: 0
  with precondition: [C=2] 

* Chain [47]: 1
  with precondition: [C=4,A=0] 

* Chain [46]: 1*s(42)+1
  with precondition: [C=4,0>=A+1] 

* Chain [45]: 2*s(43)+1
  Such that:aux(13) =< A
s(43) =< aux(13)

  with precondition: [C=4,A>=1] 

* Chain [44]: 0
  with precondition: [C=5] 


#### Cost of chains of eval_scan_bos_string_continue_1(B):
* Chain [51]: 1*aux(14)+0
  with precondition: [] 

* Chain [50]...: 1*aux(15)+0
  with precondition: [] 


#### Cost of chains of eval_scan_bos_string_continue_start(B):
* Chain [53]: 1*s(63)+0
  with precondition: [] 

* Chain [52]...: 1*s(64)+0
  with precondition: [] 


Closed-form bounds of eval_scan_bos_string_continue_start(B): 
-------------------------------------
* Chain [53] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [52]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_scan_bos_string_continue_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 59 ms.
* Invariants computed in 56 ms.
   - Backward Invariants 31 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 100 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 79 ms.
   - Equation cost structures 34 ms.
   - Phase cost structures 17 ms.
   - Chain cost structures 35 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 356 ms.

