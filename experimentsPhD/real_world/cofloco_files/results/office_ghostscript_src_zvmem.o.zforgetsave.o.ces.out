Warning: Ignored call to eval_zforgetsave_stop/1 in equation eval_zforgetsave_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_zforgetsave_7/1,eval_zforgetsave_8/1,eval_zforgetsave_9/1,eval_zforgetsave_bb2_in/1]
1. non_recursive  : [eval_zforgetsave_bb4_in/1]
2. non_recursive  : [eval_zforgetsave_19/1]
3. non_recursive  : [eval_zforgetsave_18/2]
4. non_recursive  : [eval_zforgetsave_17/2]
5. non_recursive  : [eval_zforgetsave_16/2]
6. non_recursive  : [eval_zforgetsave_15/2]
7. non_recursive  : [eval_zforgetsave_14/1]
8. non_recursive  : [eval_zforgetsave_13/1]
9. non_recursive  : [eval_zforgetsave_12/1]
10. non_recursive  : [eval_zforgetsave_11/1]
11. non_recursive  : [eval_zforgetsave_10/1]
12. non_recursive  : [loop_cont_eval_zforgetsave_bb2_in/2]
13. non_recursive  : [eval_zforgetsave_6/1]
14. non_recursive  : [eval_zforgetsave_5/1]
15. non_recursive  : [eval_zforgetsave_4/1]
16. non_recursive  : [eval_zforgetsave_3/1]
17. non_recursive  : [eval_zforgetsave_2/1]
18. non_recursive  : [eval_zforgetsave_1/1]
19. non_recursive  : [eval_zforgetsave_0/1]
20. non_recursive  : [eval_zforgetsave_bb0_in/1]
21. non_recursive  : [eval_zforgetsave_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_zforgetsave_bb2_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_zforgetsave_6/1
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_zforgetsave_1/1
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_zforgetsave_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_zforgetsave_bb2_in/1 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_zforgetsave_bb2_in/1 
* CE 8: eval_zforgetsave_bb2_in(B) = 1+ eval_zforgetsave_bb2_in(C)
     [C=2,B=2] 
* CE 9: eval_zforgetsave_bb2_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_zforgetsave_bb2_in/1 
* CEs [9] --> Loop 6 
* CEs [8] --> Loop 7 

#### Loops of eval_zforgetsave_bb2_in/1 
* Loop 6: eval_zforgetsave_bb2_in(B) [B=2] 
* Loop 7: eval_zforgetsave_bb2_in(B)->  eval_zforgetsave_bb2_in(B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_zforgetsave_bb2_in(B) 

#### Partial ranking functions of CR eval_zforgetsave_bb2_in(B) 


### Resulting Chains:eval_zforgetsave_bb2_in(B) 
* [[7]]...
* [[7],6]
* [6]


### Merging Chains  eval_zforgetsave_bb2_in/1 into  External patterns of execution 
* [[6],[6,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_zforgetsave_6/1 
* CE 5 is refined into CE [10,11] 


#### Refined cost equations eval_zforgetsave_6/1 
* CE 10: eval_zforgetsave_6(B) = 1+ eval_zforgetsave_bb2_in(C):1
     [C=2] 
* CE 11: eval_zforgetsave_6(B) = 1+ eval_zforgetsave_bb2_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_zforgetsave_6/1 
* CEs [11] --> Loop 8 
* CEs [10] --> Loop 9 

#### Loops of eval_zforgetsave_6/1 
* Loop 8: eval_zforgetsave_6(B) [] 
* Loop 9: eval_zforgetsave_6(B) [] 

### Ranking functions of CR eval_zforgetsave_6(B) 

#### Partial ranking functions of CR eval_zforgetsave_6(B) 


### Resulting Chains:eval_zforgetsave_6(B) 
* [9]
* [8]...


### Merging Chains  eval_zforgetsave_6/1 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations eval_zforgetsave_1/1 
* CE 3 is refined into CE [12] 
* CE 4 is refined into CE [13,14] 


#### Refined cost equations eval_zforgetsave_1/1 
* CE 12: eval_zforgetsave_1(B) = 0
     [] 
* CE 13: eval_zforgetsave_1(B) = 0+ eval_zforgetsave_6(B):1
     [] 
* CE 14: eval_zforgetsave_1(B) = 0+ eval_zforgetsave_6(B):2
     [] 

### Cost equations --> "Loop" of eval_zforgetsave_1/1 
* CEs [14] --> Loop 10 
* CEs [12,13] --> Loop 11 

#### Loops of eval_zforgetsave_1/1 
* Loop 10: eval_zforgetsave_1(B) [] 
* Loop 11: eval_zforgetsave_1(B) [] 

### Ranking functions of CR eval_zforgetsave_1(B) 

#### Partial ranking functions of CR eval_zforgetsave_1(B) 


### Resulting Chains:eval_zforgetsave_1(B) 
* [11]
* [10]...


### Merging Chains  eval_zforgetsave_1/1 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_zforgetsave_start/1 
* CE 2 is refined into CE [15,16] 


#### Refined cost equations eval_zforgetsave_start/1 
* CE 15: eval_zforgetsave_start(B) = 0+ eval_zforgetsave_1(B):1
     [] 
* CE 16: eval_zforgetsave_start(B) = 0+ eval_zforgetsave_1(B):2
     [] 

### Cost equations --> "Loop" of eval_zforgetsave_start/1 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_zforgetsave_start/1 
* Loop 12: eval_zforgetsave_start(B) [] 
* Loop 13: eval_zforgetsave_start(B) [] 

### Ranking functions of CR eval_zforgetsave_start(B) 

#### Partial ranking functions of CR eval_zforgetsave_start(B) 


### Resulting Chains:eval_zforgetsave_start(B) 
* [13]
* [12]...


### Merging Chains  eval_zforgetsave_start/1 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_zforgetsave_bb2_in(B) -> [eval_zforgetsave_bb2_in(B')] 
1
#### Cost of phase [7]:eval_zforgetsave_bb2_in(B) -> [eval_zforgetsave_bb2_in(B')] 
1*it(7)+0
#### Cost of phase [7]:eval_zforgetsave_bb2_in(B) -> [eval_zforgetsave_bb2_in(B')] 
1*it(7)+0
#### Cost of chains of eval_zforgetsave_bb2_in(B):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [B=2] 

* Chain [[7],6]: 1*it(7)+0
  with precondition: [B=2] 

* Chain [6]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_zforgetsave_6(B):
* Chain [9]: 1*s(2)+1
  with precondition: [] 

* Chain [8]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_zforgetsave_1(B):
* Chain [11]: 1*aux(2)+0
  with precondition: [] 

* Chain [10]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_zforgetsave_start(B):
* Chain [13]: 1*s(6)+0
  with precondition: [] 

* Chain [12]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_zforgetsave_start(B): 
-------------------------------------
* Chain [13] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [12]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_zforgetsave_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 15 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 91 ms.

