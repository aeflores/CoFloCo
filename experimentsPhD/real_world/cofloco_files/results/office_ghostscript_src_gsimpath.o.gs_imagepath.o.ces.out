Warning: Ignored call to eval_gs_imagepath_stop/1 in equation eval_gs_imagepath_bb14_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_gs_imagepath_11/6,eval_gs_imagepath_12/6,eval_gs_imagepath_14/7,eval_gs_imagepath_15/7,eval_gs_imagepath_17/8,eval_gs_imagepath_18/8,eval_gs_imagepath_21/10,eval_gs_imagepath_22/10,eval_gs_imagepath_23/8,eval_gs_imagepath_24/8,eval_gs_imagepath_28/8,eval_gs_imagepath_29/8,eval_gs_imagepath_30/8,eval_gs_imagepath_31/8,eval_gs_imagepath_32/8,eval_gs_imagepath_33/8,eval_gs_imagepath_bb12_in/6,eval_gs_imagepath_bb3_in/6,eval_gs_imagepath_bb8_in/8]
1. recursive  : [eval_gs_imagepath_bb1_in/3,loop_cont_eval_gs_imagepath_bb3_in/4]
2. non_recursive  : [eval_gs_imagepath_bb14_in/1]
3. non_recursive  : [loop_cont_eval_gs_imagepath_bb1_in/2]
4. non_recursive  : [eval_gs_imagepath_bb0_in/3]
5. non_recursive  : [eval_gs_imagepath_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_gs_imagepath_bb3_in/6
1. SCC is partially evaluated into eval_gs_imagepath_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_gs_imagepath_bb0_in/3
5. SCC is partially evaluated into eval_gs_imagepath_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gs_imagepath_bb3_in/6 
* CE 11 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 10 is refined into CE [14] 


#### Refined cost equations eval_gs_imagepath_bb3_in/6 
* CE 12: eval_gs_imagepath_bb3_in(A,B,C,D,A,E) = 0
     [A>=C+1,B>=0,0>=C+1,B=E+1,D=3] 
* CE 13: eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D) = 0
     [V_width>=V_x_0+1,V_x_0>=0,V_y_0>=0,B=2] 
* CE 14: eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D) = 1+ eval_gs_imagepath_bb3_in(V_width,V_y_0,E,B,C,D)
     [V_width>=E+2,E+1>=0,B>=2,V_y_0>=0,3>=B,E+1=V_x_0] 

### Cost equations --> "Loop" of eval_gs_imagepath_bb3_in/6 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of eval_gs_imagepath_bb3_in/6 
* Loop 11: eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D)->  eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0',B,C,D)
                  [V_width>=V_x_0'+2,V_x_0'+1>=0,B>=2,V_y_0>=0,3>=B,V_x_0'+1=V_x_0] 
* Loop 12: eval_gs_imagepath_bb3_in(A,B,C,D,A,E) [A>=C+1,B>=0,0>=C+1,B=E+1,D=3] 
* Loop 13: eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D) [V_width>=V_x_0+1,V_x_0>=0,V_y_0>=0,B=2] 

### Ranking functions of CR eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D) 
* RF of phase [11]: [V_x_0+1]

#### Partial ranking functions of CR eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_x_0+1


### Resulting Chains:eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D) 
* [[11],13]
* [[11],12]
* [13]
* [12]


### Merging Chains  eval_gs_imagepath_bb3_in/6 into  External patterns of execution 
* [[13],[13,[11]]] --> 1 
* [[12]] --> 2 
* [[12,[11]]] --> 3 


### Specialization of cost equations eval_gs_imagepath_bb1_in/3 
* CE 7 is refined into CE [15] 
* CE 8 is refined into CE [16] 
* CE 6 is refined into CE [17,18] 


#### Refined cost equations eval_gs_imagepath_bb1_in/3 
* CE 15: eval_gs_imagepath_bb1_in(V_width,V_y_0,B) = 1+ eval_gs_imagepath_bb3_in(C,V_y_0,D,E,F,G):1
     [D>=0,V_y_0>=0,D+1=C,D+1=V_width,E=2,B=2] 
* CE 16: eval_gs_imagepath_bb1_in(V_width,V_y_0,B) = 0
     [0>=V_y_0+1,B=2] 
* CE 17: eval_gs_imagepath_bb1_in(V_width,V_y_0,B) = 2+ eval_gs_imagepath_bb3_in(V_width,C,D,E,V_width,F):2+ eval_gs_imagepath_bb1_in(V_width,F,G)
     [F+1>=0,0>=V_width,V_width=D+1,F+1=C,F+1=V_y_0,G=2,E=3,B=2] 
* CE 18: eval_gs_imagepath_bb1_in(V_width,V_y_0,B) = 2+ eval_gs_imagepath_bb3_in(V_width,C,D,E,V_width,F):3+ eval_gs_imagepath_bb1_in(V_width,F,G)
     [F+1>=0,V_width>=1,V_width=D+1,F+1=C,F+1=V_y_0,G=2,E=3,B=2] 

### Cost equations --> "Loop" of eval_gs_imagepath_bb1_in/3 
* CEs [18] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

#### Loops of eval_gs_imagepath_bb1_in/3 
* Loop 14: eval_gs_imagepath_bb1_in(V_width,V_y_0,B)->  eval_gs_imagepath_bb1_in(V_width,V_y_0',B')
                  [V_y_0>=0,V_width>=1,V_y_0=V_y_0'+1,B'=2,B=2] 
* Loop 15: eval_gs_imagepath_bb1_in(V_width,V_y_0,B)->  eval_gs_imagepath_bb1_in(V_width,V_y_0',B')
                  [V_y_0>=0,0>=V_width,V_y_0=V_y_0'+1,B'=2,B=2] 
* Loop 16: eval_gs_imagepath_bb1_in(V_width,V_y_0,B) [V_y_0>=0,V_width>=1,B=2] 
* Loop 17: eval_gs_imagepath_bb1_in(V_width,V_y_0,B) [0>=V_y_0+1,B=2] 

### Ranking functions of CR eval_gs_imagepath_bb1_in(V_width,V_y_0,B) 
* RF of phase [14]: [V_y_0+1]
* RF of phase [15]: [V_y_0+1]

#### Partial ranking functions of CR eval_gs_imagepath_bb1_in(V_width,V_y_0,B) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_y_0+1
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_y_0+1


### Resulting Chains:eval_gs_imagepath_bb1_in(V_width,V_y_0,B) 
* [[15],17]
* [[14],17]
* [[14],16]
* [17]
* [16]


### Merging Chains  eval_gs_imagepath_bb1_in/3 into  External patterns of execution 
* [[17,[15]]] --> 1 
* [[17]] --> 2 
* [[16],[16,[14]],[17,[14]]] --> 3 


### Specialization of cost equations eval_gs_imagepath_bb0_in/3 
* CE 4 is refined into CE [19,20,21] 
* CE 5 is refined into CE [22,23] 
* CE 3 is refined into CE [24,25] 


#### Refined cost equations eval_gs_imagepath_bb0_in/3 
* CE 19: eval_gs_imagepath_bb0_in(V_width,V_height,B) = 1+ eval_gs_imagepath_bb1_in(V_width,C,D):1
     [C>=0,V_width+6>=0,0>=V_width,C+1=V_height,D=2] 
* CE 20: eval_gs_imagepath_bb0_in(V_width,V_height,B) = 1+ eval_gs_imagepath_bb1_in(V_width,C,D):2
     [V_width+6>=0,0>=C+1,C+1=V_height,D=2] 
* CE 21: eval_gs_imagepath_bb0_in(V_width,V_height,B) = 1+ eval_gs_imagepath_bb1_in(V_width,C,D):3
     [C>=0,V_width>=1,C+1=V_height,D=2] 
* CE 22: eval_gs_imagepath_bb0_in(V_width,V_height,B) = 1+ eval_gs_imagepath_bb1_in(V_width,C,D):1
     [C>=0,0>=V_width+8,C+1=V_height,D=2] 
* CE 23: eval_gs_imagepath_bb0_in(V_width,V_height,B) = 1+ eval_gs_imagepath_bb1_in(V_width,C,D):2
     [0>=C+1,0>=V_width+8,C+1=V_height,D=2] 
* CE 24: eval_gs_imagepath_bb0_in(V_width,V_height,B) = 1+ eval_gs_imagepath_bb1_in(C,D,E):1
     [D>=0,D+1=V_height,E=2,C+7=0,V_width+7=0] 
* CE 25: eval_gs_imagepath_bb0_in(V_width,V_height,B) = 1+ eval_gs_imagepath_bb1_in(C,D,E):2
     [0>=D+1,D+1=V_height,E=2,C+7=0,V_width+7=0] 

### Cost equations --> "Loop" of eval_gs_imagepath_bb0_in/3 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [19] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [25] --> Loop 24 

#### Loops of eval_gs_imagepath_bb0_in/3 
* Loop 18: eval_gs_imagepath_bb0_in(V_width,V_height,B) [V_height>=1,V_width>=1] 
* Loop 19: eval_gs_imagepath_bb0_in(V_width,V_height,B) [V_width+6>=0,0>=V_height] 
* Loop 20: eval_gs_imagepath_bb0_in(V_width,V_height,B) [V_height>=1,0>=V_width+8] 
* Loop 21: eval_gs_imagepath_bb0_in(V_width,V_height,B) [0>=V_height,0>=V_width+8] 
* Loop 22: eval_gs_imagepath_bb0_in(V_width,V_height,B) [V_height>=1,V_width+6>=0,0>=V_width] 
* Loop 23: eval_gs_imagepath_bb0_in(V_width,V_height,B) [V_height>=1,V_width+7=0] 
* Loop 24: eval_gs_imagepath_bb0_in(V_width,V_height,B) [0>=V_height,V_width+7=0] 

### Ranking functions of CR eval_gs_imagepath_bb0_in(V_width,V_height,B) 

#### Partial ranking functions of CR eval_gs_imagepath_bb0_in(V_width,V_height,B) 


### Resulting Chains:eval_gs_imagepath_bb0_in(V_width,V_height,B) 
* [24]
* [23]
* [22]
* [21]
* [20]
* [19]
* [18]


### Merging Chains  eval_gs_imagepath_bb0_in/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 
* [[21]] --> 4 
* [[20]] --> 5 
* [[19]] --> 6 
* [[18]] --> 7 


### Specialization of cost equations eval_gs_imagepath_start/3 
* CE 2 is refined into CE [26,27,28,29,30,31,32] 


#### Refined cost equations eval_gs_imagepath_start/3 
* CE 26: eval_gs_imagepath_start(V_width,V_height,B) = 0+ eval_gs_imagepath_bb0_in(C,V_height,B):1
     [0>=V_height,C+7=0,V_width+7=0] 
* CE 27: eval_gs_imagepath_start(V_width,V_height,B) = 0+ eval_gs_imagepath_bb0_in(C,V_height,B):2
     [V_height>=1,C+7=0,V_width+7=0] 
* CE 28: eval_gs_imagepath_start(V_width,V_height,B) = 0+ eval_gs_imagepath_bb0_in(V_width,V_height,B):3
     [V_height>=1,V_width+6>=0,0>=V_width] 
* CE 29: eval_gs_imagepath_start(V_width,V_height,B) = 0+ eval_gs_imagepath_bb0_in(V_width,V_height,B):4
     [0>=V_height,0>=V_width+8] 
* CE 30: eval_gs_imagepath_start(V_width,V_height,B) = 0+ eval_gs_imagepath_bb0_in(V_width,V_height,B):5
     [V_height>=1,0>=V_width+8] 
* CE 31: eval_gs_imagepath_start(V_width,V_height,B) = 0+ eval_gs_imagepath_bb0_in(V_width,V_height,B):6
     [V_width+6>=0,0>=V_height] 
* CE 32: eval_gs_imagepath_start(V_width,V_height,B) = 0+ eval_gs_imagepath_bb0_in(V_width,V_height,B):7
     [V_height>=1,V_width>=1] 

### Cost equations --> "Loop" of eval_gs_imagepath_start/3 
* CEs [32] --> Loop 25 
* CEs [31] --> Loop 26 
* CEs [30] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [28] --> Loop 29 
* CEs [27] --> Loop 30 
* CEs [26] --> Loop 31 

#### Loops of eval_gs_imagepath_start/3 
* Loop 25: eval_gs_imagepath_start(V_width,V_height,B) [V_height>=1,V_width>=1] 
* Loop 26: eval_gs_imagepath_start(V_width,V_height,B) [V_width+6>=0,0>=V_height] 
* Loop 27: eval_gs_imagepath_start(V_width,V_height,B) [V_height>=1,0>=V_width+8] 
* Loop 28: eval_gs_imagepath_start(V_width,V_height,B) [0>=V_height,0>=V_width+8] 
* Loop 29: eval_gs_imagepath_start(V_width,V_height,B) [V_height>=1,V_width+6>=0,0>=V_width] 
* Loop 30: eval_gs_imagepath_start(V_width,V_height,B) [V_height>=1,V_width+7=0] 
* Loop 31: eval_gs_imagepath_start(V_width,V_height,B) [0>=V_height,V_width+7=0] 

### Ranking functions of CR eval_gs_imagepath_start(V_width,V_height,B) 

#### Partial ranking functions of CR eval_gs_imagepath_start(V_width,V_height,B) 


### Resulting Chains:eval_gs_imagepath_start(V_width,V_height,B) 
* [31]
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]


### Merging Chains  eval_gs_imagepath_start/3 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 
* [[29]] --> 3 
* [[28]] --> 4 
* [[27]] --> 5 
* [[26]] --> 6 
* [[25]] --> 7 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D) -> [eval_gs_imagepath_bb3_in(V_width',V_y_0',V_x_0',B',C',D')] 
1
#### Cost of phase [11]:eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D) -> [eval_gs_imagepath_bb3_in(V_width',V_y_0',V_x_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< V_x_0+1
it(11) =< V_x_0-V_x_0'

#### Cost of phase [11]:eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D) -> [eval_gs_imagepath_bb3_in(V_width',V_y_0',V_x_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< V_x_0+1
it(11) =< V_x_0-V_x_0'

#### Cost of chains of eval_gs_imagepath_bb3_in(V_width,V_y_0,V_x_0,B,C,D):
* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V_x_0

  with precondition: [B=2,V_y_0>=0,V_x_0>=1,V_width>=V_x_0+1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V_x_0+1

  with precondition: [B=3,V_width=C,V_y_0=D+1,V_y_0>=0,V_x_0>=0,V_width>=V_x_0+1] 

* Chain [13]: 0
  with precondition: [B=2,V_y_0>=0,V_x_0>=0,V_width>=V_x_0+1] 

* Chain [12]: 0
  with precondition: [B=3,V_width=C,V_y_0=D+1,0>=V_x_0+1,V_y_0>=0,V_width>=V_x_0+1] 


#### Cost of loops [15] 

 * loop 15:eval_gs_imagepath_bb1_in(V_width,V_y_0,B) -> [eval_gs_imagepath_bb1_in(V_width',V_y_0',B')] 
2
#### Cost of phase [15]:eval_gs_imagepath_bb1_in(V_width,V_y_0,B) -> [eval_gs_imagepath_bb1_in(V_width',V_y_0',B')] 
2*it(15)+0
  Such that:it(15) =< V_y_0+1
it(15) =< V_y_0-V_y_0'

#### Cost of loops [14] 

 * loop 14:eval_gs_imagepath_bb1_in(V_width,V_y_0,B) -> [eval_gs_imagepath_bb1_in(V_width',V_y_0',B')] 
1*s(3)+2
  Such that:s(3) =< V_width'

#### Cost of phase [14]:eval_gs_imagepath_bb1_in(V_width,V_y_0,B) -> [eval_gs_imagepath_bb1_in(V_width',V_y_0',B')] 
2*it(14)+1*s(4)+0
  Such that:aux(1) =< V_width
it(14) =< V_y_0+1
it(14) =< V_y_0-V_y_0'
s(4) =< it(14)*aux(1)

#### Cost of phase [14]:eval_gs_imagepath_bb1_in(V_width,V_y_0,B) -> [eval_gs_imagepath_bb1_in(V_width',V_y_0',B')] 
2*it(14)+1*s(4)+0
  Such that:aux(1) =< V_width
it(14) =< V_y_0+1
it(14) =< V_y_0-V_y_0'
s(4) =< it(14)*aux(1)

#### Cost of chains of eval_gs_imagepath_bb1_in(V_width,V_y_0,B):
* Chain [[15],17]: 2*it(15)+0
  Such that:it(15) =< V_y_0+1

  with precondition: [B=2,0>=V_width,V_y_0>=0] 

* Chain [[14],17]: 2*it(14)+1*s(4)+0
  Such that:aux(1) =< V_width
it(14) =< V_y_0+1
s(4) =< it(14)*aux(1)

  with precondition: [B=2,V_width>=1,V_y_0>=0] 

* Chain [[14],16]: 2*it(14)+1*s(4)+1*s(5)+1
  Such that:it(14) =< V_y_0
aux(2) =< V_width
s(5) =< aux(2)
s(4) =< it(14)*aux(2)

  with precondition: [B=2,V_width>=1,V_y_0>=1] 

* Chain [17]: 0
  with precondition: [B=2,0>=V_y_0+1] 

* Chain [16]: 1*s(5)+1
  Such that:s(5) =< V_width

  with precondition: [B=2,V_width>=1,V_y_0>=0] 


#### Cost of chains of eval_gs_imagepath_bb0_in(V_width,V_height,B):
* Chain [24]: 1
  with precondition: [V_width+7=0,0>=V_height] 

* Chain [23]: 2*s(14)+1
  Such that:s(14) =< V_height

  with precondition: [V_width+7=0,V_height>=1] 

* Chain [22]: 2*s(15)+1
  Such that:s(15) =< V_height

  with precondition: [0>=V_width,V_width+6>=0,V_height>=1] 

* Chain [21]: 1
  with precondition: [0>=V_width+8,0>=V_height] 

* Chain [20]: 2*s(16)+1
  Such that:s(16) =< V_height

  with precondition: [0>=V_width+8,V_height>=1] 

* Chain [19]: 1
  with precondition: [0>=V_height,V_width+6>=0] 

* Chain [18]: 4*s(17)+2*s(20)+2*s(21)+2
  Such that:s(19) =< V_width
aux(4) =< V_height
s(17) =< aux(4)
s(20) =< s(19)
s(21) =< s(17)*s(19)

  with precondition: [V_width>=1,V_height>=1] 


#### Cost of chains of eval_gs_imagepath_start(V_width,V_height,B):
* Chain [31]: 1
  with precondition: [V_width+7=0,0>=V_height] 

* Chain [30]: 2*s(23)+1
  Such that:s(23) =< V_height

  with precondition: [V_width+7=0,V_height>=1] 

* Chain [29]: 2*s(24)+1
  Such that:s(24) =< V_height

  with precondition: [0>=V_width,V_width+6>=0,V_height>=1] 

* Chain [28]: 1
  with precondition: [0>=V_width+8,0>=V_height] 

* Chain [27]: 2*s(25)+1
  Such that:s(25) =< V_height

  with precondition: [0>=V_width+8,V_height>=1] 

* Chain [26]: 1
  with precondition: [0>=V_height,V_width+6>=0] 

* Chain [25]: 4*s(28)+2*s(29)+2*s(30)+2
  Such that:s(26) =< V_width
s(27) =< V_height
s(28) =< s(27)
s(29) =< s(26)
s(30) =< s(28)*s(26)

  with precondition: [V_width>=1,V_height>=1] 


Closed-form bounds of eval_gs_imagepath_start(V_width,V_height,B): 
-------------------------------------
* Chain [31] with precondition: [V_width+7=0,0>=V_height] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [30] with precondition: [V_width+7=0,V_height>=1] 
    - Upper bound: 2*V_height+1 
    - Complexity: n 
* Chain [29] with precondition: [0>=V_width,V_width+6>=0,V_height>=1] 
    - Upper bound: 2*V_height+1 
    - Complexity: n 
* Chain [28] with precondition: [0>=V_width+8,0>=V_height] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [27] with precondition: [0>=V_width+8,V_height>=1] 
    - Upper bound: 2*V_height+1 
    - Complexity: n 
* Chain [26] with precondition: [0>=V_height,V_width+6>=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [25] with precondition: [V_width>=1,V_height>=1] 
    - Upper bound: 2*V_width+2+2*V_width*V_height+4*V_height 
    - Complexity: n^2 

### Maximum cost of eval_gs_imagepath_start(V_width,V_height,B): nat(V_width)*2+1+nat(V_width)*2*nat(V_height)+nat(V_height)*2+nat(V_height)*2+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 49 ms.
* Invariants computed in 27 ms.
   - Backward Invariants 15 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 47 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 47 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 13 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 220 ms.

