Warning: Ignored call to eval_encodeMainData_stop/1 in equation eval_encodeMainData_178/1 
Warning: Ignored call to eval_encodeMainData_stop/1 in equation eval_encodeMainData_bb73_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_encodeMainData_bb3_in/4]
1. recursive  : [eval_encodeMainData_bb1_in/3,loop_cont_eval_encodeMainData_bb3_in/4]
2. recursive  : [eval_encodeMainData_bb9_in/4]
3. recursive  : [eval_encodeMainData_bb7_in/3,loop_cont_eval_encodeMainData_bb9_in/4]
4. recursive  : [eval_encodeMainData_55/13,eval_encodeMainData_56/13,eval_encodeMainData_bb21_in/12]
5. recursive  : [eval_encodeMainData_bb19_in/12,loop_cont_eval_encodeMainData_bb21_in/13]
6. recursive  : [eval_encodeMainData_81/11,eval_encodeMainData_82/11,eval_encodeMainData_bb33_in/10]
7. recursive  : [eval_encodeMainData_92/11,eval_encodeMainData_93/11,eval_encodeMainData_bb38_in/10]
8. recursive  : [eval_encodeMainData_103/11,eval_encodeMainData_104/11,eval_encodeMainData_bb43_in/10]
9. recursive  : [eval_encodeMainData_114/13,eval_encodeMainData_115/13,eval_encodeMainData_bb48_in/12]
10. recursive  : [eval_encodeMainData_68/15,eval_encodeMainData_69/15,eval_encodeMainData_bb27_in/14]
11. recursive  : [eval_encodeMainData_bb25_in/13,loop_cont_eval_encodeMainData_bb27_in/14]
12. recursive  : [eval_encodeMainData_119/8,eval_encodeMainData_120/8,eval_encodeMainData_bb16_in/4,eval_encodeMainData_bb32_in/6,eval_encodeMainData_bb35_in/6,eval_encodeMainData_bb37_in/6,eval_encodeMainData_bb40_in/6,eval_encodeMainData_bb42_in/6,eval_encodeMainData_bb45_in/6,eval_encodeMainData_bb47_in/6,eval_encodeMainData_bb50_in/8,loop_cont_eval_encodeMainData_bb19_in/9,loop_cont_eval_encodeMainData_bb25_in/9,loop_cont_eval_encodeMainData_bb33_in/7,loop_cont_eval_encodeMainData_bb38_in/7,loop_cont_eval_encodeMainData_bb43_in/7,loop_cont_eval_encodeMainData_bb48_in/9]
13. recursive  : [eval_encodeMainData_bb14_in/2,loop_cont_eval_encodeMainData_bb16_in/3]
14. recursive  : [eval_encodeMainData_150/13,eval_encodeMainData_151/13,eval_encodeMainData_bb61_in/12]
15. recursive  : [eval_encodeMainData_bb59_in/8,loop_cont_eval_encodeMainData_bb61_in/9]
16. recursive  : [eval_encodeMainData_bb57_in/6,loop_cont_eval_encodeMainData_bb59_in/7]
17. recursive  : [eval_encodeMainData_166/9,eval_encodeMainData_167/9,eval_encodeMainData_bb68_in/8]
18. recursive  : [eval_encodeMainData_bb66_in/6,loop_cont_eval_encodeMainData_bb68_in/7]
19. recursive  : [eval_encodeMainData_174/4,eval_encodeMainData_175/4,eval_encodeMainData_bb53_in/2,eval_encodeMainData_bb71_in/4,loop_cont_eval_encodeMainData_bb57_in/5,loop_cont_eval_encodeMainData_bb66_in/5]
20. non_recursive  : [eval_encodeMainData_bb73_in/1]
21. non_recursive  : [loop_cont_eval_encodeMainData_bb14_in/2]
22. non_recursive  : [eval_encodeMainData_178/1]
23. non_recursive  : [eval_encodeMainData_177/1]
24. non_recursive  : [loop_cont_eval_encodeMainData_bb53_in/2]
25. non_recursive  : [loop_cont_eval_encodeMainData_bb7_in/3]
26. non_recursive  : [loop_cont_eval_encodeMainData_bb1_in/3]
27. non_recursive  : [eval_encodeMainData_bb0_in/1]
28. non_recursive  : [eval_encodeMainData_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_encodeMainData_bb3_in/4
1. SCC is partially evaluated into eval_encodeMainData_bb1_in/3
2. SCC is partially evaluated into eval_encodeMainData_bb9_in/4
3. SCC is partially evaluated into eval_encodeMainData_bb7_in/3
4. SCC is partially evaluated into eval_encodeMainData_bb21_in/12
5. SCC is partially evaluated into eval_encodeMainData_bb19_in/12
6. SCC is partially evaluated into eval_encodeMainData_bb33_in/10
7. SCC is partially evaluated into eval_encodeMainData_bb38_in/10
8. SCC is partially evaluated into eval_encodeMainData_bb43_in/10
9. SCC is partially evaluated into eval_encodeMainData_bb48_in/12
10. SCC is partially evaluated into eval_encodeMainData_bb27_in/14
11. SCC is partially evaluated into eval_encodeMainData_bb25_in/13
12. SCC is partially evaluated into eval_encodeMainData_bb16_in/4
13. SCC is partially evaluated into eval_encodeMainData_bb14_in/2
14. SCC is partially evaluated into eval_encodeMainData_bb61_in/12
15. SCC is partially evaluated into eval_encodeMainData_bb59_in/8
16. SCC is partially evaluated into eval_encodeMainData_bb57_in/6
17. SCC is partially evaluated into eval_encodeMainData_bb68_in/8
18. SCC is partially evaluated into eval_encodeMainData_bb66_in/6
19. SCC is partially evaluated into eval_encodeMainData_bb53_in/2
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into loop_cont_eval_encodeMainData_bb53_in/2
25. SCC is partially evaluated into loop_cont_eval_encodeMainData_bb7_in/3
26. SCC is partially evaluated into loop_cont_eval_encodeMainData_bb1_in/3
27. SCC is partially evaluated into eval_encodeMainData_bb0_in/1
28. SCC is partially evaluated into eval_encodeMainData_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encodeMainData_bb3_in/4 
* CE 8 is refined into CE [69] 
* CE 7 is refined into CE [70] 


#### Refined cost equations eval_encodeMainData_bb3_in/4 
* CE 69: eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C) = 0
     [V_ch_0>=0,C=V_gr_0+1,B=7] 
* CE 70: eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C) = 1+ eval_encodeMainData_bb3_in(V_gr_0,D,E,C)
     [V_ch_0>=0,V_ch_0+1=D,E=7,B=7] 

### Cost equations --> "Loop" of eval_encodeMainData_bb3_in/4 
* CEs [70] --> Loop 50 
* CEs [69] --> Loop 51 

#### Loops of eval_encodeMainData_bb3_in/4 
* Loop 50: eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C)->  eval_encodeMainData_bb3_in(V_gr_0,V_ch_0',B',C)
                  [V_ch_0>=0,V_ch_0+1=V_ch_0',B'=7,B=7] 
* Loop 51: eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C) [V_ch_0>=0,V_gr_0+1=C,B=7] 

### Ranking functions of CR eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C) 

#### Partial ranking functions of CR eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C) 


### Resulting Chains:eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C) 
* [[50]]...
* [[50],51]
* [51]


### Merging Chains  eval_encodeMainData_bb3_in/4 into  External patterns of execution 
* [[51],[51,[50]]] --> 1 
* [[[50]]] --> 2 


### Specialization of cost equations eval_encodeMainData_bb1_in/3 
* CE 5 is refined into CE [71] 
* CE 4 is refined into CE [72,73] 


#### Refined cost equations eval_encodeMainData_bb1_in/3 
* CE 71: eval_encodeMainData_bb1_in(V_gr_0,B,C) = 0
     [C=0,B=2] 
* CE 72: eval_encodeMainData_bb1_in(V_gr_0,B,C) = 2+ eval_encodeMainData_bb3_in(D,E,F,G):1+ eval_encodeMainData_bb1_in(G,B,C)
     [G=D+1,G=V_gr_0+1,F=7,E=0] 
* CE 73: eval_encodeMainData_bb1_in(V_gr_0,B,C) = 2+ eval_encodeMainData_bb3_in(V_gr_0,D,E,F):2
     [E=7,D=0] 

### Cost equations --> "Loop" of eval_encodeMainData_bb1_in/3 
* CEs [73] --> Loop 52 
* CEs [72] --> Loop 53 
* CEs [71] --> Loop 54 

#### Loops of eval_encodeMainData_bb1_in/3 
* Loop 52: eval_encodeMainData_bb1_in(V_gr_0,B,C) [] 
* Loop 53: eval_encodeMainData_bb1_in(V_gr_0,B,C)->  eval_encodeMainData_bb1_in(V_gr_0',B,C)
                  [V_gr_0+1=V_gr_0'] 
* Loop 54: eval_encodeMainData_bb1_in(V_gr_0,B,C) [C=0,B=2] 

### Ranking functions of CR eval_encodeMainData_bb1_in(V_gr_0,B,C) 

#### Partial ranking functions of CR eval_encodeMainData_bb1_in(V_gr_0,B,C) 


### Resulting Chains:eval_encodeMainData_bb1_in(V_gr_0,B,C) 
* [[53]]...
* [[53],54]
* [[53],52]...
* [54]
* [52]...


### Merging Chains  eval_encodeMainData_bb1_in/3 into  External patterns of execution 
* [[54],[54,[53]]] --> 1 
* [[[53]]] --> 2 
* [[52],[52,[53]]] --> 3 


### Specialization of cost equations eval_encodeMainData_bb9_in/4 
* CE 15 is refined into CE [74] 
* CE 14 is refined into CE [75] 


#### Refined cost equations eval_encodeMainData_bb9_in/4 
* CE 74: eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C) = 0
     [V_ch_1>=0,C=V_gr_1+1,B=2] 
* CE 75: eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C) = 1+ eval_encodeMainData_bb9_in(V_gr_1,D,E,C)
     [V_ch_1>=0,V_ch_1+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_encodeMainData_bb9_in/4 
* CEs [75] --> Loop 55 
* CEs [74] --> Loop 56 

#### Loops of eval_encodeMainData_bb9_in/4 
* Loop 55: eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C)->  eval_encodeMainData_bb9_in(V_gr_1,V_ch_1',B',C)
                  [V_ch_1>=0,V_ch_1+1=V_ch_1',B'=2,B=2] 
* Loop 56: eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C) [V_ch_1>=0,V_gr_1+1=C,B=2] 

### Ranking functions of CR eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C) 

#### Partial ranking functions of CR eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C) 


### Resulting Chains:eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C) 
* [[55]]...
* [[55],56]
* [56]


### Merging Chains  eval_encodeMainData_bb9_in/4 into  External patterns of execution 
* [[56],[56,[55]]] --> 1 
* [[[55]]] --> 2 


### Specialization of cost equations eval_encodeMainData_bb7_in/3 
* CE 11 is refined into CE [76] 
* CE 10 is refined into CE [77] 
* CE 9 is refined into CE [78,79] 


#### Refined cost equations eval_encodeMainData_bb7_in/3 
* CE 76: eval_encodeMainData_bb7_in(V_gr_1,B,C) = 0
     [C=0,B=15] 
* CE 77: eval_encodeMainData_bb7_in(V_gr_1,B,C) = 0
     [C=0,B=14] 
* CE 78: eval_encodeMainData_bb7_in(V_gr_1,B,C) = 2+ eval_encodeMainData_bb9_in(D,E,F,G):1+ eval_encodeMainData_bb7_in(G,B,C)
     [G=D+1,G=V_gr_1+1,F=2,E=0] 
* CE 79: eval_encodeMainData_bb7_in(V_gr_1,B,C) = 2+ eval_encodeMainData_bb9_in(V_gr_1,D,E,F):2
     [E=2,D=0] 

### Cost equations --> "Loop" of eval_encodeMainData_bb7_in/3 
* CEs [79] --> Loop 57 
* CEs [78] --> Loop 58 
* CEs [76] --> Loop 59 
* CEs [77] --> Loop 60 

#### Loops of eval_encodeMainData_bb7_in/3 
* Loop 57: eval_encodeMainData_bb7_in(V_gr_1,B,C) [] 
* Loop 58: eval_encodeMainData_bb7_in(V_gr_1,B,C)->  eval_encodeMainData_bb7_in(V_gr_1',B,C)
                  [V_gr_1+1=V_gr_1'] 
* Loop 59: eval_encodeMainData_bb7_in(V_gr_1,B,C) [C=0,B=15] 
* Loop 60: eval_encodeMainData_bb7_in(V_gr_1,B,C) [C=0,B=14] 

### Ranking functions of CR eval_encodeMainData_bb7_in(V_gr_1,B,C) 

#### Partial ranking functions of CR eval_encodeMainData_bb7_in(V_gr_1,B,C) 


### Resulting Chains:eval_encodeMainData_bb7_in(V_gr_1,B,C) 
* [[58]]...
* [[58],60]
* [[58],59]
* [[58],57]...
* [60]
* [59]
* [57]...


### Merging Chains  eval_encodeMainData_bb7_in/3 into  External patterns of execution 
* [[60],[60,[58]]] --> 1 
* [[59],[59,[58]]] --> 2 
* [[57],[[58]],[57,[58]]] --> 3 


### Specialization of cost equations eval_encodeMainData_bb21_in/12 
* CE 64 is refined into CE [80] 
* CE 63 is refined into CE [81] 


#### Refined cost equations eval_encodeMainData_bb21_in/12 
* CE 80: eval_encodeMainData_bb21_in(A,B,C,D,E,F,G,A,B,C,D,H) = 0
     [F>=3,5>=E,E+1=H,G=8] 
* CE 81: eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_window_0,B,C,D,E,F,G) = 1+ eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,H,I,C,D,E,F,G)
     [V_window_0>=0,2>=V_window_0,5>=V_sfb_0,V_window_0+1=H,I=8,B=8] 

### Cost equations --> "Loop" of eval_encodeMainData_bb21_in/12 
* CEs [81] --> Loop 61 
* CEs [80] --> Loop 62 

#### Loops of eval_encodeMainData_bb21_in/12 
* Loop 61: eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_window_0,B,C,D,E,F,G)->  eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_window_0',B',C,D,E,F,G)
                  [V_window_0>=0,2>=V_window_0,5>=V_sfb_0,V_window_0+1=V_window_0',B'=8,B=8] 
* Loop 62: eval_encodeMainData_bb21_in(A,B,C,D,E,F,G,A,B,C,D,H) [F>=3,5>=E,E+1=H,G=8] 

### Ranking functions of CR eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_window_0,B,C,D,E,F,G) 
* RF of phase [61]: [-V_window_0+3]

#### Partial ranking functions of CR eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_window_0,B,C,D,E,F,G) 
* Partial RF of phase [61]:
  - RF of loop [61:1]:
    -V_window_0+3


### Resulting Chains:eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_window_0,B,C,D,E,F,G) 
* [[61],62]


### Merging Chains  eval_encodeMainData_bb21_in/12 into  External patterns of execution 
* [[62,[61]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb19_in/12 
* CE 56 is refined into CE [82] 
* CE 55 is refined into CE [83] 


#### Refined cost equations eval_encodeMainData_bb19_in/12 
* CE 82: eval_encodeMainData_bb19_in(A,B,C,D,E,F,A,B,C,D,E,G) = 0
     [E>=6,G=6,F=9] 
* CE 83: eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,B,C,D,E,F,G,H) = 2+ eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,I,J,K,V_gr_2,V_ch_2,V_72,V_77,L):1+ eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,L,M,C,D,E,F,G,H)
     [6>=L,L=I+1,L=V_sfb_0+1,M=9,K=8,J=0,B=9] 

### Cost equations --> "Loop" of eval_encodeMainData_bb19_in/12 
* CEs [83] --> Loop 63 
* CEs [82] --> Loop 64 

#### Loops of eval_encodeMainData_bb19_in/12 
* Loop 63: eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,B,C,D,E,F,G,H)->  eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0',B',C,D,E,F,G,H)
                  [5>=V_sfb_0,V_sfb_0+1=V_sfb_0',B'=9,B=9] 
* Loop 64: eval_encodeMainData_bb19_in(A,B,C,D,E,F,A,B,C,D,E,G) [E>=6,G=6,F=9] 

### Ranking functions of CR eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,B,C,D,E,F,G,H) 
* RF of phase [63]: [-V_sfb_0+6]

#### Partial ranking functions of CR eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,B,C,D,E,F,G,H) 
* Partial RF of phase [63]:
  - RF of loop [63:1]:
    -V_sfb_0+6


### Resulting Chains:eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,B,C,D,E,F,G,H) 
* [[63],64]


### Merging Chains  eval_encodeMainData_bb19_in/12 into  External patterns of execution 
* [[64,[63]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb33_in/10 
* CE 48 is refined into CE [84] 
* CE 47 is refined into CE [85] 


#### Refined cost equations eval_encodeMainData_bb33_in/10 
* CE 84: eval_encodeMainData_bb33_in(A,B,C,D,E,F,A,B,C,D) = 0
     [E>=6,F=10] 
* CE 85: eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_2,B,C,D,E,F) = 1+ eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,G,H,C,D,E,F)
     [V_sfb_2>=0,5>=V_sfb_2,V_sfb_2+1=G,H=10,B=10] 

### Cost equations --> "Loop" of eval_encodeMainData_bb33_in/10 
* CEs [85] --> Loop 65 
* CEs [84] --> Loop 66 

#### Loops of eval_encodeMainData_bb33_in/10 
* Loop 65: eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_2,B,C,D,E,F)->  eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_2',B',C,D,E,F)
                  [V_sfb_2>=0,5>=V_sfb_2,V_sfb_2+1=V_sfb_2',B'=10,B=10] 
* Loop 66: eval_encodeMainData_bb33_in(A,B,C,D,E,F,A,B,C,D) [E>=6,F=10] 

### Ranking functions of CR eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_2,B,C,D,E,F) 
* RF of phase [65]: [-V_sfb_2+6]

#### Partial ranking functions of CR eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_2,B,C,D,E,F) 
* Partial RF of phase [65]:
  - RF of loop [65:1]:
    -V_sfb_2+6


### Resulting Chains:eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_2,B,C,D,E,F) 
* [[65],66]


### Merging Chains  eval_encodeMainData_bb33_in/10 into  External patterns of execution 
* [[66,[65]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb38_in/10 
* CE 52 is refined into CE [86] 
* CE 51 is refined into CE [87] 


#### Refined cost equations eval_encodeMainData_bb38_in/10 
* CE 86: eval_encodeMainData_bb38_in(A,B,C,D,E,F,A,B,C,D) = 0
     [E>=11,F=11] 
* CE 87: eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_3,B,C,D,E,F) = 1+ eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,G,H,C,D,E,F)
     [V_sfb_3>=6,10>=V_sfb_3,V_sfb_3+1=G,H=11,B=11] 

### Cost equations --> "Loop" of eval_encodeMainData_bb38_in/10 
* CEs [87] --> Loop 67 
* CEs [86] --> Loop 68 

#### Loops of eval_encodeMainData_bb38_in/10 
* Loop 67: eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_3,B,C,D,E,F)->  eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_3',B',C,D,E,F)
                  [V_sfb_3>=6,10>=V_sfb_3,V_sfb_3+1=V_sfb_3',B'=11,B=11] 
* Loop 68: eval_encodeMainData_bb38_in(A,B,C,D,E,F,A,B,C,D) [E>=11,F=11] 

### Ranking functions of CR eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_3,B,C,D,E,F) 
* RF of phase [67]: [-V_sfb_3+11]

#### Partial ranking functions of CR eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_3,B,C,D,E,F) 
* Partial RF of phase [67]:
  - RF of loop [67:1]:
    -V_sfb_3+11


### Resulting Chains:eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_3,B,C,D,E,F) 
* [[67],68]


### Merging Chains  eval_encodeMainData_bb38_in/10 into  External patterns of execution 
* [[68,[67]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb43_in/10 
* CE 54 is refined into CE [88] 
* CE 53 is refined into CE [89] 


#### Refined cost equations eval_encodeMainData_bb43_in/10 
* CE 88: eval_encodeMainData_bb43_in(A,B,C,D,E,F,A,B,C,D) = 0
     [E>=16,F=12] 
* CE 89: eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_4,B,C,D,E,F) = 1+ eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,G,H,C,D,E,F)
     [V_sfb_4>=11,15>=V_sfb_4,V_sfb_4+1=G,H=12,B=12] 

### Cost equations --> "Loop" of eval_encodeMainData_bb43_in/10 
* CEs [89] --> Loop 69 
* CEs [88] --> Loop 70 

#### Loops of eval_encodeMainData_bb43_in/10 
* Loop 69: eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_4,B,C,D,E,F)->  eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_4',B',C,D,E,F)
                  [V_sfb_4>=11,15>=V_sfb_4,V_sfb_4+1=V_sfb_4',B'=12,B=12] 
* Loop 70: eval_encodeMainData_bb43_in(A,B,C,D,E,F,A,B,C,D) [E>=16,F=12] 

### Ranking functions of CR eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_4,B,C,D,E,F) 
* RF of phase [69]: [-V_sfb_4+16]

#### Partial ranking functions of CR eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_4,B,C,D,E,F) 
* Partial RF of phase [69]:
  - RF of loop [69:1]:
    -V_sfb_4+16


### Resulting Chains:eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_4,B,C,D,E,F) 
* [[69],70]


### Merging Chains  eval_encodeMainData_bb43_in/10 into  External patterns of execution 
* [[70,[69]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb48_in/12 
* CE 50 is refined into CE [90] 
* CE 49 is refined into CE [91] 


#### Refined cost equations eval_encodeMainData_bb48_in/12 
* CE 90: eval_encodeMainData_bb48_in(A,B,C,D,E,F,A,B,C,D,G,H) = 0
     [E>=21,F=13] 
* CE 91: eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_5,B,C,D,E,F,G,H) = 1+ eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,I,J,C,D,E,F,G,H)
     [V_sfb_5>=16,20>=V_sfb_5,V_sfb_5+1=I,J=13,B=13] 

### Cost equations --> "Loop" of eval_encodeMainData_bb48_in/12 
* CEs [91] --> Loop 71 
* CEs [90] --> Loop 72 

#### Loops of eval_encodeMainData_bb48_in/12 
* Loop 71: eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_5,B,C,D,E,F,G,H)->  eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_5',B',C,D,E,F,G,H)
                  [V_sfb_5>=16,20>=V_sfb_5,V_sfb_5+1=V_sfb_5',B'=13,B=13] 
* Loop 72: eval_encodeMainData_bb48_in(A,B,C,D,E,F,A,B,C,D,G,H) [E>=21,F=13] 

### Ranking functions of CR eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_5,B,C,D,E,F,G,H) 
* RF of phase [71]: [-V_sfb_5+21]

#### Partial ranking functions of CR eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_5,B,C,D,E,F,G,H) 
* Partial RF of phase [71]:
  - RF of loop [71:1]:
    -V_sfb_5+21


### Resulting Chains:eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_5,B,C,D,E,F,G,H) 
* [[71],72]


### Merging Chains  eval_encodeMainData_bb48_in/12 into  External patterns of execution 
* [[72,[71]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb27_in/14 
* CE 66 is refined into CE [92] 
* CE 65 is refined into CE [93] 


#### Refined cost equations eval_encodeMainData_bb27_in/14 
* CE 92: eval_encodeMainData_bb27_in(A,B,C,D,E,F,G,H,A,B,C,D,E,I) = 0
     [G>=3,11>=F,F+1=I,H=9] 
* CE 93: eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,V_window_1,B,C,D,E,F,G,H) = 1+ eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,I,J,C,D,E,F,G,H)
     [V_window_1>=0,2>=V_window_1,11>=V_sfb_1,V_window_1+1=I,J=9,B=9] 

### Cost equations --> "Loop" of eval_encodeMainData_bb27_in/14 
* CEs [93] --> Loop 73 
* CEs [92] --> Loop 74 

#### Loops of eval_encodeMainData_bb27_in/14 
* Loop 73: eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,V_window_1,B,C,D,E,F,G,H)->  eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,V_window_1',B',C,D,E,F,G,H)
                  [V_window_1>=0,2>=V_window_1,11>=V_sfb_1,V_window_1+1=V_window_1',B'=9,B=9] 
* Loop 74: eval_encodeMainData_bb27_in(A,B,C,D,E,F,G,H,A,B,C,D,E,I) [G>=3,11>=F,F+1=I,H=9] 

### Ranking functions of CR eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,V_window_1,B,C,D,E,F,G,H) 
* RF of phase [73]: [-V_window_1+3]

#### Partial ranking functions of CR eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,V_window_1,B,C,D,E,F,G,H) 
* Partial RF of phase [73]:
  - RF of loop [73:1]:
    -V_window_1+3


### Resulting Chains:eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,V_window_1,B,C,D,E,F,G,H) 
* [[73],74]


### Merging Chains  eval_encodeMainData_bb27_in/14 into  External patterns of execution 
* [[74,[73]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb25_in/13 
* CE 58 is refined into CE [94] 
* CE 57 is refined into CE [95] 


#### Refined cost equations eval_encodeMainData_bb25_in/13 
* CE 94: eval_encodeMainData_bb25_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [F>=12,G=13] 
* CE 95: eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,B,C,D,E,F,G,H) = 2+ eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,I,J,K,V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,L):1+ eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,L,M,C,D,E,F,G,H)
     [12>=L,L=I+1,L=V_sfb_1+1,M=13,K=9,J=0,B=13] 

### Cost equations --> "Loop" of eval_encodeMainData_bb25_in/13 
* CEs [95] --> Loop 75 
* CEs [94] --> Loop 76 

#### Loops of eval_encodeMainData_bb25_in/13 
* Loop 75: eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,B,C,D,E,F,G,H)->  eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1',B',C,D,E,F,G,H)
                  [11>=V_sfb_1,V_sfb_1+1=V_sfb_1',B'=13,B=13] 
* Loop 76: eval_encodeMainData_bb25_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [F>=12,G=13] 

### Ranking functions of CR eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,B,C,D,E,F,G,H) 
* RF of phase [75]: [-V_sfb_1+12]

#### Partial ranking functions of CR eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,B,C,D,E,F,G,H) 
* Partial RF of phase [75]:
  - RF of loop [75:1]:
    -V_sfb_1+12


### Resulting Chains:eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,B,C,D,E,F,G,H) 
* [[75],76]
* [76]


### Merging Chains  eval_encodeMainData_bb25_in/13 into  External patterns of execution 
* [[76,[75]]] --> 1 
* [[76]] --> 2 


### Specialization of cost equations eval_encodeMainData_bb16_in/4 
* CE 41 is refined into CE [96] 
* CE 24 is refined into CE [97] 
* CE 25 is refined into CE [98] 
* CE 26 is refined into CE [99] 
* CE 27 is refined into CE [100] 
* CE 28 is refined into CE [101] 
* CE 29 is refined into CE [102] 
* CE 30 is refined into CE [103] 
* CE 31 is refined into CE [104] 
* CE 32 is refined into CE [105] 
* CE 33 is refined into CE [106] 
* CE 34 is refined into CE [107] 
* CE 35 is refined into CE [108] 
* CE 36 is refined into CE [109] 
* CE 37 is refined into CE [110] 
* CE 38 is refined into CE [111] 
* CE 39 is refined into CE [112] 
* CE 40 is refined into CE [113] 


#### Refined cost equations eval_encodeMainData_bb16_in/4 
* CE 96: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 0
     [C=V_gr_2+1,B=14] 
* CE 97: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 3+ eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E,J,K):1+ eval_encodeMainData_bb16_in(V_gr_2,L,M,C)
     [V_ch_2+1=L,M=14,I=13,H=16,G=10,F=0,B=14] 
* CE 98: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 2+ eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E,H,I):1+ eval_encodeMainData_bb16_in(V_gr_2,J,K,C)
     [V_ch_2+1=J,K=14,G=13,F=16,B=14] 
* CE 99: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 4+ eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,D,E,J,K,V_gr_2,V_ch_2,D,E,L,M):1+ eval_encodeMainData_bb16_in(V_gr_2,N,O,C)
     [V_ch_2+1=N,O=14,K=13,J=16,I=11,H=6,G=10,F=0,B=14] 
* CE 100: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 3+ eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E,J,K):1+ eval_encodeMainData_bb16_in(V_gr_2,L,M,C)
     [V_ch_2+1=L,M=14,I=13,H=16,G=11,F=6,B=14] 
* CE 101: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 4+ eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,D,E,J,K,V_gr_2,V_ch_2,D,E,L,M):1+ eval_encodeMainData_bb16_in(V_gr_2,N,O,C)
     [V_ch_2+1=N,O=14,K=13,J=16,I=12,H=11,G=10,F=0,B=14] 
* CE 102: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 3+ eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E,J,K):1+ eval_encodeMainData_bb16_in(V_gr_2,L,M,C)
     [V_ch_2+1=L,M=14,I=13,H=16,G=12,F=11,B=14] 
* CE 103: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 5+ eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,D,E,J,K,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,D,E,L,M,V_gr_2,V_ch_2,D,E,N,O):1+ eval_encodeMainData_bb16_in(V_gr_2,P,Q,C)
     [V_ch_2+1=P,Q=14,M=13,L=16,K=12,J=11,I=11,H=6,G=10,F=0,B=14] 
* CE 104: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 4+ eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,D,E,J,K,V_gr_2,V_ch_2,D,E,L,M):1+ eval_encodeMainData_bb16_in(V_gr_2,N,O,C)
     [V_ch_2+1=N,O=14,K=13,J=16,I=12,H=11,G=11,F=6,B=14] 
* CE 105: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 2+ eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb16_in(V_gr_2,H,I,C)
     [V_ch_2+1=H,I=14,G=10,F=0,B=14] 
* CE 106: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 1+ eval_encodeMainData_bb16_in(V_gr_2,D,E,C)
     [D=V_ch_2+1,E=14,B=14] 
* CE 107: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 3+ eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb16_in(V_gr_2,J,K,C)
     [V_ch_2+1=J,K=14,I=11,H=6,G=10,F=0,B=14] 
* CE 108: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 2+ eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb16_in(V_gr_2,H,I,C)
     [V_ch_2+1=H,I=14,G=11,F=6,B=14] 
* CE 109: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 3+ eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb16_in(V_gr_2,J,K,C)
     [V_ch_2+1=J,K=14,I=12,H=11,G=10,F=0,B=14] 
* CE 110: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 2+ eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb16_in(V_gr_2,H,I,C)
     [V_ch_2+1=H,I=14,G=12,F=11,B=14] 
* CE 111: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 4+ eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,D,E,J,K,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb16_in(V_gr_2,L,M,C)
     [V_ch_2+1=L,M=14,K=12,J=11,I=11,H=6,G=10,F=0,B=14] 
* CE 112: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 3+ eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,D,E,H,I,V_gr_2,V_ch_2,D,E):1+ eval_encodeMainData_bb16_in(V_gr_2,J,K,C)
     [V_ch_2+1=J,K=14,I=12,H=11,G=11,F=6,B=14] 
* CE 113: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) = 3+ eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,D,E,F,G,V_gr_2,V_ch_2,D,E,H,I):1+ eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,D,E,J,K,L,V_gr_2,V_ch_2,D,E,M,N):1+ eval_encodeMainData_bb16_in(V_gr_2,O,P,C)
     [V_ch_2+1=O,P=14,N=12,M=6,L=13,K=6,J=6,I=6,H=6,G=9,F=0,B=14] 

### Cost equations --> "Loop" of eval_encodeMainData_bb16_in/4 
* CEs [97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113] --> Loop 77 
* CEs [96] --> Loop 78 

#### Loops of eval_encodeMainData_bb16_in/4 
* Loop 77: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C)->  eval_encodeMainData_bb16_in(V_gr_2,V_ch_2',B',C)
                  [V_ch_2+1=V_ch_2',B'=14,B=14] 
* Loop 78: eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) [V_gr_2+1=C,B=14] 

### Ranking functions of CR eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) 

#### Partial ranking functions of CR eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) 


### Resulting Chains:eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) 
* [[77]]...
* [[77],78]
* [78]


### Merging Chains  eval_encodeMainData_bb16_in/4 into  External patterns of execution 
* [[78],[78,[77]]] --> 1 
* [[[77]]] --> 2 


### Specialization of cost equations eval_encodeMainData_bb14_in/2 
* CE 17 is refined into CE [114] 
* CE 16 is refined into CE [115,116] 


#### Refined cost equations eval_encodeMainData_bb14_in/2 
* CE 114: eval_encodeMainData_bb14_in(V_gr_2,B) = 0
     [V_gr_2>=2,B=17] 
* CE 115: eval_encodeMainData_bb14_in(V_gr_2,B) = 2+ eval_encodeMainData_bb16_in(C,D,E,F):1+ eval_encodeMainData_bb14_in(F,G)
     [2>=F,F=C+1,F=V_gr_2+1,G=17,E=14,D=0,B=17] 
* CE 116: eval_encodeMainData_bb14_in(V_gr_2,B) = 2+ eval_encodeMainData_bb16_in(V_gr_2,C,D,E):2
     [1>=V_gr_2,F=17,D=14,C=0,B=17] 

### Cost equations --> "Loop" of eval_encodeMainData_bb14_in/2 
* CEs [116] --> Loop 79 
* CEs [115] --> Loop 80 
* CEs [114] --> Loop 81 

#### Loops of eval_encodeMainData_bb14_in/2 
* Loop 79: eval_encodeMainData_bb14_in(V_gr_2,B) [1>=V_gr_2,B=17] 
* Loop 80: eval_encodeMainData_bb14_in(V_gr_2,B)->  eval_encodeMainData_bb14_in(V_gr_2',B')
                  [1>=V_gr_2,V_gr_2+1=V_gr_2',B'=17,B=17] 
* Loop 81: eval_encodeMainData_bb14_in(V_gr_2,B) [V_gr_2>=2,B=17] 

### Ranking functions of CR eval_encodeMainData_bb14_in(V_gr_2,B) 
* RF of phase [80]: [-V_gr_2+2]

#### Partial ranking functions of CR eval_encodeMainData_bb14_in(V_gr_2,B) 
* Partial RF of phase [80]:
  - RF of loop [80:1]:
    -V_gr_2+2


### Resulting Chains:eval_encodeMainData_bb14_in(V_gr_2,B) 
* [[80],81]
* [[80],79]...
* [81]
* [79]...


### Merging Chains  eval_encodeMainData_bb14_in/2 into  External patterns of execution 
* [[81,[80]]] --> 1 
* [[81]] --> 2 
* [[79]] --> 3 
* [[79,[80]]] --> 4 


### Specialization of cost equations eval_encodeMainData_bb61_in/12 
* CE 68 is refined into CE [117] 
* CE 67 is refined into CE [118] 


#### Refined cost equations eval_encodeMainData_bb61_in/12 
* CE 117: eval_encodeMainData_bb61_in(A,B,C,D,E,F,G,A,B,C,D,H) = 0
     [C>=E+1,F>=3,E+1=H,G=4] 
* CE 118: eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,V_window_2,B,C,D,E,F,G) = 1+ eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,H,I,C,D,E,F,G)
     [V_222>=V_i_0+1,V_window_2>=0,2>=V_window_2,V_window_2+1=H,I=4,B=4] 

### Cost equations --> "Loop" of eval_encodeMainData_bb61_in/12 
* CEs [118] --> Loop 82 
* CEs [117] --> Loop 83 

#### Loops of eval_encodeMainData_bb61_in/12 
* Loop 82: eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,V_window_2,B,C,D,E,F,G)->  eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,V_window_2',B',C,D,E,F,G)
                  [V_222>=V_i_0+1,V_window_2>=0,2>=V_window_2,V_window_2+1=V_window_2',B'=4,B=4] 
* Loop 83: eval_encodeMainData_bb61_in(A,B,C,D,E,F,G,A,B,C,D,H) [C>=E+1,F>=3,E+1=H,G=4] 

### Ranking functions of CR eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,V_window_2,B,C,D,E,F,G) 
* RF of phase [82]: [-V_window_2+3]

#### Partial ranking functions of CR eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,V_window_2,B,C,D,E,F,G) 
* Partial RF of phase [82]:
  - RF of loop [82:1]:
    -V_window_2+3


### Resulting Chains:eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,V_window_2,B,C,D,E,F,G) 
* [[82],83]


### Merging Chains  eval_encodeMainData_bb61_in/12 into  External patterns of execution 
* [[83,[82]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb59_in/8 
* CE 62 is refined into CE [119] 
* CE 61 is refined into CE [120] 


#### Refined cost equations eval_encodeMainData_bb59_in/8 
* CE 119: eval_encodeMainData_bb59_in(A,B,C,D,E,F,A,G) = 0
     [E>=C,G=B+1,F=5] 
* CE 120: eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,B,C,D) = 2+ eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,E,F,G,V_ch_3,V_sfb_partition_0,V_222,V_225,H):1+ eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,H,I,C,D)
     [V_222>=H,H=E+1,H=V_i_0+1,I=5,G=4,F=0,B=5] 

### Cost equations --> "Loop" of eval_encodeMainData_bb59_in/8 
* CEs [120] --> Loop 84 
* CEs [119] --> Loop 85 

#### Loops of eval_encodeMainData_bb59_in/8 
* Loop 84: eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,B,C,D)->  eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0',B',C,D)
                  [V_222>=V_i_0',V_i_0'=V_i_0+1,B'=5,B=5] 
* Loop 85: eval_encodeMainData_bb59_in(A,B,C,D,E,F,A,G) [E>=C,B+1=G,F=5] 

### Ranking functions of CR eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,B,C,D) 
* RF of phase [84]: [V_222-V_i_0]

#### Partial ranking functions of CR eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,B,C,D) 
* Partial RF of phase [84]:
  - RF of loop [84:1]:
    V_222-V_i_0


### Resulting Chains:eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,B,C,D) 
* [[84],85]
* [85]


### Merging Chains  eval_encodeMainData_bb59_in/8 into  External patterns of execution 
* [[85]] --> 1 
* [[85,[84]]] --> 2 


### Specialization of cost equations eval_encodeMainData_bb57_in/6 
* CE 46 is refined into CE [121] 
* CE 44 is refined into CE [122] 
* CE 45 is refined into CE [123,124] 


#### Refined cost equations eval_encodeMainData_bb57_in/6 
* CE 121: eval_encodeMainData_bb57_in(A,B,C,A,B,D) = 0
     [B>=4,C=6] 
* CE 122: eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E) = 2+ eval_encodeMainData_bb59_in(V_ch_3,F,G,H,I,J,V_ch_3,K):1+ eval_encodeMainData_bb57_in(V_ch_3,K,L,C,D,E)
     [4>=K,0>=G,K=F+1,K=V_sfb_partition_0+1,L=6,J=5,I=0,B=6] 
* CE 123: eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E) = 2+ eval_encodeMainData_bb59_in(V_ch_3,F,G,H,I,J,V_ch_3,K):1+ eval_encodeMainData_bb57_in(V_ch_3,K,L,C,D,E)
     [4>=K,K=F+1,K=V_sfb_partition_0+1,L=6,J=5,I=0,G=0,B=6] 
* CE 124: eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E) = 2+ eval_encodeMainData_bb59_in(V_ch_3,F,G,H,I,J,V_ch_3,K):2+ eval_encodeMainData_bb57_in(V_ch_3,K,L,C,D,E)
     [G>=1,4>=K,K=F+1,K=V_sfb_partition_0+1,L=6,J=5,I=0,B=6] 

### Cost equations --> "Loop" of eval_encodeMainData_bb57_in/6 
* CEs [122,123,124] --> Loop 86 
* CEs [121] --> Loop 87 

#### Loops of eval_encodeMainData_bb57_in/6 
* Loop 86: eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E)->  eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0',B',C,D,E)
                  [3>=V_sfb_partition_0,V_sfb_partition_0+1=V_sfb_partition_0',B'=6,B=6] 
* Loop 87: eval_encodeMainData_bb57_in(A,B,C,A,B,D) [B>=4,C=6] 

### Ranking functions of CR eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E) 
* RF of phase [86]: [-V_sfb_partition_0+4]

#### Partial ranking functions of CR eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E) 
* Partial RF of phase [86]:
  - RF of loop [86:1]:
    -V_sfb_partition_0+4


### Resulting Chains:eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E) 
* [[86],87]


### Merging Chains  eval_encodeMainData_bb57_in/6 into  External patterns of execution 
* [[87,[86]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb68_in/8 
* CE 60 is refined into CE [125] 
* CE 59 is refined into CE [126] 


#### Refined cost equations eval_encodeMainData_bb68_in/8 
* CE 125: eval_encodeMainData_bb68_in(A,B,C,D,E,F,A,G) = 0
     [E>=C,E>=0,3>=B,B+1=G,F=3] 
* CE 126: eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,V_i_1,B,C,D) = 1+ eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,E,F,C,D)
     [V_245>=V_i_1+1,V_i_1>=0,3>=V_sfb_partition_1,V_i_1+1=E,F=3,B=3] 

### Cost equations --> "Loop" of eval_encodeMainData_bb68_in/8 
* CEs [126] --> Loop 88 
* CEs [125] --> Loop 89 

#### Loops of eval_encodeMainData_bb68_in/8 
* Loop 88: eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,V_i_1,B,C,D)->  eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,V_i_1',B',C,D)
                  [V_245>=V_i_1+1,V_i_1>=0,3>=V_sfb_partition_1,V_i_1+1=V_i_1',B'=3,B=3] 
* Loop 89: eval_encodeMainData_bb68_in(A,B,C,D,E,F,A,G) [E>=C,E>=0,3>=B,B+1=G,F=3] 

### Ranking functions of CR eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,V_i_1,B,C,D) 
* RF of phase [88]: [V_245-V_i_1]

#### Partial ranking functions of CR eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,V_i_1,B,C,D) 
* Partial RF of phase [88]:
  - RF of loop [88:1]:
    V_245-V_i_1


### Resulting Chains:eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,V_i_1,B,C,D) 
* [[88],89]
* [89]


### Merging Chains  eval_encodeMainData_bb68_in/8 into  External patterns of execution 
* [[89]] --> 1 
* [[89,[88]]] --> 2 


### Specialization of cost equations eval_encodeMainData_bb66_in/6 
* CE 43 is refined into CE [127] 
* CE 42 is refined into CE [128,129] 


#### Refined cost equations eval_encodeMainData_bb66_in/6 
* CE 127: eval_encodeMainData_bb66_in(A,B,C,A,D,B) = 0
     [B>=4,C=6] 
* CE 128: eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1,B,C,D,E) = 2+ eval_encodeMainData_bb68_in(V_ch_3,F,G,H,I,J,V_ch_3,K):1+ eval_encodeMainData_bb66_in(V_ch_3,K,L,C,D,E)
     [4>=K,0>=G,K=F+1,K=V_sfb_partition_1+1,L=6,J=3,I=0,B=6] 
* CE 129: eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1,B,C,D,E) = 2+ eval_encodeMainData_bb68_in(V_ch_3,F,G,H,I,J,V_ch_3,K):2+ eval_encodeMainData_bb66_in(V_ch_3,K,L,C,D,E)
     [G>=1,4>=K,K=F+1,K=V_sfb_partition_1+1,L=6,J=3,I=0,B=6] 

### Cost equations --> "Loop" of eval_encodeMainData_bb66_in/6 
* CEs [128,129] --> Loop 90 
* CEs [127] --> Loop 91 

#### Loops of eval_encodeMainData_bb66_in/6 
* Loop 90: eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1,B,C,D,E)->  eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1',B',C,D,E)
                  [3>=V_sfb_partition_1,V_sfb_partition_1+1=V_sfb_partition_1',B'=6,B=6] 
* Loop 91: eval_encodeMainData_bb66_in(A,B,C,A,D,B) [B>=4,C=6] 

### Ranking functions of CR eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1,B,C,D,E) 
* RF of phase [90]: [-V_sfb_partition_1+4]

#### Partial ranking functions of CR eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1,B,C,D,E) 
* Partial RF of phase [90]:
  - RF of loop [90:1]:
    -V_sfb_partition_1+4


### Resulting Chains:eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1,B,C,D,E) 
* [[90],91]


### Merging Chains  eval_encodeMainData_bb66_in/6 into  External patterns of execution 
* [[91,[90]]] --> 1 


### Specialization of cost equations eval_encodeMainData_bb53_in/2 
* CE 21 is refined into CE [130] 
* CE 20 is refined into CE [131] 
* CE 18 is refined into CE [132] 
* CE 19 is refined into CE [133] 


#### Refined cost equations eval_encodeMainData_bb53_in/2 
* CE 130: eval_encodeMainData_bb53_in(V_ch_3,B) = 0
     [B=17] 
* CE 131: eval_encodeMainData_bb53_in(V_ch_3,B) = 0
     [B=16] 
* CE 132: eval_encodeMainData_bb53_in(V_ch_3,B) = 2+ eval_encodeMainData_bb66_in(V_ch_3,C,D,V_ch_3,E,F):1+ eval_encodeMainData_bb53_in(G,B)
     [V_ch_3+1=G,F=4,D=6,C=0] 
* CE 133: eval_encodeMainData_bb53_in(V_ch_3,B) = 2+ eval_encodeMainData_bb57_in(V_ch_3,C,D,V_ch_3,E,F):1+ eval_encodeMainData_bb53_in(G,B)
     [V_ch_3+1=G,E=4,D=6,C=0] 

### Cost equations --> "Loop" of eval_encodeMainData_bb53_in/2 
* CEs [132,133] --> Loop 92 
* CEs [130] --> Loop 93 
* CEs [131] --> Loop 94 

#### Loops of eval_encodeMainData_bb53_in/2 
* Loop 92: eval_encodeMainData_bb53_in(V_ch_3,B)->  eval_encodeMainData_bb53_in(V_ch_3',B)
                  [V_ch_3+1=V_ch_3'] 
* Loop 93: eval_encodeMainData_bb53_in(V_ch_3,B) [B=17] 
* Loop 94: eval_encodeMainData_bb53_in(V_ch_3,B) [B=16] 

### Ranking functions of CR eval_encodeMainData_bb53_in(V_ch_3,B) 

#### Partial ranking functions of CR eval_encodeMainData_bb53_in(V_ch_3,B) 


### Resulting Chains:eval_encodeMainData_bb53_in(V_ch_3,B) 
* [[92]]...
* [[92],94]
* [[92],93]
* [94]
* [93]


### Merging Chains  eval_encodeMainData_bb53_in/2 into  External patterns of execution 
* [[94],[94,[92]]] --> 1 
* [[93],[93,[92]]] --> 2 
* [[[92]]] --> 3 


### Specialization of cost equations loop_cont_eval_encodeMainData_bb53_in/2 
* CE 23 is refined into CE [134] 
* CE 22 is refined into CE [135] 


#### Refined cost equations loop_cont_eval_encodeMainData_bb53_in/2 
* CE 134: loop_cont_eval_encodeMainData_bb53_in(B,A) = 0
     [B=17] 
* CE 135: loop_cont_eval_encodeMainData_bb53_in(B,A) = 0
     [B=16] 

### Cost equations --> "Loop" of loop_cont_eval_encodeMainData_bb53_in/2 
* CEs [134] --> Loop 95 
* CEs [135] --> Loop 96 

#### Loops of loop_cont_eval_encodeMainData_bb53_in/2 
* Loop 95: loop_cont_eval_encodeMainData_bb53_in(B,A) [B=17] 
* Loop 96: loop_cont_eval_encodeMainData_bb53_in(B,A) [B=16] 

### Ranking functions of CR loop_cont_eval_encodeMainData_bb53_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_encodeMainData_bb53_in(B,A) 


### Resulting Chains:loop_cont_eval_encodeMainData_bb53_in(B,A) 
* [96]
* [95]


### Merging Chains  loop_cont_eval_encodeMainData_bb53_in/2 into  External patterns of execution 
* [[96]] --> 1 
* [[95]] --> 2 


### Specialization of cost equations loop_cont_eval_encodeMainData_bb7_in/3 
* CE 13 is refined into CE [136,137,138] 
* CE 12 is refined into CE [139,140,141,142] 


#### Refined cost equations loop_cont_eval_encodeMainData_bb7_in/3 
* CE 136: loop_cont_eval_encodeMainData_bb7_in(D,A,B) = 1+ eval_encodeMainData_bb53_in(A,E):1+ loop_cont_eval_encodeMainData_bb53_in(F,B):1
     [F=16,E=16,D=15] 
* CE 137: loop_cont_eval_encodeMainData_bb7_in(D,A,B) = 1+ eval_encodeMainData_bb53_in(A,E):2+ loop_cont_eval_encodeMainData_bb53_in(F,B):2
     [F=17,E=17,D=15] 
* CE 138: loop_cont_eval_encodeMainData_bb7_in(D,A,B) = 1+ eval_encodeMainData_bb53_in(A,E):3
     [D=15] 
* CE 139: loop_cont_eval_encodeMainData_bb7_in(D,A,B) = 1+ eval_encodeMainData_bb14_in(A,E):1
     [1>=A,E=17,D=14] 
* CE 140: loop_cont_eval_encodeMainData_bb7_in(D,A,B) = 1+ eval_encodeMainData_bb14_in(A,E):2
     [A>=2,E=17,D=14] 
* CE 141: loop_cont_eval_encodeMainData_bb7_in(D,A,B) = 1+ eval_encodeMainData_bb14_in(A,E):3
     [1>=A,E=17,D=14] 
* CE 142: loop_cont_eval_encodeMainData_bb7_in(D,A,B) = 1+ eval_encodeMainData_bb14_in(A,E):4
     [0>=A,E=17,D=14] 

### Cost equations --> "Loop" of loop_cont_eval_encodeMainData_bb7_in/3 
* CEs [138] --> Loop 97 
* CEs [141,142] --> Loop 98 
* CEs [136,137] --> Loop 99 
* CEs [140] --> Loop 100 
* CEs [139] --> Loop 101 

#### Loops of loop_cont_eval_encodeMainData_bb7_in/3 
* Loop 97: loop_cont_eval_encodeMainData_bb7_in(D,A,B) [D=15] 
* Loop 98: loop_cont_eval_encodeMainData_bb7_in(D,A,B) [1>=A,D=14] 
* Loop 99: loop_cont_eval_encodeMainData_bb7_in(D,A,B) [D=15] 
* Loop 100: loop_cont_eval_encodeMainData_bb7_in(D,A,B) [A>=2,D=14] 
* Loop 101: loop_cont_eval_encodeMainData_bb7_in(D,A,B) [1>=A,D=14] 

### Ranking functions of CR loop_cont_eval_encodeMainData_bb7_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_encodeMainData_bb7_in(D,A,B) 


### Resulting Chains:loop_cont_eval_encodeMainData_bb7_in(D,A,B) 
* [101]
* [100]
* [99]
* [98]...
* [97]...


### Merging Chains  loop_cont_eval_encodeMainData_bb7_in/3 into  External patterns of execution 
* [[101]] --> 1 
* [[100]] --> 2 
* [[99]] --> 3 
* [[98]] --> 4 
* [[97]] --> 5 


### Specialization of cost equations loop_cont_eval_encodeMainData_bb1_in/3 
* CE 6 is refined into CE [143,144,145,146,147] 


#### Refined cost equations loop_cont_eval_encodeMainData_bb1_in/3 
* CE 143: loop_cont_eval_encodeMainData_bb1_in(E,A,B) = 1+ eval_encodeMainData_bb7_in(A,F,G):1+ loop_cont_eval_encodeMainData_bb7_in(H,I,B):1
     [I=0,H=14,G=0,F=14,E=2] 
* CE 144: loop_cont_eval_encodeMainData_bb1_in(E,A,B) = 1+ eval_encodeMainData_bb7_in(A,F,G):1+ loop_cont_eval_encodeMainData_bb7_in(H,I,B):4
     [I=0,H=14,G=0,F=14,E=2] 
* CE 145: loop_cont_eval_encodeMainData_bb1_in(E,A,B) = 1+ eval_encodeMainData_bb7_in(A,F,G):2+ loop_cont_eval_encodeMainData_bb7_in(H,I,B):3
     [I=0,H=15,G=0,F=15,E=2] 
* CE 146: loop_cont_eval_encodeMainData_bb1_in(E,A,B) = 1+ eval_encodeMainData_bb7_in(A,F,G):2+ loop_cont_eval_encodeMainData_bb7_in(H,I,B):5
     [I=0,H=15,G=0,F=15,E=2] 
* CE 147: loop_cont_eval_encodeMainData_bb1_in(E,A,B) = 1+ eval_encodeMainData_bb7_in(A,F,G):3
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_encodeMainData_bb1_in/3 
* CEs [144,146,147] --> Loop 102 
* CEs [143,145] --> Loop 103 

#### Loops of loop_cont_eval_encodeMainData_bb1_in/3 
* Loop 102: loop_cont_eval_encodeMainData_bb1_in(E,A,B) [E=2] 
* Loop 103: loop_cont_eval_encodeMainData_bb1_in(E,A,B) [E=2] 

### Ranking functions of CR loop_cont_eval_encodeMainData_bb1_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_encodeMainData_bb1_in(E,A,B) 


### Resulting Chains:loop_cont_eval_encodeMainData_bb1_in(E,A,B) 
* [103]
* [102]...


### Merging Chains  loop_cont_eval_encodeMainData_bb1_in/3 into  External patterns of execution 
* [[103]] --> 1 
* [[102]] --> 2 


### Specialization of cost equations eval_encodeMainData_bb0_in/1 
* CE 3 is refined into CE [148,149,150,151] 


#### Refined cost equations eval_encodeMainData_bb0_in/1 
* CE 148: eval_encodeMainData_bb0_in(B) = 1+ eval_encodeMainData_bb1_in(C,D,E):1+ loop_cont_eval_encodeMainData_bb1_in(F,G,B):1
     [G=0,F=2,E=0,D=2,C=0] 
* CE 149: eval_encodeMainData_bb0_in(B) = 1+ eval_encodeMainData_bb1_in(C,D,E):1+ loop_cont_eval_encodeMainData_bb1_in(F,G,B):2
     [G=0,F=2,E=0,D=2,C=0] 
* CE 150: eval_encodeMainData_bb0_in(B) = 1+ eval_encodeMainData_bb1_in(C,D,E):2
     [C=0] 
* CE 151: eval_encodeMainData_bb0_in(B) = 1+ eval_encodeMainData_bb1_in(C,D,E):3
     [C=0] 

### Cost equations --> "Loop" of eval_encodeMainData_bb0_in/1 
* CEs [149,150,151] --> Loop 104 
* CEs [148] --> Loop 105 

#### Loops of eval_encodeMainData_bb0_in/1 
* Loop 104: eval_encodeMainData_bb0_in(B) [] 
* Loop 105: eval_encodeMainData_bb0_in(B) [] 

### Ranking functions of CR eval_encodeMainData_bb0_in(B) 

#### Partial ranking functions of CR eval_encodeMainData_bb0_in(B) 


### Resulting Chains:eval_encodeMainData_bb0_in(B) 
* [105]
* [104]...


### Merging Chains  eval_encodeMainData_bb0_in/1 into  External patterns of execution 
* [[105]] --> 1 
* [[104]] --> 2 


### Specialization of cost equations eval_encodeMainData_start/1 
* CE 2 is refined into CE [152,153] 


#### Refined cost equations eval_encodeMainData_start/1 
* CE 152: eval_encodeMainData_start(B) = 0+ eval_encodeMainData_bb0_in(B):1
     [] 
* CE 153: eval_encodeMainData_start(B) = 0+ eval_encodeMainData_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_encodeMainData_start/1 
* CEs [153] --> Loop 106 
* CEs [152] --> Loop 107 

#### Loops of eval_encodeMainData_start/1 
* Loop 106: eval_encodeMainData_start(B) [] 
* Loop 107: eval_encodeMainData_start(B) [] 

### Ranking functions of CR eval_encodeMainData_start(B) 

#### Partial ranking functions of CR eval_encodeMainData_start(B) 


### Resulting Chains:eval_encodeMainData_start(B) 
* [107]
* [106]...


### Merging Chains  eval_encodeMainData_start/1 into  External patterns of execution 
* [[107]] --> 1 
* [[106]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [50] 

 * loop 50:eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C) -> [eval_encodeMainData_bb3_in(V_gr_0',V_ch_0',B',C')] 
1
#### Cost of phase [50]:eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C) -> [eval_encodeMainData_bb3_in(V_gr_0',V_ch_0',B',C')] 
1*it(50)+0
#### Cost of phase [50]:eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C) -> [eval_encodeMainData_bb3_in(V_gr_0',V_ch_0',B',C')] 
1*it(50)+0
#### Cost of chains of eval_encodeMainData_bb3_in(V_gr_0,V_ch_0,B,C):
* Chain [[50]]...: 1*it(50)+0
  with precondition: [V_ch_0>=0,B=7] 

* Chain [[50],51]: 1*it(50)+0
  with precondition: [B=7,V_gr_0+1=C,V_ch_0>=0] 

* Chain [51]: 0
  with precondition: [B=7,C=V_gr_0+1,V_ch_0>=0] 


#### Cost of loops [53] 

 * loop 53:eval_encodeMainData_bb1_in(V_gr_0,B,C) -> [eval_encodeMainData_bb1_in(V_gr_0',B',C')] 
1*s(3)+2
#### Cost of phase [53]:eval_encodeMainData_bb1_in(V_gr_0,B,C) -> [eval_encodeMainData_bb1_in(V_gr_0',B',C')] 
3*it(53)+0
#### Cost of phase [53]:eval_encodeMainData_bb1_in(V_gr_0,B,C) -> [eval_encodeMainData_bb1_in(V_gr_0',B',C')] 
3*it(53)+0
#### Cost of phase [53]:eval_encodeMainData_bb1_in(V_gr_0,B,C) -> [eval_encodeMainData_bb1_in(V_gr_0',B',C')] 
3*it(53)+0
#### Cost of chains of eval_encodeMainData_bb1_in(V_gr_0,B,C):
* Chain [[53]]...: 3*it(53)+0
  with precondition: [] 

* Chain [[53],54]: 3*it(53)+0
  with precondition: [B=2,C=0,V_gr_0>=0] 

* Chain [[53],52]...: 4*it(53)+2
  with precondition: [V_gr_0>=0] 

* Chain [54]: 0
  with precondition: [B=2,C=0,V_gr_0>=0] 

* Chain [52]...: 1*s(5)+2
  with precondition: [V_gr_0>=0] 


#### Cost of loops [55] 

 * loop 55:eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C) -> [eval_encodeMainData_bb9_in(V_gr_1',V_ch_1',B',C')] 
1
#### Cost of phase [55]:eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C) -> [eval_encodeMainData_bb9_in(V_gr_1',V_ch_1',B',C')] 
1*it(55)+0
#### Cost of phase [55]:eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C) -> [eval_encodeMainData_bb9_in(V_gr_1',V_ch_1',B',C')] 
1*it(55)+0
#### Cost of chains of eval_encodeMainData_bb9_in(V_gr_1,V_ch_1,B,C):
* Chain [[55]]...: 1*it(55)+0
  with precondition: [V_ch_1>=0,B=2] 

* Chain [[55],56]: 1*it(55)+0
  with precondition: [B=2,V_gr_1+1=C,V_ch_1>=0] 

* Chain [56]: 0
  with precondition: [B=2,C=V_gr_1+1,V_ch_1>=0] 


#### Cost of loops [58] 

 * loop 58:eval_encodeMainData_bb7_in(V_gr_1,B,C) -> [eval_encodeMainData_bb7_in(V_gr_1',B',C')] 
1*s(11)+2
#### Cost of phase [58]:eval_encodeMainData_bb7_in(V_gr_1,B,C) -> [eval_encodeMainData_bb7_in(V_gr_1',B',C')] 
3*it(58)+0
#### Cost of phase [58]:eval_encodeMainData_bb7_in(V_gr_1,B,C) -> [eval_encodeMainData_bb7_in(V_gr_1',B',C')] 
3*it(58)+0
#### Cost of phase [58]:eval_encodeMainData_bb7_in(V_gr_1,B,C) -> [eval_encodeMainData_bb7_in(V_gr_1',B',C')] 
3*it(58)+0
#### Cost of phase [58]:eval_encodeMainData_bb7_in(V_gr_1,B,C) -> [eval_encodeMainData_bb7_in(V_gr_1',B',C')] 
3*it(58)+0
#### Cost of chains of eval_encodeMainData_bb7_in(V_gr_1,B,C):
* Chain [[58]]...: 3*it(58)+0
  with precondition: [] 

* Chain [[58],60]: 3*it(58)+0
  with precondition: [B=14,C=0] 

* Chain [[58],59]: 3*it(58)+0
  with precondition: [B=15,C=0] 

* Chain [[58],57]...: 4*it(58)+2
  with precondition: [] 

* Chain [60]: 0
  with precondition: [B=14,C=0] 

* Chain [59]: 0
  with precondition: [B=15,C=0] 

* Chain [57]...: 1*s(13)+2
  with precondition: [] 


#### Cost of loops [61] 

 * loop 61:eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_window_0,B,C,D,E,F,G) -> [eval_encodeMainData_bb21_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_0',V_window_0',B',C',D',E',F',G')] 
1
#### Cost of phase [61]:eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_window_0,B,C,D,E,F,G) -> [eval_encodeMainData_bb21_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_0',V_window_0',B',C',D',E',F',G')] 
1*it(61)+0
  Such that:it(61) =< -V_window_0+3
it(61) =< -V_window_0+V_window_0'

#### Cost of chains of eval_encodeMainData_bb21_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_window_0,B,C,D,E,F,G):
* Chain [[61],62]: 1*it(61)+0
  Such that:it(61) =< -V_window_0+3

  with precondition: [B=8,V_gr_2=C,V_ch_2=D,V_72=E,V_77=F,V_sfb_0+1=G,5>=V_sfb_0,2>=V_window_0,V_window_0>=0] 


#### Cost of loops [63] 

 * loop 63:eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,B,C,D,E,F,G,H) -> [eval_encodeMainData_bb19_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_0',B',C',D',E',F',G',H')] 
1*s(20)+2
  Such that:s(20) =< 3

#### Cost of phase [63]:eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,B,C,D,E,F,G,H) -> [eval_encodeMainData_bb19_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_0',B',C',D',E',F',G',H')] 
2*it(63)+1*s(21)+0
  Such that:aux(9) =< -V_sfb_0+6
aux(10) =< -V_sfb_0+V_sfb_0'
aux(8) =< aux(9)
it(63) =< aux(9)
aux(8) =< aux(10)
it(63) =< aux(10)
s(21) =< aux(8)*3

#### Cost of chains of eval_encodeMainData_bb19_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,B,C,D,E,F,G,H):
* Chain [[63],64]: 2*it(63)+1*s(21)+0
  Such that:aux(11) =< -V_sfb_0+6
it(63) =< aux(11)
s(21) =< aux(11)*3

  with precondition: [B=9,G=6,H=6,V_gr_2=C,V_ch_2=D,V_72=E,V_77=F,5>=V_sfb_0] 


#### Cost of loops [65] 

 * loop 65:eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_2,B,C,D,E,F) -> [eval_encodeMainData_bb33_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_2',B',C',D',E',F')] 
1
#### Cost of phase [65]:eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_2,B,C,D,E,F) -> [eval_encodeMainData_bb33_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_2',B',C',D',E',F')] 
1*it(65)+0
  Such that:it(65) =< -V_sfb_2+6
it(65) =< -V_sfb_2+V_sfb_2'

#### Cost of chains of eval_encodeMainData_bb33_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_2,B,C,D,E,F):
* Chain [[65],66]: 1*it(65)+0
  Such that:it(65) =< -V_sfb_2+6

  with precondition: [B=10,V_gr_2=C,V_ch_2=D,V_72=E,V_77=F,5>=V_sfb_2,V_sfb_2>=0] 


#### Cost of loops [67] 

 * loop 67:eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_3,B,C,D,E,F) -> [eval_encodeMainData_bb38_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_3',B',C',D',E',F')] 
1
#### Cost of phase [67]:eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_3,B,C,D,E,F) -> [eval_encodeMainData_bb38_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_3',B',C',D',E',F')] 
1*it(67)+0
  Such that:it(67) =< -V_sfb_3+11
it(67) =< -V_sfb_3+V_sfb_3'

#### Cost of chains of eval_encodeMainData_bb38_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_3,B,C,D,E,F):
* Chain [[67],68]: 1*it(67)+0
  Such that:it(67) =< -V_sfb_3+11

  with precondition: [B=11,V_gr_2=C,V_ch_2=D,V_72=E,V_77=F,10>=V_sfb_3,V_sfb_3>=6] 


#### Cost of loops [69] 

 * loop 69:eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_4,B,C,D,E,F) -> [eval_encodeMainData_bb43_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_4',B',C',D',E',F')] 
1
#### Cost of phase [69]:eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_4,B,C,D,E,F) -> [eval_encodeMainData_bb43_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_4',B',C',D',E',F')] 
1*it(69)+0
  Such that:it(69) =< -V_sfb_4+16
it(69) =< -V_sfb_4+V_sfb_4'

#### Cost of chains of eval_encodeMainData_bb43_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_4,B,C,D,E,F):
* Chain [[69],70]: 1*it(69)+0
  Such that:it(69) =< -V_sfb_4+16

  with precondition: [B=12,V_gr_2=C,V_ch_2=D,V_72=E,V_77=F,15>=V_sfb_4,V_sfb_4>=11] 


#### Cost of loops [71] 

 * loop 71:eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_5,B,C,D,E,F,G,H) -> [eval_encodeMainData_bb48_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_5',B',C',D',E',F',G',H')] 
1
#### Cost of phase [71]:eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_5,B,C,D,E,F,G,H) -> [eval_encodeMainData_bb48_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_5',B',C',D',E',F',G',H')] 
1*it(71)+0
  Such that:it(71) =< -V_sfb_5+21
it(71) =< -V_sfb_5+V_sfb_5'

#### Cost of chains of eval_encodeMainData_bb48_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_5,B,C,D,E,F,G,H):
* Chain [[71],72]: 1*it(71)+0
  Such that:it(71) =< -V_sfb_5+21

  with precondition: [B=13,V_gr_2=C,V_ch_2=D,V_72=E,V_77=F,20>=V_sfb_5,V_sfb_5>=16] 


#### Cost of loops [73] 

 * loop 73:eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,V_window_1,B,C,D,E,F,G,H) -> [eval_encodeMainData_bb27_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_0',V_sfb_1',V_window_1',B',C',D',E',F',G',H')] 
1
#### Cost of phase [73]:eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,V_window_1,B,C,D,E,F,G,H) -> [eval_encodeMainData_bb27_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_0',V_sfb_1',V_window_1',B',C',D',E',F',G',H')] 
1*it(73)+0
  Such that:it(73) =< -V_window_1+3
it(73) =< -V_window_1+V_window_1'

#### Cost of chains of eval_encodeMainData_bb27_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,V_window_1,B,C,D,E,F,G,H):
* Chain [[73],74]: 1*it(73)+0
  Such that:it(73) =< -V_window_1+3

  with precondition: [B=9,V_gr_2=C,V_ch_2=D,V_72=E,V_77=F,V_sfb_0=G,V_sfb_1+1=H,11>=V_sfb_1,2>=V_window_1,V_window_1>=0] 


#### Cost of loops [75] 

 * loop 75:eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,B,C,D,E,F,G,H) -> [eval_encodeMainData_bb25_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_0',V_sfb_1',B',C',D',E',F',G',H')] 
1*s(23)+2
  Such that:s(23) =< 3

#### Cost of phase [75]:eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,B,C,D,E,F,G,H) -> [eval_encodeMainData_bb25_in(V_gr_2',V_ch_2',V_72',V_77',V_sfb_0',V_sfb_1',B',C',D',E',F',G',H')] 
2*it(75)+1*s(24)+0
  Such that:aux(13) =< -V_sfb_1+12
aux(14) =< -V_sfb_1+V_sfb_1'
aux(12) =< aux(13)
it(75) =< aux(13)
aux(12) =< aux(14)
it(75) =< aux(14)
s(24) =< aux(12)*3

#### Cost of chains of eval_encodeMainData_bb25_in(V_gr_2,V_ch_2,V_72,V_77,V_sfb_0,V_sfb_1,B,C,D,E,F,G,H):
* Chain [[75],76]: 2*it(75)+1*s(24)+0
  Such that:aux(15) =< -V_sfb_1+12
it(75) =< aux(15)
s(24) =< aux(15)*3

  with precondition: [B=13,H=12,V_gr_2=C,V_ch_2=D,V_72=E,V_77=F,V_sfb_0=G,11>=V_sfb_1] 

* Chain [76]: 0
  with precondition: [B=13,C=V_gr_2,D=V_ch_2,E=V_72,F=V_77,G=V_sfb_0,V_sfb_1=H,V_sfb_1>=12] 


#### Cost of loops [77] 

 * loop 77:eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) -> [eval_encodeMainData_bb16_in(V_gr_2',V_ch_2',B',C')] 
233
#### Cost of phase [77]:eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) -> [eval_encodeMainData_bb16_in(V_gr_2',V_ch_2',B',C')] 
233*it(77)+0
#### Cost of phase [77]:eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C) -> [eval_encodeMainData_bb16_in(V_gr_2',V_ch_2',B',C')] 
233*it(77)+0
#### Cost of chains of eval_encodeMainData_bb16_in(V_gr_2,V_ch_2,B,C):
* Chain [[77]]...: 233*it(77)+0
  with precondition: [B=14] 

* Chain [[77],78]: 233*it(77)+0
  with precondition: [B=14,V_gr_2+1=C,1>=V_gr_2,V_ch_2>=0] 

* Chain [78]: 0
  with precondition: [B=14,V_gr_2+1=C,1>=V_gr_2,V_ch_2>=0] 


#### Cost of loops [80] 

 * loop 80:eval_encodeMainData_bb14_in(V_gr_2,B) -> [eval_encodeMainData_bb14_in(V_gr_2',B')] 
1*s(65)+2
#### Cost of phase [80]:eval_encodeMainData_bb14_in(V_gr_2,B) -> [eval_encodeMainData_bb14_in(V_gr_2',B')] 
2*it(80)+1*s(66)+0
  Such that:it(80) =< -V_gr_2+2
it(80) =< -V_gr_2+V_gr_2'

#### Cost of phase [80]:eval_encodeMainData_bb14_in(V_gr_2,B) -> [eval_encodeMainData_bb14_in(V_gr_2',B')] 
2*it(80)+1*s(66)+0
  Such that:it(80) =< -V_gr_2+2
it(80) =< -V_gr_2+V_gr_2'

#### Cost of chains of eval_encodeMainData_bb14_in(V_gr_2,B):
* Chain [[80],81]: 2*it(80)+1*s(66)+0
  Such that:it(80) =< -V_gr_2+2

  with precondition: [B=17,1>=V_gr_2] 

* Chain [[80],79]...: 2*it(80)+234*s(66)+2
  Such that:it(80) =< -V_gr_2+1

  with precondition: [B=17,0>=V_gr_2] 

* Chain [81]: 0
  with precondition: [B=17,V_gr_2>=2] 

* Chain [79]...: 233*s(67)+2
  with precondition: [B=17,1>=V_gr_2] 


#### Cost of loops [82] 

 * loop 82:eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,V_window_2,B,C,D,E,F,G) -> [eval_encodeMainData_bb61_in(V_ch_3',V_sfb_partition_0',V_222',V_225',V_i_0',V_window_2',B',C',D',E',F',G')] 
1
#### Cost of phase [82]:eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,V_window_2,B,C,D,E,F,G) -> [eval_encodeMainData_bb61_in(V_ch_3',V_sfb_partition_0',V_222',V_225',V_i_0',V_window_2',B',C',D',E',F',G')] 
1*it(82)+0
  Such that:it(82) =< -V_window_2+3
it(82) =< -V_window_2+V_window_2'

#### Cost of chains of eval_encodeMainData_bb61_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,V_window_2,B,C,D,E,F,G):
* Chain [[82],83]: 1*it(82)+0
  Such that:it(82) =< -V_window_2+3

  with precondition: [B=4,V_ch_3=C,V_sfb_partition_0=D,V_222=E,V_225=F,V_i_0+1=G,2>=V_window_2,V_window_2>=0,V_222>=V_i_0+1] 


#### Cost of loops [84] 

 * loop 84:eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,B,C,D) -> [eval_encodeMainData_bb59_in(V_ch_3',V_sfb_partition_0',V_222',V_225',V_i_0',B',C',D')] 
1*s(69)+2
  Such that:s(69) =< 3

#### Cost of phase [84]:eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,B,C,D) -> [eval_encodeMainData_bb59_in(V_ch_3',V_sfb_partition_0',V_222',V_225',V_i_0',B',C',D')] 
2*it(84)+1*s(70)+0
  Such that:aux(29) =< V_222-V_i_0
aux(30) =< V_222-V_i_0-V_222'+V_i_0'
aux(28) =< aux(29)
it(84) =< aux(29)
aux(28) =< aux(30)
it(84) =< aux(30)
s(70) =< aux(28)*3

#### Cost of chains of eval_encodeMainData_bb59_in(V_ch_3,V_sfb_partition_0,V_222,V_225,V_i_0,B,C,D):
* Chain [[84],85]: 2*it(84)+1*s(70)+0
  Such that:aux(31) =< V_222-V_i_0
it(84) =< aux(31)
s(70) =< aux(31)*3

  with precondition: [B=5,V_ch_3=C,V_sfb_partition_0+1=D,3>=V_sfb_partition_0,V_i_0>=0,V_222>=V_i_0+1] 

* Chain [85]: 0
  with precondition: [B=5,C=V_ch_3,V_sfb_partition_0+1=D,3>=V_sfb_partition_0,V_i_0>=0,V_i_0>=V_222] 


#### Cost of loops [86] 

 * loop 86:eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E) -> [eval_encodeMainData_bb57_in(V_ch_3',V_sfb_partition_0',B',C',D',E')] 
1*s(74)+0
#### Cost of phase [86]:eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E) -> [eval_encodeMainData_bb57_in(V_ch_3',V_sfb_partition_0',B',C',D',E')] 
1*s(75)+0
#### Cost of chains of eval_encodeMainData_bb57_in(V_ch_3,V_sfb_partition_0,B,C,D,E):
* Chain [[86],87]: 1*s(75)+0
  with precondition: [B=6,D=4,V_ch_3=C,3>=V_sfb_partition_0] 


#### Cost of loops [88] 

 * loop 88:eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,V_i_1,B,C,D) -> [eval_encodeMainData_bb68_in(V_ch_3',V_sfb_partition_1',V_245',V_248',V_i_1',B',C',D')] 
1
#### Cost of phase [88]:eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,V_i_1,B,C,D) -> [eval_encodeMainData_bb68_in(V_ch_3',V_sfb_partition_1',V_245',V_248',V_i_1',B',C',D')] 
1*it(88)+0
  Such that:it(88) =< V_245-V_i_1
it(88) =< V_245-V_i_1-V_245'+V_i_1'

#### Cost of chains of eval_encodeMainData_bb68_in(V_ch_3,V_sfb_partition_1,V_245,V_248,V_i_1,B,C,D):
* Chain [[88],89]: 1*it(88)+0
  Such that:it(88) =< V_245-V_i_1

  with precondition: [B=3,V_ch_3=C,V_sfb_partition_1+1=D,3>=V_sfb_partition_1,V_i_1>=0,V_245>=V_i_1+1] 

* Chain [89]: 0
  with precondition: [B=3,C=V_ch_3,V_sfb_partition_1+1=D,3>=V_sfb_partition_1,V_i_1>=0,V_i_1>=V_245] 


#### Cost of loops [90] 

 * loop 90:eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1,B,C,D,E) -> [eval_encodeMainData_bb66_in(V_ch_3',V_sfb_partition_1',B',C',D',E')] 
1*s(77)+0
#### Cost of phase [90]:eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1,B,C,D,E) -> [eval_encodeMainData_bb66_in(V_ch_3',V_sfb_partition_1',B',C',D',E')] 
1*s(78)+0
#### Cost of chains of eval_encodeMainData_bb66_in(V_ch_3,V_sfb_partition_1,B,C,D,E):
* Chain [[90],91]: 1*s(78)+0
  with precondition: [B=6,E=4,V_ch_3=C,3>=V_sfb_partition_1] 


#### Cost of loops [92] 

 * loop 92:eval_encodeMainData_bb53_in(V_ch_3,B) -> [eval_encodeMainData_bb53_in(V_ch_3',B')] 
1*s(81)+0
#### Cost of phase [92]:eval_encodeMainData_bb53_in(V_ch_3,B) -> [eval_encodeMainData_bb53_in(V_ch_3',B')] 
1*s(82)+0
#### Cost of phase [92]:eval_encodeMainData_bb53_in(V_ch_3,B) -> [eval_encodeMainData_bb53_in(V_ch_3',B')] 
1*s(82)+0
#### Cost of phase [92]:eval_encodeMainData_bb53_in(V_ch_3,B) -> [eval_encodeMainData_bb53_in(V_ch_3',B')] 
1*s(82)+0
#### Cost of chains of eval_encodeMainData_bb53_in(V_ch_3,B):
* Chain [[92]]...: 1*s(82)+0
  with precondition: [] 

* Chain [[92],94]: 1*s(82)+0
  with precondition: [B=16] 

* Chain [[92],93]: 1*s(82)+0
  with precondition: [B=17] 

* Chain [94]: 0
  with precondition: [B=16] 

* Chain [93]: 0
  with precondition: [B=17] 


#### Cost of chains of loop_cont_eval_encodeMainData_bb53_in(B,A):
* Chain [96]: 0
  with precondition: [B=16] 

* Chain [95]: 0
  with precondition: [B=17] 


#### Cost of chains of loop_cont_eval_encodeMainData_bb7_in(D,A,B):
* Chain [101]: 2*s(85)+1*s(86)+1
  Such that:s(85) =< -A+2

  with precondition: [D=14,1>=A] 

* Chain [100]: 1
  with precondition: [D=14,A>=2] 

* Chain [99]: 1*aux(37)+0
  with precondition: [D=15] 

* Chain [98]...: 467*s(89)+2*s(90)+3
  Such that:s(90) =< -A+1

  with precondition: [D=14,1>=A] 

* Chain [97]...: 1*s(92)+1
  with precondition: [D=15] 


#### Cost of chains of loop_cont_eval_encodeMainData_bb1_in(E,A,B):
* Chain [103]: 1*aux(38)+0
  with precondition: [E=2] 

* Chain [102]...: 1*aux(39)+0
  with precondition: [E=2] 


#### Cost of chains of eval_encodeMainData_bb0_in(B):
* Chain [105]: 2*s(104)+1
  with precondition: [] 

* Chain [104]...: 1*aux(40)+0
  with precondition: [] 


#### Cost of chains of eval_encodeMainData_start(B):
* Chain [107]: 2*s(110)+1
  with precondition: [] 

* Chain [106]...: 1*s(111)+0
  with precondition: [] 


Closed-form bounds of eval_encodeMainData_start(B): 
-------------------------------------
* Chain [107] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [106]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_encodeMainData_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 218 ms.
* Invariants computed in 574 ms.
   - Backward Invariants 246 ms.
   - Transitive Invariants 154 ms.
* Refinement performed in 1089 ms.
* Termination proved in 138 ms.
* Upper bounds computed in 760 ms.
   - Equation cost structures 347 ms.
   - Phase cost structures 409 ms.
   - Chain cost structures 242 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 3088 ms.

