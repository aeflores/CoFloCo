Warning: Ignored call to eval_MDfile0_len_stop/1 in equation loop_cont_eval_MDfile0_len_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_MDfile0_len_5/3,eval_MDfile0_len_6/4,eval_MDfile0_len_8/5,eval_MDfile0_len_9/5,eval_MDfile0_len_bb1_in/2,eval_MDfile0_len_bb3_in/6]
1. non_recursive  : [loop_cont_eval_MDfile0_len_bb1_in/2]
2. non_recursive  : [eval_MDfile0_len_1/2]
3. non_recursive  : [eval_MDfile0_len_0/2]
4. non_recursive  : [eval_MDfile0_len_bb0_in/2]
5. non_recursive  : [eval_MDfile0_len_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_MDfile0_len_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_MDfile0_len_1/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_MDfile0_len_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_MDfile0_len_bb1_in/2 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 


#### Refined cost equations eval_MDfile0_len_bb1_in/2 
* CE 7: eval_MDfile0_len_bb1_in(V__0,B) = 1+ eval_MDfile0_len_bb1_in(C,D)
     [C+1024=V__0,D=2,B=2] 
* CE 8: eval_MDfile0_len_bb1_in(V__0,B) = 1+ eval_MDfile0_len_bb1_in(V__0,C)
     [C=2,B=2] 
* CE 9: eval_MDfile0_len_bb1_in(V__0,B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_MDfile0_len_bb1_in/2 
* CEs [9] --> Loop 6 
* CEs [7] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_MDfile0_len_bb1_in/2 
* Loop 6: eval_MDfile0_len_bb1_in(V__0,B) [B=2] 
* Loop 7: eval_MDfile0_len_bb1_in(V__0,B)->  eval_MDfile0_len_bb1_in(V__0',B')
                  [V__0=V__0'+1024,B'=2,B=2] 
* Loop 8: eval_MDfile0_len_bb1_in(V__0,B)->  eval_MDfile0_len_bb1_in(V__0,B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_MDfile0_len_bb1_in(V__0,B) 

#### Partial ranking functions of CR eval_MDfile0_len_bb1_in(V__0,B) 


### Resulting Chains:eval_MDfile0_len_bb1_in(V__0,B) 
* [[7,8]]...
* [[7,8],6]
* [6]


### Merging Chains  eval_MDfile0_len_bb1_in/2 into  External patterns of execution 
* [[6],[6,[7,8]]] --> 1 
* [[[7,8]]] --> 2 


### Specialization of cost equations eval_MDfile0_len_1/2 
* CE 3 is refined into CE [10,11] 


#### Refined cost equations eval_MDfile0_len_1/2 
* CE 10: eval_MDfile0_len_1(V_longcount,B) = 1+ eval_MDfile0_len_bb1_in(V_longcount,C):1
     [C=2] 
* CE 11: eval_MDfile0_len_1(V_longcount,B) = 1+ eval_MDfile0_len_bb1_in(V_longcount,C):2
     [C=2] 

### Cost equations --> "Loop" of eval_MDfile0_len_1/2 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_MDfile0_len_1/2 
* Loop 9: eval_MDfile0_len_1(V_longcount,B) [] 
* Loop 10: eval_MDfile0_len_1(V_longcount,B) [] 

### Ranking functions of CR eval_MDfile0_len_1(V_longcount,B) 

#### Partial ranking functions of CR eval_MDfile0_len_1(V_longcount,B) 


### Resulting Chains:eval_MDfile0_len_1(V_longcount,B) 
* [10]
* [9]...


### Merging Chains  eval_MDfile0_len_1/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_MDfile0_len_start/2 
* CE 2 is refined into CE [12,13] 


#### Refined cost equations eval_MDfile0_len_start/2 
* CE 12: eval_MDfile0_len_start(V_longcount,B) = 0+ eval_MDfile0_len_1(V_longcount,B):1
     [] 
* CE 13: eval_MDfile0_len_start(V_longcount,B) = 0+ eval_MDfile0_len_1(V_longcount,B):2
     [] 

### Cost equations --> "Loop" of eval_MDfile0_len_start/2 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_MDfile0_len_start/2 
* Loop 11: eval_MDfile0_len_start(V_longcount,B) [] 
* Loop 12: eval_MDfile0_len_start(V_longcount,B) [] 

### Ranking functions of CR eval_MDfile0_len_start(V_longcount,B) 

#### Partial ranking functions of CR eval_MDfile0_len_start(V_longcount,B) 


### Resulting Chains:eval_MDfile0_len_start(V_longcount,B) 
* [12]
* [11]...


### Merging Chains  eval_MDfile0_len_start/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7,8] 

 * loop 7:eval_MDfile0_len_bb1_in(V__0,B) -> [eval_MDfile0_len_bb1_in(V__0',B')] 
1
 * loop 8:eval_MDfile0_len_bb1_in(V__0,B) -> [eval_MDfile0_len_bb1_in(V__0',B')] 
1
#### Cost of phase [7,8]:eval_MDfile0_len_bb1_in(V__0,B) -> [eval_MDfile0_len_bb1_in(V__0',B')] 
2*it(7)+0
#### Cost of phase [7,8]:eval_MDfile0_len_bb1_in(V__0,B) -> [eval_MDfile0_len_bb1_in(V__0',B')] 
2*it(7)+0
#### Cost of chains of eval_MDfile0_len_bb1_in(V__0,B):
* Chain [[7,8]]...: 2*it(7)+0
  with precondition: [B=2] 

* Chain [[7,8],6]: 2*it(7)+0
  with precondition: [B=2] 

* Chain [6]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_MDfile0_len_1(V_longcount,B):
* Chain [10]: 1*s(2)+1
  with precondition: [] 

* Chain [9]...: 2*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_MDfile0_len_start(V_longcount,B):
* Chain [12]: 1*s(4)+1
  with precondition: [] 

* Chain [11]...: 2*s(5)+1
  with precondition: [] 


Closed-form bounds of eval_MDfile0_len_start(V_longcount,B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_MDfile0_len_start(V_longcount,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 42 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 25 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 19 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 142 ms.

