Warning: Ignored call to eval_putspan_stop/1 in equation eval_putspan_102/1 
Warning: Ignored call to eval_putspan_stop/1 in equation eval_putspan_bb34_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_putspan_15/11,eval_putspan_16/11,eval_putspan_bb3_in/10,eval_putspan_bb6_in/11]
1. recursive  : [eval_putspan_35/7,eval_putspan_36/7,eval_putspan_bb10_in/7,eval_putspan_bb11_in/8,eval_putspan_bb1_in/5,loop_cont_eval_putspan_bb3_in/9]
2. non_recursive  : [eval_putspan_102/1]
3. non_recursive  : [eval_putspan_101/1]
4. recursive  : [eval_putspan_68/5,eval_putspan_69/5,eval_putspan_bb15_in/4,eval_putspan_bb18_in/5]
5. recursive  : [eval_putspan_117/4,eval_putspan_118/4,eval_putspan_bb26_in/3,eval_putspan_bb29_in/4]
6. non_recursive  : [eval_putspan_bb34_in/1]
7. non_recursive  : [eval_putspan_bb33_in/1]
8. non_recursive  : [eval_putspan_138/1]
9. non_recursive  : [eval_putspan_137/1]
10. non_recursive  : [loop_cont_eval_putspan_bb26_in/2]
11. non_recursive  : [eval_putspan_bb25_in/2]
12. non_recursive  : [eval_putspan_bb23_in/2]
13. non_recursive  : [eval_putspan_bb22_in/1]
14. non_recursive  : [eval_putspan_89/1]
15. non_recursive  : [eval_putspan_88/1]
16. non_recursive  : [loop_cont_eval_putspan_bb15_in/3]
17. non_recursive  : [loop_cont_eval_putspan_bb1_in/4]
18. non_recursive  : [eval_putspan_bb0_in/2]
19. non_recursive  : [eval_putspan_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_putspan_bb3_in/10
1. SCC is partially evaluated into eval_putspan_bb1_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_putspan_bb15_in/4
5. SCC is partially evaluated into eval_putspan_bb26_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_putspan_bb26_in/2
11. SCC is partially evaluated into eval_putspan_bb25_in/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into loop_cont_eval_putspan_bb15_in/3
17. SCC is partially evaluated into loop_cont_eval_putspan_bb1_in/4
18. SCC is partially evaluated into eval_putspan_bb0_in/2
19. SCC is partially evaluated into eval_putspan_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_putspan_bb3_in/10 
* CE 16 is refined into CE [32] 
* CE 15 is refined into CE [33] 
* CE 14 is refined into CE [34] 
* CE 13 is refined into CE [35] 


#### Refined cost equations eval_putspan_bb3_in/10 
* CE 32: eval_putspan_bb3_in(A,B,C,D,E,A,B,C,D,F) = 0
     [D>=C,B>=2624,C+F=D,E=4] 
* CE 33: eval_putspan_bb3_in(A,B,C,D,E,A,B,C,D,F) = 0
     [D>=C,B>=2624,E=3] 
* CE 34: eval_putspan_bb3_in(A,B,C,D,E,A,B,C,D,F) = 0
     [D>=C,B>=2624,E=2] 
* CE 35: eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G) = 1+ eval_putspan_bb3_in(V_bit_0,V__0,H,I,B,C,D,E,F,G)
     [V_length_0>=V_bit_1+1,B>=2,V__0>=2624,4>=B,V_bit_1+H=V_length_0,I=8] 

### Cost equations --> "Loop" of eval_putspan_bb3_in/10 
* CEs [35] --> Loop 29 
* CEs [32] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [34] --> Loop 32 

#### Loops of eval_putspan_bb3_in/10 
* Loop 29: eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G)->  eval_putspan_bb3_in(V_bit_0,V__0,V_length_0',V_bit_1',B,C,D,E,F,G)
                  [V_length_0>=V_bit_1+1,B>=2,V__0>=2624,4>=B,V_length_0=V_bit_1+V_length_0',V_bit_1'=8] 
* Loop 30: eval_putspan_bb3_in(A,B,C,D,E,A,B,C,D,F) [D>=C,B>=2624,C+F=D,E=4] 
* Loop 31: eval_putspan_bb3_in(A,B,C,D,E,A,B,C,D,F) [D>=C,B>=2624,E=3] 
* Loop 32: eval_putspan_bb3_in(A,B,C,D,E,A,B,C,D,F) [D>=C,B>=2624,E=2] 

### Ranking functions of CR eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G) 
* RF of phase [29]: [V_length_0/8-V_bit_1/8]

#### Partial ranking functions of CR eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V_length_0/8-V_bit_1/8


### Resulting Chains:eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G) 
* [[29],32]
* [[29],31]
* [[29],30]
* [32]
* [31]
* [30]


### Merging Chains  eval_putspan_bb3_in/10 into  External patterns of execution 
* [[32,[29]]] --> 1 
* [[32]] --> 2 
* [[31,[29]]] --> 3 
* [[31]] --> 4 
* [[30,[29]]] --> 5 
* [[30]] --> 6 


### Specialization of cost equations eval_putspan_bb1_in/5 
* CE 9 is refined into CE [36] 
* CE 8 is refined into CE [37] 
* CE 7 is refined into CE [38] 
* CE 4 is refined into CE [39,40] 
* CE 5 is refined into CE [41,42] 
* CE 6 is refined into CE [43,44] 


#### Refined cost equations eval_putspan_bb1_in/5 
* CE 36: eval_putspan_bb1_in(A,B,C,A,D) = 0
     [2623>=B,C=10] 
* CE 37: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) = 0
     [2623>=V__0,B=9] 
* CE 38: eval_putspan_bb1_in(A,B,C,D,A) = 0
     [2623>=B,C=8] 
* CE 39: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) = 2+ eval_putspan_bb3_in(V_bit_0,V__0,E,V_bit_0,F,V_bit_0,V__0,G,H,I):5+ eval_putspan_bb1_in(J,K,B,C,D)
     [E>=V_bit_0+G,G>=1,V__0>=2624,8>=G,G+J=8,G+I=8,H=8,F=4] 
* CE 40: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) = 2+ eval_putspan_bb3_in(V_bit_0,V__0,E,V_bit_0,F,V_bit_0,V__0,E,V_bit_0,G):6+ eval_putspan_bb1_in(H,I,B,C,D)
     [V_bit_0>=E,V__0>=2624,V_bit_0=E+H,V_bit_0=E+G,F=4] 
* CE 41: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) = 2+ eval_putspan_bb3_in(V_bit_0,V__0,E,V_bit_0,F,V_bit_0,V__0,G,H,I):3+ eval_putspan_bb1_in(J,K,B,C,D)
     [E>=V_bit_0+G,G>=1,V__0>=2624,8>=G,J=8,H=8,F=3] 
* CE 42: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) = 2+ eval_putspan_bb3_in(V_bit_0,V__0,E,V_bit_0,F,V_bit_0,V__0,E,V_bit_0,G):4+ eval_putspan_bb1_in(H,I,B,C,D)
     [V_bit_0>=E,V__0>=2624,H=8,F=3] 
* CE 43: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) = 2+ eval_putspan_bb3_in(V_bit_0,V__0,E,V_bit_0,F,V_bit_0,V__0,G,H,I):1+ eval_putspan_bb1_in(J,K,B,C,D)
     [E>=V_bit_0+G,G>=1,V__0>=2624,8>=G,J=8,H=8,F=2] 
* CE 44: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) = 2+ eval_putspan_bb3_in(V_bit_0,V__0,E,V_bit_0,F,V_bit_0,V__0,E,V_bit_0,G):2+ eval_putspan_bb1_in(H,I,B,C,D)
     [V_bit_0>=E,V__0>=2624,H=8,F=2] 

### Cost equations --> "Loop" of eval_putspan_bb1_in/5 
* CEs [39] --> Loop 33 
* CEs [40,41,42,43,44] --> Loop 34 
* CEs [36] --> Loop 35 
* CEs [37] --> Loop 36 
* CEs [38] --> Loop 37 

#### Loops of eval_putspan_bb1_in/5 
* Loop 33: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D)->  eval_putspan_bb1_in(V_bit_0',V__0',B,C,D)
                  [V_bit_0'>=0,V__0>=2624,7>=V_bit_0'] 
* Loop 34: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D)->  eval_putspan_bb1_in(V_bit_0',V__0',B,C,D)
                  [V_bit_0'>=0,V__0>=2624] 
* Loop 35: eval_putspan_bb1_in(A,B,C,A,D) [2623>=B,C=10] 
* Loop 36: eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) [2623>=V__0,B=9] 
* Loop 37: eval_putspan_bb1_in(A,B,C,D,A) [2623>=B,C=8] 

### Ranking functions of CR eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) 

#### Partial ranking functions of CR eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) 


### Resulting Chains:eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) 
* [[33,34]]...
* [[33,34],37]
* [[33,34],36]
* [[33,34],35]
* [37]
* [36]
* [35]


### Merging Chains  eval_putspan_bb1_in/5 into  External patterns of execution 
* [[37]] --> 1 
* [[37,[33,34]]] --> 2 
* [[36]] --> 3 
* [[36,[33,34]]] --> 4 
* [[35]] --> 5 
* [[35,[33,34]]] --> 6 
* [[[33,34]]] --> 7 


### Specialization of cost equations eval_putspan_bb15_in/4 
* CE 20 is refined into CE [45] 
* CE 19 is refined into CE [46] 
* CE 18 is refined into CE [47] 
* CE 17 is refined into CE [48] 


#### Refined cost equations eval_putspan_bb15_in/4 
* CE 45: eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) = 0
     [V_bit_3>=V_length_1,V_bit_3=V_length_1+C,B=13] 
* CE 46: eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) = 0
     [V_bit_3>=V_length_1,B=12] 
* CE 47: eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) = 0
     [V_bit_3>=V_length_1,B=11] 
* CE 48: eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) = 1+ eval_putspan_bb15_in(D,E,B,C)
     [V_length_1>=V_bit_3+1,V_bit_3+D=V_length_1,E=8] 

### Cost equations --> "Loop" of eval_putspan_bb15_in/4 
* CEs [48] --> Loop 38 
* CEs [45] --> Loop 39 
* CEs [46] --> Loop 40 
* CEs [47] --> Loop 41 

#### Loops of eval_putspan_bb15_in/4 
* Loop 38: eval_putspan_bb15_in(V_length_1,V_bit_3,B,C)->  eval_putspan_bb15_in(V_length_1',V_bit_3',B,C)
                  [V_length_1>=V_bit_3+1,V_length_1=V_bit_3+V_length_1',V_bit_3'=8] 
* Loop 39: eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) [V_bit_3>=V_length_1,V_length_1+C=V_bit_3,B=13] 
* Loop 40: eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) [V_bit_3>=V_length_1,B=12] 
* Loop 41: eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) [V_bit_3>=V_length_1,B=11] 

### Ranking functions of CR eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) 
* RF of phase [38]: [V_length_1/8-V_bit_3/8]

#### Partial ranking functions of CR eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) 
* Partial RF of phase [38]:
  - RF of loop [38:1]:
    V_length_1/8-V_bit_3/8


### Resulting Chains:eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) 
* [[38],41]
* [[38],40]
* [[38],39]
* [41]
* [40]
* [39]


### Merging Chains  eval_putspan_bb15_in/4 into  External patterns of execution 
* [[41]] --> 1 
* [[41,[38]]] --> 2 
* [[40]] --> 3 
* [[40,[38]]] --> 4 
* [[39]] --> 5 
* [[39,[38]]] --> 6 


### Specialization of cost equations eval_putspan_bb26_in/3 
* CE 28 is refined into CE [49] 
* CE 27 is refined into CE [50] 
* CE 26 is refined into CE [51] 
* CE 25 is refined into CE [52] 


#### Refined cost equations eval_putspan_bb26_in/3 
* CE 49: eval_putspan_bb26_in(V_length_2,V_bit_6,B) = 0
     [V_bit_6>=V_length_2,B=7] 
* CE 50: eval_putspan_bb26_in(V_length_2,V_bit_6,B) = 0
     [V_bit_6>=V_length_2,B=6] 
* CE 51: eval_putspan_bb26_in(V_length_2,V_bit_6,B) = 0
     [V_bit_6>=V_length_2,B=5] 
* CE 52: eval_putspan_bb26_in(V_length_2,V_bit_6,B) = 1+ eval_putspan_bb26_in(C,D,B)
     [V_length_2>=V_bit_6+1,V_bit_6+C=V_length_2,D=8] 

### Cost equations --> "Loop" of eval_putspan_bb26_in/3 
* CEs [52] --> Loop 42 
* CEs [49] --> Loop 43 
* CEs [50] --> Loop 44 
* CEs [51] --> Loop 45 

#### Loops of eval_putspan_bb26_in/3 
* Loop 42: eval_putspan_bb26_in(V_length_2,V_bit_6,B)->  eval_putspan_bb26_in(V_length_2',V_bit_6',B)
                  [V_length_2>=V_bit_6+1,V_length_2=V_bit_6+V_length_2',V_bit_6'=8] 
* Loop 43: eval_putspan_bb26_in(V_length_2,V_bit_6,B) [V_bit_6>=V_length_2,B=7] 
* Loop 44: eval_putspan_bb26_in(V_length_2,V_bit_6,B) [V_bit_6>=V_length_2,B=6] 
* Loop 45: eval_putspan_bb26_in(V_length_2,V_bit_6,B) [V_bit_6>=V_length_2,B=5] 

### Ranking functions of CR eval_putspan_bb26_in(V_length_2,V_bit_6,B) 
* RF of phase [42]: [V_length_2/8-V_bit_6/8]

#### Partial ranking functions of CR eval_putspan_bb26_in(V_length_2,V_bit_6,B) 
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    V_length_2/8-V_bit_6/8


### Resulting Chains:eval_putspan_bb26_in(V_length_2,V_bit_6,B) 
* [[42],45]
* [[42],44]
* [[42],43]
* [45]
* [44]
* [43]


### Merging Chains  eval_putspan_bb26_in/3 into  External patterns of execution 
* [[45]] --> 1 
* [[45,[42]]] --> 2 
* [[44]] --> 3 
* [[44,[42]]] --> 4 
* [[43]] --> 5 
* [[43,[42]]] --> 6 


### Specialization of cost equations loop_cont_eval_putspan_bb26_in/2 
* CE 31 is refined into CE [53] 
* CE 30 is refined into CE [54] 
* CE 29 is refined into CE [55] 


#### Refined cost equations loop_cont_eval_putspan_bb26_in/2 
* CE 53: loop_cont_eval_putspan_bb26_in(D,A) = 0
     [D=7] 
* CE 54: loop_cont_eval_putspan_bb26_in(D,A) = 0
     [D=6] 
* CE 55: loop_cont_eval_putspan_bb26_in(D,A) = 0
     [D=5] 

### Cost equations --> "Loop" of loop_cont_eval_putspan_bb26_in/2 
* CEs [53] --> Loop 46 
* CEs [54] --> Loop 47 
* CEs [55] --> Loop 48 

#### Loops of loop_cont_eval_putspan_bb26_in/2 
* Loop 46: loop_cont_eval_putspan_bb26_in(D,A) [D=7] 
* Loop 47: loop_cont_eval_putspan_bb26_in(D,A) [D=6] 
* Loop 48: loop_cont_eval_putspan_bb26_in(D,A) [D=5] 

### Ranking functions of CR loop_cont_eval_putspan_bb26_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_putspan_bb26_in(D,A) 


### Resulting Chains:loop_cont_eval_putspan_bb26_in(D,A) 
* [48]
* [47]
* [46]


### Merging Chains  loop_cont_eval_putspan_bb26_in/2 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 
* [[46]] --> 3 


### Specialization of cost equations eval_putspan_bb25_in/2 
* CE 24 is refined into CE [56,57,58,59,60,61] 


#### Refined cost equations eval_putspan_bb25_in/2 
* CE 56: eval_putspan_bb25_in(V_bit_5,B) = 1+ eval_putspan_bb26_in(C,V_bit_5,D):1+ loop_cont_eval_putspan_bb26_in(E,B):1
     [V_bit_5>=C,E=5,D=5] 
* CE 57: eval_putspan_bb25_in(V_bit_5,B) = 1+ eval_putspan_bb26_in(C,V_bit_5,D):2+ loop_cont_eval_putspan_bb26_in(E,B):1
     [C>=V_bit_5+1,E=5,D=5] 
* CE 58: eval_putspan_bb25_in(V_bit_5,B) = 1+ eval_putspan_bb26_in(C,V_bit_5,D):3+ loop_cont_eval_putspan_bb26_in(E,B):2
     [V_bit_5>=C,E=6,D=6] 
* CE 59: eval_putspan_bb25_in(V_bit_5,B) = 1+ eval_putspan_bb26_in(C,V_bit_5,D):4+ loop_cont_eval_putspan_bb26_in(E,B):2
     [C>=V_bit_5+1,E=6,D=6] 
* CE 60: eval_putspan_bb25_in(V_bit_5,B) = 1+ eval_putspan_bb26_in(C,V_bit_5,D):5+ loop_cont_eval_putspan_bb26_in(E,B):3
     [V_bit_5>=C,E=7,D=7] 
* CE 61: eval_putspan_bb25_in(V_bit_5,B) = 1+ eval_putspan_bb26_in(C,V_bit_5,D):6+ loop_cont_eval_putspan_bb26_in(E,B):3
     [C>=V_bit_5+1,E=7,D=7] 

### Cost equations --> "Loop" of eval_putspan_bb25_in/2 
* CEs [56,57,58,59,60,61] --> Loop 49 

#### Loops of eval_putspan_bb25_in/2 
* Loop 49: eval_putspan_bb25_in(V_bit_5,B) [] 

### Ranking functions of CR eval_putspan_bb25_in(V_bit_5,B) 

#### Partial ranking functions of CR eval_putspan_bb25_in(V_bit_5,B) 


### Resulting Chains:eval_putspan_bb25_in(V_bit_5,B) 
* [49]


### Merging Chains  eval_putspan_bb25_in/2 into  External patterns of execution 
* [[49]] --> 1 


### Specialization of cost equations loop_cont_eval_putspan_bb15_in/3 
* CE 23 is refined into CE [62] 
* CE 22 is refined into CE [63] 
* CE 21 is refined into CE [64] 


#### Refined cost equations loop_cont_eval_putspan_bb15_in/3 
* CE 62: loop_cont_eval_putspan_bb15_in(E,A,B) = 0+ eval_putspan_bb25_in(A,B):1
     [E=13] 
* CE 63: loop_cont_eval_putspan_bb15_in(E,A,B) = 0+ eval_putspan_bb25_in(F,B):1
     [F=8,E=12] 
* CE 64: loop_cont_eval_putspan_bb15_in(E,A,B) = 0+ eval_putspan_bb25_in(F,B):1
     [F=8,E=11] 

### Cost equations --> "Loop" of loop_cont_eval_putspan_bb15_in/3 
* CEs [62] --> Loop 50 
* CEs [63] --> Loop 51 
* CEs [64] --> Loop 52 

#### Loops of loop_cont_eval_putspan_bb15_in/3 
* Loop 50: loop_cont_eval_putspan_bb15_in(E,A,B) [E=13] 
* Loop 51: loop_cont_eval_putspan_bb15_in(E,A,B) [E=12] 
* Loop 52: loop_cont_eval_putspan_bb15_in(E,A,B) [E=11] 

### Ranking functions of CR loop_cont_eval_putspan_bb15_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_putspan_bb15_in(E,A,B) 


### Resulting Chains:loop_cont_eval_putspan_bb15_in(E,A,B) 
* [52]
* [51]
* [50]


### Merging Chains  loop_cont_eval_putspan_bb15_in/3 into  External patterns of execution 
* [[52]] --> 1 
* [[51]] --> 2 
* [[50]] --> 3 


### Specialization of cost equations loop_cont_eval_putspan_bb1_in/4 
* CE 12 is refined into CE [65] 
* CE 11 is refined into CE [66] 
* CE 10 is refined into CE [67,68,69,70,71,72] 


#### Refined cost equations loop_cont_eval_putspan_bb1_in/4 
* CE 65: loop_cont_eval_putspan_bb1_in(G,A,B,C) = 0+ eval_putspan_bb25_in(A,C):1
     [G=10] 
* CE 66: loop_cont_eval_putspan_bb1_in(G,A,B,C) = 0
     [G=9] 
* CE 67: loop_cont_eval_putspan_bb1_in(G,A,B,C) = 1+ eval_putspan_bb15_in(A,B,H,I):1+ loop_cont_eval_putspan_bb15_in(J,I,C):1
     [B>=A,J=11,H=11,G=8] 
* CE 68: loop_cont_eval_putspan_bb1_in(G,A,B,C) = 1+ eval_putspan_bb15_in(A,B,H,I):2+ loop_cont_eval_putspan_bb15_in(J,I,C):1
     [A>=B+1,J=11,H=11,G=8] 
* CE 69: loop_cont_eval_putspan_bb1_in(G,A,B,C) = 1+ eval_putspan_bb15_in(A,B,H,I):3+ loop_cont_eval_putspan_bb15_in(J,I,C):2
     [B>=A,J=12,H=12,G=8] 
* CE 70: loop_cont_eval_putspan_bb1_in(G,A,B,C) = 1+ eval_putspan_bb15_in(A,B,H,I):4+ loop_cont_eval_putspan_bb15_in(J,I,C):2
     [A>=B+1,J=12,H=12,G=8] 
* CE 71: loop_cont_eval_putspan_bb1_in(G,A,B,C) = 1+ eval_putspan_bb15_in(A,B,H,I):5+ loop_cont_eval_putspan_bb15_in(J,K,C):3
     [B>=A,B=A+K,B=A+I,J=13,H=13,G=8] 
* CE 72: loop_cont_eval_putspan_bb1_in(G,A,B,C) = 1+ eval_putspan_bb15_in(A,B,H,I):6+ loop_cont_eval_putspan_bb15_in(J,I,C):3
     [A+I>=B+8,I>=0,7>=I,J=13,H=13,G=8] 

### Cost equations --> "Loop" of loop_cont_eval_putspan_bb1_in/4 
* CEs [65] --> Loop 53 
* CEs [66] --> Loop 54 
* CEs [68,70,72] --> Loop 55 
* CEs [67,69,71] --> Loop 56 

#### Loops of loop_cont_eval_putspan_bb1_in/4 
* Loop 53: loop_cont_eval_putspan_bb1_in(G,A,B,C) [G=10] 
* Loop 54: loop_cont_eval_putspan_bb1_in(G,A,B,C) [G=9] 
* Loop 55: loop_cont_eval_putspan_bb1_in(G,A,B,C) [A>=B+1,G=8] 
* Loop 56: loop_cont_eval_putspan_bb1_in(G,A,B,C) [B>=A,G=8] 

### Ranking functions of CR loop_cont_eval_putspan_bb1_in(G,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_putspan_bb1_in(G,A,B,C) 


### Resulting Chains:loop_cont_eval_putspan_bb1_in(G,A,B,C) 
* [56]
* [55]
* [54]
* [53]


### Merging Chains  loop_cont_eval_putspan_bb1_in/4 into  External patterns of execution 
* [[56]] --> 1 
* [[55]] --> 2 
* [[54]] --> 3 
* [[53]] --> 4 


### Specialization of cost equations eval_putspan_bb0_in/2 
* CE 3 is refined into CE [73,74,75,76,77,78,79,80,81] 


#### Refined cost equations eval_putspan_bb0_in/2 
* CE 73: eval_putspan_bb0_in(V_span,B) = 1+ eval_putspan_bb1_in(C,V_span,D,E,C):1+ loop_cont_eval_putspan_bb1_in(F,E,C,B):1
     [C>=E,2623>=V_span,F=8,D=8] 
* CE 74: eval_putspan_bb0_in(V_span,B) = 1+ eval_putspan_bb1_in(C,V_span,D,E,C):1+ loop_cont_eval_putspan_bb1_in(F,E,C,B):2
     [E>=C+1,2623>=V_span,F=8,D=8] 
* CE 75: eval_putspan_bb0_in(V_span,B) = 1+ eval_putspan_bb1_in(C,V_span,D,E,F):2+ loop_cont_eval_putspan_bb1_in(G,E,F,B):1
     [F>=E,F>=0,V_span>=2624,G=8,D=8] 
* CE 76: eval_putspan_bb0_in(V_span,B) = 1+ eval_putspan_bb1_in(C,V_span,D,E,F):2+ loop_cont_eval_putspan_bb1_in(G,E,F,B):2
     [E>=F+1,F>=0,V_span>=2624,G=8,D=8] 
* CE 77: eval_putspan_bb0_in(V_span,B) = 1+ eval_putspan_bb1_in(C,V_span,D,E,F):3+ loop_cont_eval_putspan_bb1_in(G,E,F,B):3
     [2623>=V_span,G=9,D=9] 
* CE 78: eval_putspan_bb0_in(V_span,B) = 1+ eval_putspan_bb1_in(C,V_span,D,E,F):4+ loop_cont_eval_putspan_bb1_in(G,E,F,B):3
     [V_span>=2624,G=9,D=9] 
* CE 79: eval_putspan_bb0_in(V_span,B) = 1+ eval_putspan_bb1_in(C,V_span,D,C,E):5+ loop_cont_eval_putspan_bb1_in(F,C,E,B):4
     [2623>=V_span,F=10,D=10] 
* CE 80: eval_putspan_bb0_in(V_span,B) = 1+ eval_putspan_bb1_in(C,V_span,D,E,F):6+ loop_cont_eval_putspan_bb1_in(G,E,F,B):4
     [E>=0,V_span>=2624,G=10,D=10] 
* CE 81: eval_putspan_bb0_in(V_span,B) = 1+ eval_putspan_bb1_in(C,V_span,D,E,F):7
     [V_span>=2624] 

### Cost equations --> "Loop" of eval_putspan_bb0_in/2 
* CEs [81] --> Loop 57 
* CEs [75,76,78,80] --> Loop 58 
* CEs [73,74,77,79] --> Loop 59 

#### Loops of eval_putspan_bb0_in/2 
* Loop 57: eval_putspan_bb0_in(V_span,B) [V_span>=2624] 
* Loop 58: eval_putspan_bb0_in(V_span,B) [V_span>=2624] 
* Loop 59: eval_putspan_bb0_in(V_span,B) [2623>=V_span] 

### Ranking functions of CR eval_putspan_bb0_in(V_span,B) 

#### Partial ranking functions of CR eval_putspan_bb0_in(V_span,B) 


### Resulting Chains:eval_putspan_bb0_in(V_span,B) 
* [59]
* [58]
* [57]...


### Merging Chains  eval_putspan_bb0_in/2 into  External patterns of execution 
* [[59]] --> 1 
* [[58]] --> 2 
* [[57]] --> 3 


### Specialization of cost equations eval_putspan_start/2 
* CE 2 is refined into CE [82,83,84] 


#### Refined cost equations eval_putspan_start/2 
* CE 82: eval_putspan_start(V_span,B) = 0+ eval_putspan_bb0_in(V_span,B):1
     [2623>=V_span] 
* CE 83: eval_putspan_start(V_span,B) = 0+ eval_putspan_bb0_in(V_span,B):2
     [V_span>=2624] 
* CE 84: eval_putspan_start(V_span,B) = 0+ eval_putspan_bb0_in(V_span,B):3
     [V_span>=2624] 

### Cost equations --> "Loop" of eval_putspan_start/2 
* CEs [84] --> Loop 60 
* CEs [83] --> Loop 61 
* CEs [82] --> Loop 62 

#### Loops of eval_putspan_start/2 
* Loop 60: eval_putspan_start(V_span,B) [V_span>=2624] 
* Loop 61: eval_putspan_start(V_span,B) [V_span>=2624] 
* Loop 62: eval_putspan_start(V_span,B) [2623>=V_span] 

### Ranking functions of CR eval_putspan_start(V_span,B) 

#### Partial ranking functions of CR eval_putspan_start(V_span,B) 


### Resulting Chains:eval_putspan_start(V_span,B) 
* [62]
* [61]
* [60]...


### Merging Chains  eval_putspan_start/2 into  External patterns of execution 
* [[62]] --> 1 
* [[61]] --> 2 
* [[60]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [29] 

 * loop 29:eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G) -> [eval_putspan_bb3_in(V_bit_0',V__0',V_length_0',V_bit_1',B',C',D',E',F',G')] 
1
#### Cost of phase [29]:eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G) -> [eval_putspan_bb3_in(V_bit_0',V__0',V_length_0',V_bit_1',B',C',D',E',F',G')] 
1*it(29)+0
  Such that:it(29) =< V_length_0/8-V_bit_1/8
it(29) =< V_length_0/8-V_bit_1/8-V_length_0'/8+V_bit_1'/8

#### Cost of phase [29]:eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G) -> [eval_putspan_bb3_in(V_bit_0',V__0',V_length_0',V_bit_1',B',C',D',E',F',G')] 
1*it(29)+0
  Such that:it(29) =< V_length_0/8-V_bit_1/8
it(29) =< V_length_0/8-V_bit_1/8-V_length_0'/8+V_bit_1'/8

#### Cost of phase [29]:eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G) -> [eval_putspan_bb3_in(V_bit_0',V__0',V_length_0',V_bit_1',B',C',D',E',F',G')] 
1*it(29)+0
  Such that:it(29) =< V_length_0/8-V_bit_1/8
it(29) =< V_length_0/8-V_bit_1/8-V_length_0'/8+V_bit_1'/8

#### Cost of chains of eval_putspan_bb3_in(V_bit_0,V__0,V_length_0,V_bit_1,B,C,D,E,F,G):
* Chain [[29],32]: 1*it(29)+0
  Such that:it(29) =< V_length_0/8-V_bit_1/8

  with precondition: [B=2,F=8,V_bit_0=C,V__0=D,8>=E,V__0>=2624,E>=1,V_length_0>=V_bit_1+E] 

* Chain [[29],31]: 1*it(29)+0
  Such that:it(29) =< V_length_0/8-V_bit_1/8

  with precondition: [B=3,F=8,V_bit_0=C,V__0=D,8>=E,V__0>=2624,E>=1,V_length_0>=V_bit_1+E] 

* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< V_length_0/8-V_bit_1/8

  with precondition: [B=4,F=8,V_bit_0=C,V__0=D,E+G=8,8>=E,V__0>=2624,E>=1,V_length_0>=V_bit_1+E] 

* Chain [32]: 0
  with precondition: [B=2,C=V_bit_0,V__0=D,V_length_0=E,V_bit_1=F,V__0>=2624,V_bit_1>=V_length_0] 

* Chain [31]: 0
  with precondition: [B=3,C=V_bit_0,V__0=D,V_length_0=E,V_bit_1=F,V__0>=2624,V_bit_1>=V_length_0] 

* Chain [30]: 0
  with precondition: [B=4,C=V_bit_0,V__0=D,V_length_0=E,V_bit_1=F,V_length_0+G=V_bit_1,V__0>=2624,V_bit_1>=V_length_0] 


#### Cost of loops [33,34] 

 * loop 33:eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) -> [eval_putspan_bb1_in(V_bit_0',V__0',B',C',D')] 
1*s(2)+2
 * loop 34:eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) -> [eval_putspan_bb1_in(V_bit_0',V__0',B',C',D')] 
1*s(5)+0
#### Cost of phase [33,34]:eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) -> [eval_putspan_bb1_in(V_bit_0',V__0',B',C',D')] 
4*it(33)+0
#### Cost of phase [33,34]:eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) -> [eval_putspan_bb1_in(V_bit_0',V__0',B',C',D')] 
4*it(33)+0
#### Cost of phase [33,34]:eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) -> [eval_putspan_bb1_in(V_bit_0',V__0',B',C',D')] 
4*it(33)+0
#### Cost of phase [33,34]:eval_putspan_bb1_in(V_bit_0,V__0,B,C,D) -> [eval_putspan_bb1_in(V_bit_0',V__0',B',C',D')] 
4*it(33)+0
#### Cost of chains of eval_putspan_bb1_in(V_bit_0,V__0,B,C,D):
* Chain [[33,34]]...: 4*it(33)+0
  with precondition: [V__0>=2624] 

* Chain [[33,34],37]: 4*it(33)+0
  with precondition: [B=8,V__0>=2624,D>=0] 

* Chain [[33,34],36]: 4*it(33)+0
  with precondition: [B=9,V__0>=2624] 

* Chain [[33,34],35]: 4*it(33)+0
  with precondition: [B=10,V__0>=2624,C>=0] 

* Chain [37]: 0
  with precondition: [B=8,D=V_bit_0,2623>=V__0] 

* Chain [36]: 0
  with precondition: [B=9,2623>=V__0] 

* Chain [35]: 0
  with precondition: [B=10,C=V_bit_0,2623>=V__0] 


#### Cost of loops [38] 

 * loop 38:eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) -> [eval_putspan_bb15_in(V_length_1',V_bit_3',B',C')] 
1
#### Cost of phase [38]:eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) -> [eval_putspan_bb15_in(V_length_1',V_bit_3',B',C')] 
1*it(38)+0
  Such that:it(38) =< V_length_1/8-V_bit_3/8
it(38) =< V_length_1/8-V_bit_3/8-V_length_1'/8+V_bit_3'/8

#### Cost of phase [38]:eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) -> [eval_putspan_bb15_in(V_length_1',V_bit_3',B',C')] 
1*it(38)+0
  Such that:it(38) =< V_length_1/8-V_bit_3/8
it(38) =< V_length_1/8-V_bit_3/8-V_length_1'/8+V_bit_3'/8

#### Cost of phase [38]:eval_putspan_bb15_in(V_length_1,V_bit_3,B,C) -> [eval_putspan_bb15_in(V_length_1',V_bit_3',B',C')] 
1*it(38)+0
  Such that:it(38) =< V_length_1/8-V_bit_3/8
it(38) =< V_length_1/8-V_bit_3/8-V_length_1'/8+V_bit_3'/8

#### Cost of chains of eval_putspan_bb15_in(V_length_1,V_bit_3,B,C):
* Chain [[38],41]: 1*it(38)+0
  Such that:it(38) =< V_length_1/8-V_bit_3/8

  with precondition: [B=11,V_length_1>=V_bit_3+1] 

* Chain [[38],40]: 1*it(38)+0
  Such that:it(38) =< V_length_1/8-V_bit_3/8

  with precondition: [B=12,V_length_1>=V_bit_3+1] 

* Chain [[38],39]: 1*it(38)+0
  Such that:it(38) =< V_length_1/8-V_bit_3/8

  with precondition: [B=13,7>=C,C>=0,V_length_1+C>=V_bit_3+8] 

* Chain [41]: 0
  with precondition: [B=11,V_bit_3>=V_length_1] 

* Chain [40]: 0
  with precondition: [B=12,V_bit_3>=V_length_1] 

* Chain [39]: 0
  with precondition: [B=13,V_bit_3=V_length_1+C,V_bit_3>=V_length_1] 


#### Cost of loops [42] 

 * loop 42:eval_putspan_bb26_in(V_length_2,V_bit_6,B) -> [eval_putspan_bb26_in(V_length_2',V_bit_6',B')] 
1
#### Cost of phase [42]:eval_putspan_bb26_in(V_length_2,V_bit_6,B) -> [eval_putspan_bb26_in(V_length_2',V_bit_6',B')] 
1*it(42)+0
  Such that:it(42) =< V_length_2/8-V_bit_6/8
it(42) =< V_length_2/8-V_bit_6/8-V_length_2'/8+V_bit_6'/8

#### Cost of phase [42]:eval_putspan_bb26_in(V_length_2,V_bit_6,B) -> [eval_putspan_bb26_in(V_length_2',V_bit_6',B')] 
1*it(42)+0
  Such that:it(42) =< V_length_2/8-V_bit_6/8
it(42) =< V_length_2/8-V_bit_6/8-V_length_2'/8+V_bit_6'/8

#### Cost of phase [42]:eval_putspan_bb26_in(V_length_2,V_bit_6,B) -> [eval_putspan_bb26_in(V_length_2',V_bit_6',B')] 
1*it(42)+0
  Such that:it(42) =< V_length_2/8-V_bit_6/8
it(42) =< V_length_2/8-V_bit_6/8-V_length_2'/8+V_bit_6'/8

#### Cost of chains of eval_putspan_bb26_in(V_length_2,V_bit_6,B):
* Chain [[42],45]: 1*it(42)+0
  Such that:it(42) =< V_length_2/8-V_bit_6/8

  with precondition: [B=5,V_length_2>=V_bit_6+1] 

* Chain [[42],44]: 1*it(42)+0
  Such that:it(42) =< V_length_2/8-V_bit_6/8

  with precondition: [B=6,V_length_2>=V_bit_6+1] 

* Chain [[42],43]: 1*it(42)+0
  Such that:it(42) =< V_length_2/8-V_bit_6/8

  with precondition: [B=7,V_length_2>=V_bit_6+1] 

* Chain [45]: 0
  with precondition: [B=5,V_bit_6>=V_length_2] 

* Chain [44]: 0
  with precondition: [B=6,V_bit_6>=V_length_2] 

* Chain [43]: 0
  with precondition: [B=7,V_bit_6>=V_length_2] 


#### Cost of chains of loop_cont_eval_putspan_bb26_in(D,A):
* Chain [48]: 0
  with precondition: [D=5] 

* Chain [47]: 0
  with precondition: [D=6] 

* Chain [46]: 0
  with precondition: [D=7] 


#### Cost of chains of eval_putspan_bb25_in(V_bit_5,B):
* Chain [49]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_putspan_bb15_in(E,A,B):
* Chain [52]: 1*s(11)+0
  with precondition: [E=11] 

* Chain [51]: 1*s(12)+0
  with precondition: [E=12] 

* Chain [50]: 1*s(13)+0
  with precondition: [E=13] 


#### Cost of chains of loop_cont_eval_putspan_bb1_in(G,A,B,C):
* Chain [56]: 1*aux(3)+0
  with precondition: [G=8,B>=A] 

* Chain [55]: 3*s(17)+3*s(18)+1
  Such that:aux(4) =< A/8-B/8
s(17) =< aux(4)

  with precondition: [G=8,A>=B+1] 

* Chain [54]: 0
  with precondition: [G=9] 

* Chain [53]: 1*s(23)+0
  with precondition: [G=10] 


#### Cost of chains of eval_putspan_bb0_in(V_span,B):
* Chain [59]: 1*aux(5)+0
  with precondition: [2623>=V_span] 

* Chain [58]: 1*aux(6)+0
  with precondition: [V_span>=2624] 

* Chain [57]...: 4*s(38)+1
  with precondition: [V_span>=2624] 


#### Cost of chains of eval_putspan_start(V_span,B):
* Chain [62]: 1*s(39)+0
  with precondition: [2623>=V_span] 

* Chain [61]: 1*s(40)+0
  with precondition: [V_span>=2624] 

* Chain [60]...: 4*s(41)+1
  with precondition: [V_span>=2624] 


Closed-form bounds of eval_putspan_start(V_span,B): 
-------------------------------------
* Chain [62] with precondition: [2623>=V_span] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [61] with precondition: [V_span>=2624] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [60]... with precondition: [V_span>=2624] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_putspan_start(V_span,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 54 ms.
* Invariants computed in 57 ms.
   - Backward Invariants 38 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 125 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 83 ms.
   - Equation cost structures 37 ms.
   - Phase cost structures 19 ms.
   - Chain cost structures 32 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 389 ms.

