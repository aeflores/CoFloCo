Warning: Ignored call to eval_leftmatch_stop/1 in equation eval_leftmatch_bb33_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_leftmatch_36/5,eval_leftmatch_37/6,eval_leftmatch_bb10_in/4]
1. recursive  : [eval_leftmatch_82/4,eval_leftmatch_83/5,eval_leftmatch_bb27_in/3]
2. recursive  : [eval_leftmatch_32/3,eval_leftmatch_33/3,eval_leftmatch_86/3,eval_leftmatch_87/3,eval_leftmatch_bb14_in/2,eval_leftmatch_bb26_in/2,eval_leftmatch_bb2_in/2,eval_leftmatch_bb31_in/2,eval_leftmatch_bb6_in/2,loop_cont_eval_leftmatch_bb10_in/3,loop_cont_eval_leftmatch_bb27_in/3]
3. non_recursive  : [eval_leftmatch_bb33_in/1]
4. non_recursive  : [eval_leftmatch_93/1]
5. non_recursive  : [eval_leftmatch_92/2]
6. non_recursive  : [eval_leftmatch_NewDefault_in/1]
7. non_recursive  : [loop_cont_eval_leftmatch_bb2_in/2]
8. non_recursive  : [eval_leftmatch_8/2]
9. non_recursive  : [eval_leftmatch_7/2]
10. non_recursive  : [eval_leftmatch_4/2]
11. non_recursive  : [eval_leftmatch_3/1]
12. non_recursive  : [eval_leftmatch_bb0_in/1]
13. non_recursive  : [eval_leftmatch_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_leftmatch_bb10_in/4
1. SCC is partially evaluated into eval_leftmatch_bb27_in/3
2. SCC is partially evaluated into eval_leftmatch_bb2_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_leftmatch_bb2_in/2
8. SCC is partially evaluated into eval_leftmatch_8/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_leftmatch_bb0_in/1
13. SCC is partially evaluated into eval_leftmatch_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_leftmatch_bb10_in/4 
* CE 15 is refined into CE [18] 
* CE 14 is refined into CE [19] 


#### Refined cost equations eval_leftmatch_bb10_in/4 
* CE 18: eval_leftmatch_bb10_in(V_count_0,V_34,B,C) = 1+ eval_leftmatch_bb10_in(V_count_0,V_34,D,C)
     [V_count_0>=1,D=2,B=2] 
* CE 19: eval_leftmatch_bb10_in(A,B,C,A) = 0
     [A>=1,C=2] 

### Cost equations --> "Loop" of eval_leftmatch_bb10_in/4 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 

#### Loops of eval_leftmatch_bb10_in/4 
* Loop 14: eval_leftmatch_bb10_in(A,B,C,A) [A>=1,C=2] 
* Loop 15: eval_leftmatch_bb10_in(V_count_0,V_34,B,C)->  eval_leftmatch_bb10_in(V_count_0,V_34,B',C)
                  [V_count_0>=1,B'=2,B=2] 

### Ranking functions of CR eval_leftmatch_bb10_in(V_count_0,V_34,B,C) 

#### Partial ranking functions of CR eval_leftmatch_bb10_in(V_count_0,V_34,B,C) 


### Resulting Chains:eval_leftmatch_bb10_in(V_count_0,V_34,B,C) 
* [[15]]...
* [[15],14]
* [14]


### Merging Chains  eval_leftmatch_bb10_in/4 into  External patterns of execution 
* [[14],[14,[15]]] --> 1 
* [[[15]]] --> 2 


### Specialization of cost equations eval_leftmatch_bb27_in/3 
* CE 17 is refined into CE [20] 
* CE 16 is refined into CE [21] 


#### Refined cost equations eval_leftmatch_bb27_in/3 
* CE 20: eval_leftmatch_bb27_in(V_count_0,B,C) = 1+ eval_leftmatch_bb27_in(V_count_0,D,C)
     [V_count_0>=1,D=2,B=2] 
* CE 21: eval_leftmatch_bb27_in(A,B,A) = 0
     [A>=1,B=2] 

### Cost equations --> "Loop" of eval_leftmatch_bb27_in/3 
* CEs [21] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of eval_leftmatch_bb27_in/3 
* Loop 16: eval_leftmatch_bb27_in(A,B,A) [A>=1,B=2] 
* Loop 17: eval_leftmatch_bb27_in(V_count_0,B,C)->  eval_leftmatch_bb27_in(V_count_0,B',C)
                  [V_count_0>=1,B'=2,B=2] 

### Ranking functions of CR eval_leftmatch_bb27_in(V_count_0,B,C) 

#### Partial ranking functions of CR eval_leftmatch_bb27_in(V_count_0,B,C) 


### Resulting Chains:eval_leftmatch_bb27_in(V_count_0,B,C) 
* [[17]]...
* [[17],16]
* [16]


### Merging Chains  eval_leftmatch_bb27_in/3 into  External patterns of execution 
* [[16],[16,[17]]] --> 1 
* [[[17]]] --> 2 


### Specialization of cost equations eval_leftmatch_bb2_in/2 
* CE 10 is refined into CE [22] 
* CE 6 is refined into CE [23] 
* CE 11 is refined into CE [24] 
* CE 7 is refined into CE [25,26] 
* CE 8 is refined into CE [27] 
* CE 9 is refined into CE [28,29] 


#### Refined cost equations eval_leftmatch_bb2_in/2 
* CE 22: eval_leftmatch_bb2_in(V_count_0,B) = 0
     [V_count_0>=1,B=4] 
* CE 23: eval_leftmatch_bb2_in(V_count_0,B) = 0
     [V_count_0>=1,B=3] 
* CE 24: eval_leftmatch_bb2_in(V_count_0,B) = 0
     [0>=V_count_0,B=3] 
* CE 25: eval_leftmatch_bb2_in(V_count_0,B) = 2+ eval_leftmatch_bb10_in(V_count_0,C,D,V_count_0):1+ eval_leftmatch_bb2_in(E,B)
     [V_count_0>=1,V_count_0=E+1,D=2] 
* CE 26: eval_leftmatch_bb2_in(V_count_0,B) = 2+ eval_leftmatch_bb10_in(V_count_0,C,D,E):2
     [V_count_0>=1,F+1=E,D=2] 
* CE 27: eval_leftmatch_bb2_in(V_count_0,B) = 1+ eval_leftmatch_bb2_in(C,B)
     [V_count_0>=1,V_count_0=C+1] 
* CE 28: eval_leftmatch_bb2_in(V_count_0,B) = 2+ eval_leftmatch_bb27_in(V_count_0,C,V_count_0):1+ eval_leftmatch_bb2_in(D,B)
     [V_count_0>=1,V_count_0=D+1,C=2] 
* CE 29: eval_leftmatch_bb2_in(V_count_0,B) = 2+ eval_leftmatch_bb27_in(V_count_0,C,D):2
     [V_count_0>=1,E+1=D,C=2] 

### Cost equations --> "Loop" of eval_leftmatch_bb2_in/2 
* CEs [26,29] --> Loop 18 
* CEs [25,27,28] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [24] --> Loop 22 

#### Loops of eval_leftmatch_bb2_in/2 
* Loop 18: eval_leftmatch_bb2_in(V_count_0,B) [V_count_0>=1] 
* Loop 19: eval_leftmatch_bb2_in(V_count_0,B)->  eval_leftmatch_bb2_in(V_count_0',B)
                  [V_count_0>=1,V_count_0=V_count_0'+1] 
* Loop 20: eval_leftmatch_bb2_in(V_count_0,B) [V_count_0>=1,B=4] 
* Loop 21: eval_leftmatch_bb2_in(V_count_0,B) [V_count_0>=1,B=3] 
* Loop 22: eval_leftmatch_bb2_in(V_count_0,B) [0>=V_count_0,B=3] 

### Ranking functions of CR eval_leftmatch_bb2_in(V_count_0,B) 
* RF of phase [19]: [V_count_0]

#### Partial ranking functions of CR eval_leftmatch_bb2_in(V_count_0,B) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V_count_0


### Resulting Chains:eval_leftmatch_bb2_in(V_count_0,B) 
* [[19],22]
* [[19],21]
* [[19],20]
* [[19],18]...
* [22]
* [21]
* [20]
* [18]...


### Merging Chains  eval_leftmatch_bb2_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21],[21,[19]],[22,[19]]] --> 2 
* [[20],[20,[19]]] --> 3 
* [[18]] --> 4 
* [[18,[19]]] --> 5 


### Specialization of cost equations loop_cont_eval_leftmatch_bb2_in/2 
* CE 13 is refined into CE [30] 
* CE 12 is refined into CE [31] 


#### Refined cost equations loop_cont_eval_leftmatch_bb2_in/2 
* CE 30: loop_cont_eval_leftmatch_bb2_in(B,A) = 0
     [B=4] 
* CE 31: loop_cont_eval_leftmatch_bb2_in(B,A) = 0
     [B=3] 

### Cost equations --> "Loop" of loop_cont_eval_leftmatch_bb2_in/2 
* CEs [30] --> Loop 23 
* CEs [31] --> Loop 24 

#### Loops of loop_cont_eval_leftmatch_bb2_in/2 
* Loop 23: loop_cont_eval_leftmatch_bb2_in(B,A) [B=4] 
* Loop 24: loop_cont_eval_leftmatch_bb2_in(B,A) [B=3] 

### Ranking functions of CR loop_cont_eval_leftmatch_bb2_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_leftmatch_bb2_in(B,A) 


### Resulting Chains:loop_cont_eval_leftmatch_bb2_in(B,A) 
* [24]
* [23]


### Merging Chains  loop_cont_eval_leftmatch_bb2_in/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_leftmatch_8/2 
* CE 5 is refined into CE [32,33,34,35,36] 


#### Refined cost equations eval_leftmatch_8/2 
* CE 32: eval_leftmatch_8(V_4,B) = 1+ eval_leftmatch_bb2_in(V_4,C):1+ loop_cont_eval_leftmatch_bb2_in(D,B):1
     [0>=V_4,D=3,C=3] 
* CE 33: eval_leftmatch_8(V_4,B) = 1+ eval_leftmatch_bb2_in(V_4,C):2+ loop_cont_eval_leftmatch_bb2_in(D,B):1
     [V_4>=1,D=3,C=3] 
* CE 34: eval_leftmatch_8(V_4,B) = 1+ eval_leftmatch_bb2_in(V_4,C):3+ loop_cont_eval_leftmatch_bb2_in(D,B):2
     [V_4>=1,D=4,C=4] 
* CE 35: eval_leftmatch_8(V_4,B) = 1+ eval_leftmatch_bb2_in(V_4,C):4
     [V_4>=1] 
* CE 36: eval_leftmatch_8(V_4,B) = 1+ eval_leftmatch_bb2_in(V_4,C):5
     [V_4>=2] 

### Cost equations --> "Loop" of eval_leftmatch_8/2 
* CEs [35,36] --> Loop 25 
* CEs [33,34] --> Loop 26 
* CEs [32] --> Loop 27 

#### Loops of eval_leftmatch_8/2 
* Loop 25: eval_leftmatch_8(V_4,B) [V_4>=1] 
* Loop 26: eval_leftmatch_8(V_4,B) [V_4>=1] 
* Loop 27: eval_leftmatch_8(V_4,B) [0>=V_4] 

### Ranking functions of CR eval_leftmatch_8(V_4,B) 

#### Partial ranking functions of CR eval_leftmatch_8(V_4,B) 


### Resulting Chains:eval_leftmatch_8(V_4,B) 
* [27]
* [26]
* [25]...


### Merging Chains  eval_leftmatch_8/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[25]] --> 3 


### Specialization of cost equations eval_leftmatch_bb0_in/1 
* CE 3 is refined into CE [37] 
* CE 4 is refined into CE [38,39,40] 


#### Refined cost equations eval_leftmatch_bb0_in/1 
* CE 37: eval_leftmatch_bb0_in(B) = 0
     [] 
* CE 38: eval_leftmatch_bb0_in(B) = 0+ eval_leftmatch_8(C,B):1
     [0>=C] 
* CE 39: eval_leftmatch_bb0_in(B) = 0+ eval_leftmatch_8(C,B):2
     [C>=1] 
* CE 40: eval_leftmatch_bb0_in(B) = 0+ eval_leftmatch_8(C,B):3
     [C>=1] 

### Cost equations --> "Loop" of eval_leftmatch_bb0_in/1 
* CEs [40] --> Loop 28 
* CEs [37,38,39] --> Loop 29 

#### Loops of eval_leftmatch_bb0_in/1 
* Loop 28: eval_leftmatch_bb0_in(B) [] 
* Loop 29: eval_leftmatch_bb0_in(B) [] 

### Ranking functions of CR eval_leftmatch_bb0_in(B) 

#### Partial ranking functions of CR eval_leftmatch_bb0_in(B) 


### Resulting Chains:eval_leftmatch_bb0_in(B) 
* [29]
* [28]...


### Merging Chains  eval_leftmatch_bb0_in/1 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_leftmatch_start/1 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_leftmatch_start/1 
* CE 41: eval_leftmatch_start(B) = 0+ eval_leftmatch_bb0_in(B):1
     [] 
* CE 42: eval_leftmatch_start(B) = 0+ eval_leftmatch_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_leftmatch_start/1 
* CEs [42] --> Loop 30 
* CEs [41] --> Loop 31 

#### Loops of eval_leftmatch_start/1 
* Loop 30: eval_leftmatch_start(B) [] 
* Loop 31: eval_leftmatch_start(B) [] 

### Ranking functions of CR eval_leftmatch_start(B) 

#### Partial ranking functions of CR eval_leftmatch_start(B) 


### Resulting Chains:eval_leftmatch_start(B) 
* [31]
* [30]...


### Merging Chains  eval_leftmatch_start/1 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_leftmatch_bb10_in(V_count_0,V_34,B,C) -> [eval_leftmatch_bb10_in(V_count_0',V_34',B',C')] 
1
#### Cost of phase [15]:eval_leftmatch_bb10_in(V_count_0,V_34,B,C) -> [eval_leftmatch_bb10_in(V_count_0',V_34',B',C')] 
1*it(15)+0
#### Cost of phase [15]:eval_leftmatch_bb10_in(V_count_0,V_34,B,C) -> [eval_leftmatch_bb10_in(V_count_0',V_34',B',C')] 
1*it(15)+0
#### Cost of chains of eval_leftmatch_bb10_in(V_count_0,V_34,B,C):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [V_count_0>=1,B=2] 

* Chain [[15],14]: 1*it(15)+0
  with precondition: [B=2,V_count_0=C,V_count_0>=1] 

* Chain [14]: 0
  with precondition: [B=2,V_count_0=C,V_count_0>=1] 


#### Cost of loops [17] 

 * loop 17:eval_leftmatch_bb27_in(V_count_0,B,C) -> [eval_leftmatch_bb27_in(V_count_0',B',C')] 
1
#### Cost of phase [17]:eval_leftmatch_bb27_in(V_count_0,B,C) -> [eval_leftmatch_bb27_in(V_count_0',B',C')] 
1*it(17)+0
#### Cost of phase [17]:eval_leftmatch_bb27_in(V_count_0,B,C) -> [eval_leftmatch_bb27_in(V_count_0',B',C')] 
1*it(17)+0
#### Cost of chains of eval_leftmatch_bb27_in(V_count_0,B,C):
* Chain [[17]]...: 1*it(17)+0
  with precondition: [V_count_0>=1,B=2] 

* Chain [[17],16]: 1*it(17)+0
  with precondition: [B=2,V_count_0=C,V_count_0>=1] 

* Chain [16]: 0
  with precondition: [B=2,V_count_0=C,V_count_0>=1] 


#### Cost of loops [19] 

 * loop 19:eval_leftmatch_bb2_in(V_count_0,B) -> [eval_leftmatch_bb2_in(V_count_0',B')] 
1*s(5)+0
#### Cost of phase [19]:eval_leftmatch_bb2_in(V_count_0,B) -> [eval_leftmatch_bb2_in(V_count_0',B')] 
1*s(6)+0
#### Cost of phase [19]:eval_leftmatch_bb2_in(V_count_0,B) -> [eval_leftmatch_bb2_in(V_count_0',B')] 
1*s(6)+0
#### Cost of phase [19]:eval_leftmatch_bb2_in(V_count_0,B) -> [eval_leftmatch_bb2_in(V_count_0',B')] 
1*s(6)+0
#### Cost of phase [19]:eval_leftmatch_bb2_in(V_count_0,B) -> [eval_leftmatch_bb2_in(V_count_0',B')] 
1*s(6)+0
#### Cost of chains of eval_leftmatch_bb2_in(V_count_0,B):
* Chain [[19],22]: 1*s(6)+0
  with precondition: [B=3,V_count_0>=1] 

* Chain [[19],21]: 1*s(6)+0
  with precondition: [B=3,V_count_0>=2] 

* Chain [[19],20]: 1*s(6)+0
  with precondition: [B=4,V_count_0>=2] 

* Chain [[19],18]...: 2*aux(4)+0
  with precondition: [V_count_0>=2] 

* Chain [22]: 0
  with precondition: [B=3,0>=V_count_0] 

* Chain [21]: 0
  with precondition: [B=3,V_count_0>=1] 

* Chain [20]: 0
  with precondition: [B=4,V_count_0>=1] 

* Chain [18]...: 1*aux(4)+0
  with precondition: [V_count_0>=1] 


#### Cost of chains of loop_cont_eval_leftmatch_bb2_in(B,A):
* Chain [24]: 0
  with precondition: [B=3] 

* Chain [23]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_leftmatch_8(V_4,B):
* Chain [27]: 1
  with precondition: [0>=V_4] 

* Chain [26]: 1*aux(7)+0
  with precondition: [V_4>=1] 

* Chain [25]...: 1*aux(8)+0
  with precondition: [V_4>=1] 


#### Cost of chains of eval_leftmatch_bb0_in(B):
* Chain [29]: 1*aux(9)+0
  with precondition: [] 

* Chain [28]...: 1*s(17)+0
  with precondition: [] 


#### Cost of chains of eval_leftmatch_start(B):
* Chain [31]: 1*s(18)+0
  with precondition: [] 

* Chain [30]...: 1*s(19)+0
  with precondition: [] 


Closed-form bounds of eval_leftmatch_start(B): 
-------------------------------------
* Chain [31] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [30]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_leftmatch_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 64 ms.
* Invariants computed in 56 ms.
   - Backward Invariants 32 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 101 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 79 ms.
   - Equation cost structures 32 ms.
   - Phase cost structures 18 ms.
   - Chain cost structures 29 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 394 ms.

