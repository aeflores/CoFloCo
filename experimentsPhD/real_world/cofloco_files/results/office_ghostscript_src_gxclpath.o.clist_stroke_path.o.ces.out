WARNING: Excluded non-linear constraints:[I=H*E-F]
WARNING: Excluded non-linear constraints:[I=H*E-F,F-E*H>=0,F-E*H+1=<E]
WARNING: Excluded non-linear constraints:[I=H*E-F,F-E*H>=0,F-E*H+1=< -E]
WARNING: Excluded non-linear constraints:[I=H*E-F,-F+E*H>=0,-F+E*H+1=<E]
WARNING: Excluded non-linear constraints:[I=H*E-F,-F+E*H>=0,-F+E*H+1=< -E]
WARNING: Excluded non-linear constraints:[I=H*E-F]
WARNING: Excluded non-linear constraints:[I=H*E-F,F-E*H>=0,F-E*H+1=<E]
WARNING: Excluded non-linear constraints:[I=H*E-F,F-E*H>=0,F-E*H+1=< -E]
WARNING: Excluded non-linear constraints:[I=H*E-F,-F+E*H>=0,-F+E*H+1=<E]
WARNING: Excluded non-linear constraints:[I=H*E-F,-F+E*H>=0,-F+E*H+1=< -E]
WARNING: Excluded non-linear constraints:[F-E*H>=0,F-E*H+1=<E]
WARNING: Excluded non-linear constraints:[F-E*H>=0,F-E*H+1=< -E]
WARNING: Excluded non-linear constraints:[-F+E*H>=0,-F+E*H+1=<E]
WARNING: Excluded non-linear constraints:[-F+E*H>=0,-F+E*H+1=< -E]
WARNING: Excluded non-linear constraints:[F-E*H>=0,F-E*H+1=<E]
WARNING: Excluded non-linear constraints:[F-E*H>=0,F-E*H+1=< -E]
WARNING: Excluded non-linear constraints:[-F+E*H>=0,-F+E*H+1=<E]
WARNING: Excluded non-linear constraints:[-F+E*H>=0,-F+E*H+1=< -E]
Warning: Ignored call to eval_clist_stroke_path_stop/1 in equation eval_clist_stroke_path_bb61_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_clist_stroke_path_bb61_in/1]
1. non_recursive  : [eval_clist_stroke_path_42/1]
2. non_recursive  : [eval_clist_stroke_path_41/1]
3. recursive  : [eval_clist_stroke_path_121/8,eval_clist_stroke_path_122/8,eval_clist_stroke_path_129/9,eval_clist_stroke_path_130/9,eval_clist_stroke_path_136/8,eval_clist_stroke_path_137/8,eval_clist_stroke_path_142/8,eval_clist_stroke_path_143/8,eval_clist_stroke_path_147/8,eval_clist_stroke_path_148/8,eval_clist_stroke_path_151/8,eval_clist_stroke_path_152/8,eval_clist_stroke_path_163/10,eval_clist_stroke_path_164/10,eval_clist_stroke_path_bb41_in/7,eval_clist_stroke_path_bb43_in/8,eval_clist_stroke_path_bb46_in/8,eval_clist_stroke_path_bb52_in/8,eval_clist_stroke_path_bb55_in/8,eval_clist_stroke_path_bb59_in/10]
4. non_recursive  : [eval_clist_stroke_path_154/1]
5. non_recursive  : [eval_clist_stroke_path_153/1]
6. non_recursive  : [loop_cont_eval_clist_stroke_path_bb41_in/2]
7. non_recursive  : [eval_clist_stroke_path_bb40_in/6]
8. non_recursive  : [eval_clist_stroke_path_106/6]
9. non_recursive  : [eval_clist_stroke_path_105/7]
10. non_recursive  : [eval_clist_stroke_path_102/7]
11. non_recursive  : [eval_clist_stroke_path_101/7]
12. non_recursive  : [eval_clist_stroke_path_bb38_in/7]
13. non_recursive  : [eval_clist_stroke_path_bb37_in/6]
14. non_recursive  : [eval_clist_stroke_path_bb34_in/7]
15. non_recursive  : [eval_clist_stroke_path_bb33_in/6]
16. non_recursive  : [eval_clist_stroke_path_bb31_in/7]
17. non_recursive  : [eval_clist_stroke_path_71/6]
18. non_recursive  : [eval_clist_stroke_path_70/6]
19. non_recursive  : [eval_clist_stroke_path_bb29_in/7]
20. non_recursive  : [eval_clist_stroke_path_bb27_in/7]
21. non_recursive  : [eval_clist_stroke_path_65/6]
22. non_recursive  : [eval_clist_stroke_path_64/6]
23. non_recursive  : [eval_clist_stroke_path_bb26_in/6]
24. non_recursive  : [eval_clist_stroke_path_bb20_in/7]
25. non_recursive  : [eval_clist_stroke_path_62/6]
26. non_recursive  : [eval_clist_stroke_path_61/6]
27. non_recursive  : [eval_clist_stroke_path_bb19_in/6]
28. non_recursive  : [eval_clist_stroke_path_bb17_in/7]
29. non_recursive  : [eval_clist_stroke_path_bb15_in/7]
30. non_recursive  : [eval_clist_stroke_path_50/6]
31. non_recursive  : [eval_clist_stroke_path_49/7]
32. non_recursive  : [eval_clist_stroke_path_46/6]
33. non_recursive  : [eval_clist_stroke_path_45/7]
34. non_recursive  : [eval_clist_stroke_path_bb12_in/6]
35. non_recursive  : [eval_clist_stroke_path_bb8_in/6]
36. non_recursive  : [eval_clist_stroke_path_37/6]
37. non_recursive  : [eval_clist_stroke_path_36/7]
38. non_recursive  : [eval_clist_stroke_path_bb5_in/7]
39. non_recursive  : [eval_clist_stroke_path_bb4_in/6]
40. non_recursive  : [eval_clist_stroke_path_6/4]
41. non_recursive  : [eval_clist_stroke_path_5/4]
42. non_recursive  : [eval_clist_stroke_path_4/4]
43. non_recursive  : [eval_clist_stroke_path_bb0_in/1]
44. non_recursive  : [eval_clist_stroke_path_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_clist_stroke_path_bb41_in/7
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_clist_stroke_path_bb41_in/2
7. SCC is partially evaluated into eval_clist_stroke_path_bb40_in/6
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_clist_stroke_path_102/7
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_clist_stroke_path_bb34_in/7
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_clist_stroke_path_bb31_in/7
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_clist_stroke_path_bb29_in/7
20. SCC is partially evaluated into eval_clist_stroke_path_bb27_in/7
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_clist_stroke_path_bb20_in/7
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_clist_stroke_path_bb17_in/7
29. SCC is partially evaluated into eval_clist_stroke_path_bb15_in/7
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_clist_stroke_path_bb12_in/6
35. SCC is partially evaluated into eval_clist_stroke_path_bb8_in/6
36. SCC is partially evaluated into eval_clist_stroke_path_37/6
37. SCC is completely evaluated into other SCCs
38. SCC is partially evaluated into eval_clist_stroke_path_bb5_in/7
39. SCC is partially evaluated into eval_clist_stroke_path_bb4_in/6
40. SCC is partially evaluated into eval_clist_stroke_path_6/4
41. SCC is completely evaluated into other SCCs
42. SCC is completely evaluated into other SCCs
43. SCC is partially evaluated into eval_clist_stroke_path_bb0_in/1
44. SCC is partially evaluated into eval_clist_stroke_path_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_clist_stroke_path_bb41_in/7 
* CE 40 is refined into CE [44] 
* CE 38 is refined into CE [45] 
* CE 39 is refined into CE [46] 
* CE 37 is refined into CE [47] 
* CE 41 is refined into CE [48] 
* CE 30 is refined into CE [49] 
* CE 28 is refined into CE [50] 
* CE 29 is refined into CE [51] 
* CE 27 is refined into CE [52] 
* CE 35 is refined into CE [53] 
* CE 33 is refined into CE [54] 
* CE 34 is refined into CE [55] 
* CE 32 is refined into CE [56] 
* CE 31 is refined into CE [57] 
* CE 36 is refined into CE [58] 


#### Refined cost equations eval_clist_stroke_path_bb41_in/7 
* CE 44: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,C,B)
     [V_410>=C+1,V_y_2>=1,V_416>=1,V_11>=246,247>=V_11] 
* CE 45: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,C,B)
     [V_410>=C+1,V_416>=1,V_11>=246,0>=V_y_2+1,247>=V_11] 
* CE 46: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,C,B)
     [V_410>=C+1,V_y_2>=1,V_11>=246,0>=V_416+1,247>=V_11] 
* CE 47: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,C,B)
     [V_410>=C+1,V_11>=246,0>=V_y_2+1,0>=V_416+1,247>=V_11] 
* CE 48: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,C,B)
     [V_410>=C+1,V_11>=246,247>=V_11,V_y_2=0] 
* CE 49: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_y_2>=1,V_416>=1,V_11>=246,247>=V_11,B=3] 
* CE 50: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_416>=1,V_11>=246,0>=V_y_2+1,247>=V_11,B=3] 
* CE 51: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_y_2>=1,V_11>=246,0>=V_416+1,247>=V_11,B=3] 
* CE 52: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_11>=246,0>=V_y_2+1,0>=V_416+1,247>=V_11,B=3] 
* CE 53: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_y_2>=1,V_416>=1,V_11>=246,247>=V_11,B=2] 
* CE 54: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_416>=1,V_11>=246,0>=V_y_2+1,247>=V_11,B=2] 
* CE 55: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_y_2>=1,V_11>=246,0>=V_416+1,247>=V_11,B=2] 
* CE 56: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_11>=246,0>=V_y_2+1,0>=V_416+1,247>=V_11,B=2] 
* CE 57: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_11>=246,247>=V_11,B=3,V_y_2=0] 
* CE 58: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) = 0
     [V_11>=246,247>=V_11,B=2,V_y_2=0] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb41_in/7 
* CEs [49] --> Loop 35 
* CEs [50] --> Loop 36 
* CEs [51] --> Loop 37 
* CEs [52] --> Loop 38 
* CEs [53] --> Loop 39 
* CEs [54] --> Loop 40 
* CEs [55] --> Loop 41 
* CEs [56] --> Loop 42 
* CEs [57] --> Loop 43 
* CEs [58] --> Loop 44 
* CEs [44] --> Loop 45 
* CEs [45] --> Loop 46 
* CEs [46] --> Loop 47 
* CEs [47] --> Loop 48 
* CEs [48] --> Loop 49 

#### Loops of eval_clist_stroke_path_bb41_in/7 
* Loop 35: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_y_2>=1,V_416>=1,V_11>=246,247>=V_11,B=3] 
* Loop 36: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_416>=1,V_11>=246,0>=V_y_2+1,247>=V_11,B=3] 
* Loop 37: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_y_2>=1,V_11>=246,0>=V_416+1,247>=V_11,B=3] 
* Loop 38: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_11>=246,0>=V_y_2+1,0>=V_416+1,247>=V_11,B=3] 
* Loop 39: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_y_2>=1,V_416>=1,V_11>=246,247>=V_11,B=2] 
* Loop 40: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_416>=1,V_11>=246,0>=V_y_2+1,247>=V_11,B=2] 
* Loop 41: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_y_2>=1,V_11>=246,0>=V_416+1,247>=V_11,B=2] 
* Loop 42: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_11>=246,0>=V_y_2+1,0>=V_416+1,247>=V_11,B=2] 
* Loop 43: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_11>=246,247>=V_11,B=3,V_y_2=0] 
* Loop 44: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) [V_11>=246,247>=V_11,B=2,V_y_2=0] 
* Loop 45: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B)->  eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2',B)
                  [V_410>=V_y_2'+1,V_y_2>=1,V_416>=1,V_11>=246,247>=V_11] 
* Loop 46: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B)->  eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2',B)
                  [V_410>=V_y_2'+1,V_416>=1,V_11>=246,0>=V_y_2+1,247>=V_11] 
* Loop 47: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B)->  eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2',B)
                  [V_410>=V_y_2'+1,V_y_2>=1,V_11>=246,0>=V_416+1,247>=V_11] 
* Loop 48: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B)->  eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2',B)
                  [V_410>=V_y_2'+1,V_11>=246,0>=V_y_2+1,0>=V_416+1,247>=V_11] 
* Loop 49: eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B)->  eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2',B)
                  [V_410>=V_y_2'+1,V_11>=246,247>=V_11,V_y_2=0] 

### Ranking functions of CR eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) 


### Resulting Chains:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) 
* [[45,46,47,48,49]]...
* [[45,46,47,48,49],44]
* [[45,46,47,48,49],43]
* [[45,46,47,48,49],42]
* [[45,46,47,48,49],41]
* [[45,46,47,48,49],40]
* [[45,46,47,48,49],39]
* [[45,46,47,48,49],38]
* [[45,46,47,48,49],37]
* [[45,46,47,48,49],36]
* [[45,46,47,48,49],35]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]


### Merging Chains  eval_clist_stroke_path_bb41_in/7 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 
* [[41],[42],[41,[45,46,47,48,49]],[42,[45,46,47,48,49]]] --> 3 
* [[39],[40],[40,[45,46,47,48,49]]] --> 4 
* [[39,[45,46,47,48,49]],[44,[45,46,47,48,49]]] --> 5 
* [[37],[38],[37,[45,46,47,48,49]],[38,[45,46,47,48,49]]] --> 6 
* [[35],[36],[36,[45,46,47,48,49]]] --> 7 
* [[35,[45,46,47,48,49]],[43,[45,46,47,48,49]]] --> 8 
* [[[45,46,47,48,49]]] --> 9 


### Specialization of cost equations loop_cont_eval_clist_stroke_path_bb41_in/2 
* CE 43 is refined into CE [59] 
* CE 42 is refined into CE [60] 


#### Refined cost equations loop_cont_eval_clist_stroke_path_bb41_in/2 
* CE 59: loop_cont_eval_clist_stroke_path_bb41_in(B,A) = 0
     [B=3] 
* CE 60: loop_cont_eval_clist_stroke_path_bb41_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_clist_stroke_path_bb41_in/2 
* CEs [59] --> Loop 50 
* CEs [60] --> Loop 51 

#### Loops of loop_cont_eval_clist_stroke_path_bb41_in/2 
* Loop 50: loop_cont_eval_clist_stroke_path_bb41_in(B,A) [B=3] 
* Loop 51: loop_cont_eval_clist_stroke_path_bb41_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_clist_stroke_path_bb41_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_clist_stroke_path_bb41_in(B,A) 


### Resulting Chains:loop_cont_eval_clist_stroke_path_bb41_in(B,A) 
* [51]
* [50]


### Merging Chains  loop_cont_eval_clist_stroke_path_bb41_in/2 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb40_in/6 
* CE 26 is refined into CE [61,62,63,64,65,66,67,68,69] 


#### Refined cost equations eval_clist_stroke_path_bb40_in/6 
* CE 61: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_height_2,C,D,E):1+ loop_cont_eval_clist_stroke_path_bb41_in(F,B):1
     [V_11>=246,247>=V_11,F=2,E=2,D=0,V_y_1=0] 
* CE 62: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_height_2,C,D,E):2+ loop_cont_eval_clist_stroke_path_bb41_in(F,B):2
     [V_11>=246,247>=V_11,F=3,E=3,D=0,V_y_1=0] 
* CE 63: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,C,D,V_y_1,E):3+ loop_cont_eval_clist_stroke_path_bb41_in(F,B):1
     [V_11>=246,0>=D+1,247>=V_11,V_height_2+V_y_1=C,F=2,E=2] 
* CE 64: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,C,D,V_y_1,E):4+ loop_cont_eval_clist_stroke_path_bb41_in(F,B):1
     [D>=1,V_11>=246,247>=V_11,V_height_2+V_y_1=C,F=2,E=2] 
* CE 65: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,C,D,V_y_1,E):5+ loop_cont_eval_clist_stroke_path_bb41_in(F,B):1
     [C>=1,V_11>=246,247>=V_11,C=V_height_2+V_y_1,F=2,E=2] 
* CE 66: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,C,D,V_y_1,E):6+ loop_cont_eval_clist_stroke_path_bb41_in(F,B):2
     [V_11>=246,0>=D+1,247>=V_11,V_height_2+V_y_1=C,F=3,E=3] 
* CE 67: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,C,D,V_y_1,E):7+ loop_cont_eval_clist_stroke_path_bb41_in(F,B):2
     [D>=1,V_11>=246,247>=V_11,V_height_2+V_y_1=C,F=3,E=3] 
* CE 68: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,C,D,V_y_1,E):8+ loop_cont_eval_clist_stroke_path_bb41_in(F,B):2
     [C>=1,V_11>=246,247>=V_11,C=V_height_2+V_y_1,F=3,E=3] 
* CE 69: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 1+ eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,C,D,V_y_1,E):9
     [V_11>=246,247>=V_11,V_height_2+V_y_1=C] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb40_in/6 
* CEs [69] --> Loop 52 
* CEs [61,62,63,64,65,66,67,68] --> Loop 53 

#### Loops of eval_clist_stroke_path_bb40_in/6 
* Loop 52: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 
* Loop 53: eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 


### Resulting Chains:eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 
* [53]
* [52]...


### Merging Chains  eval_clist_stroke_path_bb40_in/6 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_102/7 
* CE 25 is refined into CE [70,71] 


#### Refined cost equations eval_clist_stroke_path_102/7 
* CE 70: eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_7,B) = 0+ eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):1
     [V_11>=246,247>=V_11] 
* CE 71: eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_7,B) = 0+ eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_102/7 
* CEs [71] --> Loop 54 
* CEs [70] --> Loop 55 

#### Loops of eval_clist_stroke_path_102/7 
* Loop 54: eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_7,B) [V_11>=246,247>=V_11] 
* Loop 55: eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_7,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_7,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_7,B) 


### Resulting Chains:eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_7,B) 
* [55]
* [54]...


### Merging Chains  eval_clist_stroke_path_102/7 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb34_in/7 
* CE 24 is refined into CE [72,73] 


#### Refined cost equations eval_clist_stroke_path_bb34_in/7 
* CE 72: eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_6,B) = 0+ eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):1
     [V_11>=246,247>=V_11] 
* CE 73: eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_6,B) = 0+ eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb34_in/7 
* CEs [73] --> Loop 56 
* CEs [72] --> Loop 57 

#### Loops of eval_clist_stroke_path_bb34_in/7 
* Loop 56: eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_6,B) [V_11>=246,247>=V_11] 
* Loop 57: eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_6,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_6,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_6,B) 


### Resulting Chains:eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_6,B) 
* [57]
* [56]...


### Merging Chains  eval_clist_stroke_path_bb34_in/7 into  External patterns of execution 
* [[57]] --> 1 
* [[56]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb31_in/7 
* CE 23 is refined into CE [74,75] 


#### Refined cost equations eval_clist_stroke_path_bb31_in/7 
* CE 74: eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_5,B) = 0+ eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):1
     [V_11>=246,247>=V_11] 
* CE 75: eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_5,B) = 0+ eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb31_in/7 
* CEs [75] --> Loop 58 
* CEs [74] --> Loop 59 

#### Loops of eval_clist_stroke_path_bb31_in/7 
* Loop 58: eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_5,B) [V_11>=246,247>=V_11] 
* Loop 59: eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_5,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_5,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_5,B) 


### Resulting Chains:eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_5,B) 
* [59]
* [58]...


### Merging Chains  eval_clist_stroke_path_bb31_in/7 into  External patterns of execution 
* [[59]] --> 1 
* [[58]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb29_in/7 
* CE 22 is refined into CE [76,77] 


#### Refined cost equations eval_clist_stroke_path_bb29_in/7 
* CE 76: eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_4,B) = 0+ eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):1
     [V_11>=246,247>=V_11] 
* CE 77: eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_4,B) = 0+ eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb29_in/7 
* CEs [77] --> Loop 60 
* CEs [76] --> Loop 61 

#### Loops of eval_clist_stroke_path_bb29_in/7 
* Loop 60: eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_4,B) [V_11>=246,247>=V_11] 
* Loop 61: eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_4,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_4,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_4,B) 


### Resulting Chains:eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_4,B) 
* [61]
* [60]...


### Merging Chains  eval_clist_stroke_path_bb29_in/7 into  External patterns of execution 
* [[61]] --> 1 
* [[60]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb27_in/7 
* CE 21 is refined into CE [78,79] 


#### Refined cost equations eval_clist_stroke_path_bb27_in/7 
* CE 78: eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_3,B) = 0+ eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):1
     [V_11>=246,247>=V_11] 
* CE 79: eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_3,B) = 0+ eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb27_in/7 
* CEs [79] --> Loop 62 
* CEs [78] --> Loop 63 

#### Loops of eval_clist_stroke_path_bb27_in/7 
* Loop 62: eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_3,B) [V_11>=246,247>=V_11] 
* Loop 63: eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_3,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_3,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_3,B) 


### Resulting Chains:eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_3,B) 
* [63]
* [62]...


### Merging Chains  eval_clist_stroke_path_bb27_in/7 into  External patterns of execution 
* [[63]] --> 1 
* [[62]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb20_in/7 
* CE 20 is refined into CE [80,81] 


#### Refined cost equations eval_clist_stroke_path_bb20_in/7 
* CE 80: eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_2,B) = 0+ eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):1
     [V_11>=246,247>=V_11] 
* CE 81: eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_2,B) = 0+ eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb20_in/7 
* CEs [81] --> Loop 64 
* CEs [80] --> Loop 65 

#### Loops of eval_clist_stroke_path_bb20_in/7 
* Loop 64: eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_2,B) [V_11>=246,247>=V_11] 
* Loop 65: eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_2,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_2,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_2,B) 


### Resulting Chains:eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_2,B) 
* [65]
* [64]...


### Merging Chains  eval_clist_stroke_path_bb20_in/7 into  External patterns of execution 
* [[65]] --> 1 
* [[64]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb17_in/7 
* CE 19 is refined into CE [82,83] 


#### Refined cost equations eval_clist_stroke_path_bb17_in/7 
* CE 82: eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_1,B) = 0+ eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):1
     [V_11>=246,247>=V_11] 
* CE 83: eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_1,B) = 0+ eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb17_in/7 
* CEs [83] --> Loop 66 
* CEs [82] --> Loop 67 

#### Loops of eval_clist_stroke_path_bb17_in/7 
* Loop 66: eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_1,B) [V_11>=246,247>=V_11] 
* Loop 67: eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_1,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_1,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_1,B) 


### Resulting Chains:eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_1,B) 
* [67]
* [66]...


### Merging Chains  eval_clist_stroke_path_bb17_in/7 into  External patterns of execution 
* [[67]] --> 1 
* [[66]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb15_in/7 
* CE 18 is refined into CE [84,85] 


#### Refined cost equations eval_clist_stroke_path_bb15_in/7 
* CE 84: eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_0,B) = 0+ eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):1
     [V_11>=246,247>=V_11] 
* CE 85: eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_0,B) = 0+ eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb15_in/7 
* CEs [85] --> Loop 68 
* CEs [84] --> Loop 69 

#### Loops of eval_clist_stroke_path_bb15_in/7 
* Loop 68: eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_0,B) [V_11>=246,247>=V_11] 
* Loop 69: eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_0,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_0,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_0,B) 


### Resulting Chains:eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_0,B) 
* [69]
* [68]...


### Merging Chains  eval_clist_stroke_path_bb15_in/7 into  External patterns of execution 
* [[69]] --> 1 
* [[68]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb12_in/6 
* CE 12 is refined into CE [86] 
* CE 13 is refined into CE [87,88] 


#### Refined cost equations eval_clist_stroke_path_bb12_in/6 
* CE 86: eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0
     [V_11>=246,247>=V_11] 
* CE 87: eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):1
     [V_11>=246,247>=V_11] 
* CE 88: eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb12_in/6 
* CEs [88] --> Loop 70 
* CEs [86,87] --> Loop 71 

#### Loops of eval_clist_stroke_path_bb12_in/6 
* Loop 70: eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 
* Loop 71: eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 


### Resulting Chains:eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 
* [71]
* [70]...


### Merging Chains  eval_clist_stroke_path_bb12_in/6 into  External patterns of execution 
* [[71]] --> 1 
* [[70]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb8_in/6 
* CE 16 is refined into CE [89,90] 
* CE 17 is refined into CE [91,92] 


#### Refined cost equations eval_clist_stroke_path_bb8_in/6 
* CE 89: eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):1
     [V_11>=246,247>=V_11] 
* CE 90: eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):2
     [V_11>=246,247>=V_11] 
* CE 91: eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):1
     [V_11>=246,247>=V_11,C=0] 
* CE 92: eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,C,B):2
     [V_11>=246,247>=V_11,C=0] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb8_in/6 
* CEs [90,92] --> Loop 72 
* CEs [89,91] --> Loop 73 

#### Loops of eval_clist_stroke_path_bb8_in/6 
* Loop 72: eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 
* Loop 73: eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 


### Resulting Chains:eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 
* [73]
* [72]...


### Merging Chains  eval_clist_stroke_path_bb8_in/6 into  External patterns of execution 
* [[73]] --> 1 
* [[72]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_37/6 
* CE 14 is refined into CE [93,94] 
* CE 15 is refined into CE [95,96] 


#### Refined cost equations eval_clist_stroke_path_37/6 
* CE 93: eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):1
     [V_11>=246,247>=V_11] 
* CE 94: eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):2
     [V_11>=246,247>=V_11] 
* CE 95: eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):1
     [V_11>=246,247>=V_11] 
* CE 96: eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_37/6 
* CEs [94,96] --> Loop 74 
* CEs [93,95] --> Loop 75 

#### Loops of eval_clist_stroke_path_37/6 
* Loop 74: eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 
* Loop 75: eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 


### Resulting Chains:eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 
* [75]
* [74]...


### Merging Chains  eval_clist_stroke_path_37/6 into  External patterns of execution 
* [[75]] --> 1 
* [[74]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb5_in/7 
* CE 7 is refined into CE [97,98] 
* CE 8 is refined into CE [99,100] 
* CE 9 is refined into CE [101,102] 


#### Refined cost equations eval_clist_stroke_path_bb5_in/7 
* CE 97: eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):1
     [V_11>=246,247>=V_11] 
* CE 98: eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):2
     [V_11>=246,247>=V_11] 
* CE 99: eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):1
     [V_11>=246,247>=V_11] 
* CE 100: eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):2
     [V_11>=246,247>=V_11] 
* CE 101: eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):1
     [V_11>=246,247>=V_11] 
* CE 102: eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) = 0+ eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb5_in/7 
* CEs [98,100,102] --> Loop 76 
* CEs [97,99,101] --> Loop 77 

#### Loops of eval_clist_stroke_path_bb5_in/7 
* Loop 76: eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 
* Loop 77: eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 


### Resulting Chains:eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B) 
* [77]
* [76]...


### Merging Chains  eval_clist_stroke_path_bb5_in/7 into  External patterns of execution 
* [[77]] --> 1 
* [[76]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb4_in/6 
* CE 10 is refined into CE [103] 
* CE 11 is refined into CE [104,105] 


#### Refined cost equations eval_clist_stroke_path_bb4_in/6 
* CE 103: eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,V_22,V_height_1,B) = 0
     [V_11>=246,247>=V_11] 
* CE 104: eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,V_22,V_height_1,B) = 0+ eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_1,C,V_22,B):1
     [V_11>=246,247>=V_11] 
* CE 105: eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,V_22,V_height_1,B) = 0+ eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_1,C,V_22,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb4_in/6 
* CEs [105] --> Loop 78 
* CEs [103,104] --> Loop 79 

#### Loops of eval_clist_stroke_path_bb4_in/6 
* Loop 78: eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,V_22,V_height_1,B) [V_11>=246,247>=V_11] 
* Loop 79: eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,V_22,V_height_1,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,V_22,V_height_1,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,V_22,V_height_1,B) 


### Resulting Chains:eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,V_22,V_height_1,B) 
* [79]
* [78]...


### Merging Chains  eval_clist_stroke_path_bb4_in/6 into  External patterns of execution 
* [[79]] --> 1 
* [[78]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_6/4 
* CE 5 is refined into CE [106,107] 
* CE 6 is refined into CE [108,109] 


#### Refined cost equations eval_clist_stroke_path_6/4 
* CE 106: eval_clist_stroke_path_6(V_3,V_5,V_11,B) = 0+ eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,C,D,E,B):1
     [V_11>=246,247>=V_11,E=0,D=0] 
* CE 107: eval_clist_stroke_path_6(V_3,V_5,V_11,B) = 0+ eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,C,D,E,B):2
     [V_11>=246,247>=V_11,E=0,D=0] 
* CE 108: eval_clist_stroke_path_6(V_3,V_5,V_11,B) = 0+ eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,C,D,B):1
     [V_11>=246,247>=V_11] 
* CE 109: eval_clist_stroke_path_6(V_3,V_5,V_11,B) = 0+ eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,C,D,B):2
     [V_11>=246,247>=V_11] 

### Cost equations --> "Loop" of eval_clist_stroke_path_6/4 
* CEs [107,109] --> Loop 80 
* CEs [106,108] --> Loop 81 

#### Loops of eval_clist_stroke_path_6/4 
* Loop 80: eval_clist_stroke_path_6(V_3,V_5,V_11,B) [V_11>=246,247>=V_11] 
* Loop 81: eval_clist_stroke_path_6(V_3,V_5,V_11,B) [V_11>=246,247>=V_11] 

### Ranking functions of CR eval_clist_stroke_path_6(V_3,V_5,V_11,B) 

#### Partial ranking functions of CR eval_clist_stroke_path_6(V_3,V_5,V_11,B) 


### Resulting Chains:eval_clist_stroke_path_6(V_3,V_5,V_11,B) 
* [81]
* [80]...


### Merging Chains  eval_clist_stroke_path_6/4 into  External patterns of execution 
* [[81]] --> 1 
* [[80]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_bb0_in/1 
* CE 3 is refined into CE [110,111] 
* CE 4 is refined into CE [112,113] 


#### Refined cost equations eval_clist_stroke_path_bb0_in/1 
* CE 110: eval_clist_stroke_path_bb0_in(B) = 0+ eval_clist_stroke_path_6(C,D,E,B):1
     [E=246] 
* CE 111: eval_clist_stroke_path_bb0_in(B) = 0+ eval_clist_stroke_path_6(C,D,E,B):2
     [E=246] 
* CE 112: eval_clist_stroke_path_bb0_in(B) = 0+ eval_clist_stroke_path_6(C,D,E,B):1
     [E=247] 
* CE 113: eval_clist_stroke_path_bb0_in(B) = 0+ eval_clist_stroke_path_6(C,D,E,B):2
     [E=247] 

### Cost equations --> "Loop" of eval_clist_stroke_path_bb0_in/1 
* CEs [111,113] --> Loop 82 
* CEs [110,112] --> Loop 83 

#### Loops of eval_clist_stroke_path_bb0_in/1 
* Loop 82: eval_clist_stroke_path_bb0_in(B) [] 
* Loop 83: eval_clist_stroke_path_bb0_in(B) [] 

### Ranking functions of CR eval_clist_stroke_path_bb0_in(B) 

#### Partial ranking functions of CR eval_clist_stroke_path_bb0_in(B) 


### Resulting Chains:eval_clist_stroke_path_bb0_in(B) 
* [83]
* [82]...


### Merging Chains  eval_clist_stroke_path_bb0_in/1 into  External patterns of execution 
* [[83]] --> 1 
* [[82]] --> 2 


### Specialization of cost equations eval_clist_stroke_path_start/1 
* CE 2 is refined into CE [114,115] 


#### Refined cost equations eval_clist_stroke_path_start/1 
* CE 114: eval_clist_stroke_path_start(B) = 0+ eval_clist_stroke_path_bb0_in(B):1
     [] 
* CE 115: eval_clist_stroke_path_start(B) = 0+ eval_clist_stroke_path_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_clist_stroke_path_start/1 
* CEs [115] --> Loop 84 
* CEs [114] --> Loop 85 

#### Loops of eval_clist_stroke_path_start/1 
* Loop 84: eval_clist_stroke_path_start(B) [] 
* Loop 85: eval_clist_stroke_path_start(B) [] 

### Ranking functions of CR eval_clist_stroke_path_start(B) 

#### Partial ranking functions of CR eval_clist_stroke_path_start(B) 


### Resulting Chains:eval_clist_stroke_path_start(B) 
* [85]
* [84]...


### Merging Chains  eval_clist_stroke_path_start/1 into  External patterns of execution 
* [[85]] --> 1 
* [[84]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [45,46,47,48,49] 

 * loop 45:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
1
 * loop 46:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
1
 * loop 47:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
1
 * loop 48:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
1
 * loop 49:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
1
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of phase [45,46,47,48,49]:eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B) -> [eval_clist_stroke_path_bb41_in(V_5',V_11',V_adjust_y_0',V_410',V_416',V_y_2',B')] 
5*it(45)+0
#### Cost of chains of eval_clist_stroke_path_bb41_in(V_5,V_11,V_adjust_y_0,V_410,V_416,V_y_2,B):
* Chain [[45,46,47,48,49]]...: 5*it(45)+0
  with precondition: [V_11>=246,247>=V_11] 

* Chain [[45,46,47,48,49],44]: 5*it(45)+0
  with precondition: [B=2,247>=V_11,V_11>=246,V_410>=1] 

* Chain [[45,46,47,48,49],43]: 5*it(45)+0
  with precondition: [B=3,247>=V_11,V_11>=246,V_410>=1] 

* Chain [[45,46,47,48,49],42]: 5*it(45)+0
  with precondition: [B=2,247>=V_11,0>=V_416+1,V_11>=246] 

* Chain [[45,46,47,48,49],41]: 5*it(45)+0
  with precondition: [B=2,247>=V_11,0>=V_416+1,V_11>=246,V_410>=2] 

* Chain [[45,46,47,48,49],40]: 5*it(45)+0
  with precondition: [B=2,247>=V_11,V_11>=246,V_416>=1] 

* Chain [[45,46,47,48,49],39]: 5*it(45)+0
  with precondition: [B=2,247>=V_11,V_11>=246,V_410>=2,V_416>=1] 

* Chain [[45,46,47,48,49],38]: 5*it(45)+0
  with precondition: [B=3,247>=V_11,0>=V_416+1,V_11>=246] 

* Chain [[45,46,47,48,49],37]: 5*it(45)+0
  with precondition: [B=3,247>=V_11,0>=V_416+1,V_11>=246,V_410>=2] 

* Chain [[45,46,47,48,49],36]: 5*it(45)+0
  with precondition: [B=3,247>=V_11,V_11>=246,V_416>=1] 

* Chain [[45,46,47,48,49],35]: 5*it(45)+0
  with precondition: [B=3,247>=V_11,V_11>=246,V_410>=2,V_416>=1] 

* Chain [44]: 0
  with precondition: [V_y_2=0,B=2,247>=V_11,V_11>=246] 

* Chain [43]: 0
  with precondition: [V_y_2=0,B=3,247>=V_11,V_11>=246] 

* Chain [42]: 0
  with precondition: [B=2,247>=V_11,0>=V_416+1,0>=V_y_2+1,V_11>=246] 

* Chain [41]: 0
  with precondition: [B=2,247>=V_11,0>=V_416+1,V_11>=246,V_y_2>=1] 

* Chain [40]: 0
  with precondition: [B=2,247>=V_11,0>=V_y_2+1,V_11>=246,V_416>=1] 

* Chain [39]: 0
  with precondition: [B=2,247>=V_11,V_11>=246,V_416>=1,V_y_2>=1] 

* Chain [38]: 0
  with precondition: [B=3,247>=V_11,0>=V_416+1,0>=V_y_2+1,V_11>=246] 

* Chain [37]: 0
  with precondition: [B=3,247>=V_11,0>=V_416+1,V_11>=246,V_y_2>=1] 

* Chain [36]: 0
  with precondition: [B=3,247>=V_11,0>=V_y_2+1,V_11>=246,V_416>=1] 

* Chain [35]: 0
  with precondition: [B=3,247>=V_11,V_11>=246,V_416>=1,V_y_2>=1] 


#### Cost of chains of loop_cont_eval_clist_stroke_path_bb41_in(B,A):
* Chain [51]: 0
  with precondition: [B=2] 

* Chain [50]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_clist_stroke_path_bb40_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):
* Chain [53]: 1*aux(7)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [52]...: 5*s(17)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_102(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_7,B):
* Chain [55]: 1*s(18)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [54]...: 5*s(19)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb34_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_6,B):
* Chain [57]: 1*s(20)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [56]...: 5*s(21)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb31_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_5,B):
* Chain [59]: 1*s(22)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [58]...: 5*s(23)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb29_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_4,B):
* Chain [61]: 1*s(24)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [60]...: 5*s(25)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb27_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_3,B):
* Chain [63]: 1*s(26)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [62]...: 5*s(27)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb20_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_2,B):
* Chain [65]: 1*s(28)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [64]...: 5*s(29)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb17_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_1,B):
* Chain [67]: 1*s(30)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [66]...: 5*s(31)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb15_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,V_unknown_0,B):
* Chain [69]: 1*s(32)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [68]...: 5*s(33)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb12_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):
* Chain [71]: 1*aux(8)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [70]...: 5*s(35)+1
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb8_in(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):
* Chain [73]: 1*aux(9)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [72]...: 1*aux(10)+0
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_37(V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):
* Chain [75]: 1*aux(11)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [74]...: 1*aux(12)+0
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb5_in(V_3,V_5,V_11,V_height_2,V_y_1,V_adjust_y_0,B):
* Chain [77]: 1*aux(13)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [76]...: 1*aux(14)+0
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb4_in(V_3,V_5,V_11,V_22,V_height_1,B):
* Chain [79]: 1*aux(15)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [78]...: 1*s(51)+0
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_6(V_3,V_5,V_11,B):
* Chain [81]: 1*aux(16)+0
  with precondition: [247>=V_11,V_11>=246] 

* Chain [80]...: 1*aux(17)+0
  with precondition: [247>=V_11,V_11>=246] 


#### Cost of chains of eval_clist_stroke_path_bb0_in(B):
* Chain [83]: 1*aux(18)+0
  with precondition: [] 

* Chain [82]...: 1*aux(19)+0
  with precondition: [] 


#### Cost of chains of eval_clist_stroke_path_start(B):
* Chain [85]: 1*s(60)+0
  with precondition: [] 

* Chain [84]...: 1*s(61)+0
  with precondition: [] 


Closed-form bounds of eval_clist_stroke_path_start(B): 
-------------------------------------
* Chain [85] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [84]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_clist_stroke_path_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 257 ms.
* Invariants computed in 87 ms.
   - Backward Invariants 64 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 172 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 95 ms.
   - Equation cost structures 55 ms.
   - Phase cost structures 16 ms.
   - Chain cost structures 23 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 747 ms.

