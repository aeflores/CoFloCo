Warning: Ignored call to eval_writePhantomOutput_stop/1 in equation eval_writePhantomOutput_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_writePhantomOutput_10/6,eval_writePhantomOutput_11/7,eval_writePhantomOutput_6/3,eval_writePhantomOutput_7/4,eval_writePhantomOutput_bb3_in/3]
1. non_recursive  : [eval_writePhantomOutput_bb7_in/1]
2. non_recursive  : [eval_writePhantomOutput_19/1]
3. non_recursive  : [eval_writePhantomOutput_18/2]
4. non_recursive  : [eval_writePhantomOutput_17/2]
5. non_recursive  : [eval_writePhantomOutput_16/2]
6. non_recursive  : [eval_writePhantomOutput_15/2]
7. non_recursive  : [eval_writePhantomOutput_14/2]
8. non_recursive  : [eval_writePhantomOutput_13/2]
9. non_recursive  : [eval_writePhantomOutput_bb5_in/2]
10. non_recursive  : [loop_cont_eval_writePhantomOutput_bb3_in/3]
11. non_recursive  : [eval_writePhantomOutput_5/2]
12. non_recursive  : [eval_writePhantomOutput_4/2]
13. non_recursive  : [eval_writePhantomOutput_bb2_in/2]
14. non_recursive  : [eval_writePhantomOutput_3/2]
15. non_recursive  : [eval_writePhantomOutput_2/2]
16. non_recursive  : [eval_writePhantomOutput_bb0_in/2]
17. non_recursive  : [eval_writePhantomOutput_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_writePhantomOutput_bb3_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_writePhantomOutput_16/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_writePhantomOutput_5/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_writePhantomOutput_bb0_in/2
17. SCC is partially evaluated into eval_writePhantomOutput_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_writePhantomOutput_bb3_in/3 
* CE 6 is refined into CE [8] 
* CE 5 is refined into CE [9] 


#### Refined cost equations eval_writePhantomOutput_bb3_in/3 
* CE 8: eval_writePhantomOutput_bb3_in(A,B,A) = 0
     [B=2] 
* CE 9: eval_writePhantomOutput_bb3_in(V__verbose,B,C) = 1+ eval_writePhantomOutput_bb3_in(V__verbose,D,C)
     [D=2,B=2] 

### Cost equations --> "Loop" of eval_writePhantomOutput_bb3_in/3 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_writePhantomOutput_bb3_in/3 
* Loop 7: eval_writePhantomOutput_bb3_in(V__verbose,B,C)->  eval_writePhantomOutput_bb3_in(V__verbose,B',C)
                  [B'=2,B=2] 
* Loop 8: eval_writePhantomOutput_bb3_in(A,B,A) [B=2] 

### Ranking functions of CR eval_writePhantomOutput_bb3_in(V__verbose,B,C) 

#### Partial ranking functions of CR eval_writePhantomOutput_bb3_in(V__verbose,B,C) 


### Resulting Chains:eval_writePhantomOutput_bb3_in(V__verbose,B,C) 
* [[7]]...
* [[7],8]
* [8]


### Merging Chains  eval_writePhantomOutput_bb3_in/3 into  External patterns of execution 
* [[8],[8,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_writePhantomOutput_16/2 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_writePhantomOutput_16/2 
* CE 10: eval_writePhantomOutput_16(V__verbose,B) = 0
     [] 

### Cost equations --> "Loop" of eval_writePhantomOutput_16/2 
* CEs [10] --> Loop 9 

#### Loops of eval_writePhantomOutput_16/2 
* Loop 9: eval_writePhantomOutput_16(V__verbose,B) [] 

### Ranking functions of CR eval_writePhantomOutput_16(V__verbose,B) 

#### Partial ranking functions of CR eval_writePhantomOutput_16(V__verbose,B) 


### Resulting Chains:eval_writePhantomOutput_16(V__verbose,B) 
* [9]


### Merging Chains  eval_writePhantomOutput_16/2 into  External patterns of execution 
* [[9]] --> 1 


### Specialization of cost equations eval_writePhantomOutput_5/2 
* CE 4 is refined into CE [11,12] 


#### Refined cost equations eval_writePhantomOutput_5/2 
* CE 11: eval_writePhantomOutput_5(V__verbose,B) = 1+ eval_writePhantomOutput_bb3_in(V__verbose,C,V__verbose):1+ eval_writePhantomOutput_16(V__verbose,B):1
     [C=2] 
* CE 12: eval_writePhantomOutput_5(V__verbose,B) = 1+ eval_writePhantomOutput_bb3_in(V__verbose,C,D):2
     [C=2] 

### Cost equations --> "Loop" of eval_writePhantomOutput_5/2 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_writePhantomOutput_5/2 
* Loop 10: eval_writePhantomOutput_5(V__verbose,B) [] 
* Loop 11: eval_writePhantomOutput_5(V__verbose,B) [] 

### Ranking functions of CR eval_writePhantomOutput_5(V__verbose,B) 

#### Partial ranking functions of CR eval_writePhantomOutput_5(V__verbose,B) 


### Resulting Chains:eval_writePhantomOutput_5(V__verbose,B) 
* [11]
* [10]...


### Merging Chains  eval_writePhantomOutput_5/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_writePhantomOutput_bb0_in/2 
* CE 3 is refined into CE [13,14] 


#### Refined cost equations eval_writePhantomOutput_bb0_in/2 
* CE 13: eval_writePhantomOutput_bb0_in(V__verbose,B) = 0+ eval_writePhantomOutput_5(V__verbose,B):1
     [] 
* CE 14: eval_writePhantomOutput_bb0_in(V__verbose,B) = 0+ eval_writePhantomOutput_5(V__verbose,B):2
     [] 

### Cost equations --> "Loop" of eval_writePhantomOutput_bb0_in/2 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of eval_writePhantomOutput_bb0_in/2 
* Loop 12: eval_writePhantomOutput_bb0_in(V__verbose,B) [] 
* Loop 13: eval_writePhantomOutput_bb0_in(V__verbose,B) [] 

### Ranking functions of CR eval_writePhantomOutput_bb0_in(V__verbose,B) 

#### Partial ranking functions of CR eval_writePhantomOutput_bb0_in(V__verbose,B) 


### Resulting Chains:eval_writePhantomOutput_bb0_in(V__verbose,B) 
* [13]
* [12]...


### Merging Chains  eval_writePhantomOutput_bb0_in/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_writePhantomOutput_start/2 
* CE 2 is refined into CE [15,16] 


#### Refined cost equations eval_writePhantomOutput_start/2 
* CE 15: eval_writePhantomOutput_start(V__verbose,B) = 0+ eval_writePhantomOutput_bb0_in(V__verbose,B):1
     [] 
* CE 16: eval_writePhantomOutput_start(V__verbose,B) = 0+ eval_writePhantomOutput_bb0_in(V__verbose,B):2
     [] 

### Cost equations --> "Loop" of eval_writePhantomOutput_start/2 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_writePhantomOutput_start/2 
* Loop 14: eval_writePhantomOutput_start(V__verbose,B) [] 
* Loop 15: eval_writePhantomOutput_start(V__verbose,B) [] 

### Ranking functions of CR eval_writePhantomOutput_start(V__verbose,B) 

#### Partial ranking functions of CR eval_writePhantomOutput_start(V__verbose,B) 


### Resulting Chains:eval_writePhantomOutput_start(V__verbose,B) 
* [15]
* [14]...


### Merging Chains  eval_writePhantomOutput_start/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_writePhantomOutput_bb3_in(V__verbose,B,C) -> [eval_writePhantomOutput_bb3_in(V__verbose',B',C')] 
1
#### Cost of phase [7]:eval_writePhantomOutput_bb3_in(V__verbose,B,C) -> [eval_writePhantomOutput_bb3_in(V__verbose',B',C')] 
1*it(7)+0
#### Cost of phase [7]:eval_writePhantomOutput_bb3_in(V__verbose,B,C) -> [eval_writePhantomOutput_bb3_in(V__verbose',B',C')] 
1*it(7)+0
#### Cost of chains of eval_writePhantomOutput_bb3_in(V__verbose,B,C):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [B=2] 

* Chain [[7],8]: 1*it(7)+0
  with precondition: [B=2,V__verbose=C] 

* Chain [8]: 0
  with precondition: [B=2,C=V__verbose] 


#### Cost of chains of eval_writePhantomOutput_16(V__verbose,B):
* Chain [9]: 0
  with precondition: [] 


#### Cost of chains of eval_writePhantomOutput_5(V__verbose,B):
* Chain [11]: 1*s(2)+1
  with precondition: [] 

* Chain [10]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_writePhantomOutput_bb0_in(V__verbose,B):
* Chain [13]: 1*s(4)+1
  with precondition: [] 

* Chain [12]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_writePhantomOutput_start(V__verbose,B):
* Chain [15]: 1*s(6)+1
  with precondition: [] 

* Chain [14]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_writePhantomOutput_start(V__verbose,B): 
-------------------------------------
* Chain [15] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [14]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_writePhantomOutput_start(V__verbose,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 35 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 27 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 22 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 151 ms.

