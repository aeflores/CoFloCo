Warning: Ignored call to eval_encryptfile_stop/1 in equation eval_encryptfile_bb29_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_encryptfile_bb29_in/1]
1. non_recursive  : [eval_encryptfile_17/1]
2. non_recursive  : [eval_encryptfile_16/4]
3. non_recursive  : [eval_encryptfile_15/4]
4. non_recursive  : [eval_encryptfile_14/4]
5. recursive  : [eval_encryptfile_bb12_in/13]
6. recursive  : [eval_encryptfile_bb15_in/13]
7. recursive  : [eval_encryptfile_59/13,eval_encryptfile_60/13,eval_encryptfile_61/14,eval_encryptfile_bb18_in/13]
8. non_recursive  : [eval_encryptfile_79/1]
9. non_recursive  : [eval_encryptfile_78/4]
10. non_recursive  : [eval_encryptfile_77/4]
11. non_recursive  : [eval_encryptfile_76/4]
12. non_recursive  : [eval_encryptfile_75/4]
13. non_recursive  : [eval_encryptfile_74/4]
14. non_recursive  : [eval_encryptfile_73/5]
15. non_recursive  : [eval_encryptfile_72/5]
16. non_recursive  : [eval_encryptfile_bb27_in/5]
17. non_recursive  : [eval_encryptfile_71/5]
18. non_recursive  : [eval_encryptfile_70/7]
19. non_recursive  : [eval_encryptfile_bb25_in/7]
20. non_recursive  : [eval_encryptfile_67/7]
21. non_recursive  : [eval_encryptfile_66/7]
22. non_recursive  : [eval_encryptfile_84/1]
23. non_recursive  : [eval_encryptfile_83/4]
24. non_recursive  : [eval_encryptfile_82/4]
25. non_recursive  : [eval_encryptfile_81/4]
26. non_recursive  : [eval_encryptfile_bb21_in/7]
27. non_recursive  : [loop_cont_eval_encryptfile_bb18_in/8]
28. non_recursive  : [eval_encryptfile_54/6]
29. non_recursive  : [eval_encryptfile_53/7]
30. non_recursive  : [loop_cont_eval_encryptfile_bb15_in/8]
31. non_recursive  : [eval_encryptfile_43/6]
32. non_recursive  : [eval_encryptfile_42/7]
33. non_recursive  : [eval_encryptfile_38/7]
34. non_recursive  : [eval_encryptfile_37/7]
35. non_recursive  : [loop_cont_eval_encryptfile_bb12_in/8]
36. non_recursive  : [eval_encryptfile_27/6]
37. non_recursive  : [eval_encryptfile_26/5]
38. non_recursive  : [eval_encryptfile_bb11_in/5]
39. non_recursive  : [eval_encryptfile_25/5]
40. non_recursive  : [eval_encryptfile_24/5]
41. non_recursive  : [eval_encryptfile_23/5]
42. non_recursive  : [eval_encryptfile_22/5]
43. non_recursive  : [eval_encryptfile_21/5]
44. non_recursive  : [eval_encryptfile_20/5]
45. non_recursive  : [eval_encryptfile_13/5]
46. non_recursive  : [eval_encryptfile_12/5]
47. non_recursive  : [eval_encryptfile_11/1]
48. non_recursive  : [eval_encryptfile_10/4]
49. non_recursive  : [eval_encryptfile_9/4]
50. non_recursive  : [eval_encryptfile_8/5]
51. non_recursive  : [eval_encryptfile_7/5]
52. non_recursive  : [eval_encryptfile_bb5_in/5]
53. non_recursive  : [eval_encryptfile_6/5]
54. non_recursive  : [eval_encryptfile_5/5]
55. non_recursive  : [eval_encryptfile_bb0_in/5]
56. non_recursive  : [eval_encryptfile_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_encryptfile_bb12_in/13
6. SCC is partially evaluated into eval_encryptfile_bb15_in/13
7. SCC is partially evaluated into eval_encryptfile_bb18_in/13
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_encryptfile_bb25_in/7
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_encryptfile_bb21_in/7
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_encryptfile_54/6
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into eval_encryptfile_43/6
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is partially evaluated into eval_encryptfile_27/6
37. SCC is completely evaluated into other SCCs
38. SCC is completely evaluated into other SCCs
39. SCC is completely evaluated into other SCCs
40. SCC is completely evaluated into other SCCs
41. SCC is completely evaluated into other SCCs
42. SCC is completely evaluated into other SCCs
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is partially evaluated into eval_encryptfile_13/5
46. SCC is completely evaluated into other SCCs
47. SCC is completely evaluated into other SCCs
48. SCC is completely evaluated into other SCCs
49. SCC is completely evaluated into other SCCs
50. SCC is partially evaluated into eval_encryptfile_8/5
51. SCC is completely evaluated into other SCCs
52. SCC is completely evaluated into other SCCs
53. SCC is completely evaluated into other SCCs
54. SCC is completely evaluated into other SCCs
55. SCC is partially evaluated into eval_encryptfile_bb0_in/5
56. SCC is partially evaluated into eval_encryptfile_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encryptfile_bb12_in/13 
* CE 12 is refined into CE [23] 
* CE 11 is refined into CE [24] 


#### Refined cost equations eval_encryptfile_bb12_in/13 
* CE 23: eval_encryptfile_bb12_in(A,B,C,D,E,F,G,A,B,C,D,E,E) = 0
     [F>=E,F>=0,G=4] 
* CE 24: eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_i_0,B,C,D,E,F,G,H) = 1+ eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,I,J,C,D,E,F,G,H)
     [V_33>=V_i_0+1,V_i_0>=0,V_i_0+1=I,J=4,B=4] 

### Cost equations --> "Loop" of eval_encryptfile_bb12_in/13 
* CEs [24] --> Loop 17 
* CEs [23] --> Loop 18 

#### Loops of eval_encryptfile_bb12_in/13 
* Loop 17: eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_i_0,B,C,D,E,F,G,H)->  eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_i_0',B',C,D,E,F,G,H)
                  [V_33>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 18: eval_encryptfile_bb12_in(A,B,C,D,E,F,G,A,B,C,D,E,E) [F>=E,F>=0,G=4] 

### Ranking functions of CR eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_i_0,B,C,D,E,F,G,H) 
* RF of phase [17]: [V_33-V_i_0]

#### Partial ranking functions of CR eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_i_0,B,C,D,E,F,G,H) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V_33-V_i_0


### Resulting Chains:eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_i_0,B,C,D,E,F,G,H) 
* [[17],18]
* [18]


### Merging Chains  eval_encryptfile_bb12_in/13 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[17]]] --> 2 


### Specialization of cost equations eval_encryptfile_bb15_in/13 
* CE 16 is refined into CE [25] 
* CE 15 is refined into CE [26] 
* CE 14 is refined into CE [27] 


#### Refined cost equations eval_encryptfile_bb15_in/13 
* CE 25: eval_encryptfile_bb15_in(A,B,C,D,E,F,G,A,B,C,D,E,H) = 0
     [F>=0,8*F=H,G=3] 
* CE 26: eval_encryptfile_bb15_in(A,B,C,D,E,F,G,A,B,C,D,E,H) = 0
     [F>=0,8*F+8=H,G=3] 
* CE 27: eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H) = 1+ eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,I,J,C,D,E,F,G,H)
     [V_i_1>=0,V_i_1+1=I,J=3,B=3] 

### Cost equations --> "Loop" of eval_encryptfile_bb15_in/13 
* CEs [27] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [26] --> Loop 21 

#### Loops of eval_encryptfile_bb15_in/13 
* Loop 19: eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H)->  eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1',B',C,D,E,F,G,H)
                  [V_i_1>=0,V_i_1+1=V_i_1',B'=3,B=3] 
* Loop 20: eval_encryptfile_bb15_in(A,B,C,D,E,F,G,A,B,C,D,E,H) [F>=0,8*F=H,G=3] 
* Loop 21: eval_encryptfile_bb15_in(A,B,C,D,E,F,G,A,B,C,D,E,H) [F>=0,8*F+8=H,G=3] 

### Ranking functions of CR eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H) 


### Resulting Chains:eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H) 
* [[19]]...
* [[19],21]
* [[19],20]
* [21]
* [20]


### Merging Chains  eval_encryptfile_bb15_in/13 into  External patterns of execution 
* [[21],[20,[19]],[21,[19]]] --> 1 
* [[20]] --> 2 
* [[[19]]] --> 3 


### Specialization of cost equations eval_encryptfile_bb18_in/13 
* CE 19 is refined into CE [28] 
* CE 18 is refined into CE [29] 


#### Refined cost equations eval_encryptfile_bb18_in/13 
* CE 28: eval_encryptfile_bb18_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=2] 
* CE 29: eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B,C,D,E,F,G,H) = 1+ eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,I,J,C,D,E,F,G,H)
     [J=2,B=2] 

### Cost equations --> "Loop" of eval_encryptfile_bb18_in/13 
* CEs [29] --> Loop 22 
* CEs [28] --> Loop 23 

#### Loops of eval_encryptfile_bb18_in/13 
* Loop 22: eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B,C,D,E,F,G,H)->  eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0',B',C,D,E,F,G,H)
                  [B'=2,B=2] 
* Loop 23: eval_encryptfile_bb18_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=2] 

### Ranking functions of CR eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B,C,D,E,F,G,H) 


### Resulting Chains:eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B,C,D,E,F,G,H) 
* [[22]]...
* [[22],23]
* [23]


### Merging Chains  eval_encryptfile_bb18_in/13 into  External patterns of execution 
* [[23],[23,[22]]] --> 1 
* [[[22]]] --> 2 


### Specialization of cost equations eval_encryptfile_bb25_in/7 
* CE 22 is refined into CE [30] 


#### Refined cost equations eval_encryptfile_bb25_in/7 
* CE 30: eval_encryptfile_bb25_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_encryptfile_bb25_in/7 
* CEs [30] --> Loop 24 

#### Loops of eval_encryptfile_bb25_in/7 
* Loop 24: eval_encryptfile_bb25_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) [] 

### Ranking functions of CR eval_encryptfile_bb25_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) 

#### Partial ranking functions of CR eval_encryptfile_bb25_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) 


### Resulting Chains:eval_encryptfile_bb25_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) 
* [24]


### Merging Chains  eval_encryptfile_bb25_in/7 into  External patterns of execution 
* [[24]] --> 1 


### Specialization of cost equations eval_encryptfile_bb21_in/7 
* CE 20 is refined into CE [31] 
* CE 21 is refined into CE [32] 


#### Refined cost equations eval_encryptfile_bb21_in/7 
* CE 31: eval_encryptfile_bb21_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) = 0+ eval_encryptfile_bb25_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B):1
     [] 
* CE 32: eval_encryptfile_bb21_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_encryptfile_bb21_in/7 
* CEs [31,32] --> Loop 25 

#### Loops of eval_encryptfile_bb21_in/7 
* Loop 25: eval_encryptfile_bb21_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) [] 

### Ranking functions of CR eval_encryptfile_bb21_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) 

#### Partial ranking functions of CR eval_encryptfile_bb21_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) 


### Resulting Chains:eval_encryptfile_bb21_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B) 
* [25]


### Merging Chains  eval_encryptfile_bb21_in/7 into  External patterns of execution 
* [[25]] --> 1 


### Specialization of cost equations eval_encryptfile_54/6 
* CE 17 is refined into CE [33,34] 


#### Refined cost equations eval_encryptfile_54/6 
* CE 33: eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,B) = 1+ eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,C,D,V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,E):1+ eval_encryptfile_bb21_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,E,B):1
     [D=2,C=0] 
* CE 34: eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,B) = 1+ eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,C,D,E,F,G,H,I,J):2
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_encryptfile_54/6 
* CEs [34] --> Loop 26 
* CEs [33] --> Loop 27 

#### Loops of eval_encryptfile_54/6 
* Loop 26: eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,B) [] 
* Loop 27: eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,B) [] 

### Ranking functions of CR eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,B) 

#### Partial ranking functions of CR eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,B) 


### Resulting Chains:eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,B) 
* [27]
* [26]...


### Merging Chains  eval_encryptfile_54/6 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations eval_encryptfile_43/6 
* CE 13 is refined into CE [35,36,37,38,39] 


#### Refined cost equations eval_encryptfile_43/6 
* CE 35: eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) = 1+ eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,D,E,V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,F):1+ eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,B):1
     [F>=8,C=V_48+2,E=3,D=0] 
* CE 36: eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) = 1+ eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,D,E,V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,F):1+ eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,B):2
     [F>=8,C=V_48+2,E=3,D=0] 
* CE 37: eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) = 1+ eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,D,E,V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,F):2+ eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,B):1
     [C=V_48+2,F=0,E=3,D=0] 
* CE 38: eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) = 1+ eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,D,E,V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,F):2+ eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,B):2
     [C=V_48+2,F=0,E=3,D=0] 
* CE 39: eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) = 1+ eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,D,E,F,G,H,I,J,K):3
     [C=V_48+2,E=3,D=0] 

### Cost equations --> "Loop" of eval_encryptfile_43/6 
* CEs [36,38,39] --> Loop 28 
* CEs [35,37] --> Loop 29 

#### Loops of eval_encryptfile_43/6 
* Loop 28: eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) [] 
* Loop 29: eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) [] 

### Ranking functions of CR eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) 

#### Partial ranking functions of CR eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) 


### Resulting Chains:eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B) 
* [29]
* [28]...


### Merging Chains  eval_encryptfile_43/6 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_encryptfile_27/6 
* CE 10 is refined into CE [40,41,42,43] 


#### Refined cost equations eval_encryptfile_27/6 
* CE 40: eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) = 1+ eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,C,D,V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_33):1+ eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,E,B):1
     [0>=V_33,V_33+1=E,D=4,C=0] 
* CE 41: eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) = 1+ eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,C,D,V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_33):1+ eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,E,B):2
     [0>=V_33,V_33+1=E,D=4,C=0] 
* CE 42: eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) = 1+ eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,C,D,V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_33):2+ eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,E,B):1
     [V_33>=1,V_33+1=E,D=4,C=0] 
* CE 43: eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) = 1+ eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,C,D,V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_33):2+ eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,E,B):2
     [V_33>=1,V_33+1=E,D=4,C=0] 

### Cost equations --> "Loop" of eval_encryptfile_27/6 
* CEs [43] --> Loop 30 
* CEs [41] --> Loop 31 
* CEs [42] --> Loop 32 
* CEs [40] --> Loop 33 

#### Loops of eval_encryptfile_27/6 
* Loop 30: eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) [V_33>=1] 
* Loop 31: eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) [0>=V_33] 
* Loop 32: eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) [V_33>=1] 
* Loop 33: eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) [0>=V_33] 

### Ranking functions of CR eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) 

#### Partial ranking functions of CR eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) 


### Resulting Chains:eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B) 
* [33]
* [32]
* [31]...
* [30]...


### Merging Chains  eval_encryptfile_27/6 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 
* [[31]] --> 3 
* [[30]] --> 4 


### Specialization of cost equations eval_encryptfile_13/5 
* CE 7 is refined into CE [44] 
* CE 8 is refined into CE [45,46,47,48] 
* CE 9 is refined into CE [49,50,51,52] 


#### Refined cost equations eval_encryptfile_13/5 
* CE 44: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0
     [] 
* CE 45: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,B):1
     [0>=C] 
* CE 46: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,B):2
     [C>=1] 
* CE 47: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,B):3
     [0>=C] 
* CE 48: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,C,B):4
     [C>=1] 
* CE 49: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_27(V_attempt_compression,V__verbose,C,V__encrypt_to_self,D,B):1
     [0>=D,C=1] 
* CE 50: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_27(V_attempt_compression,V__verbose,C,V__encrypt_to_self,D,B):2
     [D>=1,C=1] 
* CE 51: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_27(V_attempt_compression,V__verbose,C,V__encrypt_to_self,D,B):3
     [0>=D,C=1] 
* CE 52: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_27(V_attempt_compression,V__verbose,C,V__encrypt_to_self,D,B):4
     [D>=1,C=1] 

### Cost equations --> "Loop" of eval_encryptfile_13/5 
* CEs [47,48,51,52] --> Loop 34 
* CEs [44,45,46,49,50] --> Loop 35 

#### Loops of eval_encryptfile_13/5 
* Loop 34: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) [] 
* Loop 35: eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) [] 

### Ranking functions of CR eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 

#### Partial ranking functions of CR eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 


### Resulting Chains:eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 
* [35]
* [34]...


### Merging Chains  eval_encryptfile_13/5 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 


### Specialization of cost equations eval_encryptfile_8/5 
* CE 5 is refined into CE [53] 
* CE 6 is refined into CE [54,55] 


#### Refined cost equations eval_encryptfile_8/5 
* CE 53: eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0
     [] 
* CE 54: eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):1
     [] 
* CE 55: eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):2
     [] 

### Cost equations --> "Loop" of eval_encryptfile_8/5 
* CEs [55] --> Loop 36 
* CEs [53,54] --> Loop 37 

#### Loops of eval_encryptfile_8/5 
* Loop 36: eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) [] 
* Loop 37: eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) [] 

### Ranking functions of CR eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 

#### Partial ranking functions of CR eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 


### Resulting Chains:eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 
* [37]
* [36]...


### Merging Chains  eval_encryptfile_8/5 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations eval_encryptfile_bb0_in/5 
* CE 3 is refined into CE [56] 
* CE 4 is refined into CE [57,58] 


#### Refined cost equations eval_encryptfile_bb0_in/5 
* CE 56: eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0
     [] 
* CE 57: eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):1
     [] 
* CE 58: eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):2
     [] 

### Cost equations --> "Loop" of eval_encryptfile_bb0_in/5 
* CEs [58] --> Loop 38 
* CEs [56,57] --> Loop 39 

#### Loops of eval_encryptfile_bb0_in/5 
* Loop 38: eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) [] 
* Loop 39: eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) [] 

### Ranking functions of CR eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 

#### Partial ranking functions of CR eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 


### Resulting Chains:eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 
* [39]
* [38]...


### Merging Chains  eval_encryptfile_bb0_in/5 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations eval_encryptfile_start/5 
* CE 2 is refined into CE [59,60] 


#### Refined cost equations eval_encryptfile_start/5 
* CE 59: eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):1
     [] 
* CE 60: eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) = 0+ eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):2
     [] 

### Cost equations --> "Loop" of eval_encryptfile_start/5 
* CEs [60] --> Loop 40 
* CEs [59] --> Loop 41 

#### Loops of eval_encryptfile_start/5 
* Loop 40: eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) [] 
* Loop 41: eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) [] 

### Ranking functions of CR eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 

#### Partial ranking functions of CR eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 


### Resulting Chains:eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B) 
* [41]
* [40]...


### Merging Chains  eval_encryptfile_start/5 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_i_0,B,C,D,E,F,G,H) -> [eval_encryptfile_bb12_in(V_attempt_compression',V__verbose',V__already_have_md5',V__encrypt_to_self',V_33',V_i_0',B',C',D',E',F',G',H')] 
1
#### Cost of phase [17]:eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_i_0,B,C,D,E,F,G,H) -> [eval_encryptfile_bb12_in(V_attempt_compression',V__verbose',V__already_have_md5',V__encrypt_to_self',V_33',V_i_0',B',C',D',E',F',G',H')] 
1*it(17)+0
  Such that:it(17) =< V_33-V_i_0
it(17) =< V_33-V_i_0-V_33'+V_i_0'

#### Cost of chains of eval_encryptfile_bb12_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,V_i_0,B,C,D,E,F,G,H):
* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< -V_i_0+G

  with precondition: [B=4,V_attempt_compression=C,V__verbose=D,V__already_have_md5=E,V__encrypt_to_self=F,V_33=G,V_33=H,V_i_0>=0,V_33>=V_i_0+1] 

* Chain [18]: 0
  with precondition: [B=4,C=V_attempt_compression,D=V__verbose,E=V__already_have_md5,F=V__encrypt_to_self,V_33=G,V_33=H,V_i_0>=0,V_i_0>=V_33] 


#### Cost of loops [19] 

 * loop 19:eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H) -> [eval_encryptfile_bb15_in(V_attempt_compression',V__verbose',V__already_have_md5',V__encrypt_to_self',V_54',V_i_1',B',C',D',E',F',G',H')] 
1
#### Cost of phase [19]:eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H) -> [eval_encryptfile_bb15_in(V_attempt_compression',V__verbose',V__already_have_md5',V__encrypt_to_self',V_54',V_i_1',B',C',D',E',F',G',H')] 
1*it(19)+0
#### Cost of phase [19]:eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H) -> [eval_encryptfile_bb15_in(V_attempt_compression',V__verbose',V__already_have_md5',V__encrypt_to_self',V_54',V_i_1',B',C',D',E',F',G',H')] 
1*it(19)+0
#### Cost of phase [19]:eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H) -> [eval_encryptfile_bb15_in(V_attempt_compression',V__verbose',V__already_have_md5',V__encrypt_to_self',V_54',V_i_1',B',C',D',E',F',G',H')] 
1*it(19)+0
#### Cost of chains of eval_encryptfile_bb15_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_i_1,B,C,D,E,F,G,H):
* Chain [[19]]...: 1*it(19)+0
  with precondition: [V_i_1>=0,B=3] 

* Chain [[19],21]: 1*it(19)+0
  with precondition: [B=3,V_attempt_compression=C,V__verbose=D,V__already_have_md5=E,V__encrypt_to_self=F,V_54=G,V_i_1>=0,H>=8*V_i_1+16] 

* Chain [[19],20]: 1*it(19)+0
  with precondition: [B=3,V_attempt_compression=C,V__verbose=D,V__already_have_md5=E,V__encrypt_to_self=F,V_54=G,V_i_1>=0,H>=8*V_i_1+8] 

* Chain [21]: 0
  with precondition: [B=3,C=V_attempt_compression,D=V__verbose,E=V__already_have_md5,F=V__encrypt_to_self,G=V_54,8*V_i_1+8=H,V_i_1>=0] 

* Chain [20]: 0
  with precondition: [B=3,C=V_attempt_compression,D=V__verbose,E=V__already_have_md5,F=V__encrypt_to_self,G=V_54,8*V_i_1=H,V_i_1>=0] 


#### Cost of loops [22] 

 * loop 22:eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B,C,D,E,F,G,H) -> [eval_encryptfile_bb18_in(V_attempt_compression',V__verbose',V__already_have_md5',V__encrypt_to_self',V_54',V_keys_used_0',B',C',D',E',F',G',H')] 
1
#### Cost of phase [22]:eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B,C,D,E,F,G,H) -> [eval_encryptfile_bb18_in(V_attempt_compression',V__verbose',V__already_have_md5',V__encrypt_to_self',V_54',V_keys_used_0',B',C',D',E',F',G',H')] 
1*it(22)+0
#### Cost of phase [22]:eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B,C,D,E,F,G,H) -> [eval_encryptfile_bb18_in(V_attempt_compression',V__verbose',V__already_have_md5',V__encrypt_to_self',V_54',V_keys_used_0',B',C',D',E',F',G',H')] 
1*it(22)+0
#### Cost of chains of eval_encryptfile_bb18_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B,C,D,E,F,G,H):
* Chain [[22]]...: 1*it(22)+0
  with precondition: [B=2] 

* Chain [[22],23]: 1*it(22)+0
  with precondition: [B=2,V_attempt_compression=C,V__verbose=D,V__already_have_md5=E,V__encrypt_to_self=F,V_54=G] 

* Chain [23]: 0
  with precondition: [B=2,C=V_attempt_compression,D=V__verbose,E=V__already_have_md5,F=V__encrypt_to_self,G=V_54,H=V_keys_used_0] 


#### Cost of chains of eval_encryptfile_bb25_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B):
* Chain [24]: 0
  with precondition: [] 


#### Cost of chains of eval_encryptfile_bb21_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,V_keys_used_0,B):
* Chain [25]: 0
  with precondition: [] 


#### Cost of chains of eval_encryptfile_54(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_54,B):
* Chain [27]: 1*s(4)+1
  with precondition: [] 

* Chain [26]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_encryptfile_43(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_48,B):
* Chain [29]: 1*aux(3)+0
  with precondition: [] 

* Chain [28]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_encryptfile_27(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,V_33,B):
* Chain [33]: 1*s(13)+1
  with precondition: [0>=V_33] 

* Chain [32]: 1*s(14)+1*s(15)+1
  Such that:s(14) =< V_33

  with precondition: [V_33>=1] 

* Chain [31]...: 1*s(16)+1
  with precondition: [0>=V_33] 

* Chain [30]...: 1*s(17)+1*s(18)+1
  Such that:s(17) =< V_33

  with precondition: [V_33>=1] 


#### Cost of chains of eval_encryptfile_13(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):
* Chain [35]: 1*aux(5)+0
  with precondition: [] 

* Chain [34]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_encryptfile_8(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):
* Chain [37]: 1*aux(7)+0
  with precondition: [] 

* Chain [36]...: 1*s(32)+0
  with precondition: [] 


#### Cost of chains of eval_encryptfile_bb0_in(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):
* Chain [39]: 1*aux(8)+0
  with precondition: [] 

* Chain [38]...: 1*s(34)+0
  with precondition: [] 


#### Cost of chains of eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B):
* Chain [41]: 1*s(35)+0
  with precondition: [] 

* Chain [40]...: 1*s(36)+0
  with precondition: [] 


Closed-form bounds of eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B): 
-------------------------------------
* Chain [41] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [40]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_encryptfile_start(V_attempt_compression,V__verbose,V__already_have_md5,V__encrypt_to_self,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 73 ms.
* Invariants computed in 47 ms.
   - Backward Invariants 25 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 104 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 100 ms.
   - Equation cost structures 64 ms.
   - Phase cost structures 14 ms.
   - Chain cost structures 22 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 413 ms.

