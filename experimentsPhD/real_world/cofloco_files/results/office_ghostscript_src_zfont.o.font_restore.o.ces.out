Warning: Ignored call to eval_font_restore_stop/1 in equation eval_font_restore_bb28_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_font_restore_bb28_in/1]
1. recursive  : [eval_font_restore_0/1,eval_font_restore_1/1,eval_font_restore_bb3_in/1]
2. recursive  : [eval_font_restore_2/1,eval_font_restore_3/1,eval_font_restore_bb2_in/1,loop_cont_eval_font_restore_bb3_in/2]
3. recursive  : [eval_font_restore_4/2,eval_font_restore_5/2,eval_font_restore_bb9_in/2]
4. recursive  : [eval_font_restore_6/2,eval_font_restore_7/2,eval_font_restore_bb8_in/2,loop_cont_eval_font_restore_bb9_in/4]
5. recursive  : [eval_font_restore_12/2,eval_font_restore_13/2,eval_font_restore_16/2,eval_font_restore_17/2,eval_font_restore_18/2,eval_font_restore_19/2,eval_font_restore_20/2,eval_font_restore_21/2,eval_font_restore_22/2,eval_font_restore_23/2,eval_font_restore_bb14_in/2,eval_font_restore_bb17_in/2,eval_font_restore_bb19_in/2,eval_font_restore_bb21_in/2,eval_font_restore_bb22_in/2,eval_font_restore_bb25_in/2]
6. non_recursive  : [eval_font_restore_29/1]
7. non_recursive  : [eval_font_restore_28/1]
8. non_recursive  : [eval_font_restore_27/1]
9. non_recursive  : [eval_font_restore_26/1]
10. non_recursive  : [loop_cont_eval_font_restore_bb14_in/2]
11. non_recursive  : [loop_cont_eval_font_restore_bb8_in/3]
12. non_recursive  : [loop_cont_eval_font_restore_bb2_in/2]
13. non_recursive  : [eval_font_restore_bb0_in/1]
14. non_recursive  : [eval_font_restore_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_font_restore_bb3_in/1
2. SCC is partially evaluated into eval_font_restore_bb2_in/1
3. SCC is partially evaluated into eval_font_restore_bb9_in/2
4. SCC is partially evaluated into eval_font_restore_bb8_in/2
5. SCC is partially evaluated into eval_font_restore_bb14_in/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_font_restore_27/1
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into loop_cont_eval_font_restore_bb8_in/3
12. SCC is partially evaluated into loop_cont_eval_font_restore_bb2_in/2
13. SCC is partially evaluated into eval_font_restore_bb0_in/1
14. SCC is partially evaluated into eval_font_restore_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_font_restore_bb3_in/1 
* CE 10 is refined into CE [20] 
* CE 9 is refined into CE [21] 
* CE 8 is refined into CE [22] 


#### Refined cost equations eval_font_restore_bb3_in/1 
* CE 20: eval_font_restore_bb3_in(B) = 0
     [B=5] 
* CE 21: eval_font_restore_bb3_in(B) = 0
     [B=4] 
* CE 22: eval_font_restore_bb3_in(B) = 1+ eval_font_restore_bb3_in(B)
     [B>=4,5>=B] 

### Cost equations --> "Loop" of eval_font_restore_bb3_in/1 
* CEs [22] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of eval_font_restore_bb3_in/1 
* Loop 18: eval_font_restore_bb3_in(B)->  eval_font_restore_bb3_in(B)
                  [B>=4,5>=B] 
* Loop 19: eval_font_restore_bb3_in(B) [B=5] 
* Loop 20: eval_font_restore_bb3_in(B) [B=4] 

### Ranking functions of CR eval_font_restore_bb3_in(B) 

#### Partial ranking functions of CR eval_font_restore_bb3_in(B) 


### Resulting Chains:eval_font_restore_bb3_in(B) 
* [[18]]...
* [[18],20]
* [[18],19]
* [20]
* [19]


### Merging Chains  eval_font_restore_bb3_in/1 into  External patterns of execution 
* [[20],[20,[18]]] --> 1 
* [[19],[19,[18]]] --> 2 
* [[[18]]] --> 3 


### Specialization of cost equations eval_font_restore_bb2_in/1 
* CE 6 is refined into CE [23,24] 
* CE 5 is refined into CE [25,26] 


#### Refined cost equations eval_font_restore_bb2_in/1 
* CE 23: eval_font_restore_bb2_in(B) = 2+ eval_font_restore_bb3_in(C):1+ eval_font_restore_bb2_in(B)
     [C=4] 
* CE 24: eval_font_restore_bb2_in(B) = 2+ eval_font_restore_bb3_in(C):3
     [C=4] 
* CE 25: eval_font_restore_bb2_in(B) = 1+ eval_font_restore_bb3_in(C):2
     [C=5,B=5] 
* CE 26: eval_font_restore_bb2_in(B) = 1+ eval_font_restore_bb3_in(C):3
     [C=5,B=5] 

### Cost equations --> "Loop" of eval_font_restore_bb2_in/1 
* CEs [24,26] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [23] --> Loop 23 

#### Loops of eval_font_restore_bb2_in/1 
* Loop 21: eval_font_restore_bb2_in(B) [] 
* Loop 22: eval_font_restore_bb2_in(B) [B=5] 
* Loop 23: eval_font_restore_bb2_in(B)->  eval_font_restore_bb2_in(B)
                  [] 

### Ranking functions of CR eval_font_restore_bb2_in(B) 

#### Partial ranking functions of CR eval_font_restore_bb2_in(B) 


### Resulting Chains:eval_font_restore_bb2_in(B) 
* [[23]]...
* [[23],22]
* [[23],21]...
* [22]
* [21]...


### Merging Chains  eval_font_restore_bb2_in/1 into  External patterns of execution 
* [[22],[22,[23]]] --> 1 
* [[21],[[23]],[21,[23]]] --> 2 


### Specialization of cost equations eval_font_restore_bb9_in/2 
* CE 16 is refined into CE [27] 
* CE 15 is refined into CE [28] 
* CE 14 is refined into CE [29] 


#### Refined cost equations eval_font_restore_bb9_in/2 
* CE 27: eval_font_restore_bb9_in(B,C) = 0
     [B=3] 
* CE 28: eval_font_restore_bb9_in(B,C) = 0
     [B=2] 
* CE 29: eval_font_restore_bb9_in(B,C) = 1+ eval_font_restore_bb9_in(B,C)
     [B>=2,3>=B] 

### Cost equations --> "Loop" of eval_font_restore_bb9_in/2 
* CEs [29] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [28] --> Loop 26 

#### Loops of eval_font_restore_bb9_in/2 
* Loop 24: eval_font_restore_bb9_in(B,C)->  eval_font_restore_bb9_in(B,C)
                  [B>=2,3>=B] 
* Loop 25: eval_font_restore_bb9_in(B,C) [B=3] 
* Loop 26: eval_font_restore_bb9_in(B,C) [B=2] 

### Ranking functions of CR eval_font_restore_bb9_in(B,C) 

#### Partial ranking functions of CR eval_font_restore_bb9_in(B,C) 


### Resulting Chains:eval_font_restore_bb9_in(B,C) 
* [[24]]...
* [[24],26]
* [[24],25]
* [26]
* [25]


### Merging Chains  eval_font_restore_bb9_in/2 into  External patterns of execution 
* [[26],[26,[24]]] --> 1 
* [[25],[25,[24]]] --> 2 
* [[[24]]] --> 3 


### Specialization of cost equations eval_font_restore_bb8_in/2 
* CE 12 is refined into CE [30,31] 
* CE 11 is refined into CE [32,33] 


#### Refined cost equations eval_font_restore_bb8_in/2 
* CE 30: eval_font_restore_bb8_in(B,C) = 2+ eval_font_restore_bb9_in(D,E):1+ eval_font_restore_bb8_in(B,C)
     [D=2] 
* CE 31: eval_font_restore_bb8_in(B,C) = 2+ eval_font_restore_bb9_in(D,E):3
     [D=2] 
* CE 32: eval_font_restore_bb8_in(B,C) = 1+ eval_font_restore_bb9_in(D,C):2
     [D=3,B=3] 
* CE 33: eval_font_restore_bb8_in(B,C) = 1+ eval_font_restore_bb9_in(D,C):3
     [D=3,B=3] 

### Cost equations --> "Loop" of eval_font_restore_bb8_in/2 
* CEs [31,33] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [30] --> Loop 29 

#### Loops of eval_font_restore_bb8_in/2 
* Loop 27: eval_font_restore_bb8_in(B,C) [] 
* Loop 28: eval_font_restore_bb8_in(B,C) [B=3] 
* Loop 29: eval_font_restore_bb8_in(B,C)->  eval_font_restore_bb8_in(B,C)
                  [] 

### Ranking functions of CR eval_font_restore_bb8_in(B,C) 

#### Partial ranking functions of CR eval_font_restore_bb8_in(B,C) 


### Resulting Chains:eval_font_restore_bb8_in(B,C) 
* [[29]]...
* [[29],28]
* [[29],27]...
* [28]
* [27]...


### Merging Chains  eval_font_restore_bb8_in/2 into  External patterns of execution 
* [[28],[28,[29]]] --> 1 
* [[27],[[29]],[27,[29]]] --> 2 


### Specialization of cost equations eval_font_restore_bb14_in/2 
* CE 18 is refined into CE [34] 
* CE 17 is refined into CE [35] 


#### Refined cost equations eval_font_restore_bb14_in/2 
* CE 34: eval_font_restore_bb14_in(V_n_0,B) = 0
     [0>=V_n_0,B=6] 
* CE 35: eval_font_restore_bb14_in(V_n_0,B) = 1+ eval_font_restore_bb14_in(C,D)
     [V_n_0>=1,V_n_0=C+1,D=6,B=6] 

### Cost equations --> "Loop" of eval_font_restore_bb14_in/2 
* CEs [35] --> Loop 30 
* CEs [34] --> Loop 31 

#### Loops of eval_font_restore_bb14_in/2 
* Loop 30: eval_font_restore_bb14_in(V_n_0,B)->  eval_font_restore_bb14_in(V_n_0',B')
                  [V_n_0>=1,V_n_0=V_n_0'+1,B'=6,B=6] 
* Loop 31: eval_font_restore_bb14_in(V_n_0,B) [0>=V_n_0,B=6] 

### Ranking functions of CR eval_font_restore_bb14_in(V_n_0,B) 
* RF of phase [30]: [V_n_0]

#### Partial ranking functions of CR eval_font_restore_bb14_in(V_n_0,B) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V_n_0


### Resulting Chains:eval_font_restore_bb14_in(V_n_0,B) 
* [[30],31]
* [31]


### Merging Chains  eval_font_restore_bb14_in/2 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[30]]] --> 2 


### Specialization of cost equations eval_font_restore_27/1 
* CE 19 is refined into CE [36] 


#### Refined cost equations eval_font_restore_27/1 
* CE 36: eval_font_restore_27(B) = 0
     [] 

### Cost equations --> "Loop" of eval_font_restore_27/1 
* CEs [36] --> Loop 32 

#### Loops of eval_font_restore_27/1 
* Loop 32: eval_font_restore_27(B) [] 

### Ranking functions of CR eval_font_restore_27(B) 

#### Partial ranking functions of CR eval_font_restore_27(B) 


### Resulting Chains:eval_font_restore_27(B) 
* [32]


### Merging Chains  eval_font_restore_27/1 into  External patterns of execution 
* [[32]] --> 1 


### Specialization of cost equations loop_cont_eval_font_restore_bb8_in/3 
* CE 13 is refined into CE [37,38] 


#### Refined cost equations loop_cont_eval_font_restore_bb8_in/3 
* CE 37: loop_cont_eval_font_restore_bb8_in(D,A,B) = 1+ eval_font_restore_bb14_in(A,E):1+ eval_font_restore_27(B):1
     [0>=A,E=6,D=3] 
* CE 38: loop_cont_eval_font_restore_bb8_in(D,A,B) = 1+ eval_font_restore_bb14_in(A,E):2+ eval_font_restore_27(B):1
     [A>=1,E=6,D=3] 

### Cost equations --> "Loop" of loop_cont_eval_font_restore_bb8_in/3 
* CEs [38] --> Loop 33 
* CEs [37] --> Loop 34 

#### Loops of loop_cont_eval_font_restore_bb8_in/3 
* Loop 33: loop_cont_eval_font_restore_bb8_in(D,A,B) [A>=1,D=3] 
* Loop 34: loop_cont_eval_font_restore_bb8_in(D,A,B) [0>=A,D=3] 

### Ranking functions of CR loop_cont_eval_font_restore_bb8_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_font_restore_bb8_in(D,A,B) 


### Resulting Chains:loop_cont_eval_font_restore_bb8_in(D,A,B) 
* [34]
* [33]


### Merging Chains  loop_cont_eval_font_restore_bb8_in/3 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations loop_cont_eval_font_restore_bb2_in/2 
* CE 7 is refined into CE [39,40,41] 


#### Refined cost equations loop_cont_eval_font_restore_bb2_in/2 
* CE 39: loop_cont_eval_font_restore_bb2_in(D,A) = 1+ eval_font_restore_bb8_in(E,F):1+ loop_cont_eval_font_restore_bb8_in(G,F,A):1
     [0>=F,G=3,E=3,D=5] 
* CE 40: loop_cont_eval_font_restore_bb2_in(D,A) = 1+ eval_font_restore_bb8_in(E,F):1+ loop_cont_eval_font_restore_bb8_in(G,F,A):2
     [F>=1,G=3,E=3,D=5] 
* CE 41: loop_cont_eval_font_restore_bb2_in(D,A) = 1+ eval_font_restore_bb8_in(E,F):2
     [D=5] 

### Cost equations --> "Loop" of loop_cont_eval_font_restore_bb2_in/2 
* CEs [41] --> Loop 35 
* CEs [39,40] --> Loop 36 

#### Loops of loop_cont_eval_font_restore_bb2_in/2 
* Loop 35: loop_cont_eval_font_restore_bb2_in(D,A) [D=5] 
* Loop 36: loop_cont_eval_font_restore_bb2_in(D,A) [D=5] 

### Ranking functions of CR loop_cont_eval_font_restore_bb2_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_font_restore_bb2_in(D,A) 


### Resulting Chains:loop_cont_eval_font_restore_bb2_in(D,A) 
* [36]
* [35]...


### Merging Chains  loop_cont_eval_font_restore_bb2_in/2 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


### Specialization of cost equations eval_font_restore_bb0_in/1 
* CE 3 is refined into CE [42] 
* CE 4 is refined into CE [43,44,45] 


#### Refined cost equations eval_font_restore_bb0_in/1 
* CE 42: eval_font_restore_bb0_in(B) = 0
     [] 
* CE 43: eval_font_restore_bb0_in(B) = 1+ eval_font_restore_bb2_in(C):1+ loop_cont_eval_font_restore_bb2_in(D,B):1
     [D=5,C=5] 
* CE 44: eval_font_restore_bb0_in(B) = 1+ eval_font_restore_bb2_in(C):1+ loop_cont_eval_font_restore_bb2_in(D,B):2
     [D=5,C=5] 
* CE 45: eval_font_restore_bb0_in(B) = 1+ eval_font_restore_bb2_in(C):2
     [] 

### Cost equations --> "Loop" of eval_font_restore_bb0_in/1 
* CEs [44,45] --> Loop 37 
* CEs [42,43] --> Loop 38 

#### Loops of eval_font_restore_bb0_in/1 
* Loop 37: eval_font_restore_bb0_in(B) [] 
* Loop 38: eval_font_restore_bb0_in(B) [] 

### Ranking functions of CR eval_font_restore_bb0_in(B) 

#### Partial ranking functions of CR eval_font_restore_bb0_in(B) 


### Resulting Chains:eval_font_restore_bb0_in(B) 
* [38]
* [37]...


### Merging Chains  eval_font_restore_bb0_in/1 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_font_restore_start/1 
* CE 2 is refined into CE [46,47] 


#### Refined cost equations eval_font_restore_start/1 
* CE 46: eval_font_restore_start(B) = 0+ eval_font_restore_bb0_in(B):1
     [] 
* CE 47: eval_font_restore_start(B) = 0+ eval_font_restore_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_font_restore_start/1 
* CEs [47] --> Loop 39 
* CEs [46] --> Loop 40 

#### Loops of eval_font_restore_start/1 
* Loop 39: eval_font_restore_start(B) [] 
* Loop 40: eval_font_restore_start(B) [] 

### Ranking functions of CR eval_font_restore_start(B) 

#### Partial ranking functions of CR eval_font_restore_start(B) 


### Resulting Chains:eval_font_restore_start(B) 
* [40]
* [39]...


### Merging Chains  eval_font_restore_start/1 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [18] 

 * loop 18:eval_font_restore_bb3_in(B) -> [eval_font_restore_bb3_in(B')] 
1
#### Cost of phase [18]:eval_font_restore_bb3_in(B) -> [eval_font_restore_bb3_in(B')] 
1*it(18)+0
#### Cost of phase [18]:eval_font_restore_bb3_in(B) -> [eval_font_restore_bb3_in(B')] 
1*it(18)+0
#### Cost of phase [18]:eval_font_restore_bb3_in(B) -> [eval_font_restore_bb3_in(B')] 
1*it(18)+0
#### Cost of chains of eval_font_restore_bb3_in(B):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [B>=4,5>=B] 

* Chain [[18],20]: 1*it(18)+0
  with precondition: [B=4] 

* Chain [[18],19]: 1*it(18)+0
  with precondition: [B=5] 

* Chain [20]: 0
  with precondition: [B=4] 

* Chain [19]: 0
  with precondition: [B=5] 


#### Cost of loops [23] 

 * loop 23:eval_font_restore_bb2_in(B) -> [eval_font_restore_bb2_in(B')] 
1*s(4)+2
#### Cost of phase [23]:eval_font_restore_bb2_in(B) -> [eval_font_restore_bb2_in(B')] 
3*it(23)+0
#### Cost of phase [23]:eval_font_restore_bb2_in(B) -> [eval_font_restore_bb2_in(B')] 
3*it(23)+0
#### Cost of phase [23]:eval_font_restore_bb2_in(B) -> [eval_font_restore_bb2_in(B')] 
3*it(23)+0
#### Cost of chains of eval_font_restore_bb2_in(B):
* Chain [[23]]...: 3*it(23)+0
  with precondition: [] 

* Chain [[23],22]: 4*it(23)+1
  with precondition: [B=5] 

* Chain [[23],21]...: 4*aux(3)+0
  with precondition: [] 

* Chain [22]: 1*s(6)+1
  with precondition: [B=5] 

* Chain [21]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of loops [24] 

 * loop 24:eval_font_restore_bb9_in(B,C) -> [eval_font_restore_bb9_in(B',C')] 
1
#### Cost of phase [24]:eval_font_restore_bb9_in(B,C) -> [eval_font_restore_bb9_in(B',C')] 
1*it(24)+0
#### Cost of phase [24]:eval_font_restore_bb9_in(B,C) -> [eval_font_restore_bb9_in(B',C')] 
1*it(24)+0
#### Cost of phase [24]:eval_font_restore_bb9_in(B,C) -> [eval_font_restore_bb9_in(B',C')] 
1*it(24)+0
#### Cost of chains of eval_font_restore_bb9_in(B,C):
* Chain [[24]]...: 1*it(24)+0
  with precondition: [B>=2,3>=B] 

* Chain [[24],26]: 1*it(24)+0
  with precondition: [B=2] 

* Chain [[24],25]: 1*it(24)+0
  with precondition: [B=3] 

* Chain [26]: 0
  with precondition: [B=2] 

* Chain [25]: 0
  with precondition: [B=3] 


#### Cost of loops [29] 

 * loop 29:eval_font_restore_bb8_in(B,C) -> [eval_font_restore_bb8_in(B',C')] 
1*s(17)+2
#### Cost of phase [29]:eval_font_restore_bb8_in(B,C) -> [eval_font_restore_bb8_in(B',C')] 
3*it(29)+0
#### Cost of phase [29]:eval_font_restore_bb8_in(B,C) -> [eval_font_restore_bb8_in(B',C')] 
3*it(29)+0
#### Cost of phase [29]:eval_font_restore_bb8_in(B,C) -> [eval_font_restore_bb8_in(B',C')] 
3*it(29)+0
#### Cost of chains of eval_font_restore_bb8_in(B,C):
* Chain [[29]]...: 3*it(29)+0
  with precondition: [] 

* Chain [[29],28]: 4*it(29)+1
  with precondition: [B=3] 

* Chain [[29],27]...: 4*aux(8)+0
  with precondition: [] 

* Chain [28]: 1*s(19)+1
  with precondition: [B=3] 

* Chain [27]...: 1*aux(8)+0
  with precondition: [] 


#### Cost of loops [30] 

 * loop 30:eval_font_restore_bb14_in(V_n_0,B) -> [eval_font_restore_bb14_in(V_n_0',B')] 
1
#### Cost of phase [30]:eval_font_restore_bb14_in(V_n_0,B) -> [eval_font_restore_bb14_in(V_n_0',B')] 
1*it(30)+0
  Such that:it(30) =< V_n_0
it(30) =< V_n_0-V_n_0'

#### Cost of chains of eval_font_restore_bb14_in(V_n_0,B):
* Chain [[30],31]: 1*it(30)+0
  Such that:it(30) =< V_n_0

  with precondition: [B=6,V_n_0>=1] 

* Chain [31]: 0
  with precondition: [B=6,0>=V_n_0] 


#### Cost of chains of eval_font_restore_27(B):
* Chain [32]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_font_restore_bb8_in(D,A,B):
* Chain [34]: 1
  with precondition: [D=3,0>=A] 

* Chain [33]: 1*s(27)+1
  Such that:s(27) =< A

  with precondition: [D=3,A>=1] 


#### Cost of chains of loop_cont_eval_font_restore_bb2_in(D,A):
* Chain [36]: 1*aux(11)+0
  with precondition: [D=5] 

* Chain [35]...: 1*s(31)+1
  with precondition: [D=5] 


#### Cost of chains of eval_font_restore_bb0_in(B):
* Chain [38]: 1*aux(12)+0
  with precondition: [] 

* Chain [37]...: 1*aux(13)+0
  with precondition: [] 


#### Cost of chains of eval_font_restore_start(B):
* Chain [40]: 1*s(37)+0
  with precondition: [] 

* Chain [39]...: 1*s(38)+0
  with precondition: [] 


Closed-form bounds of eval_font_restore_start(B): 
-------------------------------------
* Chain [40] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [39]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_font_restore_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 64 ms.
* Invariants computed in 54 ms.
   - Backward Invariants 26 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 96 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 81 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 19 ms.
   - Chain cost structures 28 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 397 ms.

