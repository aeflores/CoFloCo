Warning: Ignored call to eval_readkey_stop/1 in equation eval_readkey_bb19_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_readkey_bb19_in/1]
1. non_recursive  : [eval_readkey_5/1]
2. non_recursive  : [eval_readkey_4/2]
3. non_recursive  : [eval_readkey_12/1]
4. non_recursive  : [eval_readkey_11/2]
5. recursive  : [eval_readkey_16/4,eval_readkey_17/5,eval_readkey_bb6_in/3]
6. non_recursive  : [eval_readkey_26/1]
7. non_recursive  : [eval_readkey_25/2]
8. non_recursive  : [eval_readkey_bb13_in/1]
9. non_recursive  : [eval_readkey_NewDefault3_in/1]
10. non_recursive  : [eval_readkey_24/2]
11. non_recursive  : [eval_readkey_23/3]
12. non_recursive  : [eval_readkey_bb9_in/2]
13. non_recursive  : [eval_readkey_21/2]
14. non_recursive  : [eval_readkey_20/2]
15. non_recursive  : [loop_cont_eval_readkey_bb6_in/3]
16. non_recursive  : [eval_readkey_14/2]
17. non_recursive  : [eval_readkey_13/2]
18. non_recursive  : [eval_readkey_10/2]
19. non_recursive  : [eval_readkey_9/3]
20. non_recursive  : [eval_readkey_7/2]
21. non_recursive  : [eval_readkey_6/2]
22. non_recursive  : [eval_readkey_3/2]
23. non_recursive  : [eval_readkey_2/3]
24. non_recursive  : [eval_readkey_36/1]
25. non_recursive  : [eval_readkey_35/2]
26. non_recursive  : [eval_readkey_bb18_in/1]
27. non_recursive  : [eval_readkey_33/2]
28. non_recursive  : [eval_readkey_32/2]
29. non_recursive  : [eval_readkey_NewDefault_in/1]
30. non_recursive  : [eval_readkey_31/2]
31. non_recursive  : [eval_readkey_30/3]
32. non_recursive  : [eval_readkey_bb0_in/2]
33. non_recursive  : [eval_readkey_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_readkey_bb6_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_readkey_24/2
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into loop_cont_eval_readkey_bb6_in/3
16. SCC is partially evaluated into eval_readkey_14/2
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_readkey_10/2
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_readkey_3/2
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_readkey_33/2
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_readkey_31/2
31. SCC is completely evaluated into other SCCs
32. SCC is partially evaluated into eval_readkey_bb0_in/2
33. SCC is partially evaluated into eval_readkey_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_readkey_bb6_in/3 
* CE 15 is refined into CE [19] 
* CE 13 is refined into CE [20] 
* CE 14 is refined into CE [21] 


#### Refined cost equations eval_readkey_bb6_in/3 
* CE 19: eval_readkey_bb6_in(V__tty_fd,B,C) = 1+ eval_readkey_bb6_in(V__tty_fd,B,C)
     [] 
* CE 20: eval_readkey_bb6_in(A,B,A) = 0
     [B=3] 
* CE 21: eval_readkey_bb6_in(A,B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_readkey_bb6_in/3 
* CEs [20] --> Loop 14 
* CEs [21] --> Loop 15 
* CEs [19] --> Loop 16 

#### Loops of eval_readkey_bb6_in/3 
* Loop 14: eval_readkey_bb6_in(A,B,A) [B=3] 
* Loop 15: eval_readkey_bb6_in(A,B,A) [B=2] 
* Loop 16: eval_readkey_bb6_in(V__tty_fd,B,C)->  eval_readkey_bb6_in(V__tty_fd,B,C)
                  [] 

### Ranking functions of CR eval_readkey_bb6_in(V__tty_fd,B,C) 

#### Partial ranking functions of CR eval_readkey_bb6_in(V__tty_fd,B,C) 


### Resulting Chains:eval_readkey_bb6_in(V__tty_fd,B,C) 
* [[16]]...
* [[16],15]
* [[16],14]
* [15]
* [14]


### Merging Chains  eval_readkey_bb6_in/3 into  External patterns of execution 
* [[15],[15,[16]]] --> 1 
* [[14],[14,[16]]] --> 2 
* [[[16]]] --> 3 


### Specialization of cost equations eval_readkey_24/2 
* CE 18 is refined into CE [22] 


#### Refined cost equations eval_readkey_24/2 
* CE 22: eval_readkey_24(V__tty_fd,B) = 0
     [] 

### Cost equations --> "Loop" of eval_readkey_24/2 
* CEs [22] --> Loop 17 

#### Loops of eval_readkey_24/2 
* Loop 17: eval_readkey_24(V__tty_fd,B) [] 

### Ranking functions of CR eval_readkey_24(V__tty_fd,B) 

#### Partial ranking functions of CR eval_readkey_24(V__tty_fd,B) 


### Resulting Chains:eval_readkey_24(V__tty_fd,B) 
* [17]


### Merging Chains  eval_readkey_24/2 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations loop_cont_eval_readkey_bb6_in/3 
* CE 17 is refined into CE [23] 
* CE 16 is refined into CE [24] 


#### Refined cost equations loop_cont_eval_readkey_bb6_in/3 
* CE 23: loop_cont_eval_readkey_bb6_in(D,A,B) = 0+ eval_readkey_24(A,B):1
     [D=3] 
* CE 24: loop_cont_eval_readkey_bb6_in(D,A,B) = 0+ eval_readkey_24(A,B):1
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_readkey_bb6_in/3 
* CEs [23] --> Loop 18 
* CEs [24] --> Loop 19 

#### Loops of loop_cont_eval_readkey_bb6_in/3 
* Loop 18: loop_cont_eval_readkey_bb6_in(D,A,B) [D=3] 
* Loop 19: loop_cont_eval_readkey_bb6_in(D,A,B) [D=2] 

### Ranking functions of CR loop_cont_eval_readkey_bb6_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_readkey_bb6_in(D,A,B) 


### Resulting Chains:loop_cont_eval_readkey_bb6_in(D,A,B) 
* [19]
* [18]


### Merging Chains  loop_cont_eval_readkey_bb6_in/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_readkey_14/2 
* CE 12 is refined into CE [25,26,27] 


#### Refined cost equations eval_readkey_14/2 
* CE 25: eval_readkey_14(V__tty_fd,B) = 1+ eval_readkey_bb6_in(V__tty_fd,C,V__tty_fd):1+ loop_cont_eval_readkey_bb6_in(D,V__tty_fd,B):1
     [D=2,C=2] 
* CE 26: eval_readkey_14(V__tty_fd,B) = 1+ eval_readkey_bb6_in(V__tty_fd,C,V__tty_fd):2+ loop_cont_eval_readkey_bb6_in(D,V__tty_fd,B):2
     [D=3,C=3] 
* CE 27: eval_readkey_14(V__tty_fd,B) = 1+ eval_readkey_bb6_in(V__tty_fd,C,D):3
     [] 

### Cost equations --> "Loop" of eval_readkey_14/2 
* CEs [27] --> Loop 20 
* CEs [25,26] --> Loop 21 

#### Loops of eval_readkey_14/2 
* Loop 20: eval_readkey_14(V__tty_fd,B) [] 
* Loop 21: eval_readkey_14(V__tty_fd,B) [] 

### Ranking functions of CR eval_readkey_14(V__tty_fd,B) 

#### Partial ranking functions of CR eval_readkey_14(V__tty_fd,B) 


### Resulting Chains:eval_readkey_14(V__tty_fd,B) 
* [21]
* [20]...


### Merging Chains  eval_readkey_14/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_readkey_10/2 
* CE 9 is refined into CE [28] 
* CE 10 is refined into CE [29,30] 


#### Refined cost equations eval_readkey_10/2 
* CE 28: eval_readkey_10(V__tty_fd,B) = 0
     [] 
* CE 29: eval_readkey_10(V__tty_fd,B) = 0+ eval_readkey_14(V__tty_fd,B):1
     [] 
* CE 30: eval_readkey_10(V__tty_fd,B) = 0+ eval_readkey_14(V__tty_fd,B):2
     [] 

### Cost equations --> "Loop" of eval_readkey_10/2 
* CEs [30] --> Loop 22 
* CEs [28,29] --> Loop 23 

#### Loops of eval_readkey_10/2 
* Loop 22: eval_readkey_10(V__tty_fd,B) [] 
* Loop 23: eval_readkey_10(V__tty_fd,B) [] 

### Ranking functions of CR eval_readkey_10(V__tty_fd,B) 

#### Partial ranking functions of CR eval_readkey_10(V__tty_fd,B) 


### Resulting Chains:eval_readkey_10(V__tty_fd,B) 
* [23]
* [22]...


### Merging Chains  eval_readkey_10/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_readkey_3/2 
* CE 5 is refined into CE [31] 
* CE 6 is refined into CE [32,33] 


#### Refined cost equations eval_readkey_3/2 
* CE 31: eval_readkey_3(V__tty_fd,B) = 0
     [] 
* CE 32: eval_readkey_3(V__tty_fd,B) = 0+ eval_readkey_10(V__tty_fd,B):1
     [] 
* CE 33: eval_readkey_3(V__tty_fd,B) = 0+ eval_readkey_10(V__tty_fd,B):2
     [] 

### Cost equations --> "Loop" of eval_readkey_3/2 
* CEs [33] --> Loop 24 
* CEs [31,32] --> Loop 25 

#### Loops of eval_readkey_3/2 
* Loop 24: eval_readkey_3(V__tty_fd,B) [] 
* Loop 25: eval_readkey_3(V__tty_fd,B) [] 

### Ranking functions of CR eval_readkey_3(V__tty_fd,B) 

#### Partial ranking functions of CR eval_readkey_3(V__tty_fd,B) 


### Resulting Chains:eval_readkey_3(V__tty_fd,B) 
* [25]
* [24]...


### Merging Chains  eval_readkey_3/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_readkey_33/2 
* CE 11 is refined into CE [34] 


#### Refined cost equations eval_readkey_33/2 
* CE 34: eval_readkey_33(V__tty_fd,B) = 0
     [] 

### Cost equations --> "Loop" of eval_readkey_33/2 
* CEs [34] --> Loop 26 

#### Loops of eval_readkey_33/2 
* Loop 26: eval_readkey_33(V__tty_fd,B) [] 

### Ranking functions of CR eval_readkey_33(V__tty_fd,B) 

#### Partial ranking functions of CR eval_readkey_33(V__tty_fd,B) 


### Resulting Chains:eval_readkey_33(V__tty_fd,B) 
* [26]


### Merging Chains  eval_readkey_33/2 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations eval_readkey_31/2 
* CE 7 is refined into CE [35] 
* CE 8 is refined into CE [36] 


#### Refined cost equations eval_readkey_31/2 
* CE 35: eval_readkey_31(V__tty_fd,B) = 0+ eval_readkey_33(V__tty_fd,B):1
     [] 
* CE 36: eval_readkey_31(V__tty_fd,B) = 0
     [] 

### Cost equations --> "Loop" of eval_readkey_31/2 
* CEs [35,36] --> Loop 27 

#### Loops of eval_readkey_31/2 
* Loop 27: eval_readkey_31(V__tty_fd,B) [] 

### Ranking functions of CR eval_readkey_31(V__tty_fd,B) 

#### Partial ranking functions of CR eval_readkey_31(V__tty_fd,B) 


### Resulting Chains:eval_readkey_31(V__tty_fd,B) 
* [27]


### Merging Chains  eval_readkey_31/2 into  External patterns of execution 
* [[27]] --> 1 


### Specialization of cost equations eval_readkey_bb0_in/2 
* CE 3 is refined into CE [37,38] 
* CE 4 is refined into CE [39] 


#### Refined cost equations eval_readkey_bb0_in/2 
* CE 37: eval_readkey_bb0_in(V__tty_fd,B) = 0+ eval_readkey_3(V__tty_fd,B):1
     [] 
* CE 38: eval_readkey_bb0_in(V__tty_fd,B) = 0+ eval_readkey_3(V__tty_fd,B):2
     [] 
* CE 39: eval_readkey_bb0_in(V__tty_fd,B) = 0+ eval_readkey_31(V__tty_fd,B):1
     [] 

### Cost equations --> "Loop" of eval_readkey_bb0_in/2 
* CEs [37,39] --> Loop 28 
* CEs [38] --> Loop 29 

#### Loops of eval_readkey_bb0_in/2 
* Loop 28: eval_readkey_bb0_in(V__tty_fd,B) [] 
* Loop 29: eval_readkey_bb0_in(V__tty_fd,B) [] 

### Ranking functions of CR eval_readkey_bb0_in(V__tty_fd,B) 

#### Partial ranking functions of CR eval_readkey_bb0_in(V__tty_fd,B) 


### Resulting Chains:eval_readkey_bb0_in(V__tty_fd,B) 
* [29]...
* [28]


### Merging Chains  eval_readkey_bb0_in/2 into  External patterns of execution 
* [[28]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_readkey_start/3 
* CE 2 is refined into CE [40,41] 


#### Refined cost equations eval_readkey_start/3 
* CE 40: eval_readkey_start(V_blocking,V__tty_fd,B) = 0+ eval_readkey_bb0_in(V__tty_fd,B):1
     [] 
* CE 41: eval_readkey_start(V_blocking,V__tty_fd,B) = 0+ eval_readkey_bb0_in(V__tty_fd,B):2
     [] 

### Cost equations --> "Loop" of eval_readkey_start/3 
* CEs [41] --> Loop 30 
* CEs [40] --> Loop 31 

#### Loops of eval_readkey_start/3 
* Loop 30: eval_readkey_start(V_blocking,V__tty_fd,B) [] 
* Loop 31: eval_readkey_start(V_blocking,V__tty_fd,B) [] 

### Ranking functions of CR eval_readkey_start(V_blocking,V__tty_fd,B) 

#### Partial ranking functions of CR eval_readkey_start(V_blocking,V__tty_fd,B) 


### Resulting Chains:eval_readkey_start(V_blocking,V__tty_fd,B) 
* [31]
* [30]...


### Merging Chains  eval_readkey_start/3 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_readkey_bb6_in(V__tty_fd,B,C) -> [eval_readkey_bb6_in(V__tty_fd',B',C')] 
1
#### Cost of phase [16]:eval_readkey_bb6_in(V__tty_fd,B,C) -> [eval_readkey_bb6_in(V__tty_fd',B',C')] 
1*it(16)+0
#### Cost of phase [16]:eval_readkey_bb6_in(V__tty_fd,B,C) -> [eval_readkey_bb6_in(V__tty_fd',B',C')] 
1*it(16)+0
#### Cost of phase [16]:eval_readkey_bb6_in(V__tty_fd,B,C) -> [eval_readkey_bb6_in(V__tty_fd',B',C')] 
1*it(16)+0
#### Cost of chains of eval_readkey_bb6_in(V__tty_fd,B,C):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [] 

* Chain [[16],15]: 1*it(16)+0
  with precondition: [B=2,V__tty_fd=C] 

* Chain [[16],14]: 1*it(16)+0
  with precondition: [B=3,V__tty_fd=C] 

* Chain [15]: 0
  with precondition: [B=2,C=V__tty_fd] 

* Chain [14]: 0
  with precondition: [B=3,C=V__tty_fd] 


#### Cost of chains of eval_readkey_24(V__tty_fd,B):
* Chain [17]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_readkey_bb6_in(D,A,B):
* Chain [19]: 0
  with precondition: [D=2] 

* Chain [18]: 0
  with precondition: [D=3] 


#### Cost of chains of eval_readkey_14(V__tty_fd,B):
* Chain [21]: 1*aux(3)+0
  with precondition: [] 

* Chain [20]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_readkey_10(V__tty_fd,B):
* Chain [23]: 1*aux(4)+0
  with precondition: [] 

* Chain [22]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_readkey_3(V__tty_fd,B):
* Chain [25]: 1*aux(5)+0
  with precondition: [] 

* Chain [24]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_readkey_33(V__tty_fd,B):
* Chain [26]: 0
  with precondition: [] 


#### Cost of chains of eval_readkey_31(V__tty_fd,B):
* Chain [27]: 0
  with precondition: [] 


#### Cost of chains of eval_readkey_bb0_in(V__tty_fd,B):
* Chain [29]...: 1*s(10)+1
  with precondition: [] 

* Chain [28]: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_readkey_start(V_blocking,V__tty_fd,B):
* Chain [31]: 1*s(12)+0
  with precondition: [] 

* Chain [30]...: 1*s(13)+1
  with precondition: [] 


Closed-form bounds of eval_readkey_start(V_blocking,V__tty_fd,B): 
-------------------------------------
* Chain [31] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [30]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_readkey_start(V_blocking,V__tty_fd,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 18 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 12 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 75 ms.

