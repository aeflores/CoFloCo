Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_2/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_67/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_7/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_70/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_73/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_76/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_78/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_81/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_84/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_87/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_main1_2/1]
1. non_recursive  : [eval_main1_1/1]
2. non_recursive  : [eval_main1_0/1]
3. non_recursive  : [eval_main1_7/1]
4. non_recursive  : [eval_main1_6/1]
5. non_recursive  : [eval_main1_5/1]
6. recursive  : [eval_main1_34/1,eval_main1_35/1,eval_main1_36/1,eval_main1_37/1,eval_main1_38/1,eval_main1_39/1,eval_main1_40/1,eval_main1_41/1,eval_main1_43/1,eval_main1_44/1,eval_main1_45/1,eval_main1_47/1,eval_main1_48/1,eval_main1_54/2,eval_main1_55/2,eval_main1_60/3,eval_main1_61/3,eval_main1_62/3,eval_main1_63/2,eval_main1_64/2,eval_main1_bb15_in/3,eval_main1_bb8_in/1]
7. non_recursive  : [eval_main1_67/1]
8. non_recursive  : [eval_main1_66/1]
9. non_recursive  : [eval_main1_65/1]
10. non_recursive  : [eval_main1_70/1]
11. non_recursive  : [eval_main1_69/1]
12. non_recursive  : [eval_main1_68/1]
13. non_recursive  : [eval_main1_73/1]
14. non_recursive  : [eval_main1_72/1]
15. non_recursive  : [eval_main1_71/1]
16. non_recursive  : [eval_main1_76/1]
17. non_recursive  : [eval_main1_75/1]
18. non_recursive  : [eval_main1_74/1]
19. non_recursive  : [eval_main1_78/1]
20. non_recursive  : [eval_main1_77/1]
21. non_recursive  : [loop_cont_eval_main1_bb8_in/2]
22. non_recursive  : [eval_main1_19/1]
23. non_recursive  : [eval_main1_18/1]
24. non_recursive  : [eval_main1_81/1]
25. non_recursive  : [eval_main1_80/1]
26. non_recursive  : [eval_main1_79/1]
27. non_recursive  : [eval_main1_16/1]
28. non_recursive  : [eval_main1_15/1]
29. non_recursive  : [eval_main1_14/1]
30. non_recursive  : [eval_main1_84/1]
31. non_recursive  : [eval_main1_83/1]
32. non_recursive  : [eval_main1_82/1]
33. non_recursive  : [eval_main1_12/1]
34. non_recursive  : [eval_main1_11/1]
35. non_recursive  : [eval_main1_10/1]
36. non_recursive  : [eval_main1_87/1]
37. non_recursive  : [eval_main1_86/1]
38. non_recursive  : [eval_main1_85/1]
39. non_recursive  : [eval_main1_9/1]
40. non_recursive  : [eval_main1_8/1]
41. non_recursive  : [eval_main1_4/1]
42. non_recursive  : [eval_main1_3/1]
43. non_recursive  : [eval_main1_bb0_in/1]
44. non_recursive  : [eval_main1_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_main1_bb8_in/1
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into loop_cont_eval_main1_bb8_in/2
22. SCC is partially evaluated into eval_main1_19/1
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_main1_16/1
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is partially evaluated into eval_main1_12/1
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is completely evaluated into other SCCs
39. SCC is partially evaluated into eval_main1_9/1
40. SCC is completely evaluated into other SCCs
41. SCC is partially evaluated into eval_main1_4/1
42. SCC is completely evaluated into other SCCs
43. SCC is partially evaluated into eval_main1_bb0_in/1
44. SCC is partially evaluated into eval_main1_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main1_bb8_in/1 
* CE 15 is refined into CE [25] 
* CE 14 is refined into CE [26] 
* CE 18 is refined into CE [27] 
* CE 17 is refined into CE [28] 
* CE 19 is refined into CE [29] 
* CE 16 is refined into CE [30] 


#### Refined cost equations eval_main1_bb8_in/1 
* CE 25: eval_main1_bb8_in(B) = 0
     [B=6] 
* CE 26: eval_main1_bb8_in(B) = 0
     [B=5] 
* CE 27: eval_main1_bb8_in(B) = 0
     [B=4] 
* CE 28: eval_main1_bb8_in(B) = 0
     [B=3] 
* CE 29: eval_main1_bb8_in(B) = 0
     [B=2] 
* CE 30: eval_main1_bb8_in(B) = 1+ eval_main1_bb8_in(B)
     [] 

### Cost equations --> "Loop" of eval_main1_bb8_in/1 
* CEs [30] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [26] --> Loop 21 
* CEs [27] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [29] --> Loop 24 

#### Loops of eval_main1_bb8_in/1 
* Loop 19: eval_main1_bb8_in(B)->  eval_main1_bb8_in(B)
                  [] 
* Loop 20: eval_main1_bb8_in(B) [B=6] 
* Loop 21: eval_main1_bb8_in(B) [B=5] 
* Loop 22: eval_main1_bb8_in(B) [B=4] 
* Loop 23: eval_main1_bb8_in(B) [B=3] 
* Loop 24: eval_main1_bb8_in(B) [B=2] 

### Ranking functions of CR eval_main1_bb8_in(B) 

#### Partial ranking functions of CR eval_main1_bb8_in(B) 


### Resulting Chains:eval_main1_bb8_in(B) 
* [[19]]...
* [[19],24]
* [[19],23]
* [[19],22]
* [[19],21]
* [[19],20]
* [24]
* [23]
* [22]
* [21]
* [20]


### Merging Chains  eval_main1_bb8_in/1 into  External patterns of execution 
* [[24],[24,[19]]] --> 1 
* [[23],[23,[19]]] --> 2 
* [[22],[22,[19]]] --> 3 
* [[21],[21,[19]]] --> 4 
* [[20],[20,[19]]] --> 5 
* [[[19]]] --> 6 


### Specialization of cost equations loop_cont_eval_main1_bb8_in/2 
* CE 24 is refined into CE [31] 
* CE 23 is refined into CE [32] 
* CE 22 is refined into CE [33] 
* CE 21 is refined into CE [34] 
* CE 20 is refined into CE [35] 


#### Refined cost equations loop_cont_eval_main1_bb8_in/2 
* CE 31: loop_cont_eval_main1_bb8_in(B,A) = 0
     [B=6] 
* CE 32: loop_cont_eval_main1_bb8_in(B,A) = 0
     [B=5] 
* CE 33: loop_cont_eval_main1_bb8_in(B,A) = 0
     [B=4] 
* CE 34: loop_cont_eval_main1_bb8_in(B,A) = 0
     [B=3] 
* CE 35: loop_cont_eval_main1_bb8_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_main1_bb8_in/2 
* CEs [31] --> Loop 25 
* CEs [32] --> Loop 26 
* CEs [33] --> Loop 27 
* CEs [34] --> Loop 28 
* CEs [35] --> Loop 29 

#### Loops of loop_cont_eval_main1_bb8_in/2 
* Loop 25: loop_cont_eval_main1_bb8_in(B,A) [B=6] 
* Loop 26: loop_cont_eval_main1_bb8_in(B,A) [B=5] 
* Loop 27: loop_cont_eval_main1_bb8_in(B,A) [B=4] 
* Loop 28: loop_cont_eval_main1_bb8_in(B,A) [B=3] 
* Loop 29: loop_cont_eval_main1_bb8_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_main1_bb8_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_main1_bb8_in(B,A) 


### Resulting Chains:loop_cont_eval_main1_bb8_in(B,A) 
* [29]
* [28]
* [27]
* [26]
* [25]


### Merging Chains  loop_cont_eval_main1_bb8_in/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[27]] --> 3 
* [[26]] --> 4 
* [[25]] --> 5 


### Specialization of cost equations eval_main1_19/1 
* CE 13 is refined into CE [36,37,38,39,40,41] 


#### Refined cost equations eval_main1_19/1 
* CE 36: eval_main1_19(B) = 1+ eval_main1_bb8_in(C):1+ loop_cont_eval_main1_bb8_in(D,B):1
     [D=2,C=2] 
* CE 37: eval_main1_19(B) = 1+ eval_main1_bb8_in(C):2+ loop_cont_eval_main1_bb8_in(D,B):2
     [D=3,C=3] 
* CE 38: eval_main1_19(B) = 1+ eval_main1_bb8_in(C):3+ loop_cont_eval_main1_bb8_in(D,B):3
     [D=4,C=4] 
* CE 39: eval_main1_19(B) = 1+ eval_main1_bb8_in(C):4+ loop_cont_eval_main1_bb8_in(D,B):4
     [D=5,C=5] 
* CE 40: eval_main1_19(B) = 1+ eval_main1_bb8_in(C):5+ loop_cont_eval_main1_bb8_in(D,B):5
     [D=6,C=6] 
* CE 41: eval_main1_19(B) = 1+ eval_main1_bb8_in(C):6
     [] 

### Cost equations --> "Loop" of eval_main1_19/1 
* CEs [41] --> Loop 30 
* CEs [36,37,38,39,40] --> Loop 31 

#### Loops of eval_main1_19/1 
* Loop 30: eval_main1_19(B) [] 
* Loop 31: eval_main1_19(B) [] 

### Ranking functions of CR eval_main1_19(B) 

#### Partial ranking functions of CR eval_main1_19(B) 


### Resulting Chains:eval_main1_19(B) 
* [31]
* [30]...


### Merging Chains  eval_main1_19/1 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations eval_main1_16/1 
* CE 11 is refined into CE [42,43] 
* CE 12 is refined into CE [44] 


#### Refined cost equations eval_main1_16/1 
* CE 42: eval_main1_16(B) = 0+ eval_main1_19(B):1
     [] 
* CE 43: eval_main1_16(B) = 0+ eval_main1_19(B):2
     [] 
* CE 44: eval_main1_16(B) = 0
     [] 

### Cost equations --> "Loop" of eval_main1_16/1 
* CEs [42,44] --> Loop 32 
* CEs [43] --> Loop 33 

#### Loops of eval_main1_16/1 
* Loop 32: eval_main1_16(B) [] 
* Loop 33: eval_main1_16(B) [] 

### Ranking functions of CR eval_main1_16(B) 

#### Partial ranking functions of CR eval_main1_16(B) 


### Resulting Chains:eval_main1_16(B) 
* [33]...
* [32]


### Merging Chains  eval_main1_16/1 into  External patterns of execution 
* [[32]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_main1_12/1 
* CE 9 is refined into CE [45,46] 
* CE 10 is refined into CE [47] 


#### Refined cost equations eval_main1_12/1 
* CE 45: eval_main1_12(B) = 0+ eval_main1_16(B):1
     [] 
* CE 46: eval_main1_12(B) = 0+ eval_main1_16(B):2
     [] 
* CE 47: eval_main1_12(B) = 0
     [] 

### Cost equations --> "Loop" of eval_main1_12/1 
* CEs [45,47] --> Loop 34 
* CEs [46] --> Loop 35 

#### Loops of eval_main1_12/1 
* Loop 34: eval_main1_12(B) [] 
* Loop 35: eval_main1_12(B) [] 

### Ranking functions of CR eval_main1_12(B) 

#### Partial ranking functions of CR eval_main1_12(B) 


### Resulting Chains:eval_main1_12(B) 
* [35]...
* [34]


### Merging Chains  eval_main1_12/1 into  External patterns of execution 
* [[34]] --> 1 
* [[35]] --> 2 


### Specialization of cost equations eval_main1_9/1 
* CE 7 is refined into CE [48,49] 
* CE 8 is refined into CE [50] 


#### Refined cost equations eval_main1_9/1 
* CE 48: eval_main1_9(B) = 0+ eval_main1_12(B):1
     [] 
* CE 49: eval_main1_9(B) = 0+ eval_main1_12(B):2
     [] 
* CE 50: eval_main1_9(B) = 0
     [] 

### Cost equations --> "Loop" of eval_main1_9/1 
* CEs [48,50] --> Loop 36 
* CEs [49] --> Loop 37 

#### Loops of eval_main1_9/1 
* Loop 36: eval_main1_9(B) [] 
* Loop 37: eval_main1_9(B) [] 

### Ranking functions of CR eval_main1_9(B) 

#### Partial ranking functions of CR eval_main1_9(B) 


### Resulting Chains:eval_main1_9(B) 
* [37]...
* [36]


### Merging Chains  eval_main1_9/1 into  External patterns of execution 
* [[36]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_main1_4/1 
* CE 5 is refined into CE [51] 
* CE 6 is refined into CE [52,53] 


#### Refined cost equations eval_main1_4/1 
* CE 51: eval_main1_4(B) = 0
     [] 
* CE 52: eval_main1_4(B) = 0+ eval_main1_9(B):1
     [] 
* CE 53: eval_main1_4(B) = 0+ eval_main1_9(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_4/1 
* CEs [53] --> Loop 38 
* CEs [51,52] --> Loop 39 

#### Loops of eval_main1_4/1 
* Loop 38: eval_main1_4(B) [] 
* Loop 39: eval_main1_4(B) [] 

### Ranking functions of CR eval_main1_4(B) 

#### Partial ranking functions of CR eval_main1_4(B) 


### Resulting Chains:eval_main1_4(B) 
* [39]
* [38]...


### Merging Chains  eval_main1_4/1 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations eval_main1_bb0_in/1 
* CE 3 is refined into CE [54] 
* CE 4 is refined into CE [55,56] 


#### Refined cost equations eval_main1_bb0_in/1 
* CE 54: eval_main1_bb0_in(B) = 0
     [] 
* CE 55: eval_main1_bb0_in(B) = 0+ eval_main1_4(B):1
     [] 
* CE 56: eval_main1_bb0_in(B) = 0+ eval_main1_4(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_bb0_in/1 
* CEs [56] --> Loop 40 
* CEs [54,55] --> Loop 41 

#### Loops of eval_main1_bb0_in/1 
* Loop 40: eval_main1_bb0_in(B) [] 
* Loop 41: eval_main1_bb0_in(B) [] 

### Ranking functions of CR eval_main1_bb0_in(B) 

#### Partial ranking functions of CR eval_main1_bb0_in(B) 


### Resulting Chains:eval_main1_bb0_in(B) 
* [41]
* [40]...


### Merging Chains  eval_main1_bb0_in/1 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations eval_main1_start/3 
* CE 2 is refined into CE [57,58] 


#### Refined cost equations eval_main1_start/3 
* CE 57: eval_main1_start(V_argc,V_print,B) = 0+ eval_main1_bb0_in(B):1
     [] 
* CE 58: eval_main1_start(V_argc,V_print,B) = 0+ eval_main1_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_main1_start/3 
* CEs [58] --> Loop 42 
* CEs [57] --> Loop 43 

#### Loops of eval_main1_start/3 
* Loop 42: eval_main1_start(V_argc,V_print,B) [] 
* Loop 43: eval_main1_start(V_argc,V_print,B) [] 

### Ranking functions of CR eval_main1_start(V_argc,V_print,B) 

#### Partial ranking functions of CR eval_main1_start(V_argc,V_print,B) 


### Resulting Chains:eval_main1_start(V_argc,V_print,B) 
* [43]
* [42]...


### Merging Chains  eval_main1_start/3 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [19] 

 * loop 19:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1
#### Cost of phase [19]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(19)+0
#### Cost of phase [19]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(19)+0
#### Cost of phase [19]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(19)+0
#### Cost of phase [19]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(19)+0
#### Cost of phase [19]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(19)+0
#### Cost of phase [19]:eval_main1_bb8_in(B) -> [eval_main1_bb8_in(B')] 
1*it(19)+0
#### Cost of chains of eval_main1_bb8_in(B):
* Chain [[19]]...: 1*it(19)+0
  with precondition: [] 

* Chain [[19],24]: 1*it(19)+0
  with precondition: [B=2] 

* Chain [[19],23]: 1*it(19)+0
  with precondition: [B=3] 

* Chain [[19],22]: 1*it(19)+0
  with precondition: [B=4] 

* Chain [[19],21]: 1*it(19)+0
  with precondition: [B=5] 

* Chain [[19],20]: 1*it(19)+0
  with precondition: [B=6] 

* Chain [24]: 0
  with precondition: [B=2] 

* Chain [23]: 0
  with precondition: [B=3] 

* Chain [22]: 0
  with precondition: [B=4] 

* Chain [21]: 0
  with precondition: [B=5] 

* Chain [20]: 0
  with precondition: [B=6] 


#### Cost of chains of loop_cont_eval_main1_bb8_in(B,A):
* Chain [29]: 0
  with precondition: [B=2] 

* Chain [28]: 0
  with precondition: [B=3] 

* Chain [27]: 0
  with precondition: [B=4] 

* Chain [26]: 0
  with precondition: [B=5] 

* Chain [25]: 0
  with precondition: [B=6] 


#### Cost of chains of eval_main1_19(B):
* Chain [31]: 1*aux(6)+0
  with precondition: [] 

* Chain [30]...: 1*s(11)+1
  with precondition: [] 


#### Cost of chains of eval_main1_16(B):
* Chain [33]...: 1*s(12)+1
  with precondition: [] 

* Chain [32]: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_main1_12(B):
* Chain [35]...: 1*s(14)+1
  with precondition: [] 

* Chain [34]: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_main1_9(B):
* Chain [37]...: 1*s(16)+1
  with precondition: [] 

* Chain [36]: 1*aux(9)+0
  with precondition: [] 


#### Cost of chains of eval_main1_4(B):
* Chain [39]: 1*aux(10)+0
  with precondition: [] 

* Chain [38]...: 1*s(19)+1
  with precondition: [] 


#### Cost of chains of eval_main1_bb0_in(B):
* Chain [41]: 1*aux(11)+0
  with precondition: [] 

* Chain [40]...: 1*s(21)+1
  with precondition: [] 


#### Cost of chains of eval_main1_start(V_argc,V_print,B):
* Chain [43]: 1*s(22)+0
  with precondition: [] 

* Chain [42]...: 1*s(23)+1
  with precondition: [] 


Closed-form bounds of eval_main1_start(V_argc,V_print,B): 
-------------------------------------
* Chain [43] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [42]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_main1_start(V_argc,V_print,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 53 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 16 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 57 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 41 ms.
   - Equation cost structures 19 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 259 ms.

