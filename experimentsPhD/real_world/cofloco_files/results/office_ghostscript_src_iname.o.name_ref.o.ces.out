Warning: Ignored call to eval_name_ref_stop/1 in equation eval_name_ref_bb23_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_name_ref_bb5_in/6]
1. recursive  : [eval_name_ref_51/5,eval_name_ref_52/5,eval_name_ref_bb11_in/5,eval_name_ref_bb8_in/5]
2. non_recursive  : [eval_name_ref_bb23_in/1]
3. non_recursive  : [eval_name_ref_bb22_in/1]
4. non_recursive  : [eval_name_ref_bb21_in/1]
5. non_recursive  : [eval_name_ref_71/1]
6. non_recursive  : [eval_name_ref_70/2]
7. non_recursive  : [eval_name_ref_68/2]
8. non_recursive  : [eval_name_ref_67/2]
9. non_recursive  : [eval_name_ref_bb17_in/2]
10. non_recursive  : [eval_name_ref_59/2]
11. non_recursive  : [eval_name_ref_58/2]
12. non_recursive  : [loop_cont_eval_name_ref_bb8_in/3]
13. non_recursive  : [loop_cont_eval_name_ref_bb5_in/5]
14. non_recursive  : [eval_name_ref_bb4_in/2]
15. non_recursive  : [eval_name_ref_NewDefault_in/2]
16. non_recursive  : [eval_name_ref_bb0_in/2]
17. non_recursive  : [eval_name_ref_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_name_ref_bb5_in/6
1. SCC is partially evaluated into eval_name_ref_bb8_in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_name_ref_68/2
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_name_ref_bb17_in/2
10. SCC is partially evaluated into eval_name_ref_59/2
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into loop_cont_eval_name_ref_bb8_in/3
13. SCC is partially evaluated into loop_cont_eval_name_ref_bb5_in/5
14. SCC is partially evaluated into eval_name_ref_bb4_in/2
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_name_ref_bb0_in/2
17. SCC is partially evaluated into eval_name_ref_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_name_ref_bb5_in/6 
* CE 7 is refined into CE [25] 
* CE 6 is refined into CE [26] 


#### Refined cost equations eval_name_ref_bb5_in/6 
* CE 25: eval_name_ref_bb5_in(A,B,C,A,A,D) = 0
     [A>=B,1>=B,C=6] 
* CE 26: eval_name_ref_bb5_in(V_size,V_n_0,B,C,D,E) = 1+ eval_name_ref_bb5_in(V_size,F,B,C,D,E)
     [V_size>=V_n_0,V_n_0>=2,V_n_0=F+1] 

### Cost equations --> "Loop" of eval_name_ref_bb5_in/6 
* CEs [26] --> Loop 21 
* CEs [25] --> Loop 22 

#### Loops of eval_name_ref_bb5_in/6 
* Loop 21: eval_name_ref_bb5_in(V_size,V_n_0,B,C,D,E)->  eval_name_ref_bb5_in(V_size,V_n_0',B,C,D,E)
                  [V_size>=V_n_0,V_n_0>=2,V_n_0=V_n_0'+1] 
* Loop 22: eval_name_ref_bb5_in(A,B,C,A,A,D) [A>=B,1>=B,C=6] 

### Ranking functions of CR eval_name_ref_bb5_in(V_size,V_n_0,B,C,D,E) 
* RF of phase [21]: [V_n_0-1]

#### Partial ranking functions of CR eval_name_ref_bb5_in(V_size,V_n_0,B,C,D,E) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_n_0-1


### Resulting Chains:eval_name_ref_bb5_in(V_size,V_n_0,B,C,D,E) 
* [[21],22]
* [22]


### Merging Chains  eval_name_ref_bb5_in/6 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[21]]] --> 2 


### Specialization of cost equations eval_name_ref_bb8_in/5 
* CE 9 is refined into CE [27] 
* CE 10 is refined into CE [28] 
* CE 15 is refined into CE [29] 
* CE 14 is refined into CE [30] 
* CE 13 is refined into CE [31] 
* CE 11 is refined into CE [32] 
* CE 12 is refined into CE [33] 


#### Refined cost equations eval_name_ref_bb8_in/5 
* CE 27: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) = 0
     [V_nidx_0>=1,B=2] 
* CE 28: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) = 0
     [0>=V_nidx_0+1,B=2] 
* CE 29: eval_name_ref_bb8_in(A,B,C,D,A) = 0
     [D=5,C=0] 
* CE 30: eval_name_ref_bb8_in(A,B,C,D,A) = 0
     [D=4,C=0] 
* CE 31: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) = 0
     [B=3,V_nidx_0=0] 
* CE 32: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) = 1+ eval_name_ref_bb8_in(V_size,V_58,D,B,C)
     [V_nidx_0>=1] 
* CE 33: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) = 1+ eval_name_ref_bb8_in(V_size,V_58,D,B,C)
     [0>=V_nidx_0+1] 

### Cost equations --> "Loop" of eval_name_ref_bb8_in/5 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [30] --> Loop 28 
* CEs [31] --> Loop 29 

#### Loops of eval_name_ref_bb8_in/5 
* Loop 23: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C)->  eval_name_ref_bb8_in(V_size,V_58,V_nidx_0',B,C)
                  [V_nidx_0>=1] 
* Loop 24: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C)->  eval_name_ref_bb8_in(V_size,V_58,V_nidx_0',B,C)
                  [0>=V_nidx_0+1] 
* Loop 25: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) [V_nidx_0>=1,B=2] 
* Loop 26: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) [0>=V_nidx_0+1,B=2] 
* Loop 27: eval_name_ref_bb8_in(A,B,C,D,A) [D=5,C=0] 
* Loop 28: eval_name_ref_bb8_in(A,B,C,D,A) [D=4,C=0] 
* Loop 29: eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) [B=3,V_nidx_0=0] 

### Ranking functions of CR eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) 

#### Partial ranking functions of CR eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) 


### Resulting Chains:eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) 
* [[23,24]]...
* [[23,24],29]
* [[23,24],28]
* [[23,24],27]
* [[23,24],26]
* [[23,24],25]
* [29]
* [28]
* [27]
* [26]
* [25]


### Merging Chains  eval_name_ref_bb8_in/5 into  External patterns of execution 
* [[29],[29,[23,24]]] --> 1 
* [[28],[28,[23,24]]] --> 2 
* [[27],[27,[23,24]]] --> 3 
* [[25],[26],[25,[23,24]],[26,[23,24]]] --> 4 
* [[[23,24]]] --> 5 


### Specialization of cost equations eval_name_ref_68/2 
* CE 24 is refined into CE [34] 


#### Refined cost equations eval_name_ref_68/2 
* CE 34: eval_name_ref_68(V_size,B) = 0
     [] 

### Cost equations --> "Loop" of eval_name_ref_68/2 
* CEs [34] --> Loop 30 

#### Loops of eval_name_ref_68/2 
* Loop 30: eval_name_ref_68(V_size,B) [] 

### Ranking functions of CR eval_name_ref_68(V_size,B) 

#### Partial ranking functions of CR eval_name_ref_68(V_size,B) 


### Resulting Chains:eval_name_ref_68(V_size,B) 
* [30]


### Merging Chains  eval_name_ref_68/2 into  External patterns of execution 
* [[30]] --> 1 


### Specialization of cost equations eval_name_ref_bb17_in/2 
* CE 22 is refined into CE [35] 
* CE 23 is refined into CE [36] 


#### Refined cost equations eval_name_ref_bb17_in/2 
* CE 35: eval_name_ref_bb17_in(V_size,B) = 0+ eval_name_ref_68(V_size,B):1
     [] 
* CE 36: eval_name_ref_bb17_in(V_size,B) = 0
     [] 

### Cost equations --> "Loop" of eval_name_ref_bb17_in/2 
* CEs [35,36] --> Loop 31 

#### Loops of eval_name_ref_bb17_in/2 
* Loop 31: eval_name_ref_bb17_in(V_size,B) [] 

### Ranking functions of CR eval_name_ref_bb17_in(V_size,B) 

#### Partial ranking functions of CR eval_name_ref_bb17_in(V_size,B) 


### Resulting Chains:eval_name_ref_bb17_in(V_size,B) 
* [31]


### Merging Chains  eval_name_ref_bb17_in/2 into  External patterns of execution 
* [[31]] --> 1 


### Specialization of cost equations eval_name_ref_59/2 
* CE 20 is refined into CE [37] 
* CE 21 is refined into CE [38] 


#### Refined cost equations eval_name_ref_59/2 
* CE 37: eval_name_ref_59(V_size,B) = 0
     [] 
* CE 38: eval_name_ref_59(V_size,B) = 0+ eval_name_ref_bb17_in(V_size,B):1
     [] 

### Cost equations --> "Loop" of eval_name_ref_59/2 
* CEs [37,38] --> Loop 32 

#### Loops of eval_name_ref_59/2 
* Loop 32: eval_name_ref_59(V_size,B) [] 

### Ranking functions of CR eval_name_ref_59(V_size,B) 

#### Partial ranking functions of CR eval_name_ref_59(V_size,B) 


### Resulting Chains:eval_name_ref_59(V_size,B) 
* [32]


### Merging Chains  eval_name_ref_59/2 into  External patterns of execution 
* [[32]] --> 1 


### Specialization of cost equations loop_cont_eval_name_ref_bb8_in/3 
* CE 19 is refined into CE [39] 
* CE 18 is refined into CE [40] 
* CE 17 is refined into CE [41] 
* CE 16 is refined into CE [42] 


#### Refined cost equations loop_cont_eval_name_ref_bb8_in/3 
* CE 39: loop_cont_eval_name_ref_bb8_in(C,A,B) = 0+ eval_name_ref_bb17_in(A,B):1
     [C=5] 
* CE 40: loop_cont_eval_name_ref_bb8_in(C,A,B) = 0+ eval_name_ref_59(A,B):1
     [C=4] 
* CE 41: loop_cont_eval_name_ref_bb8_in(C,A,B) = 0
     [C=3] 
* CE 42: loop_cont_eval_name_ref_bb8_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_name_ref_bb8_in/3 
* CEs [39] --> Loop 33 
* CEs [40] --> Loop 34 
* CEs [41] --> Loop 35 
* CEs [42] --> Loop 36 

#### Loops of loop_cont_eval_name_ref_bb8_in/3 
* Loop 33: loop_cont_eval_name_ref_bb8_in(C,A,B) [C=5] 
* Loop 34: loop_cont_eval_name_ref_bb8_in(C,A,B) [C=4] 
* Loop 35: loop_cont_eval_name_ref_bb8_in(C,A,B) [C=3] 
* Loop 36: loop_cont_eval_name_ref_bb8_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_name_ref_bb8_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_name_ref_bb8_in(C,A,B) 


### Resulting Chains:loop_cont_eval_name_ref_bb8_in(C,A,B) 
* [36]
* [35]
* [34]
* [33]


### Merging Chains  loop_cont_eval_name_ref_bb8_in/3 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 
* [[34]] --> 3 
* [[33]] --> 4 


### Specialization of cost equations loop_cont_eval_name_ref_bb5_in/5 
* CE 8 is refined into CE [43,44,45,46,47] 


#### Refined cost equations loop_cont_eval_name_ref_bb5_in/5 
* CE 43: loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) = 1+ eval_name_ref_bb8_in(A,B,C,I,J):1+ loop_cont_eval_name_ref_bb8_in(K,J,D):2
     [K=3,I=3,H=6] 
* CE 44: loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) = 1+ eval_name_ref_bb8_in(A,B,C,I,A):2+ loop_cont_eval_name_ref_bb8_in(J,A,D):3
     [J=4,I=4,H=6] 
* CE 45: loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) = 1+ eval_name_ref_bb8_in(A,B,C,I,A):3+ loop_cont_eval_name_ref_bb8_in(J,A,D):4
     [J=5,I=5,H=6] 
* CE 46: loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) = 1+ eval_name_ref_bb8_in(A,B,C,I,J):4+ loop_cont_eval_name_ref_bb8_in(K,J,D):1
     [K=2,I=2,H=6] 
* CE 47: loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) = 1+ eval_name_ref_bb8_in(A,B,C,I,J):5
     [H=6] 

### Cost equations --> "Loop" of loop_cont_eval_name_ref_bb5_in/5 
* CEs [47] --> Loop 37 
* CEs [43,44,45,46] --> Loop 38 

#### Loops of loop_cont_eval_name_ref_bb5_in/5 
* Loop 37: loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) [H=6] 
* Loop 38: loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) [H=6] 

### Ranking functions of CR loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) 


### Resulting Chains:loop_cont_eval_name_ref_bb5_in(H,A,B,C,D) 
* [38]
* [37]...


### Merging Chains  loop_cont_eval_name_ref_bb5_in/5 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_name_ref_bb4_in/2 
* CE 5 is refined into CE [48,49,50,51] 


#### Refined cost equations eval_name_ref_bb4_in/2 
* CE 48: eval_name_ref_bb4_in(V_size,B) = 1+ eval_name_ref_bb5_in(V_size,V_size,C,V_size,V_size,D):1+ loop_cont_eval_name_ref_bb5_in(E,V_size,V_size,D,B):1
     [1>=V_size,E=6,C=6] 
* CE 49: eval_name_ref_bb4_in(V_size,B) = 1+ eval_name_ref_bb5_in(V_size,V_size,C,V_size,V_size,D):1+ loop_cont_eval_name_ref_bb5_in(E,V_size,V_size,D,B):2
     [1>=V_size,E=6,C=6] 
* CE 50: eval_name_ref_bb4_in(V_size,B) = 1+ eval_name_ref_bb5_in(V_size,V_size,C,V_size,V_size,D):2+ loop_cont_eval_name_ref_bb5_in(E,V_size,V_size,D,B):1
     [V_size>=2,E=6,C=6] 
* CE 51: eval_name_ref_bb4_in(V_size,B) = 1+ eval_name_ref_bb5_in(V_size,V_size,C,V_size,V_size,D):2+ loop_cont_eval_name_ref_bb5_in(E,V_size,V_size,D,B):2
     [V_size>=2,E=6,C=6] 

### Cost equations --> "Loop" of eval_name_ref_bb4_in/2 
* CEs [51] --> Loop 39 
* CEs [49] --> Loop 40 
* CEs [50] --> Loop 41 
* CEs [48] --> Loop 42 

#### Loops of eval_name_ref_bb4_in/2 
* Loop 39: eval_name_ref_bb4_in(V_size,B) [V_size>=2] 
* Loop 40: eval_name_ref_bb4_in(V_size,B) [1>=V_size] 
* Loop 41: eval_name_ref_bb4_in(V_size,B) [V_size>=2] 
* Loop 42: eval_name_ref_bb4_in(V_size,B) [1>=V_size] 

### Ranking functions of CR eval_name_ref_bb4_in(V_size,B) 

#### Partial ranking functions of CR eval_name_ref_bb4_in(V_size,B) 


### Resulting Chains:eval_name_ref_bb4_in(V_size,B) 
* [42]
* [41]
* [40]...
* [39]...


### Merging Chains  eval_name_ref_bb4_in/2 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 
* [[40]] --> 3 
* [[39]] --> 4 


### Specialization of cost equations eval_name_ref_bb0_in/2 
* CE 3 is refined into CE [52] 
* CE 4 is refined into CE [53,54,55,56] 


#### Refined cost equations eval_name_ref_bb0_in/2 
* CE 52: eval_name_ref_bb0_in(V_size,B) = 0
     [] 
* CE 53: eval_name_ref_bb0_in(V_size,B) = 0+ eval_name_ref_bb4_in(V_size,B):1
     [1>=V_size] 
* CE 54: eval_name_ref_bb0_in(V_size,B) = 0+ eval_name_ref_bb4_in(V_size,B):2
     [V_size>=2] 
* CE 55: eval_name_ref_bb0_in(V_size,B) = 0+ eval_name_ref_bb4_in(V_size,B):3
     [1>=V_size] 
* CE 56: eval_name_ref_bb0_in(V_size,B) = 0+ eval_name_ref_bb4_in(V_size,B):4
     [V_size>=2] 

### Cost equations --> "Loop" of eval_name_ref_bb0_in/2 
* CEs [56] --> Loop 43 
* CEs [55] --> Loop 44 
* CEs [52,53,54] --> Loop 45 

#### Loops of eval_name_ref_bb0_in/2 
* Loop 43: eval_name_ref_bb0_in(V_size,B) [V_size>=2] 
* Loop 44: eval_name_ref_bb0_in(V_size,B) [1>=V_size] 
* Loop 45: eval_name_ref_bb0_in(V_size,B) [] 

### Ranking functions of CR eval_name_ref_bb0_in(V_size,B) 

#### Partial ranking functions of CR eval_name_ref_bb0_in(V_size,B) 


### Resulting Chains:eval_name_ref_bb0_in(V_size,B) 
* [45]
* [44]...
* [43]...


### Merging Chains  eval_name_ref_bb0_in/2 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 
* [[43]] --> 3 


### Specialization of cost equations eval_name_ref_start/3 
* CE 2 is refined into CE [57,58,59] 


#### Refined cost equations eval_name_ref_start/3 
* CE 57: eval_name_ref_start(V_size,V_enterflag,B) = 0+ eval_name_ref_bb0_in(V_size,B):1
     [] 
* CE 58: eval_name_ref_start(V_size,V_enterflag,B) = 0+ eval_name_ref_bb0_in(V_size,B):2
     [1>=V_size] 
* CE 59: eval_name_ref_start(V_size,V_enterflag,B) = 0+ eval_name_ref_bb0_in(V_size,B):3
     [V_size>=2] 

### Cost equations --> "Loop" of eval_name_ref_start/3 
* CEs [59] --> Loop 46 
* CEs [58] --> Loop 47 
* CEs [57] --> Loop 48 

#### Loops of eval_name_ref_start/3 
* Loop 46: eval_name_ref_start(V_size,V_enterflag,B) [V_size>=2] 
* Loop 47: eval_name_ref_start(V_size,V_enterflag,B) [1>=V_size] 
* Loop 48: eval_name_ref_start(V_size,V_enterflag,B) [] 

### Ranking functions of CR eval_name_ref_start(V_size,V_enterflag,B) 

#### Partial ranking functions of CR eval_name_ref_start(V_size,V_enterflag,B) 


### Resulting Chains:eval_name_ref_start(V_size,V_enterflag,B) 
* [48]
* [47]...
* [46]...


### Merging Chains  eval_name_ref_start/3 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 
* [[46]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [21] 

 * loop 21:eval_name_ref_bb5_in(V_size,V_n_0,B,C,D,E) -> [eval_name_ref_bb5_in(V_size',V_n_0',B',C',D',E')] 
1
#### Cost of phase [21]:eval_name_ref_bb5_in(V_size,V_n_0,B,C,D,E) -> [eval_name_ref_bb5_in(V_size',V_n_0',B',C',D',E')] 
1*it(21)+0
  Such that:it(21) =< V_n_0
it(21) =< V_n_0-V_n_0'

#### Cost of chains of eval_name_ref_bb5_in(V_size,V_n_0,B,C,D,E):
* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V_n_0

  with precondition: [B=6,V_size=C,V_size=D,V_n_0>=2,V_size>=V_n_0] 

* Chain [22]: 0
  with precondition: [B=6,V_size=C,V_size=D,1>=V_n_0,V_size>=V_n_0] 


#### Cost of loops [23,24] 

 * loop 23:eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) -> [eval_name_ref_bb8_in(V_size',V_58',V_nidx_0',B',C')] 
1
 * loop 24:eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) -> [eval_name_ref_bb8_in(V_size',V_58',V_nidx_0',B',C')] 
1
#### Cost of phase [23,24]:eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) -> [eval_name_ref_bb8_in(V_size',V_58',V_nidx_0',B',C')] 
2*it(23)+0
#### Cost of phase [23,24]:eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) -> [eval_name_ref_bb8_in(V_size',V_58',V_nidx_0',B',C')] 
2*it(23)+0
#### Cost of phase [23,24]:eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) -> [eval_name_ref_bb8_in(V_size',V_58',V_nidx_0',B',C')] 
2*it(23)+0
#### Cost of phase [23,24]:eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) -> [eval_name_ref_bb8_in(V_size',V_58',V_nidx_0',B',C')] 
2*it(23)+0
#### Cost of phase [23,24]:eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) -> [eval_name_ref_bb8_in(V_size',V_58',V_nidx_0',B',C')] 
2*it(23)+0
#### Cost of phase [23,24]:eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C) -> [eval_name_ref_bb8_in(V_size',V_58',V_nidx_0',B',C')] 
2*it(23)+0
#### Cost of chains of eval_name_ref_bb8_in(V_size,V_58,V_nidx_0,B,C):
* Chain [[23,24]]...: 2*it(23)+0
  with precondition: [] 

* Chain [[23,24],29]: 2*it(23)+0
  with precondition: [B=3] 

* Chain [[23,24],28]: 2*it(23)+0
  with precondition: [B=4,V_size=C] 

* Chain [[23,24],27]: 2*it(23)+0
  with precondition: [B=5,V_size=C] 

* Chain [[23,24],26]: 2*it(23)+0
  with precondition: [B=2] 

* Chain [[23,24],25]: 2*it(23)+0
  with precondition: [B=2] 

* Chain [29]: 0
  with precondition: [V_nidx_0=0,B=3] 

* Chain [28]: 0
  with precondition: [V_nidx_0=0,B=4,C=V_size] 

* Chain [27]: 0
  with precondition: [V_nidx_0=0,B=5,C=V_size] 

* Chain [26]: 0
  with precondition: [B=2,0>=V_nidx_0+1] 

* Chain [25]: 0
  with precondition: [B=2,V_nidx_0>=1] 


#### Cost of chains of eval_name_ref_68(V_size,B):
* Chain [30]: 0
  with precondition: [] 


#### Cost of chains of eval_name_ref_bb17_in(V_size,B):
* Chain [31]: 0
  with precondition: [] 


#### Cost of chains of eval_name_ref_59(V_size,B):
* Chain [32]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_name_ref_bb8_in(C,A,B):
* Chain [36]: 0
  with precondition: [C=2] 

* Chain [35]: 0
  with precondition: [C=3] 

* Chain [34]: 0
  with precondition: [C=4] 

* Chain [33]: 0
  with precondition: [C=5] 


#### Cost of chains of loop_cont_eval_name_ref_bb5_in(H,A,B,C,D):
* Chain [38]: 1*aux(5)+0
  with precondition: [H=6] 

* Chain [37]...: 2*s(10)+1
  with precondition: [H=6] 


#### Cost of chains of eval_name_ref_bb4_in(V_size,B):
* Chain [42]: 1*s(11)+1
  with precondition: [1>=V_size] 

* Chain [41]: 1*s(12)+1*s(13)+1
  Such that:s(12) =< V_size

  with precondition: [V_size>=2] 

* Chain [40]...: 2*s(14)+2
  with precondition: [1>=V_size] 

* Chain [39]...: 1*s(15)+2*s(16)+2
  Such that:s(15) =< V_size

  with precondition: [V_size>=2] 


#### Cost of chains of eval_name_ref_bb0_in(V_size,B):
* Chain [45]: 2*s(17)+1*s(18)+1
  Such that:s(18) =< V_size

  with precondition: [] 

* Chain [44]...: 2*s(20)+2
  with precondition: [1>=V_size] 

* Chain [43]...: 1*s(21)+2*s(22)+2
  Such that:s(21) =< V_size

  with precondition: [V_size>=2] 


#### Cost of chains of eval_name_ref_start(V_size,V_enterflag,B):
* Chain [48]: 1*s(23)+2*s(24)+1
  Such that:s(23) =< V_size

  with precondition: [] 

* Chain [47]...: 2*s(25)+2
  with precondition: [1>=V_size] 

* Chain [46]...: 1*s(26)+2*s(27)+2
  Such that:s(26) =< V_size

  with precondition: [V_size>=2] 


Closed-form bounds of eval_name_ref_start(V_size,V_enterflag,B): 
-------------------------------------
* Chain [48] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [47]... with precondition: [1>=V_size] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [46]... with precondition: [V_size>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_name_ref_start(V_size,V_enterflag,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 54 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 36 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 168 ms.

