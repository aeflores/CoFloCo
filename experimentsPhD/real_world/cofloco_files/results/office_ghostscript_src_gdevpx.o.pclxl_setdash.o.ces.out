Warning: Ignored call to eval_pclxl_setdash_stop/1 in equation eval_pclxl_setdash_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_pclxl_setdash_bb9_in/1]
1. non_recursive  : [eval_pclxl_setdash_18/1]
2. non_recursive  : [eval_pclxl_setdash_17/1]
3. non_recursive  : [eval_pclxl_setdash_bb8_in/1]
4. non_recursive  : [eval_pclxl_setdash_3/1]
5. non_recursive  : [eval_pclxl_setdash_2/1]
6. recursive  : [eval_pclxl_setdash_10/3,eval_pclxl_setdash_9/3,eval_pclxl_setdash_bb4_in/3]
7. non_recursive  : [eval_pclxl_setdash_16/1]
8. non_recursive  : [eval_pclxl_setdash_15/1]
9. non_recursive  : [eval_pclxl_setdash_14/1]
10. non_recursive  : [eval_pclxl_setdash_13/1]
11. non_recursive  : [eval_pclxl_setdash_12/1]
12. non_recursive  : [loop_cont_eval_pclxl_setdash_bb4_in/2]
13. non_recursive  : [eval_pclxl_setdash_7/2]
14. non_recursive  : [eval_pclxl_setdash_6/3]
15. non_recursive  : [eval_pclxl_setdash_5/2]
16. non_recursive  : [eval_pclxl_setdash_4/2]
17. non_recursive  : [eval_pclxl_setdash_1/2]
18. non_recursive  : [eval_pclxl_setdash_0/2]
19. non_recursive  : [eval_pclxl_setdash_bb0_in/2]
20. non_recursive  : [eval_pclxl_setdash_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_pclxl_setdash_bb4_in/3
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_pclxl_setdash_13/1
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_pclxl_setdash_7/2
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_pclxl_setdash_1/2
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_pclxl_setdash_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_pclxl_setdash_bb4_in/3 
* CE 7 is refined into CE [9] 
* CE 6 is refined into CE [10] 


#### Refined cost equations eval_pclxl_setdash_bb4_in/3 
* CE 9: eval_pclxl_setdash_bb4_in(V_count,V_i_0,B) = 0
     [V_i_0>=V_count,V_i_0>=0,B=2] 
* CE 10: eval_pclxl_setdash_bb4_in(V_count,V_i_0,B) = 1+ eval_pclxl_setdash_bb4_in(V_count,C,D)
     [V_count>=V_i_0+1,V_i_0>=0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_pclxl_setdash_bb4_in/3 
* CEs [10] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_pclxl_setdash_bb4_in/3 
* Loop 7: eval_pclxl_setdash_bb4_in(V_count,V_i_0,B)->  eval_pclxl_setdash_bb4_in(V_count,V_i_0',B')
                  [V_count>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 8: eval_pclxl_setdash_bb4_in(V_count,V_i_0,B) [V_i_0>=V_count,V_i_0>=0,B=2] 

### Ranking functions of CR eval_pclxl_setdash_bb4_in(V_count,V_i_0,B) 
* RF of phase [7]: [V_count-V_i_0]

#### Partial ranking functions of CR eval_pclxl_setdash_bb4_in(V_count,V_i_0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_count-V_i_0


### Resulting Chains:eval_pclxl_setdash_bb4_in(V_count,V_i_0,B) 
* [[7],8]
* [8]


### Merging Chains  eval_pclxl_setdash_bb4_in/3 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[7]]] --> 2 


### Specialization of cost equations eval_pclxl_setdash_13/1 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_pclxl_setdash_13/1 
* CE 11: eval_pclxl_setdash_13(B) = 0
     [] 

### Cost equations --> "Loop" of eval_pclxl_setdash_13/1 
* CEs [11] --> Loop 9 

#### Loops of eval_pclxl_setdash_13/1 
* Loop 9: eval_pclxl_setdash_13(B) [] 

### Ranking functions of CR eval_pclxl_setdash_13(B) 

#### Partial ranking functions of CR eval_pclxl_setdash_13(B) 


### Resulting Chains:eval_pclxl_setdash_13(B) 
* [9]


### Merging Chains  eval_pclxl_setdash_13/1 into  External patterns of execution 
* [[9]] --> 1 


### Specialization of cost equations eval_pclxl_setdash_7/2 
* CE 5 is refined into CE [12,13] 


#### Refined cost equations eval_pclxl_setdash_7/2 
* CE 12: eval_pclxl_setdash_7(V_count,B) = 1+ eval_pclxl_setdash_bb4_in(V_count,C,D):1+ eval_pclxl_setdash_13(B):1
     [0>=V_count,D=2,C=0] 
* CE 13: eval_pclxl_setdash_7(V_count,B) = 1+ eval_pclxl_setdash_bb4_in(V_count,C,D):2+ eval_pclxl_setdash_13(B):1
     [V_count>=1,D=2,C=0] 

### Cost equations --> "Loop" of eval_pclxl_setdash_7/2 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_pclxl_setdash_7/2 
* Loop 10: eval_pclxl_setdash_7(V_count,B) [V_count>=1] 
* Loop 11: eval_pclxl_setdash_7(V_count,B) [0>=V_count] 

### Ranking functions of CR eval_pclxl_setdash_7(V_count,B) 

#### Partial ranking functions of CR eval_pclxl_setdash_7(V_count,B) 


### Resulting Chains:eval_pclxl_setdash_7(V_count,B) 
* [11]
* [10]


### Merging Chains  eval_pclxl_setdash_7/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_pclxl_setdash_1/2 
* CE 3 is refined into CE [14] 
* CE 4 is refined into CE [15,16] 


#### Refined cost equations eval_pclxl_setdash_1/2 
* CE 14: eval_pclxl_setdash_1(V_count,B) = 0
     [] 
* CE 15: eval_pclxl_setdash_1(V_count,B) = 0+ eval_pclxl_setdash_7(V_count,B):1
     [0>=V_count] 
* CE 16: eval_pclxl_setdash_1(V_count,B) = 0+ eval_pclxl_setdash_7(V_count,B):2
     [V_count>=1] 

### Cost equations --> "Loop" of eval_pclxl_setdash_1/2 
* CEs [14,15,16] --> Loop 12 

#### Loops of eval_pclxl_setdash_1/2 
* Loop 12: eval_pclxl_setdash_1(V_count,B) [] 

### Ranking functions of CR eval_pclxl_setdash_1(V_count,B) 

#### Partial ranking functions of CR eval_pclxl_setdash_1(V_count,B) 


### Resulting Chains:eval_pclxl_setdash_1(V_count,B) 
* [12]


### Merging Chains  eval_pclxl_setdash_1/2 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations eval_pclxl_setdash_start/2 
* CE 2 is refined into CE [17] 


#### Refined cost equations eval_pclxl_setdash_start/2 
* CE 17: eval_pclxl_setdash_start(V_count,B) = 0+ eval_pclxl_setdash_1(V_count,B):1
     [] 

### Cost equations --> "Loop" of eval_pclxl_setdash_start/2 
* CEs [17] --> Loop 13 

#### Loops of eval_pclxl_setdash_start/2 
* Loop 13: eval_pclxl_setdash_start(V_count,B) [] 

### Ranking functions of CR eval_pclxl_setdash_start(V_count,B) 

#### Partial ranking functions of CR eval_pclxl_setdash_start(V_count,B) 


### Resulting Chains:eval_pclxl_setdash_start(V_count,B) 
* [13]


### Merging Chains  eval_pclxl_setdash_start/2 into  External patterns of execution 
* [[13]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_pclxl_setdash_bb4_in(V_count,V_i_0,B) -> [eval_pclxl_setdash_bb4_in(V_count',V_i_0',B')] 
1
#### Cost of phase [7]:eval_pclxl_setdash_bb4_in(V_count,V_i_0,B) -> [eval_pclxl_setdash_bb4_in(V_count',V_i_0',B')] 
1*it(7)+0
  Such that:it(7) =< V_count-V_i_0
it(7) =< V_count-V_i_0-V_count'+V_i_0'

#### Cost of chains of eval_pclxl_setdash_bb4_in(V_count,V_i_0,B):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V_count-V_i_0

  with precondition: [B=2,V_i_0>=0,V_count>=V_i_0+1] 

* Chain [8]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V_count] 


#### Cost of chains of eval_pclxl_setdash_13(B):
* Chain [9]: 0
  with precondition: [] 


#### Cost of chains of eval_pclxl_setdash_7(V_count,B):
* Chain [11]: 1
  with precondition: [0>=V_count] 

* Chain [10]: 1*s(1)+1
  Such that:s(1) =< V_count

  with precondition: [V_count>=1] 


#### Cost of chains of eval_pclxl_setdash_1(V_count,B):
* Chain [12]: 1*s(2)+1
  Such that:s(2) =< V_count

  with precondition: [] 


#### Cost of chains of eval_pclxl_setdash_start(V_count,B):
* Chain [13]: 1*s(3)+1
  Such that:s(3) =< V_count

  with precondition: [] 


Closed-form bounds of eval_pclxl_setdash_start(V_count,B): 
-------------------------------------
* Chain [13] with precondition: [] 
    - Upper bound: nat(V_count)+1 
    - Complexity: n 

### Maximum cost of eval_pclxl_setdash_start(V_count,B): nat(V_count)+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 6 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 11 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 9 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 51 ms.

