WARNING: Excluded non-linear constraints:[E=A*D]
Warning: Ignored call to eval_gx_add_char_bits_stop/1 in equation eval_gx_add_char_bits_158/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_gx_add_char_bits_158/1]
1. non_recursive  : [eval_gx_add_char_bits_157/1]
2. non_recursive  : [eval_gx_add_char_bits_bb12_in/1]
3. non_recursive  : [eval_gx_add_char_bits_156/1]
4. non_recursive  : [eval_gx_add_char_bits_155/2]
5. non_recursive  : [eval_gx_add_char_bits_bb10_in/1]
6. non_recursive  : [eval_gx_add_char_bits_128/1]
7. non_recursive  : [eval_gx_add_char_bits_127/2]
8. non_recursive  : [eval_gx_add_char_bits_69/1]
9. non_recursive  : [eval_gx_add_char_bits_68/7]
10. non_recursive  : [eval_gx_add_char_bits_bb3_in/3]
11. non_recursive  : [eval_gx_add_char_bits_17/3]
12. non_recursive  : [eval_gx_add_char_bits_16/4]
13. recursive  : [eval_gx_add_char_bits_119/4,eval_gx_add_char_bits_120/4,eval_gx_add_char_bits_bb6_in/3]
14. non_recursive  : [loop_cont_eval_gx_add_char_bits_bb6_in/2]
15. non_recursive  : [eval_gx_add_char_bits_9/3]
16. non_recursive  : [eval_gx_add_char_bits_8/4]
17. non_recursive  : [eval_gx_add_char_bits_bb0_in/1]
18. non_recursive  : [eval_gx_add_char_bits_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_gx_add_char_bits_bb10_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_gx_add_char_bits_bb6_in/3
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_gx_add_char_bits_9/3
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_gx_add_char_bits_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gx_add_char_bits_bb10_in/1 
* CE 5 is refined into CE [9] 


#### Refined cost equations eval_gx_add_char_bits_bb10_in/1 
* CE 9: eval_gx_add_char_bits_bb10_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_gx_add_char_bits_bb10_in/1 
* CEs [9] --> Loop 7 

#### Loops of eval_gx_add_char_bits_bb10_in/1 
* Loop 7: eval_gx_add_char_bits_bb10_in(B) [] 

### Ranking functions of CR eval_gx_add_char_bits_bb10_in(B) 

#### Partial ranking functions of CR eval_gx_add_char_bits_bb10_in(B) 


### Resulting Chains:eval_gx_add_char_bits_bb10_in(B) 
* [7]


### Merging Chains  eval_gx_add_char_bits_bb10_in/1 into  External patterns of execution 
* [[7]] --> 1 


### Specialization of cost equations eval_gx_add_char_bits_bb6_in/3 
* CE 8 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 7 is refined into CE [12] 


#### Refined cost equations eval_gx_add_char_bits_bb6_in/3 
* CE 10: eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) = 0
     [B=2,V_n_0=0] 
* CE 11: eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) = 1+ eval_gx_add_char_bits_bb6_in(V_169,C,D)
     [V_n_0>=1,V_n_0=C+1,D=2,B=2] 
* CE 12: eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) = 1+ eval_gx_add_char_bits_bb6_in(V_169,C,D)
     [0>=V_n_0+1,V_n_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_gx_add_char_bits_bb6_in/3 
* CEs [11] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_gx_add_char_bits_bb6_in/3 
* Loop 8: eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B)->  eval_gx_add_char_bits_bb6_in(V_169,V_n_0',B')
                  [V_n_0>=1,V_n_0=V_n_0'+1,B'=2,B=2] 
* Loop 9: eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B)->  eval_gx_add_char_bits_bb6_in(V_169,V_n_0',B')
                  [0>=V_n_0+1,V_n_0=V_n_0'+1,B'=2,B=2] 
* Loop 10: eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) [B=2,V_n_0=0] 

### Ranking functions of CR eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) 
* RF of phase [8]: [V_n_0]

#### Partial ranking functions of CR eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_n_0


### Resulting Chains:eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) 
* [[9]]...
* [[8],10]
* [10]


### Merging Chains  eval_gx_add_char_bits_bb6_in/3 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[8]]] --> 2 
* [[[9]]] --> 3 


### Specialization of cost equations eval_gx_add_char_bits_9/3 
* CE 3 is refined into CE [13] 
* CE 4 is refined into CE [14,15,16] 


#### Refined cost equations eval_gx_add_char_bits_9/3 
* CE 13: eval_gx_add_char_bits_9(V_6,V_12,B) = 0+ eval_gx_add_char_bits_bb10_in(B):1
     [] 
* CE 14: eval_gx_add_char_bits_9(V_6,V_12,B) = 1+ eval_gx_add_char_bits_bb6_in(C,D,E):1+ eval_gx_add_char_bits_bb10_in(B):1
     [E=2,D=0] 
* CE 15: eval_gx_add_char_bits_9(V_6,V_12,B) = 1+ eval_gx_add_char_bits_bb6_in(C,D,E):2+ eval_gx_add_char_bits_bb10_in(B):1
     [D>=1,E=2] 
* CE 16: eval_gx_add_char_bits_9(V_6,V_12,B) = 1+ eval_gx_add_char_bits_bb6_in(C,D,E):3
     [0>=D+1,E=2] 

### Cost equations --> "Loop" of eval_gx_add_char_bits_9/3 
* CEs [16] --> Loop 11 
* CEs [13,14,15] --> Loop 12 

#### Loops of eval_gx_add_char_bits_9/3 
* Loop 11: eval_gx_add_char_bits_9(V_6,V_12,B) [] 
* Loop 12: eval_gx_add_char_bits_9(V_6,V_12,B) [] 

### Ranking functions of CR eval_gx_add_char_bits_9(V_6,V_12,B) 

#### Partial ranking functions of CR eval_gx_add_char_bits_9(V_6,V_12,B) 


### Resulting Chains:eval_gx_add_char_bits_9(V_6,V_12,B) 
* [12]
* [11]...


### Merging Chains  eval_gx_add_char_bits_9/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_gx_add_char_bits_start/1 
* CE 2 is refined into CE [17,18] 


#### Refined cost equations eval_gx_add_char_bits_start/1 
* CE 17: eval_gx_add_char_bits_start(B) = 0+ eval_gx_add_char_bits_9(C,D,B):1
     [] 
* CE 18: eval_gx_add_char_bits_start(B) = 0+ eval_gx_add_char_bits_9(C,D,B):2
     [] 

### Cost equations --> "Loop" of eval_gx_add_char_bits_start/1 
* CEs [18] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of eval_gx_add_char_bits_start/1 
* Loop 13: eval_gx_add_char_bits_start(B) [] 
* Loop 14: eval_gx_add_char_bits_start(B) [] 

### Ranking functions of CR eval_gx_add_char_bits_start(B) 

#### Partial ranking functions of CR eval_gx_add_char_bits_start(B) 


### Resulting Chains:eval_gx_add_char_bits_start(B) 
* [14]
* [13]...


### Merging Chains  eval_gx_add_char_bits_start/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of eval_gx_add_char_bits_bb10_in(B):
* Chain [7]: 0
  with precondition: [] 


#### Cost of loops [9] 

 * loop 9:eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) -> [eval_gx_add_char_bits_bb6_in(V_169',V_n_0',B')] 
1
#### Cost of phase [9]:eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) -> [eval_gx_add_char_bits_bb6_in(V_169',V_n_0',B')] 
1*it(9)+0
#### Cost of loops [8] 

 * loop 8:eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) -> [eval_gx_add_char_bits_bb6_in(V_169',V_n_0',B')] 
1
#### Cost of phase [8]:eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B) -> [eval_gx_add_char_bits_bb6_in(V_169',V_n_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_n_0
it(8) =< V_n_0-V_n_0'

#### Cost of chains of eval_gx_add_char_bits_bb6_in(V_169,V_n_0,B):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [0>=V_n_0+1,B=2] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_n_0

  with precondition: [B=2,V_n_0>=1] 

* Chain [10]: 0
  with precondition: [V_n_0=0,B=2] 


#### Cost of chains of eval_gx_add_char_bits_9(V_6,V_12,B):
* Chain [12]: 1*aux(1)+0
  with precondition: [] 

* Chain [11]...: 1*s(2)+1
  with precondition: [] 


#### Cost of chains of eval_gx_add_char_bits_start(B):
* Chain [14]: 1*s(3)+0
  with precondition: [] 

* Chain [13]...: 1*s(4)+1
  with precondition: [] 


Closed-form bounds of eval_gx_add_char_bits_start(B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [13]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gx_add_char_bits_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 32 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 42 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 29 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 181 ms.

