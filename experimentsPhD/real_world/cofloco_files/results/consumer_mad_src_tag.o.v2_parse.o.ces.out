Warning: Ignored call to eval_v2_parse_stop/1 in equation eval_v2_parse_bb50_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_v2_parse_164/4,eval_v2_parse_165/4,eval_v2_parse_166/4,eval_v2_parse_167/5,eval_v2_parse_bb39_in/2]
1. non_recursive  : [eval_v2_parse_bb50_in/1]
2. non_recursive  : [eval_v2_parse_177/1]
3. non_recursive  : [eval_v2_parse_176/1]
4. non_recursive  : [eval_v2_parse_bb47_in/1]
5. non_recursive  : [eval_v2_parse_175/1]
6. non_recursive  : [eval_v2_parse_174/1]
7. non_recursive  : [eval_v2_parse_bb45_in/1]
8. non_recursive  : [eval_v2_parse_179/1]
9. non_recursive  : [eval_v2_parse_178/1]
10. non_recursive  : [eval_v2_parse_bb48_in/1]
11. non_recursive  : [eval_v2_parse_173/1]
12. non_recursive  : [eval_v2_parse_172/1]
13. non_recursive  : [eval_v2_parse_bb43_in/1]
14. non_recursive  : [loop_cont_eval_v2_parse_bb39_in/2]
15. non_recursive  : [eval_v2_parse_bb38_in/1]
16. non_recursive  : [eval_v2_parse_66/1]
17. non_recursive  : [eval_v2_parse_65/2]
18. non_recursive  : [eval_v2_parse_62/1]
19. non_recursive  : [eval_v2_parse_61/1]
20. non_recursive  : [eval_v2_parse_50/1]
21. non_recursive  : [eval_v2_parse_49/1]
22. non_recursive  : [eval_v2_parse_48/1]
23. non_recursive  : [eval_v2_parse_47/1]
24. non_recursive  : [eval_v2_parse_37/1]
25. non_recursive  : [eval_v2_parse_36/1]
26. recursive  : [eval_v2_parse_103/6,eval_v2_parse_104/6,eval_v2_parse_bb23_in/6,eval_v2_parse_bb29_in/6]
27. recursive  : [eval_v2_parse_98/3,eval_v2_parse_99/4,eval_v2_parse_bb21_in/2,loop_cont_eval_v2_parse_bb23_in/3]
28. non_recursive  : [eval_v2_parse_150/1]
29. non_recursive  : [eval_v2_parse_149/1]
30. non_recursive  : [eval_v2_parse_147/1]
31. non_recursive  : [eval_v2_parse_146/1]
32. non_recursive  : [eval_v2_parse_bb35_in/1]
33. non_recursive  : [eval_v2_parse_142/1]
34. non_recursive  : [eval_v2_parse_141/2]
35. non_recursive  : [eval_v2_parse_135/1]
36. non_recursive  : [eval_v2_parse_134/1]
37. non_recursive  : [eval_v2_parse_132/1]
38. non_recursive  : [eval_v2_parse_131/1]
39. non_recursive  : [eval_v2_parse_bb32_in/1]
40. non_recursive  : [eval_v2_parse_124/1]
41. non_recursive  : [eval_v2_parse_123/1]
42. non_recursive  : [eval_v2_parse_117/1]
43. non_recursive  : [eval_v2_parse_116/1]
44. non_recursive  : [loop_cont_eval_v2_parse_bb21_in/2]
45. non_recursive  : [eval_v2_parse_83/2]
46. non_recursive  : [eval_v2_parse_82/1]
47. non_recursive  : [eval_v2_parse_77/1]
48. non_recursive  : [eval_v2_parse_76/1]
49. non_recursive  : [eval_v2_parse_NewDefault_in/1]
50. non_recursive  : [eval_v2_parse_bb5_in/1]
51. non_recursive  : [eval_v2_parse_21/1]
52. non_recursive  : [eval_v2_parse_20/2]
53. non_recursive  : [eval_v2_parse_19/1]
54. non_recursive  : [eval_v2_parse_18/2]
55. non_recursive  : [eval_v2_parse_16/1]
56. non_recursive  : [eval_v2_parse_15/2]
57. non_recursive  : [eval_v2_parse_4/1]
58. non_recursive  : [eval_v2_parse_3/1]
59. non_recursive  : [eval_v2_parse_2/1]
60. non_recursive  : [eval_v2_parse_1/1]
61. non_recursive  : [eval_v2_parse_bb0_in/1]
62. non_recursive  : [eval_v2_parse_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_v2_parse_bb39_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_v2_parse_bb45_in/1
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_v2_parse_bb48_in/1
11. SCC is partially evaluated into eval_v2_parse_173/1
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_v2_parse_bb43_in/1
14. SCC is partially evaluated into loop_cont_eval_v2_parse_bb39_in/2
15. SCC is partially evaluated into eval_v2_parse_bb38_in/1
16. SCC is partially evaluated into eval_v2_parse_66/1
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_v2_parse_50/1
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_v2_parse_37/1
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_v2_parse_bb23_in/6
27. SCC is partially evaluated into eval_v2_parse_bb21_in/2
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_v2_parse_147/1
31. SCC is completely evaluated into other SCCs
32. SCC is partially evaluated into eval_v2_parse_bb35_in/1
33. SCC is partially evaluated into eval_v2_parse_142/1
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is partially evaluated into eval_v2_parse_132/1
38. SCC is completely evaluated into other SCCs
39. SCC is partially evaluated into eval_v2_parse_bb32_in/1
40. SCC is completely evaluated into other SCCs
41. SCC is completely evaluated into other SCCs
42. SCC is partially evaluated into eval_v2_parse_117/1
43. SCC is completely evaluated into other SCCs
44. SCC is partially evaluated into loop_cont_eval_v2_parse_bb21_in/2
45. SCC is partially evaluated into eval_v2_parse_83/2
46. SCC is completely evaluated into other SCCs
47. SCC is partially evaluated into eval_v2_parse_77/1
48. SCC is completely evaluated into other SCCs
49. SCC is completely evaluated into other SCCs
50. SCC is partially evaluated into eval_v2_parse_bb5_in/1
51. SCC is completely evaluated into other SCCs
52. SCC is completely evaluated into other SCCs
53. SCC is completely evaluated into other SCCs
54. SCC is completely evaluated into other SCCs
55. SCC is partially evaluated into eval_v2_parse_16/1
56. SCC is completely evaluated into other SCCs
57. SCC is partially evaluated into eval_v2_parse_4/1
58. SCC is completely evaluated into other SCCs
59. SCC is partially evaluated into eval_v2_parse_2/1
60. SCC is completely evaluated into other SCCs
61. SCC is completely evaluated into other SCCs
62. SCC is partially evaluated into eval_v2_parse_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_v2_parse_bb39_in/2 
* CE 23 is refined into CE [60] 
* CE 22 is refined into CE [61] 
* CE 21 is refined into CE [62] 


#### Refined cost equations eval_v2_parse_bb39_in/2 
* CE 60: eval_v2_parse_bb39_in(V_179,B) = 0
     [B=4] 
* CE 61: eval_v2_parse_bb39_in(V_179,B) = 0
     [B=2] 
* CE 62: eval_v2_parse_bb39_in(V_179,B) = 1+ eval_v2_parse_bb39_in(V_179,B)
     [] 

### Cost equations --> "Loop" of eval_v2_parse_bb39_in/2 
* CEs [62] --> Loop 39 
* CEs [60] --> Loop 40 
* CEs [61] --> Loop 41 

#### Loops of eval_v2_parse_bb39_in/2 
* Loop 39: eval_v2_parse_bb39_in(V_179,B)->  eval_v2_parse_bb39_in(V_179,B)
                  [] 
* Loop 40: eval_v2_parse_bb39_in(V_179,B) [B=4] 
* Loop 41: eval_v2_parse_bb39_in(V_179,B) [B=2] 

### Ranking functions of CR eval_v2_parse_bb39_in(V_179,B) 

#### Partial ranking functions of CR eval_v2_parse_bb39_in(V_179,B) 


### Resulting Chains:eval_v2_parse_bb39_in(V_179,B) 
* [[39]]...
* [[39],41]
* [[39],40]
* [41]
* [40]


### Merging Chains  eval_v2_parse_bb39_in/2 into  External patterns of execution 
* [[41],[41,[39]]] --> 1 
* [[40],[40,[39]]] --> 2 
* [[[39]]] --> 3 


### Specialization of cost equations eval_v2_parse_bb45_in/1 
* CE 14 is refined into CE [63] 


#### Refined cost equations eval_v2_parse_bb45_in/1 
* CE 63: eval_v2_parse_bb45_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_v2_parse_bb45_in/1 
* CEs [63] --> Loop 42 

#### Loops of eval_v2_parse_bb45_in/1 
* Loop 42: eval_v2_parse_bb45_in(B) [] 

### Ranking functions of CR eval_v2_parse_bb45_in(B) 

#### Partial ranking functions of CR eval_v2_parse_bb45_in(B) 


### Resulting Chains:eval_v2_parse_bb45_in(B) 
* [42]


### Merging Chains  eval_v2_parse_bb45_in/1 into  External patterns of execution 
* [[42]] --> 1 


### Specialization of cost equations eval_v2_parse_bb48_in/1 
* CE 7 is refined into CE [64] 


#### Refined cost equations eval_v2_parse_bb48_in/1 
* CE 64: eval_v2_parse_bb48_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_v2_parse_bb48_in/1 
* CEs [64] --> Loop 43 

#### Loops of eval_v2_parse_bb48_in/1 
* Loop 43: eval_v2_parse_bb48_in(B) [] 

### Ranking functions of CR eval_v2_parse_bb48_in(B) 

#### Partial ranking functions of CR eval_v2_parse_bb48_in(B) 


### Resulting Chains:eval_v2_parse_bb48_in(B) 
* [43]


### Merging Chains  eval_v2_parse_bb48_in/1 into  External patterns of execution 
* [[43]] --> 1 


### Specialization of cost equations eval_v2_parse_173/1 
* CE 42 is refined into CE [65] 
* CE 43 is refined into CE [66] 


#### Refined cost equations eval_v2_parse_173/1 
* CE 65: eval_v2_parse_173(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 66: eval_v2_parse_173(B) = 0+ eval_v2_parse_bb48_in(B):1
     [] 

### Cost equations --> "Loop" of eval_v2_parse_173/1 
* CEs [65,66] --> Loop 44 

#### Loops of eval_v2_parse_173/1 
* Loop 44: eval_v2_parse_173(B) [] 

### Ranking functions of CR eval_v2_parse_173(B) 

#### Partial ranking functions of CR eval_v2_parse_173(B) 


### Resulting Chains:eval_v2_parse_173(B) 
* [44]


### Merging Chains  eval_v2_parse_173/1 into  External patterns of execution 
* [[44]] --> 1 


### Specialization of cost equations eval_v2_parse_bb43_in/1 
* CE 31 is refined into CE [67] 
* CE 32 is refined into CE [68] 


#### Refined cost equations eval_v2_parse_bb43_in/1 
* CE 67: eval_v2_parse_bb43_in(B) = 0+ eval_v2_parse_173(B):1
     [] 
* CE 68: eval_v2_parse_bb43_in(B) = 0+ eval_v2_parse_bb48_in(B):1
     [] 

### Cost equations --> "Loop" of eval_v2_parse_bb43_in/1 
* CEs [67,68] --> Loop 45 

#### Loops of eval_v2_parse_bb43_in/1 
* Loop 45: eval_v2_parse_bb43_in(B) [] 

### Ranking functions of CR eval_v2_parse_bb43_in(B) 

#### Partial ranking functions of CR eval_v2_parse_bb43_in(B) 


### Resulting Chains:eval_v2_parse_bb43_in(B) 
* [45]


### Merging Chains  eval_v2_parse_bb43_in/1 into  External patterns of execution 
* [[45]] --> 1 


### Specialization of cost equations loop_cont_eval_v2_parse_bb39_in/2 
* CE 25 is refined into CE [69] 
* CE 24 is refined into CE [70] 


#### Refined cost equations loop_cont_eval_v2_parse_bb39_in/2 
* CE 69: loop_cont_eval_v2_parse_bb39_in(B,A) = 0+ eval_v2_parse_bb43_in(A):1
     [B=4] 
* CE 70: loop_cont_eval_v2_parse_bb39_in(B,A) = 0+ eval_v2_parse_bb45_in(A):1
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_v2_parse_bb39_in/2 
* CEs [69] --> Loop 46 
* CEs [70] --> Loop 47 

#### Loops of loop_cont_eval_v2_parse_bb39_in/2 
* Loop 46: loop_cont_eval_v2_parse_bb39_in(B,A) [B=4] 
* Loop 47: loop_cont_eval_v2_parse_bb39_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_v2_parse_bb39_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_v2_parse_bb39_in(B,A) 


### Resulting Chains:loop_cont_eval_v2_parse_bb39_in(B,A) 
* [47]
* [46]


### Merging Chains  loop_cont_eval_v2_parse_bb39_in/2 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 


### Specialization of cost equations eval_v2_parse_bb38_in/1 
* CE 15 is refined into CE [71,72,73] 


#### Refined cost equations eval_v2_parse_bb38_in/1 
* CE 71: eval_v2_parse_bb38_in(B) = 1+ eval_v2_parse_bb39_in(C,D):1+ loop_cont_eval_v2_parse_bb39_in(E,B):1
     [E=2,D=2] 
* CE 72: eval_v2_parse_bb38_in(B) = 1+ eval_v2_parse_bb39_in(C,D):2+ loop_cont_eval_v2_parse_bb39_in(E,B):2
     [E=4,D=4] 
* CE 73: eval_v2_parse_bb38_in(B) = 1+ eval_v2_parse_bb39_in(C,D):3
     [] 

### Cost equations --> "Loop" of eval_v2_parse_bb38_in/1 
* CEs [73] --> Loop 48 
* CEs [71,72] --> Loop 49 

#### Loops of eval_v2_parse_bb38_in/1 
* Loop 48: eval_v2_parse_bb38_in(B) [] 
* Loop 49: eval_v2_parse_bb38_in(B) [] 

### Ranking functions of CR eval_v2_parse_bb38_in(B) 

#### Partial ranking functions of CR eval_v2_parse_bb38_in(B) 


### Resulting Chains:eval_v2_parse_bb38_in(B) 
* [49]
* [48]...


### Merging Chains  eval_v2_parse_bb38_in/1 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 


### Specialization of cost equations eval_v2_parse_66/1 
* CE 33 is refined into CE [74] 
* CE 34 is refined into CE [75,76] 


#### Refined cost equations eval_v2_parse_66/1 
* CE 74: eval_v2_parse_66(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 75: eval_v2_parse_66(B) = 0+ eval_v2_parse_bb38_in(B):1
     [] 
* CE 76: eval_v2_parse_66(B) = 0+ eval_v2_parse_bb38_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_66/1 
* CEs [76] --> Loop 50 
* CEs [74,75] --> Loop 51 

#### Loops of eval_v2_parse_66/1 
* Loop 50: eval_v2_parse_66(B) [] 
* Loop 51: eval_v2_parse_66(B) [] 

### Ranking functions of CR eval_v2_parse_66(B) 

#### Partial ranking functions of CR eval_v2_parse_66(B) 


### Resulting Chains:eval_v2_parse_66(B) 
* [51]
* [50]...


### Merging Chains  eval_v2_parse_66/1 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


### Specialization of cost equations eval_v2_parse_50/1 
* CE 26 is refined into CE [77] 
* CE 27 is refined into CE [78,79] 
* CE 28 is refined into CE [80,81] 


#### Refined cost equations eval_v2_parse_50/1 
* CE 77: eval_v2_parse_50(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 78: eval_v2_parse_50(B) = 0+ eval_v2_parse_66(B):1
     [] 
* CE 79: eval_v2_parse_50(B) = 0+ eval_v2_parse_66(B):2
     [] 
* CE 80: eval_v2_parse_50(B) = 0+ eval_v2_parse_bb38_in(B):1
     [] 
* CE 81: eval_v2_parse_50(B) = 0+ eval_v2_parse_bb38_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_50/1 
* CEs [79,81] --> Loop 52 
* CEs [77,78,80] --> Loop 53 

#### Loops of eval_v2_parse_50/1 
* Loop 52: eval_v2_parse_50(B) [] 
* Loop 53: eval_v2_parse_50(B) [] 

### Ranking functions of CR eval_v2_parse_50(B) 

#### Partial ranking functions of CR eval_v2_parse_50(B) 


### Resulting Chains:eval_v2_parse_50(B) 
* [53]
* [52]...


### Merging Chains  eval_v2_parse_50/1 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 


### Specialization of cost equations eval_v2_parse_37/1 
* CE 16 is refined into CE [82] 
* CE 17 is refined into CE [83,84] 
* CE 18 is refined into CE [85,86] 


#### Refined cost equations eval_v2_parse_37/1 
* CE 82: eval_v2_parse_37(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 83: eval_v2_parse_37(B) = 0+ eval_v2_parse_50(B):1
     [] 
* CE 84: eval_v2_parse_37(B) = 0+ eval_v2_parse_50(B):2
     [] 
* CE 85: eval_v2_parse_37(B) = 0+ eval_v2_parse_bb38_in(B):1
     [] 
* CE 86: eval_v2_parse_37(B) = 0+ eval_v2_parse_bb38_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_37/1 
* CEs [84,86] --> Loop 54 
* CEs [82,83,85] --> Loop 55 

#### Loops of eval_v2_parse_37/1 
* Loop 54: eval_v2_parse_37(B) [] 
* Loop 55: eval_v2_parse_37(B) [] 

### Ranking functions of CR eval_v2_parse_37(B) 

#### Partial ranking functions of CR eval_v2_parse_37(B) 


### Resulting Chains:eval_v2_parse_37(B) 
* [55]
* [54]...


### Merging Chains  eval_v2_parse_37/1 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 


### Specialization of cost equations eval_v2_parse_bb23_in/6 
* CE 44 is refined into CE [87] 
* CE 45 is refined into CE [88] 
* CE 48 is refined into CE [89] 
* CE 46 is refined into CE [90] 
* CE 47 is refined into CE [91] 


#### Refined cost equations eval_v2_parse_bb23_in/6 
* CE 87: eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) = 0
     [V_ehflags4_0>=1,V_bytes_0=V_112+1,B=2] 
* CE 88: eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) = 0
     [0>=V_ehflags4_0+1,V_bytes_0=V_112+1,B=2] 
* CE 89: eval_v2_parse_bb23_in(A,B,C,D,E,B) = 0
     [B+1=A,E=3,D=0] 
* CE 90: eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) = 1+ eval_v2_parse_bb23_in(D,V_112,V_114,E,B,C)
     [B>=2,V_ehflags4_0>=1,3>=B,V_112+1=D,V_112+1=V_bytes_0] 
* CE 91: eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) = 1+ eval_v2_parse_bb23_in(D,V_112,V_114,E,B,C)
     [B>=2,3>=B,0>=V_ehflags4_0+1,V_112+1=D,V_112+1=V_bytes_0] 

### Cost equations --> "Loop" of eval_v2_parse_bb23_in/6 
* CEs [90] --> Loop 56 
* CEs [91] --> Loop 57 
* CEs [87] --> Loop 58 
* CEs [88] --> Loop 59 
* CEs [89] --> Loop 60 

#### Loops of eval_v2_parse_bb23_in/6 
* Loop 56: eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C)->  eval_v2_parse_bb23_in(V_bytes_0,V_112',V_114,V_ehflags4_0',B,C)
                  [B>=2,V_ehflags4_0>=1,3>=B,V_bytes_0=V_112'+1,V_bytes_0=V_112+1] 
* Loop 57: eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C)->  eval_v2_parse_bb23_in(V_bytes_0,V_112',V_114,V_ehflags4_0',B,C)
                  [B>=2,3>=B,0>=V_ehflags4_0+1,V_bytes_0=V_112'+1,V_bytes_0=V_112+1] 
* Loop 58: eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) [V_ehflags4_0>=1,V_bytes_0=V_112+1,B=2] 
* Loop 59: eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) [0>=V_ehflags4_0+1,V_bytes_0=V_112+1,B=2] 
* Loop 60: eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) [V_bytes_0=C+1,V_bytes_0=V_112+1,B=3,V_ehflags4_0=0] 

### Ranking functions of CR eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) 

#### Partial ranking functions of CR eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) 


### Resulting Chains:eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) 
* [[56,57]]...
* [[56,57],60]
* [[56,57],59]
* [[56,57],58]
* [60]
* [59]
* [58]


### Merging Chains  eval_v2_parse_bb23_in/6 into  External patterns of execution 
* [[60],[60,[56,57]]] --> 1 
* [[59],[58,[56,57]],[59,[56,57]]] --> 2 
* [[58]] --> 3 
* [[[56,57]]] --> 4 


### Specialization of cost equations eval_v2_parse_bb21_in/2 
* CE 37 is refined into CE [92,93,94] 
* CE 38 is refined into CE [95,96,97] 
* CE 39 is refined into CE [98] 
* CE 35 is refined into CE [99,100] 
* CE 36 is refined into CE [101,102] 


#### Refined cost equations eval_v2_parse_bb21_in/2 
* CE 92: eval_v2_parse_bb21_in(V_bytes_0,B) = 1+ eval_v2_parse_bb23_in(C,D,E,E,F,G):2
     [D>=0,D+1=C,D+1=V_bytes_0,F=2,B=2] 
* CE 93: eval_v2_parse_bb21_in(V_bytes_0,B) = 1+ eval_v2_parse_bb23_in(C,D,E,E,F,G):3
     [E>=1,D>=0,D+1=C,D+1=V_bytes_0,F=2,B=2] 
* CE 94: eval_v2_parse_bb21_in(V_bytes_0,B) = 1+ eval_v2_parse_bb23_in(V_bytes_0,C,D,D,E,F):4
     [V_bytes_0>=1,V_bytes_0=C+1,E=2,B=2] 
* CE 95: eval_v2_parse_bb21_in(V_bytes_0,B) = 1+ eval_v2_parse_bb23_in(C,D,E,E,F,G):2
     [0>=D+2,D+1=C,D+1=V_bytes_0,F=2,B=2] 
* CE 96: eval_v2_parse_bb21_in(V_bytes_0,B) = 1+ eval_v2_parse_bb23_in(C,D,E,E,F,G):3
     [E>=1,0>=D+2,D+1=C,D+1=V_bytes_0,F=2,B=2] 
* CE 97: eval_v2_parse_bb21_in(V_bytes_0,B) = 1+ eval_v2_parse_bb23_in(V_bytes_0,C,D,D,E,F):4
     [0>=V_bytes_0+1,V_bytes_0=C+1,E=2,B=2] 
* CE 98: eval_v2_parse_bb21_in(V_bytes_0,B) = 0
     [B=5,V_bytes_0=0] 
* CE 99: eval_v2_parse_bb21_in(V_bytes_0,B) = 2+ eval_v2_parse_bb23_in(C,D,E,E,F,D):1+ eval_v2_parse_bb21_in(D,B)
     [D>=0,D+1=C,D+1=V_bytes_0,F=3] 
* CE 100: eval_v2_parse_bb21_in(V_bytes_0,B) = 2+ eval_v2_parse_bb23_in(V_bytes_0,C,D,D,E,F):4
     [V_bytes_0>=1,V_bytes_0=C+1,E=3] 
* CE 101: eval_v2_parse_bb21_in(V_bytes_0,B) = 2+ eval_v2_parse_bb23_in(C,D,E,E,F,D):1+ eval_v2_parse_bb21_in(D,B)
     [0>=D+2,D+1=C,D+1=V_bytes_0,F=3] 
* CE 102: eval_v2_parse_bb21_in(V_bytes_0,B) = 2+ eval_v2_parse_bb23_in(V_bytes_0,C,D,D,E,F):4
     [0>=V_bytes_0+1,V_bytes_0=C+1,E=3] 

### Cost equations --> "Loop" of eval_v2_parse_bb21_in/2 
* CEs [94,100] --> Loop 61 
* CEs [97,102] --> Loop 62 
* CEs [99] --> Loop 63 
* CEs [101] --> Loop 64 
* CEs [92,93] --> Loop 65 
* CEs [95,96] --> Loop 66 
* CEs [98] --> Loop 67 

#### Loops of eval_v2_parse_bb21_in/2 
* Loop 61: eval_v2_parse_bb21_in(V_bytes_0,B) [V_bytes_0>=1] 
* Loop 62: eval_v2_parse_bb21_in(V_bytes_0,B) [0>=V_bytes_0+1] 
* Loop 63: eval_v2_parse_bb21_in(V_bytes_0,B)->  eval_v2_parse_bb21_in(V_bytes_0',B)
                  [V_bytes_0>=1,V_bytes_0=V_bytes_0'+1] 
* Loop 64: eval_v2_parse_bb21_in(V_bytes_0,B)->  eval_v2_parse_bb21_in(V_bytes_0',B)
                  [0>=V_bytes_0+1,V_bytes_0=V_bytes_0'+1] 
* Loop 65: eval_v2_parse_bb21_in(V_bytes_0,B) [V_bytes_0>=1,B=2] 
* Loop 66: eval_v2_parse_bb21_in(V_bytes_0,B) [0>=V_bytes_0+1,B=2] 
* Loop 67: eval_v2_parse_bb21_in(V_bytes_0,B) [B=5,V_bytes_0=0] 

### Ranking functions of CR eval_v2_parse_bb21_in(V_bytes_0,B) 
* RF of phase [63]: [V_bytes_0]

#### Partial ranking functions of CR eval_v2_parse_bb21_in(V_bytes_0,B) 
* Partial RF of phase [63]:
  - RF of loop [63:1]:
    V_bytes_0


### Resulting Chains:eval_v2_parse_bb21_in(V_bytes_0,B) 
* [[64]]...
* [[64],66]
* [[64],62]...
* [[63],67]
* [[63],65]
* [[63],61]...
* [67]
* [66]
* [65]
* [62]...
* [61]...


### Merging Chains  eval_v2_parse_bb21_in/2 into  External patterns of execution 
* [[67]] --> 1 
* [[66],[66,[64]]] --> 2 
* [[65],[65,[63]]] --> 3 
* [[67,[63]]] --> 4 
* [[62],[[64]],[62,[64]]] --> 5 
* [[61]] --> 6 
* [[61,[63]]] --> 7 


### Specialization of cost equations eval_v2_parse_147/1 
* CE 58 is refined into CE [103] 
* CE 59 is refined into CE [104,105] 


#### Refined cost equations eval_v2_parse_147/1 
* CE 103: eval_v2_parse_147(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 104: eval_v2_parse_147(B) = 0+ eval_v2_parse_bb38_in(B):1
     [] 
* CE 105: eval_v2_parse_147(B) = 0+ eval_v2_parse_bb38_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_147/1 
* CEs [105] --> Loop 68 
* CEs [103,104] --> Loop 69 

#### Loops of eval_v2_parse_147/1 
* Loop 68: eval_v2_parse_147(B) [] 
* Loop 69: eval_v2_parse_147(B) [] 

### Ranking functions of CR eval_v2_parse_147(B) 

#### Partial ranking functions of CR eval_v2_parse_147(B) 


### Resulting Chains:eval_v2_parse_147(B) 
* [69]
* [68]...


### Merging Chains  eval_v2_parse_147/1 into  External patterns of execution 
* [[69]] --> 1 
* [[68]] --> 2 


### Specialization of cost equations eval_v2_parse_bb35_in/1 
* CE 54 is refined into CE [106,107] 
* CE 55 is refined into CE [108,109] 


#### Refined cost equations eval_v2_parse_bb35_in/1 
* CE 106: eval_v2_parse_bb35_in(B) = 0+ eval_v2_parse_147(B):1
     [] 
* CE 107: eval_v2_parse_bb35_in(B) = 0+ eval_v2_parse_147(B):2
     [] 
* CE 108: eval_v2_parse_bb35_in(B) = 0+ eval_v2_parse_bb38_in(B):1
     [] 
* CE 109: eval_v2_parse_bb35_in(B) = 0+ eval_v2_parse_bb38_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_bb35_in/1 
* CEs [107,109] --> Loop 70 
* CEs [106,108] --> Loop 71 

#### Loops of eval_v2_parse_bb35_in/1 
* Loop 70: eval_v2_parse_bb35_in(B) [] 
* Loop 71: eval_v2_parse_bb35_in(B) [] 

### Ranking functions of CR eval_v2_parse_bb35_in(B) 

#### Partial ranking functions of CR eval_v2_parse_bb35_in(B) 


### Resulting Chains:eval_v2_parse_bb35_in(B) 
* [71]
* [70]...


### Merging Chains  eval_v2_parse_bb35_in/1 into  External patterns of execution 
* [[71]] --> 1 
* [[70]] --> 2 


### Specialization of cost equations eval_v2_parse_142/1 
* CE 56 is refined into CE [110] 
* CE 57 is refined into CE [111,112] 


#### Refined cost equations eval_v2_parse_142/1 
* CE 110: eval_v2_parse_142(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 111: eval_v2_parse_142(B) = 0+ eval_v2_parse_bb35_in(B):1
     [] 
* CE 112: eval_v2_parse_142(B) = 0+ eval_v2_parse_bb35_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_142/1 
* CEs [112] --> Loop 72 
* CEs [110,111] --> Loop 73 

#### Loops of eval_v2_parse_142/1 
* Loop 72: eval_v2_parse_142(B) [] 
* Loop 73: eval_v2_parse_142(B) [] 

### Ranking functions of CR eval_v2_parse_142(B) 

#### Partial ranking functions of CR eval_v2_parse_142(B) 


### Resulting Chains:eval_v2_parse_142(B) 
* [73]
* [72]...


### Merging Chains  eval_v2_parse_142/1 into  External patterns of execution 
* [[73]] --> 1 
* [[72]] --> 2 


### Specialization of cost equations eval_v2_parse_132/1 
* CE 52 is refined into CE [113] 
* CE 53 is refined into CE [114,115] 


#### Refined cost equations eval_v2_parse_132/1 
* CE 113: eval_v2_parse_132(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 114: eval_v2_parse_132(B) = 0+ eval_v2_parse_142(B):1
     [] 
* CE 115: eval_v2_parse_132(B) = 0+ eval_v2_parse_142(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_132/1 
* CEs [115] --> Loop 74 
* CEs [113,114] --> Loop 75 

#### Loops of eval_v2_parse_132/1 
* Loop 74: eval_v2_parse_132(B) [] 
* Loop 75: eval_v2_parse_132(B) [] 

### Ranking functions of CR eval_v2_parse_132(B) 

#### Partial ranking functions of CR eval_v2_parse_132(B) 


### Resulting Chains:eval_v2_parse_132(B) 
* [75]
* [74]...


### Merging Chains  eval_v2_parse_132/1 into  External patterns of execution 
* [[75]] --> 1 
* [[74]] --> 2 


### Specialization of cost equations eval_v2_parse_bb32_in/1 
* CE 50 is refined into CE [116,117] 
* CE 51 is refined into CE [118,119] 


#### Refined cost equations eval_v2_parse_bb32_in/1 
* CE 116: eval_v2_parse_bb32_in(B) = 0+ eval_v2_parse_132(B):1
     [] 
* CE 117: eval_v2_parse_bb32_in(B) = 0+ eval_v2_parse_132(B):2
     [] 
* CE 118: eval_v2_parse_bb32_in(B) = 0+ eval_v2_parse_bb35_in(B):1
     [] 
* CE 119: eval_v2_parse_bb32_in(B) = 0+ eval_v2_parse_bb35_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_bb32_in/1 
* CEs [117,119] --> Loop 76 
* CEs [116,118] --> Loop 77 

#### Loops of eval_v2_parse_bb32_in/1 
* Loop 76: eval_v2_parse_bb32_in(B) [] 
* Loop 77: eval_v2_parse_bb32_in(B) [] 

### Ranking functions of CR eval_v2_parse_bb32_in(B) 

#### Partial ranking functions of CR eval_v2_parse_bb32_in(B) 


### Resulting Chains:eval_v2_parse_bb32_in(B) 
* [77]
* [76]...


### Merging Chains  eval_v2_parse_bb32_in/1 into  External patterns of execution 
* [[77]] --> 1 
* [[76]] --> 2 


### Specialization of cost equations eval_v2_parse_117/1 
* CE 49 is refined into CE [120,121] 


#### Refined cost equations eval_v2_parse_117/1 
* CE 120: eval_v2_parse_117(B) = 0+ eval_v2_parse_bb32_in(B):1
     [] 
* CE 121: eval_v2_parse_117(B) = 0+ eval_v2_parse_bb32_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_117/1 
* CEs [121] --> Loop 78 
* CEs [120] --> Loop 79 

#### Loops of eval_v2_parse_117/1 
* Loop 78: eval_v2_parse_117(B) [] 
* Loop 79: eval_v2_parse_117(B) [] 

### Ranking functions of CR eval_v2_parse_117(B) 

#### Partial ranking functions of CR eval_v2_parse_117(B) 


### Resulting Chains:eval_v2_parse_117(B) 
* [79]
* [78]...


### Merging Chains  eval_v2_parse_117/1 into  External patterns of execution 
* [[79]] --> 1 
* [[78]] --> 2 


### Specialization of cost equations loop_cont_eval_v2_parse_bb21_in/2 
* CE 40 is refined into CE [122,123] 
* CE 41 is refined into CE [124] 


#### Refined cost equations loop_cont_eval_v2_parse_bb21_in/2 
* CE 122: loop_cont_eval_v2_parse_bb21_in(C,A) = 0+ eval_v2_parse_117(A):1
     [C=5] 
* CE 123: loop_cont_eval_v2_parse_bb21_in(C,A) = 0+ eval_v2_parse_117(A):2
     [C=5] 
* CE 124: loop_cont_eval_v2_parse_bb21_in(C,A) = 0+ eval_v2_parse_bb45_in(A):1
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_v2_parse_bb21_in/2 
* CEs [122] --> Loop 80 
* CEs [124] --> Loop 81 
* CEs [123] --> Loop 82 

#### Loops of loop_cont_eval_v2_parse_bb21_in/2 
* Loop 80: loop_cont_eval_v2_parse_bb21_in(C,A) [C=5] 
* Loop 81: loop_cont_eval_v2_parse_bb21_in(C,A) [C=2] 
* Loop 82: loop_cont_eval_v2_parse_bb21_in(C,A) [C=5] 

### Ranking functions of CR loop_cont_eval_v2_parse_bb21_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_v2_parse_bb21_in(C,A) 


### Resulting Chains:loop_cont_eval_v2_parse_bb21_in(C,A) 
* [82]...
* [81]
* [80]


### Merging Chains  loop_cont_eval_v2_parse_bb21_in/2 into  External patterns of execution 
* [[81]] --> 1 
* [[80]] --> 2 
* [[82]] --> 3 


### Specialization of cost equations eval_v2_parse_83/2 
* CE 29 is refined into CE [125] 
* CE 30 is refined into CE [126,127,128,129,130,131,132,133,134] 


#### Refined cost equations eval_v2_parse_83/2 
* CE 125: eval_v2_parse_83(V_97,B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 126: eval_v2_parse_83(V_97,B) = 1+ eval_v2_parse_bb21_in(C,D):1+ loop_cont_eval_v2_parse_bb21_in(E,B):2
     [E=5,D=5,C=0,V_97=0] 
* CE 127: eval_v2_parse_83(V_97,B) = 1+ eval_v2_parse_bb21_in(C,D):1+ loop_cont_eval_v2_parse_bb21_in(E,B):3
     [E=5,D=5,C=0,V_97=0] 
* CE 128: eval_v2_parse_83(V_97,B) = 1+ eval_v2_parse_bb21_in(V_97,C):2+ loop_cont_eval_v2_parse_bb21_in(D,B):1
     [0>=V_97+1,D=2,C=2] 
* CE 129: eval_v2_parse_83(V_97,B) = 1+ eval_v2_parse_bb21_in(V_97,C):3+ loop_cont_eval_v2_parse_bb21_in(D,B):1
     [V_97>=1,D=2,C=2] 
* CE 130: eval_v2_parse_83(V_97,B) = 1+ eval_v2_parse_bb21_in(V_97,C):4+ loop_cont_eval_v2_parse_bb21_in(D,B):2
     [V_97>=1,D=5,C=5] 
* CE 131: eval_v2_parse_83(V_97,B) = 1+ eval_v2_parse_bb21_in(V_97,C):4+ loop_cont_eval_v2_parse_bb21_in(D,B):3
     [V_97>=1,D=5,C=5] 
* CE 132: eval_v2_parse_83(V_97,B) = 1+ eval_v2_parse_bb21_in(V_97,C):5
     [0>=V_97+1] 
* CE 133: eval_v2_parse_83(V_97,B) = 1+ eval_v2_parse_bb21_in(V_97,C):6
     [V_97>=1] 
* CE 134: eval_v2_parse_83(V_97,B) = 1+ eval_v2_parse_bb21_in(V_97,C):7
     [V_97>=2] 

### Cost equations --> "Loop" of eval_v2_parse_83/2 
* CEs [131,133,134] --> Loop 83 
* CEs [132] --> Loop 84 
* CEs [127] --> Loop 85 
* CEs [125,126,128,129,130] --> Loop 86 

#### Loops of eval_v2_parse_83/2 
* Loop 83: eval_v2_parse_83(V_97,B) [V_97>=1] 
* Loop 84: eval_v2_parse_83(V_97,B) [0>=V_97+1] 
* Loop 85: eval_v2_parse_83(V_97,B) [V_97=0] 
* Loop 86: eval_v2_parse_83(V_97,B) [] 

### Ranking functions of CR eval_v2_parse_83(V_97,B) 

#### Partial ranking functions of CR eval_v2_parse_83(V_97,B) 


### Resulting Chains:eval_v2_parse_83(V_97,B) 
* [86]
* [85]...
* [84]...
* [83]...


### Merging Chains  eval_v2_parse_83/2 into  External patterns of execution 
* [[86]] --> 1 
* [[85]] --> 2 
* [[84]] --> 3 
* [[83]] --> 4 


### Specialization of cost equations eval_v2_parse_77/1 
* CE 19 is refined into CE [135] 
* CE 20 is refined into CE [136,137,138,139] 


#### Refined cost equations eval_v2_parse_77/1 
* CE 135: eval_v2_parse_77(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 136: eval_v2_parse_77(B) = 0+ eval_v2_parse_83(C,B):1
     [] 
* CE 137: eval_v2_parse_77(B) = 0+ eval_v2_parse_83(C,B):2
     [C=0] 
* CE 138: eval_v2_parse_77(B) = 0+ eval_v2_parse_83(C,B):3
     [0>=C+1] 
* CE 139: eval_v2_parse_77(B) = 0+ eval_v2_parse_83(C,B):4
     [C>=1] 

### Cost equations --> "Loop" of eval_v2_parse_77/1 
* CEs [137,138,139] --> Loop 87 
* CEs [135,136] --> Loop 88 

#### Loops of eval_v2_parse_77/1 
* Loop 87: eval_v2_parse_77(B) [] 
* Loop 88: eval_v2_parse_77(B) [] 

### Ranking functions of CR eval_v2_parse_77(B) 

#### Partial ranking functions of CR eval_v2_parse_77(B) 


### Resulting Chains:eval_v2_parse_77(B) 
* [88]
* [87]...


### Merging Chains  eval_v2_parse_77/1 into  External patterns of execution 
* [[88]] --> 1 
* [[87]] --> 2 


### Specialization of cost equations eval_v2_parse_bb5_in/1 
* CE 10 is refined into CE [140] 
* CE 11 is refined into CE [141,142] 
* CE 12 is refined into CE [143,144] 
* CE 13 is refined into CE [145,146] 


#### Refined cost equations eval_v2_parse_bb5_in/1 
* CE 140: eval_v2_parse_bb5_in(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 141: eval_v2_parse_bb5_in(B) = 0+ eval_v2_parse_bb38_in(B):1
     [] 
* CE 142: eval_v2_parse_bb5_in(B) = 0+ eval_v2_parse_bb38_in(B):2
     [] 
* CE 143: eval_v2_parse_bb5_in(B) = 0+ eval_v2_parse_37(B):1
     [] 
* CE 144: eval_v2_parse_bb5_in(B) = 0+ eval_v2_parse_37(B):2
     [] 
* CE 145: eval_v2_parse_bb5_in(B) = 0+ eval_v2_parse_77(B):1
     [] 
* CE 146: eval_v2_parse_bb5_in(B) = 0+ eval_v2_parse_77(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_bb5_in/1 
* CEs [142,144,146] --> Loop 89 
* CEs [140,141,143,145] --> Loop 90 

#### Loops of eval_v2_parse_bb5_in/1 
* Loop 89: eval_v2_parse_bb5_in(B) [] 
* Loop 90: eval_v2_parse_bb5_in(B) [] 

### Ranking functions of CR eval_v2_parse_bb5_in(B) 

#### Partial ranking functions of CR eval_v2_parse_bb5_in(B) 


### Resulting Chains:eval_v2_parse_bb5_in(B) 
* [90]
* [89]...


### Merging Chains  eval_v2_parse_bb5_in/1 into  External patterns of execution 
* [[90]] --> 1 
* [[89]] --> 2 


### Specialization of cost equations eval_v2_parse_16/1 
* CE 8 is refined into CE [147] 
* CE 9 is refined into CE [148,149] 


#### Refined cost equations eval_v2_parse_16/1 
* CE 147: eval_v2_parse_16(B) = 0+ eval_v2_parse_bb45_in(B):1
     [] 
* CE 148: eval_v2_parse_16(B) = 0+ eval_v2_parse_bb5_in(B):1
     [] 
* CE 149: eval_v2_parse_16(B) = 0+ eval_v2_parse_bb5_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_16/1 
* CEs [149] --> Loop 91 
* CEs [147,148] --> Loop 92 

#### Loops of eval_v2_parse_16/1 
* Loop 91: eval_v2_parse_16(B) [] 
* Loop 92: eval_v2_parse_16(B) [] 

### Ranking functions of CR eval_v2_parse_16(B) 

#### Partial ranking functions of CR eval_v2_parse_16(B) 


### Resulting Chains:eval_v2_parse_16(B) 
* [92]
* [91]...


### Merging Chains  eval_v2_parse_16/1 into  External patterns of execution 
* [[92]] --> 1 
* [[91]] --> 2 


### Specialization of cost equations eval_v2_parse_4/1 
* CE 5 is refined into CE [150,151] 
* CE 6 is refined into CE [152,153] 


#### Refined cost equations eval_v2_parse_4/1 
* CE 150: eval_v2_parse_4(B) = 0+ eval_v2_parse_16(B):1
     [] 
* CE 151: eval_v2_parse_4(B) = 0+ eval_v2_parse_16(B):2
     [] 
* CE 152: eval_v2_parse_4(B) = 0+ eval_v2_parse_bb5_in(B):1
     [] 
* CE 153: eval_v2_parse_4(B) = 0+ eval_v2_parse_bb5_in(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_4/1 
* CEs [151,153] --> Loop 93 
* CEs [150,152] --> Loop 94 

#### Loops of eval_v2_parse_4/1 
* Loop 93: eval_v2_parse_4(B) [] 
* Loop 94: eval_v2_parse_4(B) [] 

### Ranking functions of CR eval_v2_parse_4(B) 

#### Partial ranking functions of CR eval_v2_parse_4(B) 


### Resulting Chains:eval_v2_parse_4(B) 
* [94]
* [93]...


### Merging Chains  eval_v2_parse_4/1 into  External patterns of execution 
* [[94]] --> 1 
* [[93]] --> 2 


### Specialization of cost equations eval_v2_parse_2/1 
* CE 3 is refined into CE [154,155] 
* CE 4 is refined into CE [156] 


#### Refined cost equations eval_v2_parse_2/1 
* CE 154: eval_v2_parse_2(B) = 0+ eval_v2_parse_4(B):1
     [] 
* CE 155: eval_v2_parse_2(B) = 0+ eval_v2_parse_4(B):2
     [] 
* CE 156: eval_v2_parse_2(B) = 0+ eval_v2_parse_bb48_in(B):1
     [] 

### Cost equations --> "Loop" of eval_v2_parse_2/1 
* CEs [154,156] --> Loop 95 
* CEs [155] --> Loop 96 

#### Loops of eval_v2_parse_2/1 
* Loop 95: eval_v2_parse_2(B) [] 
* Loop 96: eval_v2_parse_2(B) [] 

### Ranking functions of CR eval_v2_parse_2(B) 

#### Partial ranking functions of CR eval_v2_parse_2(B) 


### Resulting Chains:eval_v2_parse_2(B) 
* [96]...
* [95]


### Merging Chains  eval_v2_parse_2/1 into  External patterns of execution 
* [[95]] --> 1 
* [[96]] --> 2 


### Specialization of cost equations eval_v2_parse_start/1 
* CE 2 is refined into CE [157,158] 


#### Refined cost equations eval_v2_parse_start/1 
* CE 157: eval_v2_parse_start(B) = 0+ eval_v2_parse_2(B):1
     [] 
* CE 158: eval_v2_parse_start(B) = 0+ eval_v2_parse_2(B):2
     [] 

### Cost equations --> "Loop" of eval_v2_parse_start/1 
* CEs [158] --> Loop 97 
* CEs [157] --> Loop 98 

#### Loops of eval_v2_parse_start/1 
* Loop 97: eval_v2_parse_start(B) [] 
* Loop 98: eval_v2_parse_start(B) [] 

### Ranking functions of CR eval_v2_parse_start(B) 

#### Partial ranking functions of CR eval_v2_parse_start(B) 


### Resulting Chains:eval_v2_parse_start(B) 
* [98]
* [97]...


### Merging Chains  eval_v2_parse_start/1 into  External patterns of execution 
* [[98]] --> 1 
* [[97]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [39] 

 * loop 39:eval_v2_parse_bb39_in(V_179,B) -> [eval_v2_parse_bb39_in(V_179',B')] 
1
#### Cost of phase [39]:eval_v2_parse_bb39_in(V_179,B) -> [eval_v2_parse_bb39_in(V_179',B')] 
1*it(39)+0
#### Cost of phase [39]:eval_v2_parse_bb39_in(V_179,B) -> [eval_v2_parse_bb39_in(V_179',B')] 
1*it(39)+0
#### Cost of phase [39]:eval_v2_parse_bb39_in(V_179,B) -> [eval_v2_parse_bb39_in(V_179',B')] 
1*it(39)+0
#### Cost of chains of eval_v2_parse_bb39_in(V_179,B):
* Chain [[39]]...: 1*it(39)+0
  with precondition: [] 

* Chain [[39],41]: 1*it(39)+0
  with precondition: [B=2] 

* Chain [[39],40]: 1*it(39)+0
  with precondition: [B=4] 

* Chain [41]: 0
  with precondition: [B=2] 

* Chain [40]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_v2_parse_bb45_in(B):
* Chain [42]: 0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_bb48_in(B):
* Chain [43]: 0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_173(B):
* Chain [44]: 0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_bb43_in(B):
* Chain [45]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_v2_parse_bb39_in(B,A):
* Chain [47]: 0
  with precondition: [B=2] 

* Chain [46]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_v2_parse_bb38_in(B):
* Chain [49]: 1*aux(3)+0
  with precondition: [] 

* Chain [48]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_v2_parse_66(B):
* Chain [51]: 1*aux(4)+0
  with precondition: [] 

* Chain [50]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_v2_parse_50(B):
* Chain [53]: 1*aux(5)+0
  with precondition: [] 

* Chain [52]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_37(B):
* Chain [55]: 1*aux(7)+0
  with precondition: [] 

* Chain [54]...: 1*aux(8)+0
  with precondition: [] 


#### Cost of loops [56,57] 

 * loop 56:eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) -> [eval_v2_parse_bb23_in(V_bytes_0',V_112',V_114',V_ehflags4_0',B',C')] 
1
 * loop 57:eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) -> [eval_v2_parse_bb23_in(V_bytes_0',V_112',V_114',V_ehflags4_0',B',C')] 
1
#### Cost of phase [56,57]:eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) -> [eval_v2_parse_bb23_in(V_bytes_0',V_112',V_114',V_ehflags4_0',B',C')] 
2*it(56)+0
#### Cost of phase [56,57]:eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) -> [eval_v2_parse_bb23_in(V_bytes_0',V_112',V_114',V_ehflags4_0',B',C')] 
2*it(56)+0
#### Cost of phase [56,57]:eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) -> [eval_v2_parse_bb23_in(V_bytes_0',V_112',V_114',V_ehflags4_0',B',C')] 
2*it(56)+0
#### Cost of phase [56,57]:eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C) -> [eval_v2_parse_bb23_in(V_bytes_0',V_112',V_114',V_ehflags4_0',B',C')] 
2*it(56)+0
#### Cost of chains of eval_v2_parse_bb23_in(V_bytes_0,V_112,V_114,V_ehflags4_0,B,C):
* Chain [[56,57]]...: 2*it(56)+0
  with precondition: [V_bytes_0=V_112+1,B>=2,3>=B] 

* Chain [[56,57],60]: 2*it(56)+0
  with precondition: [B=3,V_bytes_0=V_112+1,V_bytes_0=C+1] 

* Chain [[56,57],59]: 2*it(56)+0
  with precondition: [B=2,V_bytes_0=V_112+1] 

* Chain [[56,57],58]: 2*it(56)+0
  with precondition: [B=2,V_bytes_0=V_112+1] 

* Chain [60]: 0
  with precondition: [V_ehflags4_0=0,B=3,V_112+1=V_bytes_0,V_112=C] 

* Chain [59]: 0
  with precondition: [B=2,V_112+1=V_bytes_0,0>=V_ehflags4_0+1] 

* Chain [58]: 0
  with precondition: [B=2,V_112+1=V_bytes_0,V_ehflags4_0>=1] 


#### Cost of loops [64] 

 * loop 64:eval_v2_parse_bb21_in(V_bytes_0,B) -> [eval_v2_parse_bb21_in(V_bytes_0',B')] 
1*s(20)+2
#### Cost of phase [64]:eval_v2_parse_bb21_in(V_bytes_0,B) -> [eval_v2_parse_bb21_in(V_bytes_0',B')] 
3*it(64)+0
#### Cost of phase [64]:eval_v2_parse_bb21_in(V_bytes_0,B) -> [eval_v2_parse_bb21_in(V_bytes_0',B')] 
3*it(64)+0
#### Cost of phase [64]:eval_v2_parse_bb21_in(V_bytes_0,B) -> [eval_v2_parse_bb21_in(V_bytes_0',B')] 
3*it(64)+0
#### Cost of loops [63] 

 * loop 63:eval_v2_parse_bb21_in(V_bytes_0,B) -> [eval_v2_parse_bb21_in(V_bytes_0',B')] 
1*s(26)+2
#### Cost of phase [63]:eval_v2_parse_bb21_in(V_bytes_0,B) -> [eval_v2_parse_bb21_in(V_bytes_0',B')] 
2*it(63)+1*s(27)+0
  Such that:it(63) =< V_bytes_0
it(63) =< V_bytes_0-V_bytes_0'

#### Cost of phase [63]:eval_v2_parse_bb21_in(V_bytes_0,B) -> [eval_v2_parse_bb21_in(V_bytes_0',B')] 
2*it(63)+1*s(27)+0
  Such that:it(63) =< V_bytes_0
it(63) =< V_bytes_0-V_bytes_0'

#### Cost of phase [63]:eval_v2_parse_bb21_in(V_bytes_0,B) -> [eval_v2_parse_bb21_in(V_bytes_0',B')] 
2*it(63)+1*s(27)+0
  Such that:it(63) =< V_bytes_0
it(63) =< V_bytes_0-V_bytes_0'

#### Cost of chains of eval_v2_parse_bb21_in(V_bytes_0,B):
* Chain [[64]]...: 3*it(64)+0
  with precondition: [0>=V_bytes_0+1] 

* Chain [[64],66]: 4*aux(11)+0
  with precondition: [B=2,0>=V_bytes_0+1] 

* Chain [[64],62]...: 4*aux(12)+0
  with precondition: [0>=V_bytes_0+1] 

* Chain [[63],67]: 2*it(63)+1*s(27)+0
  Such that:it(63) =< V_bytes_0

  with precondition: [B=5,V_bytes_0>=1] 

* Chain [[63],65]: 2*aux(13)+2*it(63)+0
  Such that:it(63) =< V_bytes_0

  with precondition: [B=2,V_bytes_0>=2] 

* Chain [[63],61]...: 2*aux(14)+2*it(63)+0
  Such that:it(63) =< V_bytes_0

  with precondition: [V_bytes_0>=2] 

* Chain [67]: 0
  with precondition: [V_bytes_0=0,B=5] 

* Chain [66]: 1*aux(11)+0
  with precondition: [B=2,0>=V_bytes_0+1] 

* Chain [65]: 1*aux(13)+0
  with precondition: [B=2,V_bytes_0>=1] 

* Chain [62]...: 1*aux(12)+0
  with precondition: [0>=V_bytes_0+1] 

* Chain [61]...: 1*aux(14)+0
  with precondition: [V_bytes_0>=1] 


#### Cost of chains of eval_v2_parse_147(B):
* Chain [69]: 1*aux(17)+0
  with precondition: [] 

* Chain [68]...: 1*s(40)+1
  with precondition: [] 


#### Cost of chains of eval_v2_parse_bb35_in(B):
* Chain [71]: 1*aux(18)+0
  with precondition: [] 

* Chain [70]...: 1*aux(19)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_142(B):
* Chain [73]: 1*aux(20)+0
  with precondition: [] 

* Chain [72]...: 1*s(46)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_132(B):
* Chain [75]: 1*aux(21)+0
  with precondition: [] 

* Chain [74]...: 1*s(48)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_bb32_in(B):
* Chain [77]: 1*aux(22)+0
  with precondition: [] 

* Chain [76]...: 1*aux(23)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_117(B):
* Chain [79]: 1*s(53)+0
  with precondition: [] 

* Chain [78]...: 1*s(54)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_v2_parse_bb21_in(C,A):
* Chain [82]...: 1*s(55)+0
  with precondition: [C=5] 

* Chain [81]: 0
  with precondition: [C=2] 

* Chain [80]: 1*s(56)+0
  with precondition: [C=5] 


#### Cost of chains of eval_v2_parse_83(V_97,B):
* Chain [86]: 7*s(57)+4*s(59)+1
  Such that:aux(24) =< V_97
s(59) =< aux(24)

  with precondition: [] 

* Chain [85]...: 1*s(64)+1
  with precondition: [V_97=0] 

* Chain [84]...: 1*s(65)+1
  with precondition: [0>=V_97+1] 

* Chain [83]...: 4*s(66)+5*s(67)+1
  Such that:aux(25) =< V_97
s(66) =< aux(25)

  with precondition: [V_97>=1] 


#### Cost of chains of eval_v2_parse_77(B):
* Chain [88]: 1*aux(26)+0
  with precondition: [] 

* Chain [87]...: 1*aux(27)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_bb5_in(B):
* Chain [90]: 1*aux(28)+0
  with precondition: [] 

* Chain [89]...: 1*aux(29)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_16(B):
* Chain [92]: 1*aux(30)+0
  with precondition: [] 

* Chain [91]...: 1*s(87)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_4(B):
* Chain [94]: 1*aux(31)+0
  with precondition: [] 

* Chain [93]...: 1*aux(32)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_2(B):
* Chain [96]...: 1*s(92)+0
  with precondition: [] 

* Chain [95]: 1*aux(33)+0
  with precondition: [] 


#### Cost of chains of eval_v2_parse_start(B):
* Chain [98]: 1*s(94)+0
  with precondition: [] 

* Chain [97]...: 1*s(95)+0
  with precondition: [] 


Closed-form bounds of eval_v2_parse_start(B): 
-------------------------------------
* Chain [98] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [97]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_v2_parse_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 132 ms.
* Invariants computed in 114 ms.
   - Backward Invariants 69 ms.
   - Transitive Invariants 13 ms.
* Refinement performed in 258 ms.
* Termination proved in 20 ms.
* Upper bounds computed in 192 ms.
   - Equation cost structures 105 ms.
   - Phase cost structures 30 ms.
   - Chain cost structures 52 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 897 ms.

