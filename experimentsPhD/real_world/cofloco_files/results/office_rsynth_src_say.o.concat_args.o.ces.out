Warning: Ignored call to eval_concat_args_stop/1 in equation eval_concat_args_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_concat_args_1/6,eval_concat_args_2/7,eval_concat_args_bb1_in/6]
1. non_recursive  : [eval_concat_args_bb11_in/1]
2. recursive  : [eval_concat_args_bb6_in/6]
3. recursive  : [eval_concat_args_bb4_in/3,loop_cont_eval_concat_args_bb6_in/4]
4. non_recursive  : [loop_cont_eval_concat_args_bb4_in/2]
5. non_recursive  : [eval_concat_args_10/2]
6. non_recursive  : [eval_concat_args_9/3]
7. non_recursive  : [loop_cont_eval_concat_args_bb1_in/4]
8. non_recursive  : [eval_concat_args_bb0_in/2]
9. non_recursive  : [eval_concat_args_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_concat_args_bb1_in/6
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_concat_args_bb6_in/6
3. SCC is partially evaluated into eval_concat_args_bb4_in/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_concat_args_10/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_concat_args_bb0_in/2
9. SCC is partially evaluated into eval_concat_args_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_concat_args_bb1_in/6 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


#### Refined cost equations eval_concat_args_bb1_in/6 
* CE 12: eval_concat_args_bb1_in(A,B,C,D,A,C) = 0
     [B>=A,B>=1,D=4] 
* CE 13: eval_concat_args_bb1_in(V_argc,V_i_0,V_len_0,B,C,D) = 1+ eval_concat_args_bb1_in(V_argc,E,F,G,C,D)
     [V_argc>=V_i_0+1,V_i_0>=1,V_i_0+1=E,G=4,B=4] 

### Cost equations --> "Loop" of eval_concat_args_bb1_in/6 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_concat_args_bb1_in/6 
* Loop 10: eval_concat_args_bb1_in(V_argc,V_i_0,V_len_0,B,C,D)->  eval_concat_args_bb1_in(V_argc,V_i_0',V_len_0',B',C,D)
                  [V_argc>=V_i_0+1,V_i_0>=1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 11: eval_concat_args_bb1_in(A,B,C,D,A,C) [B>=A,B>=1,D=4] 

### Ranking functions of CR eval_concat_args_bb1_in(V_argc,V_i_0,V_len_0,B,C,D) 
* RF of phase [10]: [V_argc-V_i_0]

#### Partial ranking functions of CR eval_concat_args_bb1_in(V_argc,V_i_0,V_len_0,B,C,D) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_argc-V_i_0


### Resulting Chains:eval_concat_args_bb1_in(V_argc,V_i_0,V_len_0,B,C,D) 
* [[10],11]
* [11]


### Merging Chains  eval_concat_args_bb1_in/6 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[10]]] --> 2 


### Specialization of cost equations eval_concat_args_bb6_in/6 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 


#### Refined cost equations eval_concat_args_bb6_in/6 
* CE 14: eval_concat_args_bb6_in(A,B,C,D,A,C) = 0
     [A>=C,C=B+1,D=2] 
* CE 15: eval_concat_args_bb6_in(V_argc,V_i_1,V_14,B,C,D) = 1+ eval_concat_args_bb6_in(V_argc,E,V_14,F,C,D)
     [V_argc>=V_14,V_14=E+1,V_14=V_i_1+1,F=2,B=2] 

### Cost equations --> "Loop" of eval_concat_args_bb6_in/6 
* CEs [15] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_concat_args_bb6_in/6 
* Loop 12: eval_concat_args_bb6_in(V_argc,V_i_1,V_14,B,C,D)->  eval_concat_args_bb6_in(V_argc,V_i_1',V_14,B',C,D)
                  [V_argc>=V_14,V_14=V_i_1'+1,V_14=V_i_1+1,B'=2,B=2] 
* Loop 13: eval_concat_args_bb6_in(A,B,C,D,A,C) [A>=C,C=B+1,D=2] 

### Ranking functions of CR eval_concat_args_bb6_in(V_argc,V_i_1,V_14,B,C,D) 

#### Partial ranking functions of CR eval_concat_args_bb6_in(V_argc,V_i_1,V_14,B,C,D) 


### Resulting Chains:eval_concat_args_bb6_in(V_argc,V_i_1,V_14,B,C,D) 
* [[12]]...
* [[12],13]
* [13]


### Merging Chains  eval_concat_args_bb6_in/6 into  External patterns of execution 
* [[13],[13,[12]]] --> 1 
* [[[12]]] --> 2 


### Specialization of cost equations eval_concat_args_bb4_in/3 
* CE 9 is refined into CE [16] 
* CE 8 is refined into CE [17,18] 


#### Refined cost equations eval_concat_args_bb4_in/3 
* CE 16: eval_concat_args_bb4_in(V_argc,V_i_1,B) = 0
     [V_i_1>=V_argc,B=3] 
* CE 17: eval_concat_args_bb4_in(V_argc,V_i_1,B) = 2+ eval_concat_args_bb6_in(V_argc,C,D,E,V_argc,D):1+ eval_concat_args_bb4_in(V_argc,D,F)
     [V_argc>=D,D=C+1,D=V_i_1+1,F=3,E=2,B=3] 
* CE 18: eval_concat_args_bb4_in(V_argc,V_i_1,B) = 2+ eval_concat_args_bb6_in(V_argc,C,D,E,F,G):2
     [V_argc>=D,D=C+1,D=V_i_1+1,H=3,E=2,B=3] 

### Cost equations --> "Loop" of eval_concat_args_bb4_in/3 
* CEs [18] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of eval_concat_args_bb4_in/3 
* Loop 14: eval_concat_args_bb4_in(V_argc,V_i_1,B) [V_argc>=V_i_1+1,B=3] 
* Loop 15: eval_concat_args_bb4_in(V_argc,V_i_1,B)->  eval_concat_args_bb4_in(V_argc,V_i_1',B')
                  [V_argc>=V_i_1',V_i_1'=V_i_1+1,B'=3,B=3] 
* Loop 16: eval_concat_args_bb4_in(V_argc,V_i_1,B) [V_i_1>=V_argc,B=3] 

### Ranking functions of CR eval_concat_args_bb4_in(V_argc,V_i_1,B) 
* RF of phase [15]: [V_argc-V_i_1]

#### Partial ranking functions of CR eval_concat_args_bb4_in(V_argc,V_i_1,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_argc-V_i_1


### Resulting Chains:eval_concat_args_bb4_in(V_argc,V_i_1,B) 
* [[15],16]
* [[15],14]...
* [16]
* [14]...


### Merging Chains  eval_concat_args_bb4_in/3 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 
* [[14]] --> 3 
* [[14,[15]]] --> 4 


### Specialization of cost equations eval_concat_args_10/2 
* CE 6 is refined into CE [19,20,21,22] 
* CE 7 is refined into CE [23] 


#### Refined cost equations eval_concat_args_10/2 
* CE 19: eval_concat_args_10(V_argc,B) = 1+ eval_concat_args_bb4_in(V_argc,C,D):1
     [1>=V_argc,D=3,C=1] 
* CE 20: eval_concat_args_10(V_argc,B) = 1+ eval_concat_args_bb4_in(V_argc,C,D):2
     [V_argc>=2,D=3,C=1] 
* CE 21: eval_concat_args_10(V_argc,B) = 1+ eval_concat_args_bb4_in(V_argc,C,D):3
     [V_argc>=2,D=3,C=1] 
* CE 22: eval_concat_args_10(V_argc,B) = 1+ eval_concat_args_bb4_in(V_argc,C,D):4
     [V_argc>=3,D=3,C=1] 
* CE 23: eval_concat_args_10(V_argc,B) = 0
     [] 

### Cost equations --> "Loop" of eval_concat_args_10/2 
* CEs [19,20,23] --> Loop 17 
* CEs [21,22] --> Loop 18 

#### Loops of eval_concat_args_10/2 
* Loop 17: eval_concat_args_10(V_argc,B) [] 
* Loop 18: eval_concat_args_10(V_argc,B) [V_argc>=2] 

### Ranking functions of CR eval_concat_args_10(V_argc,B) 

#### Partial ranking functions of CR eval_concat_args_10(V_argc,B) 


### Resulting Chains:eval_concat_args_10(V_argc,B) 
* [18]...
* [17]


### Merging Chains  eval_concat_args_10/2 into  External patterns of execution 
* [[17]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_concat_args_bb0_in/2 
* CE 3 is refined into CE [24,25,26] 


#### Refined cost equations eval_concat_args_bb0_in/2 
* CE 24: eval_concat_args_bb0_in(V_argc,B) = 1+ eval_concat_args_bb1_in(V_argc,C,D,E,V_argc,F):1+ eval_concat_args_10(V_argc,B):1
     [1>=V_argc,F=0,E=4,D=0,C=1] 
* CE 25: eval_concat_args_bb0_in(V_argc,B) = 1+ eval_concat_args_bb1_in(V_argc,C,D,E,V_argc,F):2+ eval_concat_args_10(V_argc,B):1
     [V_argc>=2,E=4,D=0,C=1] 
* CE 26: eval_concat_args_bb0_in(V_argc,B) = 1+ eval_concat_args_bb1_in(V_argc,C,D,E,V_argc,F):2+ eval_concat_args_10(V_argc,B):2
     [V_argc>=2,E=4,D=0,C=1] 

### Cost equations --> "Loop" of eval_concat_args_bb0_in/2 
* CEs [26] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [24] --> Loop 21 

#### Loops of eval_concat_args_bb0_in/2 
* Loop 19: eval_concat_args_bb0_in(V_argc,B) [V_argc>=2] 
* Loop 20: eval_concat_args_bb0_in(V_argc,B) [V_argc>=2] 
* Loop 21: eval_concat_args_bb0_in(V_argc,B) [1>=V_argc] 

### Ranking functions of CR eval_concat_args_bb0_in(V_argc,B) 

#### Partial ranking functions of CR eval_concat_args_bb0_in(V_argc,B) 


### Resulting Chains:eval_concat_args_bb0_in(V_argc,B) 
* [21]
* [20]
* [19]...


### Merging Chains  eval_concat_args_bb0_in/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 


### Specialization of cost equations eval_concat_args_start/2 
* CE 2 is refined into CE [27,28,29] 


#### Refined cost equations eval_concat_args_start/2 
* CE 27: eval_concat_args_start(V_argc,B) = 0+ eval_concat_args_bb0_in(V_argc,B):1
     [1>=V_argc] 
* CE 28: eval_concat_args_start(V_argc,B) = 0+ eval_concat_args_bb0_in(V_argc,B):2
     [V_argc>=2] 
* CE 29: eval_concat_args_start(V_argc,B) = 0+ eval_concat_args_bb0_in(V_argc,B):3
     [V_argc>=2] 

### Cost equations --> "Loop" of eval_concat_args_start/2 
* CEs [29] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [27] --> Loop 24 

#### Loops of eval_concat_args_start/2 
* Loop 22: eval_concat_args_start(V_argc,B) [V_argc>=2] 
* Loop 23: eval_concat_args_start(V_argc,B) [V_argc>=2] 
* Loop 24: eval_concat_args_start(V_argc,B) [1>=V_argc] 

### Ranking functions of CR eval_concat_args_start(V_argc,B) 

#### Partial ranking functions of CR eval_concat_args_start(V_argc,B) 


### Resulting Chains:eval_concat_args_start(V_argc,B) 
* [24]
* [23]
* [22]...


### Merging Chains  eval_concat_args_start/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_concat_args_bb1_in(V_argc,V_i_0,V_len_0,B,C,D) -> [eval_concat_args_bb1_in(V_argc',V_i_0',V_len_0',B',C',D')] 
1
#### Cost of phase [10]:eval_concat_args_bb1_in(V_argc,V_i_0,V_len_0,B,C,D) -> [eval_concat_args_bb1_in(V_argc',V_i_0',V_len_0',B',C',D')] 
1*it(10)+0
  Such that:it(10) =< V_argc-V_i_0
it(10) =< V_argc-V_i_0-V_argc'+V_i_0'

#### Cost of chains of eval_concat_args_bb1_in(V_argc,V_i_0,V_len_0,B,C,D):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_argc-V_i_0

  with precondition: [B=4,V_argc=C,V_i_0>=1,V_argc>=V_i_0+1] 

* Chain [11]: 0
  with precondition: [B=4,D=V_len_0,V_argc=C,V_i_0>=1,V_i_0>=V_argc] 


#### Cost of loops [12] 

 * loop 12:eval_concat_args_bb6_in(V_argc,V_i_1,V_14,B,C,D) -> [eval_concat_args_bb6_in(V_argc',V_i_1',V_14',B',C',D')] 
1
#### Cost of phase [12]:eval_concat_args_bb6_in(V_argc,V_i_1,V_14,B,C,D) -> [eval_concat_args_bb6_in(V_argc',V_i_1',V_14',B',C',D')] 
1*it(12)+0
#### Cost of phase [12]:eval_concat_args_bb6_in(V_argc,V_i_1,V_14,B,C,D) -> [eval_concat_args_bb6_in(V_argc',V_i_1',V_14',B',C',D')] 
1*it(12)+0
#### Cost of chains of eval_concat_args_bb6_in(V_argc,V_i_1,V_14,B,C,D):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [V_argc>=V_14,V_i_1+1=V_14,B=2] 

* Chain [[12],13]: 1*it(12)+0
  with precondition: [B=2,V_i_1+1=V_14,V_argc=C,V_i_1+1=D,V_argc>=V_i_1+1] 

* Chain [13]: 0
  with precondition: [B=2,V_i_1+1=V_14,V_argc=C,V_i_1+1=D,V_argc>=V_i_1+1] 


#### Cost of loops [15] 

 * loop 15:eval_concat_args_bb4_in(V_argc,V_i_1,B) -> [eval_concat_args_bb4_in(V_argc',V_i_1',B')] 
1*s(3)+2
#### Cost of phase [15]:eval_concat_args_bb4_in(V_argc,V_i_1,B) -> [eval_concat_args_bb4_in(V_argc',V_i_1',B')] 
2*it(15)+1*s(4)+0
  Such that:it(15) =< V_argc-V_i_1
it(15) =< V_argc-V_i_1-V_argc'+V_i_1'

#### Cost of phase [15]:eval_concat_args_bb4_in(V_argc,V_i_1,B) -> [eval_concat_args_bb4_in(V_argc',V_i_1',B')] 
2*it(15)+1*s(4)+0
  Such that:it(15) =< V_argc-V_i_1
it(15) =< V_argc-V_i_1-V_argc'+V_i_1'

#### Cost of chains of eval_concat_args_bb4_in(V_argc,V_i_1,B):
* Chain [[15],16]: 2*it(15)+1*s(4)+0
  Such that:it(15) =< V_argc-V_i_1

  with precondition: [B=3,V_i_1>=1,V_argc>=V_i_1+1] 

* Chain [[15],14]...: 2*it(15)+2*s(4)+2
  Such that:it(15) =< V_argc-V_i_1

  with precondition: [B=3,V_i_1>=1,V_argc>=V_i_1+2] 

* Chain [16]: 0
  with precondition: [B=3,V_i_1>=1,V_i_1>=V_argc] 

* Chain [14]...: 1*s(5)+2
  with precondition: [B=3,V_i_1>=1,V_argc>=V_i_1+1] 


#### Cost of chains of eval_concat_args_10(V_argc,B):
* Chain [18]...: 3*s(6)+2*s(7)+3
  Such that:s(7) =< V_argc

  with precondition: [V_argc>=2] 

* Chain [17]: 2*s(9)+1*s(10)+1
  Such that:s(9) =< V_argc

  with precondition: [] 


#### Cost of chains of eval_concat_args_bb0_in(V_argc,B):
* Chain [21]: 2*s(11)+1*s(12)+2
  Such that:s(11) =< V_argc

  with precondition: [1>=V_argc] 

* Chain [20]: 3*s(13)+1*s(15)+2
  Such that:aux(2) =< V_argc
s(13) =< aux(2)

  with precondition: [V_argc>=2] 

* Chain [19]...: 3*s(16)+3*s(18)+4
  Such that:aux(3) =< V_argc
s(16) =< aux(3)

  with precondition: [V_argc>=2] 


#### Cost of chains of eval_concat_args_start(V_argc,B):
* Chain [24]: 2*s(19)+1*s(20)+2
  Such that:s(19) =< V_argc

  with precondition: [1>=V_argc] 

* Chain [23]: 3*s(22)+1*s(23)+2
  Such that:s(21) =< V_argc
s(22) =< s(21)

  with precondition: [V_argc>=2] 

* Chain [22]...: 3*s(25)+3*s(26)+4
  Such that:s(24) =< V_argc
s(25) =< s(24)

  with precondition: [V_argc>=2] 


Closed-form bounds of eval_concat_args_start(V_argc,B): 
-------------------------------------
* Chain [24] with precondition: [1>=V_argc] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23] with precondition: [V_argc>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [V_argc>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_concat_args_start(V_argc,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 40 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 35 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 137 ms.

