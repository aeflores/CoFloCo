Warning: Ignored call to eval_testStream_stop/1 in equation eval_testStream_27/1 
Warning: Ignored call to eval_testStream_stop/1 in equation eval_testStream_41/1 
Warning: Ignored call to eval_testStream_stop/1 in equation eval_testStream_43/1 
Warning: Ignored call to eval_testStream_stop/1 in equation eval_testStream_48/1 
Warning: Ignored call to eval_testStream_stop/1 in equation eval_testStream_61/1 
Warning: Ignored call to eval_testStream_stop/1 in equation eval_testStream_72/1 
Warning: Ignored call to eval_testStream_stop/1 in equation eval_testStream_bb35_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_testStream_14/13,eval_testStream_15/13,eval_testStream_bb4_in/13]
1. recursive  : [eval_testStream_bb24_in/15]
2. recursive  : [eval_testStream_44/10,eval_testStream_45/10,eval_testStream_57/11,eval_testStream_58/11,eval_testStream_64/11,eval_testStream_65/11,eval_testStream_7/10,eval_testStream_8/10,eval_testStream_bb2_in/7,loop_cont_eval_testStream_bb24_in/12,loop_cont_eval_testStream_bb4_in/11]
3. non_recursive  : [eval_testStream_72/1]
4. non_recursive  : [eval_testStream_71/4]
5. non_recursive  : [eval_testStream_bb32_in/4]
6. non_recursive  : [eval_testStream_48/1]
7. non_recursive  : [eval_testStream_47/4]
8. non_recursive  : [eval_testStream_61/1]
9. non_recursive  : [eval_testStream_60/4]
10. non_recursive  : [eval_testStream_bb35_in/1]
11. non_recursive  : [eval_testStream_76/1]
12. non_recursive  : [eval_testStream_75/4]
13. non_recursive  : [eval_testStream_70/4]
14. non_recursive  : [eval_testStream_69/4]
15. non_recursive  : [eval_testStream_68/4]
16. non_recursive  : [eval_testStream_67/4]
17. non_recursive  : [eval_testStream_27/1]
18. non_recursive  : [eval_testStream_26/4]
19. non_recursive  : [eval_testStream_29/1]
20. non_recursive  : [eval_testStream_28/4]
21. non_recursive  : [eval_testStream_33/1]
22. non_recursive  : [eval_testStream_32/4]
23. non_recursive  : [eval_testStream_37/1]
24. non_recursive  : [eval_testStream_36/4]
25. non_recursive  : [eval_testStream_bb14_in/4]
26. non_recursive  : [eval_testStream_31/4]
27. non_recursive  : [eval_testStream_30/4]
28. non_recursive  : [eval_testStream_39/1]
29. non_recursive  : [eval_testStream_38/4]
30. non_recursive  : [eval_testStream_41/1]
31. non_recursive  : [eval_testStream_40/4]
32. non_recursive  : [eval_testStream_43/1]
33. non_recursive  : [eval_testStream_42/4]
34. non_recursive  : [eval_testStream_NewDefault_in/4]
35. non_recursive  : [eval_testStream_bb9_in/4]
36. non_recursive  : [eval_testStream_23/4]
37. non_recursive  : [eval_testStream_22/4]
38. non_recursive  : [eval_testStream_20/4]
39. non_recursive  : [eval_testStream_19/4]
40. non_recursive  : [eval_testStream_bb7_in/4]
41. non_recursive  : [loop_cont_eval_testStream_bb2_in/5]
42. non_recursive  : [eval_testStream_2/4]
43. non_recursive  : [eval_testStream_1/4]
44. non_recursive  : [eval_testStream_bb0_in/4]
45. non_recursive  : [eval_testStream_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_testStream_bb4_in/13
1. SCC is partially evaluated into eval_testStream_bb24_in/15
2. SCC is partially evaluated into eval_testStream_bb2_in/7
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_testStream_70/4
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_testStream_68/4
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_testStream_bb14_in/4
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is partially evaluated into eval_testStream_bb9_in/4
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is partially evaluated into eval_testStream_20/4
39. SCC is completely evaluated into other SCCs
40. SCC is completely evaluated into other SCCs
41. SCC is partially evaluated into loop_cont_eval_testStream_bb2_in/5
42. SCC is partially evaluated into eval_testStream_2/4
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is partially evaluated into eval_testStream_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_testStream_bb4_in/13 
* CE 17 is refined into CE [27] 
* CE 16 is refined into CE [28] 
* CE 15 is refined into CE [29] 


#### Refined cost equations eval_testStream_bb4_in/13 
* CE 27: eval_testStream_bb4_in(A,B,C,C,A,D,E,A,B,C,C,A,D) = 0
     [E=3] 
* CE 28: eval_testStream_bb4_in(A,B,C,C,A,D,E,A,B,C,F,G,H) = 0
     [E=2] 
* CE 29: eval_testStream_bb4_in(A,B,C,C,A,D,E,F,G,H,I,J,K) = 1+ eval_testStream_bb4_in(A,B,C,C,A,D,E,F,G,H,I,J,K)
     [E>=2,3>=E] 

### Cost equations --> "Loop" of eval_testStream_bb4_in/13 
* CEs [29] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [28] --> Loop 24 

#### Loops of eval_testStream_bb4_in/13 
* Loop 22: eval_testStream_bb4_in(A,B,C,C,A,D,E,F,G,H,I,J,K)->  eval_testStream_bb4_in(A,B,C,C,A,D,E,F,G,H,I,J,K)
                  [E>=2,3>=E] 
* Loop 23: eval_testStream_bb4_in(A,B,C,C,A,D,E,A,B,C,C,A,D) [E=3] 
* Loop 24: eval_testStream_bb4_in(A,B,C,C,A,D,E,A,B,C,F,G,H) [E=2] 

### Ranking functions of CR eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,B,C,D,E,F,G,H) 


### Resulting Chains:eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,B,C,D,E,F,G,H) 
* [[22]]...
* [[22],24]
* [[22],23]
* [24]
* [23]


### Merging Chains  eval_testStream_bb4_in/13 into  External patterns of execution 
* [[24],[24,[22]]] --> 1 
* [[23],[23,[22]]] --> 2 
* [[[22]]] --> 3 


### Specialization of cost equations eval_testStream_bb24_in/15 
* CE 19 is refined into CE [30] 
* CE 18 is refined into CE [31] 


#### Refined cost equations eval_testStream_bb24_in/15 
* CE 30: eval_testStream_bb24_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) = 0
     [G>=0,H=4] 
* CE 31: eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0,B,C,D,E,F,G,H,I) = 1+ eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,J,K,C,D,E,F,G,H,I)
     [V_i_0>=0,V_i_0+1=J,K=4,B=4] 

### Cost equations --> "Loop" of eval_testStream_bb24_in/15 
* CEs [31] --> Loop 25 
* CEs [30] --> Loop 26 

#### Loops of eval_testStream_bb24_in/15 
* Loop 25: eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0,B,C,D,E,F,G,H,I)->  eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0',B',C,D,E,F,G,H,I)
                  [V_i_0>=0,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 26: eval_testStream_bb24_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) [G>=0,H=4] 

### Ranking functions of CR eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0,B,C,D,E,F,G,H,I) 
* [[25]]...
* [[25],26]
* [26]


### Merging Chains  eval_testStream_bb24_in/15 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[25]]] --> 2 
* [[[25]]] --> 3 


### Specialization of cost equations eval_testStream_bb2_in/7 
* CE 7 is refined into CE [32,33,34,35] 
* CE 6 is refined into CE [36,37,38,39] 
* CE 10 is refined into CE [40,41] 
* CE 8 is refined into CE [42] 
* CE 9 is refined into CE [43,44] 
* CE 5 is refined into CE [45,46,47,48] 


#### Refined cost equations eval_testStream_bb2_in/7 
* CE 32: eval_testStream_bb2_in(A,B,C,D,A,B,C) = 2+ eval_testStream_bb4_in(A,B,C,C,A,E,F,A,B,C,C,A,E):2+ eval_testStream_bb24_in(A,B,C,C,A,E,G,H,A,B,C,C,A,E,I):1
     [I=0,H=4,G=0,F=3,D=7] 
* CE 33: eval_testStream_bb2_in(A,B,C,D,A,B,C) = 2+ eval_testStream_bb4_in(A,B,C,C,A,E,F,A,B,C,C,A,E):2+ eval_testStream_bb24_in(A,B,C,C,A,E,G,H,A,B,C,C,A,E,I):2
     [I>=1,H=4,G=0,F=3,D=7] 
* CE 34: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 2+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F):2+ eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,H,I,C,D,E,J,K,L,M):3
     [I=4,H=0,G=3,B=7] 
* CE 35: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 2+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,H,I,J,K,L,M):3
     [N=4,O=0,G=3,B=7] 
* CE 36: eval_testStream_bb2_in(A,B,C,D,A,B,C) = 2+ eval_testStream_bb4_in(A,B,C,C,A,E,F,A,B,C,C,A,E):2+ eval_testStream_bb24_in(A,B,C,C,A,E,G,H,A,B,C,C,A,E,I):1
     [I=0,H=4,G=0,F=3,D=6] 
* CE 37: eval_testStream_bb2_in(A,B,C,D,A,B,C) = 2+ eval_testStream_bb4_in(A,B,C,C,A,E,F,A,B,C,C,A,E):2+ eval_testStream_bb24_in(A,B,C,C,A,E,G,H,A,B,C,C,A,E,I):2
     [I>=1,H=4,G=0,F=3,D=6] 
* CE 38: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 2+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F):2+ eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,H,I,C,D,E,J,K,L,M):3
     [I=4,H=0,G=3,B=6] 
* CE 39: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 2+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,H,I,J,K,L,M):3
     [N=4,O=0,G=3,B=6] 
* CE 40: eval_testStream_bb2_in(A,B,C,D,A,B,C) = 1+ eval_testStream_bb4_in(A,B,C,C,A,E,F,A,B,C,C,A,E):2
     [F=3,D=5] 
* CE 41: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 1+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,C,D,E,H,I,J):3
     [G=3,B=5] 
* CE 42: eval_testStream_bb2_in(A,B,C,D,A,B,C) = 0
     [D=2] 
* CE 43: eval_testStream_bb2_in(A,B,C,D,A,B,C) = 1+ eval_testStream_bb4_in(A,B,C,C,A,E,F,A,B,C,G,H,I):1
     [F=2,D=2] 
* CE 44: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 1+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,C,D,E,H,I,J):3
     [G=2,B=2] 
* CE 45: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 3+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F):2+ eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,H,I,V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,J):1+ eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E)
     [J=0,I=4,H=0,G=3] 
* CE 46: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 3+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F):2+ eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,H,I,V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,J):2+ eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E)
     [J>=1,I=4,H=0,G=3] 
* CE 47: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 3+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F):2+ eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,H,I,J,K,L,M,N,O,P):3
     [I=4,H=0,G=3] 
* CE 48: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) = 3+ eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V__verbosity,V__smallMode,F,G,H,I,J,K,L,M):3
     [N=4,O=0,G=3] 

### Cost equations --> "Loop" of eval_testStream_bb2_in/7 
* CEs [34,35,38,39,41,44,47,48] --> Loop 27 
* CEs [45,46] --> Loop 28 
* CEs [32,33] --> Loop 29 
* CEs [36,37] --> Loop 30 
* CEs [40] --> Loop 31 
* CEs [42,43] --> Loop 32 

#### Loops of eval_testStream_bb2_in/7 
* Loop 27: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) [] 
* Loop 28: eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E)->  eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E)
                  [] 
* Loop 29: eval_testStream_bb2_in(A,B,C,D,A,B,C) [D=7] 
* Loop 30: eval_testStream_bb2_in(A,B,C,D,A,B,C) [D=6] 
* Loop 31: eval_testStream_bb2_in(A,B,C,D,A,B,C) [D=5] 
* Loop 32: eval_testStream_bb2_in(A,B,C,D,A,B,C) [D=2] 

### Ranking functions of CR eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) 

#### Partial ranking functions of CR eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) 


### Resulting Chains:eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) 
* [[28]]...
* [[28],32]
* [[28],31]
* [[28],30]
* [[28],29]
* [[28],27]...
* [32]
* [31]
* [30]
* [29]
* [27]...


### Merging Chains  eval_testStream_bb2_in/7 into  External patterns of execution 
* [[32],[32,[28]]] --> 1 
* [[31],[31,[28]]] --> 2 
* [[30],[30,[28]]] --> 3 
* [[29],[29,[28]]] --> 4 
* [[27],[[28]],[27,[28]]] --> 5 


### Specialization of cost equations eval_testStream_70/4 
* CE 23 is refined into CE [49] 


#### Refined cost equations eval_testStream_70/4 
* CE 49: eval_testStream_70(V__smallMode,V__noisy,V__verbosity,B) = 0
     [] 

### Cost equations --> "Loop" of eval_testStream_70/4 
* CEs [49] --> Loop 33 

#### Loops of eval_testStream_70/4 
* Loop 33: eval_testStream_70(V__smallMode,V__noisy,V__verbosity,B) [] 

### Ranking functions of CR eval_testStream_70(V__smallMode,V__noisy,V__verbosity,B) 

#### Partial ranking functions of CR eval_testStream_70(V__smallMode,V__noisy,V__verbosity,B) 


### Resulting Chains:eval_testStream_70(V__smallMode,V__noisy,V__verbosity,B) 
* [33]


### Merging Chains  eval_testStream_70/4 into  External patterns of execution 
* [[33]] --> 1 


### Specialization of cost equations eval_testStream_68/4 
* CE 20 is refined into CE [50] 
* CE 21 is refined into CE [51] 


#### Refined cost equations eval_testStream_68/4 
* CE 50: eval_testStream_68(V__smallMode,V__noisy,V__verbosity,B) = 0
     [] 
* CE 51: eval_testStream_68(V__smallMode,V__noisy,V__verbosity,B) = 0+ eval_testStream_70(V__smallMode,V__noisy,V__verbosity,B):1
     [] 

### Cost equations --> "Loop" of eval_testStream_68/4 
* CEs [50,51] --> Loop 34 

#### Loops of eval_testStream_68/4 
* Loop 34: eval_testStream_68(V__smallMode,V__noisy,V__verbosity,B) [] 

### Ranking functions of CR eval_testStream_68(V__smallMode,V__noisy,V__verbosity,B) 

#### Partial ranking functions of CR eval_testStream_68(V__smallMode,V__noisy,V__verbosity,B) 


### Resulting Chains:eval_testStream_68(V__smallMode,V__noisy,V__verbosity,B) 
* [34]


### Merging Chains  eval_testStream_68/4 into  External patterns of execution 
* [[34]] --> 1 


### Specialization of cost equations eval_testStream_bb14_in/4 
* CE 26 is refined into CE [52] 


#### Refined cost equations eval_testStream_bb14_in/4 
* CE 52: eval_testStream_bb14_in(V__smallMode,V__noisy,V__verbosity,B) = 0
     [] 

### Cost equations --> "Loop" of eval_testStream_bb14_in/4 
* CEs [52] --> Loop 35 

#### Loops of eval_testStream_bb14_in/4 
* Loop 35: eval_testStream_bb14_in(V__smallMode,V__noisy,V__verbosity,B) [] 

### Ranking functions of CR eval_testStream_bb14_in(V__smallMode,V__noisy,V__verbosity,B) 

#### Partial ranking functions of CR eval_testStream_bb14_in(V__smallMode,V__noisy,V__verbosity,B) 


### Resulting Chains:eval_testStream_bb14_in(V__smallMode,V__noisy,V__verbosity,B) 
* [35]


### Merging Chains  eval_testStream_bb14_in/4 into  External patterns of execution 
* [[35]] --> 1 


### Specialization of cost equations eval_testStream_bb9_in/4 
* CE 24 is refined into CE [53] 
* CE 25 is refined into CE [54] 


#### Refined cost equations eval_testStream_bb9_in/4 
* CE 53: eval_testStream_bb9_in(V__smallMode,V__noisy,V__verbosity,B) = 0
     [] 
* CE 54: eval_testStream_bb9_in(V__smallMode,V__noisy,V__verbosity,B) = 0+ eval_testStream_bb14_in(V__smallMode,V__noisy,V__verbosity,B):1
     [] 

### Cost equations --> "Loop" of eval_testStream_bb9_in/4 
* CEs [53,54] --> Loop 36 

#### Loops of eval_testStream_bb9_in/4 
* Loop 36: eval_testStream_bb9_in(V__smallMode,V__noisy,V__verbosity,B) [] 

### Ranking functions of CR eval_testStream_bb9_in(V__smallMode,V__noisy,V__verbosity,B) 

#### Partial ranking functions of CR eval_testStream_bb9_in(V__smallMode,V__noisy,V__verbosity,B) 


### Resulting Chains:eval_testStream_bb9_in(V__smallMode,V__noisy,V__verbosity,B) 
* [36]


### Merging Chains  eval_testStream_bb9_in/4 into  External patterns of execution 
* [[36]] --> 1 


### Specialization of cost equations eval_testStream_20/4 
* CE 22 is refined into CE [55] 


#### Refined cost equations eval_testStream_20/4 
* CE 55: eval_testStream_20(V__smallMode,V__noisy,V__verbosity,B) = 0+ eval_testStream_bb9_in(V__smallMode,V__noisy,V__verbosity,B):1
     [] 

### Cost equations --> "Loop" of eval_testStream_20/4 
* CEs [55] --> Loop 37 

#### Loops of eval_testStream_20/4 
* Loop 37: eval_testStream_20(V__smallMode,V__noisy,V__verbosity,B) [] 

### Ranking functions of CR eval_testStream_20(V__smallMode,V__noisy,V__verbosity,B) 

#### Partial ranking functions of CR eval_testStream_20(V__smallMode,V__noisy,V__verbosity,B) 


### Resulting Chains:eval_testStream_20(V__smallMode,V__noisy,V__verbosity,B) 
* [37]


### Merging Chains  eval_testStream_20/4 into  External patterns of execution 
* [[37]] --> 1 


### Specialization of cost equations loop_cont_eval_testStream_bb2_in/5 
* CE 13 is refined into CE [56] 
* CE 12 is refined into CE [57] 
* CE 11 is refined into CE [58] 
* CE 14 is refined into CE [59] 


#### Refined cost equations loop_cont_eval_testStream_bb2_in/5 
* CE 56: loop_cont_eval_testStream_bb2_in(E,A,B,C,D) = 0+ eval_testStream_68(A,B,C,D):1
     [E=7] 
* CE 57: loop_cont_eval_testStream_bb2_in(E,A,B,C,D) = 0
     [E=6] 
* CE 58: loop_cont_eval_testStream_bb2_in(E,A,B,C,D) = 0
     [E=5] 
* CE 59: loop_cont_eval_testStream_bb2_in(E,A,B,C,D) = 0+ eval_testStream_20(A,B,C,D):1
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_testStream_bb2_in/5 
* CEs [56] --> Loop 38 
* CEs [57] --> Loop 39 
* CEs [58] --> Loop 40 
* CEs [59] --> Loop 41 

#### Loops of loop_cont_eval_testStream_bb2_in/5 
* Loop 38: loop_cont_eval_testStream_bb2_in(E,A,B,C,D) [E=7] 
* Loop 39: loop_cont_eval_testStream_bb2_in(E,A,B,C,D) [E=6] 
* Loop 40: loop_cont_eval_testStream_bb2_in(E,A,B,C,D) [E=5] 
* Loop 41: loop_cont_eval_testStream_bb2_in(E,A,B,C,D) [E=2] 

### Ranking functions of CR loop_cont_eval_testStream_bb2_in(E,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_testStream_bb2_in(E,A,B,C,D) 


### Resulting Chains:loop_cont_eval_testStream_bb2_in(E,A,B,C,D) 
* [41]
* [40]
* [39]
* [38]


### Merging Chains  loop_cont_eval_testStream_bb2_in/5 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 
* [[39]] --> 3 
* [[38]] --> 4 


### Specialization of cost equations eval_testStream_2/4 
* CE 3 is refined into CE [60] 
* CE 4 is refined into CE [61,62,63,64,65] 


#### Refined cost equations eval_testStream_2/4 
* CE 60: eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) = 0
     [] 
* CE 61: eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) = 1+ eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,C,V__smallMode,V__noisy,V__verbosity):1+ loop_cont_eval_testStream_bb2_in(D,V__smallMode,V__noisy,V__verbosity,B):1
     [D=2,C=2] 
* CE 62: eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) = 1+ eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,C,V__smallMode,V__noisy,V__verbosity):2+ loop_cont_eval_testStream_bb2_in(D,V__smallMode,V__noisy,V__verbosity,B):2
     [D=5,C=5] 
* CE 63: eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) = 1+ eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,C,V__smallMode,V__noisy,V__verbosity):3+ loop_cont_eval_testStream_bb2_in(D,V__smallMode,V__noisy,V__verbosity,B):3
     [D=6,C=6] 
* CE 64: eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) = 1+ eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,C,V__smallMode,V__noisy,V__verbosity):4+ loop_cont_eval_testStream_bb2_in(D,V__smallMode,V__noisy,V__verbosity,B):4
     [D=7,C=7] 
* CE 65: eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) = 1+ eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,C,D,E,F):5
     [] 

### Cost equations --> "Loop" of eval_testStream_2/4 
* CEs [65] --> Loop 42 
* CEs [60,61,62,63,64] --> Loop 43 

#### Loops of eval_testStream_2/4 
* Loop 42: eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) [] 
* Loop 43: eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) [] 

### Ranking functions of CR eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) 

#### Partial ranking functions of CR eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) 


### Resulting Chains:eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B) 
* [43]
* [42]...


### Merging Chains  eval_testStream_2/4 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations eval_testStream_start/4 
* CE 2 is refined into CE [66,67] 


#### Refined cost equations eval_testStream_start/4 
* CE 66: eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B) = 0+ eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B):1
     [] 
* CE 67: eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B) = 0+ eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B):2
     [] 

### Cost equations --> "Loop" of eval_testStream_start/4 
* CEs [67] --> Loop 44 
* CEs [66] --> Loop 45 

#### Loops of eval_testStream_start/4 
* Loop 44: eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B) [] 
* Loop 45: eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B) [] 

### Ranking functions of CR eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B) 

#### Partial ranking functions of CR eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B) 


### Resulting Chains:eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B) 
* [45]
* [44]...


### Merging Chains  eval_testStream_start/4 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [22] 

 * loop 22:eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,B,C,D,E,F,G,H) -> [eval_testStream_bb4_in(V__smallMode',V__noisy',V__verbosity',V_4',V_6',V_7',B',C',D',E',F',G',H')] 
1
#### Cost of phase [22]:eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,B,C,D,E,F,G,H) -> [eval_testStream_bb4_in(V__smallMode',V__noisy',V__verbosity',V_4',V_6',V_7',B',C',D',E',F',G',H')] 
1*it(22)+0
#### Cost of phase [22]:eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,B,C,D,E,F,G,H) -> [eval_testStream_bb4_in(V__smallMode',V__noisy',V__verbosity',V_4',V_6',V_7',B',C',D',E',F',G',H')] 
1*it(22)+0
#### Cost of phase [22]:eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,B,C,D,E,F,G,H) -> [eval_testStream_bb4_in(V__smallMode',V__noisy',V__verbosity',V_4',V_6',V_7',B',C',D',E',F',G',H')] 
1*it(22)+0
#### Cost of chains of eval_testStream_bb4_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,B,C,D,E,F,G,H):
* Chain [[22]]...: 1*it(22)+0
  with precondition: [V__smallMode=V_6,V__verbosity=V_4,B>=2,3>=B] 

* Chain [[22],24]: 1*it(22)+0
  with precondition: [B=2,V__verbosity=V_4,V__smallMode=V_6,V__smallMode=C,V__noisy=D,V__verbosity=E] 

* Chain [[22],23]: 1*it(22)+0
  with precondition: [B=3,V__verbosity=V_4,V__smallMode=V_6,V__smallMode=C,V__noisy=D,V__verbosity=E,V__verbosity=F,V__smallMode=G,V_7=H] 

* Chain [24]: 0
  with precondition: [B=2,V_6=V__smallMode,D=V__noisy,V_4=V__verbosity,V_6=C,V_4=E] 

* Chain [23]: 0
  with precondition: [B=3,V_6=V__smallMode,D=V__noisy,V_4=V__verbosity,H=V_7,V_6=C,V_4=E,V_4=F,V_6=G] 


#### Cost of loops [25] 

 * loop 25:eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0,B,C,D,E,F,G,H,I) -> [eval_testStream_bb24_in(V__smallMode',V__noisy',V__verbosity',V_4',V_6',V_7',V_i_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [25]:eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0,B,C,D,E,F,G,H,I) -> [eval_testStream_bb24_in(V__smallMode',V__noisy',V__verbosity',V_4',V_6',V_7',V_i_0',B',C',D',E',F',G',H',I')] 
1*it(25)+0
#### Cost of phase [25]:eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0,B,C,D,E,F,G,H,I) -> [eval_testStream_bb24_in(V__smallMode',V__noisy',V__verbosity',V_4',V_6',V_7',V_i_0',B',C',D',E',F',G',H',I')] 
1*it(25)+0
#### Cost of chains of eval_testStream_bb24_in(V__smallMode,V__noisy,V__verbosity,V_4,V_6,V_7,V_i_0,B,C,D,E,F,G,H,I):
* Chain [[25]]...: 1*it(25)+0
  with precondition: [V_i_0>=0,B=4] 

* Chain [[25],26]: 1*it(25)+0
  with precondition: [B=4,V__smallMode=C,V__noisy=D,V__verbosity=E,V_4=F,V_6=G,V_7=H,V_i_0>=0,I>=V_i_0+1] 

* Chain [26]: 0
  with precondition: [B=4,C=V__smallMode,D=V__noisy,E=V__verbosity,F=V_4,G=V_6,H=V_7,V_i_0=I,V_i_0>=0] 


#### Cost of loops [28] 

 * loop 28:eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) -> [eval_testStream_bb2_in(V__smallMode',V__noisy',V__verbosity',B',C',D',E')] 
1*s(6)+0
#### Cost of phase [28]:eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) -> [eval_testStream_bb2_in(V__smallMode',V__noisy',V__verbosity',B',C',D',E')] 
1*s(7)+0
#### Cost of phase [28]:eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) -> [eval_testStream_bb2_in(V__smallMode',V__noisy',V__verbosity',B',C',D',E')] 
1*s(7)+0
#### Cost of phase [28]:eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) -> [eval_testStream_bb2_in(V__smallMode',V__noisy',V__verbosity',B',C',D',E')] 
1*s(7)+0
#### Cost of phase [28]:eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) -> [eval_testStream_bb2_in(V__smallMode',V__noisy',V__verbosity',B',C',D',E')] 
1*s(7)+0
#### Cost of phase [28]:eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) -> [eval_testStream_bb2_in(V__smallMode',V__noisy',V__verbosity',B',C',D',E')] 
1*s(7)+0
#### Cost of phase [28]:eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E) -> [eval_testStream_bb2_in(V__smallMode',V__noisy',V__verbosity',B',C',D',E')] 
1*s(7)+0
#### Cost of chains of eval_testStream_bb2_in(V__smallMode,V__noisy,V__verbosity,B,C,D,E):
* Chain [[28]]...: 1*s(7)+0
  with precondition: [] 

* Chain [[28],32]: 2*aux(4)+0
  with precondition: [B=2,V__smallMode=C,V__noisy=D,V__verbosity=E] 

* Chain [[28],31]: 2*s(7)+1
  with precondition: [B=5,V__smallMode=C,V__noisy=D,V__verbosity=E] 

* Chain [[28],30]: 2*aux(5)+0
  with precondition: [B=6,V__smallMode=C,V__noisy=D,V__verbosity=E] 

* Chain [[28],29]: 2*aux(6)+0
  with precondition: [B=7,V__smallMode=C,V__noisy=D,V__verbosity=E] 

* Chain [[28],27]...: 2*aux(7)+0
  with precondition: [] 

* Chain [32]: 1*aux(4)+0
  with precondition: [B=2,C=V__smallMode,D=V__noisy,E=V__verbosity] 

* Chain [31]: 1*s(9)+1
  with precondition: [B=5,C=V__smallMode,D=V__noisy,E=V__verbosity] 

* Chain [30]: 1*aux(5)+0
  with precondition: [B=6,C=V__smallMode,D=V__noisy,E=V__verbosity] 

* Chain [29]: 1*aux(6)+0
  with precondition: [B=7,C=V__smallMode,D=V__noisy,E=V__verbosity] 

* Chain [27]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_testStream_70(V__smallMode,V__noisy,V__verbosity,B):
* Chain [33]: 0
  with precondition: [] 


#### Cost of chains of eval_testStream_68(V__smallMode,V__noisy,V__verbosity,B):
* Chain [34]: 0
  with precondition: [] 


#### Cost of chains of eval_testStream_bb14_in(V__smallMode,V__noisy,V__verbosity,B):
* Chain [35]: 0
  with precondition: [] 


#### Cost of chains of eval_testStream_bb9_in(V__smallMode,V__noisy,V__verbosity,B):
* Chain [36]: 0
  with precondition: [] 


#### Cost of chains of eval_testStream_20(V__smallMode,V__noisy,V__verbosity,B):
* Chain [37]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_testStream_bb2_in(E,A,B,C,D):
* Chain [41]: 0
  with precondition: [E=2] 

* Chain [40]: 0
  with precondition: [E=5] 

* Chain [39]: 0
  with precondition: [E=6] 

* Chain [38]: 0
  with precondition: [E=7] 


#### Cost of chains of eval_testStream_2(V__smallMode,V__noisy,V__verbosity,B):
* Chain [43]: 1*aux(13)+0
  with precondition: [] 

* Chain [42]...: 1*s(42)+1
  with precondition: [] 


#### Cost of chains of eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B):
* Chain [45]: 1*s(43)+0
  with precondition: [] 

* Chain [44]...: 1*s(44)+1
  with precondition: [] 


Closed-form bounds of eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B): 
-------------------------------------
* Chain [45] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_testStream_start(V__smallMode,V__noisy,V__verbosity,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 93 ms.
* Invariants computed in 52 ms.
   - Backward Invariants 32 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 143 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 88 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 19 ms.
   - Chain cost structures 30 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 467 ms.

