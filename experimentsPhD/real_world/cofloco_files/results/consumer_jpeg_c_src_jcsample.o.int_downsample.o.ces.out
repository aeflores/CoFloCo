WARNING: Excluded non-linear constraints:[I+E-D*J>=0,I+E-D*J+1=<D]
WARNING: Excluded non-linear constraints:[I+E-D*J>=0,I+E-D*J+1=< -D]
WARNING: Excluded non-linear constraints:[-I-E+D*J>=0,-I-E+D*J+1=<D]
WARNING: Excluded non-linear constraints:[-I-E+D*J>=0,-I-E+D*J+1=< -D]
WARNING: Excluded non-linear constraints:[R+S-Q*T>=0,R+S-Q*T+1=<Q]
WARNING: Excluded non-linear constraints:[R+S-Q*T>=0,R+S-Q*T+1=< -Q]
WARNING: Excluded non-linear constraints:[-R-S+Q*T>=0,-R-S+Q*T+1=<Q]
WARNING: Excluded non-linear constraints:[-R-S+Q*T>=0,-R-S+Q*T+1=< -Q]
WARNING: Excluded non-linear constraints:[H=C*D,I=8*B*C,C*D=0]
WARNING: Excluded non-linear constraints:[H=C*D,I=8*B*C,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[H=C*D,I=8*B*C,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*D>=0,I-H*D+1=<H,C*D=0]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*D>=0,I-H*D+1=<H,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*D>=0,I-H*D+1=<H,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*D>=0,I-H*D+1=< -H,C*D=0]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*D>=0,I-H*D+1=< -H,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*D>=0,I-H*D+1=< -H,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*D>=0,-I+H*D+1=<H,C*D=0]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*D>=0,-I+H*D+1=<H,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*D>=0,-I+H*D+1=<H,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*D>=0,-I+H*D+1=< -H,C*D=0]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*D>=0,-I+H*D+1=< -H,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*D>=0,-I+H*D+1=< -H,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*C>=0,I-H*C+1=<H,C*D=0]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*C>=0,I-H*C+1=<H,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*C>=0,I-H*C+1=<H,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,K-J*D>=0,K-J*D+1=<J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,K-J*D>=0,K-J*D+1=<J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,K-J*D>=0,K-J*D+1=<J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,K-J*D>=0,K-J*D+1=< -J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,K-J*D>=0,K-J*D+1=< -J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,K-J*D>=0,K-J*D+1=< -J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,-K+J*D>=0,-K+J*D+1=<J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,-K+J*D>=0,-K+J*D+1=<J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,-K+J*D>=0,-K+J*D+1=<J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,-K+J*D>=0,-K+J*D+1=< -J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,-K+J*D>=0,-K+J*D+1=< -J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=<H,-K+J*D>=0,-K+J*D+1=< -J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*C>=0,I-H*C+1=< -H,C*D=0]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*C>=0,I-H*C+1=< -H,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,I-H*C>=0,I-H*C+1=< -H,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,K-J*D>=0,K-J*D+1=<J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,K-J*D>=0,K-J*D+1=<J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,K-J*D>=0,K-J*D+1=<J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,K-J*D>=0,K-J*D+1=< -J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,K-J*D>=0,K-J*D+1=< -J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,K-J*D>=0,K-J*D+1=< -J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,-K+J*D>=0,-K+J*D+1=<J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,-K+J*D>=0,-K+J*D+1=<J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,-K+J*D>=0,-K+J*D+1=<J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,-K+J*D>=0,-K+J*D+1=< -J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,-K+J*D>=0,-K+J*D+1=< -J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,I-H*C>=0,I-H*C+1=< -H,-K+J*D>=0,-K+J*D+1=< -J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*C>=0,-I+H*C+1=<H,C*D=0]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*C>=0,-I+H*C+1=<H,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*C>=0,-I+H*C+1=<H,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,K-J*D>=0,K-J*D+1=<J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,K-J*D>=0,K-J*D+1=<J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,K-J*D>=0,K-J*D+1=<J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,K-J*D>=0,K-J*D+1=< -J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,K-J*D>=0,K-J*D+1=< -J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,K-J*D>=0,K-J*D+1=< -J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,-K+J*D>=0,-K+J*D+1=<J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,-K+J*D>=0,-K+J*D+1=<J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,-K+J*D>=0,-K+J*D+1=<J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,-K+J*D>=0,-K+J*D+1=< -J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,-K+J*D>=0,-K+J*D+1=< -J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=<H,-K+J*D>=0,-K+J*D+1=< -J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,C*D=0]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[J=C*D,K=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,K-J*D>=0,K-J*D+1=<J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,K-J*D>=0,K-J*D+1=<J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,K-J*D>=0,K-J*D+1=<J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,K-J*D>=0,K-J*D+1=< -J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,K-J*D>=0,K-J*D+1=< -J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,K-J*D>=0,K-J*D+1=< -J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,-K+J*D>=0,-K+J*D+1=<J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,-K+J*D>=0,-K+J*D+1=<J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,-K+J*D>=0,-K+J*D+1=<J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,-K+J*D>=0,-K+J*D+1=< -J,C*D=0]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,-K+J*D>=0,-K+J*D+1=< -J,C*D>=0+1,C*D-2*E>=0,C*D-2*E+1=<2]
WARNING: Excluded non-linear constraints:[L=C*D,M=8*B*C,-I+H*C>=0,-I+H*C+1=< -H,-K+J*D>=0,-K+J*D+1=< -J,C*D+1=<0,-C*D+2*E>=0,-C*D+2*E+1=<2]
Warning: Ignored call to eval_int_downsample_stop/1 in equation loop_cont_eval_int_downsample_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_int_downsample_bb7_in/21]
1. recursive  : [eval_int_downsample_bb5_in/17,loop_cont_eval_int_downsample_bb7_in/18]
2. recursive  : [eval_int_downsample_bb3_in/14,loop_cont_eval_int_downsample_bb5_in/15]
3. recursive  : [eval_int_downsample_bb1_in/7,loop_cont_eval_int_downsample_bb3_in/8]
4. non_recursive  : [loop_cont_eval_int_downsample_bb1_in/2]
5. non_recursive  : [eval_int_downsample_14/6]
6. non_recursive  : [eval_int_downsample_13/9]
7. non_recursive  : [eval_int_downsample_bb0_in/1]
8. non_recursive  : [eval_int_downsample_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_int_downsample_bb7_in/21
1. SCC is partially evaluated into eval_int_downsample_bb5_in/17
2. SCC is partially evaluated into eval_int_downsample_bb3_in/14
3. SCC is partially evaluated into eval_int_downsample_bb1_in/7
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_int_downsample_14/6
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_int_downsample_bb0_in/1
8. SCC is partially evaluated into eval_int_downsample_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_int_downsample_bb7_in/21 
* CE 29 is refined into CE [30] 
* CE 28 is refined into CE [31] 


#### Refined cost equations eval_int_downsample_bb7_in/21 
* CE 30: eval_int_downsample_bb7_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,M,K) = 0
     [C>=H+1,J>=B,J>=0,H+1=M,L=2] 
* CE 31: eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,V_h_0,V_outvalue_1,B,C,D,E,F,G,H,I,J,K) = 1+ eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,L,M,N,C,D,E,F,G,H,I,J,K)
     [V_7>=V_h_0+1,V_12>=V_v_0+1,V_h_0>=0,V_h_0+1=L,N=2,B=2] 

### Cost equations --> "Loop" of eval_int_downsample_bb7_in/21 
* CEs [31] --> Loop 16 
* CEs [30] --> Loop 17 

#### Loops of eval_int_downsample_bb7_in/21 
* Loop 16: eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,V_h_0,V_outvalue_1,B,C,D,E,F,G,H,I,J,K)->  eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,V_h_0',V_outvalue_1',B',C,D,E,F,G,H,I,J,K)
                  [V_7>=V_h_0+1,V_12>=V_v_0+1,V_h_0>=0,V_h_0+1=V_h_0',B'=2,B=2] 
* Loop 17: eval_int_downsample_bb7_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,M,K) [C>=H+1,J>=B,J>=0,H+1=M,L=2] 

### Ranking functions of CR eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,V_h_0,V_outvalue_1,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [16]: [V_7-V_h_0]

#### Partial ranking functions of CR eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,V_h_0,V_outvalue_1,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_7-V_h_0


### Resulting Chains:eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,V_h_0,V_outvalue_1,B,C,D,E,F,G,H,I,J,K) 
* [[16],17]
* [17]


### Merging Chains  eval_int_downsample_bb7_in/21 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[16]]] --> 2 


### Specialization of cost equations eval_int_downsample_bb5_in/17 
* CE 24 is refined into CE [32] 
* CE 26 is refined into CE [33] 
* CE 25 is refined into CE [34] 
* CE 27 is refined into CE [35] 
* CE 23 is refined into CE [36] 
* CE 22 is refined into CE [37,38] 


#### Refined cost equations eval_int_downsample_bb5_in/17 
* CE 32: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) = 0
     [E+I>=1,H>=C,D>=1,K=G+1,J=3] 
* CE 33: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) = 0
     [0>=E+I+1,H>=C,D>=1,K=G+1,J=3] 
* CE 34: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) = 0
     [E+I>=1,H>=C,0>=D+1,K=G+1,J=3] 
* CE 35: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) = 0
     [0>=E+I+1,H>=C,0>=D+1,K=G+1,J=3] 
* CE 36: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) = 0
     [H>=C,E+I=0,K=G+1,J=3] 
* CE 37: eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) = 2+ eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,J,V_outvalue_0,K,V_outvalue_0,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,M,V_outvalue_0):1+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,M,V_outvalue_0,N,C,D,E,F,G,H,I)
     [V_12>=M,0>=V_7,M=J+1,M=V_v_0+1,N=3,L=2,K=0,B=3] 
* CE 38: eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) = 2+ eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,J,V_outvalue_0,K,V_outvalue_0,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,M,N):2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,M,N,O,C,D,E,F,G,H,I)
     [V_12>=M,V_7>=1,M=J+1,M=V_v_0+1,O=3,L=2,K=0,B=3] 

### Cost equations --> "Loop" of eval_int_downsample_bb5_in/17 
* CEs [38] --> Loop 18 
* CEs [37] --> Loop 19 
* CEs [32] --> Loop 20 
* CEs [33] --> Loop 21 
* CEs [34] --> Loop 22 
* CEs [35] --> Loop 23 
* CEs [36] --> Loop 24 

#### Loops of eval_int_downsample_bb5_in/17 
* Loop 18: eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I)->  eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0',V_outvalue_0',B',C,D,E,F,G,H,I)
                  [V_12>=V_v_0+1,V_7>=1,V_v_0+1=V_v_0',B'=3,B=3] 
* Loop 19: eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I)->  eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0',V_outvalue_0,B',C,D,E,F,G,H,I)
                  [V_12>=V_v_0+1,0>=V_7,V_v_0+1=V_v_0',B'=3,B=3] 
* Loop 20: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) [E+I>=1,H>=C,D>=1,G+1=K,J=3] 
* Loop 21: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) [0>=E+I+1,H>=C,D>=1,G+1=K,J=3] 
* Loop 22: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) [E+I>=1,H>=C,0>=D+1,G+1=K,J=3] 
* Loop 23: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) [0>=E+I+1,H>=C,0>=D+1,G+1=K,J=3] 
* Loop 24: eval_int_downsample_bb5_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,K) [H>=C,E+I=0,G+1=K,J=3] 

### Ranking functions of CR eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) 
* RF of phase [18]: [V_12-V_v_0]
* RF of phase [19]: [V_12-V_v_0]

#### Partial ranking functions of CR eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_12-V_v_0
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V_12-V_v_0


### Resulting Chains:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) 
* [[19],24]
* [[19],23]
* [[19],22]
* [[19],21]
* [[19],20]
* [[18],24]
* [[18],23]
* [[18],22]
* [[18],21]
* [[18],20]
* [24]
* [23]
* [22]
* [21]
* [20]


### Merging Chains  eval_int_downsample_bb5_in/17 into  External patterns of execution 
* [[24,[19]]] --> 1 
* [[23,[19]]] --> 2 
* [[22,[19]]] --> 3 
* [[21,[19]]] --> 4 
* [[20,[19]]] --> 5 
* [[24]] --> 6 
* [[23]] --> 7 
* [[22]] --> 8 
* [[21]] --> 9 
* [[20]] --> 10 
* [[22,[18]],[23,[18]],[24,[18]]] --> 11 
* [[20,[18]],[21,[18]]] --> 12 


### Specialization of cost equations eval_int_downsample_bb3_in/14 
* CE 21 is refined into CE [39] 
* CE 20 is refined into CE [40,41,42,43,44,45,46,47,48,49,50,51] 


#### Refined cost equations eval_int_downsample_bb3_in/14 
* CE 39: eval_int_downsample_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,I) = 0
     [G>=A,I=F+1,H=4] 
* CE 40: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,I,V_outrow_0,J,K,L,M,V_2,V_7,V_12,V_13,N,V_outrow_0,O):1+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,P,V_outrow_0,O,Q,C,D,E,F,G,H)
     [V_2>=O,V_12>=1,0>=V_7,O=J+1,O=V_outcol_0+1,Q=4,P=0,N=0,M=3,L=0,K=0,I=0,B=4,V_14=0] 
* CE 41: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,V_12>=1,0>=V_14+1,0>=V_13+1,0>=V_7,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 
* CE 42: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):3+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,V_14>=1,V_12>=1,0>=V_13+1,0>=V_7,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 
* CE 43: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):4+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,V_13>=1,V_12>=1,0>=V_14+1,0>=V_7,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 
* CE 44: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):5+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,V_14>=1,V_13>=1,V_12>=1,0>=V_7,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 
* CE 45: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,I,V_outrow_0,J,K,L,M,V_2,V_7,V_12,V_13,N,V_outrow_0,O):6+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,P,V_outrow_0,O,Q,C,D,E,F,G,H)
     [V_2>=O,0>=V_12,O=J+1,O=V_outcol_0+1,Q=4,P=0,N=0,M=3,L=0,K=0,I=0,B=4,V_14=0] 
* CE 46: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):7+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,0>=V_14+1,0>=V_13+1,0>=V_12,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 
* CE 47: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):8+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,V_14>=1,0>=V_13+1,0>=V_12,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 
* CE 48: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):9+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,V_13>=1,0>=V_14+1,0>=V_12,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 
* CE 49: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):10+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,V_14>=1,V_13>=1,0>=V_12,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 
* CE 50: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):11+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,V_12>=1,V_7>=1,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 
* CE 51: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) = 2+ eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,I,J,K,L,V_2,V_7,V_12,V_13,V_14,V_outrow_0,M):12+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,M,N,C,D,E,F,G,H)
     [V_2>=M,V_13>=1,V_12>=1,V_7>=1,M=I+1,M=V_outcol_0+1,N=4,L=3,K=0,J=0,B=4] 

### Cost equations --> "Loop" of eval_int_downsample_bb3_in/14 
* CEs [50,51] --> Loop 25 
* CEs [49] --> Loop 26 
* CEs [48] --> Loop 27 
* CEs [47] --> Loop 28 
* CEs [46] --> Loop 29 
* CEs [44] --> Loop 30 
* CEs [43] --> Loop 31 
* CEs [42] --> Loop 32 
* CEs [41] --> Loop 33 
* CEs [45] --> Loop 34 
* CEs [40] --> Loop 35 
* CEs [39] --> Loop 36 

#### Loops of eval_int_downsample_bb3_in/14 
* Loop 25: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,V_12>=1,V_7>=1,V_outcol_0+1=V_outcol_0',B'=4,B=4] 
* Loop 26: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,V_14>=1,V_13>=1,0>=V_12,V_outcol_0+1=V_outcol_0',B'=4,B=4] 
* Loop 27: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,V_13>=1,0>=V_14+1,0>=V_12,V_outcol_0+1=V_outcol_0',B'=4,B=4] 
* Loop 28: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,V_14>=1,0>=V_13+1,0>=V_12,V_outcol_0+1=V_outcol_0',B'=4,B=4] 
* Loop 29: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,0>=V_14+1,0>=V_13+1,0>=V_12,V_outcol_0+1=V_outcol_0',B'=4,B=4] 
* Loop 30: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,V_14>=1,V_13>=1,V_12>=1,0>=V_7,V_outcol_0+1=V_outcol_0',B'=4,B=4] 
* Loop 31: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,V_13>=1,V_12>=1,0>=V_14+1,0>=V_7,V_outcol_0+1=V_outcol_0',B'=4,B=4] 
* Loop 32: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,V_14>=1,V_12>=1,0>=V_13+1,0>=V_7,V_outcol_0+1=V_outcol_0',B'=4,B=4] 
* Loop 33: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,V_12>=1,0>=V_14+1,0>=V_13+1,0>=V_7,V_outcol_0+1=V_outcol_0',B'=4,B=4] 
* Loop 34: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14',V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,0>=V_12,V_outcol_0+1=V_outcol_0',B'=4,V_14'=0,B=4,V_14=0] 
* Loop 35: eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H)->  eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14',V_outrow_0,V_outcol_0',B',C,D,E,F,G,H)
                  [V_2>=V_outcol_0+1,V_12>=1,0>=V_7,V_outcol_0+1=V_outcol_0',B'=4,V_14'=0,B=4,V_14=0] 
* Loop 36: eval_int_downsample_bb3_in(A,B,C,D,E,F,G,H,A,B,C,D,E,I) [G>=A,F+1=I,H=4] 

### Ranking functions of CR eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) 
* RF of phase [25]: [V_2-V_outcol_0]
* RF of phase [26]: [V_2-V_outcol_0]
* RF of phase [27]: [V_2-V_outcol_0]
* RF of phase [28]: [V_2-V_outcol_0]
* RF of phase [29]: [V_2-V_outcol_0]
* RF of phase [30]: [V_2-V_outcol_0]
* RF of phase [31]: [V_2-V_outcol_0]
* RF of phase [32]: [V_2-V_outcol_0]
* RF of phase [33]: [V_2-V_outcol_0]
* RF of phase [34]: [V_2-V_outcol_0]
* RF of phase [35]: [V_2-V_outcol_0]

#### Partial ranking functions of CR eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V_2-V_outcol_0
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    V_2-V_outcol_0
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    V_2-V_outcol_0
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V_2-V_outcol_0
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V_2-V_outcol_0
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V_2-V_outcol_0
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V_2-V_outcol_0
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V_2-V_outcol_0
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V_2-V_outcol_0
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V_2-V_outcol_0
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    V_2-V_outcol_0


### Resulting Chains:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) 
* [[35],36]
* [[34],36]
* [[33],36]
* [[32],36]
* [[31],36]
* [[30],36]
* [[29],36]
* [[28],36]
* [[27],36]
* [[26],36]
* [[25],36]
* [36]


### Merging Chains  eval_int_downsample_bb3_in/14 into  External patterns of execution 
* [[36,[35]]] --> 1 
* [[36,[34]]] --> 2 
* [[36]] --> 3 
* [[36,[33]]] --> 4 
* [[36,[32]]] --> 5 
* [[36,[31]]] --> 6 
* [[36,[30]]] --> 7 
* [[36,[29]]] --> 8 
* [[36,[28]]] --> 9 
* [[36,[27]]] --> 10 
* [[36,[26]]] --> 11 
* [[36,[25]]] --> 12 


### Specialization of cost equations eval_int_downsample_bb1_in/7 
* CE 19 is refined into CE [52] 
* CE 18 is refined into CE [53,54,55,56,57,58,59,60,61,62,63,64] 


#### Refined cost equations eval_int_downsample_bb1_in/7 
* CE 52: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 0
     [B=5] 
* CE 53: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,C,D,E,F,V_2,V_7,V_12,V_13,G,H):1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,I,H,J)
     [V_12>=1,V_2>=1,0>=V_7,H=D+1,H=V_outrow_0+1,J=5,I=0,G=0,F=4,E=0,C=0,B=5,V_14=0] 
* CE 54: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,C,D,E,F,V_2,V_7,V_12,V_13,G,H):2+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,I,H,J)
     [V_2>=1,0>=V_12,H=D+1,H=V_outrow_0+1,J=5,I=0,G=0,F=4,E=0,C=0,B=5,V_14=0] 
* CE 55: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):3+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [0>=V_2,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 
* CE 56: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):4+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [V_12>=1,V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_7,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 
* CE 57: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):5+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [V_14>=1,V_12>=1,V_2>=1,0>=V_13+1,0>=V_7,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 
* CE 58: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):6+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [V_13>=1,V_12>=1,V_2>=1,0>=V_14+1,0>=V_7,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 
* CE 59: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):7+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [V_14>=1,V_13>=1,V_12>=1,V_2>=1,0>=V_7,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 
* CE 60: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):8+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_12,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 
* CE 61: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):9+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [V_14>=1,V_2>=1,0>=V_13+1,0>=V_12,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 
* CE 62: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):10+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [V_13>=1,V_2>=1,0>=V_14+1,0>=V_12,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 
* CE 63: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):11+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [V_14>=1,V_13>=1,V_2>=1,0>=V_12,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 
* CE 64: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) = 2+ eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,C,D,E,V_2,V_7,V_12,V_13,V_14,F):12+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,F,G)
     [V_12>=1,V_7>=1,V_2>=1,F=C+1,F=V_outrow_0+1,G=5,E=4,D=0,B=5] 

### Cost equations --> "Loop" of eval_int_downsample_bb1_in/7 
* CEs [64] --> Loop 37 
* CEs [63] --> Loop 38 
* CEs [62] --> Loop 39 
* CEs [61] --> Loop 40 
* CEs [60] --> Loop 41 
* CEs [59] --> Loop 42 
* CEs [58] --> Loop 43 
* CEs [57] --> Loop 44 
* CEs [56] --> Loop 45 
* CEs [55] --> Loop 46 
* CEs [54] --> Loop 47 
* CEs [53] --> Loop 48 
* CEs [52] --> Loop 49 

#### Loops of eval_int_downsample_bb1_in/7 
* Loop 37: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [V_12>=1,V_7>=1,V_2>=1,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 38: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [V_14>=1,V_13>=1,V_2>=1,0>=V_12,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 39: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [V_13>=1,V_2>=1,0>=V_14+1,0>=V_12,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 40: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [V_14>=1,V_2>=1,0>=V_13+1,0>=V_12,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 41: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_12,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 42: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [V_14>=1,V_13>=1,V_12>=1,V_2>=1,0>=V_7,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 43: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [V_13>=1,V_12>=1,V_2>=1,0>=V_14+1,0>=V_7,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 44: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [V_14>=1,V_12>=1,V_2>=1,0>=V_13+1,0>=V_7,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 45: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [V_12>=1,V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_7,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 46: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0',B')
                  [0>=V_2,V_outrow_0+1=V_outrow_0',B'=5,B=5] 
* Loop 47: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14',V_outrow_0',B')
                  [V_2>=1,0>=V_12,V_outrow_0+1=V_outrow_0',B'=5,V_14'=0,B=5,V_14=0] 
* Loop 48: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B)->  eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14',V_outrow_0',B')
                  [V_12>=1,V_2>=1,0>=V_7,V_outrow_0+1=V_outrow_0',B'=5,V_14'=0,B=5,V_14=0] 
* Loop 49: eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) [B=5] 

### Ranking functions of CR eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) 

#### Partial ranking functions of CR eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) 


### Resulting Chains:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) 
* [[48]]...
* [[48],49]
* [[47]]...
* [[47],49]
* [[46]]...
* [[46],49]
* [[45]]...
* [[45],49]
* [[44]]...
* [[44],49]
* [[43]]...
* [[43],49]
* [[42]]...
* [[42],49]
* [[41]]...
* [[41],49]
* [[40]]...
* [[40],49]
* [[39]]...
* [[39],49]
* [[38]]...
* [[38],49]
* [[37]]...
* [[37],49]
* [49]


### Merging Chains  eval_int_downsample_bb1_in/7 into  External patterns of execution 
* [[49],[49,[48]]] --> 1 
* [[49,[47]]] --> 2 
* [[49,[46]]] --> 3 
* [[49,[45]]] --> 4 
* [[49,[44]]] --> 5 
* [[49,[43]]] --> 6 
* [[49,[42]]] --> 7 
* [[49,[41]]] --> 8 
* [[49,[40]]] --> 9 
* [[49,[39]]] --> 10 
* [[49,[38]]] --> 11 
* [[49,[37]]] --> 12 
* [[[46]]] --> 13 
* [[[48]]] --> 14 
* [[[45]]] --> 15 
* [[[44]]] --> 16 
* [[[43]]] --> 17 
* [[[42]]] --> 18 
* [[[47]]] --> 19 
* [[[41]]] --> 20 
* [[[40]]] --> 21 
* [[[39]]] --> 22 
* [[[38]]] --> 23 
* [[[37]]] --> 24 


### Specialization of cost equations eval_int_downsample_14/6 
* CE 17 is refined into CE [65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88] 


#### Refined cost equations eval_int_downsample_14/6 
* CE 65: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):1
     [D=5,C=0] 
* CE 66: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,C,D,E):2
     [V_2>=1,0>=V_12,E=5,D=0,C=0,V_14=0] 
* CE 67: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):3
     [0>=V_2,D=5,C=0] 
* CE 68: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):4
     [V_12>=1,V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_7,D=5,C=0] 
* CE 69: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):5
     [V_14>=1,V_12>=1,V_2>=1,0>=V_13+1,0>=V_7,D=5,C=0] 
* CE 70: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):6
     [V_13>=1,V_12>=1,V_2>=1,0>=V_14+1,0>=V_7,D=5,C=0] 
* CE 71: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):7
     [V_14>=1,V_13>=1,V_12>=1,V_2>=1,0>=V_7,D=5,C=0] 
* CE 72: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):8
     [V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_12,D=5,C=0] 
* CE 73: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):9
     [V_14>=1,V_2>=1,0>=V_13+1,0>=V_12,D=5,C=0] 
* CE 74: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):10
     [V_13>=1,V_2>=1,0>=V_14+1,0>=V_12,D=5,C=0] 
* CE 75: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):11
     [V_14>=1,V_13>=1,V_2>=1,0>=V_12,D=5,C=0] 
* CE 76: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):12
     [V_12>=1,V_7>=1,V_2>=1,D=5,C=0] 
* CE 77: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):13
     [0>=V_2,D=5,C=0] 
* CE 78: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,C,D,E):14
     [V_12>=1,V_2>=1,0>=V_7,E=5,D=0,C=0,V_14=0] 
* CE 79: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):15
     [V_12>=1,V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_7,D=5,C=0] 
* CE 80: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):16
     [V_14>=1,V_12>=1,V_2>=1,0>=V_13+1,0>=V_7,D=5,C=0] 
* CE 81: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):17
     [V_13>=1,V_12>=1,V_2>=1,0>=V_14+1,0>=V_7,D=5,C=0] 
* CE 82: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):18
     [V_14>=1,V_13>=1,V_12>=1,V_2>=1,0>=V_7,D=5,C=0] 
* CE 83: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,C,D,E):19
     [V_2>=1,0>=V_12,E=5,D=0,C=0,V_14=0] 
* CE 84: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):20
     [V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_12,D=5,C=0] 
* CE 85: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):21
     [V_14>=1,V_2>=1,0>=V_13+1,0>=V_12,D=5,C=0] 
* CE 86: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):22
     [V_13>=1,V_2>=1,0>=V_14+1,0>=V_12,D=5,C=0] 
* CE 87: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):23
     [V_14>=1,V_13>=1,V_2>=1,0>=V_12,D=5,C=0] 
* CE 88: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) = 1+ eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,C,D):24
     [V_12>=1,V_7>=1,V_2>=1,D=5,C=0] 

### Cost equations --> "Loop" of eval_int_downsample_14/6 
* CEs [88] --> Loop 50 
* CEs [87] --> Loop 51 
* CEs [86] --> Loop 52 
* CEs [85] --> Loop 53 
* CEs [84] --> Loop 54 
* CEs [82] --> Loop 55 
* CEs [81] --> Loop 56 
* CEs [80] --> Loop 57 
* CEs [79] --> Loop 58 
* CEs [77] --> Loop 59 
* CEs [83] --> Loop 60 
* CEs [78] --> Loop 61 
* CEs [65,66,67,68,69,70,71,72,73,74,75,76] --> Loop 62 

#### Loops of eval_int_downsample_14/6 
* Loop 50: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_12>=1,V_7>=1,V_2>=1] 
* Loop 51: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_14>=1,V_13>=1,V_2>=1,0>=V_12] 
* Loop 52: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_13>=1,V_2>=1,0>=V_14+1,0>=V_12] 
* Loop 53: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_14>=1,V_2>=1,0>=V_13+1,0>=V_12] 
* Loop 54: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_12] 
* Loop 55: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_14>=1,V_13>=1,V_12>=1,V_2>=1,0>=V_7] 
* Loop 56: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_13>=1,V_12>=1,V_2>=1,0>=V_14+1,0>=V_7] 
* Loop 57: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_14>=1,V_12>=1,V_2>=1,0>=V_13+1,0>=V_7] 
* Loop 58: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_12>=1,V_2>=1,0>=V_14+1,0>=V_13+1,0>=V_7] 
* Loop 59: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [0>=V_2] 
* Loop 60: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_2>=1,0>=V_12,V_14=0] 
* Loop 61: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [V_12>=1,V_2>=1,0>=V_7,V_14=0] 
* Loop 62: eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) [] 

### Ranking functions of CR eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) 

#### Partial ranking functions of CR eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) 


### Resulting Chains:eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B) 
* [62]
* [61]...
* [60]...
* [59]...
* [58]...
* [57]...
* [56]...
* [55]...
* [54]...
* [53]...
* [52]...
* [51]...
* [50]...


### Merging Chains  eval_int_downsample_14/6 into  External patterns of execution 
* [[62]] --> 1 
* [[61]] --> 2 
* [[60]] --> 3 
* [[59]] --> 4 
* [[58]] --> 5 
* [[57]] --> 6 
* [[56]] --> 7 
* [[55]] --> 8 
* [[54]] --> 9 
* [[53]] --> 10 
* [[52]] --> 11 
* [[51]] --> 12 
* [[50]] --> 13 


### Specialization of cost equations eval_int_downsample_bb0_in/1 
* CE 3 is refined into CE [89,90,91,92,93,94,95,96,97] 
* CE 4 is refined into CE [98,99,100,101,102,103,104,105,106] 
* CE 5 is refined into CE [107,108,109,110,111,112,113,114,115] 
* CE 6 is refined into CE [116,117,118,119,120] 
* CE 7 is refined into CE [121,122,123,124,125] 
* CE 8 is refined into CE [126,127,128,129,130] 
* CE 9 is refined into CE [131,132,133,134,135] 
* CE 10 is refined into CE [136,137,138,139,140,141,142,143,144] 
* CE 11 is refined into CE [145,146,147,148,149] 
* CE 12 is refined into CE [150,151,152,153,154,155,156,157] 
* CE 13 is refined into CE [158,159,160,161,162,163,164,165] 
* CE 14 is refined into CE [166,167,168,169,170,171,172,173] 
* CE 15 is refined into CE [174,175,176,177,178] 
* CE 16 is refined into CE [179,180,181,182,183] 


#### Refined cost equations eval_int_downsample_bb0_in/1 
* CE 89: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [G>=0,E>=0,D>=0] 
* CE 90: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):2
     [E>=1,C>=1,G=0,D=0] 
* CE 91: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [D>=0,C>=1,G=0,E=0] 
* CE 92: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [G>=0,E>=0,D>=0,0>=C] 
* CE 93: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):6
     [G>=1,E>=1,C>=1,0>=F+1,D=0] 
* CE 94: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):8
     [G>=1,F>=1,E>=1,C>=1,D=0] 
* CE 95: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):10
     [G>=1,D>=0,C>=1,0>=F+1,E=0] 
* CE 96: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):12
     [G>=1,F>=1,D>=0,C>=1,E=0] 
* CE 97: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):13
     [G>=0,E>=1,D>=1,C>=1] 
* CE 98: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [E>=0,D>=0,0>=G] 
* CE 99: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):2
     [E>=1,C>=1,G=0,D=0] 
* CE 100: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [D>=0,C>=1,G=0,E=0] 
* CE 101: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [E>=0,D>=0,0>=G,0>=C] 
* CE 102: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):5
     [E>=1,C>=1,0>=G+1,0>=F+1,D=0] 
* CE 103: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):7
     [F>=1,E>=1,C>=1,0>=G+1,D=0] 
* CE 104: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):9
     [D>=0,C>=1,0>=G+1,0>=F+1,E=0] 
* CE 105: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):11
     [F>=1,D>=0,C>=1,0>=G+1,E=0] 
* CE 106: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):13
     [E>=1,D>=1,C>=1,0>=G] 
* CE 107: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [G>=0,E>=0,D>=0] 
* CE 108: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):2
     [E>=1,C>=1,G=0,D=0] 
* CE 109: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [D>=0,C>=1,G=0,E=0] 
* CE 110: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [G>=0,E>=0,D>=0,0>=C] 
* CE 111: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):6
     [G>=1,E>=1,C>=1,0>=F+1,D=0] 
* CE 112: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):8
     [G>=1,F>=1,E>=1,C>=1,D=0] 
* CE 113: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):10
     [G>=1,D>=0,C>=1,0>=F+1,E=0] 
* CE 114: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):12
     [G>=1,F>=1,D>=0,C>=1,E=0] 
* CE 115: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):13
     [G>=0,E>=1,D>=1,C>=1] 
* CE 116: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [G>=0,D>=0,0>=E] 
* CE 117: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [D>=0,C>=1,0>=E,G=0] 
* CE 118: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [G>=0,D>=0,0>=E,0>=C] 
* CE 119: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):10
     [G>=1,D>=0,C>=1,0>=F+1,0>=E] 
* CE 120: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):12
     [G>=1,F>=1,D>=0,C>=1,0>=E] 
* CE 121: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [D>=0,0>=G,0>=E] 
* CE 122: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [D>=0,C>=1,0>=E,G=0] 
* CE 123: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [D>=0,0>=G,0>=E,0>=C] 
* CE 124: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):9
     [D>=0,C>=1,0>=G+1,0>=F+1,0>=E] 
* CE 125: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):11
     [F>=1,D>=0,C>=1,0>=G+1,0>=E] 
* CE 126: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [G>=0,D>=0,0>=E] 
* CE 127: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [D>=0,C>=1,0>=E,G=0] 
* CE 128: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [G>=0,D>=0,0>=E,0>=C] 
* CE 129: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):10
     [G>=1,D>=0,C>=1,0>=F+1,0>=E] 
* CE 130: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):12
     [G>=1,F>=1,D>=0,C>=1,0>=E] 
* CE 131: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [D>=0,0>=G,0>=E] 
* CE 132: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [D>=0,C>=1,0>=E,G=0] 
* CE 133: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [D>=0,0>=G,0>=E,0>=C] 
* CE 134: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):9
     [D>=0,C>=1,0>=G+1,0>=F+1,0>=E] 
* CE 135: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):11
     [F>=1,D>=0,C>=1,0>=G+1,0>=E] 
* CE 136: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [E>=0,D>=0,0>=G] 
* CE 137: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):2
     [E>=1,C>=1,G=0,D=0] 
* CE 138: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [D>=0,C>=1,G=0,E=0] 
* CE 139: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [E>=0,D>=0,0>=G,0>=C] 
* CE 140: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):5
     [E>=1,C>=1,0>=G+1,0>=F+1,D=0] 
* CE 141: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):7
     [F>=1,E>=1,C>=1,0>=G+1,D=0] 
* CE 142: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):9
     [D>=0,C>=1,0>=G+1,0>=F+1,E=0] 
* CE 143: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):11
     [F>=1,D>=0,C>=1,0>=G+1,E=0] 
* CE 144: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):13
     [E>=1,D>=1,C>=1,0>=G] 
* CE 145: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [G>=0,D>=0,0>=E] 
* CE 146: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [D>=0,C>=1,0>=E,G=0] 
* CE 147: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [G>=0,D>=0,0>=E,0>=C] 
* CE 148: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):10
     [G>=1,D>=0,C>=1,0>=F+1,0>=E] 
* CE 149: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):12
     [G>=1,F>=1,D>=0,C>=1,0>=E] 
* CE 150: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [G>=0,E>=0,0>=D] 
* CE 151: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):2
     [E>=1,C>=1,0>=D,G=0] 
* CE 152: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [C>=1,0>=D,G=0,E=0] 
* CE 153: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [G>=0,E>=0,0>=D,0>=C] 
* CE 154: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):6
     [G>=1,E>=1,C>=1,0>=F+1,0>=D] 
* CE 155: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):8
     [G>=1,F>=1,E>=1,C>=1,0>=D] 
* CE 156: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):10
     [G>=1,C>=1,0>=F+1,0>=D,E=0] 
* CE 157: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):12
     [G>=1,F>=1,C>=1,0>=D,E=0] 
* CE 158: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [E>=0,0>=G,0>=D] 
* CE 159: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):2
     [E>=1,C>=1,0>=D,G=0] 
* CE 160: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [C>=1,0>=D,G=0,E=0] 
* CE 161: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [E>=0,0>=G,0>=D,0>=C] 
* CE 162: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):5
     [E>=1,C>=1,0>=G+1,0>=F+1,0>=D] 
* CE 163: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):7
     [F>=1,E>=1,C>=1,0>=G+1,0>=D] 
* CE 164: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):9
     [C>=1,0>=G+1,0>=F+1,0>=D,E=0] 
* CE 165: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):11
     [F>=1,C>=1,0>=G+1,0>=D,E=0] 
* CE 166: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [G>=0,E>=0,0>=D] 
* CE 167: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):2
     [E>=1,C>=1,0>=D,G=0] 
* CE 168: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [C>=1,0>=D,G=0,E=0] 
* CE 169: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [G>=0,E>=0,0>=D,0>=C] 
* CE 170: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):6
     [G>=1,E>=1,C>=1,0>=F+1,0>=D] 
* CE 171: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):8
     [G>=1,F>=1,E>=1,C>=1,0>=D] 
* CE 172: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):10
     [G>=1,C>=1,0>=F+1,0>=D,E=0] 
* CE 173: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):12
     [G>=1,F>=1,C>=1,0>=D,E=0] 
* CE 174: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [G>=0,0>=E,0>=D] 
* CE 175: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [C>=1,0>=E,0>=D,G=0] 
* CE 176: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [G>=0,0>=E,0>=D,0>=C] 
* CE 177: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):10
     [G>=1,C>=1,0>=F+1,0>=E,0>=D] 
* CE 178: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):12
     [G>=1,F>=1,C>=1,0>=E,0>=D] 
* CE 179: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):1
     [0>=G,0>=E,0>=D] 
* CE 180: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):3
     [C>=1,0>=E,0>=D,G=0] 
* CE 181: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):4
     [0>=G,0>=E,0>=D,0>=C] 
* CE 182: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):9
     [C>=1,0>=G+1,0>=F+1,0>=E,0>=D] 
* CE 183: eval_int_downsample_bb0_in(B) = 0+ eval_int_downsample_14(C,D,E,F,G,B):11
     [F>=1,C>=1,0>=G+1,0>=E,0>=D] 

### Cost equations --> "Loop" of eval_int_downsample_bb0_in/1 
* CEs [90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,119,120,122,123,124,125,127,128,129,130,132,133,134,135,137,138,139,140,141,142,143,144,146,147,148,149,151,152,153,154,155,156,157,159,160,161,162,163,164,165,167,168,169,170,171,172,173,175,176,177,178,180,181,182,183] --> Loop 63 
* CEs [89,98,107,116,121,126,131,136,145,150,158,166,174,179] --> Loop 64 

#### Loops of eval_int_downsample_bb0_in/1 
* Loop 63: eval_int_downsample_bb0_in(B) [] 
* Loop 64: eval_int_downsample_bb0_in(B) [] 

### Ranking functions of CR eval_int_downsample_bb0_in(B) 

#### Partial ranking functions of CR eval_int_downsample_bb0_in(B) 


### Resulting Chains:eval_int_downsample_bb0_in(B) 
* [64]
* [63]...


### Merging Chains  eval_int_downsample_bb0_in/1 into  External patterns of execution 
* [[64]] --> 1 
* [[63]] --> 2 


### Specialization of cost equations eval_int_downsample_start/1 
* CE 2 is refined into CE [184,185] 


#### Refined cost equations eval_int_downsample_start/1 
* CE 184: eval_int_downsample_start(B) = 0+ eval_int_downsample_bb0_in(B):1
     [] 
* CE 185: eval_int_downsample_start(B) = 0+ eval_int_downsample_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_int_downsample_start/1 
* CEs [185] --> Loop 65 
* CEs [184] --> Loop 66 

#### Loops of eval_int_downsample_start/1 
* Loop 65: eval_int_downsample_start(B) [] 
* Loop 66: eval_int_downsample_start(B) [] 

### Ranking functions of CR eval_int_downsample_start(B) 

#### Partial ranking functions of CR eval_int_downsample_start(B) 


### Resulting Chains:eval_int_downsample_start(B) 
* [66]
* [65]...


### Merging Chains  eval_int_downsample_start/1 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,V_h_0,V_outvalue_1,B,C,D,E,F,G,H,I,J,K) -> [eval_int_downsample_bb7_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',V_h_0',V_outvalue_1',B',C',D',E',F',G',H',I',J',K')] 
1
#### Cost of phase [16]:eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,V_h_0,V_outvalue_1,B,C,D,E,F,G,H,I,J,K) -> [eval_int_downsample_bb7_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',V_h_0',V_outvalue_1',B',C',D',E',F',G',H',I',J',K')] 
1*it(16)+0
  Such that:it(16) =< V_7-V_h_0
it(16) =< V_7-V_h_0-V_7'+V_h_0'

#### Cost of chains of eval_int_downsample_bb7_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,V_h_0,V_outvalue_1,B,C,D,E,F,G,H,I,J,K):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_7-V_h_0

  with precondition: [B=2,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0=I,V_v_0+1=J,V_h_0>=0,V_12>=V_v_0+1,V_7>=V_h_0+1] 

* Chain [17]: 0
  with precondition: [B=2,C=V_2,F=V_13,G=V_14,H=V_outrow_0,I=V_outcol_0,K=V_outvalue_1,V_7=D,V_12=E,V_v_0+1=J,V_h_0>=0,V_h_0>=V_7,V_12>=V_v_0+1] 


#### Cost of loops [19] 

 * loop 19:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2
#### Cost of phase [19]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(19)+0
  Such that:it(19) =< V_12-V_v_0
it(19) =< V_12-V_v_0-V_12'+V_v_0'

#### Cost of phase [19]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(19)+0
  Such that:it(19) =< V_12-V_v_0
it(19) =< V_12-V_v_0-V_12'+V_v_0'

#### Cost of phase [19]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(19)+0
  Such that:it(19) =< V_12-V_v_0
it(19) =< V_12-V_v_0-V_12'+V_v_0'

#### Cost of phase [19]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(19)+0
  Such that:it(19) =< V_12-V_v_0
it(19) =< V_12-V_v_0-V_12'+V_v_0'

#### Cost of phase [19]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(19)+0
  Such that:it(19) =< V_12-V_v_0
it(19) =< V_12-V_v_0-V_12'+V_v_0'

#### Cost of loops [18] 

 * loop 18:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
1*s(2)+2
  Such that:s(2) =< V_7'

#### Cost of phase [18]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(18)+1*s(3)+0
  Such that:aux(1) =< V_7
it(18) =< V_12-V_v_0
it(18) =< V_12-V_v_0-V_12'+V_v_0'
s(3) =< it(18)*aux(1)

#### Cost of phase [18]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(18)+1*s(3)+0
  Such that:aux(1) =< V_7
it(18) =< V_12-V_v_0
it(18) =< V_12-V_v_0-V_12'+V_v_0'
s(3) =< it(18)*aux(1)

#### Cost of phase [18]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(18)+1*s(3)+0
  Such that:aux(1) =< V_7
it(18) =< V_12-V_v_0
it(18) =< V_12-V_v_0-V_12'+V_v_0'
s(3) =< it(18)*aux(1)

#### Cost of phase [18]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(18)+1*s(3)+0
  Such that:aux(1) =< V_7
it(18) =< V_12-V_v_0
it(18) =< V_12-V_v_0-V_12'+V_v_0'
s(3) =< it(18)*aux(1)

#### Cost of phase [18]:eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I) -> [eval_int_downsample_bb5_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',V_v_0',V_outvalue_0',B',C',D',E',F',G',H',I')] 
2*it(18)+1*s(3)+0
  Such that:aux(1) =< V_7
it(18) =< V_12-V_v_0
it(18) =< V_12-V_v_0-V_12'+V_v_0'
s(3) =< it(18)*aux(1)

#### Cost of chains of eval_int_downsample_bb5_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,V_v_0,V_outvalue_0,B,C,D,E,F,G,H,I):
* Chain [[19],24]: 2*it(19)+0
  Such that:it(19) =< -V_v_0+E

  with precondition: [V_14=0,V_outvalue_0=0,B=3,G=0,V_2=C,V_7=D,V_12=E,V_13=F,V_outrow_0=H,V_outcol_0+1=I,0>=V_7,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [[19],23]: 2*it(19)+0
  Such that:it(19) =< -V_v_0+E

  with precondition: [V_outvalue_0=0,B=3,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0+1=I,0>=V_7,0>=V_13+1,0>=V_14+1,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [[19],22]: 2*it(19)+0
  Such that:it(19) =< -V_v_0+E

  with precondition: [V_outvalue_0=0,B=3,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0+1=I,0>=V_7,0>=V_13+1,V_14>=1,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [[19],21]: 2*it(19)+0
  Such that:it(19) =< -V_v_0+E

  with precondition: [V_outvalue_0=0,B=3,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0+1=I,0>=V_7,0>=V_14+1,V_13>=1,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [[19],20]: 2*it(19)+0
  Such that:it(19) =< V_12-V_v_0

  with precondition: [V_outvalue_0=0,B=3,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0+1=I,0>=V_7,V_13>=1,V_14>=1,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [[18],24]: 2*it(18)+1*s(3)+0
  Such that:it(18) =< -V_v_0+E
aux(1) =< D
s(3) =< it(18)*aux(1)

  with precondition: [B=3,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0+1=I,V_7>=1,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [[18],23]: 2*it(18)+1*s(3)+0
  Such that:it(18) =< -V_v_0+E
aux(1) =< D
s(3) =< it(18)*aux(1)

  with precondition: [B=3,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0+1=I,0>=V_13+1,V_7>=1,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [[18],22]: 2*it(18)+1*s(3)+0
  Such that:it(18) =< -V_v_0+E
aux(1) =< D
s(3) =< it(18)*aux(1)

  with precondition: [B=3,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0+1=I,0>=V_13+1,V_7>=1,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [[18],21]: 2*it(18)+1*s(3)+0
  Such that:it(18) =< -V_v_0+E
aux(1) =< D
s(3) =< it(18)*aux(1)

  with precondition: [B=3,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0+1=I,V_7>=1,V_13>=1,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [[18],20]: 2*it(18)+1*s(3)+0
  Such that:it(18) =< -V_v_0+E
aux(1) =< D
s(3) =< it(18)*aux(1)

  with precondition: [B=3,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0=H,V_outcol_0+1=I,V_7>=1,V_13>=1,V_v_0>=0,V_2>=V_outcol_0+1,V_12>=V_v_0+1] 

* Chain [24]: 0
  with precondition: [B=3,D=V_7,F=V_13,H=V_outrow_0,V_2=C,V_12=E,V_14=G,V_outcol_0+1=I,V_14+V_outvalue_0=0,V_v_0>=0,V_v_0>=V_12,V_2>=V_outcol_0+1] 

* Chain [23]: 0
  with precondition: [B=3,D=V_7,H=V_outrow_0,V_2=C,V_12=E,V_13=F,V_14=G,V_outcol_0+1=I,0>=V_13+1,V_v_0>=0,V_v_0>=V_12,0>=V_14+V_outvalue_0+1,V_2>=V_outcol_0+1] 

* Chain [22]: 0
  with precondition: [B=3,D=V_7,H=V_outrow_0,V_2=C,V_12=E,V_13=F,V_14=G,V_outcol_0+1=I,0>=V_13+1,V_v_0>=0,V_v_0>=V_12,V_2>=V_outcol_0+1,V_14+V_outvalue_0>=1] 

* Chain [21]: 0
  with precondition: [B=3,D=V_7,H=V_outrow_0,V_2=C,V_12=E,V_13=F,V_14=G,V_outcol_0+1=I,V_13>=1,V_v_0>=0,V_v_0>=V_12,0>=V_14+V_outvalue_0+1,V_2>=V_outcol_0+1] 

* Chain [20]: 0
  with precondition: [B=3,D=V_7,H=V_outrow_0,V_2=C,V_12=E,V_13=F,V_14=G,V_outcol_0+1=I,V_13>=1,V_v_0>=0,V_v_0>=V_12,V_2>=V_outcol_0+1,V_14+V_outvalue_0>=1] 


#### Cost of loops [35] 

 * loop 35:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*s(20)+2
  Such that:s(20) =< V_12'

#### Cost of phase [35]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(35)+2*s(21)+0
  Such that:it(35) =< V_2-V_outcol_0
it(35) =< V_2-V_outcol_0-V_2'+V_outcol_0'
aux(6) =< V_12
s(21) =< it(35)*aux(6)

#### Cost of loops [34] 

 * loop 34:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2
#### Cost of phase [34]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(34)+0
  Such that:it(34) =< V_2-V_outcol_0
it(34) =< V_2-V_outcol_0-V_2'+V_outcol_0'

#### Cost of loops [33] 

 * loop 33:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*s(23)+2
  Such that:s(23) =< V_12'

#### Cost of phase [33]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(33)+2*s(24)+0
  Such that:it(33) =< V_2-V_outcol_0
it(33) =< V_2-V_outcol_0-V_2'+V_outcol_0'
aux(7) =< V_12
s(24) =< it(33)*aux(7)

#### Cost of loops [32] 

 * loop 32:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*s(26)+2
  Such that:s(26) =< V_12'

#### Cost of phase [32]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(32)+2*s(27)+0
  Such that:it(32) =< V_2-V_outcol_0
it(32) =< V_2-V_outcol_0-V_2'+V_outcol_0'
aux(8) =< V_12
s(27) =< it(32)*aux(8)

#### Cost of loops [31] 

 * loop 31:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*s(29)+2
  Such that:s(29) =< V_12'

#### Cost of phase [31]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(31)+2*s(30)+0
  Such that:it(31) =< V_2-V_outcol_0
it(31) =< V_2-V_outcol_0-V_2'+V_outcol_0'
aux(9) =< V_12
s(30) =< it(31)*aux(9)

#### Cost of loops [30] 

 * loop 30:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*s(32)+2
  Such that:s(32) =< V_12'

#### Cost of phase [30]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(30)+2*s(33)+0
  Such that:it(30) =< V_2-V_outcol_0
it(30) =< V_2-V_outcol_0-V_2'+V_outcol_0'
aux(10) =< V_12
s(33) =< it(30)*aux(10)

#### Cost of loops [29] 

 * loop 29:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2
#### Cost of phase [29]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(29)+0
  Such that:it(29) =< V_2-V_outcol_0
it(29) =< V_2-V_outcol_0-V_2'+V_outcol_0'

#### Cost of loops [28] 

 * loop 28:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2
#### Cost of phase [28]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(28)+0
  Such that:it(28) =< V_2-V_outcol_0
it(28) =< V_2-V_outcol_0-V_2'+V_outcol_0'

#### Cost of loops [27] 

 * loop 27:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2
#### Cost of phase [27]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(27)+0
  Such that:it(27) =< V_2-V_outcol_0
it(27) =< V_2-V_outcol_0-V_2'+V_outcol_0'

#### Cost of loops [26] 

 * loop 26:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2
#### Cost of phase [26]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(26)+0
  Such that:it(26) =< V_2-V_outcol_0
it(26) =< V_2-V_outcol_0-V_2'+V_outcol_0'

#### Cost of loops [25] 

 * loop 25:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
10*s(44)+5*s(45)+2
  Such that:s(42) =< V_7'
s(43) =< V_12'
s(44) =< s(43)
s(45) =< s(44)*s(42)

#### Cost of phase [25]:eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H) -> [eval_int_downsample_bb3_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',V_outcol_0',B',C',D',E',F',G',H')] 
2*it(25)+10*s(46)+5*s(47)+0
  Such that:it(25) =< V_2-V_outcol_0
it(25) =< V_2-V_outcol_0-V_2'+V_outcol_0'
s(42) =< V_7
aux(13) =< V_12
s(48) =< it(25)*aux(13)
s(46) =< s(48)
s(47) =< s(46)*s(42)

#### Cost of chains of eval_int_downsample_bb3_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,V_outcol_0,B,C,D,E,F,G,H):
* Chain [[35],36]: 2*it(35)+2*s(21)+0
  Such that:it(35) =< V_2-V_outcol_0
aux(6) =< E
s(21) =< it(35)*aux(6)

  with precondition: [V_14=0,B=4,G=0,V_2=C,V_7=D,V_12=E,V_13=F,V_outrow_0+1=H,0>=V_7,V_12>=1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[34],36]: 2*it(34)+0
  Such that:it(34) =< V_2-V_outcol_0

  with precondition: [V_14=0,B=4,G=0,V_2=C,V_7=D,V_12=E,V_13=F,V_outrow_0+1=H,0>=V_12,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[33],36]: 2*it(33)+2*s(24)+0
  Such that:it(33) =< -V_outcol_0+C
aux(7) =< E
s(24) =< it(33)*aux(7)

  with precondition: [B=4,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0+1=H,0>=V_7,0>=V_13+1,0>=V_14+1,V_12>=1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[32],36]: 2*it(32)+2*s(27)+0
  Such that:it(32) =< -V_outcol_0+C
aux(8) =< E
s(27) =< it(32)*aux(8)

  with precondition: [B=4,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0+1=H,0>=V_7,0>=V_13+1,V_12>=1,V_14>=1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[31],36]: 2*it(31)+2*s(30)+0
  Such that:it(31) =< -V_outcol_0+C
aux(9) =< E
s(30) =< it(31)*aux(9)

  with precondition: [B=4,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0+1=H,0>=V_7,0>=V_14+1,V_12>=1,V_13>=1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[30],36]: 2*it(30)+2*s(33)+0
  Such that:it(30) =< -V_outcol_0+C
aux(10) =< E
s(33) =< it(30)*aux(10)

  with precondition: [B=4,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0+1=H,0>=V_7,V_12>=1,V_13>=1,V_14>=1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[29],36]: 2*it(29)+0
  Such that:it(29) =< V_2-V_outcol_0

  with precondition: [B=4,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0+1=H,0>=V_12,0>=V_13+1,0>=V_14+1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[28],36]: 2*it(28)+0
  Such that:it(28) =< V_2-V_outcol_0

  with precondition: [B=4,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0+1=H,0>=V_12,0>=V_13+1,V_14>=1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[27],36]: 2*it(27)+0
  Such that:it(27) =< -V_outcol_0+C

  with precondition: [B=4,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0+1=H,0>=V_12,0>=V_14+1,V_13>=1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[26],36]: 2*it(26)+0
  Such that:it(26) =< -V_outcol_0+C

  with precondition: [B=4,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0+1=H,0>=V_12,V_13>=1,V_14>=1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [[25],36]: 2*it(25)+10*s(46)+5*s(47)+0
  Such that:it(25) =< -V_outcol_0+C
s(42) =< D
aux(13) =< E
s(48) =< it(25)*aux(13)
s(46) =< s(48)
s(47) =< s(46)*s(42)

  with precondition: [B=4,V_2=C,V_7=D,V_12=E,V_13=F,V_14=G,V_outrow_0+1=H,V_7>=1,V_12>=1,V_outcol_0>=0,V_2>=V_outcol_0+1] 

* Chain [36]: 0
  with precondition: [B=4,D=V_7,E=V_12,F=V_13,G=V_14,H=V_outrow_0+1,V_2=C,V_outcol_0>=0,V_outcol_0>=V_2] 


#### Cost of loops [48] 

 * loop 48:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(52)+2*s(54)+2
  Such that:s(52) =< V_2
s(53) =< V_12'
s(54) =< s(52)*s(53)

#### Cost of phase [48]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(48)+2*s(55)+2*s(56)+0
#### Cost of phase [48]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(48)+2*s(55)+2*s(56)+0
#### Cost of loops [47] 

 * loop 47:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(58)+2
  Such that:s(58) =< V_2

#### Cost of phase [47]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(47)+2*s(59)+0
#### Cost of phase [47]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(47)+2*s(59)+0
#### Cost of loops [46] 

 * loop 46:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2
#### Cost of phase [46]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(46)+0
#### Cost of phase [46]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(46)+0
#### Cost of loops [45] 

 * loop 45:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(63)+2*s(65)+2
  Such that:s(63) =< V_2'
s(64) =< V_12'
s(65) =< s(63)*s(64)

#### Cost of phase [45]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(45)+2*s(66)+2*s(67)+0
#### Cost of phase [45]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(45)+2*s(66)+2*s(67)+0
#### Cost of loops [44] 

 * loop 44:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(71)+2*s(73)+2
  Such that:s(71) =< V_2'
s(72) =< V_12'
s(73) =< s(71)*s(72)

#### Cost of phase [44]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(44)+2*s(74)+2*s(75)+0
#### Cost of phase [44]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(44)+2*s(74)+2*s(75)+0
#### Cost of loops [43] 

 * loop 43:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(79)+2*s(81)+2
  Such that:s(79) =< V_2
s(80) =< V_12'
s(81) =< s(79)*s(80)

#### Cost of phase [43]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(43)+2*s(82)+2*s(83)+0
#### Cost of phase [43]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(43)+2*s(82)+2*s(83)+0
#### Cost of loops [42] 

 * loop 42:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(87)+2*s(89)+2
  Such that:s(87) =< V_2
s(88) =< V_12'
s(89) =< s(87)*s(88)

#### Cost of phase [42]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(42)+2*s(90)+2*s(91)+0
#### Cost of phase [42]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(42)+2*s(90)+2*s(91)+0
#### Cost of loops [41] 

 * loop 41:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(93)+2
  Such that:s(93) =< V_2

#### Cost of phase [41]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(41)+2*s(94)+0
#### Cost of phase [41]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(41)+2*s(94)+0
#### Cost of loops [40] 

 * loop 40:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(96)+2
  Such that:s(96) =< V_2'

#### Cost of phase [40]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(40)+2*s(97)+0
#### Cost of phase [40]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(40)+2*s(97)+0
#### Cost of loops [39] 

 * loop 39:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(99)+2
  Such that:s(99) =< V_2

#### Cost of phase [39]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(39)+2*s(100)+0
#### Cost of phase [39]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(39)+2*s(100)+0
#### Cost of loops [38] 

 * loop 38:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(102)+2
  Such that:s(102) =< V_2

#### Cost of phase [38]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(38)+2*s(103)+0
#### Cost of phase [38]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(38)+2*s(103)+0
#### Cost of loops [37] 

 * loop 37:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*s(110)+10*s(114)+5*s(115)+2
  Such that:s(110) =< V_2'
s(111) =< V_7'
s(112) =< V_12'
s(113) =< s(110)*s(112)
s(114) =< s(113)
s(115) =< s(114)*s(111)

#### Cost of phase [37]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(37)+2*s(116)+10*s(117)+5*s(118)+0
#### Cost of phase [37]:eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B) -> [eval_int_downsample_bb1_in(V_2',V_7',V_12',V_13',V_14',V_outrow_0',B')] 
2*it(37)+2*s(116)+10*s(117)+5*s(118)+0
#### Cost of chains of eval_int_downsample_bb1_in(V_2,V_7,V_12,V_13,V_14,V_outrow_0,B):
* Chain [[48]]...: 6*it(48)+0
  with precondition: [V_2>=1,0>=V_7,V_12>=1,V_14=0,B=5] 

* Chain [[48],49]: 6*it(48)+0
  with precondition: [V_14=0,B=5,0>=V_7,V_2>=1,V_12>=1,V_outrow_0>=0] 

* Chain [[47]]...: 4*it(47)+0
  with precondition: [V_2>=1,0>=V_12,V_14=0,B=5] 

* Chain [[47],49]: 4*it(47)+0
  with precondition: [V_14=0,B=5,0>=V_12,V_2>=1,V_outrow_0>=0] 

* Chain [[46]]...: 2*it(46)+0
  with precondition: [0>=V_2,B=5] 

* Chain [[46],49]: 2*it(46)+0
  with precondition: [B=5,0>=V_2,V_outrow_0>=0] 

* Chain [[45]]...: 6*it(45)+0
  with precondition: [V_2>=1,0>=V_7,V_12>=1,0>=V_13+1,0>=V_14+1,B=5] 

* Chain [[45],49]: 6*it(45)+0
  with precondition: [B=5,0>=V_7,0>=V_13+1,0>=V_14+1,V_2>=1,V_12>=1,V_outrow_0>=0] 

* Chain [[44]]...: 6*it(44)+0
  with precondition: [V_2>=1,0>=V_7,V_12>=1,0>=V_13+1,V_14>=1,B=5] 

* Chain [[44],49]: 6*it(44)+0
  with precondition: [B=5,0>=V_7,0>=V_13+1,V_2>=1,V_12>=1,V_14>=1,V_outrow_0>=0] 

* Chain [[43]]...: 6*it(43)+0
  with precondition: [V_2>=1,0>=V_7,V_12>=1,V_13>=1,0>=V_14+1,B=5] 

* Chain [[43],49]: 6*it(43)+0
  with precondition: [B=5,0>=V_7,0>=V_14+1,V_2>=1,V_12>=1,V_13>=1,V_outrow_0>=0] 

* Chain [[42]]...: 6*it(42)+0
  with precondition: [V_2>=1,0>=V_7,V_12>=1,V_13>=1,V_14>=1,B=5] 

* Chain [[42],49]: 6*it(42)+0
  with precondition: [B=5,0>=V_7,V_2>=1,V_12>=1,V_13>=1,V_14>=1,V_outrow_0>=0] 

* Chain [[41]]...: 4*it(41)+0
  with precondition: [V_2>=1,0>=V_12,0>=V_13+1,0>=V_14+1,B=5] 

* Chain [[41],49]: 4*it(41)+0
  with precondition: [B=5,0>=V_12,0>=V_13+1,0>=V_14+1,V_2>=1,V_outrow_0>=0] 

* Chain [[40]]...: 4*it(40)+0
  with precondition: [V_2>=1,0>=V_12,0>=V_13+1,V_14>=1,B=5] 

* Chain [[40],49]: 4*it(40)+0
  with precondition: [B=5,0>=V_12,0>=V_13+1,V_2>=1,V_14>=1,V_outrow_0>=0] 

* Chain [[39]]...: 4*it(39)+0
  with precondition: [V_2>=1,0>=V_12,V_13>=1,0>=V_14+1,B=5] 

* Chain [[39],49]: 4*it(39)+0
  with precondition: [B=5,0>=V_12,0>=V_14+1,V_2>=1,V_13>=1,V_outrow_0>=0] 

* Chain [[38]]...: 4*it(38)+0
  with precondition: [V_2>=1,0>=V_12,V_13>=1,V_14>=1,B=5] 

* Chain [[38],49]: 4*it(38)+0
  with precondition: [B=5,0>=V_12,V_2>=1,V_13>=1,V_14>=1,V_outrow_0>=0] 

* Chain [[37]]...: 19*it(37)+0
  with precondition: [V_2>=1,V_7>=1,V_12>=1,B=5] 

* Chain [[37],49]: 19*it(37)+0
  with precondition: [B=5,V_2>=1,V_7>=1,V_12>=1,V_outrow_0>=0] 

* Chain [49]: 0
  with precondition: [B=5,V_outrow_0>=0] 


#### Cost of chains of eval_int_downsample_14(V_2,V_7,V_12,V_13,V_14,B):
* Chain [62]: 1*aux(26)+0
  with precondition: [] 

* Chain [61]...: 6*s(133)+1
  with precondition: [V_14=0,0>=V_7,V_2>=1,V_12>=1] 

* Chain [60]...: 4*s(134)+1
  with precondition: [V_14=0,0>=V_12,V_2>=1] 

* Chain [59]...: 2*s(135)+1
  with precondition: [0>=V_2] 

* Chain [58]...: 6*s(136)+1
  with precondition: [0>=V_7,0>=V_13+1,0>=V_14+1,V_2>=1,V_12>=1] 

* Chain [57]...: 6*s(137)+1
  with precondition: [0>=V_7,0>=V_13+1,V_2>=1,V_12>=1,V_14>=1] 

* Chain [56]...: 6*s(138)+1
  with precondition: [0>=V_7,0>=V_14+1,V_2>=1,V_12>=1,V_13>=1] 

* Chain [55]...: 6*s(139)+1
  with precondition: [0>=V_7,V_2>=1,V_12>=1,V_13>=1,V_14>=1] 

* Chain [54]...: 4*s(140)+1
  with precondition: [0>=V_12,0>=V_13+1,0>=V_14+1,V_2>=1] 

* Chain [53]...: 4*s(141)+1
  with precondition: [0>=V_12,0>=V_13+1,V_2>=1,V_14>=1] 

* Chain [52]...: 4*s(142)+1
  with precondition: [0>=V_12,0>=V_14+1,V_2>=1,V_13>=1] 

* Chain [51]...: 4*s(143)+1
  with precondition: [0>=V_12,V_2>=1,V_13>=1,V_14>=1] 

* Chain [50]...: 19*s(144)+1
  with precondition: [V_2>=1,V_7>=1,V_12>=1] 


#### Cost of chains of eval_int_downsample_bb0_in(B):
* Chain [64]: 1*aux(27)+0
  with precondition: [] 

* Chain [63]...: 1*aux(28)+0
  with precondition: [] 


#### Cost of chains of eval_int_downsample_start(B):
* Chain [66]: 1*s(240)+0
  with precondition: [] 

* Chain [65]...: 1*s(241)+0
  with precondition: [] 


Closed-form bounds of eval_int_downsample_start(B): 
-------------------------------------
* Chain [66] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [65]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_int_downsample_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 685 ms.
* Invariants computed in 400 ms.
   - Backward Invariants 202 ms.
   - Transitive Invariants 95 ms.
* Refinement performed in 675 ms.
* Termination proved in 90 ms.
* Upper bounds computed in 910 ms.
   - Equation cost structures 291 ms.
   - Phase cost structures 461 ms.
   - Chain cost structures 229 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 3135 ms.

