WARNING: Excluded non-linear constraints:[J=G*A]
WARNING: Excluded non-linear constraints:[J=G*A]
Warning: Ignored call to eval_clist_change_tile_stop/1 in equation eval_clist_change_tile_bb36_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_clist_change_tile_1/4,eval_clist_change_tile_170/5,eval_clist_change_tile_171/5,eval_clist_change_tile_177/6,eval_clist_change_tile_178/7,eval_clist_change_tile_2/5,eval_clist_change_tile_bb1_in/3,eval_clist_change_tile_bb33_in/5,eval_clist_change_tile_bb35_in/5]
1. non_recursive  : [eval_clist_change_tile_bb36_in/1]
2. non_recursive  : [eval_clist_change_tile_bb28_in/1]
3. non_recursive  : [eval_clist_change_tile_28/1]
4. non_recursive  : [eval_clist_change_tile_27/1]
5. non_recursive  : [eval_clist_change_tile_42/1]
6. non_recursive  : [eval_clist_change_tile_41/1]
7. recursive  : [eval_clist_change_tile_bb16_in/4]
8. non_recursive  : [eval_clist_change_tile_138/1]
9. non_recursive  : [eval_clist_change_tile_137/2]
10. non_recursive  : [eval_clist_change_tile_135/2]
11. non_recursive  : [eval_clist_change_tile_134/3]
12. non_recursive  : [eval_clist_change_tile_bb27_in/2]
13. non_recursive  : [eval_clist_change_tile_bb25_in/2]
14. non_recursive  : [eval_clist_change_tile_116/2]
15. non_recursive  : [eval_clist_change_tile_115/4]
16. non_recursive  : [eval_clist_change_tile_114/4]
17. non_recursive  : [eval_clist_change_tile_113/9]
18. non_recursive  : [eval_clist_change_tile_99/6]
19. non_recursive  : [eval_clist_change_tile_98/6]
20. non_recursive  : [eval_clist_change_tile_96/6]
21. non_recursive  : [eval_clist_change_tile_95/6]
22. non_recursive  : [eval_clist_change_tile_bb21_in/3]
23. non_recursive  : [eval_clist_change_tile_89/2]
24. non_recursive  : [eval_clist_change_tile_88/2]
25. non_recursive  : [eval_clist_change_tile_bb19_in/2]
26. non_recursive  : [loop_cont_eval_clist_change_tile_bb16_in/3]
27. non_recursive  : [eval_clist_change_tile_67/2]
28. non_recursive  : [eval_clist_change_tile_66/2]
29. non_recursive  : [eval_clist_change_tile_bb15_in/2]
30. non_recursive  : [loop_cont_eval_clist_change_tile_bb1_in/3]
31. non_recursive  : [eval_clist_change_tile_bb0_in/2]
32. non_recursive  : [eval_clist_change_tile_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_clist_change_tile_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_clist_change_tile_28/1
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_clist_change_tile_42/1
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_clist_change_tile_bb16_in/4
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_clist_change_tile_114/4
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_clist_change_tile_99/6
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_clist_change_tile_bb19_in/2
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_clist_change_tile_67/2
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into loop_cont_eval_clist_change_tile_bb1_in/3
31. SCC is partially evaluated into eval_clist_change_tile_bb0_in/2
32. SCC is partially evaluated into eval_clist_change_tile_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_clist_change_tile_bb1_in/3 
* CE 9 is refined into CE [23] 
* CE 8 is refined into CE [24] 
* CE 7 is refined into CE [25] 
* CE 6 is refined into CE [26] 
* CE 5 is refined into CE [27] 
* CE 4 is refined into CE [28] 


#### Refined cost equations eval_clist_change_tile_bb1_in/3 
* CE 23: eval_clist_change_tile_bb1_in(A,B,A) = 0
     [B=6] 
* CE 24: eval_clist_change_tile_bb1_in(A,B,A) = 0
     [B=5] 
* CE 25: eval_clist_change_tile_bb1_in(V_depth,B,C) = 0
     [B=4] 
* CE 26: eval_clist_change_tile_bb1_in(V_depth,B,C) = 0
     [B=3] 
* CE 27: eval_clist_change_tile_bb1_in(V_depth,B,C) = 0
     [B=2] 
* CE 28: eval_clist_change_tile_bb1_in(V_depth,B,C) = 1+ eval_clist_change_tile_bb1_in(V_depth,B,C)
     [] 

### Cost equations --> "Loop" of eval_clist_change_tile_bb1_in/3 
* CEs [28] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [25] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [27] --> Loop 27 

#### Loops of eval_clist_change_tile_bb1_in/3 
* Loop 22: eval_clist_change_tile_bb1_in(V_depth,B,C)->  eval_clist_change_tile_bb1_in(V_depth,B,C)
                  [] 
* Loop 23: eval_clist_change_tile_bb1_in(A,B,A) [B=6] 
* Loop 24: eval_clist_change_tile_bb1_in(A,B,A) [B=5] 
* Loop 25: eval_clist_change_tile_bb1_in(V_depth,B,C) [B=4] 
* Loop 26: eval_clist_change_tile_bb1_in(V_depth,B,C) [B=3] 
* Loop 27: eval_clist_change_tile_bb1_in(V_depth,B,C) [B=2] 

### Ranking functions of CR eval_clist_change_tile_bb1_in(V_depth,B,C) 

#### Partial ranking functions of CR eval_clist_change_tile_bb1_in(V_depth,B,C) 


### Resulting Chains:eval_clist_change_tile_bb1_in(V_depth,B,C) 
* [[22]]...
* [[22],27]
* [[22],26]
* [[22],25]
* [[22],24]
* [[22],23]
* [27]
* [26]
* [25]
* [24]
* [23]


### Merging Chains  eval_clist_change_tile_bb1_in/3 into  External patterns of execution 
* [[27],[27,[22]]] --> 1 
* [[26],[26,[22]]] --> 2 
* [[25],[25,[22]]] --> 3 
* [[24],[24,[22]]] --> 4 
* [[23],[23,[22]]] --> 5 
* [[[22]]] --> 6 


### Specialization of cost equations eval_clist_change_tile_28/1 
* CE 15 is refined into CE [29] 


#### Refined cost equations eval_clist_change_tile_28/1 
* CE 29: eval_clist_change_tile_28(B) = 0
     [] 

### Cost equations --> "Loop" of eval_clist_change_tile_28/1 
* CEs [29] --> Loop 28 

#### Loops of eval_clist_change_tile_28/1 
* Loop 28: eval_clist_change_tile_28(B) [] 

### Ranking functions of CR eval_clist_change_tile_28(B) 

#### Partial ranking functions of CR eval_clist_change_tile_28(B) 


### Resulting Chains:eval_clist_change_tile_28(B) 
* [28]


### Merging Chains  eval_clist_change_tile_28/1 into  External patterns of execution 
* [[28]] --> 1 


### Specialization of cost equations eval_clist_change_tile_42/1 
* CE 16 is refined into CE [30] 


#### Refined cost equations eval_clist_change_tile_42/1 
* CE 30: eval_clist_change_tile_42(B) = 0
     [] 

### Cost equations --> "Loop" of eval_clist_change_tile_42/1 
* CEs [30] --> Loop 29 

#### Loops of eval_clist_change_tile_42/1 
* Loop 29: eval_clist_change_tile_42(B) [] 

### Ranking functions of CR eval_clist_change_tile_42(B) 

#### Partial ranking functions of CR eval_clist_change_tile_42(B) 


### Resulting Chains:eval_clist_change_tile_42(B) 
* [29]


### Merging Chains  eval_clist_change_tile_42/1 into  External patterns of execution 
* [[29]] --> 1 


### Specialization of cost equations eval_clist_change_tile_bb16_in/4 
* CE 20 is refined into CE [31] 
* CE 19 is refined into CE [32] 


#### Refined cost equations eval_clist_change_tile_bb16_in/4 
* CE 31: eval_clist_change_tile_bb16_in(A,B,C,A) = 0
     [C=6] 
* CE 32: eval_clist_change_tile_bb16_in(V_depth,V_band_0,B,C) = 1+ eval_clist_change_tile_bb16_in(V_depth,D,E,C)
     [D=V_band_0+1,E=6,B=6] 

### Cost equations --> "Loop" of eval_clist_change_tile_bb16_in/4 
* CEs [32] --> Loop 30 
* CEs [31] --> Loop 31 

#### Loops of eval_clist_change_tile_bb16_in/4 
* Loop 30: eval_clist_change_tile_bb16_in(V_depth,V_band_0,B,C)->  eval_clist_change_tile_bb16_in(V_depth,V_band_0',B',C)
                  [V_band_0+1=V_band_0',B'=6,B=6] 
* Loop 31: eval_clist_change_tile_bb16_in(A,B,C,A) [C=6] 

### Ranking functions of CR eval_clist_change_tile_bb16_in(V_depth,V_band_0,B,C) 

#### Partial ranking functions of CR eval_clist_change_tile_bb16_in(V_depth,V_band_0,B,C) 


### Resulting Chains:eval_clist_change_tile_bb16_in(V_depth,V_band_0,B,C) 
* [[30]]...
* [[30],31]
* [31]


### Merging Chains  eval_clist_change_tile_bb16_in/4 into  External patterns of execution 
* [[31],[31,[30]]] --> 1 
* [[[30]]] --> 2 


### Specialization of cost equations eval_clist_change_tile_114/4 
* CE 22 is refined into CE [33] 


#### Refined cost equations eval_clist_change_tile_114/4 
* CE 33: eval_clist_change_tile_114(V_depth,V_extra_0,V_141,B) = 0
     [] 

### Cost equations --> "Loop" of eval_clist_change_tile_114/4 
* CEs [33] --> Loop 32 

#### Loops of eval_clist_change_tile_114/4 
* Loop 32: eval_clist_change_tile_114(V_depth,V_extra_0,V_141,B) [] 

### Ranking functions of CR eval_clist_change_tile_114(V_depth,V_extra_0,V_141,B) 

#### Partial ranking functions of CR eval_clist_change_tile_114(V_depth,V_extra_0,V_141,B) 


### Resulting Chains:eval_clist_change_tile_114(V_depth,V_extra_0,V_141,B) 
* [32]


### Merging Chains  eval_clist_change_tile_114/4 into  External patterns of execution 
* [[32]] --> 1 


### Specialization of cost equations eval_clist_change_tile_99/6 
* CE 21 is refined into CE [34] 


#### Refined cost equations eval_clist_change_tile_99/6 
* CE 34: eval_clist_change_tile_99(V_depth,V_extra_0,V_141,V_146,V_148,B) = 0+ eval_clist_change_tile_114(V_depth,V_extra_0,V_141,B):1
     [] 

### Cost equations --> "Loop" of eval_clist_change_tile_99/6 
* CEs [34] --> Loop 33 

#### Loops of eval_clist_change_tile_99/6 
* Loop 33: eval_clist_change_tile_99(V_depth,V_extra_0,V_141,V_146,V_148,B) [] 

### Ranking functions of CR eval_clist_change_tile_99(V_depth,V_extra_0,V_141,V_146,V_148,B) 

#### Partial ranking functions of CR eval_clist_change_tile_99(V_depth,V_extra_0,V_141,V_146,V_148,B) 


### Resulting Chains:eval_clist_change_tile_99(V_depth,V_extra_0,V_141,V_146,V_148,B) 
* [33]


### Merging Chains  eval_clist_change_tile_99/6 into  External patterns of execution 
* [[33]] --> 1 


### Specialization of cost equations eval_clist_change_tile_bb19_in/2 
* CE 18 is refined into CE [35] 


#### Refined cost equations eval_clist_change_tile_bb19_in/2 
* CE 35: eval_clist_change_tile_bb19_in(V_depth,B) = 0+ eval_clist_change_tile_99(V_depth,C,D,E,F,B):1
     [] 

### Cost equations --> "Loop" of eval_clist_change_tile_bb19_in/2 
* CEs [35] --> Loop 34 

#### Loops of eval_clist_change_tile_bb19_in/2 
* Loop 34: eval_clist_change_tile_bb19_in(V_depth,B) [] 

### Ranking functions of CR eval_clist_change_tile_bb19_in(V_depth,B) 

#### Partial ranking functions of CR eval_clist_change_tile_bb19_in(V_depth,B) 


### Resulting Chains:eval_clist_change_tile_bb19_in(V_depth,B) 
* [34]


### Merging Chains  eval_clist_change_tile_bb19_in/2 into  External patterns of execution 
* [[34]] --> 1 


### Specialization of cost equations eval_clist_change_tile_67/2 
* CE 17 is refined into CE [36,37] 


#### Refined cost equations eval_clist_change_tile_67/2 
* CE 36: eval_clist_change_tile_67(V_depth,B) = 1+ eval_clist_change_tile_bb16_in(V_depth,C,D,V_depth):1+ eval_clist_change_tile_bb19_in(V_depth,B):1
     [D=6] 
* CE 37: eval_clist_change_tile_67(V_depth,B) = 1+ eval_clist_change_tile_bb16_in(V_depth,C,D,E):2
     [D=6] 

### Cost equations --> "Loop" of eval_clist_change_tile_67/2 
* CEs [37] --> Loop 35 
* CEs [36] --> Loop 36 

#### Loops of eval_clist_change_tile_67/2 
* Loop 35: eval_clist_change_tile_67(V_depth,B) [] 
* Loop 36: eval_clist_change_tile_67(V_depth,B) [] 

### Ranking functions of CR eval_clist_change_tile_67(V_depth,B) 

#### Partial ranking functions of CR eval_clist_change_tile_67(V_depth,B) 


### Resulting Chains:eval_clist_change_tile_67(V_depth,B) 
* [36]
* [35]...


### Merging Chains  eval_clist_change_tile_67/2 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


### Specialization of cost equations loop_cont_eval_clist_change_tile_bb1_in/3 
* CE 14 is refined into CE [38] 
* CE 13 is refined into CE [39,40] 
* CE 12 is refined into CE [41] 
* CE 11 is refined into CE [42] 
* CE 10 is refined into CE [43] 


#### Refined cost equations loop_cont_eval_clist_change_tile_bb1_in/3 
* CE 38: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) = 0+ eval_clist_change_tile_bb19_in(A,B):1
     [D=6] 
* CE 39: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) = 0+ eval_clist_change_tile_67(A,B):1
     [D=5] 
* CE 40: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) = 0+ eval_clist_change_tile_67(A,B):2
     [D=5] 
* CE 41: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) = 0+ eval_clist_change_tile_42(B):1
     [D=4] 
* CE 42: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) = 0+ eval_clist_change_tile_28(B):1
     [D=3] 
* CE 43: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_clist_change_tile_bb1_in/3 
* CEs [38] --> Loop 37 
* CEs [39] --> Loop 38 
* CEs [41] --> Loop 39 
* CEs [42] --> Loop 40 
* CEs [43] --> Loop 41 
* CEs [40] --> Loop 42 

#### Loops of loop_cont_eval_clist_change_tile_bb1_in/3 
* Loop 37: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) [D=6] 
* Loop 38: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) [D=5] 
* Loop 39: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) [D=4] 
* Loop 40: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) [D=3] 
* Loop 41: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) [D=2] 
* Loop 42: loop_cont_eval_clist_change_tile_bb1_in(D,A,B) [D=5] 

### Ranking functions of CR loop_cont_eval_clist_change_tile_bb1_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_clist_change_tile_bb1_in(D,A,B) 


### Resulting Chains:loop_cont_eval_clist_change_tile_bb1_in(D,A,B) 
* [42]...
* [41]
* [40]
* [39]
* [38]
* [37]


### Merging Chains  loop_cont_eval_clist_change_tile_bb1_in/3 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 
* [[39]] --> 3 
* [[38]] --> 4 
* [[37]] --> 5 
* [[42]] --> 6 


### Specialization of cost equations eval_clist_change_tile_bb0_in/2 
* CE 3 is refined into CE [44,45,46,47,48,49,50] 


#### Refined cost equations eval_clist_change_tile_bb0_in/2 
* CE 44: eval_clist_change_tile_bb0_in(V_depth,B) = 1+ eval_clist_change_tile_bb1_in(V_depth,C,D):1+ loop_cont_eval_clist_change_tile_bb1_in(E,D,B):1
     [E=2,C=2] 
* CE 45: eval_clist_change_tile_bb0_in(V_depth,B) = 1+ eval_clist_change_tile_bb1_in(V_depth,C,D):2+ loop_cont_eval_clist_change_tile_bb1_in(E,D,B):2
     [E=3,C=3] 
* CE 46: eval_clist_change_tile_bb0_in(V_depth,B) = 1+ eval_clist_change_tile_bb1_in(V_depth,C,D):3+ loop_cont_eval_clist_change_tile_bb1_in(E,D,B):3
     [E=4,C=4] 
* CE 47: eval_clist_change_tile_bb0_in(V_depth,B) = 1+ eval_clist_change_tile_bb1_in(V_depth,C,V_depth):4+ loop_cont_eval_clist_change_tile_bb1_in(D,V_depth,B):4
     [D=5,C=5] 
* CE 48: eval_clist_change_tile_bb0_in(V_depth,B) = 1+ eval_clist_change_tile_bb1_in(V_depth,C,V_depth):4+ loop_cont_eval_clist_change_tile_bb1_in(D,V_depth,B):6
     [D=5,C=5] 
* CE 49: eval_clist_change_tile_bb0_in(V_depth,B) = 1+ eval_clist_change_tile_bb1_in(V_depth,C,V_depth):5+ loop_cont_eval_clist_change_tile_bb1_in(D,V_depth,B):5
     [D=6,C=6] 
* CE 50: eval_clist_change_tile_bb0_in(V_depth,B) = 1+ eval_clist_change_tile_bb1_in(V_depth,C,D):6
     [] 

### Cost equations --> "Loop" of eval_clist_change_tile_bb0_in/2 
* CEs [48,50] --> Loop 43 
* CEs [44,45,46,47,49] --> Loop 44 

#### Loops of eval_clist_change_tile_bb0_in/2 
* Loop 43: eval_clist_change_tile_bb0_in(V_depth,B) [] 
* Loop 44: eval_clist_change_tile_bb0_in(V_depth,B) [] 

### Ranking functions of CR eval_clist_change_tile_bb0_in(V_depth,B) 

#### Partial ranking functions of CR eval_clist_change_tile_bb0_in(V_depth,B) 


### Resulting Chains:eval_clist_change_tile_bb0_in(V_depth,B) 
* [44]
* [43]...


### Merging Chains  eval_clist_change_tile_bb0_in/2 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations eval_clist_change_tile_start/2 
* CE 2 is refined into CE [51,52] 


#### Refined cost equations eval_clist_change_tile_start/2 
* CE 51: eval_clist_change_tile_start(V_depth,B) = 0+ eval_clist_change_tile_bb0_in(V_depth,B):1
     [] 
* CE 52: eval_clist_change_tile_start(V_depth,B) = 0+ eval_clist_change_tile_bb0_in(V_depth,B):2
     [] 

### Cost equations --> "Loop" of eval_clist_change_tile_start/2 
* CEs [52] --> Loop 45 
* CEs [51] --> Loop 46 

#### Loops of eval_clist_change_tile_start/2 
* Loop 45: eval_clist_change_tile_start(V_depth,B) [] 
* Loop 46: eval_clist_change_tile_start(V_depth,B) [] 

### Ranking functions of CR eval_clist_change_tile_start(V_depth,B) 

#### Partial ranking functions of CR eval_clist_change_tile_start(V_depth,B) 


### Resulting Chains:eval_clist_change_tile_start(V_depth,B) 
* [46]
* [45]...


### Merging Chains  eval_clist_change_tile_start/2 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [22] 

 * loop 22:eval_clist_change_tile_bb1_in(V_depth,B,C) -> [eval_clist_change_tile_bb1_in(V_depth',B',C')] 
1
#### Cost of phase [22]:eval_clist_change_tile_bb1_in(V_depth,B,C) -> [eval_clist_change_tile_bb1_in(V_depth',B',C')] 
1*it(22)+0
#### Cost of phase [22]:eval_clist_change_tile_bb1_in(V_depth,B,C) -> [eval_clist_change_tile_bb1_in(V_depth',B',C')] 
1*it(22)+0
#### Cost of phase [22]:eval_clist_change_tile_bb1_in(V_depth,B,C) -> [eval_clist_change_tile_bb1_in(V_depth',B',C')] 
1*it(22)+0
#### Cost of phase [22]:eval_clist_change_tile_bb1_in(V_depth,B,C) -> [eval_clist_change_tile_bb1_in(V_depth',B',C')] 
1*it(22)+0
#### Cost of phase [22]:eval_clist_change_tile_bb1_in(V_depth,B,C) -> [eval_clist_change_tile_bb1_in(V_depth',B',C')] 
1*it(22)+0
#### Cost of phase [22]:eval_clist_change_tile_bb1_in(V_depth,B,C) -> [eval_clist_change_tile_bb1_in(V_depth',B',C')] 
1*it(22)+0
#### Cost of chains of eval_clist_change_tile_bb1_in(V_depth,B,C):
* Chain [[22]]...: 1*it(22)+0
  with precondition: [] 

* Chain [[22],27]: 1*it(22)+0
  with precondition: [B=2] 

* Chain [[22],26]: 1*it(22)+0
  with precondition: [B=3] 

* Chain [[22],25]: 1*it(22)+0
  with precondition: [B=4] 

* Chain [[22],24]: 1*it(22)+0
  with precondition: [B=5,V_depth=C] 

* Chain [[22],23]: 1*it(22)+0
  with precondition: [B=6,V_depth=C] 

* Chain [27]: 0
  with precondition: [B=2] 

* Chain [26]: 0
  with precondition: [B=3] 

* Chain [25]: 0
  with precondition: [B=4] 

* Chain [24]: 0
  with precondition: [B=5,C=V_depth] 

* Chain [23]: 0
  with precondition: [B=6,C=V_depth] 


#### Cost of chains of eval_clist_change_tile_28(B):
* Chain [28]: 0
  with precondition: [] 


#### Cost of chains of eval_clist_change_tile_42(B):
* Chain [29]: 0
  with precondition: [] 


#### Cost of loops [30] 

 * loop 30:eval_clist_change_tile_bb16_in(V_depth,V_band_0,B,C) -> [eval_clist_change_tile_bb16_in(V_depth',V_band_0',B',C')] 
1
#### Cost of phase [30]:eval_clist_change_tile_bb16_in(V_depth,V_band_0,B,C) -> [eval_clist_change_tile_bb16_in(V_depth',V_band_0',B',C')] 
1*it(30)+0
#### Cost of phase [30]:eval_clist_change_tile_bb16_in(V_depth,V_band_0,B,C) -> [eval_clist_change_tile_bb16_in(V_depth',V_band_0',B',C')] 
1*it(30)+0
#### Cost of chains of eval_clist_change_tile_bb16_in(V_depth,V_band_0,B,C):
* Chain [[30]]...: 1*it(30)+0
  with precondition: [B=6] 

* Chain [[30],31]: 1*it(30)+0
  with precondition: [B=6,V_depth=C] 

* Chain [31]: 0
  with precondition: [B=6,C=V_depth] 


#### Cost of chains of eval_clist_change_tile_114(V_depth,V_extra_0,V_141,B):
* Chain [32]: 0
  with precondition: [] 


#### Cost of chains of eval_clist_change_tile_99(V_depth,V_extra_0,V_141,V_146,V_148,B):
* Chain [33]: 0
  with precondition: [] 


#### Cost of chains of eval_clist_change_tile_bb19_in(V_depth,B):
* Chain [34]: 0
  with precondition: [] 


#### Cost of chains of eval_clist_change_tile_67(V_depth,B):
* Chain [36]: 1*s(7)+1
  with precondition: [] 

* Chain [35]...: 1*s(8)+1
  with precondition: [] 


#### Cost of chains of loop_cont_eval_clist_change_tile_bb1_in(D,A,B):
* Chain [42]...: 1*s(9)+1
  with precondition: [D=5] 

* Chain [41]: 0
  with precondition: [D=2] 

* Chain [40]: 0
  with precondition: [D=3] 

* Chain [39]: 0
  with precondition: [D=4] 

* Chain [38]: 1*s(10)+1
  with precondition: [D=5] 

* Chain [37]: 0
  with precondition: [D=6] 


#### Cost of chains of eval_clist_change_tile_bb0_in(V_depth,B):
* Chain [44]: 1*aux(7)+0
  with precondition: [] 

* Chain [43]...: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_clist_change_tile_start(V_depth,B):
* Chain [46]: 1*s(20)+0
  with precondition: [] 

* Chain [45]...: 1*s(21)+0
  with precondition: [] 


Closed-form bounds of eval_clist_change_tile_start(V_depth,B): 
-------------------------------------
* Chain [46] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_clist_change_tile_start(V_depth,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 121 ms.
* Invariants computed in 41 ms.
   - Backward Invariants 25 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 102 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 73 ms.
   - Equation cost structures 34 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 564 ms.

