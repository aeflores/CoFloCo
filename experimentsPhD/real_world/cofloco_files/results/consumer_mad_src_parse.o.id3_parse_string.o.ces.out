Warning: Ignored call to eval_id3_parse_string_stop/1 in equation eval_id3_parse_string_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_id3_parse_string_bb10_in/1]
1. recursive  : [eval_id3_parse_string_bb6_in/1,eval_id3_parse_string_bb9_in/1]
2. non_recursive  : [loop_cont_eval_id3_parse_string_bb6_in/2]
3. non_recursive  : [eval_id3_parse_string_bb5_in/1]
4. non_recursive  : [eval_id3_parse_string_1/1]
5. non_recursive  : [eval_id3_parse_string_0/2]
6. non_recursive  : [eval_id3_parse_string_5/1]
7. non_recursive  : [eval_id3_parse_string_4/2]
8. non_recursive  : [eval_id3_parse_string_NewDefault_in/1]
9. non_recursive  : [eval_id3_parse_string_3/1]
10. non_recursive  : [eval_id3_parse_string_2/3]
11. non_recursive  : [eval_id3_parse_string_bb3_in/3]
12. non_recursive  : [eval_id3_parse_string_bb0_in/2]
13. non_recursive  : [eval_id3_parse_string_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_id3_parse_string_bb6_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_id3_parse_string_bb5_in/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_id3_parse_string_bb0_in/2
13. SCC is partially evaluated into eval_id3_parse_string_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_id3_parse_string_bb6_in/1 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_id3_parse_string_bb6_in/1 
* CE 8: eval_id3_parse_string_bb6_in(B) = 0
     [B=2] 
* CE 9: eval_id3_parse_string_bb6_in(B) = 1+ eval_id3_parse_string_bb6_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_id3_parse_string_bb6_in/1 
* CEs [9] --> Loop 6 
* CEs [8] --> Loop 7 

#### Loops of eval_id3_parse_string_bb6_in/1 
* Loop 6: eval_id3_parse_string_bb6_in(B)->  eval_id3_parse_string_bb6_in(B')
                  [B'=2,B=2] 
* Loop 7: eval_id3_parse_string_bb6_in(B) [B=2] 

### Ranking functions of CR eval_id3_parse_string_bb6_in(B) 

#### Partial ranking functions of CR eval_id3_parse_string_bb6_in(B) 


### Resulting Chains:eval_id3_parse_string_bb6_in(B) 
* [[6]]...
* [[6],7]
* [7]


### Merging Chains  eval_id3_parse_string_bb6_in/1 into  External patterns of execution 
* [[7],[7,[6]]] --> 1 
* [[[6]]] --> 2 


### Specialization of cost equations eval_id3_parse_string_bb5_in/1 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11,12] 


#### Refined cost equations eval_id3_parse_string_bb5_in/1 
* CE 10: eval_id3_parse_string_bb5_in(B) = 0
     [] 
* CE 11: eval_id3_parse_string_bb5_in(B) = 1+ eval_id3_parse_string_bb6_in(C):1
     [C=2] 
* CE 12: eval_id3_parse_string_bb5_in(B) = 1+ eval_id3_parse_string_bb6_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_id3_parse_string_bb5_in/1 
* CEs [12] --> Loop 8 
* CEs [10,11] --> Loop 9 

#### Loops of eval_id3_parse_string_bb5_in/1 
* Loop 8: eval_id3_parse_string_bb5_in(B) [] 
* Loop 9: eval_id3_parse_string_bb5_in(B) [] 

### Ranking functions of CR eval_id3_parse_string_bb5_in(B) 

#### Partial ranking functions of CR eval_id3_parse_string_bb5_in(B) 


### Resulting Chains:eval_id3_parse_string_bb5_in(B) 
* [9]
* [8]...


### Merging Chains  eval_id3_parse_string_bb5_in/1 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations eval_id3_parse_string_bb0_in/2 
* CE 3 is refined into CE [13,14] 


#### Refined cost equations eval_id3_parse_string_bb0_in/2 
* CE 13: eval_id3_parse_string_bb0_in(V_length,B) = 0+ eval_id3_parse_string_bb5_in(B):1
     [] 
* CE 14: eval_id3_parse_string_bb0_in(V_length,B) = 0+ eval_id3_parse_string_bb5_in(B):2
     [] 

### Cost equations --> "Loop" of eval_id3_parse_string_bb0_in/2 
* CEs [14] --> Loop 10 
* CEs [13] --> Loop 11 

#### Loops of eval_id3_parse_string_bb0_in/2 
* Loop 10: eval_id3_parse_string_bb0_in(V_length,B) [] 
* Loop 11: eval_id3_parse_string_bb0_in(V_length,B) [] 

### Ranking functions of CR eval_id3_parse_string_bb0_in(V_length,B) 

#### Partial ranking functions of CR eval_id3_parse_string_bb0_in(V_length,B) 


### Resulting Chains:eval_id3_parse_string_bb0_in(V_length,B) 
* [11]
* [10]...


### Merging Chains  eval_id3_parse_string_bb0_in/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_id3_parse_string_start/4 
* CE 2 is refined into CE [15,16] 


#### Refined cost equations eval_id3_parse_string_start/4 
* CE 15: eval_id3_parse_string_start(V_length,V_encoding,V_full,B) = 0+ eval_id3_parse_string_bb0_in(V_length,B):1
     [] 
* CE 16: eval_id3_parse_string_start(V_length,V_encoding,V_full,B) = 0+ eval_id3_parse_string_bb0_in(V_length,B):2
     [] 

### Cost equations --> "Loop" of eval_id3_parse_string_start/4 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_id3_parse_string_start/4 
* Loop 12: eval_id3_parse_string_start(V_length,V_encoding,V_full,B) [] 
* Loop 13: eval_id3_parse_string_start(V_length,V_encoding,V_full,B) [] 

### Ranking functions of CR eval_id3_parse_string_start(V_length,V_encoding,V_full,B) 

#### Partial ranking functions of CR eval_id3_parse_string_start(V_length,V_encoding,V_full,B) 


### Resulting Chains:eval_id3_parse_string_start(V_length,V_encoding,V_full,B) 
* [13]
* [12]...


### Merging Chains  eval_id3_parse_string_start/4 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_id3_parse_string_bb6_in(B) -> [eval_id3_parse_string_bb6_in(B')] 
1
#### Cost of phase [6]:eval_id3_parse_string_bb6_in(B) -> [eval_id3_parse_string_bb6_in(B')] 
1*it(6)+0
#### Cost of phase [6]:eval_id3_parse_string_bb6_in(B) -> [eval_id3_parse_string_bb6_in(B')] 
1*it(6)+0
#### Cost of chains of eval_id3_parse_string_bb6_in(B):
* Chain [[6]]...: 1*it(6)+0
  with precondition: [B=2] 

* Chain [[6],7]: 1*it(6)+0
  with precondition: [B=2] 

* Chain [7]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_id3_parse_string_bb5_in(B):
* Chain [9]: 1*aux(2)+0
  with precondition: [] 

* Chain [8]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_id3_parse_string_bb0_in(V_length,B):
* Chain [11]: 1*s(4)+0
  with precondition: [] 

* Chain [10]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_id3_parse_string_start(V_length,V_encoding,V_full,B):
* Chain [13]: 1*s(6)+0
  with precondition: [] 

* Chain [12]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_id3_parse_string_start(V_length,V_encoding,V_full,B): 
-------------------------------------
* Chain [13] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [12]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_id3_parse_string_start(V_length,V_encoding,V_full,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 17 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 15 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 89 ms.

