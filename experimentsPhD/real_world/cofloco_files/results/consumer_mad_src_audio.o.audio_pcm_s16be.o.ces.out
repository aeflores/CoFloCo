Warning: Ignored call to eval_audio_pcm_s16be_stop/1 in equation eval_audio_pcm_s16be_bb13_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_audio_pcm_s16be_bb13_in/1]
1. non_recursive  : [eval_audio_pcm_s16be_NewDefault10_in/1]
2. non_recursive  : [eval_audio_pcm_s16be_NewDefault_in/1]
3. recursive  : [eval_audio_pcm_s16be_60/4,eval_audio_pcm_s16be_61/4,eval_audio_pcm_s16be_bb10_in/2]
4. recursive  : [eval_audio_pcm_s16be_3/4,eval_audio_pcm_s16be_4/4,eval_audio_pcm_s16be_6/5,eval_audio_pcm_s16be_7/5,eval_audio_pcm_s16be_bb2_in/2]
5. recursive  : [eval_audio_pcm_s16be_24/4,eval_audio_pcm_s16be_25/4,eval_audio_pcm_s16be_27/5,eval_audio_pcm_s16be_28/5,eval_audio_pcm_s16be_bb4_in/2]
6. recursive  : [eval_audio_pcm_s16be_48/4,eval_audio_pcm_s16be_49/4,eval_audio_pcm_s16be_bb8_in/2]
7. non_recursive  : [eval_audio_pcm_s16be_bb12_in/1]
8. non_recursive  : [loop_cont_eval_audio_pcm_s16be_bb10_in/2]
9. non_recursive  : [eval_audio_pcm_s16be_bb6_in/1]
10. non_recursive  : [loop_cont_eval_audio_pcm_s16be_bb2_in/2]
11. non_recursive  : [loop_cont_eval_audio_pcm_s16be_bb4_in/2]
12. non_recursive  : [loop_cont_eval_audio_pcm_s16be_bb8_in/2]
13. non_recursive  : [eval_audio_pcm_s16be_bb0_in/2]
14. non_recursive  : [eval_audio_pcm_s16be_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_audio_pcm_s16be_bb10_in/2
4. SCC is partially evaluated into eval_audio_pcm_s16be_bb2_in/2
5. SCC is partially evaluated into eval_audio_pcm_s16be_bb4_in/2
6. SCC is partially evaluated into eval_audio_pcm_s16be_bb8_in/2
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_audio_pcm_s16be_bb0_in/2
14. SCC is partially evaluated into eval_audio_pcm_s16be_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_audio_pcm_s16be_bb10_in/2 
* CE 19 is refined into CE [20] 
* CE 17 is refined into CE [21] 
* CE 18 is refined into CE [22] 


#### Refined cost equations eval_audio_pcm_s16be_bb10_in/2 
* CE 20: eval_audio_pcm_s16be_bb10_in(V_len_3,B) = 0
     [B=2,V_len_3=0] 
* CE 21: eval_audio_pcm_s16be_bb10_in(V_len_3,B) = 1+ eval_audio_pcm_s16be_bb10_in(C,D)
     [V_len_3>=1,V_len_3=C+1,D=2,B=2] 
* CE 22: eval_audio_pcm_s16be_bb10_in(V_len_3,B) = 1+ eval_audio_pcm_s16be_bb10_in(C,D)
     [0>=V_len_3+1,V_len_3=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_audio_pcm_s16be_bb10_in/2 
* CEs [21] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of eval_audio_pcm_s16be_bb10_in/2 
* Loop 15: eval_audio_pcm_s16be_bb10_in(V_len_3,B)->  eval_audio_pcm_s16be_bb10_in(V_len_3',B')
                  [V_len_3>=1,V_len_3=V_len_3'+1,B'=2,B=2] 
* Loop 16: eval_audio_pcm_s16be_bb10_in(V_len_3,B)->  eval_audio_pcm_s16be_bb10_in(V_len_3',B')
                  [0>=V_len_3+1,V_len_3=V_len_3'+1,B'=2,B=2] 
* Loop 17: eval_audio_pcm_s16be_bb10_in(V_len_3,B) [B=2,V_len_3=0] 

### Ranking functions of CR eval_audio_pcm_s16be_bb10_in(V_len_3,B) 
* RF of phase [15]: [V_len_3]

#### Partial ranking functions of CR eval_audio_pcm_s16be_bb10_in(V_len_3,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_len_3


### Resulting Chains:eval_audio_pcm_s16be_bb10_in(V_len_3,B) 
* [[16]]...
* [[15],17]
* [17]


### Merging Chains  eval_audio_pcm_s16be_bb10_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[15]]] --> 2 
* [[[16]]] --> 3 


### Specialization of cost equations eval_audio_pcm_s16be_bb2_in/2 
* CE 10 is refined into CE [23] 
* CE 8 is refined into CE [24] 
* CE 9 is refined into CE [25] 


#### Refined cost equations eval_audio_pcm_s16be_bb2_in/2 
* CE 23: eval_audio_pcm_s16be_bb2_in(V_len_0,B) = 0
     [B=3,V_len_0=0] 
* CE 24: eval_audio_pcm_s16be_bb2_in(V_len_0,B) = 1+ eval_audio_pcm_s16be_bb2_in(C,D)
     [V_len_0>=1,V_len_0=C+1,D=3,B=3] 
* CE 25: eval_audio_pcm_s16be_bb2_in(V_len_0,B) = 1+ eval_audio_pcm_s16be_bb2_in(C,D)
     [0>=V_len_0+1,V_len_0=C+1,D=3,B=3] 

### Cost equations --> "Loop" of eval_audio_pcm_s16be_bb2_in/2 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [23] --> Loop 20 

#### Loops of eval_audio_pcm_s16be_bb2_in/2 
* Loop 18: eval_audio_pcm_s16be_bb2_in(V_len_0,B)->  eval_audio_pcm_s16be_bb2_in(V_len_0',B')
                  [V_len_0>=1,V_len_0=V_len_0'+1,B'=3,B=3] 
* Loop 19: eval_audio_pcm_s16be_bb2_in(V_len_0,B)->  eval_audio_pcm_s16be_bb2_in(V_len_0',B')
                  [0>=V_len_0+1,V_len_0=V_len_0'+1,B'=3,B=3] 
* Loop 20: eval_audio_pcm_s16be_bb2_in(V_len_0,B) [B=3,V_len_0=0] 

### Ranking functions of CR eval_audio_pcm_s16be_bb2_in(V_len_0,B) 
* RF of phase [18]: [V_len_0]

#### Partial ranking functions of CR eval_audio_pcm_s16be_bb2_in(V_len_0,B) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_len_0


### Resulting Chains:eval_audio_pcm_s16be_bb2_in(V_len_0,B) 
* [[19]]...
* [[18],20]
* [20]


### Merging Chains  eval_audio_pcm_s16be_bb2_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[20,[18]]] --> 2 
* [[[19]]] --> 3 


### Specialization of cost equations eval_audio_pcm_s16be_bb4_in/2 
* CE 13 is refined into CE [26] 
* CE 11 is refined into CE [27] 
* CE 12 is refined into CE [28] 


#### Refined cost equations eval_audio_pcm_s16be_bb4_in/2 
* CE 26: eval_audio_pcm_s16be_bb4_in(V_len_1,B) = 0
     [B=3,V_len_1=0] 
* CE 27: eval_audio_pcm_s16be_bb4_in(V_len_1,B) = 1+ eval_audio_pcm_s16be_bb4_in(C,D)
     [V_len_1>=1,V_len_1=C+1,D=3,B=3] 
* CE 28: eval_audio_pcm_s16be_bb4_in(V_len_1,B) = 1+ eval_audio_pcm_s16be_bb4_in(C,D)
     [0>=V_len_1+1,V_len_1=C+1,D=3,B=3] 

### Cost equations --> "Loop" of eval_audio_pcm_s16be_bb4_in/2 
* CEs [27] --> Loop 21 
* CEs [28] --> Loop 22 
* CEs [26] --> Loop 23 

#### Loops of eval_audio_pcm_s16be_bb4_in/2 
* Loop 21: eval_audio_pcm_s16be_bb4_in(V_len_1,B)->  eval_audio_pcm_s16be_bb4_in(V_len_1',B')
                  [V_len_1>=1,V_len_1=V_len_1'+1,B'=3,B=3] 
* Loop 22: eval_audio_pcm_s16be_bb4_in(V_len_1,B)->  eval_audio_pcm_s16be_bb4_in(V_len_1',B')
                  [0>=V_len_1+1,V_len_1=V_len_1'+1,B'=3,B=3] 
* Loop 23: eval_audio_pcm_s16be_bb4_in(V_len_1,B) [B=3,V_len_1=0] 

### Ranking functions of CR eval_audio_pcm_s16be_bb4_in(V_len_1,B) 
* RF of phase [21]: [V_len_1]

#### Partial ranking functions of CR eval_audio_pcm_s16be_bb4_in(V_len_1,B) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_len_1


### Resulting Chains:eval_audio_pcm_s16be_bb4_in(V_len_1,B) 
* [[22]]...
* [[21],23]
* [23]


### Merging Chains  eval_audio_pcm_s16be_bb4_in/2 into  External patterns of execution 
* [[23]] --> 1 
* [[23,[21]]] --> 2 
* [[[22]]] --> 3 


### Specialization of cost equations eval_audio_pcm_s16be_bb8_in/2 
* CE 16 is refined into CE [29] 
* CE 14 is refined into CE [30] 
* CE 15 is refined into CE [31] 


#### Refined cost equations eval_audio_pcm_s16be_bb8_in/2 
* CE 29: eval_audio_pcm_s16be_bb8_in(V_len_2,B) = 0
     [B=2,V_len_2=0] 
* CE 30: eval_audio_pcm_s16be_bb8_in(V_len_2,B) = 1+ eval_audio_pcm_s16be_bb8_in(C,D)
     [V_len_2>=1,V_len_2=C+1,D=2,B=2] 
* CE 31: eval_audio_pcm_s16be_bb8_in(V_len_2,B) = 1+ eval_audio_pcm_s16be_bb8_in(C,D)
     [0>=V_len_2+1,V_len_2=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_audio_pcm_s16be_bb8_in/2 
* CEs [30] --> Loop 24 
* CEs [31] --> Loop 25 
* CEs [29] --> Loop 26 

#### Loops of eval_audio_pcm_s16be_bb8_in/2 
* Loop 24: eval_audio_pcm_s16be_bb8_in(V_len_2,B)->  eval_audio_pcm_s16be_bb8_in(V_len_2',B')
                  [V_len_2>=1,V_len_2=V_len_2'+1,B'=2,B=2] 
* Loop 25: eval_audio_pcm_s16be_bb8_in(V_len_2,B)->  eval_audio_pcm_s16be_bb8_in(V_len_2',B')
                  [0>=V_len_2+1,V_len_2=V_len_2'+1,B'=2,B=2] 
* Loop 26: eval_audio_pcm_s16be_bb8_in(V_len_2,B) [B=2,V_len_2=0] 

### Ranking functions of CR eval_audio_pcm_s16be_bb8_in(V_len_2,B) 
* RF of phase [24]: [V_len_2]

#### Partial ranking functions of CR eval_audio_pcm_s16be_bb8_in(V_len_2,B) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V_len_2


### Resulting Chains:eval_audio_pcm_s16be_bb8_in(V_len_2,B) 
* [[25]]...
* [[24],26]
* [26]


### Merging Chains  eval_audio_pcm_s16be_bb8_in/2 into  External patterns of execution 
* [[26]] --> 1 
* [[26,[24]]] --> 2 
* [[[25]]] --> 3 


### Specialization of cost equations eval_audio_pcm_s16be_bb0_in/2 
* CE 3 is refined into CE [32,33,34] 
* CE 4 is refined into CE [35] 
* CE 5 is refined into CE [36,37,38] 
* CE 6 is refined into CE [39,40,41] 
* CE 7 is refined into CE [42,43,44] 


#### Refined cost equations eval_audio_pcm_s16be_bb0_in/2 
* CE 32: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb2_in(C,D):1
     [D=3,C=0,V_nsamples=0] 
* CE 33: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb2_in(V_nsamples,C):2
     [V_nsamples>=1,C=3] 
* CE 34: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb2_in(V_nsamples,C):3
     [0>=V_nsamples+1,C=3] 
* CE 35: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 0
     [] 
* CE 36: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb4_in(C,D):1
     [D=3,C=0,V_nsamples=0] 
* CE 37: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb4_in(V_nsamples,C):2
     [V_nsamples>=1,C=3] 
* CE 38: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb4_in(V_nsamples,C):3
     [0>=V_nsamples+1,C=3] 
* CE 39: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb8_in(C,D):1
     [D=2,C=0,V_nsamples=0] 
* CE 40: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb8_in(V_nsamples,C):2
     [V_nsamples>=1,C=2] 
* CE 41: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb8_in(V_nsamples,C):3
     [0>=V_nsamples+1,C=2] 
* CE 42: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb10_in(C,D):1
     [D=2,C=0,V_nsamples=0] 
* CE 43: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb10_in(V_nsamples,C):2
     [V_nsamples>=1,C=2] 
* CE 44: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) = 1+ eval_audio_pcm_s16be_bb10_in(V_nsamples,C):3
     [0>=V_nsamples+1,C=2] 

### Cost equations --> "Loop" of eval_audio_pcm_s16be_bb0_in/2 
* CEs [34,38,41,44] --> Loop 27 
* CEs [32,33,35,36,37,39,40,42,43] --> Loop 28 

#### Loops of eval_audio_pcm_s16be_bb0_in/2 
* Loop 27: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) [0>=V_nsamples+1] 
* Loop 28: eval_audio_pcm_s16be_bb0_in(V_nsamples,B) [] 

### Ranking functions of CR eval_audio_pcm_s16be_bb0_in(V_nsamples,B) 

#### Partial ranking functions of CR eval_audio_pcm_s16be_bb0_in(V_nsamples,B) 


### Resulting Chains:eval_audio_pcm_s16be_bb0_in(V_nsamples,B) 
* [28]
* [27]...


### Merging Chains  eval_audio_pcm_s16be_bb0_in/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_audio_pcm_s16be_start/3 
* CE 2 is refined into CE [45,46] 


#### Refined cost equations eval_audio_pcm_s16be_start/3 
* CE 45: eval_audio_pcm_s16be_start(V_nsamples,V_mode,B) = 0+ eval_audio_pcm_s16be_bb0_in(V_nsamples,B):1
     [] 
* CE 46: eval_audio_pcm_s16be_start(V_nsamples,V_mode,B) = 0+ eval_audio_pcm_s16be_bb0_in(V_nsamples,B):2
     [0>=V_nsamples+1] 

### Cost equations --> "Loop" of eval_audio_pcm_s16be_start/3 
* CEs [46] --> Loop 29 
* CEs [45] --> Loop 30 

#### Loops of eval_audio_pcm_s16be_start/3 
* Loop 29: eval_audio_pcm_s16be_start(V_nsamples,V_mode,B) [0>=V_nsamples+1] 
* Loop 30: eval_audio_pcm_s16be_start(V_nsamples,V_mode,B) [] 

### Ranking functions of CR eval_audio_pcm_s16be_start(V_nsamples,V_mode,B) 

#### Partial ranking functions of CR eval_audio_pcm_s16be_start(V_nsamples,V_mode,B) 


### Resulting Chains:eval_audio_pcm_s16be_start(V_nsamples,V_mode,B) 
* [30]
* [29]...


### Merging Chains  eval_audio_pcm_s16be_start/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_audio_pcm_s16be_bb10_in(V_len_3,B) -> [eval_audio_pcm_s16be_bb10_in(V_len_3',B')] 
1
#### Cost of phase [16]:eval_audio_pcm_s16be_bb10_in(V_len_3,B) -> [eval_audio_pcm_s16be_bb10_in(V_len_3',B')] 
1*it(16)+0
#### Cost of loops [15] 

 * loop 15:eval_audio_pcm_s16be_bb10_in(V_len_3,B) -> [eval_audio_pcm_s16be_bb10_in(V_len_3',B')] 
1
#### Cost of phase [15]:eval_audio_pcm_s16be_bb10_in(V_len_3,B) -> [eval_audio_pcm_s16be_bb10_in(V_len_3',B')] 
1*it(15)+0
  Such that:it(15) =< V_len_3
it(15) =< V_len_3-V_len_3'

#### Cost of chains of eval_audio_pcm_s16be_bb10_in(V_len_3,B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [0>=V_len_3+1,B=2] 

* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< V_len_3

  with precondition: [B=2,V_len_3>=1] 

* Chain [17]: 0
  with precondition: [V_len_3=0,B=2] 


#### Cost of loops [19] 

 * loop 19:eval_audio_pcm_s16be_bb2_in(V_len_0,B) -> [eval_audio_pcm_s16be_bb2_in(V_len_0',B')] 
1
#### Cost of phase [19]:eval_audio_pcm_s16be_bb2_in(V_len_0,B) -> [eval_audio_pcm_s16be_bb2_in(V_len_0',B')] 
1*it(19)+0
#### Cost of loops [18] 

 * loop 18:eval_audio_pcm_s16be_bb2_in(V_len_0,B) -> [eval_audio_pcm_s16be_bb2_in(V_len_0',B')] 
1
#### Cost of phase [18]:eval_audio_pcm_s16be_bb2_in(V_len_0,B) -> [eval_audio_pcm_s16be_bb2_in(V_len_0',B')] 
1*it(18)+0
  Such that:it(18) =< V_len_0
it(18) =< V_len_0-V_len_0'

#### Cost of chains of eval_audio_pcm_s16be_bb2_in(V_len_0,B):
* Chain [[19]]...: 1*it(19)+0
  with precondition: [0>=V_len_0+1,B=3] 

* Chain [[18],20]: 1*it(18)+0
  Such that:it(18) =< V_len_0

  with precondition: [B=3,V_len_0>=1] 

* Chain [20]: 0
  with precondition: [V_len_0=0,B=3] 


#### Cost of loops [22] 

 * loop 22:eval_audio_pcm_s16be_bb4_in(V_len_1,B) -> [eval_audio_pcm_s16be_bb4_in(V_len_1',B')] 
1
#### Cost of phase [22]:eval_audio_pcm_s16be_bb4_in(V_len_1,B) -> [eval_audio_pcm_s16be_bb4_in(V_len_1',B')] 
1*it(22)+0
#### Cost of loops [21] 

 * loop 21:eval_audio_pcm_s16be_bb4_in(V_len_1,B) -> [eval_audio_pcm_s16be_bb4_in(V_len_1',B')] 
1
#### Cost of phase [21]:eval_audio_pcm_s16be_bb4_in(V_len_1,B) -> [eval_audio_pcm_s16be_bb4_in(V_len_1',B')] 
1*it(21)+0
  Such that:it(21) =< V_len_1
it(21) =< V_len_1-V_len_1'

#### Cost of chains of eval_audio_pcm_s16be_bb4_in(V_len_1,B):
* Chain [[22]]...: 1*it(22)+0
  with precondition: [0>=V_len_1+1,B=3] 

* Chain [[21],23]: 1*it(21)+0
  Such that:it(21) =< V_len_1

  with precondition: [B=3,V_len_1>=1] 

* Chain [23]: 0
  with precondition: [V_len_1=0,B=3] 


#### Cost of loops [25] 

 * loop 25:eval_audio_pcm_s16be_bb8_in(V_len_2,B) -> [eval_audio_pcm_s16be_bb8_in(V_len_2',B')] 
1
#### Cost of phase [25]:eval_audio_pcm_s16be_bb8_in(V_len_2,B) -> [eval_audio_pcm_s16be_bb8_in(V_len_2',B')] 
1*it(25)+0
#### Cost of loops [24] 

 * loop 24:eval_audio_pcm_s16be_bb8_in(V_len_2,B) -> [eval_audio_pcm_s16be_bb8_in(V_len_2',B')] 
1
#### Cost of phase [24]:eval_audio_pcm_s16be_bb8_in(V_len_2,B) -> [eval_audio_pcm_s16be_bb8_in(V_len_2',B')] 
1*it(24)+0
  Such that:it(24) =< V_len_2
it(24) =< V_len_2-V_len_2'

#### Cost of chains of eval_audio_pcm_s16be_bb8_in(V_len_2,B):
* Chain [[25]]...: 1*it(25)+0
  with precondition: [0>=V_len_2+1,B=2] 

* Chain [[24],26]: 1*it(24)+0
  Such that:it(24) =< V_len_2

  with precondition: [B=2,V_len_2>=1] 

* Chain [26]: 0
  with precondition: [V_len_2=0,B=2] 


#### Cost of chains of eval_audio_pcm_s16be_bb0_in(V_nsamples,B):
* Chain [28]: 4*s(1)+1
  Such that:aux(1) =< V_nsamples
s(1) =< aux(1)

  with precondition: [] 

* Chain [27]...: 1*aux(2)+0
  with precondition: [0>=V_nsamples+1] 


#### Cost of chains of eval_audio_pcm_s16be_start(V_nsamples,V_mode,B):
* Chain [30]: 4*s(10)+1
  Such that:s(9) =< V_nsamples
s(10) =< s(9)

  with precondition: [] 

* Chain [29]...: 1*s(11)+0
  with precondition: [0>=V_nsamples+1] 


Closed-form bounds of eval_audio_pcm_s16be_start(V_nsamples,V_mode,B): 
-------------------------------------
* Chain [30] with precondition: [] 
    - Upper bound: nat(V_nsamples)*4+1 
    - Complexity: n 
* Chain [29]... with precondition: [0>=V_nsamples+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_audio_pcm_s16be_start(V_nsamples,V_mode,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 37 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 29 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 153 ms.

