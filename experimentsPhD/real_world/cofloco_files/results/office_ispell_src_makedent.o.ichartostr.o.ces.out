Warning: Ignored call to eval_ichartostr_stop/1 in equation loop_cont_eval_ichartostr_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ichartostr_bb12_in/4]
1. recursive  : [eval_ichartostr_bb8_in/6]
2. recursive  : [eval_ichartostr_bb11_in/3,eval_ichartostr_bb1_in/2,eval_ichartostr_bb3_in/3,loop_cont_eval_ichartostr_bb12_in/3,loop_cont_eval_ichartostr_bb8_in/4]
3. non_recursive  : [loop_cont_eval_ichartostr_bb1_in/2]
4. non_recursive  : [eval_ichartostr_bb0_in/2]
5. non_recursive  : [eval_ichartostr_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ichartostr_bb12_in/4
1. SCC is partially evaluated into eval_ichartostr_bb8_in/6
2. SCC is partially evaluated into eval_ichartostr_bb1_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_ichartostr_bb0_in/2
5. SCC is partially evaluated into eval_ichartostr_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ichartostr_bb12_in/4 
* CE 10 is refined into CE [14] 
* CE 9 is refined into CE [15] 


#### Refined cost equations eval_ichartostr_bb12_in/4 
* CE 14: eval_ichartostr_bb12_in(A,B,C,B) = 0
     [C=3] 
* CE 15: eval_ichartostr_bb12_in(V__03,V_1,B,C) = 1+ eval_ichartostr_bb12_in(V__03,V_1,D,C)
     [D=3,B=3] 

### Cost equations --> "Loop" of eval_ichartostr_bb12_in/4 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_ichartostr_bb12_in/4 
* Loop 11: eval_ichartostr_bb12_in(V__03,V_1,B,C)->  eval_ichartostr_bb12_in(V__03,V_1,B',C)
                  [B'=3,B=3] 
* Loop 12: eval_ichartostr_bb12_in(A,B,C,B) [C=3] 

### Ranking functions of CR eval_ichartostr_bb12_in(V__03,V_1,B,C) 

#### Partial ranking functions of CR eval_ichartostr_bb12_in(V__03,V_1,B,C) 


### Resulting Chains:eval_ichartostr_bb12_in(V__03,V_1,B,C) 
* [[11]]...
* [[11],12]
* [12]


### Merging Chains  eval_ichartostr_bb12_in/4 into  External patterns of execution 
* [[12],[12,[11]]] --> 1 
* [[[11]]] --> 2 


### Specialization of cost equations eval_ichartostr_bb8_in/6 
* CE 11 is refined into CE [16] 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_ichartostr_bb8_in/6 
* CE 16: eval_ichartostr_bb8_in(A,B,C,D,E,B) = 0
     [C>=1,B+1=E,B+1=A,D=2] 
* CE 17: eval_ichartostr_bb8_in(A,B,C,D,E,B) = 0
     [0>=C,B+1=E,B+1=A,D=2] 
* CE 18: eval_ichartostr_bb8_in(V__03,V_1,V_i_0,B,C,D) = 1+ eval_ichartostr_bb8_in(E,V_1,F,G,C,D)
     [V_i_0>=1,V_i_0=F+1,V_1+1=E,V_1+1=V__03,G=2,B=2] 

### Cost equations --> "Loop" of eval_ichartostr_bb8_in/6 
* CEs [18] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of eval_ichartostr_bb8_in/6 
* Loop 13: eval_ichartostr_bb8_in(V__03,V_1,V_i_0,B,C,D)->  eval_ichartostr_bb8_in(V__03',V_1,V_i_0',B',C,D)
                  [V_i_0>=1,V_i_0=V_i_0'+1,V_1+1=V__03',V_1+1=V__03,B'=2,B=2] 
* Loop 14: eval_ichartostr_bb8_in(A,B,C,D,A,E) [C>=1,A=E+1,A=B+1,D=2] 
* Loop 15: eval_ichartostr_bb8_in(A,B,C,D,A,E) [0>=C,A=E+1,A=B+1,D=2] 

### Ranking functions of CR eval_ichartostr_bb8_in(V__03,V_1,V_i_0,B,C,D) 
* RF of phase [13]: [V_i_0]

#### Partial ranking functions of CR eval_ichartostr_bb8_in(V__03,V_1,V_i_0,B,C,D) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_i_0


### Resulting Chains:eval_ichartostr_bb8_in(V__03,V_1,V_i_0,B,C,D) 
* [[13],15]
* [[13],14]
* [15]
* [14]


### Merging Chains  eval_ichartostr_bb8_in/6 into  External patterns of execution 
* [[15]] --> 1 
* [[14],[14,[13]],[15,[13]]] --> 2 


### Specialization of cost equations eval_ichartostr_bb1_in/2 
* CE 6 is refined into CE [19] 
* CE 7 is refined into CE [20,21] 
* CE 8 is refined into CE [22,23,24,25] 
* CE 5 is refined into CE [26] 
* CE 4 is refined into CE [27] 


#### Refined cost equations eval_ichartostr_bb1_in/2 
* CE 19: eval_ichartostr_bb1_in(V__03,B) = 1+ eval_ichartostr_bb1_in(C,D)
     [C+1=V__03,D=4,B=4] 
* CE 20: eval_ichartostr_bb1_in(V__03,B) = 2+ eval_ichartostr_bb12_in(C,D,E,D):1+ eval_ichartostr_bb1_in(D,F)
     [D+1=C,D+1=V__03,F=4,E=3,B=4] 
* CE 21: eval_ichartostr_bb1_in(V__03,B) = 2+ eval_ichartostr_bb12_in(V__03,C,D,E):2
     [V__03=C+1,F=4,D=3,B=4] 
* CE 22: eval_ichartostr_bb1_in(V__03,B) = 3+ eval_ichartostr_bb8_in(C,D,E,F,G,D):1+ eval_ichartostr_bb12_in(H,D,I,D):1+ eval_ichartostr_bb1_in(D,J)
     [0>=E,D+1=H,D+1=G,D+1=C,D+1=V__03,J=4,I=3,F=2,B=4] 
* CE 23: eval_ichartostr_bb1_in(V__03,B) = 3+ eval_ichartostr_bb8_in(C,D,E,F,G,D):1+ eval_ichartostr_bb12_in(H,D,I,J):2
     [0>=E,D+1=H,D+1=G,D+1=C,D+1=V__03,K=4,I=3,F=2,B=4] 
* CE 24: eval_ichartostr_bb1_in(V__03,B) = 3+ eval_ichartostr_bb8_in(C,D,E,F,G,D):2+ eval_ichartostr_bb12_in(H,D,I,D):1+ eval_ichartostr_bb1_in(D,J)
     [E>=1,D+1=H,D+1=G,D+1=C,D+1=V__03,J=4,I=3,F=2,B=4] 
* CE 25: eval_ichartostr_bb1_in(V__03,B) = 3+ eval_ichartostr_bb8_in(C,D,E,F,G,D):2+ eval_ichartostr_bb12_in(H,D,I,J):2
     [E>=1,D+1=H,D+1=G,D+1=C,D+1=V__03,K=4,I=3,F=2,B=4] 
* CE 26: eval_ichartostr_bb1_in(V__03,B) = 0
     [V__03>=2,B=4] 
* CE 27: eval_ichartostr_bb1_in(V__03,B) = 0
     [1>=V__03,B=4] 

### Cost equations --> "Loop" of eval_ichartostr_bb1_in/2 
* CEs [26] --> Loop 16 
* CEs [27] --> Loop 17 
* CEs [21,23,25] --> Loop 18 
* CEs [19,20,22,24] --> Loop 19 

#### Loops of eval_ichartostr_bb1_in/2 
* Loop 16: eval_ichartostr_bb1_in(V__03,B) [V__03>=2,B=4] 
* Loop 17: eval_ichartostr_bb1_in(V__03,B) [1>=V__03,B=4] 
* Loop 18: eval_ichartostr_bb1_in(V__03,B) [B=4] 
* Loop 19: eval_ichartostr_bb1_in(V__03,B)->  eval_ichartostr_bb1_in(V__03',B')
                  [V__03=V__03'+1,B'=4,B=4] 

### Ranking functions of CR eval_ichartostr_bb1_in(V__03,B) 

#### Partial ranking functions of CR eval_ichartostr_bb1_in(V__03,B) 


### Resulting Chains:eval_ichartostr_bb1_in(V__03,B) 
* [[19]]...
* [[19],18]...
* [[19],17]
* [[19],16]
* [18]...
* [17]
* [16]


### Merging Chains  eval_ichartostr_bb1_in/2 into  External patterns of execution 
* [[16],[17],[16,[19]],[17,[19]]] --> 1 
* [[18],[[19]],[18,[19]]] --> 2 


### Specialization of cost equations eval_ichartostr_bb0_in/2 
* CE 3 is refined into CE [28,29] 


#### Refined cost equations eval_ichartostr_bb0_in/2 
* CE 28: eval_ichartostr_bb0_in(V_outlen,B) = 1+ eval_ichartostr_bb1_in(V_outlen,C):1
     [C=4] 
* CE 29: eval_ichartostr_bb0_in(V_outlen,B) = 1+ eval_ichartostr_bb1_in(V_outlen,C):2
     [C=4] 

### Cost equations --> "Loop" of eval_ichartostr_bb0_in/2 
* CEs [29] --> Loop 20 
* CEs [28] --> Loop 21 

#### Loops of eval_ichartostr_bb0_in/2 
* Loop 20: eval_ichartostr_bb0_in(V_outlen,B) [] 
* Loop 21: eval_ichartostr_bb0_in(V_outlen,B) [] 

### Ranking functions of CR eval_ichartostr_bb0_in(V_outlen,B) 

#### Partial ranking functions of CR eval_ichartostr_bb0_in(V_outlen,B) 


### Resulting Chains:eval_ichartostr_bb0_in(V_outlen,B) 
* [21]
* [20]...


### Merging Chains  eval_ichartostr_bb0_in/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_ichartostr_start/4 
* CE 2 is refined into CE [30,31] 


#### Refined cost equations eval_ichartostr_start/4 
* CE 30: eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B) = 0+ eval_ichartostr_bb0_in(V_outlen,B):1
     [] 
* CE 31: eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B) = 0+ eval_ichartostr_bb0_in(V_outlen,B):2
     [] 

### Cost equations --> "Loop" of eval_ichartostr_start/4 
* CEs [31] --> Loop 22 
* CEs [30] --> Loop 23 

#### Loops of eval_ichartostr_start/4 
* Loop 22: eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B) [] 
* Loop 23: eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B) [] 

### Ranking functions of CR eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B) 

#### Partial ranking functions of CR eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B) 


### Resulting Chains:eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B) 
* [23]
* [22]...


### Merging Chains  eval_ichartostr_start/4 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_ichartostr_bb12_in(V__03,V_1,B,C) -> [eval_ichartostr_bb12_in(V__03',V_1',B',C')] 
1
#### Cost of phase [11]:eval_ichartostr_bb12_in(V__03,V_1,B,C) -> [eval_ichartostr_bb12_in(V__03',V_1',B',C')] 
1*it(11)+0
#### Cost of phase [11]:eval_ichartostr_bb12_in(V__03,V_1,B,C) -> [eval_ichartostr_bb12_in(V__03',V_1',B',C')] 
1*it(11)+0
#### Cost of chains of eval_ichartostr_bb12_in(V__03,V_1,B,C):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [B=3] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=3,V_1=C] 

* Chain [12]: 0
  with precondition: [B=3,C=V_1] 


#### Cost of loops [13] 

 * loop 13:eval_ichartostr_bb8_in(V__03,V_1,V_i_0,B,C,D) -> [eval_ichartostr_bb8_in(V__03',V_1',V_i_0',B',C',D')] 
1
#### Cost of phase [13]:eval_ichartostr_bb8_in(V__03,V_1,V_i_0,B,C,D) -> [eval_ichartostr_bb8_in(V__03',V_1',V_i_0',B',C',D')] 
1*it(13)+0
  Such that:it(13) =< V_i_0
it(13) =< V_i_0-V_i_0'

#### Cost of phase [13]:eval_ichartostr_bb8_in(V__03,V_1,V_i_0,B,C,D) -> [eval_ichartostr_bb8_in(V__03',V_1',V_i_0',B',C',D')] 
1*it(13)+0
  Such that:it(13) =< V_i_0
it(13) =< V_i_0-V_i_0'

#### Cost of chains of eval_ichartostr_bb8_in(V__03,V_1,V_i_0,B,C,D):
* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< V_i_0

  with precondition: [B=2,V__03=V_1+1,V__03=C,V__03=D+1,V_i_0>=1] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V_i_0

  with precondition: [B=2,V__03=V_1+1,V__03=C,V__03=D+1,V_i_0>=2] 

* Chain [15]: 0
  with precondition: [B=2,V_1+1=V__03,V_1+1=C,V_1=D,0>=V_i_0] 

* Chain [14]: 0
  with precondition: [B=2,V_1+1=V__03,V_1+1=C,V_1=D,V_i_0>=1] 


#### Cost of loops [19] 

 * loop 19:eval_ichartostr_bb1_in(V__03,B) -> [eval_ichartostr_bb1_in(V__03',B')] 
1*s(9)+0
#### Cost of phase [19]:eval_ichartostr_bb1_in(V__03,B) -> [eval_ichartostr_bb1_in(V__03',B')] 
1*s(10)+0
#### Cost of phase [19]:eval_ichartostr_bb1_in(V__03,B) -> [eval_ichartostr_bb1_in(V__03',B')] 
1*s(10)+0
#### Cost of phase [19]:eval_ichartostr_bb1_in(V__03,B) -> [eval_ichartostr_bb1_in(V__03',B')] 
1*s(10)+0
#### Cost of phase [19]:eval_ichartostr_bb1_in(V__03,B) -> [eval_ichartostr_bb1_in(V__03',B')] 
1*s(10)+0
#### Cost of chains of eval_ichartostr_bb1_in(V__03,B):
* Chain [[19]]...: 1*s(10)+0
  with precondition: [B=4] 

* Chain [[19],18]...: 2*aux(4)+0
  with precondition: [B=4] 

* Chain [[19],17]: 1*s(10)+0
  with precondition: [B=4] 

* Chain [[19],16]: 1*s(10)+0
  with precondition: [B=4,V__03>=3] 

* Chain [18]...: 1*aux(4)+0
  with precondition: [B=4] 

* Chain [17]: 0
  with precondition: [B=4,1>=V__03] 

* Chain [16]: 0
  with precondition: [B=4,V__03>=2] 


#### Cost of chains of eval_ichartostr_bb0_in(V_outlen,B):
* Chain [21]: 1*s(21)+1
  with precondition: [] 

* Chain [20]...: 1*s(22)+1
  with precondition: [] 


#### Cost of chains of eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B):
* Chain [23]: 1*s(23)+1
  with precondition: [] 

* Chain [22]...: 1*s(24)+1
  with precondition: [] 


Closed-form bounds of eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_ichartostr_start(V_outlen,V_canonical,V__defdupchar,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 36 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 31 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 129 ms.

