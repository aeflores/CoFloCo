Warning: Ignored call to eval_write_any_marker_stop/1 in equation eval_write_any_marker_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_write_any_marker_8/4,eval_write_any_marker_9/4,eval_write_any_marker_bb2_in/2]
1. non_recursive  : [eval_write_any_marker_bb4_in/1]
2. non_recursive  : [loop_cont_eval_write_any_marker_bb2_in/2]
3. non_recursive  : [eval_write_any_marker_3/2]
4. non_recursive  : [eval_write_any_marker_2/3]
5. non_recursive  : [eval_write_any_marker_1/2]
6. non_recursive  : [eval_write_any_marker_0/3]
7. non_recursive  : [eval_write_any_marker_bb0_in/3]
8. non_recursive  : [eval_write_any_marker_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_write_any_marker_bb2_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_write_any_marker_3/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_write_any_marker_bb0_in/3
8. SCC is partially evaluated into eval_write_any_marker_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_write_any_marker_bb2_in/2 
* CE 8 is refined into CE [9] 
* CE 6 is refined into CE [10] 
* CE 7 is refined into CE [11] 


#### Refined cost equations eval_write_any_marker_bb2_in/2 
* CE 9: eval_write_any_marker_bb2_in(V__01,B) = 0
     [B=2,V__01=0] 
* CE 10: eval_write_any_marker_bb2_in(V__01,B) = 1+ eval_write_any_marker_bb2_in(C,D)
     [V__01>=1,V__01=C+1,D=2,B=2] 
* CE 11: eval_write_any_marker_bb2_in(V__01,B) = 1+ eval_write_any_marker_bb2_in(C,D)
     [0>=V__01+1,V__01=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_write_any_marker_bb2_in/2 
* CEs [10] --> Loop 7 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_write_any_marker_bb2_in/2 
* Loop 7: eval_write_any_marker_bb2_in(V__01,B)->  eval_write_any_marker_bb2_in(V__01',B')
                  [V__01>=1,V__01=V__01'+1,B'=2,B=2] 
* Loop 8: eval_write_any_marker_bb2_in(V__01,B)->  eval_write_any_marker_bb2_in(V__01',B')
                  [0>=V__01+1,V__01=V__01'+1,B'=2,B=2] 
* Loop 9: eval_write_any_marker_bb2_in(V__01,B) [B=2,V__01=0] 

### Ranking functions of CR eval_write_any_marker_bb2_in(V__01,B) 
* RF of phase [7]: [V__01]

#### Partial ranking functions of CR eval_write_any_marker_bb2_in(V__01,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__01


### Resulting Chains:eval_write_any_marker_bb2_in(V__01,B) 
* [[8]]...
* [[7],9]
* [9]


### Merging Chains  eval_write_any_marker_bb2_in/2 into  External patterns of execution 
* [[9]] --> 1 
* [[9,[7]]] --> 2 
* [[[8]]] --> 3 


### Specialization of cost equations eval_write_any_marker_3/2 
* CE 5 is refined into CE [12,13,14] 


#### Refined cost equations eval_write_any_marker_3/2 
* CE 12: eval_write_any_marker_3(V_datalen,B) = 1+ eval_write_any_marker_bb2_in(C,D):1
     [D=2,C=0,V_datalen=0] 
* CE 13: eval_write_any_marker_3(V_datalen,B) = 1+ eval_write_any_marker_bb2_in(V_datalen,C):2
     [V_datalen>=1,C=2] 
* CE 14: eval_write_any_marker_3(V_datalen,B) = 1+ eval_write_any_marker_bb2_in(V_datalen,C):3
     [0>=V_datalen+1,C=2] 

### Cost equations --> "Loop" of eval_write_any_marker_3/2 
* CEs [14] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_write_any_marker_3/2 
* Loop 10: eval_write_any_marker_3(V_datalen,B) [0>=V_datalen+1] 
* Loop 11: eval_write_any_marker_3(V_datalen,B) [V_datalen>=1] 
* Loop 12: eval_write_any_marker_3(V_datalen,B) [V_datalen=0] 

### Ranking functions of CR eval_write_any_marker_3(V_datalen,B) 

#### Partial ranking functions of CR eval_write_any_marker_3(V_datalen,B) 


### Resulting Chains:eval_write_any_marker_3(V_datalen,B) 
* [12]
* [11]
* [10]...


### Merging Chains  eval_write_any_marker_3/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[10]] --> 3 


### Specialization of cost equations eval_write_any_marker_bb0_in/3 
* CE 3 is refined into CE [15,16,17] 
* CE 4 is refined into CE [18] 


#### Refined cost equations eval_write_any_marker_bb0_in/3 
* CE 15: eval_write_any_marker_bb0_in(V_marker,V_datalen,B) = 0+ eval_write_any_marker_3(C,B):1
     [C=0,V_datalen=0] 
* CE 16: eval_write_any_marker_bb0_in(V_marker,V_datalen,B) = 0+ eval_write_any_marker_3(V_datalen,B):2
     [V_datalen>=1] 
* CE 17: eval_write_any_marker_bb0_in(V_marker,V_datalen,B) = 0+ eval_write_any_marker_3(V_datalen,B):3
     [0>=V_datalen+1] 
* CE 18: eval_write_any_marker_bb0_in(V_marker,V_datalen,B) = 0
     [] 

### Cost equations --> "Loop" of eval_write_any_marker_bb0_in/3 
* CEs [15,16,18] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of eval_write_any_marker_bb0_in/3 
* Loop 13: eval_write_any_marker_bb0_in(V_marker,V_datalen,B) [] 
* Loop 14: eval_write_any_marker_bb0_in(V_marker,V_datalen,B) [0>=V_datalen+1] 

### Ranking functions of CR eval_write_any_marker_bb0_in(V_marker,V_datalen,B) 

#### Partial ranking functions of CR eval_write_any_marker_bb0_in(V_marker,V_datalen,B) 


### Resulting Chains:eval_write_any_marker_bb0_in(V_marker,V_datalen,B) 
* [14]...
* [13]


### Merging Chains  eval_write_any_marker_bb0_in/3 into  External patterns of execution 
* [[13]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_write_any_marker_start/3 
* CE 2 is refined into CE [19,20] 


#### Refined cost equations eval_write_any_marker_start/3 
* CE 19: eval_write_any_marker_start(V_marker,V_datalen,B) = 0+ eval_write_any_marker_bb0_in(V_marker,V_datalen,B):1
     [] 
* CE 20: eval_write_any_marker_start(V_marker,V_datalen,B) = 0+ eval_write_any_marker_bb0_in(V_marker,V_datalen,B):2
     [0>=V_datalen+1] 

### Cost equations --> "Loop" of eval_write_any_marker_start/3 
* CEs [20] --> Loop 15 
* CEs [19] --> Loop 16 

#### Loops of eval_write_any_marker_start/3 
* Loop 15: eval_write_any_marker_start(V_marker,V_datalen,B) [0>=V_datalen+1] 
* Loop 16: eval_write_any_marker_start(V_marker,V_datalen,B) [] 

### Ranking functions of CR eval_write_any_marker_start(V_marker,V_datalen,B) 

#### Partial ranking functions of CR eval_write_any_marker_start(V_marker,V_datalen,B) 


### Resulting Chains:eval_write_any_marker_start(V_marker,V_datalen,B) 
* [16]
* [15]...


### Merging Chains  eval_write_any_marker_start/3 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_write_any_marker_bb2_in(V__01,B) -> [eval_write_any_marker_bb2_in(V__01',B')] 
1
#### Cost of phase [8]:eval_write_any_marker_bb2_in(V__01,B) -> [eval_write_any_marker_bb2_in(V__01',B')] 
1*it(8)+0
#### Cost of loops [7] 

 * loop 7:eval_write_any_marker_bb2_in(V__01,B) -> [eval_write_any_marker_bb2_in(V__01',B')] 
1
#### Cost of phase [7]:eval_write_any_marker_bb2_in(V__01,B) -> [eval_write_any_marker_bb2_in(V__01',B')] 
1*it(7)+0
  Such that:it(7) =< V__01
it(7) =< V__01-V__01'

#### Cost of chains of eval_write_any_marker_bb2_in(V__01,B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [0>=V__01+1,B=2] 

* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< V__01

  with precondition: [B=2,V__01>=1] 

* Chain [9]: 0
  with precondition: [V__01=0,B=2] 


#### Cost of chains of eval_write_any_marker_3(V_datalen,B):
* Chain [12]: 1
  with precondition: [V_datalen=0] 

* Chain [11]: 1*s(1)+1
  Such that:s(1) =< V_datalen

  with precondition: [V_datalen>=1] 

* Chain [10]...: 1*s(2)+1
  with precondition: [0>=V_datalen+1] 


#### Cost of chains of eval_write_any_marker_bb0_in(V_marker,V_datalen,B):
* Chain [14]...: 1*s(3)+1
  with precondition: [0>=V_datalen+1] 

* Chain [13]: 1*s(4)+1
  Such that:s(4) =< V_datalen

  with precondition: [] 


#### Cost of chains of eval_write_any_marker_start(V_marker,V_datalen,B):
* Chain [16]: 1*s(5)+1
  Such that:s(5) =< V_datalen

  with precondition: [] 

* Chain [15]...: 1*s(6)+1
  with precondition: [0>=V_datalen+1] 


Closed-form bounds of eval_write_any_marker_start(V_marker,V_datalen,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: nat(V_datalen)+1 
    - Complexity: n 
* Chain [15]... with precondition: [0>=V_datalen+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_write_any_marker_start(V_marker,V_datalen,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 28 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 34 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 97 ms.

