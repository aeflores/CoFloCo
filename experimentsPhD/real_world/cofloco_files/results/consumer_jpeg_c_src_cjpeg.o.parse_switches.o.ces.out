Warning: Ignored call to eval_parse_switches_stop/1 in equation eval_parse_switches_15/1 
Warning: Ignored call to eval_parse_switches_stop/1 in equation eval_parse_switches_bb103_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_parse_switches_101/11,eval_parse_switches_102/11,eval_parse_switches_103/11,eval_parse_switches_104/11,eval_parse_switches_107/12,eval_parse_switches_108/12,eval_parse_switches_11/11,eval_parse_switches_110/12,eval_parse_switches_111/12,eval_parse_switches_112/12,eval_parse_switches_113/12,eval_parse_switches_115/13,eval_parse_switches_116/14,eval_parse_switches_117/11,eval_parse_switches_118/11,eval_parse_switches_12/11,eval_parse_switches_121/12,eval_parse_switches_122/12,eval_parse_switches_125/11,eval_parse_switches_126/11,eval_parse_switches_129/12,eval_parse_switches_130/12,eval_parse_switches_133/11,eval_parse_switches_134/11,eval_parse_switches_138/12,eval_parse_switches_139/12,eval_parse_switches_141/12,eval_parse_switches_142/12,eval_parse_switches_143/12,eval_parse_switches_144/12,eval_parse_switches_148/12,eval_parse_switches_149/12,eval_parse_switches_16/11,eval_parse_switches_165/11,eval_parse_switches_166/11,eval_parse_switches_169/12,eval_parse_switches_17/11,eval_parse_switches_170/12,eval_parse_switches_173/11,eval_parse_switches_174/11,eval_parse_switches_177/12,eval_parse_switches_178/12,eval_parse_switches_18/11,eval_parse_switches_181/11,eval_parse_switches_182/11,eval_parse_switches_185/12,eval_parse_switches_186/12,eval_parse_switches_188/12,eval_parse_switches_189/12,eval_parse_switches_19/11,eval_parse_switches_190/12,eval_parse_switches_191/12,eval_parse_switches_195/12,eval_parse_switches_196/12,eval_parse_switches_200/11,eval_parse_switches_201/11,eval_parse_switches_204/11,eval_parse_switches_205/11,eval_parse_switches_22/12,eval_parse_switches_23/12,eval_parse_switches_25/12,eval_parse_switches_26/12,eval_parse_switches_30/12,eval_parse_switches_31/12,eval_parse_switches_35/12,eval_parse_switches_36/12,eval_parse_switches_39/12,eval_parse_switches_40/12,eval_parse_switches_41/11,eval_parse_switches_42/11,eval_parse_switches_43/11,eval_parse_switches_44/11,eval_parse_switches_47/11,eval_parse_switches_48/11,eval_parse_switches_54/11,eval_parse_switches_55/11,eval_parse_switches_56/11,eval_parse_switches_57/11,eval_parse_switches_58/11,eval_parse_switches_59/11,eval_parse_switches_60/11,eval_parse_switches_61/11,eval_parse_switches_65/12,eval_parse_switches_66/12,eval_parse_switches_68/12,eval_parse_switches_69/12,eval_parse_switches_70/12,eval_parse_switches_71/12,eval_parse_switches_86/11,eval_parse_switches_87/11,eval_parse_switches_88/11,eval_parse_switches_89/11,eval_parse_switches_92/11,eval_parse_switches_93/11,eval_parse_switches_96/12,eval_parse_switches_97/12,eval_parse_switches_bb11_in/12,eval_parse_switches_bb1_in/11,eval_parse_switches_bb20_in/11,eval_parse_switches_bb22_in/11,eval_parse_switches_bb25_in/11,eval_parse_switches_bb29_in/12,eval_parse_switches_bb31_in/12,eval_parse_switches_bb33_in/12,eval_parse_switches_bb34_in/12,eval_parse_switches_bb37_in/11,eval_parse_switches_bb41_in/12,eval_parse_switches_bb46_in/12,eval_parse_switches_bb48_in/12,eval_parse_switches_bb52_in/12,eval_parse_switches_bb56_in/12,eval_parse_switches_bb60_in/12,eval_parse_switches_bb62_in/12,eval_parse_switches_bb64_in/12,eval_parse_switches_bb66_in/12,eval_parse_switches_bb71_in/12,eval_parse_switches_bb75_in/12,eval_parse_switches_bb79_in/12,eval_parse_switches_bb81_in/12,eval_parse_switches_bb83_in/12,eval_parse_switches_bb87_in/14]
1. non_recursive  : [eval_parse_switches_15/1]
2. non_recursive  : [eval_parse_switches_14/3]
3. non_recursive  : [eval_parse_switches_13/3]
4. non_recursive  : [eval_parse_switches_bb103_in/1]
5. non_recursive  : [eval_parse_switches_228/1]
6. non_recursive  : [eval_parse_switches_227/3]
7. non_recursive  : [eval_parse_switches_226/3]
8. non_recursive  : [eval_parse_switches_225/3]
9. non_recursive  : [eval_parse_switches_bb100_in/3]
10. non_recursive  : [eval_parse_switches_224/3]
11. non_recursive  : [eval_parse_switches_223/3]
12. non_recursive  : [eval_parse_switches_bb98_in/3]
13. non_recursive  : [eval_parse_switches_222/3]
14. non_recursive  : [eval_parse_switches_221/3]
15. non_recursive  : [eval_parse_switches_220/3]
16. non_recursive  : [eval_parse_switches_219/3]
17. non_recursive  : [eval_parse_switches_bb95_in/3]
18. non_recursive  : [eval_parse_switches_218/3]
19. non_recursive  : [eval_parse_switches_217/3]
20. non_recursive  : [eval_parse_switches_216/3]
21. non_recursive  : [eval_parse_switches_215/3]
22. non_recursive  : [eval_parse_switches_bb92_in/3]
23. non_recursive  : [eval_parse_switches_214/3]
24. non_recursive  : [eval_parse_switches_213/3]
25. non_recursive  : [eval_parse_switches_212/3]
26. non_recursive  : [eval_parse_switches_211/5]
27. non_recursive  : [eval_parse_switches_210/5]
28. non_recursive  : [eval_parse_switches_209/6]
29. non_recursive  : [eval_parse_switches_bb88_in/5]
30. non_recursive  : [loop_cont_eval_parse_switches_bb1_in/6]
31. non_recursive  : [eval_parse_switches_bb0_in/4]
32. non_recursive  : [eval_parse_switches_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_parse_switches_bb1_in/11
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_parse_switches_226/3
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_parse_switches_bb100_in/3
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_parse_switches_bb98_in/3
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_parse_switches_220/3
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_parse_switches_bb95_in/3
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_parse_switches_216/3
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_parse_switches_bb92_in/3
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_parse_switches_212/3
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_parse_switches_210/5
28. SCC is completely evaluated into other SCCs
29. SCC is partially evaluated into eval_parse_switches_bb88_in/5
30. SCC is partially evaluated into loop_cont_eval_parse_switches_bb1_in/6
31. SCC is partially evaluated into eval_parse_switches_bb0_in/4
32. SCC is partially evaluated into eval_parse_switches_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_parse_switches_bb1_in/11 
* CE 9 is refined into CE [28] 
* CE 10 is refined into CE [29] 
* CE 7 is refined into CE [30] 
* CE 4 is refined into CE [31] 
* CE 6 is refined into CE [32] 
* CE 5 is refined into CE [33] 
* CE 8 is refined into CE [34] 


#### Refined cost equations eval_parse_switches_bb1_in/11 
* CE 28: eval_parse_switches_bb1_in(A,B,C,D,E,F,G,B,C,D,E) = 0
     [A>=F+1,F>=D+1,D>=0,G=3] 
* CE 29: eval_parse_switches_bb1_in(A,B,C,D,E,F,G,B,C,D,E) = 0
     [F>=D+1,F>=A,D>=0,G=3] 
* CE 30: eval_parse_switches_bb1_in(A,B,C,D,E,F,G,B,C,H,I) = 0
     [A>=F+1,F>=D+1,D>=0,G=2] 
* CE 31: eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) = 1+ eval_parse_switches_bb1_in(V_argc,G,H,V_force_baseline_0,V_q_scale_factor_0,I,B,C,D,E,F)
     [V_argc>=V_argn_0+1,V_argn_0>=V_force_baseline_0+1,V_force_baseline_0>=0,V_argn_0+1=I] 
* CE 32: eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) = 1+ eval_parse_switches_bb1_in(V_argc,G,H,V_force_baseline_0,V_q_scale_factor_0,I,B,C,D,E,F)
     [V_argc>=V_argn_0+1,V_argn_0>=V_force_baseline_0+1,V_force_baseline_0>=0,V_argn_0+2=I] 
* CE 33: eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) = 1+ eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,G,H,B,C,D,E,F)
     [V_argc>=V_argn_0+1,V_argn_0>=V_force_baseline_0+1,V_force_baseline_0>=0,V_argn_0+2=H] 
* CE 34: eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) = 1+ eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,G,V_q_scale_factor_0,H,B,C,D,E,F)
     [V_argc>=V_argn_0+1,V_argn_0>=V_force_baseline_0+1,V_force_baseline_0>=0,V_argn_0+1=H,G=1] 

### Cost equations --> "Loop" of eval_parse_switches_bb1_in/11 
* CEs [31] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [30] --> Loop 28 

#### Loops of eval_parse_switches_bb1_in/11 
* Loop 22: eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F)->  eval_parse_switches_bb1_in(V_argc,V__is_targa',V__parse_switches_printed_version',V_force_baseline_0,V_q_scale_factor_0,V_argn_0',B,C,D,E,F)
                  [V_argc>=V_argn_0+1,V_argn_0>=V_force_baseline_0+1,V_force_baseline_0>=0,V_argn_0+1=V_argn_0'] 
* Loop 23: eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F)->  eval_parse_switches_bb1_in(V_argc,V__is_targa',V__parse_switches_printed_version',V_force_baseline_0,V_q_scale_factor_0,V_argn_0',B,C,D,E,F)
                  [V_argc>=V_argn_0+1,V_argn_0>=V_force_baseline_0+1,V_force_baseline_0>=0,V_argn_0+2=V_argn_0'] 
* Loop 24: eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F)->  eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0',V_argn_0',B,C,D,E,F)
                  [V_argc>=V_argn_0+1,V_argn_0>=V_force_baseline_0+1,V_force_baseline_0>=0,V_argn_0+2=V_argn_0'] 
* Loop 25: eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F)->  eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0',V_q_scale_factor_0,V_argn_0',B,C,D,E,F)
                  [V_argc>=V_argn_0+1,V_argn_0>=V_force_baseline_0+1,V_force_baseline_0>=0,V_argn_0+1=V_argn_0',V_force_baseline_0'=1] 
* Loop 26: eval_parse_switches_bb1_in(A,B,C,D,E,F,G,B,C,D,E) [A>=F+1,F>=D+1,D>=0,G=3] 
* Loop 27: eval_parse_switches_bb1_in(A,B,C,D,E,F,G,B,C,D,E) [F>=D+1,F>=A,D>=0,G=3] 
* Loop 28: eval_parse_switches_bb1_in(A,B,C,D,E,F,G,B,C,H,I) [A>=F+1,F>=D+1,D>=0,G=2] 

### Ranking functions of CR eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) 
* RF of phase [22,23,24,25]: [V_argc-V_argn_0]

#### Partial ranking functions of CR eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) 
* Partial RF of phase [22,23,24,25]:
  - RF of loop [22:1,25:1]:
    V_argc-V_argn_0
  - RF of loop [23:1,24:1]:
    V_argc/2-V_argn_0/2


### Resulting Chains:eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) 
* [[22,23,24,25],28]
* [[22,23,24,25],27]
* [[22,23,24,25],26]
* [28]
* [27]
* [26]


### Merging Chains  eval_parse_switches_bb1_in/11 into  External patterns of execution 
* [[28]] --> 1 
* [[28,[22,23,24,25]]] --> 2 
* [[27]] --> 3 
* [[26],[26,[22,23,24,25]],[27,[22,23,24,25]]] --> 4 


### Specialization of cost equations eval_parse_switches_226/3 
* CE 27 is refined into CE [35] 


#### Refined cost equations eval_parse_switches_226/3 
* CE 35: eval_parse_switches_226(V__is_targa,V__parse_switches_printed_version,B) = 0
     [] 

### Cost equations --> "Loop" of eval_parse_switches_226/3 
* CEs [35] --> Loop 29 

#### Loops of eval_parse_switches_226/3 
* Loop 29: eval_parse_switches_226(V__is_targa,V__parse_switches_printed_version,B) [] 

### Ranking functions of CR eval_parse_switches_226(V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_226(V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_226(V__is_targa,V__parse_switches_printed_version,B) 
* [29]


### Merging Chains  eval_parse_switches_226/3 into  External patterns of execution 
* [[29]] --> 1 


### Specialization of cost equations eval_parse_switches_bb100_in/3 
* CE 25 is refined into CE [36] 
* CE 26 is refined into CE [37] 


#### Refined cost equations eval_parse_switches_bb100_in/3 
* CE 36: eval_parse_switches_bb100_in(V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_226(V__is_targa,V__parse_switches_printed_version,B):1
     [] 
* CE 37: eval_parse_switches_bb100_in(V__is_targa,V__parse_switches_printed_version,B) = 0
     [] 

### Cost equations --> "Loop" of eval_parse_switches_bb100_in/3 
* CEs [36,37] --> Loop 30 

#### Loops of eval_parse_switches_bb100_in/3 
* Loop 30: eval_parse_switches_bb100_in(V__is_targa,V__parse_switches_printed_version,B) [] 

### Ranking functions of CR eval_parse_switches_bb100_in(V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_bb100_in(V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_bb100_in(V__is_targa,V__parse_switches_printed_version,B) 
* [30]


### Merging Chains  eval_parse_switches_bb100_in/3 into  External patterns of execution 
* [[30]] --> 1 


### Specialization of cost equations eval_parse_switches_bb98_in/3 
* CE 24 is refined into CE [38] 


#### Refined cost equations eval_parse_switches_bb98_in/3 
* CE 38: eval_parse_switches_bb98_in(V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_bb100_in(V__is_targa,V__parse_switches_printed_version,B):1
     [] 

### Cost equations --> "Loop" of eval_parse_switches_bb98_in/3 
* CEs [38] --> Loop 31 

#### Loops of eval_parse_switches_bb98_in/3 
* Loop 31: eval_parse_switches_bb98_in(V__is_targa,V__parse_switches_printed_version,B) [] 

### Ranking functions of CR eval_parse_switches_bb98_in(V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_bb98_in(V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_bb98_in(V__is_targa,V__parse_switches_printed_version,B) 
* [31]


### Merging Chains  eval_parse_switches_bb98_in/3 into  External patterns of execution 
* [[31]] --> 1 


### Specialization of cost equations eval_parse_switches_220/3 
* CE 23 is refined into CE [39] 


#### Refined cost equations eval_parse_switches_220/3 
* CE 39: eval_parse_switches_220(V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_bb98_in(V__is_targa,V__parse_switches_printed_version,B):1
     [] 

### Cost equations --> "Loop" of eval_parse_switches_220/3 
* CEs [39] --> Loop 32 

#### Loops of eval_parse_switches_220/3 
* Loop 32: eval_parse_switches_220(V__is_targa,V__parse_switches_printed_version,B) [] 

### Ranking functions of CR eval_parse_switches_220(V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_220(V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_220(V__is_targa,V__parse_switches_printed_version,B) 
* [32]


### Merging Chains  eval_parse_switches_220/3 into  External patterns of execution 
* [[32]] --> 1 


### Specialization of cost equations eval_parse_switches_bb95_in/3 
* CE 21 is refined into CE [40] 
* CE 22 is refined into CE [41] 


#### Refined cost equations eval_parse_switches_bb95_in/3 
* CE 40: eval_parse_switches_bb95_in(V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_220(V__is_targa,V__parse_switches_printed_version,B):1
     [] 
* CE 41: eval_parse_switches_bb95_in(V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_bb98_in(V__is_targa,V__parse_switches_printed_version,B):1
     [] 

### Cost equations --> "Loop" of eval_parse_switches_bb95_in/3 
* CEs [40,41] --> Loop 33 

#### Loops of eval_parse_switches_bb95_in/3 
* Loop 33: eval_parse_switches_bb95_in(V__is_targa,V__parse_switches_printed_version,B) [] 

### Ranking functions of CR eval_parse_switches_bb95_in(V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_bb95_in(V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_bb95_in(V__is_targa,V__parse_switches_printed_version,B) 
* [33]


### Merging Chains  eval_parse_switches_bb95_in/3 into  External patterns of execution 
* [[33]] --> 1 


### Specialization of cost equations eval_parse_switches_216/3 
* CE 20 is refined into CE [42] 


#### Refined cost equations eval_parse_switches_216/3 
* CE 42: eval_parse_switches_216(V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_bb95_in(V__is_targa,V__parse_switches_printed_version,B):1
     [] 

### Cost equations --> "Loop" of eval_parse_switches_216/3 
* CEs [42] --> Loop 34 

#### Loops of eval_parse_switches_216/3 
* Loop 34: eval_parse_switches_216(V__is_targa,V__parse_switches_printed_version,B) [] 

### Ranking functions of CR eval_parse_switches_216(V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_216(V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_216(V__is_targa,V__parse_switches_printed_version,B) 
* [34]


### Merging Chains  eval_parse_switches_216/3 into  External patterns of execution 
* [[34]] --> 1 


### Specialization of cost equations eval_parse_switches_bb92_in/3 
* CE 18 is refined into CE [43] 
* CE 19 is refined into CE [44] 


#### Refined cost equations eval_parse_switches_bb92_in/3 
* CE 43: eval_parse_switches_bb92_in(V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_216(V__is_targa,V__parse_switches_printed_version,B):1
     [] 
* CE 44: eval_parse_switches_bb92_in(V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_bb95_in(V__is_targa,V__parse_switches_printed_version,B):1
     [] 

### Cost equations --> "Loop" of eval_parse_switches_bb92_in/3 
* CEs [43,44] --> Loop 35 

#### Loops of eval_parse_switches_bb92_in/3 
* Loop 35: eval_parse_switches_bb92_in(V__is_targa,V__parse_switches_printed_version,B) [] 

### Ranking functions of CR eval_parse_switches_bb92_in(V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_bb92_in(V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_bb92_in(V__is_targa,V__parse_switches_printed_version,B) 
* [35]


### Merging Chains  eval_parse_switches_bb92_in/3 into  External patterns of execution 
* [[35]] --> 1 


### Specialization of cost equations eval_parse_switches_212/3 
* CE 17 is refined into CE [45] 


#### Refined cost equations eval_parse_switches_212/3 
* CE 45: eval_parse_switches_212(V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_bb92_in(V__is_targa,V__parse_switches_printed_version,B):1
     [] 

### Cost equations --> "Loop" of eval_parse_switches_212/3 
* CEs [45] --> Loop 36 

#### Loops of eval_parse_switches_212/3 
* Loop 36: eval_parse_switches_212(V__is_targa,V__parse_switches_printed_version,B) [] 

### Ranking functions of CR eval_parse_switches_212(V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_212(V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_212(V__is_targa,V__parse_switches_printed_version,B) 
* [36]


### Merging Chains  eval_parse_switches_212/3 into  External patterns of execution 
* [[36]] --> 1 


### Specialization of cost equations eval_parse_switches_210/5 
* CE 15 is refined into CE [46] 
* CE 16 is refined into CE [47] 


#### Refined cost equations eval_parse_switches_210/5 
* CE 46: eval_parse_switches_210(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) = 0+ eval_parse_switches_212(V__is_targa,V__parse_switches_printed_version,B):1
     [] 
* CE 47: eval_parse_switches_210(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) = 0+ eval_parse_switches_bb92_in(V__is_targa,V__parse_switches_printed_version,B):1
     [] 

### Cost equations --> "Loop" of eval_parse_switches_210/5 
* CEs [46,47] --> Loop 37 

#### Loops of eval_parse_switches_210/5 
* Loop 37: eval_parse_switches_210(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) [] 

### Ranking functions of CR eval_parse_switches_210(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) 

#### Partial ranking functions of CR eval_parse_switches_210(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) 


### Resulting Chains:eval_parse_switches_210(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) 
* [37]


### Merging Chains  eval_parse_switches_210/5 into  External patterns of execution 
* [[37]] --> 1 


### Specialization of cost equations eval_parse_switches_bb88_in/5 
* CE 13 is refined into CE [48] 
* CE 14 is refined into CE [49] 


#### Refined cost equations eval_parse_switches_bb88_in/5 
* CE 48: eval_parse_switches_bb88_in(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) = 0+ eval_parse_switches_210(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B):1
     [] 
* CE 49: eval_parse_switches_bb88_in(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_parse_switches_bb88_in/5 
* CEs [48,49] --> Loop 38 

#### Loops of eval_parse_switches_bb88_in/5 
* Loop 38: eval_parse_switches_bb88_in(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) [] 

### Ranking functions of CR eval_parse_switches_bb88_in(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) 

#### Partial ranking functions of CR eval_parse_switches_bb88_in(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) 


### Resulting Chains:eval_parse_switches_bb88_in(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B) 
* [38]


### Merging Chains  eval_parse_switches_bb88_in/5 into  External patterns of execution 
* [[38]] --> 1 


### Specialization of cost equations loop_cont_eval_parse_switches_bb1_in/6 
* CE 12 is refined into CE [50] 
* CE 11 is refined into CE [51] 


#### Refined cost equations loop_cont_eval_parse_switches_bb1_in/6 
* CE 50: loop_cont_eval_parse_switches_bb1_in(F,A,B,C,D,E) = 0+ eval_parse_switches_bb88_in(A,B,C,D,E):1
     [F=3] 
* CE 51: loop_cont_eval_parse_switches_bb1_in(F,A,B,C,D,E) = 0
     [F=2] 

### Cost equations --> "Loop" of loop_cont_eval_parse_switches_bb1_in/6 
* CEs [50] --> Loop 39 
* CEs [51] --> Loop 40 

#### Loops of loop_cont_eval_parse_switches_bb1_in/6 
* Loop 39: loop_cont_eval_parse_switches_bb1_in(F,A,B,C,D,E) [F=3] 
* Loop 40: loop_cont_eval_parse_switches_bb1_in(F,A,B,C,D,E) [F=2] 

### Ranking functions of CR loop_cont_eval_parse_switches_bb1_in(F,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_parse_switches_bb1_in(F,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_parse_switches_bb1_in(F,A,B,C,D,E) 
* [40]
* [39]


### Merging Chains  loop_cont_eval_parse_switches_bb1_in/6 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


### Specialization of cost equations eval_parse_switches_bb0_in/4 
* CE 3 is refined into CE [52,53,54,55] 


#### Refined cost equations eval_parse_switches_bb0_in/4 
* CE 52: eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B) = 1+ eval_parse_switches_bb1_in(V_argc,C,D,E,F,G,H,C,D,I,J):1+ loop_cont_eval_parse_switches_bb1_in(K,C,D,I,J,B):1
     [V_argc>=2,K=2,H=2,G=1,F=100,E=0] 
* CE 53: eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B) = 1+ eval_parse_switches_bb1_in(V_argc,C,D,E,F,G,H,I,J,K,L):2+ loop_cont_eval_parse_switches_bb1_in(M,I,J,K,L,B):1
     [V_argc>=3,M=2,H=2,G=1,F=100,E=0] 
* CE 54: eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B) = 1+ eval_parse_switches_bb1_in(V_argc,C,D,E,F,G,H,C,D,I,J):3+ loop_cont_eval_parse_switches_bb1_in(K,C,D,L,M,B):2
     [1>=V_argc,M=100,L=0,K=3,J=100,I=0,H=3,G=1,F=100,E=0] 
* CE 55: eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B) = 1+ eval_parse_switches_bb1_in(V_argc,C,D,E,F,G,H,I,J,K,L):4+ loop_cont_eval_parse_switches_bb1_in(M,I,J,K,L,B):2
     [V_argc>=K+1,K>=0,V_argc>=2,M=3,H=3,G=1,F=100,E=0] 

### Cost equations --> "Loop" of eval_parse_switches_bb0_in/4 
* CEs [52,53,55] --> Loop 41 
* CEs [54] --> Loop 42 

#### Loops of eval_parse_switches_bb0_in/4 
* Loop 41: eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B) [V_argc>=2] 
* Loop 42: eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B) [1>=V_argc] 

### Ranking functions of CR eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B) 
* [42]
* [41]


### Merging Chains  eval_parse_switches_bb0_in/4 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_parse_switches_start/6 
* CE 2 is refined into CE [56,57] 


#### Refined cost equations eval_parse_switches_start/6 
* CE 56: eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B):1
     [1>=V_argc] 
* CE 57: eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B) = 0+ eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B):2
     [V_argc>=2] 

### Cost equations --> "Loop" of eval_parse_switches_start/6 
* CEs [57] --> Loop 43 
* CEs [56] --> Loop 44 

#### Loops of eval_parse_switches_start/6 
* Loop 43: eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B) [V_argc>=2] 
* Loop 44: eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B) [1>=V_argc] 

### Ranking functions of CR eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B) 

#### Partial ranking functions of CR eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B) 


### Resulting Chains:eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B) 
* [44]
* [43]


### Merging Chains  eval_parse_switches_start/6 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [22,23,24,25] 

 * loop 22:eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) -> [eval_parse_switches_bb1_in(V_argc',V__is_targa',V__parse_switches_printed_version',V_force_baseline_0',V_q_scale_factor_0',V_argn_0',B',C',D',E',F')] 
1
 * loop 23:eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) -> [eval_parse_switches_bb1_in(V_argc',V__is_targa',V__parse_switches_printed_version',V_force_baseline_0',V_q_scale_factor_0',V_argn_0',B',C',D',E',F')] 
1
 * loop 24:eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) -> [eval_parse_switches_bb1_in(V_argc',V__is_targa',V__parse_switches_printed_version',V_force_baseline_0',V_q_scale_factor_0',V_argn_0',B',C',D',E',F')] 
1
 * loop 25:eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) -> [eval_parse_switches_bb1_in(V_argc',V__is_targa',V__parse_switches_printed_version',V_force_baseline_0',V_q_scale_factor_0',V_argn_0',B',C',D',E',F')] 
1
#### Cost of phase [22,23,24,25]:eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) -> [eval_parse_switches_bb1_in(V_argc',V__is_targa',V__parse_switches_printed_version',V_force_baseline_0',V_q_scale_factor_0',V_argn_0',B',C',D',E',F')] 
2*it(22)+2*it(23)+0
  Such that:aux(1) =< V_argc-V_argn_0
aux(2) =< V_argc-V_argn_0-V_argc'+V_argn_0'
aux(3) =< V_argc/2-V_argn_0/2
aux(4) =< V_argc/2-V_argn_0/2-V_argc'/2+V_argn_0'/2
it(22) =< aux(1)
it(23) =< aux(1)
it(22) =< aux(2)
it(23) =< aux(2)
it(23) =< aux(3)
it(23) =< aux(4)

#### Cost of phase [22,23,24,25]:eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) -> [eval_parse_switches_bb1_in(V_argc',V__is_targa',V__parse_switches_printed_version',V_force_baseline_0',V_q_scale_factor_0',V_argn_0',B',C',D',E',F')] 
2*it(22)+2*it(23)+0
  Such that:aux(1) =< V_argc-V_argn_0
aux(2) =< V_argc-V_argn_0-V_argc'+V_argn_0'
aux(3) =< V_argc/2-V_argn_0/2
aux(4) =< V_argc/2-V_argn_0/2-V_argc'/2+V_argn_0'/2
it(22) =< aux(1)
it(23) =< aux(1)
it(22) =< aux(2)
it(23) =< aux(2)
it(23) =< aux(3)
it(23) =< aux(4)

#### Cost of phase [22,23,24,25]:eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F) -> [eval_parse_switches_bb1_in(V_argc',V__is_targa',V__parse_switches_printed_version',V_force_baseline_0',V_q_scale_factor_0',V_argn_0',B',C',D',E',F')] 
2*it(22)+2*it(23)+0
  Such that:aux(1) =< V_argc-V_argn_0
aux(2) =< V_argc-V_argn_0-V_argc'+V_argn_0'
aux(3) =< V_argc/2-V_argn_0/2
aux(4) =< V_argc/2-V_argn_0/2-V_argc'/2+V_argn_0'/2
it(22) =< aux(1)
it(23) =< aux(1)
it(22) =< aux(2)
it(23) =< aux(2)
it(23) =< aux(3)
it(23) =< aux(4)

#### Cost of chains of eval_parse_switches_bb1_in(V_argc,V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,V_argn_0,B,C,D,E,F):
* Chain [[22,23,24,25],28]: 2*it(22)+2*it(23)+0
  Such that:aux(5) =< V_argc-V_argn_0
aux(6) =< V_argc/2-V_argn_0/2
it(22) =< aux(5)
it(23) =< aux(5)
it(23) =< aux(6)

  with precondition: [B=2,V_force_baseline_0>=0,V_argn_0>=V_force_baseline_0+1,V_argc>=V_argn_0+2] 

* Chain [[22,23,24,25],27]: 2*it(22)+2*it(23)+0
  Such that:aux(1) =< V_argc-V_argn_0
aux(2) =< V_argc-V_argn_0+1
aux(3) =< V_argc/2-V_argn_0/2
aux(4) =< V_argc/2-V_argn_0/2+1/2
it(22) =< aux(1)
it(23) =< aux(1)
it(22) =< aux(2)
it(23) =< aux(2)
it(23) =< aux(3)
it(23) =< aux(4)

  with precondition: [B=3,V_force_baseline_0>=0,E>=0,V_argn_0>=V_force_baseline_0+1,V_argc>=V_argn_0+1,V_argc+V_force_baseline_0>=V_argn_0+E] 

* Chain [[22,23,24,25],26]: 2*it(22)+2*it(23)+0
  Such that:aux(7) =< V_argc-V_argn_0
aux(8) =< V_argc/2-V_argn_0/2
it(22) =< aux(7)
it(23) =< aux(7)
it(23) =< aux(8)

  with precondition: [B=3,V_force_baseline_0>=0,E>=0,V_argn_0>=V_force_baseline_0+1,V_argc>=V_argn_0+2,V_argc+V_force_baseline_0>=V_argn_0+E+1] 

* Chain [28]: 0
  with precondition: [B=2,C=V__is_targa,D=V__parse_switches_printed_version,V_force_baseline_0>=0,V_argn_0>=V_force_baseline_0+1,V_argc>=V_argn_0+1] 

* Chain [27]: 0
  with precondition: [B=3,C=V__is_targa,D=V__parse_switches_printed_version,F=V_q_scale_factor_0,V_force_baseline_0=E,V_force_baseline_0>=0,V_argn_0>=V_argc,V_argn_0>=V_force_baseline_0+1] 

* Chain [26]: 0
  with precondition: [B=3,C=V__is_targa,D=V__parse_switches_printed_version,F=V_q_scale_factor_0,V_force_baseline_0=E,V_force_baseline_0>=0,V_argn_0>=V_force_baseline_0+1,V_argc>=V_argn_0+1] 


#### Cost of chains of eval_parse_switches_226(V__is_targa,V__parse_switches_printed_version,B):
* Chain [29]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_switches_bb100_in(V__is_targa,V__parse_switches_printed_version,B):
* Chain [30]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_switches_bb98_in(V__is_targa,V__parse_switches_printed_version,B):
* Chain [31]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_switches_220(V__is_targa,V__parse_switches_printed_version,B):
* Chain [32]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_switches_bb95_in(V__is_targa,V__parse_switches_printed_version,B):
* Chain [33]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_switches_216(V__is_targa,V__parse_switches_printed_version,B):
* Chain [34]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_switches_bb92_in(V__is_targa,V__parse_switches_printed_version,B):
* Chain [35]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_switches_212(V__is_targa,V__parse_switches_printed_version,B):
* Chain [36]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_switches_210(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B):
* Chain [37]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_switches_bb88_in(V__is_targa,V__parse_switches_printed_version,V_force_baseline_0,V_q_scale_factor_0,B):
* Chain [38]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_parse_switches_bb1_in(F,A,B,C,D,E):
* Chain [40]: 0
  with precondition: [F=2] 

* Chain [39]: 0
  with precondition: [F=3] 


#### Cost of chains of eval_parse_switches_bb0_in(V_argc,V__is_targa,V__parse_switches_printed_version,B):
* Chain [42]: 1
  with precondition: [1>=V_argc] 

* Chain [41]: 6*s(13)+6*s(14)+1
  Such that:aux(13) =< V_argc
aux(14) =< V_argc/2
s(13) =< aux(13)
s(14) =< aux(13)
s(14) =< aux(14)

  with precondition: [V_argc>=2] 


#### Cost of chains of eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B):
* Chain [44]: 1
  with precondition: [1>=V_argc] 

* Chain [43]: 6*s(25)+6*s(26)+1
  Such that:s(23) =< V_argc
s(24) =< V_argc/2
s(25) =< s(23)
s(26) =< s(23)
s(26) =< s(24)

  with precondition: [V_argc>=2] 


Closed-form bounds of eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B): 
-------------------------------------
* Chain [44] with precondition: [1>=V_argc] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [43] with precondition: [V_argc>=2] 
    - Upper bound: 12*V_argc+1 
    - Complexity: n 

### Maximum cost of eval_parse_switches_start(V_argc,V_last_file_arg_seen,V_for_real,V__is_targa,V__parse_switches_printed_version,B): nat(V_argc)*12+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 1161 ms.
* Invariants computed in 57 ms.
   - Backward Invariants 32 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 82 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 71 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 26 ms.
   - Chain cost structures 23 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 2211 ms.

