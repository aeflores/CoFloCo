Warning: Ignored call to eval_shortsort_stop/1 in equation loop_cont_eval_shortsort_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_shortsort_3/3,eval_shortsort_4/3,eval_shortsort_bb2_in/3]
1. recursive  : [eval_shortsort_5/2,eval_shortsort_6/2,eval_shortsort_bb1_in/2,loop_cont_eval_shortsort_bb2_in/3]
2. non_recursive  : [loop_cont_eval_shortsort_bb1_in/2]
3. non_recursive  : [eval_shortsort_bb0_in/2]
4. non_recursive  : [eval_shortsort_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_shortsort_bb2_in/3
1. SCC is partially evaluated into eval_shortsort_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_shortsort_bb0_in/2
4. SCC is partially evaluated into eval_shortsort_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_shortsort_bb2_in/3 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_shortsort_bb2_in/3 
* CE 8: eval_shortsort_bb2_in(A,B,A) = 0
     [B=2] 
* CE 9: eval_shortsort_bb2_in(V_width,B,C) = 1+ eval_shortsort_bb2_in(V_width,D,C)
     [D=2,B=2] 

### Cost equations --> "Loop" of eval_shortsort_bb2_in/3 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_shortsort_bb2_in/3 
* Loop 7: eval_shortsort_bb2_in(V_width,B,C)->  eval_shortsort_bb2_in(V_width,B',C)
                  [B'=2,B=2] 
* Loop 8: eval_shortsort_bb2_in(A,B,A) [B=2] 

### Ranking functions of CR eval_shortsort_bb2_in(V_width,B,C) 

#### Partial ranking functions of CR eval_shortsort_bb2_in(V_width,B,C) 


### Resulting Chains:eval_shortsort_bb2_in(V_width,B,C) 
* [[7]]...
* [[7],8]
* [8]


### Merging Chains  eval_shortsort_bb2_in/3 into  External patterns of execution 
* [[8],[8,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_shortsort_bb1_in/2 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11,12] 


#### Refined cost equations eval_shortsort_bb1_in/2 
* CE 10: eval_shortsort_bb1_in(V_width,B) = 0
     [B=3] 
* CE 11: eval_shortsort_bb1_in(V_width,B) = 2+ eval_shortsort_bb2_in(V_width,C,V_width):1+ eval_shortsort_bb1_in(V_width,D)
     [D=3,C=2,B=3] 
* CE 12: eval_shortsort_bb1_in(V_width,B) = 2+ eval_shortsort_bb2_in(V_width,C,D):2
     [E=3,C=2,B=3] 

### Cost equations --> "Loop" of eval_shortsort_bb1_in/2 
* CEs [12] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [10] --> Loop 11 

#### Loops of eval_shortsort_bb1_in/2 
* Loop 9: eval_shortsort_bb1_in(V_width,B) [B=3] 
* Loop 10: eval_shortsort_bb1_in(V_width,B)->  eval_shortsort_bb1_in(V_width,B')
                  [B'=3,B=3] 
* Loop 11: eval_shortsort_bb1_in(V_width,B) [B=3] 

### Ranking functions of CR eval_shortsort_bb1_in(V_width,B) 

#### Partial ranking functions of CR eval_shortsort_bb1_in(V_width,B) 


### Resulting Chains:eval_shortsort_bb1_in(V_width,B) 
* [[10]]...
* [[10],11]
* [[10],9]...
* [11]
* [9]...


### Merging Chains  eval_shortsort_bb1_in/2 into  External patterns of execution 
* [[11],[11,[10]]] --> 1 
* [[9],[[10]],[9,[10]]] --> 2 


### Specialization of cost equations eval_shortsort_bb0_in/2 
* CE 3 is refined into CE [13,14] 


#### Refined cost equations eval_shortsort_bb0_in/2 
* CE 13: eval_shortsort_bb0_in(V_width,B) = 1+ eval_shortsort_bb1_in(V_width,C):1
     [C=3] 
* CE 14: eval_shortsort_bb0_in(V_width,B) = 1+ eval_shortsort_bb1_in(V_width,C):2
     [C=3] 

### Cost equations --> "Loop" of eval_shortsort_bb0_in/2 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of eval_shortsort_bb0_in/2 
* Loop 12: eval_shortsort_bb0_in(V_width,B) [] 
* Loop 13: eval_shortsort_bb0_in(V_width,B) [] 

### Ranking functions of CR eval_shortsort_bb0_in(V_width,B) 

#### Partial ranking functions of CR eval_shortsort_bb0_in(V_width,B) 


### Resulting Chains:eval_shortsort_bb0_in(V_width,B) 
* [13]
* [12]...


### Merging Chains  eval_shortsort_bb0_in/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_shortsort_start/2 
* CE 2 is refined into CE [15,16] 


#### Refined cost equations eval_shortsort_start/2 
* CE 15: eval_shortsort_start(V_width,B) = 0+ eval_shortsort_bb0_in(V_width,B):1
     [] 
* CE 16: eval_shortsort_start(V_width,B) = 0+ eval_shortsort_bb0_in(V_width,B):2
     [] 

### Cost equations --> "Loop" of eval_shortsort_start/2 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_shortsort_start/2 
* Loop 14: eval_shortsort_start(V_width,B) [] 
* Loop 15: eval_shortsort_start(V_width,B) [] 

### Ranking functions of CR eval_shortsort_start(V_width,B) 

#### Partial ranking functions of CR eval_shortsort_start(V_width,B) 


### Resulting Chains:eval_shortsort_start(V_width,B) 
* [15]
* [14]...


### Merging Chains  eval_shortsort_start/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_shortsort_bb2_in(V_width,B,C) -> [eval_shortsort_bb2_in(V_width',B',C')] 
1
#### Cost of phase [7]:eval_shortsort_bb2_in(V_width,B,C) -> [eval_shortsort_bb2_in(V_width',B',C')] 
1*it(7)+0
#### Cost of phase [7]:eval_shortsort_bb2_in(V_width,B,C) -> [eval_shortsort_bb2_in(V_width',B',C')] 
1*it(7)+0
#### Cost of chains of eval_shortsort_bb2_in(V_width,B,C):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [B=2] 

* Chain [[7],8]: 1*it(7)+0
  with precondition: [B=2,V_width=C] 

* Chain [8]: 0
  with precondition: [B=2,C=V_width] 


#### Cost of loops [10] 

 * loop 10:eval_shortsort_bb1_in(V_width,B) -> [eval_shortsort_bb1_in(V_width',B')] 
1*s(3)+2
#### Cost of phase [10]:eval_shortsort_bb1_in(V_width,B) -> [eval_shortsort_bb1_in(V_width',B')] 
3*it(10)+0
#### Cost of phase [10]:eval_shortsort_bb1_in(V_width,B) -> [eval_shortsort_bb1_in(V_width',B')] 
3*it(10)+0
#### Cost of phase [10]:eval_shortsort_bb1_in(V_width,B) -> [eval_shortsort_bb1_in(V_width',B')] 
3*it(10)+0
#### Cost of chains of eval_shortsort_bb1_in(V_width,B):
* Chain [[10]]...: 3*it(10)+0
  with precondition: [B=3] 

* Chain [[10],11]: 3*it(10)+0
  with precondition: [B=3] 

* Chain [[10],9]...: 4*it(10)+2
  with precondition: [B=3] 

* Chain [11]: 0
  with precondition: [B=3] 

* Chain [9]...: 1*s(5)+2
  with precondition: [B=3] 


#### Cost of chains of eval_shortsort_bb0_in(V_width,B):
* Chain [13]: 1*s(10)+1
  with precondition: [] 

* Chain [12]...: 1*s(11)+1
  with precondition: [] 


#### Cost of chains of eval_shortsort_start(V_width,B):
* Chain [15]: 1*s(12)+1
  with precondition: [] 

* Chain [14]...: 1*s(13)+1
  with precondition: [] 


Closed-form bounds of eval_shortsort_start(V_width,B): 
-------------------------------------
* Chain [15] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [14]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_shortsort_start(V_width,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 12 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 10 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 46 ms.

