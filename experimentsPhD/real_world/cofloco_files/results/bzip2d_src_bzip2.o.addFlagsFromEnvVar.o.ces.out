Warning: Ignored call to eval_addFlagsFromEnvVar_stop/1 in equation eval_addFlagsFromEnvVar_bb14_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_addFlagsFromEnvVar_bb4_in/1]
1. recursive  : [eval_addFlagsFromEnvVar_bb7_in/3]
2. recursive  : [eval_addFlagsFromEnvVar_bb11_in/7]
3. recursive  : [eval_addFlagsFromEnvVar_17/1,eval_addFlagsFromEnvVar_18/1,eval_addFlagsFromEnvVar_43/4,eval_addFlagsFromEnvVar_44/4,eval_addFlagsFromEnvVar__critedge_in/2,eval_addFlagsFromEnvVar_bb2_in/1,loop_cont_eval_addFlagsFromEnvVar_bb11_in/5,loop_cont_eval_addFlagsFromEnvVar_bb4_in/2,loop_cont_eval_addFlagsFromEnvVar_bb7_in/3]
4. non_recursive  : [eval_addFlagsFromEnvVar_bb14_in/1]
5. non_recursive  : [loop_cont_eval_addFlagsFromEnvVar_bb2_in/2]
6. non_recursive  : [eval_addFlagsFromEnvVar_3/1]
7. non_recursive  : [eval_addFlagsFromEnvVar_2/1]
8. non_recursive  : [eval_addFlagsFromEnvVar_1/1]
9. non_recursive  : [eval_addFlagsFromEnvVar_0/1]
10. non_recursive  : [eval_addFlagsFromEnvVar_bb0_in/1]
11. non_recursive  : [eval_addFlagsFromEnvVar_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_addFlagsFromEnvVar_bb4_in/1
1. SCC is partially evaluated into eval_addFlagsFromEnvVar_bb7_in/3
2. SCC is partially evaluated into eval_addFlagsFromEnvVar_bb11_in/7
3. SCC is partially evaluated into eval_addFlagsFromEnvVar_bb2_in/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_addFlagsFromEnvVar_3/1
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_addFlagsFromEnvVar_1/1
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_addFlagsFromEnvVar_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_addFlagsFromEnvVar_bb4_in/1 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 


#### Refined cost equations eval_addFlagsFromEnvVar_bb4_in/1 
* CE 16: eval_addFlagsFromEnvVar_bb4_in(B) = 0
     [B=2] 
* CE 17: eval_addFlagsFromEnvVar_bb4_in(B) = 1+ eval_addFlagsFromEnvVar_bb4_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_addFlagsFromEnvVar_bb4_in/1 
* CEs [17] --> Loop 12 
* CEs [16] --> Loop 13 

#### Loops of eval_addFlagsFromEnvVar_bb4_in/1 
* Loop 12: eval_addFlagsFromEnvVar_bb4_in(B)->  eval_addFlagsFromEnvVar_bb4_in(B')
                  [B'=2,B=2] 
* Loop 13: eval_addFlagsFromEnvVar_bb4_in(B) [B=2] 

### Ranking functions of CR eval_addFlagsFromEnvVar_bb4_in(B) 

#### Partial ranking functions of CR eval_addFlagsFromEnvVar_bb4_in(B) 


### Resulting Chains:eval_addFlagsFromEnvVar_bb4_in(B) 
* [[12]]...
* [[12],13]
* [13]


### Merging Chains  eval_addFlagsFromEnvVar_bb4_in/1 into  External patterns of execution 
* [[13],[13,[12]]] --> 1 
* [[[12]]] --> 2 


### Specialization of cost equations eval_addFlagsFromEnvVar_bb7_in/3 
* CE 13 is refined into CE [18] 
* CE 12 is refined into CE [19] 


#### Refined cost equations eval_addFlagsFromEnvVar_bb7_in/3 
* CE 18: eval_addFlagsFromEnvVar_bb7_in(A,B,A) = 0
     [A>=0,B=3] 
* CE 19: eval_addFlagsFromEnvVar_bb7_in(V_i_1,B,C) = 1+ eval_addFlagsFromEnvVar_bb7_in(D,E,C)
     [V_i_1>=0,V_i_1+1=D,E=3,B=3] 

### Cost equations --> "Loop" of eval_addFlagsFromEnvVar_bb7_in/3 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 

#### Loops of eval_addFlagsFromEnvVar_bb7_in/3 
* Loop 14: eval_addFlagsFromEnvVar_bb7_in(V_i_1,B,C)->  eval_addFlagsFromEnvVar_bb7_in(V_i_1',B',C)
                  [V_i_1>=0,V_i_1+1=V_i_1',B'=3,B=3] 
* Loop 15: eval_addFlagsFromEnvVar_bb7_in(A,B,A) [A>=0,B=3] 

### Ranking functions of CR eval_addFlagsFromEnvVar_bb7_in(V_i_1,B,C) 

#### Partial ranking functions of CR eval_addFlagsFromEnvVar_bb7_in(V_i_1,B,C) 


### Resulting Chains:eval_addFlagsFromEnvVar_bb7_in(V_i_1,B,C) 
* [[14]]...
* [[14],15]
* [15]


### Merging Chains  eval_addFlagsFromEnvVar_bb7_in/3 into  External patterns of execution 
* [[15]] --> 1 
* [[15,[14]]] --> 2 
* [[[14]]] --> 3 


### Specialization of cost equations eval_addFlagsFromEnvVar_bb11_in/7 
* CE 15 is refined into CE [20] 
* CE 14 is refined into CE [21] 


#### Refined cost equations eval_addFlagsFromEnvVar_bb11_in/7 
* CE 20: eval_addFlagsFromEnvVar_bb11_in(A,B,C,D,A,B,C) = 0
     [C>=B,C>=0,D=4] 
* CE 21: eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,V_j_0,B,C,D,E) = 1+ eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,F,G,C,D,E)
     [V__i_1>=V_j_0+1,V_j_0>=0,V_j_0+1=F,G=4,B=4] 

### Cost equations --> "Loop" of eval_addFlagsFromEnvVar_bb11_in/7 
* CEs [21] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of eval_addFlagsFromEnvVar_bb11_in/7 
* Loop 16: eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,V_j_0,B,C,D,E)->  eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,V_j_0',B',C,D,E)
                  [V__i_1>=V_j_0+1,V_j_0>=0,V_j_0+1=V_j_0',B'=4,B=4] 
* Loop 17: eval_addFlagsFromEnvVar_bb11_in(A,B,C,D,A,B,C) [C>=B,C>=0,D=4] 

### Ranking functions of CR eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,V_j_0,B,C,D,E) 
* RF of phase [16]: [V__i_1-V_j_0]

#### Partial ranking functions of CR eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,V_j_0,B,C,D,E) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V__i_1-V_j_0


### Resulting Chains:eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,V_j_0,B,C,D,E) 
* [[16],17]
* [17]


### Merging Chains  eval_addFlagsFromEnvVar_bb11_in/7 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[16]]] --> 2 


### Specialization of cost equations eval_addFlagsFromEnvVar_bb2_in/1 
* CE 9 is refined into CE [22] 
* CE 6 is refined into CE [23,24,25,26] 
* CE 7 is refined into CE [27,28,29,30] 
* CE 8 is refined into CE [31,32,33,34] 


#### Refined cost equations eval_addFlagsFromEnvVar_bb2_in/1 
* CE 22: eval_addFlagsFromEnvVar_bb2_in(B) = 0
     [B=5] 
* CE 23: eval_addFlagsFromEnvVar_bb2_in(B) = 3+ eval_addFlagsFromEnvVar_bb4_in(C):1+ eval_addFlagsFromEnvVar_bb7_in(D,E,F):1+ eval_addFlagsFromEnvVar_bb2_in(G)
     [G=5,F=0,E=3,D=0,C=2,B=5] 
* CE 24: eval_addFlagsFromEnvVar_bb2_in(B) = 3+ eval_addFlagsFromEnvVar_bb4_in(C):1+ eval_addFlagsFromEnvVar_bb7_in(D,E,F):2+ eval_addFlagsFromEnvVar_bb2_in(G)
     [F>=1,G=5,E=3,D=0,C=2,B=5] 
* CE 25: eval_addFlagsFromEnvVar_bb2_in(B) = 3+ eval_addFlagsFromEnvVar_bb4_in(C):1+ eval_addFlagsFromEnvVar_bb7_in(D,E,F):3
     [G=5,E=3,D=0,C=2,B=5] 
* CE 26: eval_addFlagsFromEnvVar_bb2_in(B) = 3+ eval_addFlagsFromEnvVar_bb4_in(C):2
     [D=5,E=3,F=0,C=2,B=5] 
* CE 27: eval_addFlagsFromEnvVar_bb2_in(B) = 4+ eval_addFlagsFromEnvVar_bb4_in(C):1+ eval_addFlagsFromEnvVar_bb7_in(D,E,F):1+ eval_addFlagsFromEnvVar_bb11_in(G,H,I,J,K,L,M):2+ eval_addFlagsFromEnvVar_bb2_in(N)
     [N=5,M=1024,L=1024,K=0,J=4,I=0,H=1024,G=0,F=0,E=3,D=0,C=2,B=5] 
* CE 28: eval_addFlagsFromEnvVar_bb2_in(B) = 4+ eval_addFlagsFromEnvVar_bb4_in(C):1+ eval_addFlagsFromEnvVar_bb7_in(D,E,F):2+ eval_addFlagsFromEnvVar_bb11_in(F,G,H,I,F,J,K):2+ eval_addFlagsFromEnvVar_bb2_in(L)
     [F>=1,L=5,K=1024,J=1024,I=4,H=0,G=1024,E=3,D=0,C=2,B=5] 
* CE 29: eval_addFlagsFromEnvVar_bb2_in(B) = 4+ eval_addFlagsFromEnvVar_bb4_in(C):1+ eval_addFlagsFromEnvVar_bb7_in(D,E,F):3
     [G=5,H=4,I=0,J=1024,E=3,D=0,C=2,B=5] 
* CE 30: eval_addFlagsFromEnvVar_bb2_in(B) = 4+ eval_addFlagsFromEnvVar_bb4_in(C):2
     [D=5,E=4,F=0,G=1024,H=3,I=0,C=2,B=5] 
* CE 31: eval_addFlagsFromEnvVar_bb2_in(B) = 4+ eval_addFlagsFromEnvVar_bb4_in(C):1+ eval_addFlagsFromEnvVar_bb7_in(D,E,F):1+ eval_addFlagsFromEnvVar_bb11_in(G,H,I,J,K,L,M):1+ eval_addFlagsFromEnvVar_bb2_in(N)
     [N=5,M=0,L=0,K=0,J=4,I=0,H=0,G=0,F=0,E=3,D=0,C=2,B=5] 
* CE 32: eval_addFlagsFromEnvVar_bb2_in(B) = 4+ eval_addFlagsFromEnvVar_bb4_in(C):1+ eval_addFlagsFromEnvVar_bb7_in(D,E,F):2+ eval_addFlagsFromEnvVar_bb11_in(F,F,G,H,F,F,F):2+ eval_addFlagsFromEnvVar_bb2_in(I)
     [F>=1,I=5,H=4,G=0,E=3,D=0,C=2,B=5] 
* CE 33: eval_addFlagsFromEnvVar_bb2_in(B) = 4+ eval_addFlagsFromEnvVar_bb4_in(C):1+ eval_addFlagsFromEnvVar_bb7_in(D,E,F):3
     [G=5,H=4,I=0,E=3,D=0,C=2,B=5] 
* CE 34: eval_addFlagsFromEnvVar_bb2_in(B) = 4+ eval_addFlagsFromEnvVar_bb4_in(C):2
     [D=5,E=4,F=0,G=3,H=0,C=2,B=5] 

### Cost equations --> "Loop" of eval_addFlagsFromEnvVar_bb2_in/1 
* CEs [25,26,29,30,33,34] --> Loop 18 
* CEs [23,24,27,28,31,32] --> Loop 19 
* CEs [22] --> Loop 20 

#### Loops of eval_addFlagsFromEnvVar_bb2_in/1 
* Loop 18: eval_addFlagsFromEnvVar_bb2_in(B) [B=5] 
* Loop 19: eval_addFlagsFromEnvVar_bb2_in(B)->  eval_addFlagsFromEnvVar_bb2_in(B')
                  [B'=5,B=5] 
* Loop 20: eval_addFlagsFromEnvVar_bb2_in(B) [B=5] 

### Ranking functions of CR eval_addFlagsFromEnvVar_bb2_in(B) 

#### Partial ranking functions of CR eval_addFlagsFromEnvVar_bb2_in(B) 


### Resulting Chains:eval_addFlagsFromEnvVar_bb2_in(B) 
* [[19]]...
* [[19],20]
* [[19],18]...
* [20]
* [18]...


### Merging Chains  eval_addFlagsFromEnvVar_bb2_in/1 into  External patterns of execution 
* [[20],[20,[19]]] --> 1 
* [[18],[[19]],[18,[19]]] --> 2 


### Specialization of cost equations eval_addFlagsFromEnvVar_3/1 
* CE 5 is refined into CE [35,36] 


#### Refined cost equations eval_addFlagsFromEnvVar_3/1 
* CE 35: eval_addFlagsFromEnvVar_3(B) = 1+ eval_addFlagsFromEnvVar_bb2_in(C):1
     [C=5] 
* CE 36: eval_addFlagsFromEnvVar_3(B) = 1+ eval_addFlagsFromEnvVar_bb2_in(C):2
     [C=5] 

### Cost equations --> "Loop" of eval_addFlagsFromEnvVar_3/1 
* CEs [36] --> Loop 21 
* CEs [35] --> Loop 22 

#### Loops of eval_addFlagsFromEnvVar_3/1 
* Loop 21: eval_addFlagsFromEnvVar_3(B) [] 
* Loop 22: eval_addFlagsFromEnvVar_3(B) [] 

### Ranking functions of CR eval_addFlagsFromEnvVar_3(B) 

#### Partial ranking functions of CR eval_addFlagsFromEnvVar_3(B) 


### Resulting Chains:eval_addFlagsFromEnvVar_3(B) 
* [22]
* [21]...


### Merging Chains  eval_addFlagsFromEnvVar_3/1 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_addFlagsFromEnvVar_1/1 
* CE 3 is refined into CE [37,38] 
* CE 4 is refined into CE [39] 


#### Refined cost equations eval_addFlagsFromEnvVar_1/1 
* CE 37: eval_addFlagsFromEnvVar_1(B) = 0+ eval_addFlagsFromEnvVar_3(B):1
     [] 
* CE 38: eval_addFlagsFromEnvVar_1(B) = 0+ eval_addFlagsFromEnvVar_3(B):2
     [] 
* CE 39: eval_addFlagsFromEnvVar_1(B) = 0
     [] 

### Cost equations --> "Loop" of eval_addFlagsFromEnvVar_1/1 
* CEs [37,39] --> Loop 23 
* CEs [38] --> Loop 24 

#### Loops of eval_addFlagsFromEnvVar_1/1 
* Loop 23: eval_addFlagsFromEnvVar_1(B) [] 
* Loop 24: eval_addFlagsFromEnvVar_1(B) [] 

### Ranking functions of CR eval_addFlagsFromEnvVar_1(B) 

#### Partial ranking functions of CR eval_addFlagsFromEnvVar_1(B) 


### Resulting Chains:eval_addFlagsFromEnvVar_1(B) 
* [24]...
* [23]


### Merging Chains  eval_addFlagsFromEnvVar_1/1 into  External patterns of execution 
* [[23]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_addFlagsFromEnvVar_start/1 
* CE 2 is refined into CE [40,41] 


#### Refined cost equations eval_addFlagsFromEnvVar_start/1 
* CE 40: eval_addFlagsFromEnvVar_start(B) = 0+ eval_addFlagsFromEnvVar_1(B):1
     [] 
* CE 41: eval_addFlagsFromEnvVar_start(B) = 0+ eval_addFlagsFromEnvVar_1(B):2
     [] 

### Cost equations --> "Loop" of eval_addFlagsFromEnvVar_start/1 
* CEs [41] --> Loop 25 
* CEs [40] --> Loop 26 

#### Loops of eval_addFlagsFromEnvVar_start/1 
* Loop 25: eval_addFlagsFromEnvVar_start(B) [] 
* Loop 26: eval_addFlagsFromEnvVar_start(B) [] 

### Ranking functions of CR eval_addFlagsFromEnvVar_start(B) 

#### Partial ranking functions of CR eval_addFlagsFromEnvVar_start(B) 


### Resulting Chains:eval_addFlagsFromEnvVar_start(B) 
* [26]
* [25]...


### Merging Chains  eval_addFlagsFromEnvVar_start/1 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_addFlagsFromEnvVar_bb4_in(B) -> [eval_addFlagsFromEnvVar_bb4_in(B')] 
1
#### Cost of phase [12]:eval_addFlagsFromEnvVar_bb4_in(B) -> [eval_addFlagsFromEnvVar_bb4_in(B')] 
1*it(12)+0
#### Cost of phase [12]:eval_addFlagsFromEnvVar_bb4_in(B) -> [eval_addFlagsFromEnvVar_bb4_in(B')] 
1*it(12)+0
#### Cost of chains of eval_addFlagsFromEnvVar_bb4_in(B):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [B=2] 

* Chain [[12],13]: 1*it(12)+0
  with precondition: [B=2] 

* Chain [13]: 0
  with precondition: [B=2] 


#### Cost of loops [14] 

 * loop 14:eval_addFlagsFromEnvVar_bb7_in(V_i_1,B,C) -> [eval_addFlagsFromEnvVar_bb7_in(V_i_1',B',C')] 
1
#### Cost of phase [14]:eval_addFlagsFromEnvVar_bb7_in(V_i_1,B,C) -> [eval_addFlagsFromEnvVar_bb7_in(V_i_1',B',C')] 
1*it(14)+0
#### Cost of phase [14]:eval_addFlagsFromEnvVar_bb7_in(V_i_1,B,C) -> [eval_addFlagsFromEnvVar_bb7_in(V_i_1',B',C')] 
1*it(14)+0
#### Cost of chains of eval_addFlagsFromEnvVar_bb7_in(V_i_1,B,C):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [V_i_1>=0,B=3] 

* Chain [[14],15]: 1*it(14)+0
  with precondition: [B=3,V_i_1>=0,C>=V_i_1+1] 

* Chain [15]: 0
  with precondition: [B=3,V_i_1=C,V_i_1>=0] 


#### Cost of loops [16] 

 * loop 16:eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,V_j_0,B,C,D,E) -> [eval_addFlagsFromEnvVar_bb11_in(V_i_1',V__i_1',V_j_0',B',C',D',E')] 
1
#### Cost of phase [16]:eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,V_j_0,B,C,D,E) -> [eval_addFlagsFromEnvVar_bb11_in(V_i_1',V__i_1',V_j_0',B',C',D',E')] 
1*it(16)+0
  Such that:it(16) =< V__i_1-V_j_0
it(16) =< V__i_1-V_j_0-V__i_1'+V_j_0'

#### Cost of chains of eval_addFlagsFromEnvVar_bb11_in(V_i_1,V__i_1,V_j_0,B,C,D,E):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< -V_j_0+D

  with precondition: [B=4,V_i_1=C,V__i_1=D,V__i_1=E,V_j_0>=0,V__i_1>=V_j_0+1] 

* Chain [17]: 0
  with precondition: [B=4,C=V_i_1,V__i_1=D,V_j_0=E,V_j_0>=0,V_j_0>=V__i_1] 


#### Cost of loops [19] 

 * loop 19:eval_addFlagsFromEnvVar_bb2_in(B) -> [eval_addFlagsFromEnvVar_bb2_in(B')] 
1*s(14)+0
#### Cost of phase [19]:eval_addFlagsFromEnvVar_bb2_in(B) -> [eval_addFlagsFromEnvVar_bb2_in(B')] 
1*s(15)+0
#### Cost of phase [19]:eval_addFlagsFromEnvVar_bb2_in(B) -> [eval_addFlagsFromEnvVar_bb2_in(B')] 
1*s(15)+0
#### Cost of phase [19]:eval_addFlagsFromEnvVar_bb2_in(B) -> [eval_addFlagsFromEnvVar_bb2_in(B')] 
1*s(15)+0
#### Cost of chains of eval_addFlagsFromEnvVar_bb2_in(B):
* Chain [[19]]...: 1*s(15)+0
  with precondition: [B=5] 

* Chain [[19],20]: 1*s(15)+0
  with precondition: [B=5] 

* Chain [[19],18]...: 2*aux(4)+0
  with precondition: [B=5] 

* Chain [20]: 0
  with precondition: [B=5] 

* Chain [18]...: 1*aux(4)+0
  with precondition: [B=5] 


#### Cost of chains of eval_addFlagsFromEnvVar_3(B):
* Chain [22]: 1*s(29)+1
  with precondition: [] 

* Chain [21]...: 1*s(30)+1
  with precondition: [] 


#### Cost of chains of eval_addFlagsFromEnvVar_1(B):
* Chain [24]...: 1*s(31)+1
  with precondition: [] 

* Chain [23]: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_addFlagsFromEnvVar_start(B):
* Chain [26]: 1*s(33)+0
  with precondition: [] 

* Chain [25]...: 1*s(34)+1
  with precondition: [] 


Closed-form bounds of eval_addFlagsFromEnvVar_start(B): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_addFlagsFromEnvVar_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 19 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 43 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 29 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 134 ms.

