Warning: Ignored call to eval_Gsm_Coder_stop/1 in equation eval_Gsm_Coder_30/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_Gsm_Coder_bb3_in/4,eval_Gsm_Coder_bb6_in/4]
1. recursive  : [eval_Gsm_Coder_6/2,eval_Gsm_Coder_7/2,eval_Gsm_Coder_8/2,eval_Gsm_Coder_bb1_in/2,loop_cont_eval_Gsm_Coder_bb3_in/3]
2. non_recursive  : [eval_Gsm_Coder_30/1]
3. non_recursive  : [eval_Gsm_Coder_29/1]
4. non_recursive  : [loop_cont_eval_Gsm_Coder_bb1_in/2]
5. non_recursive  : [eval_Gsm_Coder_3/1]
6. non_recursive  : [eval_Gsm_Coder_2/1]
7. non_recursive  : [eval_Gsm_Coder_1/1]
8. non_recursive  : [eval_Gsm_Coder_0/1]
9. non_recursive  : [eval_Gsm_Coder_bb0_in/1]
10. non_recursive  : [eval_Gsm_Coder_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_Gsm_Coder_bb3_in/4
1. SCC is partially evaluated into eval_Gsm_Coder_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_Gsm_Coder_3/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_Gsm_Coder_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_Gsm_Coder_bb3_in/4 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_Gsm_Coder_bb3_in/4 
* CE 8: eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C) = 0
     [V_i_0>=40,3>=V_k_0,V_k_0+1=C,B=2] 
* CE 9: eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C) = 1+ eval_Gsm_Coder_bb3_in(V_k_0,D,E,C)
     [V_i_0>=0,39>=V_i_0,3>=V_k_0,V_i_0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_Gsm_Coder_bb3_in/4 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_Gsm_Coder_bb3_in/4 
* Loop 7: eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C)->  eval_Gsm_Coder_bb3_in(V_k_0,V_i_0',B',C)
                  [V_i_0>=0,39>=V_i_0,3>=V_k_0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 8: eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C) [V_i_0>=40,3>=V_k_0,V_k_0+1=C,B=2] 

### Ranking functions of CR eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C) 
* RF of phase [7]: [-V_i_0+40]

#### Partial ranking functions of CR eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    -V_i_0+40


### Resulting Chains:eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C) 
* [[7],8]


### Merging Chains  eval_Gsm_Coder_bb3_in/4 into  External patterns of execution 
* [[8,[7]]] --> 1 


### Specialization of cost equations eval_Gsm_Coder_bb1_in/2 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 


#### Refined cost equations eval_Gsm_Coder_bb1_in/2 
* CE 10: eval_Gsm_Coder_bb1_in(V_k_0,B) = 0
     [V_k_0>=4,B=3] 
* CE 11: eval_Gsm_Coder_bb1_in(V_k_0,B) = 2+ eval_Gsm_Coder_bb3_in(C,D,E,F):1+ eval_Gsm_Coder_bb1_in(F,G)
     [4>=F,F=C+1,F=V_k_0+1,G=3,E=2,D=0,B=3] 

### Cost equations --> "Loop" of eval_Gsm_Coder_bb1_in/2 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_Gsm_Coder_bb1_in/2 
* Loop 9: eval_Gsm_Coder_bb1_in(V_k_0,B)->  eval_Gsm_Coder_bb1_in(V_k_0',B')
                  [3>=V_k_0,V_k_0+1=V_k_0',B'=3,B=3] 
* Loop 10: eval_Gsm_Coder_bb1_in(V_k_0,B) [V_k_0>=4,B=3] 

### Ranking functions of CR eval_Gsm_Coder_bb1_in(V_k_0,B) 
* RF of phase [9]: [-V_k_0+4]

#### Partial ranking functions of CR eval_Gsm_Coder_bb1_in(V_k_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V_k_0+4


### Resulting Chains:eval_Gsm_Coder_bb1_in(V_k_0,B) 
* [[9],10]


### Merging Chains  eval_Gsm_Coder_bb1_in/2 into  External patterns of execution 
* [[10,[9]]] --> 1 


### Specialization of cost equations eval_Gsm_Coder_3/1 
* CE 3 is refined into CE [12] 


#### Refined cost equations eval_Gsm_Coder_3/1 
* CE 12: eval_Gsm_Coder_3(B) = 1+ eval_Gsm_Coder_bb1_in(C,D):1
     [D=3,C=0] 

### Cost equations --> "Loop" of eval_Gsm_Coder_3/1 
* CEs [12] --> Loop 11 

#### Loops of eval_Gsm_Coder_3/1 
* Loop 11: eval_Gsm_Coder_3(B) [] 

### Ranking functions of CR eval_Gsm_Coder_3(B) 

#### Partial ranking functions of CR eval_Gsm_Coder_3(B) 


### Resulting Chains:eval_Gsm_Coder_3(B) 
* [11]


### Merging Chains  eval_Gsm_Coder_3/1 into  External patterns of execution 
* [[11]] --> 1 


### Specialization of cost equations eval_Gsm_Coder_start/1 
* CE 2 is refined into CE [13] 


#### Refined cost equations eval_Gsm_Coder_start/1 
* CE 13: eval_Gsm_Coder_start(B) = 0+ eval_Gsm_Coder_3(B):1
     [] 

### Cost equations --> "Loop" of eval_Gsm_Coder_start/1 
* CEs [13] --> Loop 12 

#### Loops of eval_Gsm_Coder_start/1 
* Loop 12: eval_Gsm_Coder_start(B) [] 

### Ranking functions of CR eval_Gsm_Coder_start(B) 

#### Partial ranking functions of CR eval_Gsm_Coder_start(B) 


### Resulting Chains:eval_Gsm_Coder_start(B) 
* [12]


### Merging Chains  eval_Gsm_Coder_start/1 into  External patterns of execution 
* [[12]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C) -> [eval_Gsm_Coder_bb3_in(V_k_0',V_i_0',B',C')] 
1
#### Cost of phase [7]:eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C) -> [eval_Gsm_Coder_bb3_in(V_k_0',V_i_0',B',C')] 
1*it(7)+0
  Such that:it(7) =< -V_i_0+40
it(7) =< -V_i_0+V_i_0'

#### Cost of chains of eval_Gsm_Coder_bb3_in(V_k_0,V_i_0,B,C):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V_i_0+40

  with precondition: [B=2,V_k_0+1=C,3>=V_k_0,39>=V_i_0,V_i_0>=0] 


#### Cost of loops [9] 

 * loop 9:eval_Gsm_Coder_bb1_in(V_k_0,B) -> [eval_Gsm_Coder_bb1_in(V_k_0',B')] 
1*s(2)+2
  Such that:s(2) =< 40

#### Cost of phase [9]:eval_Gsm_Coder_bb1_in(V_k_0,B) -> [eval_Gsm_Coder_bb1_in(V_k_0',B')] 
2*it(9)+1*s(3)+0
  Such that:aux(2) =< -V_k_0+4
aux(3) =< -V_k_0+V_k_0'
aux(1) =< aux(2)
it(9) =< aux(2)
aux(1) =< aux(3)
it(9) =< aux(3)
s(3) =< aux(1)*40

#### Cost of chains of eval_Gsm_Coder_bb1_in(V_k_0,B):
* Chain [[9],10]: 2*it(9)+1*s(3)+0
  Such that:aux(4) =< -V_k_0+4
it(9) =< aux(4)
s(3) =< aux(4)*40

  with precondition: [B=3,3>=V_k_0] 


#### Cost of chains of eval_Gsm_Coder_3(B):
* Chain [11]: 2*s(5)+1*s(6)+1
  Such that:s(4) =< 4
s(5) =< s(4)
s(6) =< s(4)*40

  with precondition: [] 


#### Cost of chains of eval_Gsm_Coder_start(B):
* Chain [12]: 2*s(8)+1*s(9)+1
  Such that:s(7) =< 4
s(8) =< s(7)
s(9) =< s(7)*40

  with precondition: [] 


Closed-form bounds of eval_Gsm_Coder_start(B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: 169 
    - Complexity: constant 

### Maximum cost of eval_Gsm_Coder_start(B): 169 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 23 ms.
* Invariants computed in 33 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 43 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 41 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 16 ms.
   - Chain cost structures 16 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 194 ms.

