WARNING: Excluded non-linear constraints:[255*D+A-C*F>=0,255*D+A-C*F+1=<C]
WARNING: Excluded non-linear constraints:[255*D+A-C*F>=0,255*D+A-C*F+1=< -C]
WARNING: Excluded non-linear constraints:[-255*D-A+C*F>=0,-255*D-A+C*F+1=<C]
WARNING: Excluded non-linear constraints:[-255*D-A+C*F>=0,-255*D-A+C*F+1=< -C]
Warning: Ignored call to eval_start_input_ppm_stop/1 in equation eval_start_input_ppm_bb27_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_input_ppm_bb25_in/5]
1. non_recursive  : [eval_start_input_ppm_bb27_in/1]
2. non_recursive  : [loop_cont_eval_start_input_ppm_bb25_in/2]
3. non_recursive  : [eval_start_input_ppm_87/2]
4. non_recursive  : [eval_start_input_ppm_86/2]
5. non_recursive  : [eval_start_input_ppm_bb23_in/2]
6. non_recursive  : [eval_start_input_ppm_80/2]
7. non_recursive  : [eval_start_input_ppm_79/2]
8. non_recursive  : [eval_start_input_ppm_bb20_in/2]
9. non_recursive  : [eval_start_input_ppm_71/2]
10. non_recursive  : [eval_start_input_ppm_70/2]
11. non_recursive  : [eval_start_input_ppm_bb18_in/2]
12. non_recursive  : [eval_start_input_ppm_23/2]
13. non_recursive  : [eval_start_input_ppm_22/2]
14. non_recursive  : [eval_start_input_ppm_31/2]
15. non_recursive  : [eval_start_input_ppm_30/2]
16. non_recursive  : [eval_start_input_ppm_39/2]
17. non_recursive  : [eval_start_input_ppm_38/2]
18. non_recursive  : [eval_start_input_ppm_52/2]
19. non_recursive  : [eval_start_input_ppm_51/2]
20. non_recursive  : [eval_start_input_ppm_61/2]
21. non_recursive  : [eval_start_input_ppm_60/2]
22. non_recursive  : [eval_start_input_ppm_NewDefault_in/2]
23. non_recursive  : [eval_start_input_ppm_bb4_in/2]
24. non_recursive  : [eval_start_input_ppm_12/2]
25. non_recursive  : [eval_start_input_ppm_11/2]
26. non_recursive  : [eval_start_input_ppm_9/2]
27. non_recursive  : [eval_start_input_ppm_8/1]
28. non_recursive  : [eval_start_input_ppm_7/1]
29. non_recursive  : [eval_start_input_ppm_6/1]
30. non_recursive  : [eval_start_input_ppm_5/1]
31. non_recursive  : [eval_start_input_ppm_bb2_in/1]
32. non_recursive  : [eval_start_input_ppm_4/1]
33. non_recursive  : [eval_start_input_ppm_3/1]
34. non_recursive  : [eval_start_input_ppm_1/1]
35. non_recursive  : [eval_start_input_ppm_0/1]
36. non_recursive  : [eval_start_input_ppm_bb0_in/1]
37. non_recursive  : [eval_start_input_ppm_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_input_ppm_bb25_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_start_input_ppm_87/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_start_input_ppm_bb23_in/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_start_input_ppm_bb20_in/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_start_input_ppm_bb18_in/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_start_input_ppm_bb4_in/2
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_start_input_ppm_9/2
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_start_input_ppm_1/1
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is partially evaluated into eval_start_input_ppm_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_input_ppm_bb25_in/5 
* CE 18 is refined into CE [19] 
* CE 13 is refined into CE [20] 
* CE 14 is refined into CE [21] 
* CE 16 is discarded (unfeasible) 
* CE 15 is discarded (unfeasible) 
* CE 17 is discarded (unfeasible) 


#### Refined cost equations eval_start_input_ppm_bb25_in/5 
* CE 19: eval_start_input_ppm_bb25_in(A,B,B,C,D) = 0
     [2*A+1>=B,C>=B+1,B+1>=2*A,C>=0,D=2] 
* CE 20: eval_start_input_ppm_bb25_in(A,B,B,C,D) = 1+ eval_start_input_ppm_bb25_in(E,B,B,F,G)
     [B>=0,1>=B,G=2,F=1,E=0,D=2,C=0,A=0] 
* CE 21: eval_start_input_ppm_bb25_in(A,B,B,C,D) = 1+ eval_start_input_ppm_bb25_in(A,B,B,E,F)
     [A+255*C>=1,B>=C,2*A+1>=B,B+1>=2*A,C>=0,B>=1,C+1=E,F=2,D=2] 

### Cost equations --> "Loop" of eval_start_input_ppm_bb25_in/5 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [19] --> Loop 19 

#### Loops of eval_start_input_ppm_bb25_in/5 
* Loop 17: eval_start_input_ppm_bb25_in(A,B,B,C,D)->  eval_start_input_ppm_bb25_in(A,B,B,A',B')
                  [A+255*C>=1,B>=C,2*A+1>=B,B+1>=2*A,C>=0,B>=1,C+1=A',B'=2,D=2] 
* Loop 18: eval_start_input_ppm_bb25_in(A,B,B,C,D)->  eval_start_input_ppm_bb25_in(A',B,B,B',C')
                  [B>=0,1>=B,C'=2,B'=1,A'=0,D=2,C=0,A=0] 
* Loop 19: eval_start_input_ppm_bb25_in(A,B,B,C,D) [2*A+1>=B,C>=B+1,B+1>=2*A,C>=0,D=2] 

### Ranking functions of CR eval_start_input_ppm_bb25_in(V_201,V_202,V_203,V_val_0,B) 
* RF of phase [17]: [2*V_201-V_val_0+2,V_202-V_val_0+1,V_203-V_val_0+1]

#### Partial ranking functions of CR eval_start_input_ppm_bb25_in(V_201,V_202,V_203,V_val_0,B) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    2*V_201-V_val_0+2
    V_202-V_val_0+1
    V_203-V_val_0+1


### Resulting Chains:eval_start_input_ppm_bb25_in(V_201,V_202,V_203,V_val_0,B) 
* [[17],19]
* [19]
* [18,[17],19]
* [18,19]


### Merging Chains  eval_start_input_ppm_bb25_in/5 into  External patterns of execution 
* [[19,18]] --> 1 
* [[19,[17],18]] --> 2 
* [[19]] --> 3 
* [[19,[17]]] --> 4 


### Specialization of cost equations eval_start_input_ppm_87/2 
* CE 11 is refined into CE [22,23] 
* CE 12 is refined into CE [24] 
* CE 10 is refined into CE [25] 


#### Refined cost equations eval_start_input_ppm_87/2 
* CE 22: eval_start_input_ppm_87(V_29,B) = 1+ eval_start_input_ppm_bb25_in(C,D,E,F,G):2
     [G=2,F=0,E=1,D=1,C=0,V_29=1] 
* CE 23: eval_start_input_ppm_87(V_29,B) = 1+ eval_start_input_ppm_bb25_in(C,V_29,V_29,D,E):4
     [2*C+1>=V_29,V_29>=2*C,C>=1,E=2,D=0] 
* CE 24: eval_start_input_ppm_87(V_29,B) = 1+ eval_start_input_ppm_bb25_in(C,V_29,V_29,D,E):3
     [2*C>=V_29,V_29+1>=2*C,0>=V_29+1,E=2,D=0] 
* CE 25: eval_start_input_ppm_87(V_29,B) = 1+ eval_start_input_ppm_bb25_in(C,D,E,F,G):1
     [G=2,F=0,E=0,D=0,C=0,V_29=0] 

### Cost equations --> "Loop" of eval_start_input_ppm_87/2 
* CEs [23] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [25] --> Loop 23 

#### Loops of eval_start_input_ppm_87/2 
* Loop 20: eval_start_input_ppm_87(V_29,B) [V_29>=2] 
* Loop 21: eval_start_input_ppm_87(V_29,B) [0>=V_29+1] 
* Loop 22: eval_start_input_ppm_87(V_29,B) [V_29=1] 
* Loop 23: eval_start_input_ppm_87(V_29,B) [V_29=0] 

### Ranking functions of CR eval_start_input_ppm_87(V_29,B) 

#### Partial ranking functions of CR eval_start_input_ppm_87(V_29,B) 


### Resulting Chains:eval_start_input_ppm_87(V_29,B) 
* [23]
* [22]
* [21]
* [20]


### Merging Chains  eval_start_input_ppm_87/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21]] --> 3 
* [[20]] --> 4 


### Specialization of cost equations eval_start_input_ppm_bb23_in/2 
* CE 8 is refined into CE [26,27,28,29] 
* CE 9 is refined into CE [30] 


#### Refined cost equations eval_start_input_ppm_bb23_in/2 
* CE 26: eval_start_input_ppm_bb23_in(V_29,B) = 0+ eval_start_input_ppm_87(C,B):1
     [C=0,V_29=0] 
* CE 27: eval_start_input_ppm_bb23_in(V_29,B) = 0+ eval_start_input_ppm_87(C,B):2
     [C=1,V_29=1] 
* CE 28: eval_start_input_ppm_bb23_in(V_29,B) = 0+ eval_start_input_ppm_87(V_29,B):3
     [0>=V_29+1] 
* CE 29: eval_start_input_ppm_bb23_in(V_29,B) = 0+ eval_start_input_ppm_87(V_29,B):4
     [V_29>=2] 
* CE 30: eval_start_input_ppm_bb23_in(V_29,B) = 0
     [] 

### Cost equations --> "Loop" of eval_start_input_ppm_bb23_in/2 
* CEs [26,27,28,29,30] --> Loop 24 

#### Loops of eval_start_input_ppm_bb23_in/2 
* Loop 24: eval_start_input_ppm_bb23_in(V_29,B) [] 

### Ranking functions of CR eval_start_input_ppm_bb23_in(V_29,B) 

#### Partial ranking functions of CR eval_start_input_ppm_bb23_in(V_29,B) 


### Resulting Chains:eval_start_input_ppm_bb23_in(V_29,B) 
* [24]


### Merging Chains  eval_start_input_ppm_bb23_in/2 into  External patterns of execution 
* [[24]] --> 1 


### Specialization of cost equations eval_start_input_ppm_bb20_in/2 
* CE 7 is refined into CE [31] 


#### Refined cost equations eval_start_input_ppm_bb20_in/2 
* CE 31: eval_start_input_ppm_bb20_in(V_29,B) = 0+ eval_start_input_ppm_bb23_in(V_29,B):1
     [] 

### Cost equations --> "Loop" of eval_start_input_ppm_bb20_in/2 
* CEs [31] --> Loop 25 

#### Loops of eval_start_input_ppm_bb20_in/2 
* Loop 25: eval_start_input_ppm_bb20_in(V_29,B) [] 

### Ranking functions of CR eval_start_input_ppm_bb20_in(V_29,B) 

#### Partial ranking functions of CR eval_start_input_ppm_bb20_in(V_29,B) 


### Resulting Chains:eval_start_input_ppm_bb20_in(V_29,B) 
* [25]


### Merging Chains  eval_start_input_ppm_bb20_in/2 into  External patterns of execution 
* [[25]] --> 1 


### Specialization of cost equations eval_start_input_ppm_bb18_in/2 
* CE 6 is refined into CE [32] 


#### Refined cost equations eval_start_input_ppm_bb18_in/2 
* CE 32: eval_start_input_ppm_bb18_in(V_29,B) = 0+ eval_start_input_ppm_bb20_in(V_29,B):1
     [] 

### Cost equations --> "Loop" of eval_start_input_ppm_bb18_in/2 
* CEs [32] --> Loop 26 

#### Loops of eval_start_input_ppm_bb18_in/2 
* Loop 26: eval_start_input_ppm_bb18_in(V_29,B) [] 

### Ranking functions of CR eval_start_input_ppm_bb18_in(V_29,B) 

#### Partial ranking functions of CR eval_start_input_ppm_bb18_in(V_29,B) 


### Resulting Chains:eval_start_input_ppm_bb18_in(V_29,B) 
* [26]


### Merging Chains  eval_start_input_ppm_bb18_in/2 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations eval_start_input_ppm_bb4_in/2 
* CE 5 is refined into CE [33] 


#### Refined cost equations eval_start_input_ppm_bb4_in/2 
* CE 33: eval_start_input_ppm_bb4_in(V_29,B) = 0+ eval_start_input_ppm_bb18_in(V_29,B):1
     [] 

### Cost equations --> "Loop" of eval_start_input_ppm_bb4_in/2 
* CEs [33] --> Loop 27 

#### Loops of eval_start_input_ppm_bb4_in/2 
* Loop 27: eval_start_input_ppm_bb4_in(V_29,B) [] 

### Ranking functions of CR eval_start_input_ppm_bb4_in(V_29,B) 

#### Partial ranking functions of CR eval_start_input_ppm_bb4_in(V_29,B) 


### Resulting Chains:eval_start_input_ppm_bb4_in(V_29,B) 
* [27]


### Merging Chains  eval_start_input_ppm_bb4_in/2 into  External patterns of execution 
* [[27]] --> 1 


### Specialization of cost equations eval_start_input_ppm_9/2 
* CE 4 is refined into CE [34] 


#### Refined cost equations eval_start_input_ppm_9/2 
* CE 34: eval_start_input_ppm_9(V_29,B) = 0+ eval_start_input_ppm_bb4_in(V_29,B):1
     [] 

### Cost equations --> "Loop" of eval_start_input_ppm_9/2 
* CEs [34] --> Loop 28 

#### Loops of eval_start_input_ppm_9/2 
* Loop 28: eval_start_input_ppm_9(V_29,B) [] 

### Ranking functions of CR eval_start_input_ppm_9(V_29,B) 

#### Partial ranking functions of CR eval_start_input_ppm_9(V_29,B) 


### Resulting Chains:eval_start_input_ppm_9(V_29,B) 
* [28]


### Merging Chains  eval_start_input_ppm_9/2 into  External patterns of execution 
* [[28]] --> 1 


### Specialization of cost equations eval_start_input_ppm_1/1 
* CE 3 is refined into CE [35] 


#### Refined cost equations eval_start_input_ppm_1/1 
* CE 35: eval_start_input_ppm_1(B) = 0+ eval_start_input_ppm_9(C,B):1
     [] 

### Cost equations --> "Loop" of eval_start_input_ppm_1/1 
* CEs [35] --> Loop 29 

#### Loops of eval_start_input_ppm_1/1 
* Loop 29: eval_start_input_ppm_1(B) [] 

### Ranking functions of CR eval_start_input_ppm_1(B) 

#### Partial ranking functions of CR eval_start_input_ppm_1(B) 


### Resulting Chains:eval_start_input_ppm_1(B) 
* [29]


### Merging Chains  eval_start_input_ppm_1/1 into  External patterns of execution 
* [[29]] --> 1 


### Specialization of cost equations eval_start_input_ppm_start/1 
* CE 2 is refined into CE [36] 


#### Refined cost equations eval_start_input_ppm_start/1 
* CE 36: eval_start_input_ppm_start(B) = 0+ eval_start_input_ppm_1(B):1
     [] 

### Cost equations --> "Loop" of eval_start_input_ppm_start/1 
* CEs [36] --> Loop 30 

#### Loops of eval_start_input_ppm_start/1 
* Loop 30: eval_start_input_ppm_start(B) [] 

### Ranking functions of CR eval_start_input_ppm_start(B) 

#### Partial ranking functions of CR eval_start_input_ppm_start(B) 


### Resulting Chains:eval_start_input_ppm_start(B) 
* [30]


### Merging Chains  eval_start_input_ppm_start/1 into  External patterns of execution 
* [[30]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:eval_start_input_ppm_bb25_in(V_201,V_202,V_203,V_val_0,B) -> [eval_start_input_ppm_bb25_in(V_201',V_202',V_203',V_val_0',B')] 
1
#### Cost of phase [17]:eval_start_input_ppm_bb25_in(V_201,V_202,V_203,V_val_0,B) -> [eval_start_input_ppm_bb25_in(V_201',V_202',V_203',V_val_0',B')] 
1*it(17)+0
  Such that:it(17) =< 2*V_201-V_val_0+2
it(17) =< 2*V_201-V_val_0-2*V_201'+V_val_0'
it(17) =< V_202-V_val_0+1
it(17) =< V_202-V_val_0-V_202'+V_val_0'
it(17) =< V_203-V_val_0+1
it(17) =< V_203-V_val_0-V_203'+V_val_0'

#### Cost of chains of eval_start_input_ppm_bb25_in(V_201,V_202,V_203,V_val_0,B):
* Chain [[17],19]: 1*it(17)+0
  Such that:it(17) =< V_203-V_val_0+1

  with precondition: [B=2,V_202=V_203,V_202>=1,V_val_0>=0,V_202+1>=2*V_201,2*V_201+1>=V_202,V_202>=V_val_0,V_201+255*V_val_0>=1,V_201+V_val_0+254*V_202>=255] 

* Chain [19]: 0
  with precondition: [B=2,V_203=V_202,V_val_0>=0,V_203+1>=2*V_201,V_val_0>=V_203+1,2*V_201+1>=V_203] 

* Chain [18,[17],19]: 1*it(17)+1
  Such that:it(17) =< 1

  with precondition: [V_201=0,V_202=1,V_203=1,V_val_0=0,B=2] 

* Chain [18,19]: 1
  with precondition: [V_201=0,V_202=0,V_203=0,V_val_0=0,B=2] 


#### Cost of chains of eval_start_input_ppm_87(V_29,B):
* Chain [23]: 2
  with precondition: [V_29=0] 

* Chain [22]: 1*s(1)+2
  Such that:s(1) =< 1

  with precondition: [V_29=1] 

* Chain [21]: 1
  with precondition: [0>=V_29+1] 

* Chain [20]: 1*s(2)+1
  Such that:s(2) =< V_29+1

  with precondition: [V_29>=2] 


#### Cost of chains of eval_start_input_ppm_bb23_in(V_29,B):
* Chain [24]: 1*s(3)+1*s(4)+2
  Such that:s(3) =< 1
s(4) =< V_29+1

  with precondition: [] 


#### Cost of chains of eval_start_input_ppm_bb20_in(V_29,B):
* Chain [25]: 1*s(5)+1*s(6)+2
  Such that:s(5) =< 1
s(6) =< V_29+1

  with precondition: [] 


#### Cost of chains of eval_start_input_ppm_bb18_in(V_29,B):
* Chain [26]: 1*s(7)+1*s(8)+2
  Such that:s(7) =< 1
s(8) =< V_29+1

  with precondition: [] 


#### Cost of chains of eval_start_input_ppm_bb4_in(V_29,B):
* Chain [27]: 1*s(9)+1*s(10)+2
  Such that:s(9) =< 1
s(10) =< V_29+1

  with precondition: [] 


#### Cost of chains of eval_start_input_ppm_9(V_29,B):
* Chain [28]: 1*s(11)+1*s(12)+2
  Such that:s(11) =< 1
s(12) =< V_29+1

  with precondition: [] 


#### Cost of chains of eval_start_input_ppm_1(B):
* Chain [29]: 1*s(13)+1*s(14)+2
  Such that:s(13) =< 1

  with precondition: [] 


#### Cost of chains of eval_start_input_ppm_start(B):
* Chain [30]: 1*s(15)+1*s(16)+2
  Such that:s(15) =< 1

  with precondition: [] 


Closed-form bounds of eval_start_input_ppm_start(B): 
-------------------------------------
* Chain [30] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_start_input_ppm_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 84 ms.
* Invariants computed in 81 ms.
   - Backward Invariants 33 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 156 ms.
* Termination proved in 22 ms.
* Upper bounds computed in 96 ms.
   - Equation cost structures 34 ms.
   - Phase cost structures 16 ms.
   - Chain cost structures 27 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 590 ms.

