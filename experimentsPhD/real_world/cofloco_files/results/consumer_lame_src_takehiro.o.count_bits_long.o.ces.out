Warning: Ignored call to eval_count_bits_long_stop/1 in equation eval_count_bits_long_bb30_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_count_bits_long_bb1_in/3]
1. recursive  : [eval_count_bits_long_bb11_in/3,eval_count_bits_long_bb13_in/3,eval_count_bits_long_bb5_in/3,eval_count_bits_long_bb9_in/3]
2. recursive  : [eval_count_bits_long_bb20_in/3]
3. non_recursive  : [eval_count_bits_long_bb30_in/1]
4. non_recursive  : [eval_count_bits_long_140/1]
5. non_recursive  : [eval_count_bits_long_139/1]
6. non_recursive  : [eval_count_bits_long_136/1]
7. non_recursive  : [eval_count_bits_long_135/1]
8. non_recursive  : [eval_count_bits_long_bb29_in/1]
9. recursive  : [eval_count_bits_long_bb22_in/3]
10. recursive  : [eval_count_bits_long_bb25_in/2]
11. non_recursive  : [eval_count_bits_long_127/1]
12. non_recursive  : [eval_count_bits_long_126/1]
13. non_recursive  : [loop_cont_eval_count_bits_long_bb25_in/2]
14. non_recursive  : [loop_cont_eval_count_bits_long_bb22_in/3]
15. non_recursive  : [loop_cont_eval_count_bits_long_bb20_in/3]
16. non_recursive  : [eval_count_bits_long_bb17_in/2]
17. non_recursive  : [eval_count_bits_long_bb14_in/2]
18. non_recursive  : [loop_cont_eval_count_bits_long_bb5_in/3]
19. non_recursive  : [eval_count_bits_long_bb4_in/2]
20. non_recursive  : [loop_cont_eval_count_bits_long_bb1_in/3]
21. non_recursive  : [eval_count_bits_long_bb0_in/1]
22. non_recursive  : [eval_count_bits_long_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_count_bits_long_bb1_in/3
1. SCC is partially evaluated into eval_count_bits_long_bb5_in/3
2. SCC is partially evaluated into eval_count_bits_long_bb20_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_count_bits_long_bb22_in/3
10. SCC is partially evaluated into eval_count_bits_long_bb25_in/2
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into loop_cont_eval_count_bits_long_bb22_in/3
15. SCC is partially evaluated into loop_cont_eval_count_bits_long_bb20_in/3
16. SCC is partially evaluated into eval_count_bits_long_bb17_in/2
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_count_bits_long_bb4_in/2
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_count_bits_long_bb0_in/1
22. SCC is partially evaluated into eval_count_bits_long_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_count_bits_long_bb1_in/3 
* CE 4 is refined into CE [21] 
* CE 6 is refined into CE [22] 
* CE 5 is refined into CE [23] 


#### Refined cost equations eval_count_bits_long_bb1_in/3 
* CE 21: eval_count_bits_long_bb1_in(A,B,A) = 0
     [A>=2,576>=A,B=6] 
* CE 22: eval_count_bits_long_bb1_in(A,B,A) = 0
     [1>=A,B=6] 
* CE 23: eval_count_bits_long_bb1_in(V_i_0,B,C) = 1+ eval_count_bits_long_bb1_in(D,E,C)
     [V_i_0>=2,576>=V_i_0,V_i_0=D+2,E=6,B=6] 

### Cost equations --> "Loop" of eval_count_bits_long_bb1_in/3 
* CEs [23] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [21] --> Loop 21 

#### Loops of eval_count_bits_long_bb1_in/3 
* Loop 19: eval_count_bits_long_bb1_in(V_i_0,B,C)->  eval_count_bits_long_bb1_in(V_i_0',B',C)
                  [V_i_0>=2,576>=V_i_0,V_i_0=V_i_0'+2,B'=6,B=6] 
* Loop 20: eval_count_bits_long_bb1_in(A,B,A) [1>=A,B=6] 
* Loop 21: eval_count_bits_long_bb1_in(A,B,A) [A>=2,576>=A,B=6] 

### Ranking functions of CR eval_count_bits_long_bb1_in(V_i_0,B,C) 
* RF of phase [19]: [V_i_0-1]

#### Partial ranking functions of CR eval_count_bits_long_bb1_in(V_i_0,B,C) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V_i_0-1


### Resulting Chains:eval_count_bits_long_bb1_in(V_i_0,B,C) 
* [[19],21]
* [[19],20]
* [21]


### Merging Chains  eval_count_bits_long_bb1_in/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20,[19]]] --> 2 
* [[21,[19]]] --> 3 


### Specialization of cost equations eval_count_bits_long_bb5_in/3 
* CE 9 is refined into CE [24] 
* CE 10 is refined into CE [25] 
* CE 8 is refined into CE [26] 


#### Refined cost equations eval_count_bits_long_bb5_in/3 
* CE 24: eval_count_bits_long_bb5_in(A,B,A) = 0
     [A>=4,B=2] 
* CE 25: eval_count_bits_long_bb5_in(A,B,A) = 0
     [3>=A,B=2] 
* CE 26: eval_count_bits_long_bb5_in(V_i_1,B,C) = 1+ eval_count_bits_long_bb5_in(D,E,C)
     [V_i_1>=4,V_i_1=D+4,E=2,B=2] 

### Cost equations --> "Loop" of eval_count_bits_long_bb5_in/3 
* CEs [26] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [25] --> Loop 24 

#### Loops of eval_count_bits_long_bb5_in/3 
* Loop 22: eval_count_bits_long_bb5_in(V_i_1,B,C)->  eval_count_bits_long_bb5_in(V_i_1',B',C)
                  [V_i_1>=4,V_i_1=V_i_1'+4,B'=2,B=2] 
* Loop 23: eval_count_bits_long_bb5_in(A,B,A) [A>=4,B=2] 
* Loop 24: eval_count_bits_long_bb5_in(A,B,A) [3>=A,B=2] 

### Ranking functions of CR eval_count_bits_long_bb5_in(V_i_1,B,C) 
* RF of phase [22]: [V_i_1-3]

#### Partial ranking functions of CR eval_count_bits_long_bb5_in(V_i_1,B,C) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V_i_1-3


### Resulting Chains:eval_count_bits_long_bb5_in(V_i_1,B,C) 
* [[22],24]
* [[22],23]
* [24]
* [23]


### Merging Chains  eval_count_bits_long_bb5_in/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[24,[22]]] --> 3 
* [[23,[22]]] --> 4 


### Specialization of cost equations eval_count_bits_long_bb20_in/3 
* CE 14 is refined into CE [27] 
* CE 13 is refined into CE [28] 


#### Refined cost equations eval_count_bits_long_bb20_in/3 
* CE 27: eval_count_bits_long_bb20_in(A,B,A) = 0
     [B=5] 
* CE 28: eval_count_bits_long_bb20_in(V_i_1,B,C) = 1+ eval_count_bits_long_bb20_in(V_i_1,B,C)
     [] 

### Cost equations --> "Loop" of eval_count_bits_long_bb20_in/3 
* CEs [28] --> Loop 25 
* CEs [27] --> Loop 26 

#### Loops of eval_count_bits_long_bb20_in/3 
* Loop 25: eval_count_bits_long_bb20_in(V_i_1,B,C)->  eval_count_bits_long_bb20_in(V_i_1,B,C)
                  [] 
* Loop 26: eval_count_bits_long_bb20_in(A,B,A) [B=5] 

### Ranking functions of CR eval_count_bits_long_bb20_in(V_i_1,B,C) 

#### Partial ranking functions of CR eval_count_bits_long_bb20_in(V_i_1,B,C) 


### Resulting Chains:eval_count_bits_long_bb20_in(V_i_1,B,C) 
* [[25]]...
* [[25],26]
* [26]


### Merging Chains  eval_count_bits_long_bb20_in/3 into  External patterns of execution 
* [[26],[26,[25]]] --> 1 
* [[[25]]] --> 2 


### Specialization of cost equations eval_count_bits_long_bb22_in/3 
* CE 17 is refined into CE [29] 
* CE 16 is refined into CE [30] 


#### Refined cost equations eval_count_bits_long_bb22_in/3 
* CE 29: eval_count_bits_long_bb22_in(A,B,A) = 0
     [B=4] 
* CE 30: eval_count_bits_long_bb22_in(V_i_1,B,C) = 1+ eval_count_bits_long_bb22_in(V_i_1,B,C)
     [] 

### Cost equations --> "Loop" of eval_count_bits_long_bb22_in/3 
* CEs [30] --> Loop 27 
* CEs [29] --> Loop 28 

#### Loops of eval_count_bits_long_bb22_in/3 
* Loop 27: eval_count_bits_long_bb22_in(V_i_1,B,C)->  eval_count_bits_long_bb22_in(V_i_1,B,C)
                  [] 
* Loop 28: eval_count_bits_long_bb22_in(A,B,A) [B=4] 

### Ranking functions of CR eval_count_bits_long_bb22_in(V_i_1,B,C) 

#### Partial ranking functions of CR eval_count_bits_long_bb22_in(V_i_1,B,C) 


### Resulting Chains:eval_count_bits_long_bb22_in(V_i_1,B,C) 
* [[27]]...
* [[27],28]
* [28]


### Merging Chains  eval_count_bits_long_bb22_in/3 into  External patterns of execution 
* [[28],[28,[27]]] --> 1 
* [[[27]]] --> 2 


### Specialization of cost equations eval_count_bits_long_bb25_in/2 
* CE 20 is refined into CE [31] 
* CE 19 is refined into CE [32] 


#### Refined cost equations eval_count_bits_long_bb25_in/2 
* CE 31: eval_count_bits_long_bb25_in(V_i_1,B) = 0
     [B=3] 
* CE 32: eval_count_bits_long_bb25_in(V_i_1,B) = 1+ eval_count_bits_long_bb25_in(V_i_1,C)
     [C=3,B=3] 

### Cost equations --> "Loop" of eval_count_bits_long_bb25_in/2 
* CEs [32] --> Loop 29 
* CEs [31] --> Loop 30 

#### Loops of eval_count_bits_long_bb25_in/2 
* Loop 29: eval_count_bits_long_bb25_in(V_i_1,B)->  eval_count_bits_long_bb25_in(V_i_1,B')
                  [B'=3,B=3] 
* Loop 30: eval_count_bits_long_bb25_in(V_i_1,B) [B=3] 

### Ranking functions of CR eval_count_bits_long_bb25_in(V_i_1,B) 

#### Partial ranking functions of CR eval_count_bits_long_bb25_in(V_i_1,B) 


### Resulting Chains:eval_count_bits_long_bb25_in(V_i_1,B) 
* [[29]]...
* [[29],30]
* [30]


### Merging Chains  eval_count_bits_long_bb25_in/2 into  External patterns of execution 
* [[30],[30,[29]]] --> 1 
* [[[29]]] --> 2 


### Specialization of cost equations loop_cont_eval_count_bits_long_bb22_in/3 
* CE 18 is refined into CE [33,34] 


#### Refined cost equations loop_cont_eval_count_bits_long_bb22_in/3 
* CE 33: loop_cont_eval_count_bits_long_bb22_in(D,A,B) = 1+ eval_count_bits_long_bb25_in(A,E):1
     [E=3,D=4] 
* CE 34: loop_cont_eval_count_bits_long_bb22_in(D,A,B) = 1+ eval_count_bits_long_bb25_in(A,E):2
     [E=3,D=4] 

### Cost equations --> "Loop" of loop_cont_eval_count_bits_long_bb22_in/3 
* CEs [34] --> Loop 31 
* CEs [33] --> Loop 32 

#### Loops of loop_cont_eval_count_bits_long_bb22_in/3 
* Loop 31: loop_cont_eval_count_bits_long_bb22_in(D,A,B) [D=4] 
* Loop 32: loop_cont_eval_count_bits_long_bb22_in(D,A,B) [D=4] 

### Ranking functions of CR loop_cont_eval_count_bits_long_bb22_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_count_bits_long_bb22_in(D,A,B) 


### Resulting Chains:loop_cont_eval_count_bits_long_bb22_in(D,A,B) 
* [32]
* [31]...


### Merging Chains  loop_cont_eval_count_bits_long_bb22_in/3 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations loop_cont_eval_count_bits_long_bb20_in/3 
* CE 15 is refined into CE [35,36,37] 


#### Refined cost equations loop_cont_eval_count_bits_long_bb20_in/3 
* CE 35: loop_cont_eval_count_bits_long_bb20_in(E,A,B) = 1+ eval_count_bits_long_bb22_in(A,F,A):1+ loop_cont_eval_count_bits_long_bb22_in(G,A,B):1
     [G=4,F=4,E=5] 
* CE 36: loop_cont_eval_count_bits_long_bb20_in(E,A,B) = 1+ eval_count_bits_long_bb22_in(A,F,A):1+ loop_cont_eval_count_bits_long_bb22_in(G,A,B):2
     [G=4,F=4,E=5] 
* CE 37: loop_cont_eval_count_bits_long_bb20_in(E,A,B) = 1+ eval_count_bits_long_bb22_in(A,F,G):2
     [E=5] 

### Cost equations --> "Loop" of loop_cont_eval_count_bits_long_bb20_in/3 
* CEs [36,37] --> Loop 33 
* CEs [35] --> Loop 34 

#### Loops of loop_cont_eval_count_bits_long_bb20_in/3 
* Loop 33: loop_cont_eval_count_bits_long_bb20_in(E,A,B) [E=5] 
* Loop 34: loop_cont_eval_count_bits_long_bb20_in(E,A,B) [E=5] 

### Ranking functions of CR loop_cont_eval_count_bits_long_bb20_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_count_bits_long_bb20_in(E,A,B) 


### Resulting Chains:loop_cont_eval_count_bits_long_bb20_in(E,A,B) 
* [34]
* [33]...


### Merging Chains  loop_cont_eval_count_bits_long_bb20_in/3 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_count_bits_long_bb17_in/2 
* CE 11 is refined into CE [38] 
* CE 12 is refined into CE [39,40,41] 


#### Refined cost equations eval_count_bits_long_bb17_in/2 
* CE 38: eval_count_bits_long_bb17_in(V_i_1,B) = 0
     [] 
* CE 39: eval_count_bits_long_bb17_in(V_i_1,B) = 1+ eval_count_bits_long_bb20_in(V_i_1,C,V_i_1):1+ loop_cont_eval_count_bits_long_bb20_in(D,V_i_1,B):1
     [D=5,C=5] 
* CE 40: eval_count_bits_long_bb17_in(V_i_1,B) = 1+ eval_count_bits_long_bb20_in(V_i_1,C,V_i_1):1+ loop_cont_eval_count_bits_long_bb20_in(D,V_i_1,B):2
     [D=5,C=5] 
* CE 41: eval_count_bits_long_bb17_in(V_i_1,B) = 1+ eval_count_bits_long_bb20_in(V_i_1,C,D):2
     [] 

### Cost equations --> "Loop" of eval_count_bits_long_bb17_in/2 
* CEs [40,41] --> Loop 35 
* CEs [38,39] --> Loop 36 

#### Loops of eval_count_bits_long_bb17_in/2 
* Loop 35: eval_count_bits_long_bb17_in(V_i_1,B) [] 
* Loop 36: eval_count_bits_long_bb17_in(V_i_1,B) [] 

### Ranking functions of CR eval_count_bits_long_bb17_in(V_i_1,B) 

#### Partial ranking functions of CR eval_count_bits_long_bb17_in(V_i_1,B) 


### Resulting Chains:eval_count_bits_long_bb17_in(V_i_1,B) 
* [36]
* [35]...


### Merging Chains  eval_count_bits_long_bb17_in/2 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


### Specialization of cost equations eval_count_bits_long_bb4_in/2 
* CE 7 is refined into CE [42,43,44,45,46,47,48,49] 


#### Refined cost equations eval_count_bits_long_bb4_in/2 
* CE 42: eval_count_bits_long_bb4_in(V_i_0,B) = 1+ eval_count_bits_long_bb5_in(V_i_0,C,V_i_0):1+ eval_count_bits_long_bb17_in(V_i_0,B):1
     [3>=V_i_0,C=2] 
* CE 43: eval_count_bits_long_bb4_in(V_i_0,B) = 1+ eval_count_bits_long_bb5_in(V_i_0,C,V_i_0):1+ eval_count_bits_long_bb17_in(V_i_0,B):2
     [3>=V_i_0,C=2] 
* CE 44: eval_count_bits_long_bb4_in(V_i_0,B) = 1+ eval_count_bits_long_bb5_in(V_i_0,C,V_i_0):2+ eval_count_bits_long_bb17_in(V_i_0,B):1
     [V_i_0>=4,C=2] 
* CE 45: eval_count_bits_long_bb4_in(V_i_0,B) = 1+ eval_count_bits_long_bb5_in(V_i_0,C,V_i_0):2+ eval_count_bits_long_bb17_in(V_i_0,B):2
     [V_i_0>=4,C=2] 
* CE 46: eval_count_bits_long_bb4_in(V_i_0,B) = 1+ eval_count_bits_long_bb5_in(V_i_0,C,D):3+ eval_count_bits_long_bb17_in(D,B):1
     [V_i_0>=D+4,D>=0,3>=D,C=2] 
* CE 47: eval_count_bits_long_bb4_in(V_i_0,B) = 1+ eval_count_bits_long_bb5_in(V_i_0,C,D):3+ eval_count_bits_long_bb17_in(D,B):2
     [V_i_0>=D+4,D>=0,3>=D,C=2] 
* CE 48: eval_count_bits_long_bb4_in(V_i_0,B) = 1+ eval_count_bits_long_bb5_in(V_i_0,C,D):4+ eval_count_bits_long_bb17_in(D,B):1
     [V_i_0>=D+4,D>=4,C=2] 
* CE 49: eval_count_bits_long_bb4_in(V_i_0,B) = 1+ eval_count_bits_long_bb5_in(V_i_0,C,D):4+ eval_count_bits_long_bb17_in(D,B):2
     [V_i_0>=D+4,D>=4,C=2] 

### Cost equations --> "Loop" of eval_count_bits_long_bb4_in/2 
* CEs [45,47,49] --> Loop 37 
* CEs [43] --> Loop 38 
* CEs [44,46,48] --> Loop 39 
* CEs [42] --> Loop 40 

#### Loops of eval_count_bits_long_bb4_in/2 
* Loop 37: eval_count_bits_long_bb4_in(V_i_0,B) [V_i_0>=4] 
* Loop 38: eval_count_bits_long_bb4_in(V_i_0,B) [3>=V_i_0] 
* Loop 39: eval_count_bits_long_bb4_in(V_i_0,B) [V_i_0>=4] 
* Loop 40: eval_count_bits_long_bb4_in(V_i_0,B) [3>=V_i_0] 

### Ranking functions of CR eval_count_bits_long_bb4_in(V_i_0,B) 

#### Partial ranking functions of CR eval_count_bits_long_bb4_in(V_i_0,B) 


### Resulting Chains:eval_count_bits_long_bb4_in(V_i_0,B) 
* [40]
* [39]
* [38]...
* [37]...


### Merging Chains  eval_count_bits_long_bb4_in/2 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 
* [[38]] --> 3 
* [[37]] --> 4 


### Specialization of cost equations eval_count_bits_long_bb0_in/1 
* CE 3 is refined into CE [50,51,52,53,54,55,56,57] 


#### Refined cost equations eval_count_bits_long_bb0_in/1 
* CE 50: eval_count_bits_long_bb0_in(B) = 1+ eval_count_bits_long_bb1_in(C,D,E):1+ eval_count_bits_long_bb4_in(F,B):2
     [F=576,E=576,D=6,C=576] 
* CE 51: eval_count_bits_long_bb0_in(B) = 1+ eval_count_bits_long_bb1_in(C,D,E):1+ eval_count_bits_long_bb4_in(F,B):4
     [F=576,E=576,D=6,C=576] 
* CE 52: eval_count_bits_long_bb0_in(B) = 1+ eval_count_bits_long_bb1_in(C,D,E):2+ eval_count_bits_long_bb4_in(E,B):1
     [E>=0,1>=E,D=6,C=576] 
* CE 53: eval_count_bits_long_bb0_in(B) = 1+ eval_count_bits_long_bb1_in(C,D,E):2+ eval_count_bits_long_bb4_in(E,B):3
     [E>=0,1>=E,D=6,C=576] 
* CE 54: eval_count_bits_long_bb0_in(B) = 1+ eval_count_bits_long_bb1_in(C,D,E):3+ eval_count_bits_long_bb4_in(E,B):1
     [E>=2,3>=E,D=6,C=576] 
* CE 55: eval_count_bits_long_bb0_in(B) = 1+ eval_count_bits_long_bb1_in(C,D,E):3+ eval_count_bits_long_bb4_in(E,B):2
     [E>=4,574>=E,D=6,C=576] 
* CE 56: eval_count_bits_long_bb0_in(B) = 1+ eval_count_bits_long_bb1_in(C,D,E):3+ eval_count_bits_long_bb4_in(E,B):3
     [E>=2,3>=E,D=6,C=576] 
* CE 57: eval_count_bits_long_bb0_in(B) = 1+ eval_count_bits_long_bb1_in(C,D,E):3+ eval_count_bits_long_bb4_in(E,B):4
     [E>=4,574>=E,D=6,C=576] 

### Cost equations --> "Loop" of eval_count_bits_long_bb0_in/1 
* CEs [51,53,56,57] --> Loop 41 
* CEs [50,52,54,55] --> Loop 42 

#### Loops of eval_count_bits_long_bb0_in/1 
* Loop 41: eval_count_bits_long_bb0_in(B) [] 
* Loop 42: eval_count_bits_long_bb0_in(B) [] 

### Ranking functions of CR eval_count_bits_long_bb0_in(B) 

#### Partial ranking functions of CR eval_count_bits_long_bb0_in(B) 


### Resulting Chains:eval_count_bits_long_bb0_in(B) 
* [42]
* [41]...


### Merging Chains  eval_count_bits_long_bb0_in/1 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_count_bits_long_start/1 
* CE 2 is refined into CE [58,59] 


#### Refined cost equations eval_count_bits_long_start/1 
* CE 58: eval_count_bits_long_start(B) = 0+ eval_count_bits_long_bb0_in(B):1
     [] 
* CE 59: eval_count_bits_long_start(B) = 0+ eval_count_bits_long_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_count_bits_long_start/1 
* CEs [59] --> Loop 43 
* CEs [58] --> Loop 44 

#### Loops of eval_count_bits_long_start/1 
* Loop 43: eval_count_bits_long_start(B) [] 
* Loop 44: eval_count_bits_long_start(B) [] 

### Ranking functions of CR eval_count_bits_long_start(B) 

#### Partial ranking functions of CR eval_count_bits_long_start(B) 


### Resulting Chains:eval_count_bits_long_start(B) 
* [44]
* [43]...


### Merging Chains  eval_count_bits_long_start/1 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [19] 

 * loop 19:eval_count_bits_long_bb1_in(V_i_0,B,C) -> [eval_count_bits_long_bb1_in(V_i_0',B',C')] 
1
#### Cost of phase [19]:eval_count_bits_long_bb1_in(V_i_0,B,C) -> [eval_count_bits_long_bb1_in(V_i_0',B',C')] 
1*it(19)+0
  Such that:it(19) =< V_i_0
it(19) =< V_i_0-V_i_0'

#### Cost of phase [19]:eval_count_bits_long_bb1_in(V_i_0,B,C) -> [eval_count_bits_long_bb1_in(V_i_0',B',C')] 
1*it(19)+0
  Such that:it(19) =< V_i_0
it(19) =< V_i_0-V_i_0'

#### Cost of chains of eval_count_bits_long_bb1_in(V_i_0,B,C):
* Chain [[19],21]: 1*it(19)+0
  Such that:it(19) =< V_i_0-C

  with precondition: [B=6,576>=V_i_0,C>=2,V_i_0>=C+2] 

* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< V_i_0-C

  with precondition: [B=6,576>=V_i_0,1>=C,C>=0,V_i_0>=C+2] 

* Chain [21]: 0
  with precondition: [B=6,V_i_0=C,576>=V_i_0,V_i_0>=2] 


#### Cost of loops [22] 

 * loop 22:eval_count_bits_long_bb5_in(V_i_1,B,C) -> [eval_count_bits_long_bb5_in(V_i_1',B',C')] 
1
#### Cost of phase [22]:eval_count_bits_long_bb5_in(V_i_1,B,C) -> [eval_count_bits_long_bb5_in(V_i_1',B',C')] 
1*it(22)+0
  Such that:it(22) =< V_i_1
it(22) =< V_i_1-V_i_1'

#### Cost of phase [22]:eval_count_bits_long_bb5_in(V_i_1,B,C) -> [eval_count_bits_long_bb5_in(V_i_1',B',C')] 
1*it(22)+0
  Such that:it(22) =< V_i_1
it(22) =< V_i_1-V_i_1'

#### Cost of chains of eval_count_bits_long_bb5_in(V_i_1,B,C):
* Chain [[22],24]: 1*it(22)+0
  Such that:it(22) =< V_i_1-C

  with precondition: [B=2,3>=C,C>=0,V_i_1>=C+4] 

* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< V_i_1-C

  with precondition: [B=2,C>=4,V_i_1>=C+4] 

* Chain [24]: 0
  with precondition: [B=2,V_i_1=C,3>=V_i_1] 

* Chain [23]: 0
  with precondition: [B=2,V_i_1=C,V_i_1>=4] 


#### Cost of loops [25] 

 * loop 25:eval_count_bits_long_bb20_in(V_i_1,B,C) -> [eval_count_bits_long_bb20_in(V_i_1',B',C')] 
1
#### Cost of phase [25]:eval_count_bits_long_bb20_in(V_i_1,B,C) -> [eval_count_bits_long_bb20_in(V_i_1',B',C')] 
1*it(25)+0
#### Cost of phase [25]:eval_count_bits_long_bb20_in(V_i_1,B,C) -> [eval_count_bits_long_bb20_in(V_i_1',B',C')] 
1*it(25)+0
#### Cost of chains of eval_count_bits_long_bb20_in(V_i_1,B,C):
* Chain [[25]]...: 1*it(25)+0
  with precondition: [] 

* Chain [[25],26]: 1*it(25)+0
  with precondition: [B=5,V_i_1=C] 

* Chain [26]: 0
  with precondition: [B=5,C=V_i_1] 


#### Cost of loops [27] 

 * loop 27:eval_count_bits_long_bb22_in(V_i_1,B,C) -> [eval_count_bits_long_bb22_in(V_i_1',B',C')] 
1
#### Cost of phase [27]:eval_count_bits_long_bb22_in(V_i_1,B,C) -> [eval_count_bits_long_bb22_in(V_i_1',B',C')] 
1*it(27)+0
#### Cost of phase [27]:eval_count_bits_long_bb22_in(V_i_1,B,C) -> [eval_count_bits_long_bb22_in(V_i_1',B',C')] 
1*it(27)+0
#### Cost of chains of eval_count_bits_long_bb22_in(V_i_1,B,C):
* Chain [[27]]...: 1*it(27)+0
  with precondition: [] 

* Chain [[27],28]: 1*it(27)+0
  with precondition: [B=4,V_i_1=C] 

* Chain [28]: 0
  with precondition: [B=4,C=V_i_1] 


#### Cost of loops [29] 

 * loop 29:eval_count_bits_long_bb25_in(V_i_1,B) -> [eval_count_bits_long_bb25_in(V_i_1',B')] 
1
#### Cost of phase [29]:eval_count_bits_long_bb25_in(V_i_1,B) -> [eval_count_bits_long_bb25_in(V_i_1',B')] 
1*it(29)+0
#### Cost of phase [29]:eval_count_bits_long_bb25_in(V_i_1,B) -> [eval_count_bits_long_bb25_in(V_i_1',B')] 
1*it(29)+0
#### Cost of chains of eval_count_bits_long_bb25_in(V_i_1,B):
* Chain [[29]]...: 1*it(29)+0
  with precondition: [B=3] 

* Chain [[29],30]: 1*it(29)+0
  with precondition: [B=3] 

* Chain [30]: 0
  with precondition: [B=3] 


#### Cost of chains of loop_cont_eval_count_bits_long_bb22_in(D,A,B):
* Chain [32]: 1*s(4)+1
  with precondition: [D=4] 

* Chain [31]...: 1*s(5)+1
  with precondition: [D=4] 


#### Cost of chains of loop_cont_eval_count_bits_long_bb20_in(E,A,B):
* Chain [34]: 2*s(6)+2
  with precondition: [E=5] 

* Chain [33]...: 1*aux(4)+0
  with precondition: [E=5] 


#### Cost of chains of eval_count_bits_long_bb17_in(V_i_1,B):
* Chain [36]: 1*aux(5)+0
  with precondition: [] 

* Chain [35]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_count_bits_long_bb4_in(V_i_0,B):
* Chain [40]: 1*s(16)+1
  with precondition: [3>=V_i_0] 

* Chain [39]: 3*s(17)+2*s(18)+1
  Such that:aux(7) =< V_i_0
s(18) =< aux(7)

  with precondition: [V_i_0>=4] 

* Chain [38]...: 1*s(22)+1
  with precondition: [3>=V_i_0] 

* Chain [37]...: 3*s(23)+2*s(24)+1
  Such that:aux(8) =< V_i_0
s(24) =< aux(8)

  with precondition: [V_i_0>=4] 


#### Cost of chains of eval_count_bits_long_bb0_in(B):
* Chain [42]: 1*aux(11)+0
  with precondition: [] 

* Chain [41]...: 1*aux(14)+0
  with precondition: [] 


#### Cost of chains of eval_count_bits_long_start(B):
* Chain [44]: 1*s(50)+0
  with precondition: [] 

* Chain [43]...: 1*s(51)+0
  with precondition: [] 


Closed-form bounds of eval_count_bits_long_start(B): 
-------------------------------------
* Chain [44] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_count_bits_long_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 55 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 46 ms.
   - Equation cost structures 19 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 174 ms.

