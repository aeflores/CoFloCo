Warning: Ignored call to eval_restore_fix_stack_stop/1 in equation loop_cont_eval_restore_fix_stack_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_restore_fix_stack_12/4,eval_restore_fix_stack_13/4,eval_restore_fix_stack_16/4,eval_restore_fix_stack_17/4,eval_restore_fix_stack_18/4,eval_restore_fix_stack_19/4,eval_restore_fix_stack_23/4,eval_restore_fix_stack_24/4,eval_restore_fix_stack_NewDefault_in/4,eval_restore_fix_stack_bb10_in/4,eval_restore_fix_stack_bb11_in/4,eval_restore_fix_stack_bb2_in/4]
1. recursive  : [eval_restore_fix_stack_bb1_in/2,loop_cont_eval_restore_fix_stack_bb2_in/3]
2. non_recursive  : [loop_cont_eval_restore_fix_stack_bb1_in/2]
3. non_recursive  : [eval_restore_fix_stack_bb0_in/1]
4. non_recursive  : [eval_restore_fix_stack_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_restore_fix_stack_bb2_in/4
1. SCC is partially evaluated into eval_restore_fix_stack_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_restore_fix_stack_bb0_in/1
4. SCC is partially evaluated into eval_restore_fix_stack_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_restore_fix_stack_bb2_in/4 
* CE 10 is refined into CE [11] 
* CE 9 is refined into CE [12] 
* CE 7 is refined into CE [13] 
* CE 8 is refined into CE [14] 


#### Refined cost equations eval_restore_fix_stack_bb2_in/4 
* CE 11: eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) = 0
     [V_size_0>=0,B=3,V_size_1=0] 
* CE 12: eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) = 0
     [V_size_0>=0,B=2,V_size_1=0] 
* CE 13: eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) = 1+ eval_restore_fix_stack_bb2_in(V_size_0,D,B,C)
     [V_size_0>=V_size_1,B>=2,V_size_1>=1,3>=B,V_size_1=D+1] 
* CE 14: eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) = 1+ eval_restore_fix_stack_bb2_in(V_size_0,D,B,C)
     [V_size_0>=V_size_1,B>=2,3>=B,0>=V_size_1+1,V_size_1=D+1] 

### Cost equations --> "Loop" of eval_restore_fix_stack_bb2_in/4 
* CEs [13] --> Loop 9 
* CEs [14] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_restore_fix_stack_bb2_in/4 
* Loop 9: eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C)->  eval_restore_fix_stack_bb2_in(V_size_0,V_size_1',B,C)
                  [V_size_0>=V_size_1,B>=2,V_size_1>=1,3>=B,V_size_1=V_size_1'+1] 
* Loop 10: eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C)->  eval_restore_fix_stack_bb2_in(V_size_0,V_size_1',B,C)
                  [V_size_0>=V_size_1,B>=2,3>=B,0>=V_size_1+1,V_size_1=V_size_1'+1] 
* Loop 11: eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) [V_size_0>=0,B=3,V_size_1=0] 
* Loop 12: eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) [V_size_0>=0,B=2,V_size_1=0] 

### Ranking functions of CR eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) 
* RF of phase [9]: [V_size_1]

#### Partial ranking functions of CR eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_size_1


### Resulting Chains:eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) 
* [[10]]...
* [[9],12]
* [[9],11]
* [12]
* [11]


### Merging Chains  eval_restore_fix_stack_bb2_in/4 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[12,[9]]] --> 3 
* [[11,[9]]] --> 4 
* [[[10]]] --> 5 


### Specialization of cost equations eval_restore_fix_stack_bb1_in/2 
* CE 6 is refined into CE [15,16,17] 
* CE 5 is refined into CE [18,19,20] 


#### Refined cost equations eval_restore_fix_stack_bb1_in/2 
* CE 15: eval_restore_fix_stack_bb1_in(V_size_0,B) = 1+ eval_restore_fix_stack_bb2_in(C,D,E,F):1
     [E=2,D=0,C=0,B=2,V_size_0=0] 
* CE 16: eval_restore_fix_stack_bb1_in(V_size_0,B) = 1+ eval_restore_fix_stack_bb2_in(V_size_0,V_size_0,C,D):3
     [V_size_0>=1,C=2,B=2] 
* CE 17: eval_restore_fix_stack_bb1_in(V_size_0,B) = 1+ eval_restore_fix_stack_bb2_in(V_size_0,V_size_0,C,D):5
     [0>=V_size_0+1,C=2,B=2] 
* CE 18: eval_restore_fix_stack_bb1_in(V_size_0,B) = 2+ eval_restore_fix_stack_bb2_in(C,D,E,F):2+ eval_restore_fix_stack_bb1_in(F,G)
     [G=2,E=3,D=0,C=0,B=2,V_size_0=0] 
* CE 19: eval_restore_fix_stack_bb1_in(V_size_0,B) = 2+ eval_restore_fix_stack_bb2_in(V_size_0,V_size_0,C,D):4+ eval_restore_fix_stack_bb1_in(D,E)
     [V_size_0>=1,E=2,C=3,B=2] 
* CE 20: eval_restore_fix_stack_bb1_in(V_size_0,B) = 2+ eval_restore_fix_stack_bb2_in(V_size_0,V_size_0,C,D):5
     [0>=V_size_0+1,E=2,C=3,B=2] 

### Cost equations --> "Loop" of eval_restore_fix_stack_bb1_in/2 
* CEs [17,20] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [15] --> Loop 17 

#### Loops of eval_restore_fix_stack_bb1_in/2 
* Loop 13: eval_restore_fix_stack_bb1_in(V_size_0,B) [0>=V_size_0+1,B=2] 
* Loop 14: eval_restore_fix_stack_bb1_in(V_size_0,B)->  eval_restore_fix_stack_bb1_in(V_size_0',B')
                  [V_size_0>=1,B'=2,B=2] 
* Loop 15: eval_restore_fix_stack_bb1_in(V_size_0,B)->  eval_restore_fix_stack_bb1_in(V_size_0',B')
                  [B'=2,B=2,V_size_0=0] 
* Loop 16: eval_restore_fix_stack_bb1_in(V_size_0,B) [V_size_0>=1,B=2] 
* Loop 17: eval_restore_fix_stack_bb1_in(V_size_0,B) [B=2,V_size_0=0] 

### Ranking functions of CR eval_restore_fix_stack_bb1_in(V_size_0,B) 

#### Partial ranking functions of CR eval_restore_fix_stack_bb1_in(V_size_0,B) 


### Resulting Chains:eval_restore_fix_stack_bb1_in(V_size_0,B) 
* [[14,15]]...
* [[14,15],17]
* [[14,15],16]
* [[14,15],13]...
* [17]
* [16]
* [13]...


### Merging Chains  eval_restore_fix_stack_bb1_in/2 into  External patterns of execution 
* [[16],[17],[16,[14,15]],[17,[14,15]]] --> 1 
* [[13]] --> 2 
* [[13,[14,15]]] --> 3 
* [[[14,15]]] --> 4 


### Specialization of cost equations eval_restore_fix_stack_bb0_in/1 
* CE 3 is refined into CE [21,22,23] 
* CE 4 is refined into CE [24,25,26,27] 


#### Refined cost equations eval_restore_fix_stack_bb0_in/1 
* CE 21: eval_restore_fix_stack_bb0_in(B) = 1+ eval_restore_fix_stack_bb1_in(C,D):1
     [C>=0,D=2] 
* CE 22: eval_restore_fix_stack_bb0_in(B) = 1+ eval_restore_fix_stack_bb1_in(C,D):3
     [C>=0,D=2] 
* CE 23: eval_restore_fix_stack_bb0_in(B) = 1+ eval_restore_fix_stack_bb1_in(C,D):4
     [C>=0,D=2] 
* CE 24: eval_restore_fix_stack_bb0_in(B) = 1+ eval_restore_fix_stack_bb1_in(C,D):1
     [D=2,C=0] 
* CE 25: eval_restore_fix_stack_bb0_in(B) = 1+ eval_restore_fix_stack_bb1_in(C,D):2
     [0>=C+1,D=2] 
* CE 26: eval_restore_fix_stack_bb0_in(B) = 1+ eval_restore_fix_stack_bb1_in(C,D):3
     [D=2,C=0] 
* CE 27: eval_restore_fix_stack_bb0_in(B) = 1+ eval_restore_fix_stack_bb1_in(C,D):4
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_restore_fix_stack_bb0_in/1 
* CEs [22,23,25,26,27] --> Loop 18 
* CEs [21,24] --> Loop 19 

#### Loops of eval_restore_fix_stack_bb0_in/1 
* Loop 18: eval_restore_fix_stack_bb0_in(B) [] 
* Loop 19: eval_restore_fix_stack_bb0_in(B) [] 

### Ranking functions of CR eval_restore_fix_stack_bb0_in(B) 

#### Partial ranking functions of CR eval_restore_fix_stack_bb0_in(B) 


### Resulting Chains:eval_restore_fix_stack_bb0_in(B) 
* [19]
* [18]...


### Merging Chains  eval_restore_fix_stack_bb0_in/1 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_restore_fix_stack_start/2 
* CE 2 is refined into CE [28,29] 


#### Refined cost equations eval_restore_fix_stack_start/2 
* CE 28: eval_restore_fix_stack_start(V_is_estack,B) = 0+ eval_restore_fix_stack_bb0_in(B):1
     [] 
* CE 29: eval_restore_fix_stack_start(V_is_estack,B) = 0+ eval_restore_fix_stack_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_restore_fix_stack_start/2 
* CEs [29] --> Loop 20 
* CEs [28] --> Loop 21 

#### Loops of eval_restore_fix_stack_start/2 
* Loop 20: eval_restore_fix_stack_start(V_is_estack,B) [] 
* Loop 21: eval_restore_fix_stack_start(V_is_estack,B) [] 

### Ranking functions of CR eval_restore_fix_stack_start(V_is_estack,B) 

#### Partial ranking functions of CR eval_restore_fix_stack_start(V_is_estack,B) 


### Resulting Chains:eval_restore_fix_stack_start(V_is_estack,B) 
* [21]
* [20]...


### Merging Chains  eval_restore_fix_stack_start/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) -> [eval_restore_fix_stack_bb2_in(V_size_0',V_size_1',B',C')] 
1
#### Cost of phase [10]:eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) -> [eval_restore_fix_stack_bb2_in(V_size_0',V_size_1',B',C')] 
1*it(10)+0
#### Cost of loops [9] 

 * loop 9:eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) -> [eval_restore_fix_stack_bb2_in(V_size_0',V_size_1',B',C')] 
1
#### Cost of phase [9]:eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) -> [eval_restore_fix_stack_bb2_in(V_size_0',V_size_1',B',C')] 
1*it(9)+0
  Such that:it(9) =< V_size_1
it(9) =< V_size_1-V_size_1'

#### Cost of phase [9]:eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C) -> [eval_restore_fix_stack_bb2_in(V_size_0',V_size_1',B',C')] 
1*it(9)+0
  Such that:it(9) =< V_size_1
it(9) =< V_size_1-V_size_1'

#### Cost of chains of eval_restore_fix_stack_bb2_in(V_size_0,V_size_1,B,C):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [0>=V_size_1+1,V_size_0>=V_size_1,B>=2,3>=B] 

* Chain [[9],12]: 1*it(9)+0
  Such that:it(9) =< V_size_1

  with precondition: [B=2,V_size_1>=1,V_size_0>=V_size_1] 

* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< V_size_1

  with precondition: [B=3,V_size_1>=1,V_size_0>=V_size_1] 

* Chain [12]: 0
  with precondition: [V_size_1=0,B=2,V_size_0>=0] 

* Chain [11]: 0
  with precondition: [V_size_1=0,B=3,V_size_0>=0] 


#### Cost of loops [14,15] 

 * loop 14:eval_restore_fix_stack_bb1_in(V_size_0,B) -> [eval_restore_fix_stack_bb1_in(V_size_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_size_0

 * loop 15:eval_restore_fix_stack_bb1_in(V_size_0,B) -> [eval_restore_fix_stack_bb1_in(V_size_0',B')] 
2
#### Cost of phase [14,15]:eval_restore_fix_stack_bb1_in(V_size_0,B) -> [eval_restore_fix_stack_bb1_in(V_size_0',B')] 
4*it(14)+1*s(3)+0
#### Cost of phase [14,15]:eval_restore_fix_stack_bb1_in(V_size_0,B) -> [eval_restore_fix_stack_bb1_in(V_size_0',B')] 
4*it(14)+1*s(3)+0
#### Cost of phase [14,15]:eval_restore_fix_stack_bb1_in(V_size_0,B) -> [eval_restore_fix_stack_bb1_in(V_size_0',B')] 
4*it(14)+1*s(3)+0
#### Cost of loops [14,15] 

 * loop 14:eval_restore_fix_stack_bb1_in(V_size_0,B) -> [eval_restore_fix_stack_bb1_in(V_size_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_size_0

 * loop 15:eval_restore_fix_stack_bb1_in(V_size_0,B) -> [eval_restore_fix_stack_bb1_in(V_size_0',B')] 
2
#### Cost of phase [14,15]:eval_restore_fix_stack_bb1_in(V_size_0,B) -> [] 
4*it(14)+1*it([16])+1*s(3)+1*s(5)+0
  Such that:it([16]) =< 1

#### Cost of phase [14,15]:eval_restore_fix_stack_bb1_in(V_size_0,B) -> [eval_restore_fix_stack_bb1_in(V_size_0',B')] 
4*it(14)+1*s(3)+0
#### Cost of chains of eval_restore_fix_stack_bb1_in(V_size_0,B):
* Chain [[14,15]]...: 5*it(14)+0
  with precondition: [V_size_0>=0,B=2] 

* Chain [[14,15],17]: 5*it(14)+1
  with precondition: [B=2,V_size_0>=0] 

* Chain [[14,15],16]: 4*it(14)+1*it([16])+1*s(3)+1*s(5)+0
  Such that:it([16]) =< 1

  with precondition: [B=2,V_size_0>=0] 

* Chain [[14,15],13]...: 6*aux(14)+0
  with precondition: [B=2,V_size_0>=0] 

* Chain [17]: 1
  with precondition: [V_size_0=0,B=2] 

* Chain [16]: 1*s(4)+1
  Such that:s(4) =< V_size_0

  with precondition: [B=2,V_size_0>=1] 

* Chain [13]...: 1*aux(14)+0
  with precondition: [B=2,0>=V_size_0+1] 


#### Cost of chains of eval_restore_fix_stack_bb0_in(B):
* Chain [19]: 1*aux(16)+0
  with precondition: [] 

* Chain [18]...: 1*aux(17)+0
  with precondition: [] 


#### Cost of chains of eval_restore_fix_stack_start(V_is_estack,B):
* Chain [21]: 1*s(25)+0
  with precondition: [] 

* Chain [20]...: 1*s(26)+0
  with precondition: [] 


Closed-form bounds of eval_restore_fix_stack_start(V_is_estack,B): 
-------------------------------------
* Chain [21] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [20]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_restore_fix_stack_start(V_is_estack,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 69 ms.
* Invariants computed in 69 ms.
   - Backward Invariants 32 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 95 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 165 ms.
   - Equation cost structures 33 ms.
   - Phase cost structures 108 ms.
   - Chain cost structures 29 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 493 ms.

