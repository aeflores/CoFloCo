Warning: Ignored call to eval_put4bitcmaptile_stop/1 in equation loop_cont_eval_put4bitcmaptile_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_put4bitcmaptile_bb2_in/9]
1. recursive  : [eval_put4bitcmaptile_bb1_in/3,eval_put4bitcmaptile_bb6_in/5,loop_cont_eval_put4bitcmaptile_bb2_in/6]
2. non_recursive  : [loop_cont_eval_put4bitcmaptile_bb1_in/2]
3. non_recursive  : [eval_put4bitcmaptile_bb0_in/4]
4. non_recursive  : [eval_put4bitcmaptile_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_put4bitcmaptile_bb2_in/9
1. SCC is partially evaluated into eval_put4bitcmaptile_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_put4bitcmaptile_bb0_in/4
4. SCC is partially evaluated into eval_put4bitcmaptile_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_put4bitcmaptile_bb2_in/9 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_put4bitcmaptile_bb2_in/9 
* CE 10: eval_put4bitcmaptile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,1>=D,C+1=F,C+1=B,E=2] 
* CE 11: eval_put4bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) = 1+ eval_put4bitcmaptile_bb2_in(V_w,G,V_3,H,I,C,D,E,F)
     [V_w>=V__x_0,V__x_0>=2,V_3>=0,V__x_0=H+2,V_3+1=G,V_3+1=V__01,I=2,B=2] 

### Cost equations --> "Loop" of eval_put4bitcmaptile_bb2_in/9 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_put4bitcmaptile_bb2_in/9 
* Loop 9: eval_put4bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F)->  eval_put4bitcmaptile_bb2_in(V_w,V__01',V_3,V__x_0',B',C,D,E,F)
                  [V_w>=V__x_0,V__x_0>=2,V_3>=0,V__x_0=V__x_0'+2,V_3+1=V__01',V_3+1=V__01,B'=2,B=2] 
* Loop 10: eval_put4bitcmaptile_bb2_in(A,B,C,D,E,A,F,C,D) [A>=D,C>=0,1>=D,C+1=F,C+1=B,E=2] 

### Ranking functions of CR eval_put4bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) 
* RF of phase [9]: [V__x_0/2-1/2]

#### Partial ranking functions of CR eval_put4bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V__x_0/2-1/2


### Resulting Chains:eval_put4bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) 
* [[9],10]
* [10]


### Merging Chains  eval_put4bitcmaptile_bb2_in/9 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[9]]] --> 2 


### Specialization of cost equations eval_put4bitcmaptile_bb1_in/3 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13,14] 


#### Refined cost equations eval_put4bitcmaptile_bb1_in/3 
* CE 12: eval_put4bitcmaptile_bb1_in(V_w,V__01,B) = 0
     [0>=V__01,B=3] 
* CE 13: eval_put4bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put4bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):1+ eval_put4bitcmaptile_bb1_in(V_w,D,G)
     [D>=0,1>=V_w,D+1=F,D+1=C,D+1=V__01,G=3,E=2,B=3] 
* CE 14: eval_put4bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put4bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):2+ eval_put4bitcmaptile_bb1_in(V_w,D,H)
     [V_w>=G+2,G>=0,D>=0,1>=G,D+1=F,D+1=C,D+1=V__01,H=3,E=2,B=3] 

### Cost equations --> "Loop" of eval_put4bitcmaptile_bb1_in/3 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [12] --> Loop 13 

#### Loops of eval_put4bitcmaptile_bb1_in/3 
* Loop 11: eval_put4bitcmaptile_bb1_in(V_w,V__01,B)->  eval_put4bitcmaptile_bb1_in(V_w,V__01',B')
                  [V__01>=1,V_w>=2,V__01=V__01'+1,B'=3,B=3] 
* Loop 12: eval_put4bitcmaptile_bb1_in(V_w,V__01,B)->  eval_put4bitcmaptile_bb1_in(V_w,V__01',B')
                  [V__01>=1,1>=V_w,V__01=V__01'+1,B'=3,B=3] 
* Loop 13: eval_put4bitcmaptile_bb1_in(V_w,V__01,B) [0>=V__01,B=3] 

### Ranking functions of CR eval_put4bitcmaptile_bb1_in(V_w,V__01,B) 
* RF of phase [11]: [V__01]
* RF of phase [12]: [V__01]

#### Partial ranking functions of CR eval_put4bitcmaptile_bb1_in(V_w,V__01,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V__01
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V__01


### Resulting Chains:eval_put4bitcmaptile_bb1_in(V_w,V__01,B) 
* [[12],13]
* [[11],13]
* [13]


### Merging Chains  eval_put4bitcmaptile_bb1_in/3 into  External patterns of execution 
* [[13,[12]]] --> 1 
* [[13]] --> 2 
* [[13,[11]]] --> 3 


### Specialization of cost equations eval_put4bitcmaptile_bb0_in/4 
* CE 4 is refined into CE [15,16,17] 
* CE 5 is refined into CE [18,19,20] 
* CE 3 is refined into CE [21,22,23] 


#### Refined cost equations eval_put4bitcmaptile_bb0_in/4 
* CE 15: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put4bitcmaptile_bb1_in(V_w,V_h,C):1
     [V_h>=1,V_fromskew>=1,1>=V_w,C=3] 
* CE 16: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put4bitcmaptile_bb1_in(V_w,V_h,C):2
     [V_fromskew>=1,0>=V_h,C=3] 
* CE 17: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put4bitcmaptile_bb1_in(V_w,V_h,C):3
     [V_h>=1,V_w>=2,V_fromskew>=1,C=3] 
* CE 18: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put4bitcmaptile_bb1_in(V_w,V_h,C):1
     [V_h>=1,1>=V_w,0>=V_fromskew+1,C=3] 
* CE 19: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put4bitcmaptile_bb1_in(V_w,V_h,C):2
     [0>=V_h,0>=V_fromskew+1,C=3] 
* CE 20: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put4bitcmaptile_bb1_in(V_w,V_h,C):3
     [V_h>=1,V_w>=2,0>=V_fromskew+1,C=3] 
* CE 21: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put4bitcmaptile_bb1_in(V_w,V_h,C):1
     [V_h>=1,1>=V_w,C=3,V_fromskew=0] 
* CE 22: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put4bitcmaptile_bb1_in(V_w,V_h,C):2
     [0>=V_h,C=3,V_fromskew=0] 
* CE 23: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put4bitcmaptile_bb1_in(V_w,V_h,C):3
     [V_h>=1,V_w>=2,C=3,V_fromskew=0] 

### Cost equations --> "Loop" of eval_put4bitcmaptile_bb0_in/4 
* CEs [17] --> Loop 14 
* CEs [20] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [15] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [21] --> Loop 22 

#### Loops of eval_put4bitcmaptile_bb0_in/4 
* Loop 14: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_fromskew>=1,V_h>=1,V_w>=2] 
* Loop 15: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_h>=1,V_w>=2,0>=V_fromskew+1] 
* Loop 16: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_fromskew>=1,0>=V_h] 
* Loop 17: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [0>=V_fromskew+1,0>=V_h] 
* Loop 18: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_fromskew>=1,V_h>=1,1>=V_w] 
* Loop 19: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_h>=1,0>=V_fromskew+1,1>=V_w] 
* Loop 20: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_h>=1,V_w>=2,V_fromskew=0] 
* Loop 21: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [0>=V_h,V_fromskew=0] 
* Loop 22: eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_h>=1,1>=V_w,V_fromskew=0] 

### Ranking functions of CR eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) 

#### Partial ranking functions of CR eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) 


### Resulting Chains:eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) 
* [22]
* [21]
* [20]
* [19]
* [18]
* [17]
* [16]
* [15]
* [14]


### Merging Chains  eval_put4bitcmaptile_bb0_in/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[19]] --> 4 
* [[18]] --> 5 
* [[17]] --> 6 
* [[16]] --> 7 
* [[15]] --> 8 
* [[14]] --> 9 


### Specialization of cost equations eval_put4bitcmaptile_start/7 
* CE 2 is refined into CE [24,25,26,27,28,29,30,31,32] 


#### Refined cost equations eval_put4bitcmaptile_start/7 
* CE 24: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put4bitcmaptile_bb0_in(V_w,V_h,C,B):1
     [V_h>=1,1>=V_w,C=0,V_fromskew=0] 
* CE 25: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put4bitcmaptile_bb0_in(V_w,V_h,C,B):2
     [0>=V_h,C=0,V_fromskew=0] 
* CE 26: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put4bitcmaptile_bb0_in(V_w,V_h,C,B):3
     [V_h>=1,V_w>=2,C=0,V_fromskew=0] 
* CE 27: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):4
     [V_h>=1,0>=V_fromskew+1,1>=V_w] 
* CE 28: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):5
     [V_fromskew>=1,V_h>=1,1>=V_w] 
* CE 29: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):6
     [0>=V_fromskew+1,0>=V_h] 
* CE 30: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):7
     [V_fromskew>=1,0>=V_h] 
* CE 31: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):8
     [V_h>=1,V_w>=2,0>=V_fromskew+1] 
* CE 32: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):9
     [V_fromskew>=1,V_h>=1,V_w>=2] 

### Cost equations --> "Loop" of eval_put4bitcmaptile_start/7 
* CEs [32] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [29] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [26] --> Loop 29 
* CEs [25] --> Loop 30 
* CEs [24] --> Loop 31 

#### Loops of eval_put4bitcmaptile_start/7 
* Loop 23: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_fromskew>=1,V_h>=1,V_w>=2] 
* Loop 24: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,V_w>=2,0>=V_fromskew+1] 
* Loop 25: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_fromskew>=1,0>=V_h] 
* Loop 26: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [0>=V_fromskew+1,0>=V_h] 
* Loop 27: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_fromskew>=1,V_h>=1,1>=V_w] 
* Loop 28: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,0>=V_fromskew+1,1>=V_w] 
* Loop 29: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,V_w>=2,V_fromskew=0] 
* Loop 30: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [0>=V_h,V_fromskew=0] 
* Loop 31: eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,1>=V_w,V_fromskew=0] 

### Ranking functions of CR eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 

#### Partial ranking functions of CR eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 


### Resulting Chains:eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 
* [31]
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]
* [23]


### Merging Chains  eval_put4bitcmaptile_start/7 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 
* [[29]] --> 3 
* [[28]] --> 4 
* [[27]] --> 5 
* [[26]] --> 6 
* [[25]] --> 7 
* [[24]] --> 8 
* [[23]] --> 9 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_put4bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) -> [eval_put4bitcmaptile_bb2_in(V_w',V__01',V_3',V__x_0',B',C',D',E',F')] 
1
#### Cost of phase [9]:eval_put4bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) -> [eval_put4bitcmaptile_bb2_in(V_w',V__01',V_3',V__x_0',B',C',D',E',F')] 
1*it(9)+0
  Such that:it(9) =< V__x_0/2
it(9) =< V__x_0/2-V__x_0'/2

#### Cost of chains of eval_put4bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V__x_0/2-F/2

  with precondition: [B=2,V__01=V_3+1,V_w=C,V__01=D,V__01=E+1,1>=F,V__01>=1,F>=0,V_w>=V__x_0,V__x_0>=F+2] 

* Chain [10]: 0
  with precondition: [B=2,V__01=V_3+1,V_w=C,V__01=D,V__01=E+1,V__x_0=F,1>=V__x_0,V__01>=1,V_w>=V__x_0] 


#### Cost of loops [12] 

 * loop 12:eval_put4bitcmaptile_bb1_in(V_w,V__01,B) -> [eval_put4bitcmaptile_bb1_in(V_w',V__01',B')] 
2
#### Cost of phase [12]:eval_put4bitcmaptile_bb1_in(V_w,V__01,B) -> [eval_put4bitcmaptile_bb1_in(V_w',V__01',B')] 
2*it(12)+0
  Such that:it(12) =< V__01
it(12) =< V__01-V__01'

#### Cost of loops [11] 

 * loop 11:eval_put4bitcmaptile_bb1_in(V_w,V__01,B) -> [eval_put4bitcmaptile_bb1_in(V_w',V__01',B')] 
1*s(2)+2
  Such that:s(2) =< V_w'/2

#### Cost of phase [11]:eval_put4bitcmaptile_bb1_in(V_w,V__01,B) -> [eval_put4bitcmaptile_bb1_in(V_w',V__01',B')] 
2*it(11)+1*s(3)+0
  Such that:aux(1) =< V_w/2
it(11) =< V__01
it(11) =< V__01-V__01'
s(3) =< it(11)*aux(1)

#### Cost of chains of eval_put4bitcmaptile_bb1_in(V_w,V__01,B):
* Chain [[12],13]: 2*it(12)+0
  Such that:it(12) =< V__01

  with precondition: [B=3,1>=V_w,V__01>=1] 

* Chain [[11],13]: 2*it(11)+1*s(3)+0
  Such that:aux(1) =< V_w/2
it(11) =< V__01
s(3) =< it(11)*aux(1)

  with precondition: [B=3,V_w>=2,V__01>=1] 

* Chain [13]: 0
  with precondition: [B=3,0>=V__01] 


#### Cost of chains of eval_put4bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):
* Chain [22]: 2*s(4)+1
  Such that:s(4) =< V_h

  with precondition: [V_fromskew=0,1>=V_w,V_h>=1] 

* Chain [21]: 1
  with precondition: [V_fromskew=0,0>=V_h] 

* Chain [20]: 2*s(6)+1*s(7)+1
  Such that:s(5) =< V_w/2
s(6) =< V_h
s(7) =< s(6)*s(5)

  with precondition: [V_fromskew=0,V_w>=2,V_h>=1] 

* Chain [19]: 2*s(8)+1
  Such that:s(8) =< V_h

  with precondition: [1>=V_w,0>=V_fromskew+1,V_h>=1] 

* Chain [18]: 2*s(9)+1
  Such that:s(9) =< V_h

  with precondition: [1>=V_w,V_h>=1,V_fromskew>=1] 

* Chain [17]: 1
  with precondition: [0>=V_h,0>=V_fromskew+1] 

* Chain [16]: 1
  with precondition: [0>=V_h,V_fromskew>=1] 

* Chain [15]: 2*s(11)+1*s(12)+1
  Such that:s(10) =< V_w/2
s(11) =< V_h
s(12) =< s(11)*s(10)

  with precondition: [0>=V_fromskew+1,V_w>=2,V_h>=1] 

* Chain [14]: 2*s(14)+1*s(15)+1
  Such that:s(13) =< V_w/2
s(14) =< V_h
s(15) =< s(14)*s(13)

  with precondition: [V_w>=2,V_h>=1,V_fromskew>=1] 


#### Cost of chains of eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B):
* Chain [31]: 2*s(16)+1
  Such that:s(16) =< V_h

  with precondition: [V_fromskew=0,1>=V_w,V_h>=1] 

* Chain [30]: 1
  with precondition: [V_fromskew=0,0>=V_h] 

* Chain [29]: 2*s(18)+1*s(19)+1
  Such that:s(17) =< V_w/2
s(18) =< V_h
s(19) =< s(18)*s(17)

  with precondition: [V_fromskew=0,V_w>=2,V_h>=1] 

* Chain [28]: 2*s(20)+1
  Such that:s(20) =< V_h

  with precondition: [1>=V_w,0>=V_fromskew+1,V_h>=1] 

* Chain [27]: 2*s(21)+1
  Such that:s(21) =< V_h

  with precondition: [1>=V_w,V_h>=1,V_fromskew>=1] 

* Chain [26]: 1
  with precondition: [0>=V_h,0>=V_fromskew+1] 

* Chain [25]: 1
  with precondition: [0>=V_h,V_fromskew>=1] 

* Chain [24]: 2*s(23)+1*s(24)+1
  Such that:s(22) =< V_w/2
s(23) =< V_h
s(24) =< s(23)*s(22)

  with precondition: [0>=V_fromskew+1,V_w>=2,V_h>=1] 

* Chain [23]: 2*s(26)+1*s(27)+1
  Such that:s(25) =< V_w/2
s(26) =< V_h
s(27) =< s(26)*s(25)

  with precondition: [V_w>=2,V_h>=1,V_fromskew>=1] 


Closed-form bounds of eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): 
-------------------------------------
* Chain [31] with precondition: [V_fromskew=0,1>=V_w,V_h>=1] 
    - Upper bound: 2*V_h+1 
    - Complexity: n 
* Chain [30] with precondition: [V_fromskew=0,0>=V_h] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [29] with precondition: [V_fromskew=0,V_w>=2,V_h>=1] 
    - Upper bound: 2*V_h+1+V_w/2*V_h 
    - Complexity: n^2 
* Chain [28] with precondition: [1>=V_w,0>=V_fromskew+1,V_h>=1] 
    - Upper bound: 2*V_h+1 
    - Complexity: n 
* Chain [27] with precondition: [1>=V_w,V_h>=1,V_fromskew>=1] 
    - Upper bound: 2*V_h+1 
    - Complexity: n 
* Chain [26] with precondition: [0>=V_h,0>=V_fromskew+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [25] with precondition: [0>=V_h,V_fromskew>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [24] with precondition: [0>=V_fromskew+1,V_w>=2,V_h>=1] 
    - Upper bound: 2*V_h+1+V_w/2*V_h 
    - Complexity: n^2 
* Chain [23] with precondition: [V_w>=2,V_h>=1,V_fromskew>=1] 
    - Upper bound: 2*V_h+1+V_w/2*V_h 
    - Complexity: n^2 

### Maximum cost of eval_put4bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): nat(V_w/2)*nat(V_h)+nat(V_h)*2+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 36 ms.
* Invariants computed in 114 ms.
   - Backward Invariants 64 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 173 ms.
* Termination proved in 32 ms.
* Upper bounds computed in 159 ms.
   - Equation cost structures 69 ms.
   - Phase cost structures 49 ms.
   - Chain cost structures 31 ms.
   - Solving cost expressions 5 ms.
* Total analysis performed in 589 ms.

