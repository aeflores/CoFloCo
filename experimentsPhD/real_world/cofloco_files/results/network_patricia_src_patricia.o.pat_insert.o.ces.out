Warning: Ignored call to eval_pat_insert_stop/1 in equation eval_pat_insert_bb29_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_pat_insert_bb29_in/1]
1. recursive  : [eval_pat_insert_10/6,eval_pat_insert_11/6,eval_pat_insert_bb3_in/3,eval_pat_insert_bb6_in/6]
2. recursive  : [eval_pat_insert_64/4,eval_pat_insert_65/4,eval_pat_insert_66/5,eval_pat_insert_67/5,eval_pat_insert_bb23_in/3]
3. recursive  : [eval_pat_insert_bb9_in/4]
4. non_recursive  : [eval_pat_insert_76/1]
5. non_recursive  : [eval_pat_insert_75/2]
6. non_recursive  : [eval_pat_insert_79/1]
7. non_recursive  : [eval_pat_insert_78/2]
8. non_recursive  : [eval_pat_insert_74/2]
9. non_recursive  : [eval_pat_insert_73/4]
10. non_recursive  : [eval_pat_insert_bb26_in/2]
11. non_recursive  : [loop_cont_eval_pat_insert_bb23_in/3]
12. non_recursive  : [eval_pat_insert_29/1]
13. non_recursive  : [eval_pat_insert_28/1]
14. non_recursive  : [eval_pat_insert_27/1]
15. recursive  : [eval_pat_insert_47/2,eval_pat_insert_48/2,eval_pat_insert_50/2,eval_pat_insert_51/2,eval_pat_insert_bb14_in/2,eval_pat_insert_bb18_in/3]
16. non_recursive  : [eval_pat_insert_61/1]
17. non_recursive  : [eval_pat_insert_60/1]
18. non_recursive  : [eval_pat_insert_57/1]
19. non_recursive  : [eval_pat_insert_56/1]
20. non_recursive  : [eval_pat_insert_55/1]
21. non_recursive  : [eval_pat_insert_bb21_in/1]
22. non_recursive  : [eval_pat_insert_54/1]
23. non_recursive  : [eval_pat_insert_53/1]
24. non_recursive  : [loop_cont_eval_pat_insert_bb14_in/2]
25. non_recursive  : [eval_pat_insert_38/1]
26. non_recursive  : [eval_pat_insert_37/2]
27. non_recursive  : [loop_cont_eval_pat_insert_bb9_in/3]
28. non_recursive  : [loop_cont_eval_pat_insert_bb3_in/4]
29. non_recursive  : [eval_pat_insert_bb0_in/1]
30. non_recursive  : [eval_pat_insert_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_pat_insert_bb3_in/3
2. SCC is partially evaluated into eval_pat_insert_bb23_in/3
3. SCC is partially evaluated into eval_pat_insert_bb9_in/4
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_pat_insert_74/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_pat_insert_bb14_in/2
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into loop_cont_eval_pat_insert_bb14_in/2
25. SCC is partially evaluated into eval_pat_insert_38/1
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into loop_cont_eval_pat_insert_bb9_in/3
28. SCC is partially evaluated into loop_cont_eval_pat_insert_bb3_in/4
29. SCC is partially evaluated into eval_pat_insert_bb0_in/1
30. SCC is partially evaluated into eval_pat_insert_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_pat_insert_bb3_in/3 
* CE 7 is refined into CE [26] 
* CE 5 is refined into CE [27] 
* CE 6 is refined into CE [28] 


#### Refined cost equations eval_pat_insert_bb3_in/3 
* CE 26: eval_pat_insert_bb3_in(B,C,D) = 1+ eval_pat_insert_bb3_in(B,C,D)
     [] 
* CE 27: eval_pat_insert_bb3_in(B,C,D) = 0
     [C=1,B=5] 
* CE 28: eval_pat_insert_bb3_in(B,C,D) = 0
     [D=0,B=4] 

### Cost equations --> "Loop" of eval_pat_insert_bb3_in/3 
* CEs [27] --> Loop 24 
* CEs [28] --> Loop 25 
* CEs [26] --> Loop 26 

#### Loops of eval_pat_insert_bb3_in/3 
* Loop 24: eval_pat_insert_bb3_in(B,C,D) [C=1,B=5] 
* Loop 25: eval_pat_insert_bb3_in(B,C,D) [D=0,B=4] 
* Loop 26: eval_pat_insert_bb3_in(B,C,D)->  eval_pat_insert_bb3_in(B,C,D)
                  [] 

### Ranking functions of CR eval_pat_insert_bb3_in(B,C,D) 

#### Partial ranking functions of CR eval_pat_insert_bb3_in(B,C,D) 


### Resulting Chains:eval_pat_insert_bb3_in(B,C,D) 
* [[26]]...
* [[26],25]
* [[26],24]
* [25]
* [24]


### Merging Chains  eval_pat_insert_bb3_in/3 into  External patterns of execution 
* [[25],[25,[26]]] --> 1 
* [[24],[24,[26]]] --> 2 
* [[[26]]] --> 3 


### Specialization of cost equations eval_pat_insert_bb23_in/3 
* CE 17 is refined into CE [29] 
* CE 15 is refined into CE [30] 
* CE 16 is refined into CE [31] 


#### Refined cost equations eval_pat_insert_bb23_in/3 
* CE 29: eval_pat_insert_bb23_in(A,B,A) = 0
     [A>=32,B=6] 
* CE 30: eval_pat_insert_bb23_in(A,B,A) = 0
     [31>=A,B=6] 
* CE 31: eval_pat_insert_bb23_in(V_i_3,B,C) = 1+ eval_pat_insert_bb23_in(D,E,C)
     [31>=V_i_3,V_i_3+1=D,E=6,B=6] 

### Cost equations --> "Loop" of eval_pat_insert_bb23_in/3 
* CEs [31] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [30] --> Loop 29 

#### Loops of eval_pat_insert_bb23_in/3 
* Loop 27: eval_pat_insert_bb23_in(V_i_3,B,C)->  eval_pat_insert_bb23_in(V_i_3',B',C)
                  [31>=V_i_3,V_i_3+1=V_i_3',B'=6,B=6] 
* Loop 28: eval_pat_insert_bb23_in(A,B,A) [A>=32,B=6] 
* Loop 29: eval_pat_insert_bb23_in(A,B,A) [31>=A,B=6] 

### Ranking functions of CR eval_pat_insert_bb23_in(V_i_3,B,C) 
* RF of phase [27]: [-V_i_3+32]

#### Partial ranking functions of CR eval_pat_insert_bb23_in(V_i_3,B,C) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    -V_i_3+32


### Resulting Chains:eval_pat_insert_bb23_in(V_i_3,B,C) 
* [[27],29]
* [[27],28]
* [29]
* [28]


### Merging Chains  eval_pat_insert_bb23_in/3 into  External patterns of execution 
* [[28,[27]]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 
* [[29,[27]]] --> 4 


### Specialization of cost equations eval_pat_insert_bb9_in/4 
* CE 12 is refined into CE [32] 
* CE 10 is refined into CE [33] 
* CE 11 is refined into CE [34] 


#### Refined cost equations eval_pat_insert_bb9_in/4 
* CE 32: eval_pat_insert_bb9_in(V_38,V_i_0,B,C) = 0
     [V_i_0>=V_38,B=3] 
* CE 33: eval_pat_insert_bb9_in(V_38,V_i_0,B,C) = 0
     [V_38>=V_i_0+1,B=2] 
* CE 34: eval_pat_insert_bb9_in(V_38,V_i_0,B,C) = 1+ eval_pat_insert_bb9_in(V_38,D,B,C)
     [V_38>=V_i_0+1,V_i_0+1=D] 

### Cost equations --> "Loop" of eval_pat_insert_bb9_in/4 
* CEs [34] --> Loop 30 
* CEs [32] --> Loop 31 
* CEs [33] --> Loop 32 

#### Loops of eval_pat_insert_bb9_in/4 
* Loop 30: eval_pat_insert_bb9_in(V_38,V_i_0,B,C)->  eval_pat_insert_bb9_in(V_38,V_i_0',B,C)
                  [V_38>=V_i_0+1,V_i_0+1=V_i_0'] 
* Loop 31: eval_pat_insert_bb9_in(V_38,V_i_0,B,C) [V_i_0>=V_38,B=3] 
* Loop 32: eval_pat_insert_bb9_in(V_38,V_i_0,B,C) [V_38>=V_i_0+1,B=2] 

### Ranking functions of CR eval_pat_insert_bb9_in(V_38,V_i_0,B,C) 
* RF of phase [30]: [V_38-V_i_0]

#### Partial ranking functions of CR eval_pat_insert_bb9_in(V_38,V_i_0,B,C) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V_38-V_i_0


### Resulting Chains:eval_pat_insert_bb9_in(V_38,V_i_0,B,C) 
* [[30],32]
* [[30],31]
* [32]
* [31]


### Merging Chains  eval_pat_insert_bb9_in/4 into  External patterns of execution 
* [[32],[32,[30]]] --> 1 
* [[31]] --> 2 
* [[31,[30]]] --> 3 


### Specialization of cost equations eval_pat_insert_74/2 
* CE 18 is refined into CE [35] 


#### Refined cost equations eval_pat_insert_74/2 
* CE 35: eval_pat_insert_74(V_i_3,B) = 0
     [] 

### Cost equations --> "Loop" of eval_pat_insert_74/2 
* CEs [35] --> Loop 33 

#### Loops of eval_pat_insert_74/2 
* Loop 33: eval_pat_insert_74(V_i_3,B) [] 

### Ranking functions of CR eval_pat_insert_74(V_i_3,B) 

#### Partial ranking functions of CR eval_pat_insert_74(V_i_3,B) 


### Resulting Chains:eval_pat_insert_74(V_i_3,B) 
* [33]


### Merging Chains  eval_pat_insert_74/2 into  External patterns of execution 
* [[33]] --> 1 


### Specialization of cost equations eval_pat_insert_bb14_in/2 
* CE 23 is refined into CE [36] 
* CE 22 is refined into CE [37] 
* CE 20 is refined into CE [38] 
* CE 21 is refined into CE [39] 


#### Refined cost equations eval_pat_insert_bb14_in/2 
* CE 36: eval_pat_insert_bb14_in(V_i_1,B) = 0
     [V_i_1>=0,B=8] 
* CE 37: eval_pat_insert_bb14_in(V_i_1,B) = 0
     [V_i_1>=0,B=7] 
* CE 38: eval_pat_insert_bb14_in(V_i_1,B) = 1+ eval_pat_insert_bb14_in(V_i_1,B)
     [V_i_1>=0] 
* CE 39: eval_pat_insert_bb14_in(V_i_1,B) = 1+ eval_pat_insert_bb14_in(C,B)
     [V_i_1>=0,V_i_1+1=C] 

### Cost equations --> "Loop" of eval_pat_insert_bb14_in/2 
* CEs [38] --> Loop 34 
* CEs [39] --> Loop 35 
* CEs [36] --> Loop 36 
* CEs [37] --> Loop 37 

#### Loops of eval_pat_insert_bb14_in/2 
* Loop 34: eval_pat_insert_bb14_in(V_i_1,B)->  eval_pat_insert_bb14_in(V_i_1,B)
                  [V_i_1>=0] 
* Loop 35: eval_pat_insert_bb14_in(V_i_1,B)->  eval_pat_insert_bb14_in(V_i_1',B)
                  [V_i_1>=0,V_i_1+1=V_i_1'] 
* Loop 36: eval_pat_insert_bb14_in(V_i_1,B) [V_i_1>=0,B=8] 
* Loop 37: eval_pat_insert_bb14_in(V_i_1,B) [V_i_1>=0,B=7] 

### Ranking functions of CR eval_pat_insert_bb14_in(V_i_1,B) 

#### Partial ranking functions of CR eval_pat_insert_bb14_in(V_i_1,B) 


### Resulting Chains:eval_pat_insert_bb14_in(V_i_1,B) 
* [[34,35]]...
* [[34,35],37]
* [[34,35],36]
* [37]
* [36]


### Merging Chains  eval_pat_insert_bb14_in/2 into  External patterns of execution 
* [[37],[37,[34,35]]] --> 1 
* [[36],[36,[34,35]]] --> 2 
* [[[34,35]]] --> 3 


### Specialization of cost equations loop_cont_eval_pat_insert_bb14_in/2 
* CE 25 is refined into CE [40] 
* CE 24 is refined into CE [41] 


#### Refined cost equations loop_cont_eval_pat_insert_bb14_in/2 
* CE 40: loop_cont_eval_pat_insert_bb14_in(B,A) = 0
     [B=8] 
* CE 41: loop_cont_eval_pat_insert_bb14_in(B,A) = 0
     [B=7] 

### Cost equations --> "Loop" of loop_cont_eval_pat_insert_bb14_in/2 
* CEs [40] --> Loop 38 
* CEs [41] --> Loop 39 

#### Loops of loop_cont_eval_pat_insert_bb14_in/2 
* Loop 38: loop_cont_eval_pat_insert_bb14_in(B,A) [B=8] 
* Loop 39: loop_cont_eval_pat_insert_bb14_in(B,A) [B=7] 

### Ranking functions of CR loop_cont_eval_pat_insert_bb14_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_pat_insert_bb14_in(B,A) 


### Resulting Chains:loop_cont_eval_pat_insert_bb14_in(B,A) 
* [39]
* [38]


### Merging Chains  loop_cont_eval_pat_insert_bb14_in/2 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations eval_pat_insert_38/1 
* CE 19 is refined into CE [42,43,44] 


#### Refined cost equations eval_pat_insert_38/1 
* CE 42: eval_pat_insert_38(B) = 1+ eval_pat_insert_bb14_in(C,D):1+ loop_cont_eval_pat_insert_bb14_in(E,B):1
     [E=7,D=7,C=0] 
* CE 43: eval_pat_insert_38(B) = 1+ eval_pat_insert_bb14_in(C,D):2+ loop_cont_eval_pat_insert_bb14_in(E,B):2
     [E=8,D=8,C=0] 
* CE 44: eval_pat_insert_38(B) = 1+ eval_pat_insert_bb14_in(C,D):3
     [C=0] 

### Cost equations --> "Loop" of eval_pat_insert_38/1 
* CEs [44] --> Loop 40 
* CEs [42,43] --> Loop 41 

#### Loops of eval_pat_insert_38/1 
* Loop 40: eval_pat_insert_38(B) [] 
* Loop 41: eval_pat_insert_38(B) [] 

### Ranking functions of CR eval_pat_insert_38(B) 

#### Partial ranking functions of CR eval_pat_insert_38(B) 


### Resulting Chains:eval_pat_insert_38(B) 
* [41]
* [40]...


### Merging Chains  eval_pat_insert_38/1 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations loop_cont_eval_pat_insert_bb9_in/3 
* CE 14 is refined into CE [45,46] 
* CE 13 is refined into CE [47] 


#### Refined cost equations loop_cont_eval_pat_insert_bb9_in/3 
* CE 45: loop_cont_eval_pat_insert_bb9_in(E,A,B) = 0+ eval_pat_insert_38(B):1
     [E=3] 
* CE 46: loop_cont_eval_pat_insert_bb9_in(E,A,B) = 0+ eval_pat_insert_38(B):2
     [E=3] 
* CE 47: loop_cont_eval_pat_insert_bb9_in(E,A,B) = 0
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_pat_insert_bb9_in/3 
* CEs [45] --> Loop 42 
* CEs [47] --> Loop 43 
* CEs [46] --> Loop 44 

#### Loops of loop_cont_eval_pat_insert_bb9_in/3 
* Loop 42: loop_cont_eval_pat_insert_bb9_in(E,A,B) [E=3] 
* Loop 43: loop_cont_eval_pat_insert_bb9_in(E,A,B) [E=2] 
* Loop 44: loop_cont_eval_pat_insert_bb9_in(E,A,B) [E=3] 

### Ranking functions of CR loop_cont_eval_pat_insert_bb9_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_pat_insert_bb9_in(E,A,B) 


### Resulting Chains:loop_cont_eval_pat_insert_bb9_in(E,A,B) 
* [44]...
* [43]
* [42]


### Merging Chains  loop_cont_eval_pat_insert_bb9_in/3 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 
* [[44]] --> 3 


### Specialization of cost equations loop_cont_eval_pat_insert_bb3_in/4 
* CE 9 is refined into CE [48,49,50,51] 
* CE 8 is refined into CE [52,53,54,55,56] 


#### Refined cost equations loop_cont_eval_pat_insert_bb3_in/4 
* CE 48: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) = 1+ eval_pat_insert_bb23_in(A,G,H):1+ eval_pat_insert_74(I,C):1
     [31>=A,I=32,H=32,G=6,F=5] 
* CE 49: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) = 1+ eval_pat_insert_bb23_in(A,G,A):2+ eval_pat_insert_74(A,C):1
     [31>=A,G=6,F=5] 
* CE 50: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) = 1+ eval_pat_insert_bb23_in(A,G,A):3+ eval_pat_insert_74(A,C):1
     [A>=32,G=6,F=5] 
* CE 51: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) = 1+ eval_pat_insert_bb23_in(A,G,H):4+ eval_pat_insert_74(H,C):1
     [H>=A+1,31>=H,G=6,F=5] 
* CE 52: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) = 1+ eval_pat_insert_bb9_in(A,B,G,H):1+ loop_cont_eval_pat_insert_bb9_in(I,H,C):1
     [A>=B+1,I=2,G=2,F=4] 
* CE 53: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) = 1+ eval_pat_insert_bb9_in(A,B,G,H):2+ loop_cont_eval_pat_insert_bb9_in(I,H,C):2
     [B>=A,I=3,G=3,F=4] 
* CE 54: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) = 1+ eval_pat_insert_bb9_in(A,B,G,H):2+ loop_cont_eval_pat_insert_bb9_in(I,H,C):3
     [B>=A,I=3,G=3,F=4] 
* CE 55: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) = 1+ eval_pat_insert_bb9_in(A,B,G,H):3+ loop_cont_eval_pat_insert_bb9_in(I,H,C):2
     [A>=B+1,I=3,G=3,F=4] 
* CE 56: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) = 1+ eval_pat_insert_bb9_in(A,B,G,H):3+ loop_cont_eval_pat_insert_bb9_in(I,H,C):3
     [A>=B+1,I=3,G=3,F=4] 

### Cost equations --> "Loop" of loop_cont_eval_pat_insert_bb3_in/4 
* CEs [56] --> Loop 45 
* CEs [54] --> Loop 46 
* CEs [50] --> Loop 47 
* CEs [48,49,51] --> Loop 48 
* CEs [52,55] --> Loop 49 
* CEs [53] --> Loop 50 

#### Loops of loop_cont_eval_pat_insert_bb3_in/4 
* Loop 45: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) [A>=B+1,F=4] 
* Loop 46: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) [B>=A,F=4] 
* Loop 47: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) [A>=32,F=5] 
* Loop 48: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) [31>=A,F=5] 
* Loop 49: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) [A>=B+1,F=4] 
* Loop 50: loop_cont_eval_pat_insert_bb3_in(F,A,B,C) [B>=A,F=4] 

### Ranking functions of CR loop_cont_eval_pat_insert_bb3_in(F,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_pat_insert_bb3_in(F,A,B,C) 


### Resulting Chains:loop_cont_eval_pat_insert_bb3_in(F,A,B,C) 
* [50]
* [49]
* [48]
* [47]
* [46]...
* [45]...


### Merging Chains  loop_cont_eval_pat_insert_bb3_in/4 into  External patterns of execution 
* [[50]] --> 1 
* [[49]] --> 2 
* [[48]] --> 3 
* [[47]] --> 4 
* [[46]] --> 5 
* [[45]] --> 6 


### Specialization of cost equations eval_pat_insert_bb0_in/1 
* CE 3 is refined into CE [57,58,59,60,61,62] 
* CE 4 is refined into CE [63] 


#### Refined cost equations eval_pat_insert_bb0_in/1 
* CE 57: eval_pat_insert_bb0_in(B) = 1+ eval_pat_insert_bb3_in(C,D,E):1+ loop_cont_eval_pat_insert_bb3_in(F,D,G,B):1
     [0>=D,G=0,F=4,E=0,C=4] 
* CE 58: eval_pat_insert_bb0_in(B) = 1+ eval_pat_insert_bb3_in(C,D,E):1+ loop_cont_eval_pat_insert_bb3_in(F,D,G,B):2
     [D>=1,G=0,F=4,E=0,C=4] 
* CE 59: eval_pat_insert_bb0_in(B) = 1+ eval_pat_insert_bb3_in(C,D,E):1+ loop_cont_eval_pat_insert_bb3_in(F,D,G,B):5
     [0>=D,G=0,F=4,E=0,C=4] 
* CE 60: eval_pat_insert_bb0_in(B) = 1+ eval_pat_insert_bb3_in(C,D,E):1+ loop_cont_eval_pat_insert_bb3_in(F,D,G,B):6
     [D>=1,G=0,F=4,E=0,C=4] 
* CE 61: eval_pat_insert_bb0_in(B) = 1+ eval_pat_insert_bb3_in(C,D,E):2+ loop_cont_eval_pat_insert_bb3_in(F,G,E,B):3
     [G=1,F=5,D=1,C=5] 
* CE 62: eval_pat_insert_bb0_in(B) = 1+ eval_pat_insert_bb3_in(C,D,E):3
     [] 
* CE 63: eval_pat_insert_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_pat_insert_bb0_in/1 
* CEs [57,58,61,63] --> Loop 51 
* CEs [59,60,62] --> Loop 52 

#### Loops of eval_pat_insert_bb0_in/1 
* Loop 51: eval_pat_insert_bb0_in(B) [] 
* Loop 52: eval_pat_insert_bb0_in(B) [] 

### Ranking functions of CR eval_pat_insert_bb0_in(B) 

#### Partial ranking functions of CR eval_pat_insert_bb0_in(B) 


### Resulting Chains:eval_pat_insert_bb0_in(B) 
* [52]...
* [51]


### Merging Chains  eval_pat_insert_bb0_in/1 into  External patterns of execution 
* [[51]] --> 1 
* [[52]] --> 2 


### Specialization of cost equations eval_pat_insert_start/1 
* CE 2 is refined into CE [64,65] 


#### Refined cost equations eval_pat_insert_start/1 
* CE 64: eval_pat_insert_start(B) = 0+ eval_pat_insert_bb0_in(B):1
     [] 
* CE 65: eval_pat_insert_start(B) = 0+ eval_pat_insert_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_pat_insert_start/1 
* CEs [65] --> Loop 53 
* CEs [64] --> Loop 54 

#### Loops of eval_pat_insert_start/1 
* Loop 53: eval_pat_insert_start(B) [] 
* Loop 54: eval_pat_insert_start(B) [] 

### Ranking functions of CR eval_pat_insert_start(B) 

#### Partial ranking functions of CR eval_pat_insert_start(B) 


### Resulting Chains:eval_pat_insert_start(B) 
* [54]
* [53]...


### Merging Chains  eval_pat_insert_start/1 into  External patterns of execution 
* [[54]] --> 1 
* [[53]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [26] 

 * loop 26:eval_pat_insert_bb3_in(B,C,D) -> [eval_pat_insert_bb3_in(B',C',D')] 
1
#### Cost of phase [26]:eval_pat_insert_bb3_in(B,C,D) -> [eval_pat_insert_bb3_in(B',C',D')] 
1*it(26)+0
#### Cost of phase [26]:eval_pat_insert_bb3_in(B,C,D) -> [eval_pat_insert_bb3_in(B',C',D')] 
1*it(26)+0
#### Cost of phase [26]:eval_pat_insert_bb3_in(B,C,D) -> [eval_pat_insert_bb3_in(B',C',D')] 
1*it(26)+0
#### Cost of chains of eval_pat_insert_bb3_in(B,C,D):
* Chain [[26]]...: 1*it(26)+0
  with precondition: [] 

* Chain [[26],25]: 1*it(26)+0
  with precondition: [B=4,D=0] 

* Chain [[26],24]: 1*it(26)+0
  with precondition: [B=5,C=1] 

* Chain [25]: 0
  with precondition: [B=4,D=0] 

* Chain [24]: 0
  with precondition: [B=5,C=1] 


#### Cost of loops [27] 

 * loop 27:eval_pat_insert_bb23_in(V_i_3,B,C) -> [eval_pat_insert_bb23_in(V_i_3',B',C')] 
1
#### Cost of phase [27]:eval_pat_insert_bb23_in(V_i_3,B,C) -> [eval_pat_insert_bb23_in(V_i_3',B',C')] 
1*it(27)+0
  Such that:it(27) =< -V_i_3+32
it(27) =< -V_i_3+V_i_3'

#### Cost of phase [27]:eval_pat_insert_bb23_in(V_i_3,B,C) -> [eval_pat_insert_bb23_in(V_i_3',B',C')] 
1*it(27)+0
  Such that:it(27) =< -V_i_3+32
it(27) =< -V_i_3+V_i_3'

#### Cost of chains of eval_pat_insert_bb23_in(V_i_3,B,C):
* Chain [[27],29]: 1*it(27)+0
  Such that:it(27) =< -V_i_3+C

  with precondition: [B=6,31>=C,C>=V_i_3+1] 

* Chain [[27],28]: 1*it(27)+0
  Such that:it(27) =< -V_i_3+32

  with precondition: [B=6,C=32,31>=V_i_3] 

* Chain [29]: 0
  with precondition: [B=6,V_i_3=C,31>=V_i_3] 

* Chain [28]: 0
  with precondition: [B=6,V_i_3=C,V_i_3>=32] 


#### Cost of loops [30] 

 * loop 30:eval_pat_insert_bb9_in(V_38,V_i_0,B,C) -> [eval_pat_insert_bb9_in(V_38',V_i_0',B',C')] 
1
#### Cost of phase [30]:eval_pat_insert_bb9_in(V_38,V_i_0,B,C) -> [eval_pat_insert_bb9_in(V_38',V_i_0',B',C')] 
1*it(30)+0
  Such that:it(30) =< V_38-V_i_0
it(30) =< V_38-V_i_0-V_38'+V_i_0'

#### Cost of phase [30]:eval_pat_insert_bb9_in(V_38,V_i_0,B,C) -> [eval_pat_insert_bb9_in(V_38',V_i_0',B',C')] 
1*it(30)+0
  Such that:it(30) =< V_38-V_i_0
it(30) =< V_38-V_i_0-V_38'+V_i_0'

#### Cost of chains of eval_pat_insert_bb9_in(V_38,V_i_0,B,C):
* Chain [[30],32]: 1*it(30)+0
  Such that:it(30) =< V_38-V_i_0

  with precondition: [B=2,V_38>=V_i_0+2] 

* Chain [[30],31]: 1*it(30)+0
  Such that:it(30) =< V_38-V_i_0

  with precondition: [B=3,V_38>=V_i_0+1] 

* Chain [32]: 0
  with precondition: [B=2,V_38>=V_i_0+1] 

* Chain [31]: 0
  with precondition: [B=3,V_i_0>=V_38] 


#### Cost of chains of eval_pat_insert_74(V_i_3,B):
* Chain [33]: 0
  with precondition: [] 


#### Cost of loops [34,35] 

 * loop 34:eval_pat_insert_bb14_in(V_i_1,B) -> [eval_pat_insert_bb14_in(V_i_1',B')] 
1
 * loop 35:eval_pat_insert_bb14_in(V_i_1,B) -> [eval_pat_insert_bb14_in(V_i_1',B')] 
1
#### Cost of phase [34,35]:eval_pat_insert_bb14_in(V_i_1,B) -> [eval_pat_insert_bb14_in(V_i_1',B')] 
2*it(34)+0
#### Cost of phase [34,35]:eval_pat_insert_bb14_in(V_i_1,B) -> [eval_pat_insert_bb14_in(V_i_1',B')] 
2*it(34)+0
#### Cost of phase [34,35]:eval_pat_insert_bb14_in(V_i_1,B) -> [eval_pat_insert_bb14_in(V_i_1',B')] 
2*it(34)+0
#### Cost of chains of eval_pat_insert_bb14_in(V_i_1,B):
* Chain [[34,35]]...: 2*it(34)+0
  with precondition: [V_i_1>=0] 

* Chain [[34,35],37]: 2*it(34)+0
  with precondition: [B=7,V_i_1>=0] 

* Chain [[34,35],36]: 2*it(34)+0
  with precondition: [B=8,V_i_1>=0] 

* Chain [37]: 0
  with precondition: [B=7,V_i_1>=0] 

* Chain [36]: 0
  with precondition: [B=8,V_i_1>=0] 


#### Cost of chains of loop_cont_eval_pat_insert_bb14_in(B,A):
* Chain [39]: 0
  with precondition: [B=7] 

* Chain [38]: 0
  with precondition: [B=8] 


#### Cost of chains of eval_pat_insert_38(B):
* Chain [41]: 1*aux(5)+0
  with precondition: [] 

* Chain [40]...: 2*s(8)+1
  with precondition: [] 


#### Cost of chains of loop_cont_eval_pat_insert_bb9_in(E,A,B):
* Chain [44]...: 2*s(9)+1
  with precondition: [E=3] 

* Chain [43]: 0
  with precondition: [E=2] 

* Chain [42]: 1*s(10)+0
  with precondition: [E=3] 


#### Cost of chains of loop_cont_eval_pat_insert_bb3_in(F,A,B,C):
* Chain [50]: 1*s(11)+1
  with precondition: [F=4,B>=A] 

* Chain [49]: 2*s(12)+1*s(14)+1
  Such that:aux(6) =< A-B
s(12) =< aux(6)

  with precondition: [F=4,A>=B+1] 

* Chain [48]: 1*s(15)+1*s(16)+1
  Such that:s(16) =< -A+31
s(15) =< -A+32

  with precondition: [F=5,31>=A] 

* Chain [47]: 1
  with precondition: [F=5,A>=32] 

* Chain [46]...: 2*s(17)+2
  with precondition: [F=4,B>=A] 

* Chain [45]...: 1*s(18)+2*s(19)+2
  Such that:s(18) =< A-B

  with precondition: [F=4,A>=B+1] 


#### Cost of chains of eval_pat_insert_bb0_in(B):
* Chain [52]...: 1*aux(7)+0
  with precondition: [] 

* Chain [51]: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_pat_insert_start(B):
* Chain [54]: 1*s(35)+0
  with precondition: [] 

* Chain [53]...: 1*s(36)+0
  with precondition: [] 


Closed-form bounds of eval_pat_insert_start(B): 
-------------------------------------
* Chain [54] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [53]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_pat_insert_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 79 ms.
* Invariants computed in 89 ms.
   - Backward Invariants 51 ms.
   - Transitive Invariants 15 ms.
* Refinement performed in 180 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 134 ms.
   - Equation cost structures 61 ms.
   - Phase cost structures 26 ms.
   - Chain cost structures 42 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 611 ms.

