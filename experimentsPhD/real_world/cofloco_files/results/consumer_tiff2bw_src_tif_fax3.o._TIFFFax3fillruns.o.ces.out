Warning: Ignored call to eval__TIFFFax3fillruns_stop/1 in equation eval__TIFFFax3fillruns_173/1 
Warning: Ignored call to eval__TIFFFax3fillruns_stop/1 in equation loop_cont_eval__TIFFFax3fillruns_bb3_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval__TIFFFax3fillruns_bb12_in/3]
1. recursive  : [eval__TIFFFax3fillruns_bb38_in/3]
2. recursive  : [eval__TIFFFax3fillruns_bb42_in/3]
3. recursive  : [eval__TIFFFax3fillruns_bb16_in/3]
4. recursive  : [eval__TIFFFax3fillruns_NewDefault24_in/1,eval__TIFFFax3fillruns_NewDefault_in/1,eval__TIFFFax3fillruns_bb10_in/1,eval__TIFFFax3fillruns_bb15_in/2,eval__TIFFFax3fillruns_bb18_in/1,eval__TIFFFax3fillruns_bb20_in/1,eval__TIFFFax3fillruns_bb21_in/1,eval__TIFFFax3fillruns_bb22_in/1,eval__TIFFFax3fillruns_bb23_in/1,eval__TIFFFax3fillruns_bb24_in/1,eval__TIFFFax3fillruns_bb25_in/1,eval__TIFFFax3fillruns_bb26_in/1,eval__TIFFFax3fillruns_bb27_in/1,eval__TIFFFax3fillruns_bb29_in/1,eval__TIFFFax3fillruns_bb30_in/1,eval__TIFFFax3fillruns_bb32_in/1,eval__TIFFFax3fillruns_bb36_in/1,eval__TIFFFax3fillruns_bb3_in/1,eval__TIFFFax3fillruns_bb41_in/2,eval__TIFFFax3fillruns_bb44_in/1,eval__TIFFFax3fillruns_bb46_in/1,eval__TIFFFax3fillruns_bb47_in/1,eval__TIFFFax3fillruns_bb48_in/1,eval__TIFFFax3fillruns_bb49_in/1,eval__TIFFFax3fillruns_bb50_in/1,eval__TIFFFax3fillruns_bb51_in/1,eval__TIFFFax3fillruns_bb52_in/1,eval__TIFFFax3fillruns_bb53_in/1,eval__TIFFFax3fillruns_bb55_in/1,eval__TIFFFax3fillruns_bb56_in/1,eval__TIFFFax3fillruns_bb6_in/1,loop_cont_eval__TIFFFax3fillruns_bb12_in/3,loop_cont_eval__TIFFFax3fillruns_bb16_in/2,loop_cont_eval__TIFFFax3fillruns_bb38_in/3,loop_cont_eval__TIFFFax3fillruns_bb42_in/2]
5. non_recursive  : [eval__TIFFFax3fillruns_173/1]
6. non_recursive  : [eval__TIFFFax3fillruns_172/1]
7. non_recursive  : [loop_cont_eval__TIFFFax3fillruns_bb3_in/2]
8. non_recursive  : [eval__TIFFFax3fillruns_bb2_in/1]
9. non_recursive  : [eval__TIFFFax3fillruns_bb0_in/1]
10. non_recursive  : [eval__TIFFFax3fillruns_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval__TIFFFax3fillruns_bb12_in/3
1. SCC is partially evaluated into eval__TIFFFax3fillruns_bb38_in/3
2. SCC is partially evaluated into eval__TIFFFax3fillruns_bb42_in/3
3. SCC is partially evaluated into eval__TIFFFax3fillruns_bb16_in/3
4. SCC is partially evaluated into eval__TIFFFax3fillruns_bb3_in/1
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval__TIFFFax3fillruns_bb3_in/2
8. SCC is partially evaluated into eval__TIFFFax3fillruns_bb2_in/1
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval__TIFFFax3fillruns_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval__TIFFFax3fillruns_bb12_in/3 
* CE 109 is refined into CE [124] 
* CE 108 is refined into CE [125] 
* CE 112 is refined into CE [126] 
* CE 111 is refined into CE [127] 
* CE 110 is refined into CE [128] 


#### Refined cost equations eval__TIFFFax3fillruns_bb12_in/3 
* CE 124: eval__TIFFFax3fillruns_bb12_in(A,B,A) = 0
     [A>=1,B=2] 
* CE 125: eval__TIFFFax3fillruns_bb12_in(A,B,A) = 0
     [0>=A+1,B=2] 
* CE 126: eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) = 0
     [C=0,B=2,V_n_0=0] 
* CE 127: eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) = 1+ eval__TIFFFax3fillruns_bb12_in(D,E,C)
     [V_n_0>=1,V_n_0=D+1,E=2,B=2] 
* CE 128: eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) = 1+ eval__TIFFFax3fillruns_bb12_in(D,E,C)
     [0>=V_n_0+1,V_n_0=D+1,E=2,B=2] 

### Cost equations --> "Loop" of eval__TIFFFax3fillruns_bb12_in/3 
* CEs [127] --> Loop 24 
* CEs [128] --> Loop 25 
* CEs [124] --> Loop 26 
* CEs [125] --> Loop 27 
* CEs [126] --> Loop 28 

#### Loops of eval__TIFFFax3fillruns_bb12_in/3 
* Loop 24: eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C)->  eval__TIFFFax3fillruns_bb12_in(V_n_0',B',C)
                  [V_n_0>=1,V_n_0=V_n_0'+1,B'=2,B=2] 
* Loop 25: eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C)->  eval__TIFFFax3fillruns_bb12_in(V_n_0',B',C)
                  [0>=V_n_0+1,V_n_0=V_n_0'+1,B'=2,B=2] 
* Loop 26: eval__TIFFFax3fillruns_bb12_in(A,B,A) [A>=1,B=2] 
* Loop 27: eval__TIFFFax3fillruns_bb12_in(A,B,A) [0>=A+1,B=2] 
* Loop 28: eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) [C=0,B=2,V_n_0=0] 

### Ranking functions of CR eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) 
* RF of phase [24]: [V_n_0]

#### Partial ranking functions of CR eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V_n_0


### Resulting Chains:eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) 
* [[25]]...
* [[25],27]
* [[24],28]
* [[24],26]
* [28]
* [27]
* [26]


### Merging Chains  eval__TIFFFax3fillruns_bb12_in/3 into  External patterns of execution 
* [[28]] --> 1 
* [[28,[24]]] --> 2 
* [[27]] --> 3 
* [[26]] --> 4 
* [[27,[25]]] --> 5 
* [[26,[24]]] --> 6 
* [[[25]]] --> 7 


### Specialization of cost equations eval__TIFFFax3fillruns_bb38_in/3 
* CE 117 is refined into CE [129] 
* CE 116 is refined into CE [130] 
* CE 120 is refined into CE [131] 
* CE 119 is refined into CE [132] 
* CE 118 is refined into CE [133] 


#### Refined cost equations eval__TIFFFax3fillruns_bb38_in/3 
* CE 129: eval__TIFFFax3fillruns_bb38_in(A,B,A) = 0
     [A>=1,B=4] 
* CE 130: eval__TIFFFax3fillruns_bb38_in(A,B,A) = 0
     [0>=A+1,B=4] 
* CE 131: eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) = 0
     [C=0,B=4,V_n_2=0] 
* CE 132: eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) = 1+ eval__TIFFFax3fillruns_bb38_in(D,E,C)
     [V_n_2>=1,V_n_2=D+1,E=4,B=4] 
* CE 133: eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) = 1+ eval__TIFFFax3fillruns_bb38_in(D,E,C)
     [0>=V_n_2+1,V_n_2=D+1,E=4,B=4] 

### Cost equations --> "Loop" of eval__TIFFFax3fillruns_bb38_in/3 
* CEs [132] --> Loop 29 
* CEs [133] --> Loop 30 
* CEs [129] --> Loop 31 
* CEs [130] --> Loop 32 
* CEs [131] --> Loop 33 

#### Loops of eval__TIFFFax3fillruns_bb38_in/3 
* Loop 29: eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C)->  eval__TIFFFax3fillruns_bb38_in(V_n_2',B',C)
                  [V_n_2>=1,V_n_2=V_n_2'+1,B'=4,B=4] 
* Loop 30: eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C)->  eval__TIFFFax3fillruns_bb38_in(V_n_2',B',C)
                  [0>=V_n_2+1,V_n_2=V_n_2'+1,B'=4,B=4] 
* Loop 31: eval__TIFFFax3fillruns_bb38_in(A,B,A) [A>=1,B=4] 
* Loop 32: eval__TIFFFax3fillruns_bb38_in(A,B,A) [0>=A+1,B=4] 
* Loop 33: eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) [C=0,B=4,V_n_2=0] 

### Ranking functions of CR eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) 
* RF of phase [29]: [V_n_2]

#### Partial ranking functions of CR eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V_n_2


### Resulting Chains:eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) 
* [[30]]...
* [[30],32]
* [[29],33]
* [[29],31]
* [33]
* [32]
* [31]


### Merging Chains  eval__TIFFFax3fillruns_bb38_in/3 into  External patterns of execution 
* [[33]] --> 1 
* [[33,[29]]] --> 2 
* [[32]] --> 3 
* [[31]] --> 4 
* [[32,[30]]] --> 5 
* [[31,[29]]] --> 6 
* [[[30]]] --> 7 


### Specialization of cost equations eval__TIFFFax3fillruns_bb42_in/3 
* CE 123 is refined into CE [134] 
* CE 122 is refined into CE [135] 
* CE 121 is refined into CE [136] 


#### Refined cost equations eval__TIFFFax3fillruns_bb42_in/3 
* CE 134: eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) = 0
     [V_n_2>=1,B=5,V_nw_1=1] 
* CE 135: eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) = 1+ eval__TIFFFax3fillruns_bb42_in(V_n_2,C,D)
     [V_n_2+7>=8*V_nw_1,V_nw_1>=2,V_nw_1=C+1,D=5,B=5] 
* CE 136: eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) = 1+ eval__TIFFFax3fillruns_bb42_in(V_n_2,C,D)
     [V_n_2+7>=8*V_nw_1,0>=V_nw_1,V_nw_1=C+1,D=5,B=5] 

### Cost equations --> "Loop" of eval__TIFFFax3fillruns_bb42_in/3 
* CEs [135] --> Loop 34 
* CEs [136] --> Loop 35 
* CEs [134] --> Loop 36 

#### Loops of eval__TIFFFax3fillruns_bb42_in/3 
* Loop 34: eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B)->  eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1',B')
                  [V_n_2+7>=8*V_nw_1,V_nw_1>=2,V_nw_1=V_nw_1'+1,B'=5,B=5] 
* Loop 35: eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B)->  eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1',B')
                  [V_n_2+7>=8*V_nw_1,0>=V_nw_1,V_nw_1=V_nw_1'+1,B'=5,B=5] 
* Loop 36: eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) [V_n_2>=1,B=5,V_nw_1=1] 

### Ranking functions of CR eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) 
* RF of phase [34]: [V_nw_1-1]

#### Partial ranking functions of CR eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V_nw_1-1


### Resulting Chains:eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) 
* [[35]]...
* [[34],36]
* [36]


### Merging Chains  eval__TIFFFax3fillruns_bb42_in/3 into  External patterns of execution 
* [[36]] --> 1 
* [[36,[34]]] --> 2 
* [[[35]]] --> 3 


### Specialization of cost equations eval__TIFFFax3fillruns_bb16_in/3 
* CE 115 is refined into CE [137] 
* CE 114 is refined into CE [138] 
* CE 113 is refined into CE [139] 


#### Refined cost equations eval__TIFFFax3fillruns_bb16_in/3 
* CE 137: eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) = 0
     [V_n_0>=1,B=3,V_nw_0=1] 
* CE 138: eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) = 1+ eval__TIFFFax3fillruns_bb16_in(V_n_0,C,D)
     [V_n_0+7>=8*V_nw_0,V_nw_0>=2,V_nw_0=C+1,D=3,B=3] 
* CE 139: eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) = 1+ eval__TIFFFax3fillruns_bb16_in(V_n_0,C,D)
     [V_n_0+7>=8*V_nw_0,0>=V_nw_0,V_nw_0=C+1,D=3,B=3] 

### Cost equations --> "Loop" of eval__TIFFFax3fillruns_bb16_in/3 
* CEs [138] --> Loop 37 
* CEs [139] --> Loop 38 
* CEs [137] --> Loop 39 

#### Loops of eval__TIFFFax3fillruns_bb16_in/3 
* Loop 37: eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B)->  eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0',B')
                  [V_n_0+7>=8*V_nw_0,V_nw_0>=2,V_nw_0=V_nw_0'+1,B'=3,B=3] 
* Loop 38: eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B)->  eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0',B')
                  [V_n_0+7>=8*V_nw_0,0>=V_nw_0,V_nw_0=V_nw_0'+1,B'=3,B=3] 
* Loop 39: eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) [V_n_0>=1,B=3,V_nw_0=1] 

### Ranking functions of CR eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) 
* RF of phase [37]: [V_nw_0-1]

#### Partial ranking functions of CR eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) 
* Partial RF of phase [37]:
  - RF of loop [37:1]:
    V_nw_0-1


### Resulting Chains:eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) 
* [[38]]...
* [[37],39]
* [39]


### Merging Chains  eval__TIFFFax3fillruns_bb16_in/3 into  External patterns of execution 
* [[39]] --> 1 
* [[39,[37]]] --> 2 
* [[[38]]] --> 3 


### Specialization of cost equations eval__TIFFFax3fillruns_bb3_in/1 
* CE 105 is refined into CE [140] 
* CE 104 is refined into CE [141] 
* CE 4 is refined into CE [142] 
* CE 5 is refined into CE [143] 
* CE 6 is refined into CE [144] 
* CE 7 is discarded (unfeasible) 
* CE 8 is refined into CE [145,146,147,148,149,150] 
* CE 9 is refined into CE [151] 
* CE 10 is discarded (unfeasible) 
* CE 11 is discarded (unfeasible) 
* CE 12 is refined into CE [152,153,154] 
* CE 13 is refined into CE [155] 
* CE 14 is refined into CE [156] 
* CE 15 is refined into CE [157] 
* CE 16 is refined into CE [158] 
* CE 17 is discarded (unfeasible) 
* CE 18 is refined into CE [159,160] 
* CE 19 is refined into CE [161] 
* CE 20 is discarded (unfeasible) 
* CE 21 is discarded (unfeasible) 
* CE 22 is refined into CE [162,163,164] 
* CE 23 is discarded (unfeasible) 
* CE 24 is refined into CE [165] 
* CE 25 is refined into CE [166] 
* CE 26 is refined into CE [167] 
* CE 27 is discarded (unfeasible) 
* CE 28 is refined into CE [168,169] 
* CE 29 is refined into CE [170] 
* CE 30 is discarded (unfeasible) 
* CE 31 is discarded (unfeasible) 
* CE 32 is refined into CE [171,172,173] 
* CE 33 is discarded (unfeasible) 
* CE 34 is refined into CE [174] 
* CE 35 is refined into CE [175] 
* CE 36 is refined into CE [176] 
* CE 37 is discarded (unfeasible) 
* CE 38 is refined into CE [177,178,179,180,181,182,183,184,185,186,187,188,189,190] 
* CE 39 is refined into CE [191] 
* CE 40 is discarded (unfeasible) 
* CE 41 is discarded (unfeasible) 
* CE 42 is refined into CE [192,193,194] 
* CE 43 is refined into CE [195,196,197] 
* CE 44 is refined into CE [198] 
* CE 45 is refined into CE [199] 
* CE 46 is refined into CE [200] 
* CE 47 is discarded (unfeasible) 
* CE 48 is refined into CE [201,202] 
* CE 49 is refined into CE [203] 
* CE 50 is discarded (unfeasible) 
* CE 51 is discarded (unfeasible) 
* CE 52 is refined into CE [204,205,206] 
* CE 53 is discarded (unfeasible) 
* CE 54 is refined into CE [207] 
* CE 55 is refined into CE [208] 
* CE 56 is refined into CE [209] 
* CE 57 is discarded (unfeasible) 
* CE 58 is refined into CE [210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235] 
* CE 59 is refined into CE [236] 
* CE 60 is discarded (unfeasible) 
* CE 61 is discarded (unfeasible) 
* CE 62 is refined into CE [237,238,239] 
* CE 63 is refined into CE [240,241,242,243,244,245] 
* CE 64 is refined into CE [246] 
* CE 65 is refined into CE [247] 
* CE 66 is refined into CE [248] 
* CE 67 is discarded (unfeasible) 
* CE 68 is refined into CE [249,250,251,252,253,254] 
* CE 69 is refined into CE [255] 
* CE 70 is discarded (unfeasible) 
* CE 71 is discarded (unfeasible) 
* CE 72 is refined into CE [256,257,258] 
* CE 73 is refined into CE [259] 
* CE 74 is refined into CE [260] 
* CE 75 is refined into CE [261] 
* CE 76 is refined into CE [262] 
* CE 77 is discarded (unfeasible) 
* CE 78 is refined into CE [263,264,265,266,267,268] 
* CE 79 is refined into CE [269] 
* CE 80 is discarded (unfeasible) 
* CE 81 is discarded (unfeasible) 
* CE 82 is refined into CE [270,271,272] 
* CE 83 is refined into CE [273] 
* CE 84 is refined into CE [274] 
* CE 85 is refined into CE [275] 
* CE 86 is refined into CE [276] 
* CE 87 is discarded (unfeasible) 
* CE 88 is refined into CE [277,278,279,280,281,282] 
* CE 89 is refined into CE [283] 
* CE 90 is discarded (unfeasible) 
* CE 91 is discarded (unfeasible) 
* CE 92 is refined into CE [284,285,286] 
* CE 93 is refined into CE [287] 
* CE 94 is refined into CE [288] 
* CE 95 is refined into CE [289] 
* CE 96 is refined into CE [290] 
* CE 97 is discarded (unfeasible) 
* CE 98 is refined into CE [291,292,293,294,295,296] 
* CE 99 is refined into CE [297] 
* CE 100 is discarded (unfeasible) 
* CE 101 is discarded (unfeasible) 
* CE 102 is refined into CE [298,299,300] 
* CE 103 is refined into CE [301] 


#### Refined cost equations eval__TIFFFax3fillruns_bb3_in/1 
* CE 140: eval__TIFFFax3fillruns_bb3_in(B) = 0
     [B=7] 
* CE 141: eval__TIFFFax3fillruns_bb3_in(B) = 0
     [B=6] 
* CE 142: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 143: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [C>=1,H=3,G=0,F=0,E=0,D=2] 
* CE 144: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [0>=C+1,F=3,G=0,H=0,E=0,D=2] 
* CE 145: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [C>=8,15>=C,F=3,E=1,D=2] 
* CE 146: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*E+7>=C,C>=8*E,E>=2,F=3,D=2] 
* CE 147: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [C>=1,7>=C,F=3,E=0,D=2] 
* CE 148: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [C>=E+1,E>=8,15>=E,G=3,F=1,D=2] 
* CE 149: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*F+7>=E,C>=E+1,E>=8*F,F>=2,G=3,D=2] 
* CE 150: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [C>=E+1,E>=1,7>=E,G=3,F=0,D=2] 
* CE 151: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=E,E>=8*F,F>=0,E>=1,0>=C+1,G=3,D=2] 
* CE 152: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*E>=C,C+7>=8*E,0>=E,0>=C+1,F=3,D=2] 
* CE 153: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*F>=E,C>=E+1,E+7>=8*F,0>=F,0>=C+1,G=3,D=2] 
* CE 154: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=E,E+7>=8*F,0>=F,0>=E+1,0>=C+1,G=3,D=2] 
* CE 155: eval__TIFFFax3fillruns_bb3_in(B) = 1+ eval__TIFFFax3fillruns_bb3_in(B)
     [] 
* CE 156: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I>=J,J+7>=8*I,0>=I,0>=J+1,K=5,L=4,M=0,H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 157: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I>=J,J+7>=8*I,C>=1,0>=I,0>=J+1,K=5,L=4,M=0,H=3,G=0,F=0,E=0,D=2] 
* CE 158: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=G,G+7>=8*F,0>=F,0>=G+1,0>=C+1,H=5,I=4,J=0,K=3,L=0,M=0,E=0,D=2] 
* CE 159: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G>=H,H+7>=8*G,C>=1,0>=G,0>=H+1,7>=C,I=5,J=4,K=0,F=3,E=0,D=2] 
* CE 160: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H>=I,C>=E+1,I+7>=8*H,E>=1,0>=H,0>=I+1,7>=E,J=5,K=4,L=0,G=3,F=0,D=2] 
* CE 161: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=G,8*H+7>=E,G+7>=8*F,E>=8*H,H>=0,E>=1,0>=F,0>=G+1,0>=C+1,I=5,J=4,K=0,L=3,D=2] 
* CE 162: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G>=H,8*E>=C,H+7>=8*G,C+7>=8*E,0>=G,0>=H+1,0>=E,0>=C+1,I=5,J=4,K=0,F=3,D=2] 
* CE 163: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H>=I,8*F>=E,C>=E+1,I+7>=8*H,E+7>=8*F,0>=H,0>=I+1,0>=F,0>=C+1,J=5,K=4,L=0,G=3,D=2] 
* CE 164: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=G,8*H>=E,G+7>=8*F,E+7>=8*H,0>=F,0>=G+1,0>=H,0>=E+1,0>=C+1,I=5,J=4,K=0,L=3,D=2] 
* CE 165: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I>=J,J+7>=8*I,K>=1,0>=I,0>=J+1,L=5,M=4,H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 166: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I>=J,J+7>=8*I,K>=1,C>=1,0>=I,0>=J+1,L=5,M=4,H=3,G=0,F=0,E=0,D=2] 
* CE 167: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=G,G+7>=8*F,H>=1,0>=F,0>=G+1,0>=C+1,I=5,J=4,K=3,L=0,M=0,E=0,D=2] 
* CE 168: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G>=H,H+7>=8*G,I>=1,C>=1,0>=G,0>=H+1,7>=C,J=5,K=4,F=3,E=0,D=2] 
* CE 169: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H>=I,C>=E+1,I+7>=8*H,J>=1,E>=1,0>=H,0>=I+1,7>=E,K=5,L=4,G=3,F=0,D=2] 
* CE 170: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=G,8*H+7>=E,G+7>=8*F,E>=8*H,I>=1,H>=0,E>=1,0>=F,0>=G+1,0>=C+1,J=5,K=4,L=3,D=2] 
* CE 171: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G>=H,8*E>=C,H+7>=8*G,C+7>=8*E,I>=1,0>=G,0>=H+1,0>=E,0>=C+1,J=5,K=4,F=3,D=2] 
* CE 172: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H>=I,8*F>=E,C>=E+1,I+7>=8*H,E+7>=8*F,J>=1,0>=H,0>=I+1,0>=F,0>=C+1,K=5,L=4,G=3,D=2] 
* CE 173: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=G,8*H>=E,G+7>=8*F,E+7>=8*H,I>=1,0>=F,0>=G+1,0>=H,0>=E+1,0>=C+1,J=5,K=4,L=3,D=2] 
* CE 174: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I>=J,J+7>=8*I,0>=I,0>=J+1,0>=K+1,L=5,M=4,H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 175: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I>=J,J+7>=8*I,C>=1,0>=I,0>=J+1,0>=K+1,L=5,M=4,H=3,G=0,F=0,E=0,D=2] 
* CE 176: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=G,G+7>=8*F,0>=F,0>=G+1,0>=H+1,0>=C+1,I=5,J=4,K=3,L=0,M=0,E=0,D=2] 
* CE 177: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,G):3+ eval__TIFFFax3fillruns_bb42_in(G,I,J):3
     [8*I>=G,G+7>=8*I,C>=8,0>=I,0>=G+1,15>=C,J=5,H=4,F=3,E=1,D=2] 
* CE 178: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,I):5+ eval__TIFFFax3fillruns_bb42_in(I,J,K):3
     [8*J>=I,G>=I+1,I+7>=8*J,C>=8,0>=J,0>=G+1,15>=C,K=5,H=4,F=3,E=1,D=2] 
* CE 179: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,I):7
     [8*J>=I,I+7>=8*J,C>=8,0>=J,0>=I+1,0>=G+1,15>=C,K=5,H=4,F=3,E=1,D=2] 
* CE 180: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,G):3+ eval__TIFFFax3fillruns_bb42_in(G,I,J):3
     [8*I>=G,8*E+7>=C,G+7>=8*I,C>=8*E,E>=2,0>=I,0>=G+1,J=5,H=4,F=3,D=2] 
* CE 181: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,I):5+ eval__TIFFFax3fillruns_bb42_in(I,J,K):3
     [8*J>=I,G>=I+1,8*E+7>=C,I+7>=8*J,C>=8*E,E>=2,0>=J,0>=G+1,K=5,H=4,F=3,D=2] 
* CE 182: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,I):7
     [8*J>=I,8*E+7>=C,I+7>=8*J,C>=8*E,E>=2,0>=J,0>=I+1,0>=G+1,K=5,H=4,F=3,D=2] 
* CE 183: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G>=H,H+7>=8*G,C>=1,0>=G,0>=H+1,0>=I+1,7>=C,J=5,K=4,F=3,E=0,D=2] 
* CE 184: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,H):3+ eval__TIFFFax3fillruns_bb42_in(H,J,K):3
     [8*J>=H,C>=E+1,H+7>=8*J,E>=8,0>=J,0>=H+1,15>=E,K=5,I=4,G=3,F=1,D=2] 
* CE 185: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,J):5+ eval__TIFFFax3fillruns_bb42_in(J,K,L):3
     [8*K>=J,H>=J+1,C>=E+1,J+7>=8*K,E>=8,0>=K,0>=H+1,15>=E,L=5,I=4,G=3,F=1,D=2] 
* CE 186: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,J):7
     [8*K>=J,C>=E+1,J+7>=8*K,E>=8,0>=K,0>=J+1,0>=H+1,15>=E,L=5,I=4,G=3,F=1,D=2] 
* CE 187: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,H):3+ eval__TIFFFax3fillruns_bb42_in(H,J,K):3
     [8*J>=H,8*F+7>=E,C>=E+1,H+7>=8*J,E>=8*F,F>=2,0>=J,0>=H+1,K=5,I=4,G=3,D=2] 
* CE 188: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,J):5+ eval__TIFFFax3fillruns_bb42_in(J,K,L):3
     [8*K>=J,H>=J+1,8*F+7>=E,C>=E+1,J+7>=8*K,E>=8*F,F>=2,0>=K,0>=H+1,L=5,I=4,G=3,D=2] 
* CE 189: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,J):7
     [8*K>=J,8*F+7>=E,C>=E+1,J+7>=8*K,E>=8*F,F>=2,0>=K,0>=J+1,0>=H+1,L=5,I=4,G=3,D=2] 
* CE 190: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H>=I,C>=E+1,I+7>=8*H,E>=1,0>=H,0>=I+1,0>=J+1,7>=E,K=5,L=4,G=3,F=0,D=2] 
* CE 191: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=G,8*H+7>=E,G+7>=8*F,E>=8*H,H>=0,E>=1,0>=F,0>=G+1,0>=I+1,0>=C+1,J=5,K=4,L=3,D=2] 
* CE 192: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G>=H,8*E>=C,H+7>=8*G,C+7>=8*E,0>=G,0>=H+1,0>=I+1,0>=E,0>=C+1,J=5,K=4,F=3,D=2] 
* CE 193: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H>=I,8*F>=E,C>=E+1,I+7>=8*H,E+7>=8*F,0>=H,0>=I+1,0>=J+1,0>=F,0>=C+1,K=5,L=4,G=3,D=2] 
* CE 194: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=G,8*H>=E,G+7>=8*F,E+7>=8*H,0>=F,0>=G+1,0>=I+1,0>=H,0>=E+1,0>=C+1,J=5,K=4,L=3,D=2] 
* CE 195: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,C):3+ eval__TIFFFax3fillruns_bb42_in(C,E,F):3
     [8*E>=C,C+7>=8*E,0>=E,0>=C+1,F=5,D=4] 
* CE 196: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,E):5+ eval__TIFFFax3fillruns_bb42_in(E,F,G):3
     [8*F>=E,C>=E+1,E+7>=8*F,0>=F,0>=C+1,G=5,D=4] 
* CE 197: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,E):7
     [8*F>=E,E+7>=8*F,0>=F,0>=E+1,0>=C+1,G=5,D=4] 
* CE 198: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I+7>=J,J>=8*I,I>=0,J>=1,K=5,L=4,M=0,H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 199: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I+7>=J,J>=8*I,I>=0,J>=1,C>=1,K=5,L=4,M=0,H=3,G=0,F=0,E=0,D=2] 
* CE 200: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=G,G>=8*F,F>=0,G>=1,0>=C+1,H=5,I=4,J=0,K=3,L=0,M=0,E=0,D=2] 
* CE 201: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G+7>=H,H>=8*G,G>=0,H>=1,C>=1,7>=C,I=5,J=4,K=0,F=3,E=0,D=2] 
* CE 202: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H+7>=I,C>=E+1,I>=8*H,H>=0,I>=1,E>=1,7>=E,J=5,K=4,L=0,G=3,F=0,D=2] 
* CE 203: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=G,8*H+7>=E,G>=8*F,E>=8*H,F>=0,G>=1,H>=0,E>=1,0>=C+1,I=5,J=4,K=0,L=3,D=2] 
* CE 204: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G+7>=H,8*E>=C,H>=8*G,C+7>=8*E,G>=0,H>=1,0>=E,0>=C+1,I=5,J=4,K=0,F=3,D=2] 
* CE 205: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H+7>=I,8*F>=E,C>=E+1,I>=8*H,E+7>=8*F,H>=0,I>=1,0>=F,0>=C+1,J=5,K=4,L=0,G=3,D=2] 
* CE 206: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=G,8*H>=E,G>=8*F,E+7>=8*H,F>=0,G>=1,0>=H,0>=E+1,0>=C+1,I=5,J=4,K=0,L=3,D=2] 
* CE 207: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I+7>=J,J>=8*I,I>=0,J>=1,K>=1,L=5,M=4,H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 208: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I+7>=J,J>=8*I,I>=0,J>=1,K>=1,C>=1,L=5,M=4,H=3,G=0,F=0,E=0,D=2] 
* CE 209: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=G,G>=8*F,F>=0,G>=1,H>=1,0>=C+1,I=5,J=4,K=3,L=0,M=0,E=0,D=2] 
* CE 210: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,G):4+ eval__TIFFFax3fillruns_bb42_in(G,I,J):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [G>=8,C>=8,15>=G,15>=C,J=5,I=1,H=4,F=3,E=1,D=2] 
* CE 211: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,G):4+ eval__TIFFFax3fillruns_bb42_in(G,I,J):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*I+7>=G,G>=8*I,I>=2,C>=8,15>=C,J=5,H=4,F=3,E=1,D=2] 
* CE 212: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,G):4+ eval__TIFFFax3fillruns_bb42_in(G,I,J):3
     [G>=1,C>=8,7>=G,15>=C,J=5,I=0,H=4,F=3,E=1,D=2] 
* CE 213: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,I):6+ eval__TIFFFax3fillruns_bb42_in(I,J,K):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [G>=I+1,I>=8,C>=8,15>=I,15>=C,K=5,J=1,H=4,F=3,E=1,D=2] 
* CE 214: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,I):6+ eval__TIFFFax3fillruns_bb42_in(I,J,K):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*J+7>=I,G>=I+1,I>=8*J,J>=2,C>=8,15>=C,K=5,H=4,F=3,E=1,D=2] 
* CE 215: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,I):6+ eval__TIFFFax3fillruns_bb42_in(I,J,K):3
     [G>=I+1,I>=1,C>=8,7>=I,15>=C,K=5,J=0,H=4,F=3,E=1,D=2] 
* CE 216: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,G):4+ eval__TIFFFax3fillruns_bb42_in(G,I,J):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*E+7>=C,C>=8*E,G>=8,E>=2,15>=G,J=5,I=1,H=4,F=3,D=2] 
* CE 217: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,G):4+ eval__TIFFFax3fillruns_bb42_in(G,I,J):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*I+7>=G,8*E+7>=C,G>=8*I,C>=8*E,I>=2,E>=2,J=5,H=4,F=3,D=2] 
* CE 218: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,G):4+ eval__TIFFFax3fillruns_bb42_in(G,I,J):3
     [8*E+7>=C,C>=8*E,G>=1,E>=2,7>=G,J=5,I=0,H=4,F=3,D=2] 
* CE 219: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,I):6+ eval__TIFFFax3fillruns_bb42_in(I,J,K):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [G>=I+1,8*E+7>=C,C>=8*E,I>=8,E>=2,15>=I,K=5,J=1,H=4,F=3,D=2] 
* CE 220: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,I):6+ eval__TIFFFax3fillruns_bb42_in(I,J,K):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*J+7>=I,G>=I+1,8*E+7>=C,I>=8*J,C>=8*E,J>=2,E>=2,K=5,H=4,F=3,D=2] 
* CE 221: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,I):6+ eval__TIFFFax3fillruns_bb42_in(I,J,K):3
     [G>=I+1,8*E+7>=C,C>=8*E,I>=1,E>=2,7>=I,K=5,J=0,H=4,F=3,D=2] 
* CE 222: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G+7>=H,H>=8*G,G>=0,H>=1,I>=1,C>=1,7>=C,J=5,K=4,F=3,E=0,D=2] 
* CE 223: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,H):4+ eval__TIFFFax3fillruns_bb42_in(H,J,K):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [C>=E+1,H>=8,E>=8,15>=H,15>=E,K=5,J=1,I=4,G=3,F=1,D=2] 
* CE 224: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,H):4+ eval__TIFFFax3fillruns_bb42_in(H,J,K):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*J+7>=H,C>=E+1,H>=8*J,J>=2,E>=8,15>=E,K=5,I=4,G=3,F=1,D=2] 
* CE 225: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,H):4+ eval__TIFFFax3fillruns_bb42_in(H,J,K):3
     [C>=E+1,H>=1,E>=8,7>=H,15>=E,K=5,J=0,I=4,G=3,F=1,D=2] 
* CE 226: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,J):6+ eval__TIFFFax3fillruns_bb42_in(J,K,L):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [H>=J+1,C>=E+1,J>=8,E>=8,15>=J,15>=E,L=5,K=1,I=4,G=3,F=1,D=2] 
* CE 227: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,J):6+ eval__TIFFFax3fillruns_bb42_in(J,K,L):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*K+7>=J,H>=J+1,C>=E+1,J>=8*K,K>=2,E>=8,15>=E,L=5,I=4,G=3,F=1,D=2] 
* CE 228: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,J):6+ eval__TIFFFax3fillruns_bb42_in(J,K,L):3
     [H>=J+1,C>=E+1,J>=1,E>=8,7>=J,15>=E,L=5,K=0,I=4,G=3,F=1,D=2] 
* CE 229: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,H):4+ eval__TIFFFax3fillruns_bb42_in(H,J,K):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*F+7>=E,C>=E+1,E>=8*F,H>=8,F>=2,15>=H,K=5,J=1,I=4,G=3,D=2] 
* CE 230: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,H):4+ eval__TIFFFax3fillruns_bb42_in(H,J,K):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*J+7>=H,8*F+7>=E,C>=E+1,H>=8*J,E>=8*F,J>=2,F>=2,K=5,I=4,G=3,D=2] 
* CE 231: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,H):4+ eval__TIFFFax3fillruns_bb42_in(H,J,K):3
     [8*F+7>=E,C>=E+1,E>=8*F,H>=1,F>=2,7>=H,K=5,J=0,I=4,G=3,D=2] 
* CE 232: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,J):6+ eval__TIFFFax3fillruns_bb42_in(J,K,L):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [H>=J+1,8*F+7>=E,C>=E+1,E>=8*F,J>=8,F>=2,15>=J,L=5,K=1,I=4,G=3,D=2] 
* CE 233: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,J):6+ eval__TIFFFax3fillruns_bb42_in(J,K,L):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*K+7>=J,H>=J+1,8*F+7>=E,C>=E+1,J>=8*K,E>=8*F,K>=2,F>=2,L=5,I=4,G=3,D=2] 
* CE 234: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,J):6+ eval__TIFFFax3fillruns_bb42_in(J,K,L):3
     [H>=J+1,8*F+7>=E,C>=E+1,E>=8*F,J>=1,F>=2,7>=J,L=5,K=0,I=4,G=3,D=2] 
* CE 235: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H+7>=I,C>=E+1,I>=8*H,H>=0,I>=1,J>=1,E>=1,7>=E,K=5,L=4,G=3,F=0,D=2] 
* CE 236: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=G,8*H+7>=E,G>=8*F,E>=8*H,F>=0,G>=1,I>=1,H>=0,E>=1,0>=C+1,J=5,K=4,L=3,D=2] 
* CE 237: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G+7>=H,8*E>=C,H>=8*G,C+7>=8*E,G>=0,H>=1,I>=1,0>=E,0>=C+1,J=5,K=4,F=3,D=2] 
* CE 238: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H+7>=I,8*F>=E,C>=E+1,I>=8*H,E+7>=8*F,H>=0,I>=1,J>=1,0>=F,0>=C+1,K=5,L=4,G=3,D=2] 
* CE 239: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=G,8*H>=E,G>=8*F,E+7>=8*H,F>=0,G>=1,I>=1,0>=H,0>=E+1,0>=C+1,J=5,K=4,L=3,D=2] 
* CE 240: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,C):4+ eval__TIFFFax3fillruns_bb42_in(C,E,F):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [C>=8,15>=C,F=5,E=1,D=4] 
* CE 241: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,C):4+ eval__TIFFFax3fillruns_bb42_in(C,E,F):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*E+7>=C,C>=8*E,E>=2,F=5,D=4] 
* CE 242: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,C):4+ eval__TIFFFax3fillruns_bb42_in(C,E,F):3
     [C>=1,7>=C,F=5,E=0,D=4] 
* CE 243: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,E):6+ eval__TIFFFax3fillruns_bb42_in(E,F,G):1+ eval__TIFFFax3fillruns_bb3_in(B)
     [C>=E+1,E>=8,15>=E,G=5,F=1,D=4] 
* CE 244: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,E):6+ eval__TIFFFax3fillruns_bb42_in(E,F,G):2+ eval__TIFFFax3fillruns_bb3_in(B)
     [8*F+7>=E,C>=E+1,E>=8*F,F>=2,G=5,D=4] 
* CE 245: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,E):6+ eval__TIFFFax3fillruns_bb42_in(E,F,G):3
     [C>=E+1,E>=1,7>=E,G=5,F=0,D=4] 
* CE 246: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I+7>=J,J>=8*I,I>=0,J>=1,0>=K+1,L=5,M=4,H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 247: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [8*I+7>=J,J>=8*I,I>=0,J>=1,C>=1,0>=K+1,L=5,M=4,H=3,G=0,F=0,E=0,D=2] 
* CE 248: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=G,G>=8*F,F>=0,G>=1,0>=H+1,0>=C+1,I=5,J=4,K=3,L=0,M=0,E=0,D=2] 
* CE 249: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,I):7
     [8*J+7>=I,I>=8*J,J>=0,I>=1,C>=8,0>=G+1,15>=C,K=5,H=4,F=3,E=1,D=2] 
* CE 250: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,I):7
     [8*J+7>=I,8*E+7>=C,I>=8*J,C>=8*E,J>=0,I>=1,E>=2,0>=G+1,K=5,H=4,F=3,D=2] 
* CE 251: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G+7>=H,H>=8*G,G>=0,H>=1,C>=1,0>=I+1,7>=C,J=5,K=4,F=3,E=0,D=2] 
* CE 252: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,J):7
     [8*K+7>=J,C>=E+1,J>=8*K,K>=0,J>=1,E>=8,0>=H+1,15>=E,L=5,I=4,G=3,F=1,D=2] 
* CE 253: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,J):7
     [8*K+7>=J,8*F+7>=E,C>=E+1,J>=8*K,E>=8*F,K>=0,J>=1,F>=2,0>=H+1,L=5,I=4,G=3,D=2] 
* CE 254: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H+7>=I,C>=E+1,I>=8*H,H>=0,I>=1,E>=1,0>=J+1,7>=E,K=5,L=4,G=3,F=0,D=2] 
* CE 255: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=G,8*H+7>=E,G>=8*F,E>=8*H,F>=0,G>=1,H>=0,E>=1,0>=I+1,0>=C+1,J=5,K=4,L=3,D=2] 
* CE 256: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*G+7>=H,8*E>=C,H>=8*G,C+7>=8*E,G>=0,H>=1,0>=I+1,0>=E,0>=C+1,J=5,K=4,F=3,D=2] 
* CE 257: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*H+7>=I,8*F>=E,C>=E+1,I>=8*H,E+7>=8*F,H>=0,I>=1,0>=J+1,0>=F,0>=C+1,K=5,L=4,G=3,D=2] 
* CE 258: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=G,8*H>=E,G>=8*F,E+7>=8*H,F>=0,G>=1,0>=I+1,0>=H,0>=E+1,0>=C+1,J=5,K=4,L=3,D=2] 
* CE 259: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,E):7
     [8*F+7>=E,E>=8*F,F>=0,E>=1,0>=C+1,G=5,D=4] 
* CE 260: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [I=5,J=0,K=0,L=0,M=4,N=0,H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 261: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [C>=1,I=5,J=0,K=0,L=0,M=4,N=0,H=3,G=0,F=0,E=0,D=2] 
* CE 262: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [0>=C+1,F=5,G=0,H=0,I=0,J=4,K=0,L=3,M=0,N=0,E=0,D=2] 
* CE 263: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,I):1+ eval__TIFFFax3fillruns_bb42_in(J,K,L):3
     [C>=8,15>=C,L=5,K=0,J=0,I=0,H=4,G=0,F=3,E=1,D=2] 
* CE 264: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,I):1+ eval__TIFFFax3fillruns_bb42_in(J,K,L):3
     [8*E+7>=C,C>=8*E,E>=2,L=5,K=0,J=0,I=0,H=4,G=0,F=3,D=2] 
* CE 265: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [C>=1,7>=C,G=5,H=0,I=0,J=0,K=4,L=0,F=3,E=0,D=2] 
* CE 266: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,J):1+ eval__TIFFFax3fillruns_bb42_in(K,L,M):3
     [C>=E+1,E>=8,15>=E,M=5,L=0,K=0,J=0,I=4,H=0,G=3,F=1,D=2] 
* CE 267: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,J):1+ eval__TIFFFax3fillruns_bb42_in(K,L,M):3
     [8*F+7>=E,C>=E+1,E>=8*F,F>=2,M=5,L=0,K=0,J=0,I=4,H=0,G=3,D=2] 
* CE 268: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [C>=E+1,E>=1,7>=E,H=5,I=0,J=0,K=0,L=4,M=0,G=3,F=0,D=2] 
* CE 269: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=E,E>=8*F,F>=0,E>=1,0>=C+1,G=5,H=0,I=0,J=0,K=4,L=0,M=3,D=2] 
* CE 270: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*E>=C,C+7>=8*E,0>=E,0>=C+1,G=5,H=0,I=0,J=0,K=4,L=0,F=3,D=2] 
* CE 271: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*F>=E,C>=E+1,E+7>=8*F,0>=F,0>=C+1,H=5,I=0,J=0,K=0,L=4,M=0,G=3,D=2] 
* CE 272: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=E,E+7>=8*F,0>=F,0>=E+1,0>=C+1,G=5,H=0,I=0,J=0,K=4,L=0,M=3,D=2] 
* CE 273: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,E):1+ eval__TIFFFax3fillruns_bb42_in(F,G,H):3
     [H=5,G=0,F=0,E=0,D=4,C=0] 
* CE 274: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [I>=1,J=5,K=0,L=0,M=0,N=4,H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 275: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [I>=1,C>=1,J=5,K=0,L=0,M=0,N=4,H=3,G=0,F=0,E=0,D=2] 
* CE 276: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [F>=1,0>=C+1,G=5,H=0,I=0,J=0,K=4,L=3,M=0,N=0,E=0,D=2] 
* CE 277: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,I):2+ eval__TIFFFax3fillruns_bb42_in(J,K,L):3
     [G>=1,C>=8,15>=C,L=5,K=0,J=0,I=0,H=4,F=3,E=1,D=2] 
* CE 278: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,I):2+ eval__TIFFFax3fillruns_bb42_in(J,K,L):3
     [8*E+7>=C,C>=8*E,G>=1,E>=2,L=5,K=0,J=0,I=0,H=4,F=3,D=2] 
* CE 279: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [G>=1,C>=1,7>=C,H=5,I=0,J=0,K=0,L=4,F=3,E=0,D=2] 
* CE 280: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,J):2+ eval__TIFFFax3fillruns_bb42_in(K,L,M):3
     [C>=E+1,H>=1,E>=8,15>=E,M=5,L=0,K=0,J=0,I=4,G=3,F=1,D=2] 
* CE 281: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,J):2+ eval__TIFFFax3fillruns_bb42_in(K,L,M):3
     [8*F+7>=E,C>=E+1,E>=8*F,H>=1,F>=2,M=5,L=0,K=0,J=0,I=4,G=3,D=2] 
* CE 282: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [C>=E+1,H>=1,E>=1,7>=E,I=5,J=0,K=0,L=0,M=4,G=3,F=0,D=2] 
* CE 283: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=E,E>=8*F,G>=1,F>=0,E>=1,0>=C+1,H=5,I=0,J=0,K=0,L=4,M=3,D=2] 
* CE 284: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*E>=C,C+7>=8*E,G>=1,0>=E,0>=C+1,H=5,I=0,J=0,K=0,L=4,F=3,D=2] 
* CE 285: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*F>=E,C>=E+1,E+7>=8*F,H>=1,0>=F,0>=C+1,I=5,J=0,K=0,L=0,M=4,G=3,D=2] 
* CE 286: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=E,E+7>=8*F,G>=1,0>=F,0>=E+1,0>=C+1,H=5,I=0,J=0,K=0,L=4,M=3,D=2] 
* CE 287: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,E):2+ eval__TIFFFax3fillruns_bb42_in(F,G,H):3
     [C>=1,H=5,G=0,F=0,E=0,D=4] 
* CE 288: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):1+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [0>=I+1,J=5,K=0,L=0,M=0,N=4,H=3,G=0,F=0,E=0,D=2,C=0] 
* CE 289: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):2+ eval__TIFFFax3fillruns_bb16_in(F,G,H):3
     [C>=1,0>=I+1,J=5,K=0,L=0,M=0,N=4,H=3,G=0,F=0,E=0,D=2] 
* CE 290: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [0>=F+1,0>=C+1,G=5,H=0,I=0,J=0,K=4,L=3,M=0,N=0,E=0,D=2] 
* CE 291: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):1+ eval__TIFFFax3fillruns_bb38_in(G,H,I):7
     [C>=8,0>=G+1,15>=C,J=5,K=0,L=0,I=0,H=4,F=3,E=1,D=2] 
* CE 292: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):2+ eval__TIFFFax3fillruns_bb38_in(G,H,I):7
     [8*E+7>=C,C>=8*E,E>=2,0>=G+1,J=5,K=0,L=0,I=0,H=4,F=3,D=2] 
* CE 293: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):4+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [C>=1,0>=G+1,7>=C,H=5,I=0,J=0,K=0,L=4,F=3,E=0,D=2] 
* CE 294: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):1+ eval__TIFFFax3fillruns_bb38_in(H,I,J):7
     [C>=E+1,E>=8,0>=H+1,15>=E,K=5,L=0,M=0,J=0,I=4,G=3,F=1,D=2] 
* CE 295: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):2+ eval__TIFFFax3fillruns_bb38_in(H,I,J):7
     [8*F+7>=E,C>=E+1,E>=8*F,F>=2,0>=H+1,K=5,L=0,M=0,J=0,I=4,G=3,D=2] 
* CE 296: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):6+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [C>=E+1,E>=1,0>=H+1,7>=E,I=5,J=0,K=0,L=0,M=4,G=3,F=0,D=2] 
* CE 297: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F+7>=E,E>=8*F,F>=0,E>=1,0>=G+1,0>=C+1,H=5,I=0,J=0,K=0,L=4,M=3,D=2] 
* CE 298: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,C):3+ eval__TIFFFax3fillruns_bb16_in(C,E,F):3
     [8*E>=C,C+7>=8*E,0>=G+1,0>=E,0>=C+1,H=5,I=0,J=0,K=0,L=4,F=3,D=2] 
* CE 299: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):5+ eval__TIFFFax3fillruns_bb16_in(E,F,G):3
     [8*F>=E,C>=E+1,E+7>=8*F,0>=H+1,0>=F,0>=C+1,I=5,J=0,K=0,L=0,M=4,G=3,D=2] 
* CE 300: eval__TIFFFax3fillruns_bb3_in(B) = 5+ eval__TIFFFax3fillruns_bb12_in(C,D,E):7
     [8*F>=E,E+7>=8*F,0>=G+1,0>=F,0>=E+1,0>=C+1,H=5,I=0,J=0,K=0,L=4,M=3,D=2] 
* CE 301: eval__TIFFFax3fillruns_bb3_in(B) = 3+ eval__TIFFFax3fillruns_bb38_in(C,D,E):7
     [0>=C+1,F=5,G=0,H=0,E=0,D=4] 

### Cost equations --> "Loop" of eval__TIFFFax3fillruns_bb3_in/1 
* CEs [142,143,144,147,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,212,215,218,221,222,225,228,231,234,235,236,237,238,239,242,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301] --> Loop 40 
* CEs [145,146,148,149,155,210,211,213,214,216,217,219,220,223,224,226,227,229,230,232,233,240,241,243,244] --> Loop 41 
* CEs [140] --> Loop 42 
* CEs [141] --> Loop 43 

#### Loops of eval__TIFFFax3fillruns_bb3_in/1 
* Loop 40: eval__TIFFFax3fillruns_bb3_in(B) [] 
* Loop 41: eval__TIFFFax3fillruns_bb3_in(B)->  eval__TIFFFax3fillruns_bb3_in(B)
                  [] 
* Loop 42: eval__TIFFFax3fillruns_bb3_in(B) [B=7] 
* Loop 43: eval__TIFFFax3fillruns_bb3_in(B) [B=6] 

### Ranking functions of CR eval__TIFFFax3fillruns_bb3_in(B) 

#### Partial ranking functions of CR eval__TIFFFax3fillruns_bb3_in(B) 


### Resulting Chains:eval__TIFFFax3fillruns_bb3_in(B) 
* [[41]]...
* [[41],43]
* [[41],42]
* [[41],40]...
* [43]
* [42]
* [40]...


### Merging Chains  eval__TIFFFax3fillruns_bb3_in/1 into  External patterns of execution 
* [[43],[43,[41]]] --> 1 
* [[42],[42,[41]]] --> 2 
* [[40],[[41]],[40,[41]]] --> 3 


### Specialization of cost equations loop_cont_eval__TIFFFax3fillruns_bb3_in/2 
* CE 107 is refined into CE [302] 
* CE 106 is refined into CE [303] 


#### Refined cost equations loop_cont_eval__TIFFFax3fillruns_bb3_in/2 
* CE 302: loop_cont_eval__TIFFFax3fillruns_bb3_in(B,A) = 0
     [B=7] 
* CE 303: loop_cont_eval__TIFFFax3fillruns_bb3_in(B,A) = 0
     [B=6] 

### Cost equations --> "Loop" of loop_cont_eval__TIFFFax3fillruns_bb3_in/2 
* CEs [302] --> Loop 44 
* CEs [303] --> Loop 45 

#### Loops of loop_cont_eval__TIFFFax3fillruns_bb3_in/2 
* Loop 44: loop_cont_eval__TIFFFax3fillruns_bb3_in(B,A) [B=7] 
* Loop 45: loop_cont_eval__TIFFFax3fillruns_bb3_in(B,A) [B=6] 

### Ranking functions of CR loop_cont_eval__TIFFFax3fillruns_bb3_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval__TIFFFax3fillruns_bb3_in(B,A) 


### Resulting Chains:loop_cont_eval__TIFFFax3fillruns_bb3_in(B,A) 
* [45]
* [44]


### Merging Chains  loop_cont_eval__TIFFFax3fillruns_bb3_in/2 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 


### Specialization of cost equations eval__TIFFFax3fillruns_bb2_in/1 
* CE 3 is refined into CE [304,305,306] 


#### Refined cost equations eval__TIFFFax3fillruns_bb2_in/1 
* CE 304: eval__TIFFFax3fillruns_bb2_in(B) = 1+ eval__TIFFFax3fillruns_bb3_in(C):1+ loop_cont_eval__TIFFFax3fillruns_bb3_in(D,B):1
     [D=6,C=6] 
* CE 305: eval__TIFFFax3fillruns_bb2_in(B) = 1+ eval__TIFFFax3fillruns_bb3_in(C):2+ loop_cont_eval__TIFFFax3fillruns_bb3_in(D,B):2
     [D=7,C=7] 
* CE 306: eval__TIFFFax3fillruns_bb2_in(B) = 1+ eval__TIFFFax3fillruns_bb3_in(C):3
     [] 

### Cost equations --> "Loop" of eval__TIFFFax3fillruns_bb2_in/1 
* CEs [306] --> Loop 46 
* CEs [304,305] --> Loop 47 

#### Loops of eval__TIFFFax3fillruns_bb2_in/1 
* Loop 46: eval__TIFFFax3fillruns_bb2_in(B) [] 
* Loop 47: eval__TIFFFax3fillruns_bb2_in(B) [] 

### Ranking functions of CR eval__TIFFFax3fillruns_bb2_in(B) 

#### Partial ranking functions of CR eval__TIFFFax3fillruns_bb2_in(B) 


### Resulting Chains:eval__TIFFFax3fillruns_bb2_in(B) 
* [47]
* [46]...


### Merging Chains  eval__TIFFFax3fillruns_bb2_in/1 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 


### Specialization of cost equations eval__TIFFFax3fillruns_start/2 
* CE 2 is refined into CE [307,308] 


#### Refined cost equations eval__TIFFFax3fillruns_start/2 
* CE 307: eval__TIFFFax3fillruns_start(V_lastx,B) = 0+ eval__TIFFFax3fillruns_bb2_in(B):1
     [] 
* CE 308: eval__TIFFFax3fillruns_start(V_lastx,B) = 0+ eval__TIFFFax3fillruns_bb2_in(B):2
     [] 

### Cost equations --> "Loop" of eval__TIFFFax3fillruns_start/2 
* CEs [308] --> Loop 48 
* CEs [307] --> Loop 49 

#### Loops of eval__TIFFFax3fillruns_start/2 
* Loop 48: eval__TIFFFax3fillruns_start(V_lastx,B) [] 
* Loop 49: eval__TIFFFax3fillruns_start(V_lastx,B) [] 

### Ranking functions of CR eval__TIFFFax3fillruns_start(V_lastx,B) 

#### Partial ranking functions of CR eval__TIFFFax3fillruns_start(V_lastx,B) 


### Resulting Chains:eval__TIFFFax3fillruns_start(V_lastx,B) 
* [49]
* [48]...


### Merging Chains  eval__TIFFFax3fillruns_start/2 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [25] 

 * loop 25:eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) -> [eval__TIFFFax3fillruns_bb12_in(V_n_0',B',C')] 
1
#### Cost of phase [25]:eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) -> [eval__TIFFFax3fillruns_bb12_in(V_n_0',B',C')] 
1*it(25)+0
#### Cost of phase [25]:eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) -> [eval__TIFFFax3fillruns_bb12_in(V_n_0',B',C')] 
1*it(25)+0
#### Cost of loops [24] 

 * loop 24:eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) -> [eval__TIFFFax3fillruns_bb12_in(V_n_0',B',C')] 
1
#### Cost of phase [24]:eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) -> [eval__TIFFFax3fillruns_bb12_in(V_n_0',B',C')] 
1*it(24)+0
  Such that:it(24) =< V_n_0
it(24) =< V_n_0-V_n_0'

#### Cost of phase [24]:eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C) -> [eval__TIFFFax3fillruns_bb12_in(V_n_0',B',C')] 
1*it(24)+0
  Such that:it(24) =< V_n_0
it(24) =< V_n_0-V_n_0'

#### Cost of chains of eval__TIFFFax3fillruns_bb12_in(V_n_0,B,C):
* Chain [[25]]...: 1*it(25)+0
  with precondition: [0>=V_n_0+1,B=2] 

* Chain [[25],27]: 1*it(25)+0
  with precondition: [B=2,0>=V_n_0+1,V_n_0>=C+1] 

* Chain [[24],28]: 1*it(24)+0
  Such that:it(24) =< V_n_0

  with precondition: [B=2,C=0,V_n_0>=1] 

* Chain [[24],26]: 1*it(24)+0
  Such that:it(24) =< V_n_0-C

  with precondition: [B=2,C>=1,V_n_0>=C+1] 

* Chain [28]: 0
  with precondition: [V_n_0=0,B=2,C=0] 

* Chain [27]: 0
  with precondition: [B=2,V_n_0=C,0>=V_n_0+1] 

* Chain [26]: 0
  with precondition: [B=2,V_n_0=C,V_n_0>=1] 


#### Cost of loops [30] 

 * loop 30:eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) -> [eval__TIFFFax3fillruns_bb38_in(V_n_2',B',C')] 
1
#### Cost of phase [30]:eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) -> [eval__TIFFFax3fillruns_bb38_in(V_n_2',B',C')] 
1*it(30)+0
#### Cost of phase [30]:eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) -> [eval__TIFFFax3fillruns_bb38_in(V_n_2',B',C')] 
1*it(30)+0
#### Cost of loops [29] 

 * loop 29:eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) -> [eval__TIFFFax3fillruns_bb38_in(V_n_2',B',C')] 
1
#### Cost of phase [29]:eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) -> [eval__TIFFFax3fillruns_bb38_in(V_n_2',B',C')] 
1*it(29)+0
  Such that:it(29) =< V_n_2
it(29) =< V_n_2-V_n_2'

#### Cost of phase [29]:eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C) -> [eval__TIFFFax3fillruns_bb38_in(V_n_2',B',C')] 
1*it(29)+0
  Such that:it(29) =< V_n_2
it(29) =< V_n_2-V_n_2'

#### Cost of chains of eval__TIFFFax3fillruns_bb38_in(V_n_2,B,C):
* Chain [[30]]...: 1*it(30)+0
  with precondition: [0>=V_n_2+1,B=4] 

* Chain [[30],32]: 1*it(30)+0
  with precondition: [B=4,0>=V_n_2+1,V_n_2>=C+1] 

* Chain [[29],33]: 1*it(29)+0
  Such that:it(29) =< V_n_2

  with precondition: [B=4,C=0,V_n_2>=1] 

* Chain [[29],31]: 1*it(29)+0
  Such that:it(29) =< V_n_2-C

  with precondition: [B=4,C>=1,V_n_2>=C+1] 

* Chain [33]: 0
  with precondition: [V_n_2=0,B=4,C=0] 

* Chain [32]: 0
  with precondition: [B=4,V_n_2=C,0>=V_n_2+1] 

* Chain [31]: 0
  with precondition: [B=4,V_n_2=C,V_n_2>=1] 


#### Cost of loops [35] 

 * loop 35:eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) -> [eval__TIFFFax3fillruns_bb42_in(V_n_2',V_nw_1',B')] 
1
#### Cost of phase [35]:eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) -> [eval__TIFFFax3fillruns_bb42_in(V_n_2',V_nw_1',B')] 
1*it(35)+0
#### Cost of loops [34] 

 * loop 34:eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) -> [eval__TIFFFax3fillruns_bb42_in(V_n_2',V_nw_1',B')] 
1
#### Cost of phase [34]:eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B) -> [eval__TIFFFax3fillruns_bb42_in(V_n_2',V_nw_1',B')] 
1*it(34)+0
  Such that:it(34) =< V_nw_1
it(34) =< V_nw_1-V_nw_1'

#### Cost of chains of eval__TIFFFax3fillruns_bb42_in(V_n_2,V_nw_1,B):
* Chain [[35]]...: 1*it(35)+0
  with precondition: [0>=V_nw_1,V_n_2+7>=8*V_nw_1,B=5] 

* Chain [[34],36]: 1*it(34)+0
  Such that:it(34) =< V_nw_1

  with precondition: [B=5,V_nw_1>=2,V_n_2+7>=8*V_nw_1] 

* Chain [36]: 0
  with precondition: [V_nw_1=1,B=5,V_n_2>=1] 


#### Cost of loops [38] 

 * loop 38:eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) -> [eval__TIFFFax3fillruns_bb16_in(V_n_0',V_nw_0',B')] 
1
#### Cost of phase [38]:eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) -> [eval__TIFFFax3fillruns_bb16_in(V_n_0',V_nw_0',B')] 
1*it(38)+0
#### Cost of loops [37] 

 * loop 37:eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) -> [eval__TIFFFax3fillruns_bb16_in(V_n_0',V_nw_0',B')] 
1
#### Cost of phase [37]:eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B) -> [eval__TIFFFax3fillruns_bb16_in(V_n_0',V_nw_0',B')] 
1*it(37)+0
  Such that:it(37) =< V_nw_0
it(37) =< V_nw_0-V_nw_0'

#### Cost of chains of eval__TIFFFax3fillruns_bb16_in(V_n_0,V_nw_0,B):
* Chain [[38]]...: 1*it(38)+0
  with precondition: [0>=V_nw_0,V_n_0+7>=8*V_nw_0,B=3] 

* Chain [[37],39]: 1*it(37)+0
  Such that:it(37) =< V_nw_0

  with precondition: [B=3,V_nw_0>=2,V_n_0+7>=8*V_nw_0] 

* Chain [39]: 0
  with precondition: [V_nw_0=1,B=3,V_n_0>=1] 


#### Cost of loops [41] 

 * loop 41:eval__TIFFFax3fillruns_bb3_in(B) -> [eval__TIFFFax3fillruns_bb3_in(B')] 
1*s(41)+0
#### Cost of phase [41]:eval__TIFFFax3fillruns_bb3_in(B) -> [eval__TIFFFax3fillruns_bb3_in(B')] 
1*s(42)+0
#### Cost of phase [41]:eval__TIFFFax3fillruns_bb3_in(B) -> [eval__TIFFFax3fillruns_bb3_in(B')] 
1*s(42)+0
#### Cost of phase [41]:eval__TIFFFax3fillruns_bb3_in(B) -> [eval__TIFFFax3fillruns_bb3_in(B')] 
1*s(42)+0
#### Cost of phase [41]:eval__TIFFFax3fillruns_bb3_in(B) -> [eval__TIFFFax3fillruns_bb3_in(B')] 
1*s(42)+0
#### Cost of chains of eval__TIFFFax3fillruns_bb3_in(B):
* Chain [[41]]...: 1*s(42)+0
  with precondition: [] 

* Chain [[41],43]: 1*s(42)+0
  with precondition: [B=6] 

* Chain [[41],42]: 1*s(42)+0
  with precondition: [B=7] 

* Chain [[41],40]...: 2*aux(2)+0
  with precondition: [] 

* Chain [43]: 0
  with precondition: [B=6] 

* Chain [42]: 0
  with precondition: [B=7] 

* Chain [40]...: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval__TIFFFax3fillruns_bb3_in(B,A):
* Chain [45]: 0
  with precondition: [B=6] 

* Chain [44]: 0
  with precondition: [B=7] 


#### Cost of chains of eval__TIFFFax3fillruns_bb2_in(B):
* Chain [47]: 1*aux(6)+0
  with precondition: [] 

* Chain [46]...: 1*s(266)+1
  with precondition: [] 


#### Cost of chains of eval__TIFFFax3fillruns_start(V_lastx,B):
* Chain [49]: 1*s(267)+0
  with precondition: [] 

* Chain [48]...: 1*s(268)+1
  with precondition: [] 


Closed-form bounds of eval__TIFFFax3fillruns_start(V_lastx,B): 
-------------------------------------
* Chain [49] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [48]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval__TIFFFax3fillruns_start(V_lastx,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5216 ms.
* Invariants computed in 42 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 615 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 258 ms.
   - Equation cost structures 219 ms.
   - Phase cost structures 46 ms.
   - Chain cost structures 21 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 6422 ms.

