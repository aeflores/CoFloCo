Warning: Ignored call to eval_gs_alloc_memset_stop/1 in equation loop_cont_eval_gs_alloc_memset_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_gs_alloc_memset_5/5,eval_gs_alloc_memset_6/5,eval_gs_alloc_memset_bb1_in/3]
1. non_recursive  : [loop_cont_eval_gs_alloc_memset_bb1_in/2]
2. non_recursive  : [eval_gs_alloc_memset_bb0_in/3]
3. non_recursive  : [eval_gs_alloc_memset_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_gs_alloc_memset_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_gs_alloc_memset_bb0_in/3
3. SCC is partially evaluated into eval_gs_alloc_memset_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gs_alloc_memset_bb1_in/3 
* CE 8 is refined into CE [9] 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 7 is refined into CE [13] 


#### Refined cost equations eval_gs_alloc_memset_bb1_in/3 
* CE 9: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) = 0
     [B=2,V_msize_0=0] 
* CE 10: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) = 1+ eval_gs_alloc_memset_bb1_in(V_0,C,D)
     [C+2147483646>=0,C+2147483647=V_msize_0,D=2,B=2] 
* CE 11: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) = 1+ eval_gs_alloc_memset_bb1_in(V_0,C,D)
     [0>=C+2147483648,C+2147483647=V_msize_0,D=2,B=2] 
* CE 12: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) = 1+ eval_gs_alloc_memset_bb1_in(V_0,C,D)
     [V_msize_0>=1,D=2,C=0,B=2] 
* CE 13: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) = 1+ eval_gs_alloc_memset_bb1_in(V_0,C,D)
     [0>=V_msize_0+1,D=2,C=0,B=2] 

### Cost equations --> "Loop" of eval_gs_alloc_memset_bb1_in/3 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [9] --> Loop 12 

#### Loops of eval_gs_alloc_memset_bb1_in/3 
* Loop 8: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B)->  eval_gs_alloc_memset_bb1_in(V_0,V_msize_0',B')
                  [V_msize_0>=1,V_msize_0=V_msize_0'+2147483647,B'=2,B=2] 
* Loop 9: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B)->  eval_gs_alloc_memset_bb1_in(V_0,V_msize_0',B')
                  [0>=V_msize_0+1,V_msize_0=V_msize_0'+2147483647,B'=2,B=2] 
* Loop 10: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B)->  eval_gs_alloc_memset_bb1_in(V_0,V_msize_0',B')
                  [V_msize_0>=1,B'=2,V_msize_0'=0,B=2] 
* Loop 11: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B)->  eval_gs_alloc_memset_bb1_in(V_0,V_msize_0',B')
                  [0>=V_msize_0+1,B'=2,V_msize_0'=0,B=2] 
* Loop 12: eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) [B=2,V_msize_0=0] 

### Ranking functions of CR eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) 
* RF of phase [8]: [V_msize_0/2147483647]

#### Partial ranking functions of CR eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_msize_0/2147483647


### Resulting Chains:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) 
* [[9]]...
* [[9],11,12]
* [[8],[9]]...
* [[8],[9],11,12]
* [[8],12]
* [[8],11,12]
* [[8],10,12]
* [12]
* [11,12]
* [10,12]


### Merging Chains  eval_gs_alloc_memset_bb1_in/3 into  External patterns of execution 
* [[12]] --> 1 
* [[12,11],[12,11,[9]]] --> 2 
* [[12,10],[12,10,[8]],[12,11,[8]],[12,[8]],[12,11,[9],[8]]] --> 3 
* [[[9],[8]]] --> 4 
* [[[9]]] --> 5 


### Specialization of cost equations eval_gs_alloc_memset_bb0_in/3 
* CE 3 is refined into CE [14,15,16,17,18] 


#### Refined cost equations eval_gs_alloc_memset_bb0_in/3 
* CE 14: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) = 1+ eval_gs_alloc_memset_bb1_in(V_fill,C,D):1
     [D=2,C=0,V_lsize=0] 
* CE 15: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) = 1+ eval_gs_alloc_memset_bb1_in(V_fill,V_lsize,C):2
     [0>=V_lsize+1,C=2] 
* CE 16: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) = 1+ eval_gs_alloc_memset_bb1_in(V_fill,V_lsize,C):3
     [V_lsize>=1,C=2] 
* CE 17: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) = 1+ eval_gs_alloc_memset_bb1_in(V_fill,V_lsize,C):4
     [V_lsize>=1,C=2] 
* CE 18: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) = 1+ eval_gs_alloc_memset_bb1_in(V_fill,V_lsize,C):5
     [0>=V_lsize+1,C=2] 

### Cost equations --> "Loop" of eval_gs_alloc_memset_bb0_in/3 
* CEs [17] --> Loop 13 
* CEs [18] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [14] --> Loop 17 

#### Loops of eval_gs_alloc_memset_bb0_in/3 
* Loop 13: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) [V_lsize>=1] 
* Loop 14: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) [0>=V_lsize+1] 
* Loop 15: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) [V_lsize>=1] 
* Loop 16: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) [0>=V_lsize+1] 
* Loop 17: eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) [V_lsize=0] 

### Ranking functions of CR eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) 

#### Partial ranking functions of CR eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) 


### Resulting Chains:eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B) 
* [17]
* [16]
* [15]
* [14]...
* [13]...


### Merging Chains  eval_gs_alloc_memset_bb0_in/3 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 
* [[14]] --> 4 
* [[13]] --> 5 


### Specialization of cost equations eval_gs_alloc_memset_start/3 
* CE 2 is refined into CE [19,20,21,22,23] 


#### Refined cost equations eval_gs_alloc_memset_start/3 
* CE 19: eval_gs_alloc_memset_start(V_fill,V_lsize,B) = 0+ eval_gs_alloc_memset_bb0_in(V_fill,C,B):1
     [C=0,V_lsize=0] 
* CE 20: eval_gs_alloc_memset_start(V_fill,V_lsize,B) = 0+ eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B):2
     [0>=V_lsize+1] 
* CE 21: eval_gs_alloc_memset_start(V_fill,V_lsize,B) = 0+ eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B):3
     [V_lsize>=1] 
* CE 22: eval_gs_alloc_memset_start(V_fill,V_lsize,B) = 0+ eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B):4
     [0>=V_lsize+1] 
* CE 23: eval_gs_alloc_memset_start(V_fill,V_lsize,B) = 0+ eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B):5
     [V_lsize>=1] 

### Cost equations --> "Loop" of eval_gs_alloc_memset_start/3 
* CEs [23] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [19] --> Loop 22 

#### Loops of eval_gs_alloc_memset_start/3 
* Loop 18: eval_gs_alloc_memset_start(V_fill,V_lsize,B) [V_lsize>=1] 
* Loop 19: eval_gs_alloc_memset_start(V_fill,V_lsize,B) [0>=V_lsize+1] 
* Loop 20: eval_gs_alloc_memset_start(V_fill,V_lsize,B) [V_lsize>=1] 
* Loop 21: eval_gs_alloc_memset_start(V_fill,V_lsize,B) [0>=V_lsize+1] 
* Loop 22: eval_gs_alloc_memset_start(V_fill,V_lsize,B) [V_lsize=0] 

### Ranking functions of CR eval_gs_alloc_memset_start(V_fill,V_lsize,B) 

#### Partial ranking functions of CR eval_gs_alloc_memset_start(V_fill,V_lsize,B) 


### Resulting Chains:eval_gs_alloc_memset_start(V_fill,V_lsize,B) 
* [22]
* [21]
* [20]
* [19]...
* [18]...


### Merging Chains  eval_gs_alloc_memset_start/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[19]] --> 4 
* [[18]] --> 5 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) -> [eval_gs_alloc_memset_bb1_in(V_0',V_msize_0',B')] 
1
#### Cost of phase [9]:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) -> [eval_gs_alloc_memset_bb1_in(V_0',V_msize_0',B')] 
1*it(9)+0
#### Cost of phase [9]:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) -> [eval_gs_alloc_memset_bb1_in(V_0',V_msize_0',B')] 
1*it(9)+0
#### Cost of loops [8] 

 * loop 8:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) -> [eval_gs_alloc_memset_bb1_in(V_0',V_msize_0',B')] 
1
#### Cost of phase [8]:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) -> [eval_gs_alloc_memset_bb1_in(V_0',V_msize_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_msize_0/2147483647
it(8) =< V_msize_0/2147483647-V_msize_0'/2147483647

#### Cost of phase [8]:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) -> [eval_gs_alloc_memset_bb1_in(V_0',V_msize_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_msize_0/2147483647
it(8) =< V_msize_0/2147483647-V_msize_0'/2147483647

#### Cost of phase [8]:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) -> [eval_gs_alloc_memset_bb1_in(V_0',V_msize_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_msize_0/2147483647
it(8) =< V_msize_0/2147483647-V_msize_0'/2147483647

#### Cost of phase [8]:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) -> [eval_gs_alloc_memset_bb1_in(V_0',V_msize_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_msize_0/2147483647
it(8) =< V_msize_0/2147483647-V_msize_0'/2147483647

#### Cost of phase [8]:eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B) -> [eval_gs_alloc_memset_bb1_in(V_0',V_msize_0',B')] 
1*it(8)+0
  Such that:it(8) =< V_msize_0/2147483647
it(8) =< V_msize_0/2147483647-V_msize_0'/2147483647

#### Cost of chains of eval_gs_alloc_memset_bb1_in(V_0,V_msize_0,B):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [0>=V_msize_0+1,B=2] 

* Chain [[9],11,12]: 1*it(9)+1
  with precondition: [B=2,0>=V_msize_0+1] 

* Chain [[8],[9]]...: 1*it(8)+1*it(9)+0
  Such that:it(8) =< V_msize_0/2147483647

  with precondition: [B=2,V_msize_0>=1] 

* Chain [[8],[9],11,12]: 1*it(8)+1*it(9)+1
  Such that:it(8) =< V_msize_0/2147483647

  with precondition: [B=2,V_msize_0>=1] 

* Chain [[8],12]: 1*it(8)+0
  Such that:it(8) =< V_msize_0/2147483647

  with precondition: [B=2,V_msize_0>=2147483647] 

* Chain [[8],11,12]: 1*it(8)+1
  Such that:it(8) =< V_msize_0/2147483647

  with precondition: [B=2,V_msize_0>=1] 

* Chain [[8],10,12]: 1*it(8)+1
  Such that:it(8) =< V_msize_0/2147483647

  with precondition: [B=2,V_msize_0>=2147483648] 

* Chain [12]: 0
  with precondition: [V_msize_0=0,B=2] 

* Chain [11,12]: 1
  with precondition: [B=2,0>=V_msize_0+1] 

* Chain [10,12]: 1
  with precondition: [B=2,V_msize_0>=1] 


#### Cost of chains of eval_gs_alloc_memset_bb0_in(V_fill,V_lsize,B):
* Chain [17]: 1
  with precondition: [V_lsize=0] 

* Chain [16]: 1*s(7)+1
  with precondition: [0>=V_lsize+1] 

* Chain [15]: 4*s(9)+1*s(10)+2
  Such that:s(8) =< V_lsize/2147483647
s(9) =< s(8)

  with precondition: [V_lsize>=1] 

* Chain [14]...: 1*s(11)+1
  with precondition: [0>=V_lsize+1] 

* Chain [13]...: 1*s(12)+1*s(13)+1
  Such that:s(12) =< V_lsize/2147483647

  with precondition: [V_lsize>=1] 


#### Cost of chains of eval_gs_alloc_memset_start(V_fill,V_lsize,B):
* Chain [22]: 1
  with precondition: [V_lsize=0] 

* Chain [21]: 1*s(14)+1
  with precondition: [0>=V_lsize+1] 

* Chain [20]: 4*s(16)+1*s(17)+2
  Such that:s(15) =< V_lsize/2147483647
s(16) =< s(15)

  with precondition: [V_lsize>=1] 

* Chain [19]...: 1*s(18)+1
  with precondition: [0>=V_lsize+1] 

* Chain [18]...: 1*s(19)+1*s(20)+1
  Such that:s(19) =< V_lsize/2147483647

  with precondition: [V_lsize>=1] 


Closed-form bounds of eval_gs_alloc_memset_start(V_fill,V_lsize,B): 
-------------------------------------
* Chain [22] with precondition: [V_lsize=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [21] with precondition: [0>=V_lsize+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [20] with precondition: [V_lsize>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [0>=V_lsize+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [V_lsize>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gs_alloc_memset_start(V_fill,V_lsize,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 29 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 26 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 109 ms.

