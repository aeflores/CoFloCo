Warning: Ignored call to eval_float80_stop/1 in equation eval_float80_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_float80_bb6_in/1]
1. non_recursive  : [eval_float80_1/1]
2. non_recursive  : [eval_float80_0/1]
3. recursive  : [eval_float80_bb3_in/2]
4. non_recursive  : [loop_cont_eval_float80_bb3_in/2]
5. non_recursive  : [eval_float80_bb0_in/2]
6. non_recursive  : [eval_float80_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_float80_bb3_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_float80_bb0_in/2
6. SCC is partially evaluated into eval_float80_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_float80_bb3_in/2 
* CE 10 is refined into CE [11] 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 


#### Refined cost equations eval_float80_bb3_in/2 
* CE 11: eval_float80_bb3_in(V_sr_0,B) = 0
     [B=2,V_sr_0=0] 
* CE 12: eval_float80_bb3_in(V_sr_0,B) = 1+ eval_float80_bb3_in(C,D)
     [V_sr_0>=1,D=2,B=2] 
* CE 13: eval_float80_bb3_in(V_sr_0,B) = 1+ eval_float80_bb3_in(C,D)
     [0>=V_sr_0+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_float80_bb3_in/2 
* CEs [12] --> Loop 6 
* CEs [13] --> Loop 7 
* CEs [11] --> Loop 8 

#### Loops of eval_float80_bb3_in/2 
* Loop 6: eval_float80_bb3_in(V_sr_0,B)->  eval_float80_bb3_in(V_sr_0',B')
                  [V_sr_0>=1,B'=2,B=2] 
* Loop 7: eval_float80_bb3_in(V_sr_0,B)->  eval_float80_bb3_in(V_sr_0',B')
                  [0>=V_sr_0+1,B'=2,B=2] 
* Loop 8: eval_float80_bb3_in(V_sr_0,B) [B=2,V_sr_0=0] 

### Ranking functions of CR eval_float80_bb3_in(V_sr_0,B) 

#### Partial ranking functions of CR eval_float80_bb3_in(V_sr_0,B) 


### Resulting Chains:eval_float80_bb3_in(V_sr_0,B) 
* [[6,7]]...
* [[6,7],8]
* [8]


### Merging Chains  eval_float80_bb3_in/2 into  External patterns of execution 
* [[8],[8,[6,7]]] --> 1 
* [[[6,7]]] --> 2 


### Specialization of cost equations eval_float80_bb0_in/2 
* CE 3 is refined into CE [14] 
* CE 4 is refined into CE [15,16] 
* CE 5 is refined into CE [17,18] 
* CE 6 is refined into CE [19,20] 
* CE 7 is refined into CE [21,22] 


#### Refined cost equations eval_float80_bb0_in/2 
* CE 14: eval_float80_bb0_in(V_num,B) = 0
     [] 
* CE 15: eval_float80_bb0_in(V_num,B) = 1+ eval_float80_bb3_in(C,D):1
     [V_num>=0,V_num+C=0,D=2] 
* CE 16: eval_float80_bb0_in(V_num,B) = 1+ eval_float80_bb3_in(C,D):2
     [V_num>=0,V_num+C=0,D=2] 
* CE 17: eval_float80_bb0_in(V_num,B) = 1+ eval_float80_bb3_in(V_num,C):1
     [V_num>=0,C=2] 
* CE 18: eval_float80_bb0_in(V_num,B) = 1+ eval_float80_bb3_in(V_num,C):2
     [V_num>=0,C=2] 
* CE 19: eval_float80_bb0_in(V_num,B) = 1+ eval_float80_bb3_in(C,D):1
     [0>=V_num+1,V_num+C=0,D=2] 
* CE 20: eval_float80_bb0_in(V_num,B) = 1+ eval_float80_bb3_in(C,D):2
     [0>=V_num+1,V_num+C=0,D=2] 
* CE 21: eval_float80_bb0_in(V_num,B) = 1+ eval_float80_bb3_in(V_num,C):1
     [0>=V_num+1,C=2] 
* CE 22: eval_float80_bb0_in(V_num,B) = 1+ eval_float80_bb3_in(V_num,C):2
     [0>=V_num+1,C=2] 

### Cost equations --> "Loop" of eval_float80_bb0_in/2 
* CEs [16,18] --> Loop 9 
* CEs [20,22] --> Loop 10 
* CEs [14,15,17,19,21] --> Loop 11 

#### Loops of eval_float80_bb0_in/2 
* Loop 9: eval_float80_bb0_in(V_num,B) [V_num>=0] 
* Loop 10: eval_float80_bb0_in(V_num,B) [0>=V_num+1] 
* Loop 11: eval_float80_bb0_in(V_num,B) [] 

### Ranking functions of CR eval_float80_bb0_in(V_num,B) 

#### Partial ranking functions of CR eval_float80_bb0_in(V_num,B) 


### Resulting Chains:eval_float80_bb0_in(V_num,B) 
* [11]
* [10]...
* [9]...


### Merging Chains  eval_float80_bb0_in/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 
* [[9]] --> 3 


### Specialization of cost equations eval_float80_start/2 
* CE 2 is refined into CE [23,24,25] 


#### Refined cost equations eval_float80_start/2 
* CE 23: eval_float80_start(V_num,B) = 0+ eval_float80_bb0_in(V_num,B):1
     [] 
* CE 24: eval_float80_start(V_num,B) = 0+ eval_float80_bb0_in(V_num,B):2
     [0>=V_num+1] 
* CE 25: eval_float80_start(V_num,B) = 0+ eval_float80_bb0_in(V_num,B):3
     [V_num>=0] 

### Cost equations --> "Loop" of eval_float80_start/2 
* CEs [25] --> Loop 12 
* CEs [24] --> Loop 13 
* CEs [23] --> Loop 14 

#### Loops of eval_float80_start/2 
* Loop 12: eval_float80_start(V_num,B) [V_num>=0] 
* Loop 13: eval_float80_start(V_num,B) [0>=V_num+1] 
* Loop 14: eval_float80_start(V_num,B) [] 

### Ranking functions of CR eval_float80_start(V_num,B) 

#### Partial ranking functions of CR eval_float80_start(V_num,B) 


### Resulting Chains:eval_float80_start(V_num,B) 
* [14]
* [13]...
* [12]...


### Merging Chains  eval_float80_start/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[12]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [6,7] 

 * loop 6:eval_float80_bb3_in(V_sr_0,B) -> [eval_float80_bb3_in(V_sr_0',B')] 
1
 * loop 7:eval_float80_bb3_in(V_sr_0,B) -> [eval_float80_bb3_in(V_sr_0',B')] 
1
#### Cost of phase [6,7]:eval_float80_bb3_in(V_sr_0,B) -> [eval_float80_bb3_in(V_sr_0',B')] 
2*it(6)+0
#### Cost of phase [6,7]:eval_float80_bb3_in(V_sr_0,B) -> [eval_float80_bb3_in(V_sr_0',B')] 
2*it(6)+0
#### Cost of chains of eval_float80_bb3_in(V_sr_0,B):
* Chain [[6,7]]...: 2*it(6)+0
  with precondition: [B=2] 

* Chain [[6,7],8]: 2*it(6)+0
  with precondition: [B=2] 

* Chain [8]: 0
  with precondition: [V_sr_0=0,B=2] 


#### Cost of chains of eval_float80_bb0_in(V_num,B):
* Chain [11]: 1*aux(2)+0
  with precondition: [] 

* Chain [10]...: 1*aux(3)+0
  with precondition: [0>=V_num+1] 

* Chain [9]...: 1*aux(4)+0
  with precondition: [V_num>=0] 


#### Cost of chains of eval_float80_start(V_num,B):
* Chain [14]: 1*s(10)+0
  with precondition: [] 

* Chain [13]...: 1*s(11)+0
  with precondition: [0>=V_num+1] 

* Chain [12]...: 1*s(12)+0
  with precondition: [V_num>=0] 


Closed-form bounds of eval_float80_start(V_num,B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [13]... with precondition: [0>=V_num+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [12]... with precondition: [V_num>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_float80_start(V_num,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 24 ms.
* Invariants computed in 15 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 44 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 29 ms.
   - Equation cost structures 16 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 146 ms.

