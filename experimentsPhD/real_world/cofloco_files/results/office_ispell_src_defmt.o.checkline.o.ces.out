Warning: Ignored call to eval_checkline_stop/1 in equation eval_checkline_bb50_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_checkline_74/23,eval_checkline_75/23,eval_checkline_bb16_in/23]
1. recursive  : [eval_checkline_94/23,eval_checkline_95/23,eval_checkline_bb21_in/23,eval_checkline_bb25_in/23]
2. non_recursive  : [eval_checkline_bb50_in/1]
3. non_recursive  : [eval_checkline_104/1]
4. non_recursive  : [eval_checkline_103/12]
5. recursive  : [eval_checkline_135/24,eval_checkline_136/24,eval_checkline_bb33_in/23,eval_checkline_bb37_in/23,eval_checkline_bb40_in/23]
6. non_recursive  : [eval_checkline_147/1]
7. non_recursive  : [eval_checkline_146/12]
8. recursive  : [eval_checkline_bb52_in/23]
9. recursive  : [eval_checkline_234/36,eval_checkline_235/36,eval_checkline_bb76_in/35]
10. recursive  : [eval_checkline_148/23,eval_checkline_149/23,eval_checkline_154/24,eval_checkline_155/24,eval_checkline_165/23,eval_checkline_166/23,eval_checkline_172/23,eval_checkline_173/23,eval_checkline_175/23,eval_checkline_176/23,eval_checkline_177/23,eval_checkline_178/23,eval_checkline_183/23,eval_checkline_184/23,eval_checkline_186/23,eval_checkline_187/23,eval_checkline_188/23,eval_checkline_189/23,eval_checkline_196/23,eval_checkline_197/23,eval_checkline_198/23,eval_checkline_199/23,eval_checkline_202/23,eval_checkline_203/23,eval_checkline_204/23,eval_checkline_205/23,eval_checkline_206/23,eval_checkline_207/23,eval_checkline_210/23,eval_checkline_211/23,eval_checkline_212/23,eval_checkline_213/23,eval_checkline_221/26,eval_checkline_222/27,eval_checkline_226/28,eval_checkline_227/28,eval_checkline_237/29,eval_checkline_238/29,eval_checkline_242/24,eval_checkline_243/25,eval_checkline_247/26,eval_checkline_248/26,eval_checkline_251/23,eval_checkline_252/23,eval_checkline_256/23,eval_checkline_257/23,eval_checkline_bb44_in/23,eval_checkline_bb46_in/23,eval_checkline_bb56_in/23,eval_checkline_bb79_in/29,eval_checkline_bb83_in/23,loop_cont_eval_checkline_bb52_in/24,loop_cont_eval_checkline_bb76_in/30]
11. non_recursive  : [eval_checkline_164/1]
12. non_recursive  : [eval_checkline_163/12]
13. non_recursive  : [loop_cont_eval_checkline_bb44_in/13]
14. non_recursive  : [eval_checkline__critedge7_in/12]
15. non_recursive  : [loop_cont_eval_checkline_bb33_in/13]
16. non_recursive  : [eval_checkline_113/12]
17. non_recursive  : [eval_checkline_112/12]
18. non_recursive  : [eval_checkline_bb30_in/12]
19. non_recursive  : [eval_checkline__critedge6_in/12]
20. non_recursive  : [loop_cont_eval_checkline_bb21_in/13]
21. non_recursive  : [eval_checkline_77/12]
22. non_recursive  : [eval_checkline_76/12]
23. non_recursive  : [eval_checkline__critedge3_in/12]
24. non_recursive  : [loop_cont_eval_checkline_bb16_in/13]
25. non_recursive  : [eval_checkline_57/12]
26. non_recursive  : [eval_checkline_56/12]
27. non_recursive  : [eval_checkline_55/12]
28. non_recursive  : [eval_checkline_bb15_in/12]
29. non_recursive  : [eval_checkline_54/12]
30. non_recursive  : [eval_checkline_53/12]
31. non_recursive  : [eval_checkline_52/12]
32. non_recursive  : [eval_checkline_51/12]
33. non_recursive  : [eval_checkline_50/12]
34. non_recursive  : [eval_checkline_49/12]
35. non_recursive  : [eval_checkline__critedge_in/12]
36. recursive  : [eval_checkline_42/23,eval_checkline_43/23,eval_checkline_bb7_in/23]
37. non_recursive  : [loop_cont_eval_checkline_bb7_in/13]
38. non_recursive  : [eval_checkline_25/12]
39. non_recursive  : [eval_checkline_24/12]
40. non_recursive  : [eval_checkline_23/12]
41. non_recursive  : [eval_checkline_bb6_in/12]
42. non_recursive  : [eval_checkline_22/12]
43. non_recursive  : [eval_checkline_21/12]
44. non_recursive  : [eval_checkline_20/12]
45. non_recursive  : [eval_checkline_19/12]
46. non_recursive  : [eval_checkline_bb2_in/12]
47. non_recursive  : [eval_checkline_2/12]
48. non_recursive  : [eval_checkline_1/12]
49. non_recursive  : [eval_checkline_bb0_in/12]
50. non_recursive  : [eval_checkline_start/12]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_checkline_bb16_in/23
1. SCC is partially evaluated into eval_checkline_bb21_in/23
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_checkline_bb33_in/23
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_checkline_bb52_in/23
9. SCC is partially evaluated into eval_checkline_bb76_in/35
10. SCC is partially evaluated into eval_checkline_bb44_in/23
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into loop_cont_eval_checkline_bb44_in/13
14. SCC is partially evaluated into eval_checkline__critedge7_in/12
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_checkline_113/12
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_checkline_bb30_in/12
19. SCC is partially evaluated into eval_checkline__critedge6_in/12
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_checkline_77/12
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_checkline_57/12
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is partially evaluated into eval_checkline_54/12
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into eval_checkline_52/12
32. SCC is completely evaluated into other SCCs
33. SCC is partially evaluated into eval_checkline_50/12
34. SCC is completely evaluated into other SCCs
35. SCC is partially evaluated into eval_checkline__critedge_in/12
36. SCC is partially evaluated into eval_checkline_bb7_in/23
37. SCC is completely evaluated into other SCCs
38. SCC is partially evaluated into eval_checkline_25/12
39. SCC is completely evaluated into other SCCs
40. SCC is completely evaluated into other SCCs
41. SCC is completely evaluated into other SCCs
42. SCC is partially evaluated into eval_checkline_22/12
43. SCC is completely evaluated into other SCCs
44. SCC is partially evaluated into eval_checkline_20/12
45. SCC is completely evaluated into other SCCs
46. SCC is partially evaluated into eval_checkline_bb2_in/12
47. SCC is completely evaluated into other SCCs
48. SCC is completely evaluated into other SCCs
49. SCC is completely evaluated into other SCCs
50. SCC is partially evaluated into eval_checkline_start/12

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_checkline_bb16_in/23 
* CE 40 is refined into CE [48] 
* CE 39 is refined into CE [49] 


#### Refined cost equations eval_checkline_bb16_in/23 
* CE 48: eval_checkline_bb16_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) = 0
     [L=9] 
* CE 49: eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 1+ eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,C,D,E,F,G,H,I,J,K,L,M)
     [N=9,B=9] 

### Cost equations --> "Loop" of eval_checkline_bb16_in/23 
* CEs [49] --> Loop 34 
* CEs [48] --> Loop 35 

#### Loops of eval_checkline_bb16_in/23 
* Loop 34: eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M)->  eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B',C,D,E,F,G,H,I,J,K,L,M)
                  [B'=9,B=9] 
* Loop 35: eval_checkline_bb16_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) [L=9] 

### Ranking functions of CR eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 


### Resulting Chains:eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 
* [[34]]...
* [[34],35]
* [35]


### Merging Chains  eval_checkline_bb16_in/23 into  External patterns of execution 
* [[35],[35,[34]]] --> 1 
* [[[34]]] --> 2 


### Specialization of cost equations eval_checkline_bb21_in/23 
* CE 45 is refined into CE [50] 
* CE 44 is refined into CE [51] 


#### Refined cost equations eval_checkline_bb21_in/23 
* CE 50: eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 1+ eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,C,D,E,F,G,H,I,J,K,L,M)
     [N=8,B=8] 
* CE 51: eval_checkline_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) = 0
     [L=8] 

### Cost equations --> "Loop" of eval_checkline_bb21_in/23 
* CEs [51] --> Loop 36 
* CEs [50] --> Loop 37 

#### Loops of eval_checkline_bb21_in/23 
* Loop 36: eval_checkline_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) [L=8] 
* Loop 37: eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M)->  eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B',C,D,E,F,G,H,I,J,K,L,M)
                  [B'=8,B=8] 

### Ranking functions of CR eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 


### Resulting Chains:eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 
* [[37]]...
* [[37],36]
* [36]


### Merging Chains  eval_checkline_bb21_in/23 into  External patterns of execution 
* [[36],[36,[37]]] --> 1 
* [[[37]]] --> 2 


### Specialization of cost equations eval_checkline_bb33_in/23 
* CE 31 is refined into CE [52] 
* CE 30 is refined into CE [53] 


#### Refined cost equations eval_checkline_bb33_in/23 
* CE 52: eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 1+ eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,C,D,E,F,G,H,I,J,K,L,M)
     [N=7,B=7] 
* CE 53: eval_checkline_bb33_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) = 0
     [L=7] 

### Cost equations --> "Loop" of eval_checkline_bb33_in/23 
* CEs [53] --> Loop 38 
* CEs [52] --> Loop 39 

#### Loops of eval_checkline_bb33_in/23 
* Loop 38: eval_checkline_bb33_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) [L=7] 
* Loop 39: eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M)->  eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B',C,D,E,F,G,H,I,J,K,L,M)
                  [B'=7,B=7] 

### Ranking functions of CR eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 


### Resulting Chains:eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 
* [[39]]...
* [[39],38]
* [38]


### Merging Chains  eval_checkline_bb33_in/23 into  External patterns of execution 
* [[38],[38,[39]]] --> 1 
* [[[39]]] --> 2 


### Specialization of cost equations eval_checkline_bb52_in/23 
* CE 26 is refined into CE [54] 
* CE 25 is refined into CE [55] 


#### Refined cost equations eval_checkline_bb52_in/23 
* CE 54: eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 0
     [B=2] 
* CE 55: eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 1+ eval_checkline_bb52_in(N,O,P,Q,R,S,T,U,V,W,X,Y,C,D,E,F,G,H,I,J,K,L,M)
     [Y=2,B=2] 

### Cost equations --> "Loop" of eval_checkline_bb52_in/23 
* CEs [55] --> Loop 40 
* CEs [54] --> Loop 41 

#### Loops of eval_checkline_bb52_in/23 
* Loop 40: eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M)->  eval_checkline_bb52_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C,D,E,F,G,H,I,J,K,L,M)
                  [B'=2,B=2] 
* Loop 41: eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) [B=2] 

### Ranking functions of CR eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 


### Resulting Chains:eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 
* [[40]]...
* [[40],41]
* [41]


### Merging Chains  eval_checkline_bb52_in/23 into  External patterns of execution 
* [[41],[41,[40]]] --> 1 
* [[[40]]] --> 2 


### Specialization of cost equations eval_checkline_bb76_in/35 
* CE 29 is refined into CE [56] 
* CE 28 is refined into CE [57] 
* CE 27 is refined into CE [58] 


#### Refined cost equations eval_checkline_bb76_in/35 
* CE 56: eval_checkline_bb76_in(A,B,C,D,E,F,G,H,I,J,K,L,I,M,N,O,P,Q,A,B,C,D,E,F,G,H,I,R,K,L,I,M,N,O,P) = 0
     [P>=100,L>=38,63>=L,N+O=M+R,N+O=J+M,Q=3] 
* CE 57: eval_checkline_bb76_in(A,B,C,D,E,F,G,H,I,J,K,L,I,M,N,O,P,Q,A,B,C,D,E,F,G,H,I,R,K,L,I,M,N,O,P) = 0
     [P>=0,L>=38,99>=P,63>=L,N+O=M+R,N+O=J+M,Q=3] 
* CE 58: eval_checkline_bb76_in(A,B,C,D,E,F,G,H,I,J,K,L,I,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1) = 1+ eval_checkline_bb76_in(A,B,C,D,E,F,G,H,I,I1,K,L,I,M,N,O,J1,K1,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1)
     [P>=0,L>=38,99>=P,63>=L,N+O=M+I1,N+O=J+M,P+1=J1,K1=3,Q=3] 

### Cost equations --> "Loop" of eval_checkline_bb76_in/35 
* CEs [58] --> Loop 42 
* CEs [56] --> Loop 43 
* CEs [57] --> Loop 44 

#### Loops of eval_checkline_bb76_in/35 
* Loop 42: eval_checkline_bb76_in(A,B,C,D,E,F,G,H,I,J,K,L,I,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1)->  eval_checkline_bb76_in(A,B,C,D,E,F,G,H,I,A',K,L,I,M,N,O,B',C',R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1)
                  [P>=0,L>=38,99>=P,63>=L,M+A'=N+O,J+M=N+O,P+1=B',C'=3,Q=3] 
* Loop 43: eval_checkline_bb76_in(A,B,C,D,E,F,G,H,I,J,K,L,I,M,N,O,P,Q,A,B,C,D,E,F,G,H,I,J,K,L,I,M,N,R,P) [P>=100,L>=38,63>=L,J+M=N+R,J+M=N+O,Q=3] 
* Loop 44: eval_checkline_bb76_in(A,B,C,D,E,F,G,H,I,J,K,L,I,M,N,O,P,Q,A,B,C,D,E,F,G,H,I,J,K,L,I,M,N,R,P) [P>=0,L>=38,99>=P,63>=L,J+M=N+R,J+M=N+O,Q=3] 

### Ranking functions of CR eval_checkline_bb76_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,V_290,V_291,V_295,V_297,V_301,V_i_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) 
* RF of phase [42]: [-V_i_0+100]

#### Partial ranking functions of CR eval_checkline_bb76_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,V_290,V_291,V_295,V_297,V_301,V_i_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) 
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    -V_i_0+100


### Resulting Chains:eval_checkline_bb76_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,V_290,V_291,V_295,V_297,V_301,V_i_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) 
* [[42],44]
* [[42],43]
* [44]


### Merging Chains  eval_checkline_bb76_in/35 into  External patterns of execution 
* [[43,[42]]] --> 1 
* [[44]] --> 2 
* [[44,[42]]] --> 3 


### Specialization of cost equations eval_checkline_bb44_in/23 
* CE 14 is refined into CE [59,60,61,62] 
* CE 15 is refined into CE [63,64,65,66] 
* CE 16 is refined into CE [67,68] 
* CE 12 is refined into CE [69] 
* CE 13 is refined into CE [70] 


#### Refined cost equations eval_checkline_bb44_in/23 
* CE 59: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 3+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):1+ eval_checkline_bb76_in(O,P,Q,R,S,T,U,V,W,X,Y,Z,W,A1,B1,C1,D1,E1,O,P,Q,R,S,T,U,V,W,X,Y,F1,W,A1,B1,G1,H1):1+ eval_checkline_bb44_in(O,P,Q,R,S,T,U,V,W,X,Y,B,C,D,E,F,G,H,I,J,K,L,M)
     [X+A1=B1+G1,X+A1=B1+C1,H1=100,F1=63,E1=3,D1=0,Z=63,N=2] 
* CE 60: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 3+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):1+ eval_checkline_bb76_in(O,P,Q,R,S,T,U,V,W,X,Y,Z,W,A1,B1,C1,D1,E1,O,P,Q,R,S,T,U,V,W,X,Y,F1,W,A1,B1,G1,H1):2+ eval_checkline_bb44_in(O,P,Q,R,S,T,U,V,W,X,Y,B,C,D,E,F,G,H,I,J,K,L,M)
     [X+A1=B1+G1,X+A1=B1+C1,H1=0,F1=63,E1=3,D1=0,Z=63,N=2] 
* CE 61: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 3+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):1+ eval_checkline_bb76_in(O,P,Q,R,S,T,U,V,W,X,Y,Z,W,A1,B1,C1,D1,E1,O,P,Q,R,S,T,U,V,W,X,Y,F1,W,A1,B1,G1,H1):3+ eval_checkline_bb44_in(O,P,Q,R,S,T,U,V,W,X,Y,B,C,D,E,F,G,H,I,J,K,L,M)
     [H1>=1,99>=H1,X+A1=B1+G1,X+A1=B1+C1,F1=63,E1=3,D1=0,Z=63,N=2] 
* CE 62: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 3+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):2
     [X+Z=A1+B1,C1=3,D1=0,E1=63,N=2] 
* CE 63: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 3+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):1+ eval_checkline_bb76_in(O,P,Q,R,S,T,U,V,W,X,Y,Z,W,A1,B1,C1,D1,E1,O,P,Q,R,S,T,U,V,W,X,Y,F1,W,A1,B1,G1,H1):1+ eval_checkline_bb44_in(O,P,Q,R,S,T,U,V,W,X,Y,B,C,D,E,F,G,H,I,J,K,L,M)
     [X+A1=B1+G1,X+A1=B1+C1,H1=100,F1=38,E1=3,D1=0,Z=38,N=2] 
* CE 64: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 3+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):1+ eval_checkline_bb76_in(O,P,Q,R,S,T,U,V,W,X,Y,Z,W,A1,B1,C1,D1,E1,O,P,Q,R,S,T,U,V,W,X,Y,F1,W,A1,B1,G1,H1):2+ eval_checkline_bb44_in(O,P,Q,R,S,T,U,V,W,X,Y,B,C,D,E,F,G,H,I,J,K,L,M)
     [X+A1=B1+G1,X+A1=B1+C1,H1=0,F1=38,E1=3,D1=0,Z=38,N=2] 
* CE 65: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 3+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):1+ eval_checkline_bb76_in(O,P,Q,R,S,T,U,V,W,X,Y,Z,W,A1,B1,C1,D1,E1,O,P,Q,R,S,T,U,V,W,X,Y,F1,W,A1,B1,G1,H1):3+ eval_checkline_bb44_in(O,P,Q,R,S,T,U,V,W,X,Y,B,C,D,E,F,G,H,I,J,K,L,M)
     [H1>=1,99>=H1,X+A1=B1+G1,X+A1=B1+C1,F1=38,E1=3,D1=0,Z=38,N=2] 
* CE 66: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 3+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):2
     [X+Z=A1+B1,C1=3,D1=0,E1=38,N=2] 
* CE 67: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 2+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):1+ eval_checkline_bb44_in(O,P,Q,R,S,T,U,V,W,X,Y,B,C,D,E,F,G,H,I,J,K,L,M)
     [N=2] 
* CE 68: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 2+ eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,O,P,Q,R,S,T,U,V,W,X,Y):2
     [N=2] 
* CE 69: eval_checkline_bb44_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) = 0
     [L=6] 
* CE 70: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 0
     [B=5] 

### Cost equations --> "Loop" of eval_checkline_bb44_in/23 
* CEs [69] --> Loop 45 
* CEs [70] --> Loop 46 
* CEs [62,66,68] --> Loop 47 
* CEs [59,60,61,63,64,65,67] --> Loop 48 

#### Loops of eval_checkline_bb44_in/23 
* Loop 45: eval_checkline_bb44_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) [L=6] 
* Loop 46: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) [B=5] 
* Loop 47: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) [] 
* Loop 48: eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M)->  eval_checkline_bb44_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B,C,D,E,F,G,H,I,J,K,L,M)
                  [] 

### Ranking functions of CR eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 


### Resulting Chains:eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 
* [[48]]...
* [[48],47]...
* [[48],46]
* [[48],45]
* [47]...
* [46]
* [45]


### Merging Chains  eval_checkline_bb44_in/23 into  External patterns of execution 
* [[46],[46,[48]]] --> 1 
* [[45],[45,[48]]] --> 2 
* [[47],[[48]],[47,[48]]] --> 3 


### Specialization of cost equations loop_cont_eval_checkline_bb44_in/13 
* CE 18 is refined into CE [71] 
* CE 17 is refined into CE [72] 


#### Refined cost equations loop_cont_eval_checkline_bb44_in/13 
* CE 71: loop_cont_eval_checkline_bb44_in(M,A,B,C,D,E,F,G,H,I,J,K,L) = 0
     [M=6] 
* CE 72: loop_cont_eval_checkline_bb44_in(M,A,B,C,D,E,F,G,H,I,J,K,L) = 0
     [M=5] 

### Cost equations --> "Loop" of loop_cont_eval_checkline_bb44_in/13 
* CEs [71] --> Loop 49 
* CEs [72] --> Loop 50 

#### Loops of loop_cont_eval_checkline_bb44_in/13 
* Loop 49: loop_cont_eval_checkline_bb44_in(M,A,B,C,D,E,F,G,H,I,J,K,L) [M=6] 
* Loop 50: loop_cont_eval_checkline_bb44_in(M,A,B,C,D,E,F,G,H,I,J,K,L) [M=5] 

### Ranking functions of CR loop_cont_eval_checkline_bb44_in(M,A,B,C,D,E,F,G,H,I,J,K,L) 

#### Partial ranking functions of CR loop_cont_eval_checkline_bb44_in(M,A,B,C,D,E,F,G,H,I,J,K,L) 


### Resulting Chains:loop_cont_eval_checkline_bb44_in(M,A,B,C,D,E,F,G,H,I,J,K,L) 
* [50]
* [49]


### Merging Chains  loop_cont_eval_checkline_bb44_in/13 into  External patterns of execution 
* [[50]] --> 1 
* [[49]] --> 2 


### Specialization of cost equations eval_checkline__critedge7_in/12 
* CE 32 is refined into CE [73] 
* CE 33 is refined into CE [74,75,76] 


#### Refined cost equations eval_checkline__critedge7_in/12 
* CE 73: eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0
     [] 
* CE 74: eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):1+ loop_cont_eval_checkline_bb44_in(O,D,E,F,G,H,I,J,K,L,M,N,B):1
     [O=5,C=5] 
* CE 75: eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):2+ loop_cont_eval_checkline_bb44_in(O,D,E,F,G,H,I,J,K,L,M,N,B):2
     [O=6,C=6] 
* CE 76: eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):3
     [] 

### Cost equations --> "Loop" of eval_checkline__critedge7_in/12 
* CEs [76] --> Loop 51 
* CEs [73,74,75] --> Loop 52 

#### Loops of eval_checkline__critedge7_in/12 
* Loop 51: eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 52: eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [52]
* [51]...


### Merging Chains  eval_checkline__critedge7_in/12 into  External patterns of execution 
* [[52]] --> 1 
* [[51]] --> 2 


### Specialization of cost equations eval_checkline_113/12 
* CE 19 is refined into CE [77,78,79] 


#### Refined cost equations eval_checkline_113/12 
* CE 77: eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit):1+ eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [C=7] 
* CE 78: eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit):1+ eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [C=7] 
* CE 79: eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):2
     [C=7] 

### Cost equations --> "Loop" of eval_checkline_113/12 
* CEs [78,79] --> Loop 53 
* CEs [77] --> Loop 54 

#### Loops of eval_checkline_113/12 
* Loop 53: eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 54: eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [54]
* [53]...


### Merging Chains  eval_checkline_113/12 into  External patterns of execution 
* [[54]] --> 1 
* [[53]] --> 2 


### Specialization of cost equations eval_checkline_bb30_in/12 
* CE 6 is refined into CE [80,81,82] 
* CE 7 is refined into CE [83,84] 


#### Refined cost equations eval_checkline_bb30_in/12 
* CE 80: eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):1+ loop_cont_eval_checkline_bb44_in(O,D,E,F,G,H,I,J,K,L,M,N,B):1
     [O=5,C=5] 
* CE 81: eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):2+ loop_cont_eval_checkline_bb44_in(O,D,E,F,G,H,I,J,K,L,M,N,B):2
     [O=6,C=6] 
* CE 82: eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):3
     [] 
* CE 83: eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 84: eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline_bb30_in/12 
* CEs [82,84] --> Loop 55 
* CEs [80,81,83] --> Loop 56 

#### Loops of eval_checkline_bb30_in/12 
* Loop 55: eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 56: eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [56]
* [55]...


### Merging Chains  eval_checkline_bb30_in/12 into  External patterns of execution 
* [[56]] --> 1 
* [[55]] --> 2 


### Specialization of cost equations eval_checkline__critedge6_in/12 
* CE 46 is refined into CE [85] 
* CE 47 is refined into CE [86,87] 


#### Refined cost equations eval_checkline__critedge6_in/12 
* CE 85: eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0
     [] 
* CE 86: eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 87: eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline__critedge6_in/12 
* CEs [87] --> Loop 57 
* CEs [85,86] --> Loop 58 

#### Loops of eval_checkline__critedge6_in/12 
* Loop 57: eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 58: eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [58]
* [57]...


### Merging Chains  eval_checkline__critedge6_in/12 into  External patterns of execution 
* [[58]] --> 1 
* [[57]] --> 2 


### Specialization of cost equations eval_checkline_77/12 
* CE 41 is refined into CE [88,89,90] 


#### Refined cost equations eval_checkline_77/12 
* CE 88: eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit):1+ eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [C=8] 
* CE 89: eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit):1+ eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [C=8] 
* CE 90: eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):2
     [C=8] 

### Cost equations --> "Loop" of eval_checkline_77/12 
* CEs [89,90] --> Loop 59 
* CEs [88] --> Loop 60 

#### Loops of eval_checkline_77/12 
* Loop 59: eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 60: eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [60]
* [59]...


### Merging Chains  eval_checkline_77/12 into  External patterns of execution 
* [[60]] --> 1 
* [[59]] --> 2 


### Specialization of cost equations eval_checkline_57/12 
* CE 36 is refined into CE [91,92,93] 


#### Refined cost equations eval_checkline_57/12 
* CE 91: eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit):1+ eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [C=9] 
* CE 92: eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit):1+ eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [C=9] 
* CE 93: eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):2
     [C=9] 

### Cost equations --> "Loop" of eval_checkline_57/12 
* CEs [92,93] --> Loop 61 
* CEs [91] --> Loop 62 

#### Loops of eval_checkline_57/12 
* Loop 61: eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 62: eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [62]
* [61]...


### Merging Chains  eval_checkline_57/12 into  External patterns of execution 
* [[62]] --> 1 
* [[61]] --> 2 


### Specialization of cost equations eval_checkline_54/12 
* CE 42 is refined into CE [94,95] 
* CE 43 is refined into CE [96,97] 


#### Refined cost equations eval_checkline_54/12 
* CE 94: eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 95: eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 
* CE 96: eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 97: eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline_54/12 
* CEs [95,97] --> Loop 63 
* CEs [94,96] --> Loop 64 

#### Loops of eval_checkline_54/12 
* Loop 63: eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 64: eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [64]
* [63]...


### Merging Chains  eval_checkline_54/12 into  External patterns of execution 
* [[64]] --> 1 
* [[63]] --> 2 


### Specialization of cost equations eval_checkline_52/12 
* CE 37 is refined into CE [98,99] 
* CE 38 is refined into CE [100,101] 


#### Refined cost equations eval_checkline_52/12 
* CE 98: eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 99: eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 
* CE 100: eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 101: eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline_52/12 
* CEs [99,101] --> Loop 65 
* CEs [98,100] --> Loop 66 

#### Loops of eval_checkline_52/12 
* Loop 65: eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 66: eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [66]
* [65]...


### Merging Chains  eval_checkline_52/12 into  External patterns of execution 
* [[66]] --> 1 
* [[65]] --> 2 


### Specialization of cost equations eval_checkline_50/12 
* CE 23 is refined into CE [102,103] 
* CE 24 is refined into CE [104,105] 


#### Refined cost equations eval_checkline_50/12 
* CE 102: eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 103: eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 
* CE 104: eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 105: eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline_50/12 
* CEs [103,105] --> Loop 67 
* CEs [102,104] --> Loop 68 

#### Loops of eval_checkline_50/12 
* Loop 67: eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 68: eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [68]
* [67]...


### Merging Chains  eval_checkline_50/12 into  External patterns of execution 
* [[68]] --> 1 
* [[67]] --> 2 


### Specialization of cost equations eval_checkline__critedge_in/12 
* CE 10 is refined into CE [106,107] 
* CE 11 is refined into CE [108,109] 


#### Refined cost equations eval_checkline__critedge_in/12 
* CE 106: eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 107: eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 
* CE 108: eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 109: eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline__critedge_in/12 
* CEs [107,109] --> Loop 69 
* CEs [106,108] --> Loop 70 

#### Loops of eval_checkline__critedge_in/12 
* Loop 69: eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 70: eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [70]
* [69]...


### Merging Chains  eval_checkline__critedge_in/12 into  External patterns of execution 
* [[70]] --> 1 
* [[69]] --> 2 


### Specialization of cost equations eval_checkline_bb7_in/23 
* CE 35 is refined into CE [110] 
* CE 34 is refined into CE [111] 


#### Refined cost equations eval_checkline_bb7_in/23 
* CE 110: eval_checkline_bb7_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) = 0
     [L=4] 
* CE 111: eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) = 1+ eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,N,C,D,E,F,G,H,I,J,K,L,M)
     [N=4,B=4] 

### Cost equations --> "Loop" of eval_checkline_bb7_in/23 
* CEs [111] --> Loop 71 
* CEs [110] --> Loop 72 

#### Loops of eval_checkline_bb7_in/23 
* Loop 71: eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M)->  eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B',C,D,E,F,G,H,I,J,K,L,M)
                  [B'=4,B=4] 
* Loop 72: eval_checkline_bb7_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,J,K) [L=4] 

### Ranking functions of CR eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 


### Resulting Chains:eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) 
* [[71]]...
* [[71],72]
* [72]


### Merging Chains  eval_checkline_bb7_in/23 into  External patterns of execution 
* [[72],[72,[71]]] --> 1 
* [[[71]]] --> 2 


### Specialization of cost equations eval_checkline_25/12 
* CE 20 is refined into CE [112,113,114] 


#### Refined cost equations eval_checkline_25/12 
* CE 112: eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit):1+ eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [C=4] 
* CE 113: eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit):1+ eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [C=4] 
* CE 114: eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 1+ eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,C,D,E,F,G,H,I,J,K,L,M,N):2
     [C=4] 

### Cost equations --> "Loop" of eval_checkline_25/12 
* CEs [113,114] --> Loop 73 
* CEs [112] --> Loop 74 

#### Loops of eval_checkline_25/12 
* Loop 73: eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 74: eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [74]
* [73]...


### Merging Chains  eval_checkline_25/12 into  External patterns of execution 
* [[74]] --> 1 
* [[73]] --> 2 


### Specialization of cost equations eval_checkline_22/12 
* CE 21 is refined into CE [115,116] 
* CE 22 is refined into CE [117,118] 


#### Refined cost equations eval_checkline_22/12 
* CE 115: eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 116: eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 
* CE 117: eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 118: eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline_22/12 
* CEs [116,118] --> Loop 75 
* CEs [115,117] --> Loop 76 

#### Loops of eval_checkline_22/12 
* Loop 75: eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 76: eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [76]
* [75]...


### Merging Chains  eval_checkline_22/12 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 


### Specialization of cost equations eval_checkline_20/12 
* CE 8 is refined into CE [119,120] 
* CE 9 is refined into CE [121,122] 


#### Refined cost equations eval_checkline_20/12 
* CE 119: eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 120: eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 
* CE 121: eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 122: eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline_20/12 
* CEs [120,122] --> Loop 77 
* CEs [119,121] --> Loop 78 

#### Loops of eval_checkline_20/12 
* Loop 77: eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 78: eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [78]
* [77]...


### Merging Chains  eval_checkline_20/12 into  External patterns of execution 
* [[78]] --> 1 
* [[77]] --> 2 


### Specialization of cost equations eval_checkline_bb2_in/12 
* CE 3 is refined into CE [123,124] 
* CE 4 is refined into CE [125,126] 
* CE 5 is refined into CE [127,128] 


#### Refined cost equations eval_checkline_bb2_in/12 
* CE 123: eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 124: eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 
* CE 125: eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 126: eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 
* CE 127: eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 128: eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline_bb2_in/12 
* CEs [124,126,128] --> Loop 79 
* CEs [123,125,127] --> Loop 80 

#### Loops of eval_checkline_bb2_in/12 
* Loop 79: eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 80: eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [80]
* [79]...


### Merging Chains  eval_checkline_bb2_in/12 into  External patterns of execution 
* [[80]] --> 1 
* [[79]] --> 2 


### Specialization of cost equations eval_checkline_start/12 
* CE 2 is refined into CE [129,130] 


#### Refined cost equations eval_checkline_start/12 
* CE 129: eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):1
     [] 
* CE 130: eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) = 0+ eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):2
     [] 

### Cost equations --> "Loop" of eval_checkline_start/12 
* CEs [130] --> Loop 81 
* CEs [129] --> Loop 82 

#### Loops of eval_checkline_start/12 
* Loop 81: eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 
* Loop 82: eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) [] 

### Ranking functions of CR eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 

#### Partial ranking functions of CR eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 


### Resulting Chains:eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B) 
* [82]
* [81]...


### Merging Chains  eval_checkline_start/12 into  External patterns of execution 
* [[82]] --> 1 
* [[81]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [34] 

 * loop 34:eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb16_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1
#### Cost of phase [34]:eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb16_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(34)+0
#### Cost of phase [34]:eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb16_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(34)+0
#### Cost of chains of eval_checkline_bb16_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[34]]...: 1*it(34)+0
  with precondition: [B=9] 

* Chain [[34],35]: 1*it(34)+0
  with precondition: [B=9,V__tflag=C,V__lflag=D,V__aflag=E,V__cbench_print=F,V__minword=G,V__cflag=H,V__terse=I,V__pcount=J,V__easypossibilities=K,V__contextoffset=L,V__quit=M] 

* Chain [35]: 0
  with precondition: [B=9,C=V__tflag,D=V__lflag,E=V__aflag,F=V__cbench_print,G=V__minword,H=V__cflag,I=V__terse,J=V__pcount,K=V__easypossibilities,L=V__contextoffset,M=V__quit] 


#### Cost of loops [37] 

 * loop 37:eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb21_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1
#### Cost of phase [37]:eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb21_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(37)+0
#### Cost of phase [37]:eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb21_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(37)+0
#### Cost of chains of eval_checkline_bb21_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[37]]...: 1*it(37)+0
  with precondition: [B=8] 

* Chain [[37],36]: 1*it(37)+0
  with precondition: [B=8,V__tflag=C,V__lflag=D,V__aflag=E,V__cbench_print=F,V__minword=G,V__cflag=H,V__terse=I,V__pcount=J,V__easypossibilities=K,V__contextoffset=L,V__quit=M] 

* Chain [36]: 0
  with precondition: [B=8,C=V__tflag,D=V__lflag,E=V__aflag,F=V__cbench_print,G=V__minword,H=V__cflag,I=V__terse,J=V__pcount,K=V__easypossibilities,L=V__contextoffset,M=V__quit] 


#### Cost of loops [39] 

 * loop 39:eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb33_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1
#### Cost of phase [39]:eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb33_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(39)+0
#### Cost of phase [39]:eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb33_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(39)+0
#### Cost of chains of eval_checkline_bb33_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[39]]...: 1*it(39)+0
  with precondition: [B=7] 

* Chain [[39],38]: 1*it(39)+0
  with precondition: [B=7,V__tflag=C,V__lflag=D,V__aflag=E,V__cbench_print=F,V__minword=G,V__cflag=H,V__terse=I,V__pcount=J,V__easypossibilities=K,V__contextoffset=L,V__quit=M] 

* Chain [38]: 0
  with precondition: [B=7,C=V__tflag,D=V__lflag,E=V__aflag,F=V__cbench_print,G=V__minword,H=V__cflag,I=V__terse,J=V__pcount,K=V__easypossibilities,L=V__contextoffset,M=V__quit] 


#### Cost of loops [40] 

 * loop 40:eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb52_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1
#### Cost of phase [40]:eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb52_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(40)+0
#### Cost of phase [40]:eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb52_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(40)+0
#### Cost of chains of eval_checkline_bb52_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[40]]...: 1*it(40)+0
  with precondition: [B=2] 

* Chain [[40],41]: 1*it(40)+0
  with precondition: [B=2] 

* Chain [41]: 0
  with precondition: [B=2] 


#### Cost of loops [42] 

 * loop 42:eval_checkline_bb76_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,V_290,V_291,V_295,V_297,V_301,V_i_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_checkline_bb76_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',V_290',V_291',V_295',V_297',V_301',V_i_0',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1
#### Cost of phase [42]:eval_checkline_bb76_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,V_290,V_291,V_295,V_297,V_301,V_i_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_checkline_bb76_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',V_290',V_291',V_295',V_297',V_301',V_i_0',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(42)+0
  Such that:it(42) =< -V_i_0+100
it(42) =< -V_i_0+V_i_0'

#### Cost of phase [42]:eval_checkline_bb76_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,V_290,V_291,V_295,V_297,V_301,V_i_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S) -> [eval_checkline_bb76_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',V_290',V_291',V_295',V_297',V_301',V_i_0',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S')] 
1*it(42)+0
  Such that:it(42) =< -V_i_0+100
it(42) =< -V_i_0+V_i_0'

#### Cost of chains of eval_checkline_bb76_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,V_290,V_291,V_295,V_297,V_301,V_i_0,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S):
* Chain [[42],44]: 1*it(42)+0
  Such that:it(42) =< -V_i_0+S

  with precondition: [B=3,V__easypossibilities=V_291,V__tflag=C,V__lflag=D,V__aflag=E,V__cbench_print=F,V__minword=G,V__cflag=H,V__terse=I,V__pcount=J,V__easypossibilities=K,V__contextoffset=L,V__quit=M,V_290=N,V__easypossibilities=O,V_295=P,V_297=Q,V_295+V__contextoffset=V_297+V_301,V_295+V__contextoffset=V_297+R,63>=V_290,99>=S,V_290>=38,V_i_0>=0,S>=V_i_0+1] 

* Chain [[42],43]: 1*it(42)+0
  Such that:it(42) =< -V_i_0+100

  with precondition: [B=3,S=100,V__easypossibilities=V_291,V__tflag=C,V__lflag=D,V__aflag=E,V__cbench_print=F,V__minword=G,V__cflag=H,V__terse=I,V__pcount=J,V__easypossibilities=K,V__contextoffset=L,V__quit=M,V_290=N,V__easypossibilities=O,V_295=P,V_297=Q,V_295+V__contextoffset=V_297+V_301,V_295+V__contextoffset=V_297+R,63>=V_290,99>=V_i_0,V_290>=38,V_i_0>=0] 

* Chain [44]: 0
  with precondition: [B=3,C=V__tflag,D=V__lflag,E=V__aflag,F=V__cbench_print,G=V__minword,H=V__cflag,I=V__terse,J=V__pcount,V_291=V__easypossibilities,M=V__quit,V_291=K,V__contextoffset=L,V_290=N,V_291=O,V_295=P,V_297=Q,V_i_0=S,V_295+V__contextoffset=V_297+V_301,V_295+V__contextoffset=V_297+R,63>=V_290,99>=V_i_0,V_290>=38,V_i_0>=0] 


#### Cost of loops [48] 

 * loop 48:eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb44_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*s(16)+0
#### Cost of phase [48]:eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb44_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*s(17)+0
#### Cost of phase [48]:eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb44_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*s(17)+0
#### Cost of phase [48]:eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb44_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*s(17)+0
#### Cost of phase [48]:eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb44_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*s(17)+0
#### Cost of chains of eval_checkline_bb44_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[48]]...: 1*s(17)+0
  with precondition: [] 

* Chain [[48],47]...: 2*aux(8)+0
  with precondition: [] 

* Chain [[48],46]: 1*s(17)+0
  with precondition: [B=5] 

* Chain [[48],45]: 1*s(17)+0
  with precondition: [B=6] 

* Chain [47]...: 1*aux(8)+0
  with precondition: [] 

* Chain [46]: 0
  with precondition: [B=5] 

* Chain [45]: 0
  with precondition: [B=6,C=V__tflag,D=V__lflag,E=V__aflag,F=V__cbench_print,G=V__minword,H=V__cflag,I=V__terse,J=V__pcount,K=V__easypossibilities,L=V__contextoffset,M=V__quit] 


#### Cost of chains of loop_cont_eval_checkline_bb44_in(M,A,B,C,D,E,F,G,H,I,J,K,L):
* Chain [50]: 0
  with precondition: [M=5] 

* Chain [49]: 0
  with precondition: [M=6] 


#### Cost of chains of eval_checkline__critedge7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [52]: 1*aux(12)+0
  with precondition: [] 

* Chain [51]...: 1*s(28)+1
  with precondition: [] 


#### Cost of chains of eval_checkline_113(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [54]: 2*s(29)+1
  with precondition: [] 

* Chain [53]...: 1*aux(13)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_bb30_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [56]: 1*aux(14)+0
  with precondition: [] 

* Chain [55]...: 1*aux(15)+0
  with precondition: [] 


#### Cost of chains of eval_checkline__critedge6_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [58]: 1*aux(16)+0
  with precondition: [] 

* Chain [57]...: 1*s(40)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_77(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [60]: 2*s(41)+1
  with precondition: [] 

* Chain [59]...: 1*aux(17)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_57(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [62]: 3*s(46)+2
  with precondition: [] 

* Chain [61]...: 1*aux(18)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_54(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [64]: 1*aux(19)+0
  with precondition: [] 

* Chain [63]...: 1*aux(20)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_52(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [66]: 1*aux(21)+0
  with precondition: [] 

* Chain [65]...: 1*aux(22)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_50(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [68]: 1*aux(23)+0
  with precondition: [] 

* Chain [67]...: 1*aux(24)+0
  with precondition: [] 


#### Cost of chains of eval_checkline__critedge_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [70]: 1*aux(25)+0
  with precondition: [] 

* Chain [69]...: 1*aux(26)+0
  with precondition: [] 


#### Cost of loops [71] 

 * loop 71:eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb7_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1
#### Cost of phase [71]:eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb7_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(71)+0
#### Cost of phase [71]:eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M) -> [eval_checkline_bb7_in(V__tflag',V__lflag',V__aflag',V__cbench_print',V__minword',V__cflag',V__terse',V__pcount',V__easypossibilities',V__contextoffset',V__quit',B',C',D',E',F',G',H',I',J',K',L',M')] 
1*it(71)+0
#### Cost of chains of eval_checkline_bb7_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[71]]...: 1*it(71)+0
  with precondition: [B=4] 

* Chain [[71],72]: 1*it(71)+0
  with precondition: [B=4,V__tflag=C,V__lflag=D,V__aflag=E,V__cbench_print=F,V__minword=G,V__cflag=H,V__terse=I,V__pcount=J,V__easypossibilities=K,V__contextoffset=L,V__quit=M] 

* Chain [72]: 0
  with precondition: [B=4,C=V__tflag,D=V__lflag,E=V__aflag,F=V__cbench_print,G=V__minword,H=V__cflag,I=V__terse,J=V__pcount,K=V__easypossibilities,L=V__contextoffset,M=V__quit] 


#### Cost of chains of eval_checkline_25(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [74]: 2*s(68)+1
  with precondition: [] 

* Chain [73]...: 1*aux(28)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_22(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [76]: 1*aux(29)+0
  with precondition: [] 

* Chain [75]...: 1*aux(30)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_20(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [78]: 1*aux(31)+0
  with precondition: [] 

* Chain [77]...: 1*aux(32)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_bb2_in(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [80]: 1*aux(33)+0
  with precondition: [] 

* Chain [79]...: 1*aux(34)+0
  with precondition: [] 


#### Cost of chains of eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B):
* Chain [82]: 1*s(87)+0
  with precondition: [] 

* Chain [81]...: 1*s(88)+0
  with precondition: [] 


Closed-form bounds of eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B): 
-------------------------------------
* Chain [82] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [81]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_checkline_start(V__tflag,V__lflag,V__aflag,V__cbench_print,V__minword,V__cflag,V__terse,V__pcount,V__easypossibilities,V__contextoffset,V__quit,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 2127 ms.
* Invariants computed in 174 ms.
   - Backward Invariants 93 ms.
   - Transitive Invariants 39 ms.
* Refinement performed in 518 ms.
* Termination proved in 32 ms.
* Upper bounds computed in 301 ms.
   - Equation cost structures 166 ms.
   - Phase cost structures 97 ms.
   - Chain cost structures 92 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 4487 ms.

