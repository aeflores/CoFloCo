WARNING: Excluded non-linear constraints:[D-B*F>=0,D-B*F+1=<B]
WARNING: Excluded non-linear constraints:[D-B*F>=0,D-B*F+1=< -B]
WARNING: Excluded non-linear constraints:[-D+B*F>=0,-D+B*F+1=<B]
WARNING: Excluded non-linear constraints:[-D+B*F>=0,-D+B*F+1=< -B]
WARNING: Excluded non-linear constraints:[H=D*E,I=D*F]
Warning: Ignored call to eval_get_audio_stop/1 in equation eval_get_audio_bb14_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_get_audio_bb14_in/1]
1. non_recursive  : [eval_get_audio_bb12_in/3]
2. non_recursive  : [eval_get_audio_25/3]
3. non_recursive  : [eval_get_audio_24/5]
4. recursive  : [eval_get_audio_bb11_in/7,eval_get_audio_bb7_in/7]
5. non_recursive  : [loop_cont_eval_get_audio_bb7_in/4]
6. non_recursive  : [eval_get_audio_29/5]
7. non_recursive  : [eval_get_audio_28/8]
8. non_recursive  : [eval_get_audio_bb4_in/7]
9. non_recursive  : [eval_get_audio_bb2_in/5]
10. non_recursive  : [eval_get_audio_5/6]
11. non_recursive  : [eval_get_audio_4/5]
12. non_recursive  : [eval_get_audio_bb0_in/4]
13. non_recursive  : [eval_get_audio_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_get_audio_bb7_in/7
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_get_audio_29/5
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_get_audio_bb4_in/7
9. SCC is partially evaluated into eval_get_audio_bb2_in/5
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_get_audio_bb0_in/4
13. SCC is partially evaluated into eval_get_audio_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_get_audio_bb7_in/7 
* CE 16 is refined into CE [17] 
* CE 15 is refined into CE [18] 


#### Refined cost equations eval_get_audio_bb7_in/7 
* CE 17: eval_get_audio_bb7_in(A,B,C,D,E,A,C) = 0
     [D>=B,D>=0,E=2] 
* CE 18: eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,V_31,V_j_0,B,C,D) = 1+ eval_get_audio_bb7_in(E,V_8,V_31,F,G,C,D)
     [V_8>=V_j_0+1,V_j_0>=0,V_j_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_get_audio_bb7_in/7 
* CEs [18] --> Loop 12 
* CEs [17] --> Loop 13 

#### Loops of eval_get_audio_bb7_in/7 
* Loop 12: eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,V_31,V_j_0,B,C,D)->  eval_get_audio_bb7_in(V__get_audio_num_samples_read',V_8,V_31,V_j_0',B',C,D)
                  [V_8>=V_j_0+1,V_j_0>=0,V_j_0+1=V_j_0',B'=2,B=2] 
* Loop 13: eval_get_audio_bb7_in(A,B,C,D,E,A,C) [D>=B,D>=0,E=2] 

### Ranking functions of CR eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,V_31,V_j_0,B,C,D) 
* RF of phase [12]: [V_8-V_j_0]

#### Partial ranking functions of CR eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,V_31,V_j_0,B,C,D) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_8-V_j_0


### Resulting Chains:eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,V_31,V_j_0,B,C,D) 
* [[12],13]
* [13]


### Merging Chains  eval_get_audio_bb7_in/7 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[12]]] --> 2 


### Specialization of cost equations eval_get_audio_29/5 
* CE 11 is refined into CE [19,20] 
* CE 13 is refined into CE [21,22] 
* CE 12 is refined into CE [23,24] 
* CE 14 is refined into CE [25,26] 
* CE 10 is refined into CE [27,28] 


#### Refined cost equations eval_get_audio_29/5 
* CE 19: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,V__get_audio_num_samples_read,C):1
     [C>=0,V_30>=1,V_1>=1,0>=V_8,E=2,D=0] 
* CE 20: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,F,C):2
     [C>=0,V_8>=1,V_30>=1,V_1>=1,E=2,D=0] 
* CE 21: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,V__get_audio_num_samples_read,C):1
     [V_1>=1,0>=C,0>=V_8,0>=V_30+1,E=2,D=0] 
* CE 22: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,F,C):2
     [V_8>=1,V_1>=1,0>=C,0>=V_30+1,E=2,D=0] 
* CE 23: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,V__get_audio_num_samples_read,C):1
     [V_30>=1,0>=C,0>=V_8,0>=V_1+1,E=2,D=0] 
* CE 24: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,F,C):2
     [V_8>=1,V_30>=1,0>=C,0>=V_1+1,E=2,D=0] 
* CE 25: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,V__get_audio_num_samples_read,C):1
     [C>=0,0>=V_8,0>=V_30+1,0>=V_1+1,E=2,D=0] 
* CE 26: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,F,C):2
     [C>=0,V_8>=1,0>=V_30+1,0>=V_1+1,E=2,D=0] 
* CE 27: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,V__get_audio_num_samples_read,F):1
     [0>=V_8,F=0,E=2,D=0,C=0,V_30=0] 
* CE 28: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) = 1+ eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,C,D,E,F,G):2
     [V_8>=1,G=0,E=2,D=0,C=0,V_30=0] 

### Cost equations --> "Loop" of eval_get_audio_29/5 
* CEs [20] --> Loop 14 
* CEs [22] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [25] --> Loop 21 
* CEs [28] --> Loop 22 
* CEs [27] --> Loop 23 

#### Loops of eval_get_audio_29/5 
* Loop 14: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [V_30>=1,V_8>=1,V_1>=1] 
* Loop 15: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [V_8>=1,V_1>=1,0>=V_30+1] 
* Loop 16: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [V_30>=1,V_1>=1,0>=V_8] 
* Loop 17: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [V_1>=1,0>=V_30+1,0>=V_8] 
* Loop 18: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [V_30>=1,V_8>=1,0>=V_1+1] 
* Loop 19: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [V_8>=1,0>=V_30+1,0>=V_1+1] 
* Loop 20: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [V_30>=1,0>=V_8,0>=V_1+1] 
* Loop 21: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [0>=V_30+1,0>=V_8,0>=V_1+1] 
* Loop 22: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [V_8>=1,V_30=0] 
* Loop 23: eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) [0>=V_8,V_30=0] 

### Ranking functions of CR eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) 

#### Partial ranking functions of CR eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) 


### Resulting Chains:eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B) 
* [23]
* [22]
* [21]
* [20]
* [19]
* [18]
* [17]
* [16]
* [15]
* [14]


### Merging Chains  eval_get_audio_29/5 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21]] --> 3 
* [[20]] --> 4 
* [[19]] --> 5 
* [[18]] --> 6 
* [[17]] --> 7 
* [[16]] --> 8 
* [[15]] --> 9 
* [[14]] --> 10 


### Specialization of cost equations eval_get_audio_bb4_in/7 
* CE 8 is refined into CE [29] 
* CE 9 is refined into CE [30,31,32,33,34,35,36,37,38,39] 


#### Refined cost equations eval_get_audio_bb4_in/7 
* CE 29: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0
     [] 
* CE 30: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):1
     [0>=V_8,C=0] 
* CE 31: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):2
     [V_8>=1,C=0] 
* CE 32: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):3
     [0>=C+1,0>=V_8,0>=V_1+1] 
* CE 33: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):4
     [C>=1,0>=V_8,0>=V_1+1] 
* CE 34: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):5
     [V_8>=1,0>=C+1,0>=V_1+1] 
* CE 35: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):6
     [C>=1,V_8>=1,0>=V_1+1] 
* CE 36: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):7
     [V_1>=1,0>=C+1,0>=V_8] 
* CE 37: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):8
     [C>=1,V_1>=1,0>=V_8] 
* CE 38: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):9
     [V_8>=1,V_1>=1,0>=C+1] 
* CE 39: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) = 0+ eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,C,B):10
     [C>=1,V_8>=1,V_1>=1] 

### Cost equations --> "Loop" of eval_get_audio_bb4_in/7 
* CEs [29,30,31,32,33,34,35,36,37,38,39] --> Loop 24 

#### Loops of eval_get_audio_bb4_in/7 
* Loop 24: eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) [] 

### Ranking functions of CR eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) 

#### Partial ranking functions of CR eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) 


### Resulting Chains:eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B) 
* [24]


### Merging Chains  eval_get_audio_bb4_in/7 into  External patterns of execution 
* [[24]] --> 1 


### Specialization of cost equations eval_get_audio_bb2_in/5 
* CE 5 is refined into CE [40] 
* CE 6 is refined into CE [41] 
* CE 7 is refined into CE [42] 


#### Refined cost equations eval_get_audio_bb2_in/5 
* CE 40: eval_get_audio_bb2_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,B) = 0+ eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,C,D,B):1
     [D=0] 
* CE 41: eval_get_audio_bb2_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,B) = 0+ eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,C,C,B):1
     [] 
* CE 42: eval_get_audio_bb2_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,B) = 0+ eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,C,D,B):1
     [V__get_audio_num_samples_read+D=V__num_samples] 

### Cost equations --> "Loop" of eval_get_audio_bb2_in/5 
* CEs [40,41,42] --> Loop 25 

#### Loops of eval_get_audio_bb2_in/5 
* Loop 25: eval_get_audio_bb2_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,B) [] 

### Ranking functions of CR eval_get_audio_bb2_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,B) 

#### Partial ranking functions of CR eval_get_audio_bb2_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,B) 


### Resulting Chains:eval_get_audio_bb2_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,B) 
* [25]


### Merging Chains  eval_get_audio_bb2_in/5 into  External patterns of execution 
* [[25]] --> 1 


### Specialization of cost equations eval_get_audio_bb0_in/4 
* CE 3 is refined into CE [43] 
* CE 4 is refined into CE [44] 


#### Refined cost equations eval_get_audio_bb0_in/4 
* CE 43: eval_get_audio_bb0_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) = 0+ eval_get_audio_bb2_in(V__count_samples_carefully,C,D,E,B):1
     [C=0] 
* CE 44: eval_get_audio_bb0_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) = 0+ eval_get_audio_bb2_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,C,B):1
     [] 

### Cost equations --> "Loop" of eval_get_audio_bb0_in/4 
* CEs [43,44] --> Loop 26 

#### Loops of eval_get_audio_bb0_in/4 
* Loop 26: eval_get_audio_bb0_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) [] 

### Ranking functions of CR eval_get_audio_bb0_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) 

#### Partial ranking functions of CR eval_get_audio_bb0_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) 


### Resulting Chains:eval_get_audio_bb0_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) 
* [26]


### Merging Chains  eval_get_audio_bb0_in/4 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations eval_get_audio_start/5 
* CE 2 is refined into CE [45] 


#### Refined cost equations eval_get_audio_start/5 
* CE 45: eval_get_audio_start(V_stereo,V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) = 0+ eval_get_audio_bb0_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B):1
     [] 

### Cost equations --> "Loop" of eval_get_audio_start/5 
* CEs [45] --> Loop 27 

#### Loops of eval_get_audio_start/5 
* Loop 27: eval_get_audio_start(V_stereo,V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) [] 

### Ranking functions of CR eval_get_audio_start(V_stereo,V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) 

#### Partial ranking functions of CR eval_get_audio_start(V_stereo,V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) 


### Resulting Chains:eval_get_audio_start(V_stereo,V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B) 
* [27]


### Merging Chains  eval_get_audio_start/5 into  External patterns of execution 
* [[27]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,V_31,V_j_0,B,C,D) -> [eval_get_audio_bb7_in(V__get_audio_num_samples_read',V_8',V_31',V_j_0',B',C',D')] 
1
#### Cost of phase [12]:eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,V_31,V_j_0,B,C,D) -> [eval_get_audio_bb7_in(V__get_audio_num_samples_read',V_8',V_31',V_j_0',B',C',D')] 
1*it(12)+0
  Such that:it(12) =< V_8-V_j_0
it(12) =< V_8-V_j_0-V_8'+V_j_0'

#### Cost of chains of eval_get_audio_bb7_in(V__get_audio_num_samples_read,V_8,V_31,V_j_0,B,C,D):
* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_8-V_j_0

  with precondition: [B=2,V_31=D,V_j_0>=0,V_8>=V_j_0+1] 

* Chain [13]: 0
  with precondition: [B=2,C=V__get_audio_num_samples_read,D=V_31,V_j_0>=0,V_j_0>=V_8] 


#### Cost of chains of eval_get_audio_29(V__get_audio_num_samples_read,V_1,V_8,V_30,B):
* Chain [23]: 1
  with precondition: [V_30=0,0>=V_8] 

* Chain [22]: 1*s(1)+1
  Such that:s(1) =< V_8

  with precondition: [V_30=0,V_8>=1] 

* Chain [21]: 1
  with precondition: [0>=V_1+1,0>=V_8,0>=V_30+1] 

* Chain [20]: 1
  with precondition: [0>=V_1+1,0>=V_8,V_30>=1] 

* Chain [19]: 1*s(2)+1
  Such that:s(2) =< V_8

  with precondition: [0>=V_1+1,0>=V_30+1,V_8>=1] 

* Chain [18]: 1*s(3)+1
  Such that:s(3) =< V_8

  with precondition: [0>=V_1+1,V_8>=1,V_30>=1] 

* Chain [17]: 1
  with precondition: [0>=V_8,0>=V_30+1,V_1>=1] 

* Chain [16]: 1
  with precondition: [0>=V_8,V_1>=1,V_30>=1] 

* Chain [15]: 1*s(4)+1
  Such that:s(4) =< V_8

  with precondition: [0>=V_30+1,V_1>=1,V_8>=1] 

* Chain [14]: 1*s(5)+1
  Such that:s(5) =< V_8

  with precondition: [V_1>=1,V_8>=1,V_30>=1] 


#### Cost of chains of eval_get_audio_bb4_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,V_8,V_samples_to_read_1,B):
* Chain [24]: 5*s(6)+1
  Such that:aux(1) =< V_8
s(6) =< aux(1)

  with precondition: [] 


#### Cost of chains of eval_get_audio_bb2_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,V_1,B):
* Chain [25]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_get_audio_bb0_in(V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B):
* Chain [26]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_get_audio_start(V_stereo,V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B):
* Chain [27]: 1*s(19)+0
  with precondition: [] 


Closed-form bounds of eval_get_audio_start(V_stereo,V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B): 
-------------------------------------
* Chain [27] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_get_audio_start(V_stereo,V__count_samples_carefully,V__get_audio_num_samples_read,V__num_samples,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 32 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 51 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 28 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 155 ms.

