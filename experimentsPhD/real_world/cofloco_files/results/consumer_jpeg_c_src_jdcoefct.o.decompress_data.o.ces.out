Warning: Ignored call to eval_decompress_data_stop/1 in equation eval_decompress_data_bb18_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_decompress_data_12/1,eval_decompress_data_13/2,eval_decompress_data__critedge_in/1,eval_decompress_data_bb1_in/1]
1. recursive  : [eval_decompress_data_41/8,eval_decompress_data_42/8,eval_decompress_data_bb13_in/8]
2. recursive  : [eval_decompress_data_bb11_in/5,loop_cont_eval_decompress_data_bb13_in/6]
3. recursive  : [eval_decompress_data_23/2,eval_decompress_data_24/2,eval_decompress_data_bb10_in/3,eval_decompress_data_bb16_in/2,eval_decompress_data_bb4_in/2,loop_cont_eval_decompress_data_bb11_in/3]
4. non_recursive  : [eval_decompress_data_bb18_in/1]
5. non_recursive  : [loop_cont_eval_decompress_data_bb4_in/2]
6. non_recursive  : [eval_decompress_data__critedge1_in/1]
7. non_recursive  : [loop_cont_eval_decompress_data_bb1_in/2]
8. non_recursive  : [eval_decompress_data_bb0_in/1]
9. non_recursive  : [eval_decompress_data_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_decompress_data_bb1_in/1
1. SCC is partially evaluated into eval_decompress_data_bb13_in/8
2. SCC is partially evaluated into eval_decompress_data_bb11_in/5
3. SCC is partially evaluated into eval_decompress_data_bb4_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_decompress_data__critedge1_in/1
7. SCC is partially evaluated into loop_cont_eval_decompress_data_bb1_in/2
8. SCC is partially evaluated into eval_decompress_data_bb0_in/1
9. SCC is partially evaluated into eval_decompress_data_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_decompress_data_bb1_in/1 
* CE 6 is refined into CE [17] 
* CE 5 is refined into CE [18] 
* CE 4 is refined into CE [19] 


#### Refined cost equations eval_decompress_data_bb1_in/1 
* CE 17: eval_decompress_data_bb1_in(B) = 0
     [B=5] 
* CE 18: eval_decompress_data_bb1_in(B) = 0
     [B=4] 
* CE 19: eval_decompress_data_bb1_in(B) = 1+ eval_decompress_data_bb1_in(B)
     [] 

### Cost equations --> "Loop" of eval_decompress_data_bb1_in/1 
* CEs [19] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of eval_decompress_data_bb1_in/1 
* Loop 15: eval_decompress_data_bb1_in(B)->  eval_decompress_data_bb1_in(B)
                  [] 
* Loop 16: eval_decompress_data_bb1_in(B) [B=5] 
* Loop 17: eval_decompress_data_bb1_in(B) [B=4] 

### Ranking functions of CR eval_decompress_data_bb1_in(B) 

#### Partial ranking functions of CR eval_decompress_data_bb1_in(B) 


### Resulting Chains:eval_decompress_data_bb1_in(B) 
* [[15]]...
* [[15],17]
* [[15],16]
* [17]
* [16]


### Merging Chains  eval_decompress_data_bb1_in/1 into  External patterns of execution 
* [[17],[17,[15]]] --> 1 
* [[16],[16,[15]]] --> 2 
* [[[15]]] --> 3 


### Specialization of cost equations eval_decompress_data_bb13_in/8 
* CE 16 is refined into CE [20] 
* CE 15 is refined into CE [21] 


#### Refined cost equations eval_decompress_data_bb13_in/8 
* CE 20: eval_decompress_data_bb13_in(A,B,C,D,E,A,B,F) = 0
     [B>=C+1,D>=0,C+1=F,E=2] 
* CE 21: eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0,B,C,D,E) = 1+ eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,F,G,C,D,E)
     [V_block_rows_1>=V_block_row_0+1,V_block_num_0>=0,V_block_num_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_decompress_data_bb13_in/8 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 

#### Loops of eval_decompress_data_bb13_in/8 
* Loop 18: eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0,B,C,D,E)->  eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0',B',C,D,E)
                  [V_block_rows_1>=V_block_row_0+1,V_block_num_0>=0,V_block_num_0+1=V_block_num_0',B'=2,B=2] 
* Loop 19: eval_decompress_data_bb13_in(A,B,C,D,E,A,B,F) [B>=C+1,D>=0,C+1=F,E=2] 

### Ranking functions of CR eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0,B,C,D,E) 

#### Partial ranking functions of CR eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0,B,C,D,E) 


### Resulting Chains:eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0,B,C,D,E) 
* [[18]]...
* [[18],19]
* [19]


### Merging Chains  eval_decompress_data_bb13_in/8 into  External patterns of execution 
* [[19],[19,[18]]] --> 1 
* [[[18]]] --> 2 


### Specialization of cost equations eval_decompress_data_bb11_in/5 
* CE 14 is refined into CE [22] 
* CE 13 is refined into CE [23,24] 


#### Refined cost equations eval_decompress_data_bb11_in/5 
* CE 22: eval_decompress_data_bb11_in(A,B,C,D,A) = 0
     [C>=B,D=3] 
* CE 23: eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C) = 2+ eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,D,E,F,V_ci_0,V_block_rows_1,G):1+ eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,G,H,C)
     [V_block_rows_1>=G,G=D+1,G=V_block_row_0+1,H=3,F=2,E=0,B=3] 
* CE 24: eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C) = 2+ eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,D,E,F,G,H):2
     [V_block_rows_1>=V_block_row_0+1,I=3,E=2,D=0,B=3] 

### Cost equations --> "Loop" of eval_decompress_data_bb11_in/5 
* CEs [24] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [22] --> Loop 22 

#### Loops of eval_decompress_data_bb11_in/5 
* Loop 20: eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C) [V_block_rows_1>=V_block_row_0+1,B=3] 
* Loop 21: eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C)->  eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0',B',C)
                  [V_block_rows_1>=V_block_row_0',V_block_row_0'=V_block_row_0+1,B'=3,B=3] 
* Loop 22: eval_decompress_data_bb11_in(A,B,C,D,A) [C>=B,D=3] 

### Ranking functions of CR eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C) 
* RF of phase [21]: [V_block_rows_1-V_block_row_0]

#### Partial ranking functions of CR eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_block_rows_1-V_block_row_0


### Resulting Chains:eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C) 
* [[21],22]
* [[21],20]...
* [22]
* [20]...


### Merging Chains  eval_decompress_data_bb11_in/5 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[21]]] --> 2 
* [[20]] --> 3 
* [[20,[21]]] --> 4 


### Specialization of cost equations eval_decompress_data_bb4_in/2 
* CE 12 is refined into CE [25] 
* CE 10 is refined into CE [26,27,28,29] 
* CE 11 is refined into CE [30] 


#### Refined cost equations eval_decompress_data_bb4_in/2 
* CE 25: eval_decompress_data_bb4_in(V_ci_0,B) = 0
     [B=4] 
* CE 26: eval_decompress_data_bb4_in(V_ci_0,B) = 2+ eval_decompress_data_bb11_in(V_ci_0,C,D,E,V_ci_0):1+ eval_decompress_data_bb4_in(F,G)
     [0>=C,V_ci_0+1=F,G=4,E=3,D=0,B=4] 
* CE 27: eval_decompress_data_bb4_in(V_ci_0,B) = 2+ eval_decompress_data_bb11_in(V_ci_0,C,D,E,V_ci_0):2+ eval_decompress_data_bb4_in(F,G)
     [C>=1,V_ci_0+1=F,G=4,E=3,D=0,B=4] 
* CE 28: eval_decompress_data_bb4_in(V_ci_0,B) = 2+ eval_decompress_data_bb11_in(V_ci_0,C,D,E,F):3
     [C>=1,G=F+1,H=4,E=3,D=0,B=4] 
* CE 29: eval_decompress_data_bb4_in(V_ci_0,B) = 2+ eval_decompress_data_bb11_in(V_ci_0,C,D,E,F):4
     [C>=2,G=F+1,H=4,E=3,D=0,B=4] 
* CE 30: eval_decompress_data_bb4_in(V_ci_0,B) = 1+ eval_decompress_data_bb4_in(C,D)
     [C=V_ci_0+1,D=4,B=4] 

### Cost equations --> "Loop" of eval_decompress_data_bb4_in/2 
* CEs [26,27,30] --> Loop 23 
* CEs [28,29] --> Loop 24 
* CEs [25] --> Loop 25 

#### Loops of eval_decompress_data_bb4_in/2 
* Loop 23: eval_decompress_data_bb4_in(V_ci_0,B)->  eval_decompress_data_bb4_in(V_ci_0',B')
                  [V_ci_0+1=V_ci_0',B'=4,B=4] 
* Loop 24: eval_decompress_data_bb4_in(V_ci_0,B) [B=4] 
* Loop 25: eval_decompress_data_bb4_in(V_ci_0,B) [B=4] 

### Ranking functions of CR eval_decompress_data_bb4_in(V_ci_0,B) 

#### Partial ranking functions of CR eval_decompress_data_bb4_in(V_ci_0,B) 


### Resulting Chains:eval_decompress_data_bb4_in(V_ci_0,B) 
* [[23]]...
* [[23],25]
* [[23],24]...
* [25]
* [24]...


### Merging Chains  eval_decompress_data_bb4_in/2 into  External patterns of execution 
* [[25],[25,[23]]] --> 1 
* [[[23]]] --> 2 
* [[24],[24,[23]]] --> 3 


### Specialization of cost equations eval_decompress_data__critedge1_in/1 
* CE 9 is refined into CE [31,32,33] 


#### Refined cost equations eval_decompress_data__critedge1_in/1 
* CE 31: eval_decompress_data__critedge1_in(B) = 1+ eval_decompress_data_bb4_in(C,D):1
     [D=4,C=0] 
* CE 32: eval_decompress_data__critedge1_in(B) = 1+ eval_decompress_data_bb4_in(C,D):2
     [D=4,C=0] 
* CE 33: eval_decompress_data__critedge1_in(B) = 1+ eval_decompress_data_bb4_in(C,D):3
     [D=4,C=0] 

### Cost equations --> "Loop" of eval_decompress_data__critedge1_in/1 
* CEs [32,33] --> Loop 26 
* CEs [31] --> Loop 27 

#### Loops of eval_decompress_data__critedge1_in/1 
* Loop 26: eval_decompress_data__critedge1_in(B) [] 
* Loop 27: eval_decompress_data__critedge1_in(B) [] 

### Ranking functions of CR eval_decompress_data__critedge1_in(B) 

#### Partial ranking functions of CR eval_decompress_data__critedge1_in(B) 


### Resulting Chains:eval_decompress_data__critedge1_in(B) 
* [27]
* [26]...


### Merging Chains  eval_decompress_data__critedge1_in/1 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations loop_cont_eval_decompress_data_bb1_in/2 
* CE 8 is refined into CE [34,35] 
* CE 7 is refined into CE [36] 


#### Refined cost equations loop_cont_eval_decompress_data_bb1_in/2 
* CE 34: loop_cont_eval_decompress_data_bb1_in(C,A) = 0+ eval_decompress_data__critedge1_in(A):1
     [C=5] 
* CE 35: loop_cont_eval_decompress_data_bb1_in(C,A) = 0+ eval_decompress_data__critedge1_in(A):2
     [C=5] 
* CE 36: loop_cont_eval_decompress_data_bb1_in(C,A) = 0
     [C=4] 

### Cost equations --> "Loop" of loop_cont_eval_decompress_data_bb1_in/2 
* CEs [34] --> Loop 28 
* CEs [36] --> Loop 29 
* CEs [35] --> Loop 30 

#### Loops of loop_cont_eval_decompress_data_bb1_in/2 
* Loop 28: loop_cont_eval_decompress_data_bb1_in(C,A) [C=5] 
* Loop 29: loop_cont_eval_decompress_data_bb1_in(C,A) [C=4] 
* Loop 30: loop_cont_eval_decompress_data_bb1_in(C,A) [C=5] 

### Ranking functions of CR loop_cont_eval_decompress_data_bb1_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_decompress_data_bb1_in(C,A) 


### Resulting Chains:loop_cont_eval_decompress_data_bb1_in(C,A) 
* [30]...
* [29]
* [28]


### Merging Chains  loop_cont_eval_decompress_data_bb1_in/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 
* [[30]] --> 3 


### Specialization of cost equations eval_decompress_data_bb0_in/1 
* CE 3 is refined into CE [37,38,39,40] 


#### Refined cost equations eval_decompress_data_bb0_in/1 
* CE 37: eval_decompress_data_bb0_in(B) = 1+ eval_decompress_data_bb1_in(C):1+ loop_cont_eval_decompress_data_bb1_in(D,B):1
     [D=4,C=4] 
* CE 38: eval_decompress_data_bb0_in(B) = 1+ eval_decompress_data_bb1_in(C):2+ loop_cont_eval_decompress_data_bb1_in(D,B):2
     [D=5,C=5] 
* CE 39: eval_decompress_data_bb0_in(B) = 1+ eval_decompress_data_bb1_in(C):2+ loop_cont_eval_decompress_data_bb1_in(D,B):3
     [D=5,C=5] 
* CE 40: eval_decompress_data_bb0_in(B) = 1+ eval_decompress_data_bb1_in(C):3
     [] 

### Cost equations --> "Loop" of eval_decompress_data_bb0_in/1 
* CEs [39,40] --> Loop 31 
* CEs [37,38] --> Loop 32 

#### Loops of eval_decompress_data_bb0_in/1 
* Loop 31: eval_decompress_data_bb0_in(B) [] 
* Loop 32: eval_decompress_data_bb0_in(B) [] 

### Ranking functions of CR eval_decompress_data_bb0_in(B) 

#### Partial ranking functions of CR eval_decompress_data_bb0_in(B) 


### Resulting Chains:eval_decompress_data_bb0_in(B) 
* [32]
* [31]...


### Merging Chains  eval_decompress_data_bb0_in/1 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations eval_decompress_data_start/1 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_decompress_data_start/1 
* CE 41: eval_decompress_data_start(B) = 0+ eval_decompress_data_bb0_in(B):1
     [] 
* CE 42: eval_decompress_data_start(B) = 0+ eval_decompress_data_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_decompress_data_start/1 
* CEs [42] --> Loop 33 
* CEs [41] --> Loop 34 

#### Loops of eval_decompress_data_start/1 
* Loop 33: eval_decompress_data_start(B) [] 
* Loop 34: eval_decompress_data_start(B) [] 

### Ranking functions of CR eval_decompress_data_start(B) 

#### Partial ranking functions of CR eval_decompress_data_start(B) 


### Resulting Chains:eval_decompress_data_start(B) 
* [34]
* [33]...


### Merging Chains  eval_decompress_data_start/1 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_decompress_data_bb1_in(B) -> [eval_decompress_data_bb1_in(B')] 
1
#### Cost of phase [15]:eval_decompress_data_bb1_in(B) -> [eval_decompress_data_bb1_in(B')] 
1*it(15)+0
#### Cost of phase [15]:eval_decompress_data_bb1_in(B) -> [eval_decompress_data_bb1_in(B')] 
1*it(15)+0
#### Cost of phase [15]:eval_decompress_data_bb1_in(B) -> [eval_decompress_data_bb1_in(B')] 
1*it(15)+0
#### Cost of chains of eval_decompress_data_bb1_in(B):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [] 

* Chain [[15],17]: 1*it(15)+0
  with precondition: [B=4] 

* Chain [[15],16]: 1*it(15)+0
  with precondition: [B=5] 

* Chain [17]: 0
  with precondition: [B=4] 

* Chain [16]: 0
  with precondition: [B=5] 


#### Cost of loops [18] 

 * loop 18:eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0,B,C,D,E) -> [eval_decompress_data_bb13_in(V_ci_0',V_block_rows_1',V_block_row_0',V_block_num_0',B',C',D',E')] 
1
#### Cost of phase [18]:eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0,B,C,D,E) -> [eval_decompress_data_bb13_in(V_ci_0',V_block_rows_1',V_block_row_0',V_block_num_0',B',C',D',E')] 
1*it(18)+0
#### Cost of phase [18]:eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0,B,C,D,E) -> [eval_decompress_data_bb13_in(V_ci_0',V_block_rows_1',V_block_row_0',V_block_num_0',B',C',D',E')] 
1*it(18)+0
#### Cost of chains of eval_decompress_data_bb13_in(V_ci_0,V_block_rows_1,V_block_row_0,V_block_num_0,B,C,D,E):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [V_block_rows_1>=V_block_row_0+1,V_block_num_0>=0,B=2] 

* Chain [[18],19]: 1*it(18)+0
  with precondition: [B=2,V_ci_0=C,V_block_rows_1=D,V_block_row_0+1=E,V_block_num_0>=0,V_block_rows_1>=V_block_row_0+1] 

* Chain [19]: 0
  with precondition: [B=2,C=V_ci_0,V_block_rows_1=D,V_block_row_0+1=E,V_block_num_0>=0,V_block_rows_1>=V_block_row_0+1] 


#### Cost of loops [21] 

 * loop 21:eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C) -> [eval_decompress_data_bb11_in(V_ci_0',V_block_rows_1',V_block_row_0',B',C')] 
1*s(5)+2
#### Cost of phase [21]:eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C) -> [eval_decompress_data_bb11_in(V_ci_0',V_block_rows_1',V_block_row_0',B',C')] 
2*it(21)+1*s(6)+0
  Such that:it(21) =< V_block_rows_1-V_block_row_0
it(21) =< V_block_rows_1-V_block_row_0-V_block_rows_1'+V_block_row_0'

#### Cost of phase [21]:eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C) -> [eval_decompress_data_bb11_in(V_ci_0',V_block_rows_1',V_block_row_0',B',C')] 
2*it(21)+1*s(6)+0
  Such that:it(21) =< V_block_rows_1-V_block_row_0
it(21) =< V_block_rows_1-V_block_row_0-V_block_rows_1'+V_block_row_0'

#### Cost of chains of eval_decompress_data_bb11_in(V_ci_0,V_block_rows_1,V_block_row_0,B,C):
* Chain [[21],22]: 2*it(21)+1*s(6)+0
  Such that:it(21) =< V_block_rows_1-V_block_row_0

  with precondition: [B=3,V_ci_0=C,V_block_row_0>=0,V_block_rows_1>=V_block_row_0+1] 

* Chain [[21],20]...: 2*it(21)+2*s(6)+2
  Such that:it(21) =< V_block_rows_1-V_block_row_0

  with precondition: [B=3,V_block_row_0>=0,V_block_rows_1>=V_block_row_0+2] 

* Chain [22]: 0
  with precondition: [B=3,C=V_ci_0,V_block_row_0>=0,V_block_row_0>=V_block_rows_1] 

* Chain [20]...: 1*s(7)+2
  with precondition: [B=3,V_block_row_0>=0,V_block_rows_1>=V_block_row_0+1] 


#### Cost of loops [23] 

 * loop 23:eval_decompress_data_bb4_in(V_ci_0,B) -> [eval_decompress_data_bb4_in(V_ci_0',B')] 
1*s(10)+0
#### Cost of phase [23]:eval_decompress_data_bb4_in(V_ci_0,B) -> [eval_decompress_data_bb4_in(V_ci_0',B')] 
1*s(11)+0
#### Cost of phase [23]:eval_decompress_data_bb4_in(V_ci_0,B) -> [eval_decompress_data_bb4_in(V_ci_0',B')] 
1*s(11)+0
#### Cost of phase [23]:eval_decompress_data_bb4_in(V_ci_0,B) -> [eval_decompress_data_bb4_in(V_ci_0',B')] 
1*s(11)+0
#### Cost of chains of eval_decompress_data_bb4_in(V_ci_0,B):
* Chain [[23]]...: 1*s(11)+0
  with precondition: [B=4] 

* Chain [[23],25]: 1*s(11)+0
  with precondition: [B=4,V_ci_0>=0] 

* Chain [[23],24]...: 2*aux(5)+0
  with precondition: [B=4,V_ci_0>=0] 

* Chain [25]: 0
  with precondition: [B=4,V_ci_0>=0] 

* Chain [24]...: 1*aux(5)+0
  with precondition: [B=4,V_ci_0>=0] 


#### Cost of chains of eval_decompress_data__critedge1_in(B):
* Chain [27]: 1*s(18)+1
  with precondition: [] 

* Chain [26]...: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_decompress_data_bb1_in(C,A):
* Chain [30]...: 1*s(21)+0
  with precondition: [C=5] 

* Chain [29]: 0
  with precondition: [C=4] 

* Chain [28]: 1*s(22)+1
  with precondition: [C=5] 


#### Cost of chains of eval_decompress_data_bb0_in(B):
* Chain [32]: 1*aux(9)+0
  with precondition: [] 

* Chain [31]...: 1*aux(10)+0
  with precondition: [] 


#### Cost of chains of eval_decompress_data_start(B):
* Chain [34]: 1*s(29)+0
  with precondition: [] 

* Chain [33]...: 1*s(30)+0
  with precondition: [] 


Closed-form bounds of eval_decompress_data_start(B): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_decompress_data_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 26 ms.
   - Backward Invariants 15 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 43 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 36 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 169 ms.

