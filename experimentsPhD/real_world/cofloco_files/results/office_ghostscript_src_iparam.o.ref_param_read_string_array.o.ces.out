Warning: Ignored call to eval_ref_param_read_string_array_stop/1 in equation eval_ref_param_read_string_array_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ref_param_read_string_array_10/5,eval_ref_param_read_string_array_9/4,eval_ref_param_read_string_array_bb3_in/4]
1. non_recursive  : [eval_ref_param_read_string_array_bb8_in/1]
2. non_recursive  : [eval_ref_param_read_string_array_13/1]
3. non_recursive  : [eval_ref_param_read_string_array_12/1]
4. non_recursive  : [loop_cont_eval_ref_param_read_string_array_bb3_in/2]
5. non_recursive  : [eval_ref_param_read_string_array_5/3]
6. non_recursive  : [eval_ref_param_read_string_array_4/3]
7. non_recursive  : [eval_ref_param_read_string_array_1/2]
8. non_recursive  : [eval_ref_param_read_string_array_0/1]
9. non_recursive  : [eval_ref_param_read_string_array_bb0_in/1]
10. non_recursive  : [eval_ref_param_read_string_array_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ref_param_read_string_array_bb3_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_ref_param_read_string_array_bb3_in/2
5. SCC is partially evaluated into eval_ref_param_read_string_array_5/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_ref_param_read_string_array_1/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_ref_param_read_string_array_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ref_param_read_string_array_bb3_in/4 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 
* CE 8 is refined into CE [17] 
* CE 7 is refined into CE [18] 


#### Refined cost equations eval_ref_param_read_string_array_bb3_in/4 
* CE 14: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) = 0
     [V_i_0>=V_13,V_i_0>=0,B=3] 
* CE 15: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) = 0
     [V_i_0>=0,0>=V_code_0+1,B=3] 
* CE 16: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) = 0
     [V_i_0>=V_13,V_i_0>=0,B=2] 
* CE 17: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) = 0
     [V_i_0>=0,0>=V_code_0+1,B=2] 
* CE 18: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) = 1+ eval_ref_param_read_string_array_bb3_in(V_13,C,D,B)
     [V_13>=V_i_0+1,V_i_0>=0,V_code_0>=0,V_i_0+1=D] 

### Cost equations --> "Loop" of eval_ref_param_read_string_array_bb3_in/4 
* CEs [18] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of eval_ref_param_read_string_array_bb3_in/4 
* Loop 11: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B)->  eval_ref_param_read_string_array_bb3_in(V_13,V_code_0',V_i_0',B)
                  [V_13>=V_i_0+1,V_i_0>=0,V_code_0>=0,V_i_0+1=V_i_0'] 
* Loop 12: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) [V_i_0>=V_13,V_i_0>=0,B=3] 
* Loop 13: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) [V_i_0>=0,0>=V_code_0+1,B=3] 
* Loop 14: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) [V_i_0>=V_13,V_i_0>=0,B=2] 
* Loop 15: eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) [V_i_0>=0,0>=V_code_0+1,B=2] 

### Ranking functions of CR eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) 
* RF of phase [11]: [V_13-V_i_0]

#### Partial ranking functions of CR eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_13-V_i_0


### Resulting Chains:eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) 
* [[11],15]
* [[11],14]
* [[11],13]
* [[11],12]
* [15]
* [14]
* [13]
* [12]


### Merging Chains  eval_ref_param_read_string_array_bb3_in/4 into  External patterns of execution 
* [[15]] --> 1 
* [[14,[11]],[15,[11]]] --> 2 
* [[14]] --> 3 
* [[13]] --> 4 
* [[12,[11]],[13,[11]]] --> 5 
* [[12]] --> 6 


### Specialization of cost equations loop_cont_eval_ref_param_read_string_array_bb3_in/2 
* CE 13 is refined into CE [19] 
* CE 12 is refined into CE [20] 


#### Refined cost equations loop_cont_eval_ref_param_read_string_array_bb3_in/2 
* CE 19: loop_cont_eval_ref_param_read_string_array_bb3_in(C,A) = 0
     [C=3] 
* CE 20: loop_cont_eval_ref_param_read_string_array_bb3_in(C,A) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_ref_param_read_string_array_bb3_in/2 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of loop_cont_eval_ref_param_read_string_array_bb3_in/2 
* Loop 16: loop_cont_eval_ref_param_read_string_array_bb3_in(C,A) [C=3] 
* Loop 17: loop_cont_eval_ref_param_read_string_array_bb3_in(C,A) [C=2] 

### Ranking functions of CR loop_cont_eval_ref_param_read_string_array_bb3_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_ref_param_read_string_array_bb3_in(C,A) 


### Resulting Chains:loop_cont_eval_ref_param_read_string_array_bb3_in(C,A) 
* [17]
* [16]


### Merging Chains  loop_cont_eval_ref_param_read_string_array_bb3_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_ref_param_read_string_array_5/3 
* CE 5 is refined into CE [21] 
* CE 6 is refined into CE [22,23,24,25,26,27] 


#### Refined cost equations eval_ref_param_read_string_array_5/3 
* CE 21: eval_ref_param_read_string_array_5(V_1,V_13,B) = 0
     [] 
* CE 22: eval_ref_param_read_string_array_5(V_1,V_13,B) = 1+ eval_ref_param_read_string_array_bb3_in(V_13,V_1,C,D):1+ loop_cont_eval_ref_param_read_string_array_bb3_in(E,B):1
     [0>=V_1+1,E=2,D=2,C=0] 
* CE 23: eval_ref_param_read_string_array_5(V_1,V_13,B) = 1+ eval_ref_param_read_string_array_bb3_in(V_13,V_1,C,D):2+ loop_cont_eval_ref_param_read_string_array_bb3_in(E,B):1
     [V_1>=0,V_13>=1,E=2,D=2,C=0] 
* CE 24: eval_ref_param_read_string_array_5(V_1,V_13,B) = 1+ eval_ref_param_read_string_array_bb3_in(V_13,V_1,C,D):3+ loop_cont_eval_ref_param_read_string_array_bb3_in(E,B):1
     [0>=V_13,E=2,D=2,C=0] 
* CE 25: eval_ref_param_read_string_array_5(V_1,V_13,B) = 1+ eval_ref_param_read_string_array_bb3_in(V_13,V_1,C,D):4+ loop_cont_eval_ref_param_read_string_array_bb3_in(E,B):2
     [0>=V_1+1,E=3,D=3,C=0] 
* CE 26: eval_ref_param_read_string_array_5(V_1,V_13,B) = 1+ eval_ref_param_read_string_array_bb3_in(V_13,V_1,C,D):5+ loop_cont_eval_ref_param_read_string_array_bb3_in(E,B):2
     [V_1>=0,V_13>=1,E=3,D=3,C=0] 
* CE 27: eval_ref_param_read_string_array_5(V_1,V_13,B) = 1+ eval_ref_param_read_string_array_bb3_in(V_13,V_1,C,D):6+ loop_cont_eval_ref_param_read_string_array_bb3_in(E,B):2
     [0>=V_13,E=3,D=3,C=0] 

### Cost equations --> "Loop" of eval_ref_param_read_string_array_5/3 
* CEs [21,22,23,24,25,26,27] --> Loop 18 

#### Loops of eval_ref_param_read_string_array_5/3 
* Loop 18: eval_ref_param_read_string_array_5(V_1,V_13,B) [] 

### Ranking functions of CR eval_ref_param_read_string_array_5(V_1,V_13,B) 

#### Partial ranking functions of CR eval_ref_param_read_string_array_5(V_1,V_13,B) 


### Resulting Chains:eval_ref_param_read_string_array_5(V_1,V_13,B) 
* [18]


### Merging Chains  eval_ref_param_read_string_array_5/3 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations eval_ref_param_read_string_array_1/2 
* CE 3 is refined into CE [28] 
* CE 4 is refined into CE [29] 


#### Refined cost equations eval_ref_param_read_string_array_1/2 
* CE 28: eval_ref_param_read_string_array_1(V_1,B) = 0
     [] 
* CE 29: eval_ref_param_read_string_array_1(V_1,B) = 0+ eval_ref_param_read_string_array_5(V_1,C,B):1
     [] 

### Cost equations --> "Loop" of eval_ref_param_read_string_array_1/2 
* CEs [28,29] --> Loop 19 

#### Loops of eval_ref_param_read_string_array_1/2 
* Loop 19: eval_ref_param_read_string_array_1(V_1,B) [] 

### Ranking functions of CR eval_ref_param_read_string_array_1(V_1,B) 

#### Partial ranking functions of CR eval_ref_param_read_string_array_1(V_1,B) 


### Resulting Chains:eval_ref_param_read_string_array_1(V_1,B) 
* [19]


### Merging Chains  eval_ref_param_read_string_array_1/2 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations eval_ref_param_read_string_array_start/1 
* CE 2 is refined into CE [30] 


#### Refined cost equations eval_ref_param_read_string_array_start/1 
* CE 30: eval_ref_param_read_string_array_start(B) = 0+ eval_ref_param_read_string_array_1(C,B):1
     [] 

### Cost equations --> "Loop" of eval_ref_param_read_string_array_start/1 
* CEs [30] --> Loop 20 

#### Loops of eval_ref_param_read_string_array_start/1 
* Loop 20: eval_ref_param_read_string_array_start(B) [] 

### Ranking functions of CR eval_ref_param_read_string_array_start(B) 

#### Partial ranking functions of CR eval_ref_param_read_string_array_start(B) 


### Resulting Chains:eval_ref_param_read_string_array_start(B) 
* [20]


### Merging Chains  eval_ref_param_read_string_array_start/1 into  External patterns of execution 
* [[20]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) -> [eval_ref_param_read_string_array_bb3_in(V_13',V_code_0',V_i_0',B')] 
1
#### Cost of phase [11]:eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) -> [eval_ref_param_read_string_array_bb3_in(V_13',V_code_0',V_i_0',B')] 
1*it(11)+0
  Such that:it(11) =< V_13-V_i_0
it(11) =< V_13-V_i_0-V_13'+V_i_0'

#### Cost of phase [11]:eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) -> [eval_ref_param_read_string_array_bb3_in(V_13',V_code_0',V_i_0',B')] 
1*it(11)+0
  Such that:it(11) =< V_13-V_i_0
it(11) =< V_13-V_i_0-V_13'+V_i_0'

#### Cost of phase [11]:eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) -> [eval_ref_param_read_string_array_bb3_in(V_13',V_code_0',V_i_0',B')] 
1*it(11)+0
  Such that:it(11) =< V_13-V_i_0
it(11) =< V_13-V_i_0-V_13'+V_i_0'

#### Cost of phase [11]:eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B) -> [eval_ref_param_read_string_array_bb3_in(V_13',V_code_0',V_i_0',B')] 
1*it(11)+0
  Such that:it(11) =< V_13-V_i_0
it(11) =< V_13-V_i_0-V_13'+V_i_0'

#### Cost of chains of eval_ref_param_read_string_array_bb3_in(V_13,V_code_0,V_i_0,B):
* Chain [[11],15]: 1*it(11)+0
  Such that:it(11) =< V_13-V_i_0

  with precondition: [B=2,V_code_0>=0,V_i_0>=0,V_13>=V_i_0+1] 

* Chain [[11],14]: 1*it(11)+0
  Such that:it(11) =< V_13-V_i_0

  with precondition: [B=2,V_code_0>=0,V_i_0>=0,V_13>=V_i_0+1] 

* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V_13-V_i_0

  with precondition: [B=3,V_code_0>=0,V_i_0>=0,V_13>=V_i_0+1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V_13-V_i_0

  with precondition: [B=3,V_code_0>=0,V_i_0>=0,V_13>=V_i_0+1] 

* Chain [15]: 0
  with precondition: [B=2,0>=V_code_0+1,V_i_0>=0] 

* Chain [14]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V_13] 

* Chain [13]: 0
  with precondition: [B=3,0>=V_code_0+1,V_i_0>=0] 

* Chain [12]: 0
  with precondition: [B=3,V_i_0>=0,V_i_0>=V_13] 


#### Cost of chains of loop_cont_eval_ref_param_read_string_array_bb3_in(C,A):
* Chain [17]: 0
  with precondition: [C=2] 

* Chain [16]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_ref_param_read_string_array_5(V_1,V_13,B):
* Chain [18]: 4*s(6)+1
  Such that:aux(3) =< V_13
s(6) =< aux(3)

  with precondition: [] 


#### Cost of chains of eval_ref_param_read_string_array_1(V_1,B):
* Chain [19]: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_ref_param_read_string_array_start(B):
* Chain [20]: 1*s(11)+0
  with precondition: [] 


Closed-form bounds of eval_ref_param_read_string_array_start(B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_ref_param_read_string_array_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 42 ms.
   - Backward Invariants 29 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 75 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 70 ms.
   - Equation cost structures 28 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 31 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 283 ms.

