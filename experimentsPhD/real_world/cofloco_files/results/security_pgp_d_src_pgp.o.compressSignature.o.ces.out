Warning: Ignored call to eval_compressSignature_stop/1 in equation eval_compressSignature_bb10_in/1 
Warning: Ignored call to eval_compressSignature_stop/1 in equation eval_compressSignature_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_compressSignature_4/2,eval_compressSignature_5/3,eval_compressSignature_6/3,eval_compressSignature_bb1_in/2]
1. non_recursive  : [eval_compressSignature_bb10_in/1]
2. non_recursive  : [eval_compressSignature_bb9_in/1]
3. non_recursive  : [eval_compressSignature_10/1]
4. non_recursive  : [eval_compressSignature_9/1]
5. non_recursive  : [loop_cont_eval_compressSignature_bb1_in/2]
6. non_recursive  : [eval_compressSignature_bb0_in/1]
7. non_recursive  : [eval_compressSignature_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_compressSignature_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_compressSignature_10/1
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_compressSignature_bb1_in/2
6. SCC is partially evaluated into eval_compressSignature_bb0_in/1
7. SCC is partially evaluated into eval_compressSignature_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_compressSignature_bb1_in/2 
* CE 6 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations eval_compressSignature_bb1_in/2 
* CE 10: eval_compressSignature_bb1_in(V_i_0,B) = 0
     [V_i_0>=10,B=3] 
* CE 11: eval_compressSignature_bb1_in(V_i_0,B) = 0
     [V_i_0>=0,9>=V_i_0,B=2] 
* CE 12: eval_compressSignature_bb1_in(V_i_0,B) = 1+ eval_compressSignature_bb1_in(C,B)
     [V_i_0>=0,9>=V_i_0,V_i_0+1=C] 

### Cost equations --> "Loop" of eval_compressSignature_bb1_in/2 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_compressSignature_bb1_in/2 
* Loop 9: eval_compressSignature_bb1_in(V_i_0,B)->  eval_compressSignature_bb1_in(V_i_0',B)
                  [V_i_0>=0,9>=V_i_0,V_i_0+1=V_i_0'] 
* Loop 10: eval_compressSignature_bb1_in(V_i_0,B) [V_i_0>=10,B=3] 
* Loop 11: eval_compressSignature_bb1_in(V_i_0,B) [V_i_0>=0,9>=V_i_0,B=2] 

### Ranking functions of CR eval_compressSignature_bb1_in(V_i_0,B) 
* RF of phase [9]: [-V_i_0+10]

#### Partial ranking functions of CR eval_compressSignature_bb1_in(V_i_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -V_i_0+10


### Resulting Chains:eval_compressSignature_bb1_in(V_i_0,B) 
* [[9],11]
* [[9],10]
* [11]


### Merging Chains  eval_compressSignature_bb1_in/2 into  External patterns of execution 
* [[11],[11,[9]]] --> 1 
* [[10,[9]]] --> 2 


### Specialization of cost equations eval_compressSignature_10/1 
* CE 9 is refined into CE [13] 


#### Refined cost equations eval_compressSignature_10/1 
* CE 13: eval_compressSignature_10(B) = 0
     [] 

### Cost equations --> "Loop" of eval_compressSignature_10/1 
* CEs [13] --> Loop 12 

#### Loops of eval_compressSignature_10/1 
* Loop 12: eval_compressSignature_10(B) [] 

### Ranking functions of CR eval_compressSignature_10(B) 

#### Partial ranking functions of CR eval_compressSignature_10(B) 


### Resulting Chains:eval_compressSignature_10(B) 
* [12]


### Merging Chains  eval_compressSignature_10/1 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations loop_cont_eval_compressSignature_bb1_in/2 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations loop_cont_eval_compressSignature_bb1_in/2 
* CE 14: loop_cont_eval_compressSignature_bb1_in(B,A) = 0+ eval_compressSignature_10(A):1
     [B=3] 
* CE 15: loop_cont_eval_compressSignature_bb1_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_compressSignature_bb1_in/2 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of loop_cont_eval_compressSignature_bb1_in/2 
* Loop 13: loop_cont_eval_compressSignature_bb1_in(B,A) [B=3] 
* Loop 14: loop_cont_eval_compressSignature_bb1_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_compressSignature_bb1_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_compressSignature_bb1_in(B,A) 


### Resulting Chains:loop_cont_eval_compressSignature_bb1_in(B,A) 
* [14]
* [13]


### Merging Chains  loop_cont_eval_compressSignature_bb1_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_compressSignature_bb0_in/1 
* CE 3 is refined into CE [16,17] 


#### Refined cost equations eval_compressSignature_bb0_in/1 
* CE 16: eval_compressSignature_bb0_in(B) = 1+ eval_compressSignature_bb1_in(C,D):1+ loop_cont_eval_compressSignature_bb1_in(E,B):1
     [E=2,D=2,C=0] 
* CE 17: eval_compressSignature_bb0_in(B) = 1+ eval_compressSignature_bb1_in(C,D):2+ loop_cont_eval_compressSignature_bb1_in(E,B):2
     [E=3,D=3,C=0] 

### Cost equations --> "Loop" of eval_compressSignature_bb0_in/1 
* CEs [16,17] --> Loop 15 

#### Loops of eval_compressSignature_bb0_in/1 
* Loop 15: eval_compressSignature_bb0_in(B) [] 

### Ranking functions of CR eval_compressSignature_bb0_in(B) 

#### Partial ranking functions of CR eval_compressSignature_bb0_in(B) 


### Resulting Chains:eval_compressSignature_bb0_in(B) 
* [15]


### Merging Chains  eval_compressSignature_bb0_in/1 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_compressSignature_start/1 
* CE 2 is refined into CE [18] 


#### Refined cost equations eval_compressSignature_start/1 
* CE 18: eval_compressSignature_start(B) = 0+ eval_compressSignature_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_compressSignature_start/1 
* CEs [18] --> Loop 16 

#### Loops of eval_compressSignature_start/1 
* Loop 16: eval_compressSignature_start(B) [] 

### Ranking functions of CR eval_compressSignature_start(B) 

#### Partial ranking functions of CR eval_compressSignature_start(B) 


### Resulting Chains:eval_compressSignature_start(B) 
* [16]


### Merging Chains  eval_compressSignature_start/1 into  External patterns of execution 
* [[16]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_compressSignature_bb1_in(V_i_0,B) -> [eval_compressSignature_bb1_in(V_i_0',B')] 
1
#### Cost of phase [9]:eval_compressSignature_bb1_in(V_i_0,B) -> [eval_compressSignature_bb1_in(V_i_0',B')] 
1*it(9)+0
  Such that:it(9) =< -V_i_0+10
it(9) =< -V_i_0+V_i_0'

#### Cost of phase [9]:eval_compressSignature_bb1_in(V_i_0,B) -> [eval_compressSignature_bb1_in(V_i_0',B')] 
1*it(9)+0
  Such that:it(9) =< -V_i_0+10
it(9) =< -V_i_0+V_i_0'

#### Cost of chains of eval_compressSignature_bb1_in(V_i_0,B):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< -V_i_0+9

  with precondition: [B=2,8>=V_i_0,V_i_0>=0] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -V_i_0+10

  with precondition: [B=3,9>=V_i_0,V_i_0>=0] 

* Chain [11]: 0
  with precondition: [B=2,9>=V_i_0,V_i_0>=0] 


#### Cost of chains of eval_compressSignature_10(B):
* Chain [12]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_compressSignature_bb1_in(B,A):
* Chain [14]: 0
  with precondition: [B=2] 

* Chain [13]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_compressSignature_bb0_in(B):
* Chain [15]: 20
  with precondition: [] 


#### Cost of chains of eval_compressSignature_start(B):
* Chain [16]: 20
  with precondition: [] 


Closed-form bounds of eval_compressSignature_start(B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: 20 
    - Complexity: constant 

### Maximum cost of eval_compressSignature_start(B): 20 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 32 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 30 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 136 ms.

