WARNING: Excluded non-linear constraints:[G=C+E*F]
WARNING: Excluded non-linear constraints:[A-C-D*E>=0,A-C-D*E+1=<D]
WARNING: Excluded non-linear constraints:[A-C-D*E>=0,A-C-D*E+1=< -D]
WARNING: Excluded non-linear constraints:[-A+C+D*E>=0,-A+C+D*E+1=<D]
WARNING: Excluded non-linear constraints:[-A+C+D*E>=0,-A+C+D*E+1=< -D]
WARNING: Excluded non-linear constraints:[D-C*E>=0,D-C*E+1=<C]
WARNING: Excluded non-linear constraints:[D-C*E>=0,D-C*E+1=< -C]
WARNING: Excluded non-linear constraints:[-D+C*E>=0,-D+C*E+1=<C]
WARNING: Excluded non-linear constraints:[-D+C*E>=0,-D+C*E+1=< -C]
WARNING: Excluded non-linear constraints:[D-E-C*F>=0,D-E-C*F+1=<C]
WARNING: Excluded non-linear constraints:[D-E-C*F>=0,D-E-C*F+1=< -C]
WARNING: Excluded non-linear constraints:[-D+E+C*F>=0,-D+E+C*F+1=<C]
WARNING: Excluded non-linear constraints:[-D+E+C*F>=0,-D+E+C*F+1=< -C]
Warning: Ignored call to eval_EstimateStripByteCounts_stop/1 in equation eval_EstimateStripByteCounts_bb18_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_EstimateStripByteCounts_bb4_in/4]
1. recursive  : [eval_EstimateStripByteCounts_bb9_in/2]
2. non_recursive  : [eval_EstimateStripByteCounts_bb18_in/1]
3. non_recursive  : [eval_EstimateStripByteCounts_bb16_in/1]
4. non_recursive  : [loop_cont_eval_EstimateStripByteCounts_bb9_in/2]
5. non_recursive  : [eval_EstimateStripByteCounts_bb8_in/1]
6. non_recursive  : [loop_cont_eval_EstimateStripByteCounts_bb4_in/2]
7. non_recursive  : [eval_EstimateStripByteCounts_17/4]
8. non_recursive  : [eval_EstimateStripByteCounts_16/3]
9. recursive  : [eval_EstimateStripByteCounts_bb14_in/2]
10. non_recursive  : [loop_cont_eval_EstimateStripByteCounts_bb14_in/2]
11. non_recursive  : [eval_EstimateStripByteCounts_59/1]
12. non_recursive  : [eval_EstimateStripByteCounts_58/1]
13. non_recursive  : [eval_EstimateStripByteCounts_7/2]
14. non_recursive  : [eval_EstimateStripByteCounts_6/3]
15. non_recursive  : [eval_EstimateStripByteCounts_bb2_in/2]
16. non_recursive  : [eval_EstimateStripByteCounts_1/2]
17. non_recursive  : [eval_EstimateStripByteCounts_0/2]
18. non_recursive  : [eval_EstimateStripByteCounts_bb0_in/2]
19. non_recursive  : [eval_EstimateStripByteCounts_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_EstimateStripByteCounts_bb4_in/4
1. SCC is partially evaluated into eval_EstimateStripByteCounts_bb9_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_EstimateStripByteCounts_bb8_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_EstimateStripByteCounts_17/4
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_EstimateStripByteCounts_bb14_in/2
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_EstimateStripByteCounts_59/1
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_EstimateStripByteCounts_7/2
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_EstimateStripByteCounts_bb0_in/2
19. SCC is partially evaluated into eval_EstimateStripByteCounts_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_EstimateStripByteCounts_bb4_in/4 
* CE 9 is refined into CE [17] 
* CE 10 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 8 is refined into CE [20] 


#### Refined cost equations eval_EstimateStripByteCounts_bb4_in/4 
* CE 17: eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) = 0
     [0>=V_n_0,B=3] 
* CE 18: eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) = 0
     [V_29>=V_space_0+1,0>=V_n_0,B=3] 
* CE 19: eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) = 0
     [V_space_0>=V_29+1,0>=V_n_0,B=3] 
* CE 20: eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) = 1+ eval_EstimateStripByteCounts_bb4_in(V_29,C,D,E)
     [V_n_0>=1,V_n_0=C+1,E=3,B=3] 

### Cost equations --> "Loop" of eval_EstimateStripByteCounts_bb4_in/4 
* CEs [20] --> Loop 13 
* CEs [17,18,19] --> Loop 14 

#### Loops of eval_EstimateStripByteCounts_bb4_in/4 
* Loop 13: eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B)->  eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0',V_space_0',B')
                  [V_n_0>=1,V_n_0=V_n_0'+1,B'=3,B=3] 
* Loop 14: eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) [0>=V_n_0,B=3] 

### Ranking functions of CR eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) 
* RF of phase [13]: [V_n_0]

#### Partial ranking functions of CR eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_n_0


### Resulting Chains:eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) 
* [[13],14]
* [14]


### Merging Chains  eval_EstimateStripByteCounts_bb4_in/4 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[13]]] --> 2 


### Specialization of cost equations eval_EstimateStripByteCounts_bb9_in/2 
* CE 16 is refined into CE [21] 
* CE 15 is refined into CE [22] 


#### Refined cost equations eval_EstimateStripByteCounts_bb9_in/2 
* CE 21: eval_EstimateStripByteCounts_bb9_in(V_i_0,B) = 0
     [V_i_0>=0,B=2] 
* CE 22: eval_EstimateStripByteCounts_bb9_in(V_i_0,B) = 1+ eval_EstimateStripByteCounts_bb9_in(C,D)
     [V_i_0>=0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_EstimateStripByteCounts_bb9_in/2 
* CEs [22] --> Loop 15 
* CEs [21] --> Loop 16 

#### Loops of eval_EstimateStripByteCounts_bb9_in/2 
* Loop 15: eval_EstimateStripByteCounts_bb9_in(V_i_0,B)->  eval_EstimateStripByteCounts_bb9_in(V_i_0',B')
                  [V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 16: eval_EstimateStripByteCounts_bb9_in(V_i_0,B) [V_i_0>=0,B=2] 

### Ranking functions of CR eval_EstimateStripByteCounts_bb9_in(V_i_0,B) 

#### Partial ranking functions of CR eval_EstimateStripByteCounts_bb9_in(V_i_0,B) 


### Resulting Chains:eval_EstimateStripByteCounts_bb9_in(V_i_0,B) 
* [[15]]...
* [[15],16]
* [16]


### Merging Chains  eval_EstimateStripByteCounts_bb9_in/2 into  External patterns of execution 
* [[16],[16,[15]]] --> 1 
* [[[15]]] --> 2 


### Specialization of cost equations eval_EstimateStripByteCounts_bb8_in/1 
* CE 12 is refined into CE [23,24] 


#### Refined cost equations eval_EstimateStripByteCounts_bb8_in/1 
* CE 23: eval_EstimateStripByteCounts_bb8_in(B) = 1+ eval_EstimateStripByteCounts_bb9_in(C,D):1
     [D=2,C=0] 
* CE 24: eval_EstimateStripByteCounts_bb8_in(B) = 1+ eval_EstimateStripByteCounts_bb9_in(C,D):2
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_EstimateStripByteCounts_bb8_in/1 
* CEs [24] --> Loop 17 
* CEs [23] --> Loop 18 

#### Loops of eval_EstimateStripByteCounts_bb8_in/1 
* Loop 17: eval_EstimateStripByteCounts_bb8_in(B) [] 
* Loop 18: eval_EstimateStripByteCounts_bb8_in(B) [] 

### Ranking functions of CR eval_EstimateStripByteCounts_bb8_in(B) 

#### Partial ranking functions of CR eval_EstimateStripByteCounts_bb8_in(B) 


### Resulting Chains:eval_EstimateStripByteCounts_bb8_in(B) 
* [18]
* [17]...


### Merging Chains  eval_EstimateStripByteCounts_bb8_in/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_EstimateStripByteCounts_17/4 
* CE 6 is refined into CE [25,26,27,28] 


#### Refined cost equations eval_EstimateStripByteCounts_17/4 
* CE 25: eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) = 1+ eval_EstimateStripByteCounts_bb4_in(V_29,V_dircount,C,D):1+ eval_EstimateStripByteCounts_bb8_in(B):1
     [0>=V_dircount,12*V_dircount+14=C,12*V_dircount+14=V_24,D=3] 
* CE 26: eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) = 1+ eval_EstimateStripByteCounts_bb4_in(V_29,V_dircount,C,D):1+ eval_EstimateStripByteCounts_bb8_in(B):2
     [0>=V_dircount,12*V_dircount+14=C,12*V_dircount+14=V_24,D=3] 
* CE 27: eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) = 1+ eval_EstimateStripByteCounts_bb4_in(V_29,V_dircount,C,D):2+ eval_EstimateStripByteCounts_bb8_in(B):1
     [V_dircount>=1,12*V_dircount+14=C,12*V_dircount+14=V_24,D=3] 
* CE 28: eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) = 1+ eval_EstimateStripByteCounts_bb4_in(V_29,V_dircount,C,D):2+ eval_EstimateStripByteCounts_bb8_in(B):2
     [V_dircount>=1,12*V_dircount+14=C,12*V_dircount+14=V_24,D=3] 

### Cost equations --> "Loop" of eval_EstimateStripByteCounts_17/4 
* CEs [28] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [25] --> Loop 22 

#### Loops of eval_EstimateStripByteCounts_17/4 
* Loop 19: eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) [V_dircount>=1,12*V_dircount+14=V_24] 
* Loop 20: eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) [0>=V_dircount,12*V_dircount+14=V_24] 
* Loop 21: eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) [V_dircount>=1,12*V_dircount+14=V_24] 
* Loop 22: eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) [0>=V_dircount,12*V_dircount+14=V_24] 

### Ranking functions of CR eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) 

#### Partial ranking functions of CR eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) 


### Resulting Chains:eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B) 
* [22]
* [21]
* [20]...
* [19]...


### Merging Chains  eval_EstimateStripByteCounts_17/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[19]] --> 4 


### Specialization of cost equations eval_EstimateStripByteCounts_bb14_in/2 
* CE 14 is refined into CE [29] 
* CE 13 is refined into CE [30] 


#### Refined cost equations eval_EstimateStripByteCounts_bb14_in/2 
* CE 29: eval_EstimateStripByteCounts_bb14_in(V_i_1,B) = 0
     [V_i_1>=0,B=2] 
* CE 30: eval_EstimateStripByteCounts_bb14_in(V_i_1,B) = 1+ eval_EstimateStripByteCounts_bb14_in(C,D)
     [V_i_1>=0,V_i_1+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_EstimateStripByteCounts_bb14_in/2 
* CEs [30] --> Loop 23 
* CEs [29] --> Loop 24 

#### Loops of eval_EstimateStripByteCounts_bb14_in/2 
* Loop 23: eval_EstimateStripByteCounts_bb14_in(V_i_1,B)->  eval_EstimateStripByteCounts_bb14_in(V_i_1',B')
                  [V_i_1>=0,V_i_1+1=V_i_1',B'=2,B=2] 
* Loop 24: eval_EstimateStripByteCounts_bb14_in(V_i_1,B) [V_i_1>=0,B=2] 

### Ranking functions of CR eval_EstimateStripByteCounts_bb14_in(V_i_1,B) 

#### Partial ranking functions of CR eval_EstimateStripByteCounts_bb14_in(V_i_1,B) 


### Resulting Chains:eval_EstimateStripByteCounts_bb14_in(V_i_1,B) 
* [[23]]...
* [[23],24]
* [24]


### Merging Chains  eval_EstimateStripByteCounts_bb14_in/2 into  External patterns of execution 
* [[24],[24,[23]]] --> 1 
* [[[23]]] --> 2 


### Specialization of cost equations eval_EstimateStripByteCounts_59/1 
* CE 7 is refined into CE [31,32] 


#### Refined cost equations eval_EstimateStripByteCounts_59/1 
* CE 31: eval_EstimateStripByteCounts_59(B) = 1+ eval_EstimateStripByteCounts_bb14_in(C,D):1
     [D=2,C=0] 
* CE 32: eval_EstimateStripByteCounts_59(B) = 1+ eval_EstimateStripByteCounts_bb14_in(C,D):2
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_EstimateStripByteCounts_59/1 
* CEs [32] --> Loop 25 
* CEs [31] --> Loop 26 

#### Loops of eval_EstimateStripByteCounts_59/1 
* Loop 25: eval_EstimateStripByteCounts_59(B) [] 
* Loop 26: eval_EstimateStripByteCounts_59(B) [] 

### Ranking functions of CR eval_EstimateStripByteCounts_59(B) 

#### Partial ranking functions of CR eval_EstimateStripByteCounts_59(B) 


### Resulting Chains:eval_EstimateStripByteCounts_59(B) 
* [26]
* [25]...


### Merging Chains  eval_EstimateStripByteCounts_59/1 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_EstimateStripByteCounts_7/2 
* CE 4 is refined into CE [33,34,35,36] 
* CE 5 is refined into CE [37,38] 


#### Refined cost equations eval_EstimateStripByteCounts_7/2 
* CE 33: eval_EstimateStripByteCounts_7(V_dircount,B) = 0+ eval_EstimateStripByteCounts_17(C,D,E,B):1
     [14>=D,D=12*C+14,D=12*V_dircount+14] 
* CE 34: eval_EstimateStripByteCounts_7(V_dircount,B) = 0+ eval_EstimateStripByteCounts_17(C,D,E,B):2
     [D>=26,D=12*C+14,D=12*V_dircount+14] 
* CE 35: eval_EstimateStripByteCounts_7(V_dircount,B) = 0+ eval_EstimateStripByteCounts_17(V_dircount,C,D,B):3
     [0>=V_dircount,12*V_dircount+14=C] 
* CE 36: eval_EstimateStripByteCounts_7(V_dircount,B) = 0+ eval_EstimateStripByteCounts_17(V_dircount,C,D,B):4
     [V_dircount>=1,12*V_dircount+14=C] 
* CE 37: eval_EstimateStripByteCounts_7(V_dircount,B) = 0+ eval_EstimateStripByteCounts_59(B):1
     [] 
* CE 38: eval_EstimateStripByteCounts_7(V_dircount,B) = 0+ eval_EstimateStripByteCounts_59(B):2
     [] 

### Cost equations --> "Loop" of eval_EstimateStripByteCounts_7/2 
* CEs [35,36,38] --> Loop 27 
* CEs [33,34,37] --> Loop 28 

#### Loops of eval_EstimateStripByteCounts_7/2 
* Loop 27: eval_EstimateStripByteCounts_7(V_dircount,B) [] 
* Loop 28: eval_EstimateStripByteCounts_7(V_dircount,B) [] 

### Ranking functions of CR eval_EstimateStripByteCounts_7(V_dircount,B) 

#### Partial ranking functions of CR eval_EstimateStripByteCounts_7(V_dircount,B) 


### Resulting Chains:eval_EstimateStripByteCounts_7(V_dircount,B) 
* [28]
* [27]...


### Merging Chains  eval_EstimateStripByteCounts_7/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_EstimateStripByteCounts_bb0_in/2 
* CE 3 is refined into CE [39,40] 


#### Refined cost equations eval_EstimateStripByteCounts_bb0_in/2 
* CE 39: eval_EstimateStripByteCounts_bb0_in(V_dircount,B) = 0+ eval_EstimateStripByteCounts_7(V_dircount,B):1
     [] 
* CE 40: eval_EstimateStripByteCounts_bb0_in(V_dircount,B) = 0+ eval_EstimateStripByteCounts_7(V_dircount,B):2
     [] 

### Cost equations --> "Loop" of eval_EstimateStripByteCounts_bb0_in/2 
* CEs [40] --> Loop 29 
* CEs [39] --> Loop 30 

#### Loops of eval_EstimateStripByteCounts_bb0_in/2 
* Loop 29: eval_EstimateStripByteCounts_bb0_in(V_dircount,B) [] 
* Loop 30: eval_EstimateStripByteCounts_bb0_in(V_dircount,B) [] 

### Ranking functions of CR eval_EstimateStripByteCounts_bb0_in(V_dircount,B) 

#### Partial ranking functions of CR eval_EstimateStripByteCounts_bb0_in(V_dircount,B) 


### Resulting Chains:eval_EstimateStripByteCounts_bb0_in(V_dircount,B) 
* [30]
* [29]...


### Merging Chains  eval_EstimateStripByteCounts_bb0_in/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_EstimateStripByteCounts_start/2 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_EstimateStripByteCounts_start/2 
* CE 41: eval_EstimateStripByteCounts_start(V_dircount,B) = 0+ eval_EstimateStripByteCounts_bb0_in(V_dircount,B):1
     [] 
* CE 42: eval_EstimateStripByteCounts_start(V_dircount,B) = 0+ eval_EstimateStripByteCounts_bb0_in(V_dircount,B):2
     [] 

### Cost equations --> "Loop" of eval_EstimateStripByteCounts_start/2 
* CEs [42] --> Loop 31 
* CEs [41] --> Loop 32 

#### Loops of eval_EstimateStripByteCounts_start/2 
* Loop 31: eval_EstimateStripByteCounts_start(V_dircount,B) [] 
* Loop 32: eval_EstimateStripByteCounts_start(V_dircount,B) [] 

### Ranking functions of CR eval_EstimateStripByteCounts_start(V_dircount,B) 

#### Partial ranking functions of CR eval_EstimateStripByteCounts_start(V_dircount,B) 


### Resulting Chains:eval_EstimateStripByteCounts_start(V_dircount,B) 
* [32]
* [31]...


### Merging Chains  eval_EstimateStripByteCounts_start/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) -> [eval_EstimateStripByteCounts_bb4_in(V_29',V_n_0',V_space_0',B')] 
1
#### Cost of phase [13]:eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B) -> [eval_EstimateStripByteCounts_bb4_in(V_29',V_n_0',V_space_0',B')] 
1*it(13)+0
  Such that:it(13) =< V_n_0
it(13) =< V_n_0-V_n_0'

#### Cost of chains of eval_EstimateStripByteCounts_bb4_in(V_29,V_n_0,V_space_0,B):
* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V_n_0

  with precondition: [B=3,V_n_0>=1] 

* Chain [14]: 0
  with precondition: [B=3,0>=V_n_0] 


#### Cost of loops [15] 

 * loop 15:eval_EstimateStripByteCounts_bb9_in(V_i_0,B) -> [eval_EstimateStripByteCounts_bb9_in(V_i_0',B')] 
1
#### Cost of phase [15]:eval_EstimateStripByteCounts_bb9_in(V_i_0,B) -> [eval_EstimateStripByteCounts_bb9_in(V_i_0',B')] 
1*it(15)+0
#### Cost of phase [15]:eval_EstimateStripByteCounts_bb9_in(V_i_0,B) -> [eval_EstimateStripByteCounts_bb9_in(V_i_0',B')] 
1*it(15)+0
#### Cost of chains of eval_EstimateStripByteCounts_bb9_in(V_i_0,B):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [V_i_0>=0,B=2] 

* Chain [[15],16]: 1*it(15)+0
  with precondition: [B=2,V_i_0>=0] 

* Chain [16]: 0
  with precondition: [B=2,V_i_0>=0] 


#### Cost of chains of eval_EstimateStripByteCounts_bb8_in(B):
* Chain [18]: 1*s(2)+1
  with precondition: [] 

* Chain [17]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_EstimateStripByteCounts_17(V_dircount,V_24,V_29,B):
* Chain [22]: 1*s(4)+2
  with precondition: [V_24=12*V_dircount+14,14>=V_24] 

* Chain [21]: 1*s(5)+1*s(6)+2
  Such that:s(5) =< V_24/12

  with precondition: [V_24=12*V_dircount+14,V_24>=26] 

* Chain [20]...: 1*s(7)+2
  with precondition: [V_24=12*V_dircount+14,14>=V_24] 

* Chain [19]...: 1*s(8)+1*s(9)+2
  Such that:s(8) =< V_24/12

  with precondition: [V_24=12*V_dircount+14,V_24>=26] 


#### Cost of loops [23] 

 * loop 23:eval_EstimateStripByteCounts_bb14_in(V_i_1,B) -> [eval_EstimateStripByteCounts_bb14_in(V_i_1',B')] 
1
#### Cost of phase [23]:eval_EstimateStripByteCounts_bb14_in(V_i_1,B) -> [eval_EstimateStripByteCounts_bb14_in(V_i_1',B')] 
1*it(23)+0
#### Cost of phase [23]:eval_EstimateStripByteCounts_bb14_in(V_i_1,B) -> [eval_EstimateStripByteCounts_bb14_in(V_i_1',B')] 
1*it(23)+0
#### Cost of chains of eval_EstimateStripByteCounts_bb14_in(V_i_1,B):
* Chain [[23]]...: 1*it(23)+0
  with precondition: [V_i_1>=0,B=2] 

* Chain [[23],24]: 1*it(23)+0
  with precondition: [B=2,V_i_1>=0] 

* Chain [24]: 0
  with precondition: [B=2,V_i_1>=0] 


#### Cost of chains of eval_EstimateStripByteCounts_59(B):
* Chain [26]: 1*s(11)+1
  with precondition: [] 

* Chain [25]...: 1*s(12)+1
  with precondition: [] 


#### Cost of chains of eval_EstimateStripByteCounts_7(V_dircount,B):
* Chain [28]: 3*s(13)+1*s(14)+2
  Such that:s(14) =< V_dircount+7/6

  with precondition: [] 

* Chain [27]...: 3*s(17)+1*s(18)+2
  Such that:s(18) =< V_dircount+7/6

  with precondition: [] 


#### Cost of chains of eval_EstimateStripByteCounts_bb0_in(V_dircount,B):
* Chain [30]: 1*s(21)+3*s(22)+2
  Such that:s(21) =< V_dircount+7/6

  with precondition: [] 

* Chain [29]...: 1*s(23)+3*s(24)+2
  Such that:s(23) =< V_dircount+7/6

  with precondition: [] 


#### Cost of chains of eval_EstimateStripByteCounts_start(V_dircount,B):
* Chain [32]: 1*s(25)+3*s(26)+2
  Such that:s(25) =< V_dircount+7/6

  with precondition: [] 

* Chain [31]...: 1*s(27)+3*s(28)+2
  Such that:s(27) =< V_dircount+7/6

  with precondition: [] 


Closed-form bounds of eval_EstimateStripByteCounts_start(V_dircount,B): 
-------------------------------------
* Chain [32] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_EstimateStripByteCounts_start(V_dircount,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 42 ms.
* Invariants computed in 50 ms.
   - Backward Invariants 22 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 98 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 79 ms.
   - Equation cost structures 42 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 365 ms.

