WARNING: Excluded non-linear constraints:[D*A>=0+1,B-D*A*E>=0,B-D*A*E+1=<D*A]
WARNING: Excluded non-linear constraints:[D*A+1=<0,B-D*A*E>=0,B-D*A*E+1=< -D*A]
WARNING: Excluded non-linear constraints:[D*A>=0+1,-B+D*A*E>=0,-B+D*A*E+1=<D*A]
WARNING: Excluded non-linear constraints:[D*A+1=<0,-B+D*A*E>=0,-B+D*A*E+1=< -D*A]
WARNING: Excluded non-linear constraints:[G-B*E>=0,G-B*E+1=<B]
WARNING: Excluded non-linear constraints:[G-B*E>=0,G-B*E+1=< -B]
WARNING: Excluded non-linear constraints:[-G+B*E>=0,-G+B*E+1=<B]
WARNING: Excluded non-linear constraints:[-G+B*E>=0,-G+B*E+1=< -B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=<A]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=<A,G-B*E>=0,G-B*E+1=<B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=<A,G-B*E>=0,G-B*E+1=< -B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=<A,-G+B*E>=0,-G+B*E+1=<B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=<A,-G+B*E>=0,-G+B*E+1=< -B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=< -A]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=< -A,G-B*E>=0,G-B*E+1=<B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=< -A,G-B*E>=0,G-B*E+1=< -B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=< -A,-G+B*E>=0,-G+B*E+1=<B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=< -A,-G+B*E>=0,-G+B*E+1=< -B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=<A]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=<A,G-B*E>=0,G-B*E+1=<B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=<A,G-B*E>=0,G-B*E+1=< -B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=<A,-G+B*E>=0,-G+B*E+1=<B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=<A,-G+B*E>=0,-G+B*E+1=< -B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=< -A]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=< -A,G-B*E>=0,G-B*E+1=<B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=< -A,G-B*E>=0,G-B*E+1=< -B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=< -A,-G+B*E>=0,-G+B*E+1=<B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=< -A,-G+B*E>=0,-G+B*E+1=< -B]
WARNING: Excluded non-linear constraints:[-B*E+256>=0,-B*E+256+1=<B]
WARNING: Excluded non-linear constraints:[-B*E+256>=0,-B*E+256+1=< -B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=<A,-B*E+256>=0,-B*E+256+1=<B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=<A,-B*E+256>=0,-B*E+256+1=< -B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=< -A,-B*E+256>=0,-B*E+256+1=<B]
WARNING: Excluded non-linear constraints:[8*C-A*G>=0,8*C-A*G+1=< -A,-B*E+256>=0,-B*E+256+1=< -B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=<A,-B*E+256>=0,-B*E+256+1=<B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=<A,-B*E+256>=0,-B*E+256+1=< -B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=< -A,-B*E+256>=0,-B*E+256+1=<B]
WARNING: Excluded non-linear constraints:[-8*C+A*G>=0,-8*C+A*G+1=< -A,-B*E+256>=0,-B*E+256+1=< -B]
WARNING: Excluded non-linear constraints:[E=D*A]
WARNING: Excluded non-linear constraints:[G=D*A,D*A*C>=0+1,E-D*A*C*F>=0,E-D*A*C*F+1=<D*A*C]
WARNING: Excluded non-linear constraints:[G=D*A,D*A*C+1=<0,E-D*A*C*F>=0,E-D*A*C*F+1=< -D*A*C]
WARNING: Excluded non-linear constraints:[G=D*A,D*A*C>=0+1,-E+D*A*C*F>=0,-E+D*A*C*F+1=<D*A*C]
WARNING: Excluded non-linear constraints:[G=D*A,D*A*C+1=<0,-E+D*A*C*F>=0,-E+D*A*C*F+1=< -D*A*C]
WARNING: Excluded non-linear constraints:[E=D*A]
WARNING: Excluded non-linear constraints:[G=D*A,D*A*C>=0+1,E-D*A*C*F>=0,E-D*A*C*F+1=<D*A*C]
WARNING: Excluded non-linear constraints:[G=D*A,D*A*C+1=<0,E-D*A*C*F>=0,E-D*A*C*F+1=< -D*A*C]
WARNING: Excluded non-linear constraints:[G=D*A,D*A*C>=0+1,-E+D*A*C*F>=0,-E+D*A*C*F+1=<D*A*C]
WARNING: Excluded non-linear constraints:[G=D*A,D*A*C+1=<0,-E+D*A*C*F>=0,-E+D*A*C*F+1=< -D*A*C]
WARNING: Excluded non-linear constraints:[G=D*A]
WARNING: Excluded non-linear constraints:[H=D*A,D*A*C>=0+1,G-D*A*C*E>=0,G-D*A*C*E+1=<D*A*C]
WARNING: Excluded non-linear constraints:[H=D*A,D*A*C+1=<0,G-D*A*C*E>=0,G-D*A*C*E+1=< -D*A*C]
WARNING: Excluded non-linear constraints:[H=D*A,D*A*C>=0+1,-G+D*A*C*E>=0,-G+D*A*C*E+1=<D*A*C]
WARNING: Excluded non-linear constraints:[H=D*A,D*A*C+1=<0,-G+D*A*C*E>=0,-G+D*A*C*E+1=< -D*A*C]
WARNING: Excluded non-linear constraints:[C*D>=0+1,E-C*D*F>=0,E-C*D*F+1=<C*D]
WARNING: Excluded non-linear constraints:[C*D+1=<0,E-C*D*F>=0,E-C*D*F+1=< -C*D]
WARNING: Excluded non-linear constraints:[C*D>=0+1,-E+C*D*F>=0,-E+C*D*F+1=<C*D]
WARNING: Excluded non-linear constraints:[C*D+1=<0,-E+C*D*F>=0,-E+C*D*F+1=< -C*D]
Warning: Ignored call to eval_clist_new_tile_params_stop/1 in equation eval_clist_new_tile_params_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_clist_new_tile_params_bb1_in/4]
1. non_recursive  : [eval_clist_new_tile_params_bb6_in/1]
2. non_recursive  : [loop_cont_eval_clist_new_tile_params_bb1_in/2]
3. non_recursive  : [eval_clist_new_tile_params_16/4]
4. non_recursive  : [eval_clist_new_tile_params_15/4]
5. non_recursive  : [eval_clist_new_tile_params_bb0_in/2]
6. non_recursive  : [eval_clist_new_tile_params_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_clist_new_tile_params_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_clist_new_tile_params_16/4
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_clist_new_tile_params_bb0_in/2
6. SCC is partially evaluated into eval_clist_new_tile_params_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_clist_new_tile_params_bb1_in/4 
* CE 25 is refined into CE [26] 
* CE 24 is refined into CE [27] 


#### Refined cost equations eval_clist_new_tile_params_bb1_in/4 
* CE 26: eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B) = 0
     [255>=V_reps_x_0,B=2] 
* CE 27: eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D)
     [V_reps_x_0>=256,D=2,B=2] 

### Cost equations --> "Loop" of eval_clist_new_tile_params_bb1_in/4 
* CEs [27] --> Loop 12 
* CEs [26] --> Loop 13 

#### Loops of eval_clist_new_tile_params_bb1_in/4 
* Loop 12: eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B)->  eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0',B')
                  [V_reps_x_0>=256,B'=2,B=2] 
* Loop 13: eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B) [255>=V_reps_x_0,B=2] 

### Ranking functions of CR eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B) 

#### Partial ranking functions of CR eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B) 


### Resulting Chains:eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B) 
* [[12]]...
* [[12],13]
* [13]


### Merging Chains  eval_clist_new_tile_params_bb1_in/4 into  External patterns of execution 
* [[13]] --> 1 
* [[13,[12]]] --> 2 
* [[[12]]] --> 3 


### Specialization of cost equations eval_clist_new_tile_params_16/4 
* CE 7 is refined into CE [28,29,30] 
* CE 6 is refined into CE [31] 
* CE 8 is refined into CE [32] 
* CE 10 is refined into CE [33] 
* CE 20 is refined into CE [34,35,36] 
* CE 9 is refined into CE [37] 
* CE 11 is refined into CE [38,39,40] 
* CE 21 is refined into CE [41] 
* CE 12 is refined into CE [42] 
* CE 13 is refined into CE [43] 
* CE 14 is refined into CE [44,45,46] 
* CE 22 is refined into CE [47,48,49] 
* CE 23 is refined into CE [50] 
* CE 15 is refined into CE [51] 
* CE 16 is refined into CE [52,53,54] 
* CE 17 is refined into CE [55] 
* CE 5 is refined into CE [56] 
* CE 18 is refined into CE [57,58,59] 
* CE 19 is refined into CE [60] 


#### Refined cost equations eval_clist_new_tile_params_16/4 
* CE 28: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [8*V_max_bytes_0>=1,C>=0,V_6>=1,V_5>=1,255>=C,D=2] 
* CE 29: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):2
     [8*V_max_bytes_0>=1,C>=256,V_6>=1,V_5>=1,D=2] 
* CE 30: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):3
     [8*V_max_bytes_0>=1,C>=256,V_6>=1,V_5>=1,D=2] 
* CE 31: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [8*V_max_bytes_0>=1,V_5>=1,D=2,C=0] 
* CE 32: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [8*V_max_bytes_0>=1,V_5>=1,0>=C,0>=V_6+1,D=2] 
* CE 33: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [8*V_max_bytes_0>=1,V_6>=1,0>=C,0>=V_5+1,D=2] 
* CE 34: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [8*V_max_bytes_0>=1,C>=0,V_6>=1,255>=C,0>=V_5+1,D=2] 
* CE 35: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):2
     [8*V_max_bytes_0>=1,C>=256,V_6>=1,0>=V_5+1,D=2] 
* CE 36: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):3
     [8*V_max_bytes_0>=1,C>=256,V_6>=1,0>=V_5+1,D=2] 
* CE 37: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [8*V_max_bytes_0>=1,0>=V_5+1,D=2,C=0] 
* CE 38: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [8*V_max_bytes_0>=1,C>=0,255>=C,0>=V_6+1,0>=V_5+1,D=2] 
* CE 39: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):2
     [8*V_max_bytes_0>=1,C>=256,0>=V_6+1,0>=V_5+1,D=2] 
* CE 40: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):3
     [8*V_max_bytes_0>=1,C>=256,0>=V_6+1,0>=V_5+1,D=2] 
* CE 41: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [8*V_max_bytes_0>=1,0>=C,0>=V_6+1,0>=V_5+1,D=2] 
* CE 42: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [V_5>=1,0>=8*V_max_bytes_0+1,D=2,C=0] 
* CE 43: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [V_6>=1,V_5>=1,0>=C,0>=8*V_max_bytes_0+1,D=2] 
* CE 44: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [C>=0,V_5>=1,255>=C,0>=V_6+1,0>=8*V_max_bytes_0+1,D=2] 
* CE 45: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):2
     [C>=256,V_5>=1,0>=V_6+1,0>=8*V_max_bytes_0+1,D=2] 
* CE 46: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):3
     [C>=256,V_5>=1,0>=V_6+1,0>=8*V_max_bytes_0+1,D=2] 
* CE 47: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [C>=0,V_6>=1,V_5>=1,255>=C,0>=8*V_max_bytes_0+1,D=2] 
* CE 48: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):2
     [C>=256,V_6>=1,V_5>=1,0>=8*V_max_bytes_0+1,D=2] 
* CE 49: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):3
     [C>=256,V_6>=1,V_5>=1,0>=8*V_max_bytes_0+1,D=2] 
* CE 50: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [V_5>=1,0>=C,0>=V_6+1,0>=8*V_max_bytes_0+1,D=2] 
* CE 51: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [0>=V_5+1,0>=8*V_max_bytes_0+1,D=2,C=0] 
* CE 52: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [C>=0,V_6>=1,255>=C,0>=V_5+1,0>=8*V_max_bytes_0+1,D=2] 
* CE 53: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):2
     [C>=256,V_6>=1,0>=V_5+1,0>=8*V_max_bytes_0+1,D=2] 
* CE 54: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):3
     [C>=256,V_6>=1,0>=V_5+1,0>=8*V_max_bytes_0+1,D=2] 
* CE 55: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,C,D):1
     [0>=C,0>=V_6+1,0>=V_5+1,0>=8*V_max_bytes_0+1,D=2] 
* CE 56: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,C,D,E):1
     [E=2,D=0,C=0,V_max_bytes_0=0] 
* CE 57: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,C,D,E):1
     [D>=0,V_6>=1,255>=D,E=2,C=0,V_max_bytes_0=0] 
* CE 58: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,C,D,E):2
     [D>=256,V_6>=1,E=2,C=0,V_max_bytes_0=0] 
* CE 59: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,C,D,E):3
     [D>=256,V_6>=1,E=2,C=0,V_max_bytes_0=0] 
* CE 60: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) = 1+ eval_clist_new_tile_params_bb1_in(V_5,C,D,E):1
     [0>=D,0>=V_6+1,E=2,C=0,V_max_bytes_0=0] 

### Cost equations --> "Loop" of eval_clist_new_tile_params_16/4 
* CEs [28,29] --> Loop 14 
* CEs [31,32] --> Loop 15 
* CEs [33,34,35] --> Loop 16 
* CEs [37,38,39,41] --> Loop 17 
* CEs [42,43,44,45,47,48,50] --> Loop 18 
* CEs [51,52,53,55] --> Loop 19 
* CEs [56,57,58,60] --> Loop 20 
* CEs [30] --> Loop 21 
* CEs [36] --> Loop 22 
* CEs [40] --> Loop 23 
* CEs [49] --> Loop 24 
* CEs [46] --> Loop 25 
* CEs [54] --> Loop 26 
* CEs [59] --> Loop 27 

#### Loops of eval_clist_new_tile_params_16/4 
* Loop 14: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [8*V_max_bytes_0>=1,V_6>=1,V_5>=1] 
* Loop 15: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [8*V_max_bytes_0>=1,V_5>=1] 
* Loop 16: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [8*V_max_bytes_0>=1,V_6>=1,0>=V_5+1] 
* Loop 17: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [8*V_max_bytes_0>=1,0>=V_5+1] 
* Loop 18: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [V_5>=1,0>=8*V_max_bytes_0+1] 
* Loop 19: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [0>=V_5+1,0>=8*V_max_bytes_0+1] 
* Loop 20: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [V_max_bytes_0=0] 
* Loop 21: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [8*V_max_bytes_0>=1,V_6>=1,V_5>=1] 
* Loop 22: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [8*V_max_bytes_0>=1,V_6>=1,0>=V_5+1] 
* Loop 23: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [8*V_max_bytes_0>=1,0>=V_6+1,0>=V_5+1] 
* Loop 24: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [V_6>=1,V_5>=1,0>=8*V_max_bytes_0+1] 
* Loop 25: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [V_5>=1,0>=V_6+1,0>=8*V_max_bytes_0+1] 
* Loop 26: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [V_6>=1,0>=V_5+1,0>=8*V_max_bytes_0+1] 
* Loop 27: eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) [V_6>=1,V_max_bytes_0=0] 

### Ranking functions of CR eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) 

#### Partial ranking functions of CR eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) 


### Resulting Chains:eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B) 
* [27]...
* [26]...
* [25]...
* [24]...
* [23]...
* [22]...
* [21]...
* [20]
* [19]
* [18]
* [17]
* [16]
* [15]
* [14]


### Merging Chains  eval_clist_new_tile_params_16/4 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[16],[17]] --> 4 
* [[14],[15]] --> 5 
* [[27]] --> 6 
* [[26]] --> 7 
* [[25]] --> 8 
* [[24]] --> 9 
* [[23]] --> 10 
* [[22]] --> 11 
* [[21]] --> 12 


### Specialization of cost equations eval_clist_new_tile_params_bb0_in/2 
* CE 3 is refined into CE [61,62,63,64,65,66,67,68,69,70,71,72] 
* CE 4 is refined into CE [73,74,75,76,77,78,79,80,81,82,83,84] 


#### Refined cost equations eval_clist_new_tile_params_bb0_in/2 
* CE 61: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):1
     [E=0] 
* CE 62: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):2
     [0>=C+1,0>=8*E+1] 
* CE 63: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):3
     [C>=1,0>=8*E+1] 
* CE 64: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):4
     [8*E>=1,0>=C+1] 
* CE 65: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):5
     [8*E>=1,C>=1] 
* CE 66: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):6
     [D>=1,E=0] 
* CE 67: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):7
     [D>=1,0>=C+1,0>=8*E+1] 
* CE 68: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):8
     [C>=1,0>=D+1,0>=8*E+1] 
* CE 69: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):9
     [D>=1,C>=1,0>=8*E+1] 
* CE 70: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):10
     [8*E>=1,0>=D+1,0>=C+1] 
* CE 71: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):11
     [8*E>=1,D>=1,0>=C+1] 
* CE 72: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):12
     [8*E>=1,D>=1,C>=1] 
* CE 73: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):1
     [E=0] 
* CE 74: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):2
     [0>=C+1,0>=8*E+1] 
* CE 75: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):3
     [C>=1,0>=8*E+1] 
* CE 76: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):4
     [8*E>=1,0>=C+1] 
* CE 77: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):5
     [8*E>=1,C>=1] 
* CE 78: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):6
     [D>=1,E=0] 
* CE 79: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):7
     [D>=1,0>=C+1,0>=8*E+1] 
* CE 80: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):8
     [C>=1,0>=D+1,0>=8*E+1] 
* CE 81: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):9
     [D>=1,C>=1,0>=8*E+1] 
* CE 82: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):10
     [8*E>=1,0>=D+1,0>=C+1] 
* CE 83: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):11
     [8*E>=1,D>=1,0>=C+1] 
* CE 84: eval_clist_new_tile_params_bb0_in(V_depth,B) = 0+ eval_clist_new_tile_params_16(C,D,E,B):12
     [8*E>=1,D>=1,C>=1] 

### Cost equations --> "Loop" of eval_clist_new_tile_params_bb0_in/2 
* CEs [66,67,68,69,70,71,72,78,79,80,81,82,83,84] --> Loop 28 
* CEs [61,62,63,64,65,73,74,75,76,77] --> Loop 29 

#### Loops of eval_clist_new_tile_params_bb0_in/2 
* Loop 28: eval_clist_new_tile_params_bb0_in(V_depth,B) [] 
* Loop 29: eval_clist_new_tile_params_bb0_in(V_depth,B) [] 

### Ranking functions of CR eval_clist_new_tile_params_bb0_in(V_depth,B) 

#### Partial ranking functions of CR eval_clist_new_tile_params_bb0_in(V_depth,B) 


### Resulting Chains:eval_clist_new_tile_params_bb0_in(V_depth,B) 
* [29]
* [28]...


### Merging Chains  eval_clist_new_tile_params_bb0_in/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_clist_new_tile_params_start/2 
* CE 2 is refined into CE [85,86] 


#### Refined cost equations eval_clist_new_tile_params_start/2 
* CE 85: eval_clist_new_tile_params_start(V_depth,B) = 0+ eval_clist_new_tile_params_bb0_in(V_depth,B):1
     [] 
* CE 86: eval_clist_new_tile_params_start(V_depth,B) = 0+ eval_clist_new_tile_params_bb0_in(V_depth,B):2
     [] 

### Cost equations --> "Loop" of eval_clist_new_tile_params_start/2 
* CEs [86] --> Loop 30 
* CEs [85] --> Loop 31 

#### Loops of eval_clist_new_tile_params_start/2 
* Loop 30: eval_clist_new_tile_params_start(V_depth,B) [] 
* Loop 31: eval_clist_new_tile_params_start(V_depth,B) [] 

### Ranking functions of CR eval_clist_new_tile_params_start(V_depth,B) 

#### Partial ranking functions of CR eval_clist_new_tile_params_start(V_depth,B) 


### Resulting Chains:eval_clist_new_tile_params_start(V_depth,B) 
* [31]
* [30]...


### Merging Chains  eval_clist_new_tile_params_start/2 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B) -> [eval_clist_new_tile_params_bb1_in(V_5',V_max_bytes_0',V_reps_x_0',B')] 
1
#### Cost of phase [12]:eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B) -> [eval_clist_new_tile_params_bb1_in(V_5',V_max_bytes_0',V_reps_x_0',B')] 
1*it(12)+0
#### Cost of phase [12]:eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B) -> [eval_clist_new_tile_params_bb1_in(V_5',V_max_bytes_0',V_reps_x_0',B')] 
1*it(12)+0
#### Cost of chains of eval_clist_new_tile_params_bb1_in(V_5,V_max_bytes_0,V_reps_x_0,B):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [V_reps_x_0>=256,B=2] 

* Chain [[12],13]: 1*it(12)+0
  with precondition: [B=2,V_reps_x_0>=256] 

* Chain [13]: 0
  with precondition: [B=2,255>=V_reps_x_0] 


#### Cost of chains of eval_clist_new_tile_params_16(V_5,V_6,V_max_bytes_0,B):
* Chain [27]...: 1*s(1)+1
  with precondition: [V_max_bytes_0=0,V_6>=1] 

* Chain [26]...: 1*s(2)+1
  with precondition: [0>=8*V_max_bytes_0+1,0>=V_5+1,V_6>=1] 

* Chain [25]...: 1*s(3)+1
  with precondition: [0>=8*V_max_bytes_0+1,0>=V_6+1,V_5>=1] 

* Chain [24]...: 1*s(4)+1
  with precondition: [0>=8*V_max_bytes_0+1,V_5>=1,V_6>=1] 

* Chain [23]...: 1*s(5)+1
  with precondition: [0>=V_5+1,0>=V_6+1,8*V_max_bytes_0>=1] 

* Chain [22]...: 1*s(6)+1
  with precondition: [0>=V_5+1,V_6>=1,8*V_max_bytes_0>=1] 

* Chain [21]...: 1*s(7)+1
  with precondition: [V_5>=1,V_6>=1,8*V_max_bytes_0>=1] 

* Chain [20]: 1*aux(1)+0
  with precondition: [V_max_bytes_0=0] 

* Chain [19]: 1*aux(2)+0
  with precondition: [0>=8*V_max_bytes_0+1,0>=V_5+1] 

* Chain [18]: 1*aux(3)+0
  with precondition: [0>=8*V_max_bytes_0+1,V_5>=1] 

* Chain [17]: 1*aux(4)+0
  with precondition: [0>=V_5+1,8*V_max_bytes_0>=1] 

* Chain [16]: 1*aux(5)+0
  with precondition: [0>=V_5+1,V_6>=1,8*V_max_bytes_0>=1] 

* Chain [15]: 1
  with precondition: [V_5>=1,8*V_max_bytes_0>=1] 

* Chain [14]: 1*aux(6)+0
  with precondition: [V_5>=1,V_6>=1,8*V_max_bytes_0>=1] 


#### Cost of chains of eval_clist_new_tile_params_bb0_in(V_depth,B):
* Chain [29]: 1*aux(9)+0
  with precondition: [] 

* Chain [28]...: 1*aux(10)+0
  with precondition: [] 


#### Cost of chains of eval_clist_new_tile_params_start(V_depth,B):
* Chain [31]: 1*s(42)+0
  with precondition: [] 

* Chain [30]...: 1*s(43)+0
  with precondition: [] 


Closed-form bounds of eval_clist_new_tile_params_start(V_depth,B): 
-------------------------------------
* Chain [31] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [30]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_clist_new_tile_params_start(V_depth,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 257 ms.
* Invariants computed in 29 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 233 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 64 ms.
   - Equation cost structures 51 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 742 ms.

