Warning: Ignored call to eval_cmd_write_buffer_stop/1 in equation loop_cont_eval_cmd_write_buffer_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_cmd_write_buffer_5/5,eval_cmd_write_buffer_6/6,eval_cmd_write_buffer_bb1_in/5]
1. non_recursive  : [loop_cont_eval_cmd_write_buffer_bb1_in/2]
2. non_recursive  : [eval_cmd_write_buffer_4/4]
3. non_recursive  : [eval_cmd_write_buffer_3/5]
4. non_recursive  : [eval_cmd_write_buffer_bb0_in/2]
5. non_recursive  : [eval_cmd_write_buffer_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cmd_write_buffer_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_cmd_write_buffer_4/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_cmd_write_buffer_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cmd_write_buffer_bb1_in/5 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 


#### Refined cost equations eval_cmd_write_buffer_bb1_in/5 
* CE 7: eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) = 0
     [V_band_0>=V_1,V_band_0>=0,B=2] 
* CE 8: eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) = 0
     [V_band_0>=0,0>=V_code_0+1,B=2] 
* CE 9: eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) = 1+ eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,C,D,E)
     [V_1>=V_band_0+1,V_band_0>=0,V_code_0>=0,V_band_0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_cmd_write_buffer_bb1_in/5 
* CEs [9] --> Loop 6 
* CEs [7] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_cmd_write_buffer_bb1_in/5 
* Loop 6: eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B)->  eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0',V_band_0',B')
                  [V_1>=V_band_0+1,V_band_0>=0,V_code_0>=0,V_band_0+1=V_band_0',B'=2,B=2] 
* Loop 7: eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) [V_band_0>=V_1,V_band_0>=0,B=2] 
* Loop 8: eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) [V_band_0>=0,0>=V_code_0+1,B=2] 

### Ranking functions of CR eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) 
* RF of phase [6]: [V_1-V_band_0]

#### Partial ranking functions of CR eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_1-V_band_0


### Resulting Chains:eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) 
* [[6],8]
* [[6],7]
* [8]
* [7]


### Merging Chains  eval_cmd_write_buffer_bb1_in/5 into  External patterns of execution 
* [[8]] --> 1 
* [[7,[6]],[8,[6]]] --> 2 
* [[7]] --> 3 


### Specialization of cost equations eval_cmd_write_buffer_4/4 
* CE 3 is refined into CE [10,11,12] 


#### Refined cost equations eval_cmd_write_buffer_4/4 
* CE 10: eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B) = 1+ eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_7,C,D):1
     [0>=V_7+1,D=2,C=0] 
* CE 11: eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B) = 1+ eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_7,C,D):2
     [V_7>=0,V_1>=1,D=2,C=0] 
* CE 12: eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B) = 1+ eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_7,C,D):3
     [0>=V_1,D=2,C=0] 

### Cost equations --> "Loop" of eval_cmd_write_buffer_4/4 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_cmd_write_buffer_4/4 
* Loop 9: eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B) [V_7>=0,V_1>=1] 
* Loop 10: eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B) [0>=V_7+1] 
* Loop 11: eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B) [0>=V_1] 

### Ranking functions of CR eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B) 

#### Partial ranking functions of CR eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B) 


### Resulting Chains:eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B) 
* [11]
* [10]
* [9]


### Merging Chains  eval_cmd_write_buffer_4/4 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 
* [[9]] --> 3 


### Specialization of cost equations eval_cmd_write_buffer_start/2 
* CE 2 is refined into CE [13,14,15] 


#### Refined cost equations eval_cmd_write_buffer_start/2 
* CE 13: eval_cmd_write_buffer_start(V_cmd_end,B) = 0+ eval_cmd_write_buffer_4(V_cmd_end,C,D,B):1
     [0>=C] 
* CE 14: eval_cmd_write_buffer_start(V_cmd_end,B) = 0+ eval_cmd_write_buffer_4(V_cmd_end,C,D,B):2
     [0>=D+1] 
* CE 15: eval_cmd_write_buffer_start(V_cmd_end,B) = 0+ eval_cmd_write_buffer_4(V_cmd_end,C,D,B):3
     [D>=0,C>=1] 

### Cost equations --> "Loop" of eval_cmd_write_buffer_start/2 
* CEs [13,14,15] --> Loop 12 

#### Loops of eval_cmd_write_buffer_start/2 
* Loop 12: eval_cmd_write_buffer_start(V_cmd_end,B) [] 

### Ranking functions of CR eval_cmd_write_buffer_start(V_cmd_end,B) 

#### Partial ranking functions of CR eval_cmd_write_buffer_start(V_cmd_end,B) 


### Resulting Chains:eval_cmd_write_buffer_start(V_cmd_end,B) 
* [12]


### Merging Chains  eval_cmd_write_buffer_start/2 into  External patterns of execution 
* [[12]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) -> [eval_cmd_write_buffer_bb1_in(V_cmd_end',V_1',V_code_0',V_band_0',B')] 
1
#### Cost of phase [6]:eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) -> [eval_cmd_write_buffer_bb1_in(V_cmd_end',V_1',V_code_0',V_band_0',B')] 
1*it(6)+0
  Such that:it(6) =< V_1-V_band_0
it(6) =< V_1-V_band_0-V_1'+V_band_0'

#### Cost of phase [6]:eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B) -> [eval_cmd_write_buffer_bb1_in(V_cmd_end',V_1',V_code_0',V_band_0',B')] 
1*it(6)+0
  Such that:it(6) =< V_1-V_band_0
it(6) =< V_1-V_band_0-V_1'+V_band_0'

#### Cost of chains of eval_cmd_write_buffer_bb1_in(V_cmd_end,V_1,V_code_0,V_band_0,B):
* Chain [[6],8]: 1*it(6)+0
  Such that:it(6) =< V_1-V_band_0

  with precondition: [B=2,V_code_0>=0,V_band_0>=0,V_1>=V_band_0+1] 

* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< V_1-V_band_0

  with precondition: [B=2,V_code_0>=0,V_band_0>=0,V_1>=V_band_0+1] 

* Chain [8]: 0
  with precondition: [B=2,0>=V_code_0+1,V_band_0>=0] 

* Chain [7]: 0
  with precondition: [B=2,V_band_0>=0,V_band_0>=V_1] 


#### Cost of chains of eval_cmd_write_buffer_4(V_cmd_end,V_1,V_7,B):
* Chain [11]: 1
  with precondition: [0>=V_1] 

* Chain [10]: 1
  with precondition: [0>=V_7+1] 

* Chain [9]: 2*s(4)+1
  Such that:s(3) =< V_1
s(4) =< s(3)

  with precondition: [V_1>=1,V_7>=0] 


#### Cost of chains of eval_cmd_write_buffer_start(V_cmd_end,B):
* Chain [12]: 1*aux(2)+0
  with precondition: [] 


Closed-form bounds of eval_cmd_write_buffer_start(V_cmd_end,B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_cmd_write_buffer_start(V_cmd_end,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 19 ms.
* Invariants computed in 31 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 51 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 16 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 19 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 195 ms.

