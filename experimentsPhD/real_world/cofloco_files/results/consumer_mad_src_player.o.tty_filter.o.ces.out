Warning: Ignored call to eval_tty_filter_stop/1 in equation eval_tty_filter_bb22_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_tty_filter_bb22_in/1]
1. recursive  : [eval_tty_filter_25/3,eval_tty_filter_26/3,eval_tty_filter_27/3,eval_tty_filter_30/3,eval_tty_filter_31/4,eval_tty_filter_32/4,eval_tty_filter_bb11_in/2,eval_tty_filter_bb13_in/3,eval_tty_filter_bb2_in/2]
2. non_recursive  : [eval_tty_filter_46/1]
3. non_recursive  : [eval_tty_filter_45/1]
4. non_recursive  : [eval_tty_filter_bb21_in/1]
5. non_recursive  : [eval_tty_filter_NewDefault43_in/1]
6. non_recursive  : [eval_tty_filter_NewDefault_in/1]
7. non_recursive  : [eval_tty_filter_bb19_in/1]
8. non_recursive  : [eval_tty_filter_23/1]
9. non_recursive  : [eval_tty_filter_22/1]
10. non_recursive  : [eval_tty_filter_bb10_in/1]
11. non_recursive  : [eval_tty_filter_bb5_in/1]
12. non_recursive  : [eval_tty_filter_9/1]
13. non_recursive  : [eval_tty_filter_8/5]
14. non_recursive  : [eval_tty_filter_3/1]
15. non_recursive  : [eval_tty_filter_2/1]
16. non_recursive  : [eval_tty_filter_bb3_in/1]
17. non_recursive  : [eval_tty_filter_bb6_in/1]
18. non_recursive  : [eval_tty_filter_19/1]
19. non_recursive  : [eval_tty_filter_18/1]
20. non_recursive  : [eval_tty_filter_17/1]
21. non_recursive  : [eval_tty_filter_bb7_in/1]
22. non_recursive  : [eval_tty_filter_bb9_in/1]
23. non_recursive  : [loop_cont_eval_tty_filter_bb2_in/2]
24. non_recursive  : [eval_tty_filter_1/2]
25. non_recursive  : [eval_tty_filter_0/1]
26. non_recursive  : [eval_tty_filter_bb0_in/1]
27. non_recursive  : [eval_tty_filter_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_tty_filter_bb2_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_tty_filter_3/1
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_tty_filter_bb7_in/1
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into loop_cont_eval_tty_filter_bb2_in/2
24. SCC is partially evaluated into eval_tty_filter_1/2
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_tty_filter_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_tty_filter_bb2_in/2 
* CE 21 is refined into CE [33] 
* CE 20 is refined into CE [34] 
* CE 19 is refined into CE [35] 
* CE 18 is refined into CE [36] 
* CE 17 is refined into CE [37] 
* CE 16 is refined into CE [38] 
* CE 15 is refined into CE [39] 
* CE 14 is refined into CE [40] 
* CE 5 is refined into CE [41] 
* CE 6 is refined into CE [42] 
* CE 7 is refined into CE [43] 
* CE 9 is refined into CE [44] 
* CE 12 is refined into CE [45] 
* CE 8 is refined into CE [46] 
* CE 11 is refined into CE [47] 
* CE 10 is refined into CE [48] 
* CE 13 is refined into CE [49] 


#### Refined cost equations eval_tty_filter_bb2_in/2 
* CE 33: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=10] 
* CE 34: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=9] 
* CE 35: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=8] 
* CE 36: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=7] 
* CE 37: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=6] 
* CE 38: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=5] 
* CE 39: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=4] 
* CE 40: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=3] 
* CE 41: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=2] 
* CE 42: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [V_command_0>=116,B=2] 
* CE 43: eval_tty_filter_bb2_in(V_command_0,B) = 0
     [B=2,V_command_0=115] 
* CE 44: eval_tty_filter_bb2_in(V_command_0,B) = 1+ eval_tty_filter_bb2_in(C,B)
     [C>=113,V_command_0>=116] 
* CE 45: eval_tty_filter_bb2_in(V_command_0,B) = 1+ eval_tty_filter_bb2_in(C,B)
     [C>=1,V_command_0>=116,111>=C] 
* CE 46: eval_tty_filter_bb2_in(V_command_0,B) = 1+ eval_tty_filter_bb2_in(C,B)
     [C>=113,114>=V_command_0] 
* CE 47: eval_tty_filter_bb2_in(V_command_0,B) = 1+ eval_tty_filter_bb2_in(C,B)
     [C>=1,111>=C,114>=V_command_0] 
* CE 48: eval_tty_filter_bb2_in(V_command_0,B) = 1+ eval_tty_filter_bb2_in(C,B)
     [C>=113,V_command_0=115] 
* CE 49: eval_tty_filter_bb2_in(V_command_0,B) = 1+ eval_tty_filter_bb2_in(C,B)
     [C>=1,111>=C,V_command_0=115] 

### Cost equations --> "Loop" of eval_tty_filter_bb2_in/2 
* CEs [44] --> Loop 29 
* CEs [45] --> Loop 30 
* CEs [46] --> Loop 31 
* CEs [47] --> Loop 32 
* CEs [48] --> Loop 33 
* CEs [49] --> Loop 34 
* CEs [33] --> Loop 35 
* CEs [34] --> Loop 36 
* CEs [35] --> Loop 37 
* CEs [36] --> Loop 38 
* CEs [37] --> Loop 39 
* CEs [38] --> Loop 40 
* CEs [39] --> Loop 41 
* CEs [40] --> Loop 42 
* CEs [41,42,43] --> Loop 43 

#### Loops of eval_tty_filter_bb2_in/2 
* Loop 29: eval_tty_filter_bb2_in(V_command_0,B)->  eval_tty_filter_bb2_in(V_command_0',B)
                  [V_command_0'>=113,V_command_0>=116] 
* Loop 30: eval_tty_filter_bb2_in(V_command_0,B)->  eval_tty_filter_bb2_in(V_command_0',B)
                  [V_command_0'>=1,V_command_0>=116,111>=V_command_0'] 
* Loop 31: eval_tty_filter_bb2_in(V_command_0,B)->  eval_tty_filter_bb2_in(V_command_0',B)
                  [V_command_0'>=113,114>=V_command_0] 
* Loop 32: eval_tty_filter_bb2_in(V_command_0,B)->  eval_tty_filter_bb2_in(V_command_0',B)
                  [V_command_0'>=1,111>=V_command_0',114>=V_command_0] 
* Loop 33: eval_tty_filter_bb2_in(V_command_0,B)->  eval_tty_filter_bb2_in(V_command_0',B)
                  [V_command_0'>=113,V_command_0=115] 
* Loop 34: eval_tty_filter_bb2_in(V_command_0,B)->  eval_tty_filter_bb2_in(V_command_0',B)
                  [V_command_0'>=1,111>=V_command_0',V_command_0=115] 
* Loop 35: eval_tty_filter_bb2_in(V_command_0,B) [B=10] 
* Loop 36: eval_tty_filter_bb2_in(V_command_0,B) [B=9] 
* Loop 37: eval_tty_filter_bb2_in(V_command_0,B) [B=8] 
* Loop 38: eval_tty_filter_bb2_in(V_command_0,B) [B=7] 
* Loop 39: eval_tty_filter_bb2_in(V_command_0,B) [B=6] 
* Loop 40: eval_tty_filter_bb2_in(V_command_0,B) [B=5] 
* Loop 41: eval_tty_filter_bb2_in(V_command_0,B) [B=4] 
* Loop 42: eval_tty_filter_bb2_in(V_command_0,B) [B=3] 
* Loop 43: eval_tty_filter_bb2_in(V_command_0,B) [B=2] 

### Ranking functions of CR eval_tty_filter_bb2_in(V_command_0,B) 

#### Partial ranking functions of CR eval_tty_filter_bb2_in(V_command_0,B) 
* Partial RF of phase [29,30,31,32,33,34]:
  - RF of loop [30:1]:
    V_command_0/5-23 depends on loops [29:1,31:1,32:1,33:1] 
  - RF of loop [34:1]:
    V_command_0/4-57/2 depends on loops [29:1,31:1,32:1,33:1] 


### Resulting Chains:eval_tty_filter_bb2_in(V_command_0,B) 
* [[29,30,31,32,33,34]]...
* [[29,30,31,32,33,34],43]
* [[29,30,31,32,33,34],42]
* [[29,30,31,32,33,34],41]
* [[29,30,31,32,33,34],40]
* [[29,30,31,32,33,34],39]
* [[29,30,31,32,33,34],38]
* [[29,30,31,32,33,34],37]
* [[29,30,31,32,33,34],36]
* [[29,30,31,32,33,34],35]
* [43]
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]


### Merging Chains  eval_tty_filter_bb2_in/2 into  External patterns of execution 
* [[43],[43,[29,30,31,32,33,34]]] --> 1 
* [[42],[42,[29,30,31,32,33,34]]] --> 2 
* [[41],[41,[29,30,31,32,33,34]]] --> 3 
* [[40],[40,[29,30,31,32,33,34]]] --> 4 
* [[39],[39,[29,30,31,32,33,34]]] --> 5 
* [[38],[38,[29,30,31,32,33,34]]] --> 6 
* [[37],[37,[29,30,31,32,33,34]]] --> 7 
* [[36],[36,[29,30,31,32,33,34]]] --> 8 
* [[35],[35,[29,30,31,32,33,34]]] --> 9 
* [[[29,30,31,32,33,34]]] --> 10 


### Specialization of cost equations eval_tty_filter_3/1 
* CE 31 is refined into CE [50] 


#### Refined cost equations eval_tty_filter_3/1 
* CE 50: eval_tty_filter_3(B) = 0
     [] 

### Cost equations --> "Loop" of eval_tty_filter_3/1 
* CEs [50] --> Loop 44 

#### Loops of eval_tty_filter_3/1 
* Loop 44: eval_tty_filter_3(B) [] 

### Ranking functions of CR eval_tty_filter_3(B) 

#### Partial ranking functions of CR eval_tty_filter_3(B) 


### Resulting Chains:eval_tty_filter_3(B) 
* [44]


### Merging Chains  eval_tty_filter_3/1 into  External patterns of execution 
* [[44]] --> 1 


### Specialization of cost equations eval_tty_filter_bb7_in/1 
* CE 32 is refined into CE [51] 


#### Refined cost equations eval_tty_filter_bb7_in/1 
* CE 51: eval_tty_filter_bb7_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_tty_filter_bb7_in/1 
* CEs [51] --> Loop 45 

#### Loops of eval_tty_filter_bb7_in/1 
* Loop 45: eval_tty_filter_bb7_in(B) [] 

### Ranking functions of CR eval_tty_filter_bb7_in(B) 

#### Partial ranking functions of CR eval_tty_filter_bb7_in(B) 


### Resulting Chains:eval_tty_filter_bb7_in(B) 
* [45]


### Merging Chains  eval_tty_filter_bb7_in/1 into  External patterns of execution 
* [[45]] --> 1 


### Specialization of cost equations loop_cont_eval_tty_filter_bb2_in/2 
* CE 30 is refined into CE [52] 
* CE 29 is refined into CE [53] 
* CE 28 is refined into CE [54] 
* CE 27 is refined into CE [55] 
* CE 26 is refined into CE [56] 
* CE 25 is refined into CE [57] 
* CE 24 is refined into CE [58] 
* CE 23 is refined into CE [59] 
* CE 22 is refined into CE [60] 


#### Refined cost equations loop_cont_eval_tty_filter_bb2_in/2 
* CE 52: loop_cont_eval_tty_filter_bb2_in(B,A) = 0
     [B=10] 
* CE 53: loop_cont_eval_tty_filter_bb2_in(B,A) = 0
     [B=9] 
* CE 54: loop_cont_eval_tty_filter_bb2_in(B,A) = 0
     [B=8] 
* CE 55: loop_cont_eval_tty_filter_bb2_in(B,A) = 0+ eval_tty_filter_bb7_in(A):1
     [B=7] 
* CE 56: loop_cont_eval_tty_filter_bb2_in(B,A) = 0+ eval_tty_filter_3(A):1
     [B=6] 
* CE 57: loop_cont_eval_tty_filter_bb2_in(B,A) = 0
     [B=5] 
* CE 58: loop_cont_eval_tty_filter_bb2_in(B,A) = 0
     [B=4] 
* CE 59: loop_cont_eval_tty_filter_bb2_in(B,A) = 0
     [B=3] 
* CE 60: loop_cont_eval_tty_filter_bb2_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_tty_filter_bb2_in/2 
* CEs [52] --> Loop 46 
* CEs [53] --> Loop 47 
* CEs [54] --> Loop 48 
* CEs [55] --> Loop 49 
* CEs [56] --> Loop 50 
* CEs [57] --> Loop 51 
* CEs [58] --> Loop 52 
* CEs [59] --> Loop 53 
* CEs [60] --> Loop 54 

#### Loops of loop_cont_eval_tty_filter_bb2_in/2 
* Loop 46: loop_cont_eval_tty_filter_bb2_in(B,A) [B=10] 
* Loop 47: loop_cont_eval_tty_filter_bb2_in(B,A) [B=9] 
* Loop 48: loop_cont_eval_tty_filter_bb2_in(B,A) [B=8] 
* Loop 49: loop_cont_eval_tty_filter_bb2_in(B,A) [B=7] 
* Loop 50: loop_cont_eval_tty_filter_bb2_in(B,A) [B=6] 
* Loop 51: loop_cont_eval_tty_filter_bb2_in(B,A) [B=5] 
* Loop 52: loop_cont_eval_tty_filter_bb2_in(B,A) [B=4] 
* Loop 53: loop_cont_eval_tty_filter_bb2_in(B,A) [B=3] 
* Loop 54: loop_cont_eval_tty_filter_bb2_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_tty_filter_bb2_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_tty_filter_bb2_in(B,A) 


### Resulting Chains:loop_cont_eval_tty_filter_bb2_in(B,A) 
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]


### Merging Chains  loop_cont_eval_tty_filter_bb2_in/2 into  External patterns of execution 
* [[54]] --> 1 
* [[53]] --> 2 
* [[52]] --> 3 
* [[51]] --> 4 
* [[50]] --> 5 
* [[49]] --> 6 
* [[48]] --> 7 
* [[47]] --> 8 
* [[46]] --> 9 


### Specialization of cost equations eval_tty_filter_1/2 
* CE 3 is refined into CE [61] 
* CE 4 is refined into CE [62,63,64,65,66,67,68,69,70,71] 


#### Refined cost equations eval_tty_filter_1/2 
* CE 61: eval_tty_filter_1(V_1,B) = 0
     [] 
* CE 62: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):1+ loop_cont_eval_tty_filter_bb2_in(D,B):1
     [D=2,C=2] 
* CE 63: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):2+ loop_cont_eval_tty_filter_bb2_in(D,B):2
     [D=3,C=3] 
* CE 64: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):3+ loop_cont_eval_tty_filter_bb2_in(D,B):3
     [D=4,C=4] 
* CE 65: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):4+ loop_cont_eval_tty_filter_bb2_in(D,B):4
     [D=5,C=5] 
* CE 66: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):5+ loop_cont_eval_tty_filter_bb2_in(D,B):5
     [D=6,C=6] 
* CE 67: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):6+ loop_cont_eval_tty_filter_bb2_in(D,B):6
     [D=7,C=7] 
* CE 68: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):7+ loop_cont_eval_tty_filter_bb2_in(D,B):7
     [D=8,C=8] 
* CE 69: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):8+ loop_cont_eval_tty_filter_bb2_in(D,B):8
     [D=9,C=9] 
* CE 70: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):9+ loop_cont_eval_tty_filter_bb2_in(D,B):9
     [D=10,C=10] 
* CE 71: eval_tty_filter_1(V_1,B) = 1+ eval_tty_filter_bb2_in(V_1,C):10
     [] 

### Cost equations --> "Loop" of eval_tty_filter_1/2 
* CEs [71] --> Loop 55 
* CEs [61,62,63,64,65,66,67,68,69,70] --> Loop 56 

#### Loops of eval_tty_filter_1/2 
* Loop 55: eval_tty_filter_1(V_1,B) [] 
* Loop 56: eval_tty_filter_1(V_1,B) [] 

### Ranking functions of CR eval_tty_filter_1(V_1,B) 

#### Partial ranking functions of CR eval_tty_filter_1(V_1,B) 


### Resulting Chains:eval_tty_filter_1(V_1,B) 
* [56]
* [55]...


### Merging Chains  eval_tty_filter_1/2 into  External patterns of execution 
* [[56]] --> 1 
* [[55]] --> 2 


### Specialization of cost equations eval_tty_filter_start/1 
* CE 2 is refined into CE [72,73] 


#### Refined cost equations eval_tty_filter_start/1 
* CE 72: eval_tty_filter_start(B) = 0+ eval_tty_filter_1(C,B):1
     [] 
* CE 73: eval_tty_filter_start(B) = 0+ eval_tty_filter_1(C,B):2
     [] 

### Cost equations --> "Loop" of eval_tty_filter_start/1 
* CEs [73] --> Loop 57 
* CEs [72] --> Loop 58 

#### Loops of eval_tty_filter_start/1 
* Loop 57: eval_tty_filter_start(B) [] 
* Loop 58: eval_tty_filter_start(B) [] 

### Ranking functions of CR eval_tty_filter_start(B) 

#### Partial ranking functions of CR eval_tty_filter_start(B) 


### Resulting Chains:eval_tty_filter_start(B) 
* [58]
* [57]...


### Merging Chains  eval_tty_filter_start/1 into  External patterns of execution 
* [[58]] --> 1 
* [[57]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [29,30,31,32,33,34] 

 * loop 29:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
1
 * loop 30:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
1
 * loop 31:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
1
 * loop 32:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
1
 * loop 33:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
1
 * loop 34:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
1
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of phase [29,30,31,32,33,34]:eval_tty_filter_bb2_in(V_command_0,B) -> [eval_tty_filter_bb2_in(V_command_0',B')] 
6*it(29)+0
#### Cost of chains of eval_tty_filter_bb2_in(V_command_0,B):
* Chain [[29,30,31,32,33,34]]...: 6*it(29)+0
  with precondition: [] 

* Chain [[29,30,31,32,33,34],43]: 6*it(29)+0
  with precondition: [B=2] 

* Chain [[29,30,31,32,33,34],42]: 6*it(29)+0
  with precondition: [B=3] 

* Chain [[29,30,31,32,33,34],41]: 6*it(29)+0
  with precondition: [B=4] 

* Chain [[29,30,31,32,33,34],40]: 6*it(29)+0
  with precondition: [B=5] 

* Chain [[29,30,31,32,33,34],39]: 6*it(29)+0
  with precondition: [B=6] 

* Chain [[29,30,31,32,33,34],38]: 6*it(29)+0
  with precondition: [B=7] 

* Chain [[29,30,31,32,33,34],37]: 6*it(29)+0
  with precondition: [B=8] 

* Chain [[29,30,31,32,33,34],36]: 6*it(29)+0
  with precondition: [B=9] 

* Chain [[29,30,31,32,33,34],35]: 6*it(29)+0
  with precondition: [B=10] 

* Chain [43]: 0
  with precondition: [B=2] 

* Chain [42]: 0
  with precondition: [B=3] 

* Chain [41]: 0
  with precondition: [B=4] 

* Chain [40]: 0
  with precondition: [B=5] 

* Chain [39]: 0
  with precondition: [B=6] 

* Chain [38]: 0
  with precondition: [B=7] 

* Chain [37]: 0
  with precondition: [B=8] 

* Chain [36]: 0
  with precondition: [B=9] 

* Chain [35]: 0
  with precondition: [B=10] 


#### Cost of chains of eval_tty_filter_3(B):
* Chain [44]: 0
  with precondition: [] 


#### Cost of chains of eval_tty_filter_bb7_in(B):
* Chain [45]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_tty_filter_bb2_in(B,A):
* Chain [54]: 0
  with precondition: [B=2] 

* Chain [53]: 0
  with precondition: [B=3] 

* Chain [52]: 0
  with precondition: [B=4] 

* Chain [51]: 0
  with precondition: [B=5] 

* Chain [50]: 0
  with precondition: [B=6] 

* Chain [49]: 0
  with precondition: [B=7] 

* Chain [48]: 0
  with precondition: [B=8] 

* Chain [47]: 0
  with precondition: [B=9] 

* Chain [46]: 0
  with precondition: [B=10] 


#### Cost of chains of eval_tty_filter_1(V_1,B):
* Chain [56]: 1*aux(10)+0
  with precondition: [] 

* Chain [55]...: 6*s(19)+1
  with precondition: [] 


#### Cost of chains of eval_tty_filter_start(B):
* Chain [58]: 1*s(20)+0
  with precondition: [] 

* Chain [57]...: 6*s(21)+1
  with precondition: [] 


Closed-form bounds of eval_tty_filter_start(B): 
-------------------------------------
* Chain [58] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [57]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_tty_filter_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 122 ms.
* Invariants computed in 83 ms.
   - Backward Invariants 61 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 149 ms.
* Termination proved in 17 ms.
* Upper bounds computed in 80 ms.
   - Equation cost structures 35 ms.
   - Phase cost structures 23 ms.
   - Chain cost structures 20 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 543 ms.

