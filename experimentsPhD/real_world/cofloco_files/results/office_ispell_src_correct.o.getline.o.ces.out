Warning: Ignored call to eval_getline_stop/1 in equation eval_getline_bb3_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_getline_23/6,eval_getline_24/6,eval_getline_25/6,eval_getline_26/6,eval_getline_bb9_in/6]
1. recursive  : [eval_getline_0/3,eval_getline_1/3,eval_getline_10/5,eval_getline_11/5,eval_getline_12/5,eval_getline_17/4,eval_getline_18/4,eval_getline_19/4,eval_getline_2/3,eval_getline_20/4,eval_getline_29/4,eval_getline_30/4,eval_getline_6/4,eval_getline_7/4,eval_getline_8/4,eval_getline_9/4,eval_getline_NewDefault_in/4,eval_getline_bb1_in/3,loop_cont_eval_getline_bb9_in/4]
2. non_recursive  : [eval_getline_bb3_in/1]
3. non_recursive  : [eval_getline_bb2_in/1]
4. non_recursive  : [loop_cont_eval_getline_bb1_in/2]
5. non_recursive  : [eval_getline_bb0_in/3]
6. non_recursive  : [eval_getline_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_getline_bb9_in/6
1. SCC is partially evaluated into eval_getline_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_getline_bb1_in/2
5. SCC is partially evaluated into eval_getline_bb0_in/3
6. SCC is partially evaluated into eval_getline_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_getline_bb9_in/6 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 


#### Refined cost equations eval_getline_bb9_in/6 
* CE 12: eval_getline_bb9_in(A,B,C,D,A,B) = 0
     [D=2] 
* CE 13: eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B,C,D) = 1+ eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,E,C,D)
     [E=2,B=2] 

### Cost equations --> "Loop" of eval_getline_bb9_in/6 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_getline_bb9_in/6 
* Loop 10: eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B,C,D)->  eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B',C,D)
                  [B'=2,B=2] 
* Loop 11: eval_getline_bb9_in(A,B,C,D,A,B) [D=2] 

### Ranking functions of CR eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B,C,D) 

#### Partial ranking functions of CR eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B,C,D) 


### Resulting Chains:eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B,C,D) 
* [[10]]...
* [[10],11]
* [11]


### Merging Chains  eval_getline_bb9_in/6 into  External patterns of execution 
* [[11],[11,[10]]] --> 1 
* [[[10]]] --> 2 


### Specialization of cost equations eval_getline_bb1_in/3 
* CE 6 is refined into CE [14,15] 
* CE 7 is refined into CE [16] 
* CE 4 is refined into CE [17] 
* CE 5 is refined into CE [18] 


#### Refined cost equations eval_getline_bb1_in/3 
* CE 14: eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) = 2+ eval_getline_bb9_in(V__uerasechar,V__ukillchar,C,D,V__uerasechar,V__ukillchar):1+ eval_getline_bb1_in(V__uerasechar,V__ukillchar,B)
     [D=2] 
* CE 15: eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) = 2+ eval_getline_bb9_in(V__uerasechar,V__ukillchar,C,D,E,F):2
     [D=2] 
* CE 16: eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) = 1+ eval_getline_bb1_in(C,D,B)
     [] 
* CE 17: eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) = 0
     [B=4] 
* CE 18: eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) = 0
     [B=3] 

### Cost equations --> "Loop" of eval_getline_bb1_in/3 
* CEs [17] --> Loop 12 
* CEs [18] --> Loop 13 
* CEs [14,16] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_getline_bb1_in/3 
* Loop 12: eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) [B=4] 
* Loop 13: eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) [B=3] 
* Loop 14: eval_getline_bb1_in(V__uerasechar,V__ukillchar,B)->  eval_getline_bb1_in(V__uerasechar',V__ukillchar',B)
                  [] 
* Loop 15: eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) [] 

### Ranking functions of CR eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) 

#### Partial ranking functions of CR eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) 


### Resulting Chains:eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) 
* [[14]]...
* [[14],15]...
* [[14],13]
* [[14],12]
* [15]...
* [13]
* [12]


### Merging Chains  eval_getline_bb1_in/3 into  External patterns of execution 
* [[13],[13,[14]]] --> 1 
* [[12],[12,[14]]] --> 2 
* [[15],[[14]],[15,[14]]] --> 3 


### Specialization of cost equations loop_cont_eval_getline_bb1_in/2 
* CE 9 is refined into CE [19] 
* CE 8 is refined into CE [20] 


#### Refined cost equations loop_cont_eval_getline_bb1_in/2 
* CE 19: loop_cont_eval_getline_bb1_in(B,A) = 0
     [B=4] 
* CE 20: loop_cont_eval_getline_bb1_in(B,A) = 0
     [B=3] 

### Cost equations --> "Loop" of loop_cont_eval_getline_bb1_in/2 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of loop_cont_eval_getline_bb1_in/2 
* Loop 16: loop_cont_eval_getline_bb1_in(B,A) [B=4] 
* Loop 17: loop_cont_eval_getline_bb1_in(B,A) [B=3] 

### Ranking functions of CR loop_cont_eval_getline_bb1_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_getline_bb1_in(B,A) 


### Resulting Chains:loop_cont_eval_getline_bb1_in(B,A) 
* [17]
* [16]


### Merging Chains  loop_cont_eval_getline_bb1_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_getline_bb0_in/3 
* CE 3 is refined into CE [21,22,23] 


#### Refined cost equations eval_getline_bb0_in/3 
* CE 21: eval_getline_bb0_in(V__uerasechar,V__ukillchar,B) = 1+ eval_getline_bb1_in(V__uerasechar,V__ukillchar,C):1+ loop_cont_eval_getline_bb1_in(D,B):1
     [D=3,C=3] 
* CE 22: eval_getline_bb0_in(V__uerasechar,V__ukillchar,B) = 1+ eval_getline_bb1_in(V__uerasechar,V__ukillchar,C):2+ loop_cont_eval_getline_bb1_in(D,B):2
     [D=4,C=4] 
* CE 23: eval_getline_bb0_in(V__uerasechar,V__ukillchar,B) = 1+ eval_getline_bb1_in(V__uerasechar,V__ukillchar,C):3
     [] 

### Cost equations --> "Loop" of eval_getline_bb0_in/3 
* CEs [23] --> Loop 18 
* CEs [21,22] --> Loop 19 

#### Loops of eval_getline_bb0_in/3 
* Loop 18: eval_getline_bb0_in(V__uerasechar,V__ukillchar,B) [] 
* Loop 19: eval_getline_bb0_in(V__uerasechar,V__ukillchar,B) [] 

### Ranking functions of CR eval_getline_bb0_in(V__uerasechar,V__ukillchar,B) 

#### Partial ranking functions of CR eval_getline_bb0_in(V__uerasechar,V__ukillchar,B) 


### Resulting Chains:eval_getline_bb0_in(V__uerasechar,V__ukillchar,B) 
* [19]
* [18]...


### Merging Chains  eval_getline_bb0_in/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_getline_start/3 
* CE 2 is refined into CE [24,25] 


#### Refined cost equations eval_getline_start/3 
* CE 24: eval_getline_start(V__uerasechar,V__ukillchar,B) = 0+ eval_getline_bb0_in(V__uerasechar,V__ukillchar,B):1
     [] 
* CE 25: eval_getline_start(V__uerasechar,V__ukillchar,B) = 0+ eval_getline_bb0_in(V__uerasechar,V__ukillchar,B):2
     [] 

### Cost equations --> "Loop" of eval_getline_start/3 
* CEs [25] --> Loop 20 
* CEs [24] --> Loop 21 

#### Loops of eval_getline_start/3 
* Loop 20: eval_getline_start(V__uerasechar,V__ukillchar,B) [] 
* Loop 21: eval_getline_start(V__uerasechar,V__ukillchar,B) [] 

### Ranking functions of CR eval_getline_start(V__uerasechar,V__ukillchar,B) 

#### Partial ranking functions of CR eval_getline_start(V__uerasechar,V__ukillchar,B) 


### Resulting Chains:eval_getline_start(V__uerasechar,V__ukillchar,B) 
* [21]
* [20]...


### Merging Chains  eval_getline_start/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B,C,D) -> [eval_getline_bb9_in(V__uerasechar',V__ukillchar',V_3',B',C',D')] 
1
#### Cost of phase [10]:eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B,C,D) -> [eval_getline_bb9_in(V__uerasechar',V__ukillchar',V_3',B',C',D')] 
1*it(10)+0
#### Cost of phase [10]:eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B,C,D) -> [eval_getline_bb9_in(V__uerasechar',V__ukillchar',V_3',B',C',D')] 
1*it(10)+0
#### Cost of chains of eval_getline_bb9_in(V__uerasechar,V__ukillchar,V_3,B,C,D):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [B=2] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=2,V__uerasechar=C,V__ukillchar=D] 

* Chain [11]: 0
  with precondition: [B=2,C=V__uerasechar,D=V__ukillchar] 


#### Cost of loops [14] 

 * loop 14:eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) -> [eval_getline_bb1_in(V__uerasechar',V__ukillchar',B')] 
1*s(3)+0
#### Cost of phase [14]:eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) -> [eval_getline_bb1_in(V__uerasechar',V__ukillchar',B')] 
1*s(4)+0
#### Cost of phase [14]:eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) -> [eval_getline_bb1_in(V__uerasechar',V__ukillchar',B')] 
1*s(4)+0
#### Cost of phase [14]:eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) -> [eval_getline_bb1_in(V__uerasechar',V__ukillchar',B')] 
1*s(4)+0
#### Cost of phase [14]:eval_getline_bb1_in(V__uerasechar,V__ukillchar,B) -> [eval_getline_bb1_in(V__uerasechar',V__ukillchar',B')] 
1*s(4)+0
#### Cost of chains of eval_getline_bb1_in(V__uerasechar,V__ukillchar,B):
* Chain [[14]]...: 1*s(4)+0
  with precondition: [] 

* Chain [[14],15]...: 2*s(4)+2
  with precondition: [] 

* Chain [[14],13]: 1*s(4)+0
  with precondition: [B=3] 

* Chain [[14],12]: 1*s(4)+0
  with precondition: [B=4] 

* Chain [15]...: 1*s(5)+2
  with precondition: [] 

* Chain [13]: 0
  with precondition: [B=3] 

* Chain [12]: 0
  with precondition: [B=4] 


#### Cost of chains of loop_cont_eval_getline_bb1_in(B,A):
* Chain [17]: 0
  with precondition: [B=3] 

* Chain [16]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_getline_bb0_in(V__uerasechar,V__ukillchar,B):
* Chain [19]: 1*aux(6)+0
  with precondition: [] 

* Chain [18]...: 1*s(13)+1
  with precondition: [] 


#### Cost of chains of eval_getline_start(V__uerasechar,V__ukillchar,B):
* Chain [21]: 1*s(14)+0
  with precondition: [] 

* Chain [20]...: 1*s(15)+1
  with precondition: [] 


Closed-form bounds of eval_getline_start(V__uerasechar,V__ukillchar,B): 
-------------------------------------
* Chain [21] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [20]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_getline_start(V__uerasechar,V__ukillchar,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 18 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 15 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 95 ms.

