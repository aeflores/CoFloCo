Warning: Ignored call to eval_emit_eobrun_stop/1 in equation eval_emit_eobrun_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_emit_eobrun_bb2_in/5]
1. non_recursive  : [eval_emit_eobrun_bb7_in/1]
2. non_recursive  : [eval_emit_eobrun_18/1]
3. non_recursive  : [eval_emit_eobrun_17/2]
4. non_recursive  : [eval_emit_eobrun_bb6_in/1]
5. non_recursive  : [eval_emit_eobrun_14/1]
6. non_recursive  : [eval_emit_eobrun_13/3]
7. non_recursive  : [eval_emit_eobrun_11/2]
8. non_recursive  : [eval_emit_eobrun_10/4]
9. non_recursive  : [loop_cont_eval_emit_eobrun_bb2_in/5]
10. non_recursive  : [eval_emit_eobrun_bb0_in/1]
11. non_recursive  : [eval_emit_eobrun_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_emit_eobrun_bb2_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_emit_eobrun_11/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_emit_eobrun_bb0_in/1
11. SCC is partially evaluated into eval_emit_eobrun_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_emit_eobrun_bb2_in/5 
* CE 6 is refined into CE [8] 
* CE 5 is refined into CE [9] 


#### Refined cost equations eval_emit_eobrun_bb2_in/5 
* CE 8: eval_emit_eobrun_bb2_in(A,B,A,C,D) = 0
     [A>=0,B=2] 
* CE 9: eval_emit_eobrun_bb2_in(V_nbits_0,B,C,D,E) = 1+ eval_emit_eobrun_bb2_in(F,G,C,D,E)
     [V_nbits_0>=0,V_nbits_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_emit_eobrun_bb2_in/5 
* CEs [9] --> Loop 6 
* CEs [8] --> Loop 7 

#### Loops of eval_emit_eobrun_bb2_in/5 
* Loop 6: eval_emit_eobrun_bb2_in(V_nbits_0,B,C,D,E)->  eval_emit_eobrun_bb2_in(V_nbits_0',B',C,D,E)
                  [V_nbits_0>=0,V_nbits_0+1=V_nbits_0',B'=2,B=2] 
* Loop 7: eval_emit_eobrun_bb2_in(A,B,A,C,D) [A>=0,B=2] 

### Ranking functions of CR eval_emit_eobrun_bb2_in(V_nbits_0,B,C,D,E) 

#### Partial ranking functions of CR eval_emit_eobrun_bb2_in(V_nbits_0,B,C,D,E) 


### Resulting Chains:eval_emit_eobrun_bb2_in(V_nbits_0,B,C,D,E) 
* [[6]]...
* [[6],7]
* [7]


### Merging Chains  eval_emit_eobrun_bb2_in/5 into  External patterns of execution 
* [[7]] --> 1 
* [[7,[6]]] --> 2 
* [[[6]]] --> 3 


### Specialization of cost equations eval_emit_eobrun_11/2 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_emit_eobrun_11/2 
* CE 10: eval_emit_eobrun_11(V_nbits_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_emit_eobrun_11/2 
* CEs [10] --> Loop 8 

#### Loops of eval_emit_eobrun_11/2 
* Loop 8: eval_emit_eobrun_11(V_nbits_0,B) [] 

### Ranking functions of CR eval_emit_eobrun_11(V_nbits_0,B) 

#### Partial ranking functions of CR eval_emit_eobrun_11(V_nbits_0,B) 


### Resulting Chains:eval_emit_eobrun_11(V_nbits_0,B) 
* [8]


### Merging Chains  eval_emit_eobrun_11/2 into  External patterns of execution 
* [[8]] --> 1 


### Specialization of cost equations eval_emit_eobrun_bb0_in/1 
* CE 3 is refined into CE [11,12,13] 
* CE 4 is refined into CE [14] 


#### Refined cost equations eval_emit_eobrun_bb0_in/1 
* CE 11: eval_emit_eobrun_bb0_in(B) = 1+ eval_emit_eobrun_bb2_in(C,D,E,F,G):1+ eval_emit_eobrun_11(H,B):1
     [H=0,E=0,D=2,C=0] 
* CE 12: eval_emit_eobrun_bb0_in(B) = 1+ eval_emit_eobrun_bb2_in(C,D,E,F,G):2+ eval_emit_eobrun_11(E,B):1
     [E>=1,D=2,C=0] 
* CE 13: eval_emit_eobrun_bb0_in(B) = 1+ eval_emit_eobrun_bb2_in(C,D,E,F,G):3
     [D=2,C=0] 
* CE 14: eval_emit_eobrun_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_emit_eobrun_bb0_in/1 
* CEs [11,12,14] --> Loop 9 
* CEs [13] --> Loop 10 

#### Loops of eval_emit_eobrun_bb0_in/1 
* Loop 9: eval_emit_eobrun_bb0_in(B) [] 
* Loop 10: eval_emit_eobrun_bb0_in(B) [] 

### Ranking functions of CR eval_emit_eobrun_bb0_in(B) 

#### Partial ranking functions of CR eval_emit_eobrun_bb0_in(B) 


### Resulting Chains:eval_emit_eobrun_bb0_in(B) 
* [10]...
* [9]


### Merging Chains  eval_emit_eobrun_bb0_in/1 into  External patterns of execution 
* [[9]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_emit_eobrun_start/1 
* CE 2 is refined into CE [15,16] 


#### Refined cost equations eval_emit_eobrun_start/1 
* CE 15: eval_emit_eobrun_start(B) = 0+ eval_emit_eobrun_bb0_in(B):1
     [] 
* CE 16: eval_emit_eobrun_start(B) = 0+ eval_emit_eobrun_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_emit_eobrun_start/1 
* CEs [16] --> Loop 11 
* CEs [15] --> Loop 12 

#### Loops of eval_emit_eobrun_start/1 
* Loop 11: eval_emit_eobrun_start(B) [] 
* Loop 12: eval_emit_eobrun_start(B) [] 

### Ranking functions of CR eval_emit_eobrun_start(B) 

#### Partial ranking functions of CR eval_emit_eobrun_start(B) 


### Resulting Chains:eval_emit_eobrun_start(B) 
* [12]
* [11]...


### Merging Chains  eval_emit_eobrun_start/1 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_emit_eobrun_bb2_in(V_nbits_0,B,C,D,E) -> [eval_emit_eobrun_bb2_in(V_nbits_0',B',C',D',E')] 
1
#### Cost of phase [6]:eval_emit_eobrun_bb2_in(V_nbits_0,B,C,D,E) -> [eval_emit_eobrun_bb2_in(V_nbits_0',B',C',D',E')] 
1*it(6)+0
#### Cost of phase [6]:eval_emit_eobrun_bb2_in(V_nbits_0,B,C,D,E) -> [eval_emit_eobrun_bb2_in(V_nbits_0',B',C',D',E')] 
1*it(6)+0
#### Cost of chains of eval_emit_eobrun_bb2_in(V_nbits_0,B,C,D,E):
* Chain [[6]]...: 1*it(6)+0
  with precondition: [V_nbits_0>=0,B=2] 

* Chain [[6],7]: 1*it(6)+0
  with precondition: [B=2,V_nbits_0>=0,C>=V_nbits_0+1] 

* Chain [7]: 0
  with precondition: [B=2,V_nbits_0=C,V_nbits_0>=0] 


#### Cost of chains of eval_emit_eobrun_11(V_nbits_0,B):
* Chain [8]: 0
  with precondition: [] 


#### Cost of chains of eval_emit_eobrun_bb0_in(B):
* Chain [10]...: 1*s(1)+1
  with precondition: [] 

* Chain [9]: 1*aux(1)+0
  with precondition: [] 


#### Cost of chains of eval_emit_eobrun_start(B):
* Chain [12]: 1*s(3)+0
  with precondition: [] 

* Chain [11]...: 1*s(4)+1
  with precondition: [] 


Closed-form bounds of eval_emit_eobrun_start(B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_emit_eobrun_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 33 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 138 ms.

