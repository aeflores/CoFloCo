Warning: Ignored call to eval_processConfigLine_stop/1 in equation eval_processConfigLine_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_processConfigLine_bb1_in/7]
1. non_recursive  : [eval_processConfigLine_bb11_in/1]
2. non_recursive  : [eval_processConfigLine_bb10_in/1]
3. non_recursive  : [eval_processConfigLine_32/1]
4. non_recursive  : [eval_processConfigLine_31/5]
5. non_recursive  : [eval_processConfigLine_40/1]
6. non_recursive  : [eval_processConfigLine_39/5]
7. non_recursive  : [eval_processConfigLine_38/5]
8. non_recursive  : [eval_processConfigLine_37/6]
9. non_recursive  : [eval_processConfigLine_bb8_in/5]
10. non_recursive  : [eval_processConfigLine_21/5]
11. non_recursive  : [eval_processConfigLine_20/5]
12. non_recursive  : [eval_processConfigLine_bb4_in/4]
13. non_recursive  : [loop_cont_eval_processConfigLine_bb1_in/5]
14. non_recursive  : [eval_processConfigLine_bb0_in/4]
15. non_recursive  : [eval_processConfigLine_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_processConfigLine_bb1_in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_processConfigLine_38/5
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_processConfigLine_21/5
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_processConfigLine_bb0_in/4
15. SCC is partially evaluated into eval_processConfigLine_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_processConfigLine_bb1_in/7 
* CE 5 is refined into CE [9] 
* CE 4 is refined into CE [10] 


#### Refined cost equations eval_processConfigLine_bb1_in/7 
* CE 9: eval_processConfigLine_bb1_in(A,B,C,D,E,F,C) = 0
     [F=0,E=0,D=2,B=0,A=0] 
* CE 10: eval_processConfigLine_bb1_in(V__line,V__errCount,V__value,B,C,D,E) = 1+ eval_processConfigLine_bb1_in(F,G,V__value,H,C,D,E)
     [H=2,G=0,F=0,B=2,V__errCount=0,V__line=0] 

### Cost equations --> "Loop" of eval_processConfigLine_bb1_in/7 
* CEs [10] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_processConfigLine_bb1_in/7 
* Loop 7: eval_processConfigLine_bb1_in(V__line,V__errCount,V__value,B,C,D,E)->  eval_processConfigLine_bb1_in(V__line',V__errCount',V__value,B',C,D,E)
                  [B'=2,V__errCount'=0,V__line'=0,B=2,V__errCount=0,V__line=0] 
* Loop 8: eval_processConfigLine_bb1_in(A,B,C,D,E,F,C) [F=0,E=0,D=2,B=0,A=0] 

### Ranking functions of CR eval_processConfigLine_bb1_in(V__line,V__errCount,V__value,B,C,D,E) 

#### Partial ranking functions of CR eval_processConfigLine_bb1_in(V__line,V__errCount,V__value,B,C,D,E) 


### Resulting Chains:eval_processConfigLine_bb1_in(V__line,V__errCount,V__value,B,C,D,E) 
* [[7]]...
* [[7],8]
* [8]


### Merging Chains  eval_processConfigLine_bb1_in/7 into  External patterns of execution 
* [[8],[8,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_processConfigLine_38/5 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_processConfigLine_38/5 
* CE 11: eval_processConfigLine_38(V__line,V__errCount,V__value,V_19,B) = 0
     [] 

### Cost equations --> "Loop" of eval_processConfigLine_38/5 
* CEs [11] --> Loop 9 

#### Loops of eval_processConfigLine_38/5 
* Loop 9: eval_processConfigLine_38(V__line,V__errCount,V__value,V_19,B) [] 

### Ranking functions of CR eval_processConfigLine_38(V__line,V__errCount,V__value,V_19,B) 

#### Partial ranking functions of CR eval_processConfigLine_38(V__line,V__errCount,V__value,V_19,B) 


### Resulting Chains:eval_processConfigLine_38(V__line,V__errCount,V__value,V_19,B) 
* [9]


### Merging Chains  eval_processConfigLine_38/5 into  External patterns of execution 
* [[9]] --> 1 


### Specialization of cost equations eval_processConfigLine_21/5 
* CE 6 is refined into CE [12] 
* CE 7 is refined into CE [13] 


#### Refined cost equations eval_processConfigLine_21/5 
* CE 12: eval_processConfigLine_21(V__line,V__errCount,V__value,V_19,B) = 0
     [] 
* CE 13: eval_processConfigLine_21(V__line,V__errCount,V__value,V_19,B) = 0+ eval_processConfigLine_38(V__line,V__errCount,V__value,V_19,B):1
     [] 

### Cost equations --> "Loop" of eval_processConfigLine_21/5 
* CEs [12,13] --> Loop 10 

#### Loops of eval_processConfigLine_21/5 
* Loop 10: eval_processConfigLine_21(V__line,V__errCount,V__value,V_19,B) [] 

### Ranking functions of CR eval_processConfigLine_21(V__line,V__errCount,V__value,V_19,B) 

#### Partial ranking functions of CR eval_processConfigLine_21(V__line,V__errCount,V__value,V_19,B) 


### Resulting Chains:eval_processConfigLine_21(V__line,V__errCount,V__value,V_19,B) 
* [10]


### Merging Chains  eval_processConfigLine_21/5 into  External patterns of execution 
* [[10]] --> 1 


### Specialization of cost equations eval_processConfigLine_bb0_in/4 
* CE 3 is refined into CE [14,15] 


#### Refined cost equations eval_processConfigLine_bb0_in/4 
* CE 14: eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B) = 1+ eval_processConfigLine_bb1_in(C,D,V__value,E,F,G,V__value):1+ eval_processConfigLine_21(H,I,V__value,J,B):1
     [I=0,H=0,G=0,F=0,E=2,D=0,C=0] 
* CE 15: eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B) = 1+ eval_processConfigLine_bb1_in(C,D,V__value,E,F,G,H):2
     [E=2,D=0,C=0] 

### Cost equations --> "Loop" of eval_processConfigLine_bb0_in/4 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_processConfigLine_bb0_in/4 
* Loop 11: eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B) [] 
* Loop 12: eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B) [] 

### Ranking functions of CR eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B) 

#### Partial ranking functions of CR eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B) 


### Resulting Chains:eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B) 
* [12]
* [11]...


### Merging Chains  eval_processConfigLine_bb0_in/4 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_processConfigLine_start/4 
* CE 2 is refined into CE [16,17] 


#### Refined cost equations eval_processConfigLine_start/4 
* CE 16: eval_processConfigLine_start(V__line,V__errCount,V__value,B) = 0+ eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B):1
     [] 
* CE 17: eval_processConfigLine_start(V__line,V__errCount,V__value,B) = 0+ eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B):2
     [] 

### Cost equations --> "Loop" of eval_processConfigLine_start/4 
* CEs [17] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of eval_processConfigLine_start/4 
* Loop 13: eval_processConfigLine_start(V__line,V__errCount,V__value,B) [] 
* Loop 14: eval_processConfigLine_start(V__line,V__errCount,V__value,B) [] 

### Ranking functions of CR eval_processConfigLine_start(V__line,V__errCount,V__value,B) 

#### Partial ranking functions of CR eval_processConfigLine_start(V__line,V__errCount,V__value,B) 


### Resulting Chains:eval_processConfigLine_start(V__line,V__errCount,V__value,B) 
* [14]
* [13]...


### Merging Chains  eval_processConfigLine_start/4 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_processConfigLine_bb1_in(V__line,V__errCount,V__value,B,C,D,E) -> [eval_processConfigLine_bb1_in(V__line',V__errCount',V__value',B',C',D',E')] 
1
#### Cost of phase [7]:eval_processConfigLine_bb1_in(V__line,V__errCount,V__value,B,C,D,E) -> [eval_processConfigLine_bb1_in(V__line',V__errCount',V__value',B',C',D',E')] 
1*it(7)+0
#### Cost of phase [7]:eval_processConfigLine_bb1_in(V__line,V__errCount,V__value,B,C,D,E) -> [eval_processConfigLine_bb1_in(V__line',V__errCount',V__value',B',C',D',E')] 
1*it(7)+0
#### Cost of chains of eval_processConfigLine_bb1_in(V__line,V__errCount,V__value,B,C,D,E):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [V__line=0,V__errCount=0,B=2] 

* Chain [[7],8]: 1*it(7)+0
  with precondition: [V__line=0,V__errCount=0,B=2,C=0,D=0,V__value=E] 

* Chain [8]: 0
  with precondition: [V__line=0,V__errCount=0,B=2,C=0,D=0,E=V__value] 


#### Cost of chains of eval_processConfigLine_38(V__line,V__errCount,V__value,V_19,B):
* Chain [9]: 0
  with precondition: [] 


#### Cost of chains of eval_processConfigLine_21(V__line,V__errCount,V__value,V_19,B):
* Chain [10]: 0
  with precondition: [] 


#### Cost of chains of eval_processConfigLine_bb0_in(V__line,V__errCount,V__value,B):
* Chain [12]: 1*s(2)+1
  with precondition: [] 

* Chain [11]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_processConfigLine_start(V__line,V__errCount,V__value,B):
* Chain [14]: 1*s(4)+1
  with precondition: [] 

* Chain [13]...: 1*s(5)+1
  with precondition: [] 


Closed-form bounds of eval_processConfigLine_start(V__line,V__errCount,V__value,B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [13]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_processConfigLine_start(V__line,V__errCount,V__value,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 10 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 16 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 12 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 65 ms.

