Warning: Ignored call to eval_gs_call_interp_stop/1 in equation eval_gs_call_interp_bb42_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_gs_call_interp_12/3,eval_gs_call_interp_13/4,eval_gs_call_interp_bb2_in/3]
1. recursive  : [eval_gs_call_interp_100/5,eval_gs_call_interp_101/5,eval_gs_call_interp_103/5,eval_gs_call_interp_104/5,eval_gs_call_interp_105/5,eval_gs_call_interp_106/5,eval_gs_call_interp_107/5,eval_gs_call_interp_108/6,eval_gs_call_interp_110/7,eval_gs_call_interp_111/7,eval_gs_call_interp_112/7,eval_gs_call_interp_113/7,eval_gs_call_interp_114/7,eval_gs_call_interp_115/4,eval_gs_call_interp_116/4,eval_gs_call_interp_117/4,eval_gs_call_interp_118/4,eval_gs_call_interp_119/4,eval_gs_call_interp_120/4,eval_gs_call_interp_121/4,eval_gs_call_interp_122/4,eval_gs_call_interp_125/4,eval_gs_call_interp_126/4,eval_gs_call_interp_14/3,eval_gs_call_interp_15/4,eval_gs_call_interp_16/4,eval_gs_call_interp_21/4,eval_gs_call_interp_22/4,eval_gs_call_interp_27/4,eval_gs_call_interp_28/4,eval_gs_call_interp_29/4,eval_gs_call_interp_43/4,eval_gs_call_interp_44/4,eval_gs_call_interp_45/4,eval_gs_call_interp_46/4,eval_gs_call_interp_49/5,eval_gs_call_interp_50/5,eval_gs_call_interp_51/5,eval_gs_call_interp_52/5,eval_gs_call_interp_57/5,eval_gs_call_interp_58/5,eval_gs_call_interp_64/5,eval_gs_call_interp_65/5,eval_gs_call_interp_66/5,eval_gs_call_interp_67/6,eval_gs_call_interp_68/6,eval_gs_call_interp_69/6,eval_gs_call_interp_70/6,eval_gs_call_interp_71/4,eval_gs_call_interp_72/4,eval_gs_call_interp_73/4,eval_gs_call_interp_74/4,eval_gs_call_interp_75/4,eval_gs_call_interp_76/5,eval_gs_call_interp_85/6,eval_gs_call_interp_86/6,eval_gs_call_interp_88/5,eval_gs_call_interp_89/5,eval_gs_call_interp_90/4,eval_gs_call_interp_91/4,eval_gs_call_interp_92/4,eval_gs_call_interp_93/4,eval_gs_call_interp_94/4,eval_gs_call_interp_97/5,eval_gs_call_interp_98/5,eval_gs_call_interp_99/5,eval_gs_call_interp_NewDefault19_in/4,eval_gs_call_interp_NewDefault38_in/4,eval_gs_call_interp_NewDefault_in/4,eval_gs_call_interp_bb15_in/4,eval_gs_call_interp_bb1_in/3,eval_gs_call_interp_bb21_in/5,eval_gs_call_interp_bb26_in/4,eval_gs_call_interp_bb29_in/5,eval_gs_call_interp_bb36_in/5,eval_gs_call_interp_bb38_in/4,eval_gs_call_interp_bb6_in/4,loop_cont_eval_gs_call_interp_bb2_in/4]
2. non_recursive  : [eval_gs_call_interp_bb42_in/1]
3. non_recursive  : [eval_gs_call_interp_32/1]
4. non_recursive  : [eval_gs_call_interp_31/2]
5. non_recursive  : [loop_cont_eval_gs_call_interp_bb1_in/3]
6. non_recursive  : [eval_gs_call_interp_4/2]
7. non_recursive  : [eval_gs_call_interp_3/2]
8. non_recursive  : [eval_gs_call_interp_bb0_in/2]
9. non_recursive  : [eval_gs_call_interp_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_gs_call_interp_bb2_in/3
1. SCC is partially evaluated into eval_gs_call_interp_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_gs_call_interp_bb1_in/3
6. SCC is partially evaluated into eval_gs_call_interp_4/2
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_gs_call_interp_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gs_call_interp_bb2_in/3 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 


#### Refined cost equations eval_gs_call_interp_bb2_in/3 
* CE 13: eval_gs_call_interp_bb2_in(A,B,A) = 0
     [B=3] 
* CE 14: eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) = 0
     [B=2] 
* CE 15: eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) = 1+ eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C)
     [B>=2,3>=B] 

### Cost equations --> "Loop" of eval_gs_call_interp_bb2_in/3 
* CEs [15] --> Loop 11 
* CEs [13] --> Loop 12 
* CEs [14] --> Loop 13 

#### Loops of eval_gs_call_interp_bb2_in/3 
* Loop 11: eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C)->  eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C)
                  [B>=2,3>=B] 
* Loop 12: eval_gs_call_interp_bb2_in(A,B,A) [B=3] 
* Loop 13: eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) [B=2] 

### Ranking functions of CR eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) 

#### Partial ranking functions of CR eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) 


### Resulting Chains:eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) 
* [[11]]...
* [[11],13]
* [[11],12]
* [13]
* [12]


### Merging Chains  eval_gs_call_interp_bb2_in/3 into  External patterns of execution 
* [[13],[13,[11]]] --> 1 
* [[12],[12,[11]]] --> 2 
* [[[11]]] --> 3 


### Specialization of cost equations eval_gs_call_interp_bb1_in/3 
* CE 4 is refined into CE [16,17] 
* CE 5 is refined into CE [18,19] 
* CE 7 is refined into CE [20,21] 
* CE 6 is refined into CE [22,23] 


#### Refined cost equations eval_gs_call_interp_bb1_in/3 
* CE 16: eval_gs_call_interp_bb1_in(A,B,A) = 1+ eval_gs_call_interp_bb2_in(A,C,A):2
     [C=3,B=4] 
* CE 17: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) = 1+ eval_gs_call_interp_bb2_in(V__min_dstack_size,D,C):3
     [D=3,B=4] 
* CE 18: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) = 1+ eval_gs_call_interp_bb2_in(V__min_dstack_size,D,V__min_dstack_size):2
     [D=3,B=2] 
* CE 19: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) = 1+ eval_gs_call_interp_bb2_in(V__min_dstack_size,D,E):3
     [D=3,B=2] 
* CE 20: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) = 1+ eval_gs_call_interp_bb2_in(V__min_dstack_size,D,E):1
     [D=2,B=2] 
* CE 21: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) = 1+ eval_gs_call_interp_bb2_in(V__min_dstack_size,D,E):3
     [D=2,B=2] 
* CE 22: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) = 2+ eval_gs_call_interp_bb2_in(V__min_dstack_size,D,V__min_dstack_size):2+ eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C)
     [D=3] 
* CE 23: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) = 2+ eval_gs_call_interp_bb2_in(V__min_dstack_size,D,E):3
     [D=3] 

### Cost equations --> "Loop" of eval_gs_call_interp_bb1_in/3 
* CEs [17,19,21,23] --> Loop 14 
* CEs [22] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [18,20] --> Loop 17 

#### Loops of eval_gs_call_interp_bb1_in/3 
* Loop 14: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) [] 
* Loop 15: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C)->  eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C)
                  [] 
* Loop 16: eval_gs_call_interp_bb1_in(A,B,A) [B=4] 
* Loop 17: eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) [B=2] 

### Ranking functions of CR eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) 

#### Partial ranking functions of CR eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) 


### Resulting Chains:eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) 
* [[15]]...
* [[15],17]
* [[15],16]
* [[15],14]...
* [17]
* [16]
* [14]...


### Merging Chains  eval_gs_call_interp_bb1_in/3 into  External patterns of execution 
* [[17],[17,[15]]] --> 1 
* [[16],[16,[15]]] --> 2 
* [[14],[[15]],[14,[15]]] --> 3 


### Specialization of cost equations loop_cont_eval_gs_call_interp_bb1_in/3 
* CE 9 is refined into CE [24] 
* CE 8 is refined into CE [25] 


#### Refined cost equations loop_cont_eval_gs_call_interp_bb1_in/3 
* CE 24: loop_cont_eval_gs_call_interp_bb1_in(C,A,B) = 0
     [C=4] 
* CE 25: loop_cont_eval_gs_call_interp_bb1_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_gs_call_interp_bb1_in/3 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 

#### Loops of loop_cont_eval_gs_call_interp_bb1_in/3 
* Loop 18: loop_cont_eval_gs_call_interp_bb1_in(C,A,B) [C=4] 
* Loop 19: loop_cont_eval_gs_call_interp_bb1_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_gs_call_interp_bb1_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_gs_call_interp_bb1_in(C,A,B) 


### Resulting Chains:loop_cont_eval_gs_call_interp_bb1_in(C,A,B) 
* [19]
* [18]


### Merging Chains  loop_cont_eval_gs_call_interp_bb1_in/3 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_gs_call_interp_4/2 
* CE 3 is refined into CE [26,27,28] 


#### Refined cost equations eval_gs_call_interp_4/2 
* CE 26: eval_gs_call_interp_4(V__min_dstack_size,B) = 1+ eval_gs_call_interp_bb1_in(V__min_dstack_size,C,D):1+ loop_cont_eval_gs_call_interp_bb1_in(E,D,B):1
     [E=2,C=2] 
* CE 27: eval_gs_call_interp_4(V__min_dstack_size,B) = 1+ eval_gs_call_interp_bb1_in(V__min_dstack_size,C,V__min_dstack_size):2+ loop_cont_eval_gs_call_interp_bb1_in(D,V__min_dstack_size,B):2
     [D=4,C=4] 
* CE 28: eval_gs_call_interp_4(V__min_dstack_size,B) = 1+ eval_gs_call_interp_bb1_in(V__min_dstack_size,C,D):3
     [] 

### Cost equations --> "Loop" of eval_gs_call_interp_4/2 
* CEs [28] --> Loop 20 
* CEs [26,27] --> Loop 21 

#### Loops of eval_gs_call_interp_4/2 
* Loop 20: eval_gs_call_interp_4(V__min_dstack_size,B) [] 
* Loop 21: eval_gs_call_interp_4(V__min_dstack_size,B) [] 

### Ranking functions of CR eval_gs_call_interp_4(V__min_dstack_size,B) 

#### Partial ranking functions of CR eval_gs_call_interp_4(V__min_dstack_size,B) 


### Resulting Chains:eval_gs_call_interp_4(V__min_dstack_size,B) 
* [21]
* [20]...


### Merging Chains  eval_gs_call_interp_4/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_gs_call_interp_start/3 
* CE 2 is refined into CE [29,30] 


#### Refined cost equations eval_gs_call_interp_start/3 
* CE 29: eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B) = 0+ eval_gs_call_interp_4(C,B):1
     [] 
* CE 30: eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B) = 0+ eval_gs_call_interp_4(C,B):2
     [] 

### Cost equations --> "Loop" of eval_gs_call_interp_start/3 
* CEs [30] --> Loop 22 
* CEs [29] --> Loop 23 

#### Loops of eval_gs_call_interp_start/3 
* Loop 22: eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B) [] 
* Loop 23: eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B) [] 

### Ranking functions of CR eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B) 

#### Partial ranking functions of CR eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B) 


### Resulting Chains:eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B) 
* [23]
* [22]...


### Merging Chains  eval_gs_call_interp_start/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) -> [eval_gs_call_interp_bb2_in(V__min_dstack_size',B',C')] 
1
#### Cost of phase [11]:eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) -> [eval_gs_call_interp_bb2_in(V__min_dstack_size',B',C')] 
1*it(11)+0
#### Cost of phase [11]:eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) -> [eval_gs_call_interp_bb2_in(V__min_dstack_size',B',C')] 
1*it(11)+0
#### Cost of phase [11]:eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C) -> [eval_gs_call_interp_bb2_in(V__min_dstack_size',B',C')] 
1*it(11)+0
#### Cost of chains of eval_gs_call_interp_bb2_in(V__min_dstack_size,B,C):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [B>=2,3>=B] 

* Chain [[11],13]: 1*it(11)+0
  with precondition: [B=2] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=3,V__min_dstack_size=C] 

* Chain [13]: 0
  with precondition: [B=2] 

* Chain [12]: 0
  with precondition: [B=3,C=V__min_dstack_size] 


#### Cost of loops [15] 

 * loop 15:eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) -> [eval_gs_call_interp_bb1_in(V__min_dstack_size',B',C')] 
1*s(4)+2
#### Cost of phase [15]:eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) -> [eval_gs_call_interp_bb1_in(V__min_dstack_size',B',C')] 
3*it(15)+0
#### Cost of phase [15]:eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) -> [eval_gs_call_interp_bb1_in(V__min_dstack_size',B',C')] 
3*it(15)+0
#### Cost of phase [15]:eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) -> [eval_gs_call_interp_bb1_in(V__min_dstack_size',B',C')] 
3*it(15)+0
#### Cost of phase [15]:eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C) -> [eval_gs_call_interp_bb1_in(V__min_dstack_size',B',C')] 
3*it(15)+0
#### Cost of chains of eval_gs_call_interp_bb1_in(V__min_dstack_size,B,C):
* Chain [[15]]...: 3*it(15)+0
  with precondition: [] 

* Chain [[15],17]: 4*aux(3)+0
  with precondition: [B=2] 

* Chain [[15],16]: 4*it(15)+1
  with precondition: [B=4,V__min_dstack_size=C] 

* Chain [[15],14]...: 4*aux(4)+0
  with precondition: [] 

* Chain [17]: 1*aux(3)+0
  with precondition: [B=2] 

* Chain [16]: 1*s(8)+1
  with precondition: [B=4,C=V__min_dstack_size] 

* Chain [14]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_gs_call_interp_bb1_in(C,A,B):
* Chain [19]: 0
  with precondition: [C=2] 

* Chain [18]: 0
  with precondition: [C=4] 


#### Cost of chains of eval_gs_call_interp_4(V__min_dstack_size,B):
* Chain [21]: 1*aux(8)+0
  with precondition: [] 

* Chain [20]...: 1*s(22)+1
  with precondition: [] 


#### Cost of chains of eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B):
* Chain [23]: 1*s(23)+0
  with precondition: [] 

* Chain [22]...: 1*s(24)+1
  with precondition: [] 


Closed-form bounds of eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gs_call_interp_start(V_user_errors,V__min_dstack_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 82 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 22 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 18 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 205 ms.

