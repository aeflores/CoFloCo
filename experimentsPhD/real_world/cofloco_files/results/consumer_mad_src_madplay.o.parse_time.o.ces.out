Warning: Ignored call to eval_parse_time_stop/1 in equation eval_parse_time_bb27_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_parse_time_bb1_in/1]
1. recursive  : [eval_parse_time_20/5,eval_parse_time_21/6,eval_parse_time_bb6_in/5,eval_parse_time_bb9_in/7]
2. recursive  : [eval_parse_time_bb14_in/12]
3. recursive  : [eval_parse_time_40/4,eval_parse_time_41/4,eval_parse_time_45/4,eval_parse_time_46/5,eval_parse_time_54/4,eval_parse_time_55/4,eval_parse_time_56/7,eval_parse_time_57/7,eval_parse_time_58/7,eval_parse_time_59/7,eval_parse_time_62/9,eval_parse_time_63/9,eval_parse_time_NewDefault_in/1,eval_parse_time__critedge1_in/1,eval_parse_time__critedge_in/4,eval_parse_time_bb12_in/4,eval_parse_time_bb18_in/7,eval_parse_time_bb20_in/7,eval_parse_time_bb5_in/1,loop_cont_eval_parse_time_bb14_in/8,loop_cont_eval_parse_time_bb6_in/5]
4. recursive  : [eval_parse_time_bb23_in/1]
5. non_recursive  : [eval_parse_time_bb27_in/1]
6. non_recursive  : [eval_parse_time_84/1]
7. non_recursive  : [eval_parse_time_83/1]
8. non_recursive  : [loop_cont_eval_parse_time_bb23_in/2]
9. non_recursive  : [eval_parse_time_70/1]
10. non_recursive  : [eval_parse_time_69/1]
11. non_recursive  : [loop_cont_eval_parse_time__critedge1_in/2]
12. non_recursive  : [loop_cont_eval_parse_time_bb1_in/2]
13. non_recursive  : [eval_parse_time_3/1]
14. non_recursive  : [eval_parse_time_2/1]
15. non_recursive  : [eval_parse_time_1/1]
16. non_recursive  : [eval_parse_time_bb0_in/1]
17. non_recursive  : [eval_parse_time_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_parse_time_bb1_in/1
1. SCC is partially evaluated into eval_parse_time_bb6_in/5
2. SCC is partially evaluated into eval_parse_time_bb14_in/12
3. SCC is partially evaluated into eval_parse_time__critedge1_in/1
4. SCC is partially evaluated into eval_parse_time_bb23_in/1
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_parse_time_bb23_in/2
9. SCC is partially evaluated into eval_parse_time_70/1
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into loop_cont_eval_parse_time__critedge1_in/2
12. SCC is partially evaluated into loop_cont_eval_parse_time_bb1_in/2
13. SCC is partially evaluated into eval_parse_time_3/1
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_parse_time_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_parse_time_bb1_in/1 
* CE 5 is refined into CE [28] 
* CE 4 is refined into CE [29] 


#### Refined cost equations eval_parse_time_bb1_in/1 
* CE 28: eval_parse_time_bb1_in(B) = 0
     [B=6] 
* CE 29: eval_parse_time_bb1_in(B) = 1+ eval_parse_time_bb1_in(B)
     [] 

### Cost equations --> "Loop" of eval_parse_time_bb1_in/1 
* CEs [29] --> Loop 24 
* CEs [28] --> Loop 25 

#### Loops of eval_parse_time_bb1_in/1 
* Loop 24: eval_parse_time_bb1_in(B)->  eval_parse_time_bb1_in(B)
                  [] 
* Loop 25: eval_parse_time_bb1_in(B) [B=6] 

### Ranking functions of CR eval_parse_time_bb1_in(B) 

#### Partial ranking functions of CR eval_parse_time_bb1_in(B) 


### Resulting Chains:eval_parse_time_bb1_in(B) 
* [[24]]...
* [[24],25]
* [25]


### Merging Chains  eval_parse_time_bb1_in/1 into  External patterns of execution 
* [[25],[25,[24]]] --> 1 
* [[[24]]] --> 2 


### Specialization of cost equations eval_parse_time_bb6_in/5 
* CE 18 is refined into CE [30] 
* CE 19 is refined into CE [31] 
* CE 15 is refined into CE [32] 
* CE 17 is refined into CE [33] 
* CE 16 is refined into CE [34] 


#### Refined cost equations eval_parse_time_bb6_in/5 
* CE 30: eval_parse_time_bb6_in(A,B,A,C,D) = 0
     [C>=0,A>=0,60*A+60*C=D,B=3] 
* CE 31: eval_parse_time_bb6_in(A,B,A,C,D) = 0
     [C>=0,A>=0,A+C=D,B=3] 
* CE 32: eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) = 0
     [V_seconds_0>=0,B=2] 
* CE 33: eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) = 1+ eval_parse_time_bb6_in(F,B,C,D,E)
     [F>=V_seconds_0,B>=2,V_seconds_0>=0,3>=B] 
* CE 34: eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) = 1+ eval_parse_time_bb6_in(F,B,C,D,E)
     [F>=60*V_seconds_0,B>=2,V_seconds_0>=0,3>=B] 

### Cost equations --> "Loop" of eval_parse_time_bb6_in/5 
* CEs [33,34] --> Loop 26 
* CEs [30] --> Loop 27 
* CEs [31] --> Loop 28 
* CEs [32] --> Loop 29 

#### Loops of eval_parse_time_bb6_in/5 
* Loop 26: eval_parse_time_bb6_in(V_seconds_0,B,C,D,E)->  eval_parse_time_bb6_in(V_seconds_0',B,C,D,E)
                  [V_seconds_0'>=V_seconds_0,B>=2,V_seconds_0>=0,3>=B] 
* Loop 27: eval_parse_time_bb6_in(A,B,A,C,D) [C>=0,A>=0,60*A+60*C=D,B=3] 
* Loop 28: eval_parse_time_bb6_in(A,B,A,C,D) [C>=0,A>=0,A+C=D,B=3] 
* Loop 29: eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) [V_seconds_0>=0,B=2] 

### Ranking functions of CR eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) 

#### Partial ranking functions of CR eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) 


### Resulting Chains:eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) 
* [[26]]...
* [[26],29]
* [[26],28]
* [[26],27]
* [29]
* [28]
* [27]


### Merging Chains  eval_parse_time_bb6_in/5 into  External patterns of execution 
* [[29],[29,[26]]] --> 1 
* [[28],[28,[26]]] --> 2 
* [[27],[27,[26]]] --> 3 
* [[[26]]] --> 4 


### Specialization of cost equations eval_parse_time_bb14_in/12 
* CE 21 is refined into CE [35] 
* CE 20 is refined into CE [36] 


#### Refined cost equations eval_parse_time_bb14_in/12 
* CE 35: eval_parse_time_bb14_in(A,B,C,D,E,F,A,B,C,E,D,C) = 0
     [E>=1,F=4] 
* CE 36: eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0,B,C,D,E,F,G,H) = 1+ eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,I,J,C,D,E,F,G,H)
     [V_fracpart_0>=1,10*V_fracpart_0=I,J=4,B=4] 

### Cost equations --> "Loop" of eval_parse_time_bb14_in/12 
* CEs [36] --> Loop 30 
* CEs [35] --> Loop 31 

#### Loops of eval_parse_time_bb14_in/12 
* Loop 30: eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0,B,C,D,E,F,G,H)->  eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0',B',C,D,E,F,G,H)
                  [V_fracpart_0>=1,10*V_fracpart_0=V_fracpart_0',B'=4,B=4] 
* Loop 31: eval_parse_time_bb14_in(A,B,C,D,E,F,A,B,C,E,D,C) [E>=1,F=4] 

### Ranking functions of CR eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0,B,C,D,E,F,G,H) 


### Resulting Chains:eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0,B,C,D,E,F,G,H) 
* [[30]]...
* [[30],31]
* [31]


### Merging Chains  eval_parse_time_bb14_in/12 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[30]]] --> 2 
* [[[30]]] --> 3 


### Specialization of cost equations eval_parse_time__critedge1_in/1 
* CE 8 is refined into CE [37,38,39,40,41,42,43] 
* CE 10 is refined into CE [44,45,46] 
* CE 11 is refined into CE [47,48,49] 
* CE 12 is refined into CE [50,51] 
* CE 7 is refined into CE [52,53,54,55,56,57,58] 
* CE 9 is refined into CE [59,60,61] 


#### Refined cost equations eval_parse_time__critedge1_in/1 
* CE 37: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):2+ eval_parse_time_bb14_in(E,F,H,I,J,K,E,F,L,M,I,N):1
     [F>=0,E>=0,E+F=N,E+F=L,E+F=H,E+F=G,M=1,K=4,J=1,D=3,C=0,B=7] 
* CE 38: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):2+ eval_parse_time_bb14_in(E,F,H,I,J,K,E,F,L,M,I,N):2
     [M>=10,F>=0,E>=0,E+F=N,E+F=L,E+F=H,E+F=G,K=4,J=1,D=3,C=0,B=7] 
* CE 39: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):2+ eval_parse_time_bb14_in(E,H,G,I,J,K,L,M,N,O,P,Q):3
     [G>=E,E>=0,G=E+H,G=E+F,K=4,J=1,D=3,C=0,B=7] 
* CE 40: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):3+ eval_parse_time_bb14_in(E,F,H,I,J,K,E,F,L,M,I,N):1
     [F>=0,E>=0,60*E+60*F=N,60*E+60*F=L,60*E+60*F=H,60*E+60*F=G,M=1,K=4,J=1,D=3,C=0,B=7] 
* CE 41: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):3+ eval_parse_time_bb14_in(E,F,H,I,J,K,E,F,L,M,I,N):2
     [M>=10,F>=0,E>=0,60*E+60*F=N,60*E+60*F=L,60*E+60*F=H,60*E+60*F=G,K=4,J=1,D=3,C=0,B=7] 
* CE 42: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):3+ eval_parse_time_bb14_in(E,H,G,I,J,K,L,M,N,O,P,Q):3
     [G>=60*E,E>=0,G=60*E+60*H,G=60*E+60*F,K=4,J=1,D=3,C=0,B=7] 
* CE 43: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):4
     [H=4,I=1,D=3,C=0,B=7] 
* CE 44: eval_parse_time__critedge1_in(B) = 1+ eval_parse_time_bb6_in(C,D,E,F,G):2
     [G>=E,E>=0,G=E+F,D=3,C=0,B=7] 
* CE 45: eval_parse_time__critedge1_in(B) = 1+ eval_parse_time_bb6_in(C,D,E,F,G):3
     [G>=60*E,E>=0,G=60*E+60*F,D=3,C=0,B=7] 
* CE 46: eval_parse_time__critedge1_in(B) = 1+ eval_parse_time_bb6_in(C,D,E,F,G):4
     [D=3,C=0,B=7] 
* CE 47: eval_parse_time__critedge1_in(B) = 1+ eval_parse_time_bb6_in(C,D,E,F,G):2
     [G>=E,E>=0,G=E+F,D=3,C=0,B=2] 
* CE 48: eval_parse_time__critedge1_in(B) = 1+ eval_parse_time_bb6_in(C,D,E,F,G):3
     [G>=60*E,E>=0,G=60*E+60*F,D=3,C=0,B=2] 
* CE 49: eval_parse_time__critedge1_in(B) = 1+ eval_parse_time_bb6_in(C,D,E,F,G):4
     [D=3,C=0,B=2] 
* CE 50: eval_parse_time__critedge1_in(B) = 1+ eval_parse_time_bb6_in(C,D,E,F,G):1
     [D=2,C=0,B=2] 
* CE 51: eval_parse_time__critedge1_in(B) = 1+ eval_parse_time_bb6_in(C,D,E,F,G):4
     [D=2,C=0,B=2] 
* CE 52: eval_parse_time__critedge1_in(B) = 3+ eval_parse_time_bb6_in(C,D,E,F,G):2+ eval_parse_time_bb14_in(E,F,H,I,J,K,E,F,L,M,I,N):1+ eval_parse_time__critedge1_in(B)
     [F>=0,E>=0,E+F=N,E+F=L,E+F=H,E+F=G,M=1,K=4,J=1,D=3,C=0] 
* CE 53: eval_parse_time__critedge1_in(B) = 3+ eval_parse_time_bb6_in(C,D,E,F,G):2+ eval_parse_time_bb14_in(E,F,H,I,J,K,E,F,L,M,I,N):2+ eval_parse_time__critedge1_in(B)
     [M>=10,F>=0,E>=0,E+F=N,E+F=L,E+F=H,E+F=G,K=4,J=1,D=3,C=0] 
* CE 54: eval_parse_time__critedge1_in(B) = 3+ eval_parse_time_bb6_in(C,D,E,F,G):2+ eval_parse_time_bb14_in(E,H,G,I,J,K,L,M,N,O,P,Q):3
     [G>=E,E>=0,G=E+H,G=E+F,K=4,J=1,D=3,C=0] 
* CE 55: eval_parse_time__critedge1_in(B) = 3+ eval_parse_time_bb6_in(C,D,E,F,G):3+ eval_parse_time_bb14_in(E,F,H,I,J,K,E,F,L,M,I,N):1+ eval_parse_time__critedge1_in(B)
     [F>=0,E>=0,60*E+60*F=N,60*E+60*F=L,60*E+60*F=H,60*E+60*F=G,M=1,K=4,J=1,D=3,C=0] 
* CE 56: eval_parse_time__critedge1_in(B) = 3+ eval_parse_time_bb6_in(C,D,E,F,G):3+ eval_parse_time_bb14_in(E,F,H,I,J,K,E,F,L,M,I,N):2+ eval_parse_time__critedge1_in(B)
     [M>=10,F>=0,E>=0,60*E+60*F=N,60*E+60*F=L,60*E+60*F=H,60*E+60*F=G,K=4,J=1,D=3,C=0] 
* CE 57: eval_parse_time__critedge1_in(B) = 3+ eval_parse_time_bb6_in(C,D,E,F,G):3+ eval_parse_time_bb14_in(E,H,G,I,J,K,L,M,N,O,P,Q):3
     [G>=60*E,E>=0,G=60*E+60*H,G=60*E+60*F,K=4,J=1,D=3,C=0] 
* CE 58: eval_parse_time__critedge1_in(B) = 3+ eval_parse_time_bb6_in(C,D,E,F,G):4
     [H=4,I=1,D=3,C=0] 
* CE 59: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):2+ eval_parse_time__critedge1_in(B)
     [G>=E,E>=0,G=E+F,D=3,C=0] 
* CE 60: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):3+ eval_parse_time__critedge1_in(B)
     [G>=60*E,E>=0,G=60*E+60*F,D=3,C=0] 
* CE 61: eval_parse_time__critedge1_in(B) = 2+ eval_parse_time_bb6_in(C,D,E,F,G):4
     [D=3,C=0] 

### Cost equations --> "Loop" of eval_parse_time__critedge1_in/1 
* CEs [39,42,43,46,49,51,54,57,58,61] --> Loop 32 
* CEs [52,53,55,56,59,60] --> Loop 33 
* CEs [37,38,40,41,44,45] --> Loop 34 
* CEs [47,48,50] --> Loop 35 

#### Loops of eval_parse_time__critedge1_in/1 
* Loop 32: eval_parse_time__critedge1_in(B) [] 
* Loop 33: eval_parse_time__critedge1_in(B)->  eval_parse_time__critedge1_in(B)
                  [] 
* Loop 34: eval_parse_time__critedge1_in(B) [B=7] 
* Loop 35: eval_parse_time__critedge1_in(B) [B=2] 

### Ranking functions of CR eval_parse_time__critedge1_in(B) 

#### Partial ranking functions of CR eval_parse_time__critedge1_in(B) 


### Resulting Chains:eval_parse_time__critedge1_in(B) 
* [[33]]...
* [[33],35]
* [[33],34]
* [[33],32]...
* [35]
* [34]
* [32]...


### Merging Chains  eval_parse_time__critedge1_in/1 into  External patterns of execution 
* [[35],[35,[33]]] --> 1 
* [[34],[34,[33]]] --> 2 
* [[32],[[33]],[32,[33]]] --> 3 


### Specialization of cost equations eval_parse_time_bb23_in/1 
* CE 25 is refined into CE [62] 
* CE 24 is refined into CE [63] 
* CE 23 is refined into CE [64] 


#### Refined cost equations eval_parse_time_bb23_in/1 
* CE 62: eval_parse_time_bb23_in(B) = 0
     [B=5] 
* CE 63: eval_parse_time_bb23_in(B) = 0
     [B=2] 
* CE 64: eval_parse_time_bb23_in(B) = 1+ eval_parse_time_bb23_in(B)
     [] 

### Cost equations --> "Loop" of eval_parse_time_bb23_in/1 
* CEs [64] --> Loop 36 
* CEs [62] --> Loop 37 
* CEs [63] --> Loop 38 

#### Loops of eval_parse_time_bb23_in/1 
* Loop 36: eval_parse_time_bb23_in(B)->  eval_parse_time_bb23_in(B)
                  [] 
* Loop 37: eval_parse_time_bb23_in(B) [B=5] 
* Loop 38: eval_parse_time_bb23_in(B) [B=2] 

### Ranking functions of CR eval_parse_time_bb23_in(B) 

#### Partial ranking functions of CR eval_parse_time_bb23_in(B) 


### Resulting Chains:eval_parse_time_bb23_in(B) 
* [[36]]...
* [[36],38]
* [[36],37]
* [38]
* [37]


### Merging Chains  eval_parse_time_bb23_in/1 into  External patterns of execution 
* [[38],[38,[36]]] --> 1 
* [[37],[37,[36]]] --> 2 
* [[[36]]] --> 3 


### Specialization of cost equations loop_cont_eval_parse_time_bb23_in/2 
* CE 27 is refined into CE [65] 
* CE 26 is refined into CE [66] 


#### Refined cost equations loop_cont_eval_parse_time_bb23_in/2 
* CE 65: loop_cont_eval_parse_time_bb23_in(B,A) = 0
     [B=5] 
* CE 66: loop_cont_eval_parse_time_bb23_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_parse_time_bb23_in/2 
* CEs [65] --> Loop 39 
* CEs [66] --> Loop 40 

#### Loops of loop_cont_eval_parse_time_bb23_in/2 
* Loop 39: loop_cont_eval_parse_time_bb23_in(B,A) [B=5] 
* Loop 40: loop_cont_eval_parse_time_bb23_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_parse_time_bb23_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_parse_time_bb23_in(B,A) 


### Resulting Chains:loop_cont_eval_parse_time_bb23_in(B,A) 
* [40]
* [39]


### Merging Chains  loop_cont_eval_parse_time_bb23_in/2 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


### Specialization of cost equations eval_parse_time_70/1 
* CE 22 is refined into CE [67,68,69] 


#### Refined cost equations eval_parse_time_70/1 
* CE 67: eval_parse_time_70(B) = 1+ eval_parse_time_bb23_in(C):1+ loop_cont_eval_parse_time_bb23_in(D,B):1
     [D=2,C=2] 
* CE 68: eval_parse_time_70(B) = 1+ eval_parse_time_bb23_in(C):2+ loop_cont_eval_parse_time_bb23_in(D,B):2
     [D=5,C=5] 
* CE 69: eval_parse_time_70(B) = 1+ eval_parse_time_bb23_in(C):3
     [] 

### Cost equations --> "Loop" of eval_parse_time_70/1 
* CEs [69] --> Loop 41 
* CEs [67,68] --> Loop 42 

#### Loops of eval_parse_time_70/1 
* Loop 41: eval_parse_time_70(B) [] 
* Loop 42: eval_parse_time_70(B) [] 

### Ranking functions of CR eval_parse_time_70(B) 

#### Partial ranking functions of CR eval_parse_time_70(B) 


### Resulting Chains:eval_parse_time_70(B) 
* [42]
* [41]...


### Merging Chains  eval_parse_time_70/1 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations loop_cont_eval_parse_time__critedge1_in/2 
* CE 14 is refined into CE [70,71] 
* CE 13 is refined into CE [72] 


#### Refined cost equations loop_cont_eval_parse_time__critedge1_in/2 
* CE 70: loop_cont_eval_parse_time__critedge1_in(B,A) = 0+ eval_parse_time_70(A):1
     [B=7] 
* CE 71: loop_cont_eval_parse_time__critedge1_in(B,A) = 0+ eval_parse_time_70(A):2
     [B=7] 
* CE 72: loop_cont_eval_parse_time__critedge1_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_parse_time__critedge1_in/2 
* CEs [70] --> Loop 43 
* CEs [72] --> Loop 44 
* CEs [71] --> Loop 45 

#### Loops of loop_cont_eval_parse_time__critedge1_in/2 
* Loop 43: loop_cont_eval_parse_time__critedge1_in(B,A) [B=7] 
* Loop 44: loop_cont_eval_parse_time__critedge1_in(B,A) [B=2] 
* Loop 45: loop_cont_eval_parse_time__critedge1_in(B,A) [B=7] 

### Ranking functions of CR loop_cont_eval_parse_time__critedge1_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_parse_time__critedge1_in(B,A) 


### Resulting Chains:loop_cont_eval_parse_time__critedge1_in(B,A) 
* [45]...
* [44]
* [43]


### Merging Chains  loop_cont_eval_parse_time__critedge1_in/2 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 
* [[45]] --> 3 


### Specialization of cost equations loop_cont_eval_parse_time_bb1_in/2 
* CE 6 is refined into CE [73,74,75,76] 


#### Refined cost equations loop_cont_eval_parse_time_bb1_in/2 
* CE 73: loop_cont_eval_parse_time_bb1_in(C,A) = 1+ eval_parse_time__critedge1_in(D):1+ loop_cont_eval_parse_time__critedge1_in(E,A):1
     [E=2,D=2,C=6] 
* CE 74: loop_cont_eval_parse_time_bb1_in(C,A) = 1+ eval_parse_time__critedge1_in(D):2+ loop_cont_eval_parse_time__critedge1_in(E,A):2
     [E=7,D=7,C=6] 
* CE 75: loop_cont_eval_parse_time_bb1_in(C,A) = 1+ eval_parse_time__critedge1_in(D):2+ loop_cont_eval_parse_time__critedge1_in(E,A):3
     [E=7,D=7,C=6] 
* CE 76: loop_cont_eval_parse_time_bb1_in(C,A) = 1+ eval_parse_time__critedge1_in(D):3
     [C=6] 

### Cost equations --> "Loop" of loop_cont_eval_parse_time_bb1_in/2 
* CEs [75,76] --> Loop 46 
* CEs [73,74] --> Loop 47 

#### Loops of loop_cont_eval_parse_time_bb1_in/2 
* Loop 46: loop_cont_eval_parse_time_bb1_in(C,A) [C=6] 
* Loop 47: loop_cont_eval_parse_time_bb1_in(C,A) [C=6] 

### Ranking functions of CR loop_cont_eval_parse_time_bb1_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_parse_time_bb1_in(C,A) 


### Resulting Chains:loop_cont_eval_parse_time_bb1_in(C,A) 
* [47]
* [46]...


### Merging Chains  loop_cont_eval_parse_time_bb1_in/2 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 


### Specialization of cost equations eval_parse_time_3/1 
* CE 3 is refined into CE [77,78,79] 


#### Refined cost equations eval_parse_time_3/1 
* CE 77: eval_parse_time_3(B) = 1+ eval_parse_time_bb1_in(C):1+ loop_cont_eval_parse_time_bb1_in(D,B):1
     [D=6,C=6] 
* CE 78: eval_parse_time_3(B) = 1+ eval_parse_time_bb1_in(C):1+ loop_cont_eval_parse_time_bb1_in(D,B):2
     [D=6,C=6] 
* CE 79: eval_parse_time_3(B) = 1+ eval_parse_time_bb1_in(C):2
     [] 

### Cost equations --> "Loop" of eval_parse_time_3/1 
* CEs [78,79] --> Loop 48 
* CEs [77] --> Loop 49 

#### Loops of eval_parse_time_3/1 
* Loop 48: eval_parse_time_3(B) [] 
* Loop 49: eval_parse_time_3(B) [] 

### Ranking functions of CR eval_parse_time_3(B) 

#### Partial ranking functions of CR eval_parse_time_3(B) 


### Resulting Chains:eval_parse_time_3(B) 
* [49]
* [48]...


### Merging Chains  eval_parse_time_3/1 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 


### Specialization of cost equations eval_parse_time_start/1 
* CE 2 is refined into CE [80,81] 


#### Refined cost equations eval_parse_time_start/1 
* CE 80: eval_parse_time_start(B) = 0+ eval_parse_time_3(B):1
     [] 
* CE 81: eval_parse_time_start(B) = 0+ eval_parse_time_3(B):2
     [] 

### Cost equations --> "Loop" of eval_parse_time_start/1 
* CEs [81] --> Loop 50 
* CEs [80] --> Loop 51 

#### Loops of eval_parse_time_start/1 
* Loop 50: eval_parse_time_start(B) [] 
* Loop 51: eval_parse_time_start(B) [] 

### Ranking functions of CR eval_parse_time_start(B) 

#### Partial ranking functions of CR eval_parse_time_start(B) 


### Resulting Chains:eval_parse_time_start(B) 
* [51]
* [50]...


### Merging Chains  eval_parse_time_start/1 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [24] 

 * loop 24:eval_parse_time_bb1_in(B) -> [eval_parse_time_bb1_in(B')] 
1
#### Cost of phase [24]:eval_parse_time_bb1_in(B) -> [eval_parse_time_bb1_in(B')] 
1*it(24)+0
#### Cost of phase [24]:eval_parse_time_bb1_in(B) -> [eval_parse_time_bb1_in(B')] 
1*it(24)+0
#### Cost of chains of eval_parse_time_bb1_in(B):
* Chain [[24]]...: 1*it(24)+0
  with precondition: [] 

* Chain [[24],25]: 1*it(24)+0
  with precondition: [B=6] 

* Chain [25]: 0
  with precondition: [B=6] 


#### Cost of loops [26] 

 * loop 26:eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) -> [eval_parse_time_bb6_in(V_seconds_0',B',C',D',E')] 
1
#### Cost of phase [26]:eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) -> [eval_parse_time_bb6_in(V_seconds_0',B',C',D',E')] 
1*it(26)+0
#### Cost of phase [26]:eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) -> [eval_parse_time_bb6_in(V_seconds_0',B',C',D',E')] 
1*it(26)+0
#### Cost of phase [26]:eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) -> [eval_parse_time_bb6_in(V_seconds_0',B',C',D',E')] 
1*it(26)+0
#### Cost of phase [26]:eval_parse_time_bb6_in(V_seconds_0,B,C,D,E) -> [eval_parse_time_bb6_in(V_seconds_0',B',C',D',E')] 
1*it(26)+0
#### Cost of chains of eval_parse_time_bb6_in(V_seconds_0,B,C,D,E):
* Chain [[26]]...: 1*it(26)+0
  with precondition: [V_seconds_0>=0,B>=2,3>=B] 

* Chain [[26],29]: 1*it(26)+0
  with precondition: [B=2,V_seconds_0>=0] 

* Chain [[26],28]: 1*it(26)+0
  with precondition: [B=3,C+D=E,V_seconds_0>=0,D>=0,C>=V_seconds_0] 

* Chain [[26],27]: 1*it(26)+0
  with precondition: [B=3,60*C+60*D=E,V_seconds_0>=0,D>=0,C>=V_seconds_0] 

* Chain [29]: 0
  with precondition: [B=2,V_seconds_0>=0] 

* Chain [28]: 0
  with precondition: [B=3,V_seconds_0=C,V_seconds_0+D=E,V_seconds_0>=0,D>=0] 

* Chain [27]: 0
  with precondition: [B=3,V_seconds_0=C,60*V_seconds_0+60*D=E,V_seconds_0>=0,D>=0] 


#### Cost of loops [30] 

 * loop 30:eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0,B,C,D,E,F,G,H) -> [eval_parse_time_bb14_in(V_seconds_0',V_24',V_seconds_1',V_57',V_fracpart_0',B',C',D',E',F',G',H')] 
1
#### Cost of phase [30]:eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0,B,C,D,E,F,G,H) -> [eval_parse_time_bb14_in(V_seconds_0',V_24',V_seconds_1',V_57',V_fracpart_0',B',C',D',E',F',G',H')] 
1*it(30)+0
#### Cost of phase [30]:eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0,B,C,D,E,F,G,H) -> [eval_parse_time_bb14_in(V_seconds_0',V_24',V_seconds_1',V_57',V_fracpart_0',B',C',D',E',F',G',H')] 
1*it(30)+0
#### Cost of chains of eval_parse_time_bb14_in(V_seconds_0,V_24,V_seconds_1,V_57,V_fracpart_0,B,C,D,E,F,G,H):
* Chain [[30]]...: 1*it(30)+0
  with precondition: [V_fracpart_0>=1,B=4] 

* Chain [[30],31]: 1*it(30)+0
  with precondition: [B=4,V_seconds_0=C,V_24=D,V_seconds_1=E,V_57=G,V_seconds_1=H,V_fracpart_0>=1,F>=10*V_fracpart_0] 

* Chain [31]: 0
  with precondition: [B=4,C=V_seconds_0,D=V_24,G=V_57,V_seconds_1=E,V_fracpart_0=F,V_seconds_1=H,V_fracpart_0>=1] 


#### Cost of loops [33] 

 * loop 33:eval_parse_time__critedge1_in(B) -> [eval_parse_time__critedge1_in(B')] 
1*s(13)+0
#### Cost of phase [33]:eval_parse_time__critedge1_in(B) -> [eval_parse_time__critedge1_in(B')] 
1*s(14)+0
#### Cost of phase [33]:eval_parse_time__critedge1_in(B) -> [eval_parse_time__critedge1_in(B')] 
1*s(14)+0
#### Cost of phase [33]:eval_parse_time__critedge1_in(B) -> [eval_parse_time__critedge1_in(B')] 
1*s(14)+0
#### Cost of phase [33]:eval_parse_time__critedge1_in(B) -> [eval_parse_time__critedge1_in(B')] 
1*s(14)+0
#### Cost of chains of eval_parse_time__critedge1_in(B):
* Chain [[33]]...: 1*s(14)+0
  with precondition: [] 

* Chain [[33],35]: 2*aux(6)+0
  with precondition: [B=2] 

* Chain [[33],34]: 2*aux(7)+0
  with precondition: [B=7] 

* Chain [[33],32]...: 2*aux(8)+0
  with precondition: [] 

* Chain [35]: 1*aux(6)+0
  with precondition: [B=2] 

* Chain [34]: 1*aux(7)+0
  with precondition: [B=7] 

* Chain [32]...: 1*aux(8)+0
  with precondition: [] 


#### Cost of loops [36] 

 * loop 36:eval_parse_time_bb23_in(B) -> [eval_parse_time_bb23_in(B')] 
1
#### Cost of phase [36]:eval_parse_time_bb23_in(B) -> [eval_parse_time_bb23_in(B')] 
1*it(36)+0
#### Cost of phase [36]:eval_parse_time_bb23_in(B) -> [eval_parse_time_bb23_in(B')] 
1*it(36)+0
#### Cost of phase [36]:eval_parse_time_bb23_in(B) -> [eval_parse_time_bb23_in(B')] 
1*it(36)+0
#### Cost of chains of eval_parse_time_bb23_in(B):
* Chain [[36]]...: 1*it(36)+0
  with precondition: [] 

* Chain [[36],38]: 1*it(36)+0
  with precondition: [B=2] 

* Chain [[36],37]: 1*it(36)+0
  with precondition: [B=5] 

* Chain [38]: 0
  with precondition: [B=2] 

* Chain [37]: 0
  with precondition: [B=5] 


#### Cost of chains of loop_cont_eval_parse_time_bb23_in(B,A):
* Chain [40]: 0
  with precondition: [B=2] 

* Chain [39]: 0
  with precondition: [B=5] 


#### Cost of chains of eval_parse_time_70(B):
* Chain [42]: 1*aux(14)+0
  with precondition: [] 

* Chain [41]...: 1*s(51)+1
  with precondition: [] 


#### Cost of chains of loop_cont_eval_parse_time__critedge1_in(B,A):
* Chain [45]...: 1*s(52)+1
  with precondition: [B=7] 

* Chain [44]: 0
  with precondition: [B=2] 

* Chain [43]: 1*s(53)+0
  with precondition: [B=7] 


#### Cost of chains of loop_cont_eval_parse_time_bb1_in(C,A):
* Chain [47]: 1*aux(15)+0
  with precondition: [C=6] 

* Chain [46]...: 1*aux(16)+0
  with precondition: [C=6] 


#### Cost of chains of eval_parse_time_3(B):
* Chain [49]: 2*s(60)+1
  with precondition: [] 

* Chain [48]...: 1*aux(17)+0
  with precondition: [] 


#### Cost of chains of eval_parse_time_start(B):
* Chain [51]: 2*s(65)+1
  with precondition: [] 

* Chain [50]...: 1*s(66)+0
  with precondition: [] 


Closed-form bounds of eval_parse_time_start(B): 
-------------------------------------
* Chain [51] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [50]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_parse_time_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 59 ms.
* Invariants computed in 34 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 100 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 56 ms.
   - Equation cost structures 26 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 302 ms.

