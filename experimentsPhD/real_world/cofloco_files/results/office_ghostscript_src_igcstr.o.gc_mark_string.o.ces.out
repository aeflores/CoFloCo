Warning: Ignored call to eval_gc_mark_string_stop/1 in equation eval_gc_mark_string_bb14_in/2 
Warning: Ignored call to eval_gc_mark_string_stop/1 in equation eval_gc_mark_string_bb14_in/2 
Warning: Ignored call to eval_gc_mark_string_stop/1 in equation eval_gc_mark_string_bb14_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_gc_mark_string_bb14_in/2]
1. non_recursive  : [eval_gc_mark_string_bb12_in/2]
2. non_recursive  : [eval_gc_mark_string_48/1]
3. non_recursive  : [eval_gc_mark_string_47/2]
4. recursive  : [eval_gc_mark_string_bb10_in/3]
5. recursive  : [eval_gc_mark_string_bb3_in/4]
6. non_recursive  : [eval_gc_mark_string_bb5_in/2]
7. non_recursive  : [loop_cont_eval_gc_mark_string_bb10_in/3]
8. non_recursive  : [loop_cont_eval_gc_mark_string_bb3_in/3]
9. non_recursive  : [eval_gc_mark_string_bb0_in/2]
10. non_recursive  : [eval_gc_mark_string_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_gc_mark_string_bb14_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_gc_mark_string_bb10_in/3
5. SCC is partially evaluated into eval_gc_mark_string_bb3_in/4
6. SCC is partially evaluated into eval_gc_mark_string_bb5_in/2
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_gc_mark_string_bb0_in/2
10. SCC is partially evaluated into eval_gc_mark_string_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gc_mark_string_bb14_in/2 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 


#### Refined cost equations eval_gc_mark_string_bb14_in/2 
* CE 15: eval_gc_mark_string_bb14_in(V_marks_3,B) = 0
     [V_marks_3>=1] 
* CE 16: eval_gc_mark_string_bb14_in(V_marks_3,B) = 0
     [0>=V_marks_3+1] 
* CE 17: eval_gc_mark_string_bb14_in(V_marks_3,B) = 0
     [V_marks_3=0] 

### Cost equations --> "Loop" of eval_gc_mark_string_bb14_in/2 
* CEs [15] --> Loop 11 
* CEs [16] --> Loop 12 
* CEs [17] --> Loop 13 

#### Loops of eval_gc_mark_string_bb14_in/2 
* Loop 11: eval_gc_mark_string_bb14_in(V_marks_3,B) [V_marks_3>=1] 
* Loop 12: eval_gc_mark_string_bb14_in(V_marks_3,B) [0>=V_marks_3+1] 
* Loop 13: eval_gc_mark_string_bb14_in(V_marks_3,B) [V_marks_3=0] 

### Ranking functions of CR eval_gc_mark_string_bb14_in(V_marks_3,B) 

#### Partial ranking functions of CR eval_gc_mark_string_bb14_in(V_marks_3,B) 


### Resulting Chains:eval_gc_mark_string_bb14_in(V_marks_3,B) 
* [13]
* [12]
* [11]


### Merging Chains  eval_gc_mark_string_bb14_in/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 
* [[11]] --> 3 


### Specialization of cost equations eval_gc_mark_string_bb10_in/3 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


#### Refined cost equations eval_gc_mark_string_bb10_in/3 
* CE 18: eval_gc_mark_string_bb10_in(A,B,A) = 0
     [31>=A,B=3] 
* CE 19: eval_gc_mark_string_bb10_in(V_left_2,B,C) = 1+ eval_gc_mark_string_bb10_in(D,E,C)
     [V_left_2>=32,V_left_2=D+32,E=3,B=3] 

### Cost equations --> "Loop" of eval_gc_mark_string_bb10_in/3 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 

#### Loops of eval_gc_mark_string_bb10_in/3 
* Loop 14: eval_gc_mark_string_bb10_in(V_left_2,B,C)->  eval_gc_mark_string_bb10_in(V_left_2',B',C)
                  [V_left_2>=32,V_left_2=V_left_2'+32,B'=3,B=3] 
* Loop 15: eval_gc_mark_string_bb10_in(A,B,A) [31>=A,B=3] 

### Ranking functions of CR eval_gc_mark_string_bb10_in(V_left_2,B,C) 
* RF of phase [14]: [V_left_2-31]

#### Partial ranking functions of CR eval_gc_mark_string_bb10_in(V_left_2,B,C) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_left_2-31


### Resulting Chains:eval_gc_mark_string_bb10_in(V_left_2,B,C) 
* [[14],15]
* [15]


### Merging Chains  eval_gc_mark_string_bb10_in/3 into  External patterns of execution 
* [[15]] --> 1 
* [[15,[14]]] --> 2 


### Specialization of cost equations eval_gc_mark_string_bb3_in/4 
* CE 8 is refined into CE [20] 
* CE 7 is refined into CE [21] 


#### Refined cost equations eval_gc_mark_string_bb3_in/4 
* CE 20: eval_gc_mark_string_bb3_in(A,B,C,B) = 0
     [31>=A,C=2] 
* CE 21: eval_gc_mark_string_bb3_in(V_left_0,V_marks_0,B,C) = 1+ eval_gc_mark_string_bb3_in(D,E,F,C)
     [V_left_0>=32,V_left_0=D+32,F=2,B=2] 

### Cost equations --> "Loop" of eval_gc_mark_string_bb3_in/4 
* CEs [21] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of eval_gc_mark_string_bb3_in/4 
* Loop 16: eval_gc_mark_string_bb3_in(V_left_0,V_marks_0,B,C)->  eval_gc_mark_string_bb3_in(V_left_0',V_marks_0',B',C)
                  [V_left_0>=32,V_left_0=V_left_0'+32,B'=2,B=2] 
* Loop 17: eval_gc_mark_string_bb3_in(A,B,C,B) [31>=A,C=2] 

### Ranking functions of CR eval_gc_mark_string_bb3_in(V_left_0,V_marks_0,B,C) 
* RF of phase [16]: [V_left_0-31]

#### Partial ranking functions of CR eval_gc_mark_string_bb3_in(V_left_0,V_marks_0,B,C) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_left_0-31


### Resulting Chains:eval_gc_mark_string_bb3_in(V_left_0,V_marks_0,B,C) 
* [[16],17]
* [17]


### Merging Chains  eval_gc_mark_string_bb3_in/4 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[16]]] --> 2 


### Specialization of cost equations eval_gc_mark_string_bb5_in/2 
* CE 9 is refined into CE [22,23,24] 


#### Refined cost equations eval_gc_mark_string_bb5_in/2 
* CE 22: eval_gc_mark_string_bb5_in(V_marks_1,B) = 0+ eval_gc_mark_string_bb14_in(C,B):1
     [C=0] 
* CE 23: eval_gc_mark_string_bb5_in(V_marks_1,B) = 0+ eval_gc_mark_string_bb14_in(C,B):2
     [0>=C+1] 
* CE 24: eval_gc_mark_string_bb5_in(V_marks_1,B) = 0+ eval_gc_mark_string_bb14_in(C,B):3
     [C>=1] 

### Cost equations --> "Loop" of eval_gc_mark_string_bb5_in/2 
* CEs [22,23,24] --> Loop 18 

#### Loops of eval_gc_mark_string_bb5_in/2 
* Loop 18: eval_gc_mark_string_bb5_in(V_marks_1,B) [] 

### Ranking functions of CR eval_gc_mark_string_bb5_in(V_marks_1,B) 

#### Partial ranking functions of CR eval_gc_mark_string_bb5_in(V_marks_1,B) 


### Resulting Chains:eval_gc_mark_string_bb5_in(V_marks_1,B) 
* [18]


### Merging Chains  eval_gc_mark_string_bb5_in/2 into  External patterns of execution 
* [[18]] --> 1 


### Specialization of cost equations eval_gc_mark_string_bb0_in/2 
* CE 3 is refined into CE [25,26] 
* CE 4 is refined into CE [27] 
* CE 5 is refined into CE [28] 
* CE 6 is refined into CE [29,30] 


#### Refined cost equations eval_gc_mark_string_bb0_in/2 
* CE 25: eval_gc_mark_string_bb0_in(V_size,B) = 1+ eval_gc_mark_string_bb3_in(C,D,E,D):1+ eval_gc_mark_string_bb5_in(D,B):1
     [31>=C,E=2] 
* CE 26: eval_gc_mark_string_bb0_in(V_size,B) = 1+ eval_gc_mark_string_bb3_in(C,D,E,F):2+ eval_gc_mark_string_bb5_in(F,B):1
     [C>=32,E=2] 
* CE 27: eval_gc_mark_string_bb0_in(V_size,B) = 0+ eval_gc_mark_string_bb5_in(C,B):1
     [C=0] 
* CE 28: eval_gc_mark_string_bb0_in(V_size,B) = 0+ eval_gc_mark_string_bb14_in(C,B):1
     [C=0] 
* CE 29: eval_gc_mark_string_bb0_in(V_size,B) = 1+ eval_gc_mark_string_bb10_in(C,D,C):1+ eval_gc_mark_string_bb14_in(E,B):1
     [31>=C,E=0,D=3] 
* CE 30: eval_gc_mark_string_bb0_in(V_size,B) = 1+ eval_gc_mark_string_bb10_in(C,D,E):2+ eval_gc_mark_string_bb14_in(F,B):1
     [C>=E+32,E>=0,31>=E,F=0,D=3] 

### Cost equations --> "Loop" of eval_gc_mark_string_bb0_in/2 
* CEs [25,26,27,28,29,30] --> Loop 19 

#### Loops of eval_gc_mark_string_bb0_in/2 
* Loop 19: eval_gc_mark_string_bb0_in(V_size,B) [] 

### Ranking functions of CR eval_gc_mark_string_bb0_in(V_size,B) 

#### Partial ranking functions of CR eval_gc_mark_string_bb0_in(V_size,B) 


### Resulting Chains:eval_gc_mark_string_bb0_in(V_size,B) 
* [19]


### Merging Chains  eval_gc_mark_string_bb0_in/2 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations eval_gc_mark_string_start/3 
* CE 2 is refined into CE [31] 


#### Refined cost equations eval_gc_mark_string_start/3 
* CE 31: eval_gc_mark_string_start(V_size,V_set,B) = 0+ eval_gc_mark_string_bb0_in(V_size,B):1
     [] 

### Cost equations --> "Loop" of eval_gc_mark_string_start/3 
* CEs [31] --> Loop 20 

#### Loops of eval_gc_mark_string_start/3 
* Loop 20: eval_gc_mark_string_start(V_size,V_set,B) [] 

### Ranking functions of CR eval_gc_mark_string_start(V_size,V_set,B) 

#### Partial ranking functions of CR eval_gc_mark_string_start(V_size,V_set,B) 


### Resulting Chains:eval_gc_mark_string_start(V_size,V_set,B) 
* [20]


### Merging Chains  eval_gc_mark_string_start/3 into  External patterns of execution 
* [[20]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of eval_gc_mark_string_bb14_in(V_marks_3,B):
* Chain [13]: 0
  with precondition: [V_marks_3=0] 

* Chain [12]: 0
  with precondition: [0>=V_marks_3+1] 

* Chain [11]: 0
  with precondition: [V_marks_3>=1] 


#### Cost of loops [14] 

 * loop 14:eval_gc_mark_string_bb10_in(V_left_2,B,C) -> [eval_gc_mark_string_bb10_in(V_left_2',B',C')] 
1
#### Cost of phase [14]:eval_gc_mark_string_bb10_in(V_left_2,B,C) -> [eval_gc_mark_string_bb10_in(V_left_2',B',C')] 
1*it(14)+0
  Such that:it(14) =< V_left_2
it(14) =< V_left_2-V_left_2'

#### Cost of chains of eval_gc_mark_string_bb10_in(V_left_2,B,C):
* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V_left_2-C

  with precondition: [B=3,31>=C,C>=0,V_left_2>=C+32] 

* Chain [15]: 0
  with precondition: [B=3,V_left_2=C,31>=V_left_2] 


#### Cost of loops [16] 

 * loop 16:eval_gc_mark_string_bb3_in(V_left_0,V_marks_0,B,C) -> [eval_gc_mark_string_bb3_in(V_left_0',V_marks_0',B',C')] 
1
#### Cost of phase [16]:eval_gc_mark_string_bb3_in(V_left_0,V_marks_0,B,C) -> [eval_gc_mark_string_bb3_in(V_left_0',V_marks_0',B',C')] 
1*it(16)+0
  Such that:it(16) =< V_left_0
it(16) =< V_left_0-V_left_0'

#### Cost of chains of eval_gc_mark_string_bb3_in(V_left_0,V_marks_0,B,C):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_left_0

  with precondition: [B=2,V_left_0>=32] 

* Chain [17]: 0
  with precondition: [B=2,C=V_marks_0,31>=V_left_0] 


#### Cost of chains of eval_gc_mark_string_bb5_in(V_marks_1,B):
* Chain [18]: 0
  with precondition: [] 


#### Cost of chains of eval_gc_mark_string_bb0_in(V_size,B):
* Chain [19]: 1*aux(1)+0
  with precondition: [] 


#### Cost of chains of eval_gc_mark_string_start(V_size,V_set,B):
* Chain [20]: 1*s(3)+0
  with precondition: [] 


Closed-form bounds of eval_gc_mark_string_start(V_size,V_set,B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gc_mark_string_start(V_size,V_set,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 29 ms.
* Invariants computed in 34 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 67 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 19 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 231 ms.

