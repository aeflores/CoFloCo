Warning: Ignored call to eval_horDiff16_stop/1 in equation eval_horDiff16_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_horDiff16_bb11_in/1]
1. recursive  : [eval_horDiff16_bb4_in/6]
2. recursive  : [eval_horDiff16_NewDefault_in/3,eval_horDiff16_bb10_in/3,eval_horDiff16_bb2_in/3,eval_horDiff16_bb6_in/3,eval_horDiff16_bb7_in/3,eval_horDiff16_bb8_in/3,eval_horDiff16_bb9_in/3,loop_cont_eval_horDiff16_bb4_in/4]
3. non_recursive  : [loop_cont_eval_horDiff16_bb2_in/2]
4. non_recursive  : [eval_horDiff16_bb0_in/2]
5. non_recursive  : [eval_horDiff16_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_horDiff16_bb4_in/6
2. SCC is partially evaluated into eval_horDiff16_bb2_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_horDiff16_bb0_in/2
5. SCC is partially evaluated into eval_horDiff16_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_horDiff16_bb4_in/6 
* CE 14 is refined into CE [15] 
* CE 13 is refined into CE [16] 


#### Refined cost equations eval_horDiff16_bb4_in/6 
* CE 15: eval_horDiff16_bb4_in(A,B,C,D,A,B) = 0
     [A>=C+4,0>=C,D=2] 
* CE 16: eval_horDiff16_bb4_in(V_4,V_wc_0,V_i_0,B,C,D) = 1+ eval_horDiff16_bb4_in(V_4,V_wc_0,E,F,C,D)
     [V_4>=V_i_0+4,V_i_0>=1,V_i_0=E+1,F=2,B=2] 

### Cost equations --> "Loop" of eval_horDiff16_bb4_in/6 
* CEs [16] --> Loop 9 
* CEs [15] --> Loop 10 

#### Loops of eval_horDiff16_bb4_in/6 
* Loop 9: eval_horDiff16_bb4_in(V_4,V_wc_0,V_i_0,B,C,D)->  eval_horDiff16_bb4_in(V_4,V_wc_0,V_i_0',B',C,D)
                  [V_4>=V_i_0+4,V_i_0>=1,V_i_0=V_i_0'+1,B'=2,B=2] 
* Loop 10: eval_horDiff16_bb4_in(A,B,C,D,A,B) [A>=C+4,0>=C,D=2] 

### Ranking functions of CR eval_horDiff16_bb4_in(V_4,V_wc_0,V_i_0,B,C,D) 
* RF of phase [9]: [V_i_0]

#### Partial ranking functions of CR eval_horDiff16_bb4_in(V_4,V_wc_0,V_i_0,B,C,D) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_i_0


### Resulting Chains:eval_horDiff16_bb4_in(V_4,V_wc_0,V_i_0,B,C,D) 
* [[9],10]
* [10]


### Merging Chains  eval_horDiff16_bb4_in/6 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[9]]] --> 2 


### Specialization of cost equations eval_horDiff16_bb2_in/3 
* CE 11 is refined into CE [17,18] 
* CE 12 is refined into CE [19] 
* CE 9 is refined into CE [20,21] 
* CE 10 is refined into CE [22] 


#### Refined cost equations eval_horDiff16_bb2_in/3 
* CE 17: eval_horDiff16_bb2_in(V_4,V_wc_0,B) = 2+ eval_horDiff16_bb4_in(V_4,V_wc_0,C,D,V_4,V_wc_0):1+ eval_horDiff16_bb2_in(V_4,E,F)
     [V_wc_0>=V_4+1,4>=V_4,V_4+E=V_wc_0,V_4=C+4,F=3,D=2,B=3] 
* CE 18: eval_horDiff16_bb2_in(V_4,V_wc_0,B) = 2+ eval_horDiff16_bb4_in(V_4,V_wc_0,C,D,V_4,V_wc_0):2+ eval_horDiff16_bb2_in(V_4,E,F)
     [V_wc_0>=V_4+1,V_4>=5,V_4+E=V_wc_0,V_4=C+4,F=3,D=2,B=3] 
* CE 19: eval_horDiff16_bb2_in(V_4,V_wc_0,B) = 1+ eval_horDiff16_bb2_in(V_4,C,D)
     [V_wc_0>=V_4+1,V_4+C=V_wc_0,D=3,B=3] 
* CE 20: eval_horDiff16_bb2_in(V_4,V_wc_0,B) = 1+ eval_horDiff16_bb4_in(V_4,V_wc_0,C,D,V_4,V_wc_0):1
     [V_4>=V_wc_0,4>=V_4,V_4=C+4,D=2,B=3] 
* CE 21: eval_horDiff16_bb2_in(V_4,V_wc_0,B) = 1+ eval_horDiff16_bb4_in(V_4,V_wc_0,C,D,V_4,V_wc_0):2
     [V_4>=V_wc_0,V_4>=5,V_4=C+4,D=2,B=3] 
* CE 22: eval_horDiff16_bb2_in(V_4,V_wc_0,B) = 0
     [V_4>=V_wc_0,B=3] 

### Cost equations --> "Loop" of eval_horDiff16_bb2_in/3 
* CEs [21] --> Loop 11 
* CEs [20,22] --> Loop 12 
* CEs [18] --> Loop 13 
* CEs [17,19] --> Loop 14 

#### Loops of eval_horDiff16_bb2_in/3 
* Loop 11: eval_horDiff16_bb2_in(V_4,V_wc_0,B) [V_4>=V_wc_0,V_4>=5,B=3] 
* Loop 12: eval_horDiff16_bb2_in(V_4,V_wc_0,B) [V_4>=V_wc_0,B=3] 
* Loop 13: eval_horDiff16_bb2_in(V_4,V_wc_0,B)->  eval_horDiff16_bb2_in(V_4,V_wc_0',B')
                  [V_wc_0>=V_4+1,V_4>=5,V_4+V_wc_0'=V_wc_0,B'=3,B=3] 
* Loop 14: eval_horDiff16_bb2_in(V_4,V_wc_0,B)->  eval_horDiff16_bb2_in(V_4,V_wc_0',B')
                  [V_wc_0>=V_4+1,V_4+V_wc_0'=V_wc_0,B'=3,B=3] 

### Ranking functions of CR eval_horDiff16_bb2_in(V_4,V_wc_0,B) 

#### Partial ranking functions of CR eval_horDiff16_bb2_in(V_4,V_wc_0,B) 
* Partial RF of phase [13,14]:
  - RF of loop [13:1]:
    -V_4/5+V_wc_0/5 depends on loops [14:1] 
    V_wc_0/5-1 depends on loops [14:1] 


### Resulting Chains:eval_horDiff16_bb2_in(V_4,V_wc_0,B) 
* [[13,14]]...
* [[13,14],12]
* [[13,14],11]
* [12]
* [11]


### Merging Chains  eval_horDiff16_bb2_in/3 into  External patterns of execution 
* [[11,[13,14]],[12,[13,14]]] --> 1 
* [[11],[12]] --> 2 
* [[[13,14]]] --> 3 


### Specialization of cost equations eval_horDiff16_bb0_in/2 
* CE 4 is refined into CE [23,24,25] 
* CE 7 is refined into CE [26] 
* CE 5 is refined into CE [27,28] 
* CE 8 is refined into CE [29] 
* CE 3 is refined into CE [30,31] 
* CE 6 is refined into CE [32] 


#### Refined cost equations eval_horDiff16_bb0_in/2 
* CE 23: eval_horDiff16_bb0_in(V_cc,B) = 1+ eval_horDiff16_bb2_in(C,D,E):1
     [2*C+2*D+1>=V_cc,V_cc>=2*C+2*D,D>=C+1,C>=1,E=3] 
* CE 24: eval_horDiff16_bb0_in(V_cc,B) = 1+ eval_horDiff16_bb2_in(C,D,E):2
     [2*C+2*D+1>=V_cc,V_cc>=2*C+2*D,C>=D,V_cc>=1,E=3] 
* CE 25: eval_horDiff16_bb0_in(V_cc,B) = 1+ eval_horDiff16_bb2_in(C,D,E):3
     [2*C+2*D+1>=V_cc,V_cc>=2*C+2*D,D>=C+1,V_cc>=1,E=3] 
* CE 26: eval_horDiff16_bb0_in(V_cc,B) = 0
     [V_cc>=1] 
* CE 27: eval_horDiff16_bb0_in(V_cc,B) = 1+ eval_horDiff16_bb2_in(C,D,E):2
     [2*C+2*D>=V_cc,V_cc+1>=2*C+2*D,C>=D,0>=V_cc+1,E=3] 
* CE 28: eval_horDiff16_bb0_in(V_cc,B) = 1+ eval_horDiff16_bb2_in(C,D,E):3
     [2*C+2*D>=V_cc,V_cc+1>=2*C+2*D,D>=C+1,0>=V_cc+1,E=3] 
* CE 29: eval_horDiff16_bb0_in(V_cc,B) = 0
     [0>=V_cc+1] 
* CE 30: eval_horDiff16_bb0_in(V_cc,B) = 1+ eval_horDiff16_bb2_in(C,D,E):2
     [0>=D,C+D=0,E=3,V_cc=0] 
* CE 31: eval_horDiff16_bb0_in(V_cc,B) = 1+ eval_horDiff16_bb2_in(C,D,E):3
     [0>=2*C+1,C+D=0,E=3,V_cc=0] 
* CE 32: eval_horDiff16_bb0_in(V_cc,B) = 0
     [V_cc=0] 

### Cost equations --> "Loop" of eval_horDiff16_bb0_in/2 
* CEs [23,24,26] --> Loop 15 
* CEs [27,29] --> Loop 16 
* CEs [30,32] --> Loop 17 
* CEs [25] --> Loop 18 
* CEs [28] --> Loop 19 
* CEs [31] --> Loop 20 

#### Loops of eval_horDiff16_bb0_in/2 
* Loop 15: eval_horDiff16_bb0_in(V_cc,B) [V_cc>=1] 
* Loop 16: eval_horDiff16_bb0_in(V_cc,B) [0>=V_cc+1] 
* Loop 17: eval_horDiff16_bb0_in(V_cc,B) [V_cc=0] 
* Loop 18: eval_horDiff16_bb0_in(V_cc,B) [V_cc>=1] 
* Loop 19: eval_horDiff16_bb0_in(V_cc,B) [0>=V_cc+1] 
* Loop 20: eval_horDiff16_bb0_in(V_cc,B) [V_cc=0] 

### Ranking functions of CR eval_horDiff16_bb0_in(V_cc,B) 

#### Partial ranking functions of CR eval_horDiff16_bb0_in(V_cc,B) 


### Resulting Chains:eval_horDiff16_bb0_in(V_cc,B) 
* [20]...
* [19]...
* [18]...
* [17]
* [16]
* [15]


### Merging Chains  eval_horDiff16_bb0_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 
* [[20]] --> 4 
* [[19]] --> 5 
* [[18]] --> 6 


### Specialization of cost equations eval_horDiff16_start/2 
* CE 2 is refined into CE [33,34,35,36,37,38] 


#### Refined cost equations eval_horDiff16_start/2 
* CE 33: eval_horDiff16_start(V_cc,B) = 0+ eval_horDiff16_bb0_in(C,B):1
     [C=0,V_cc=0] 
* CE 34: eval_horDiff16_start(V_cc,B) = 0+ eval_horDiff16_bb0_in(V_cc,B):2
     [0>=V_cc+1] 
* CE 35: eval_horDiff16_start(V_cc,B) = 0+ eval_horDiff16_bb0_in(V_cc,B):3
     [V_cc>=1] 
* CE 36: eval_horDiff16_start(V_cc,B) = 0+ eval_horDiff16_bb0_in(C,B):4
     [C=0,V_cc=0] 
* CE 37: eval_horDiff16_start(V_cc,B) = 0+ eval_horDiff16_bb0_in(V_cc,B):5
     [0>=V_cc+1] 
* CE 38: eval_horDiff16_start(V_cc,B) = 0+ eval_horDiff16_bb0_in(V_cc,B):6
     [V_cc>=1] 

### Cost equations --> "Loop" of eval_horDiff16_start/2 
* CEs [38] --> Loop 21 
* CEs [37] --> Loop 22 
* CEs [36] --> Loop 23 
* CEs [35] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [33] --> Loop 26 

#### Loops of eval_horDiff16_start/2 
* Loop 21: eval_horDiff16_start(V_cc,B) [V_cc>=1] 
* Loop 22: eval_horDiff16_start(V_cc,B) [0>=V_cc+1] 
* Loop 23: eval_horDiff16_start(V_cc,B) [V_cc=0] 
* Loop 24: eval_horDiff16_start(V_cc,B) [V_cc>=1] 
* Loop 25: eval_horDiff16_start(V_cc,B) [0>=V_cc+1] 
* Loop 26: eval_horDiff16_start(V_cc,B) [V_cc=0] 

### Ranking functions of CR eval_horDiff16_start(V_cc,B) 

#### Partial ranking functions of CR eval_horDiff16_start(V_cc,B) 


### Resulting Chains:eval_horDiff16_start(V_cc,B) 
* [26]
* [25]
* [24]
* [23]...
* [22]...
* [21]...


### Merging Chains  eval_horDiff16_start/2 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 
* [[24]] --> 3 
* [[23]] --> 4 
* [[22]] --> 5 
* [[21]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_horDiff16_bb4_in(V_4,V_wc_0,V_i_0,B,C,D) -> [eval_horDiff16_bb4_in(V_4',V_wc_0',V_i_0',B',C',D')] 
1
#### Cost of phase [9]:eval_horDiff16_bb4_in(V_4,V_wc_0,V_i_0,B,C,D) -> [eval_horDiff16_bb4_in(V_4',V_wc_0',V_i_0',B',C',D')] 
1*it(9)+0
  Such that:it(9) =< V_i_0
it(9) =< V_i_0-V_i_0'

#### Cost of chains of eval_horDiff16_bb4_in(V_4,V_wc_0,V_i_0,B,C,D):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V_i_0

  with precondition: [B=2,V_4=C,V_wc_0=D,V_i_0>=1,V_4>=V_i_0+4] 

* Chain [10]: 0
  with precondition: [B=2,D=V_wc_0,V_4=C,0>=V_i_0,V_4>=V_i_0+4] 


#### Cost of loops [13,14] 

 * loop 13:eval_horDiff16_bb2_in(V_4,V_wc_0,B) -> [eval_horDiff16_bb2_in(V_4',V_wc_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_4'

 * loop 14:eval_horDiff16_bb2_in(V_4,V_wc_0,B) -> [eval_horDiff16_bb2_in(V_4',V_wc_0',B')] 
2
#### Cost of phase [13,14]:eval_horDiff16_bb2_in(V_4,V_wc_0,B) -> [eval_horDiff16_bb2_in(V_4',V_wc_0',B')] 
2*it(13)+2*it(14)+1*s(3)+0
#### Cost of phase [13,14]:eval_horDiff16_bb2_in(V_4,V_wc_0,B) -> [eval_horDiff16_bb2_in(V_4',V_wc_0',B')] 
2*it(13)+2*it(14)+1*s(3)+0
#### Cost of phase [13,14]:eval_horDiff16_bb2_in(V_4,V_wc_0,B) -> [eval_horDiff16_bb2_in(V_4',V_wc_0',B')] 
2*it(13)+2*it(14)+1*s(3)+0
#### Cost of chains of eval_horDiff16_bb2_in(V_4,V_wc_0,B):
* Chain [[13,14]]...: 5*it(13)+0
  with precondition: [V_wc_0>=V_4+1,B=3] 

* Chain [[13,14],12]: 5*it(13)+1
  with precondition: [B=3,V_4>=1,V_wc_0>=V_4+1] 

* Chain [[13,14],11]: 5*it(13)+1*s(4)+1
  Such that:s(4) =< V_4

  with precondition: [B=3,V_4>=5,V_wc_0>=V_4+1] 

* Chain [12]: 1
  with precondition: [B=3,V_4>=V_wc_0] 

* Chain [11]: 1*s(4)+1
  Such that:s(4) =< V_4

  with precondition: [B=3,V_4>=5,V_4>=V_wc_0] 


#### Cost of chains of eval_horDiff16_bb0_in(V_cc,B):
* Chain [20]...: 5*s(9)+1
  with precondition: [V_cc=0] 

* Chain [19]...: 5*s(10)+1
  with precondition: [0>=V_cc+1] 

* Chain [18]...: 5*s(11)+1
  with precondition: [V_cc>=1] 

* Chain [17]: 1*aux(20)+0
  with precondition: [V_cc=0] 

* Chain [16]: 1*aux(21)+0
  with precondition: [0>=V_cc+1] 

* Chain [15]: 1*s(14)+11*s(15)+2
  Such that:s(14) =< V_cc/4

  with precondition: [V_cc>=1] 


#### Cost of chains of eval_horDiff16_start(V_cc,B):
* Chain [26]: 1*s(17)+0
  with precondition: [V_cc=0] 

* Chain [25]: 1*s(18)+0
  with precondition: [0>=V_cc+1] 

* Chain [24]: 1*s(19)+11*s(20)+2
  Such that:s(19) =< V_cc/4

  with precondition: [V_cc>=1] 

* Chain [23]...: 5*s(21)+1
  with precondition: [V_cc=0] 

* Chain [22]...: 5*s(22)+1
  with precondition: [0>=V_cc+1] 

* Chain [21]...: 5*s(23)+1
  with precondition: [V_cc>=1] 


Closed-form bounds of eval_horDiff16_start(V_cc,B): 
-------------------------------------
* Chain [26] with precondition: [V_cc=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [25] with precondition: [0>=V_cc+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24] with precondition: [V_cc>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [V_cc=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [0>=V_cc+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [V_cc>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_horDiff16_start(V_cc,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 74 ms.
* Invariants computed in 68 ms.
   - Backward Invariants 34 ms.
   - Transitive Invariants 13 ms.
* Refinement performed in 136 ms.
* Termination proved in 17 ms.
* Upper bounds computed in 187 ms.
   - Equation cost structures 51 ms.
   - Phase cost structures 119 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 558 ms.

