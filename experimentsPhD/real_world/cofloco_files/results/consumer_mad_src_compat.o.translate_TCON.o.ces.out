Warning: Ignored call to eval_translate_TCON_stop/1 in equation eval_translate_TCON_36/1 
Warning: Ignored call to eval_translate_TCON_stop/1 in equation eval_translate_TCON_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_translate_TCON_36/1]
1. non_recursive  : [eval_translate_TCON_35/1]
2. non_recursive  : [eval_translate_TCON_bb15_in/1]
3. non_recursive  : [eval_translate_TCON_34/1]
4. non_recursive  : [eval_translate_TCON_33/1]
5. non_recursive  : [eval_translate_TCON_bb13_in/1]
6. non_recursive  : [eval_translate_TCON_bb12_in/1]
7. recursive  : [eval_translate_TCON_bb5_in/1]
8. recursive  : [eval_translate_TCON_27/1,eval_translate_TCON_28/2,eval_translate_TCON__critedge_in/1,eval_translate_TCON_bb3_in/1,eval_translate_TCON_bb9_in/1,loop_cont_eval_translate_TCON_bb5_in/2]
9. non_recursive  : [eval_translate_TCON_32/1]
10. non_recursive  : [eval_translate_TCON_31/1]
11. non_recursive  : [eval_translate_TCON_bb10_in/1]
12. non_recursive  : [loop_cont_eval_translate_TCON_bb3_in/2]
13. non_recursive  : [eval_translate_TCON_14/1]
14. non_recursive  : [eval_translate_TCON_13/3]
15. non_recursive  : [eval_translate_TCON_8/1]
16. non_recursive  : [eval_translate_TCON_7/2]
17. non_recursive  : [eval_translate_TCON_bb0_in/1]
18. non_recursive  : [eval_translate_TCON_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_translate_TCON_bb13_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_translate_TCON_bb5_in/1
8. SCC is partially evaluated into eval_translate_TCON_bb3_in/1
9. SCC is partially evaluated into eval_translate_TCON_32/1
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_translate_TCON_bb10_in/1
12. SCC is partially evaluated into loop_cont_eval_translate_TCON_bb3_in/2
13. SCC is partially evaluated into eval_translate_TCON_14/1
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_translate_TCON_8/1
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_translate_TCON_bb0_in/1
18. SCC is partially evaluated into eval_translate_TCON_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_translate_TCON_bb13_in/1 
* CE 7 is refined into CE [20] 


#### Refined cost equations eval_translate_TCON_bb13_in/1 
* CE 20: eval_translate_TCON_bb13_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_translate_TCON_bb13_in/1 
* CEs [20] --> Loop 15 

#### Loops of eval_translate_TCON_bb13_in/1 
* Loop 15: eval_translate_TCON_bb13_in(B) [] 

### Ranking functions of CR eval_translate_TCON_bb13_in(B) 

#### Partial ranking functions of CR eval_translate_TCON_bb13_in(B) 


### Resulting Chains:eval_translate_TCON_bb13_in(B) 
* [15]


### Merging Chains  eval_translate_TCON_bb13_in/1 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_translate_TCON_bb5_in/1 
* CE 16 is refined into CE [21] 
* CE 15 is refined into CE [22] 


#### Refined cost equations eval_translate_TCON_bb5_in/1 
* CE 21: eval_translate_TCON_bb5_in(B) = 0
     [B=2] 
* CE 22: eval_translate_TCON_bb5_in(B) = 1+ eval_translate_TCON_bb5_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_translate_TCON_bb5_in/1 
* CEs [22] --> Loop 16 
* CEs [21] --> Loop 17 

#### Loops of eval_translate_TCON_bb5_in/1 
* Loop 16: eval_translate_TCON_bb5_in(B)->  eval_translate_TCON_bb5_in(B')
                  [B'=2,B=2] 
* Loop 17: eval_translate_TCON_bb5_in(B) [B=2] 

### Ranking functions of CR eval_translate_TCON_bb5_in(B) 

#### Partial ranking functions of CR eval_translate_TCON_bb5_in(B) 


### Resulting Chains:eval_translate_TCON_bb5_in(B) 
* [[16]]...
* [[16],17]
* [17]


### Merging Chains  eval_translate_TCON_bb5_in/1 into  External patterns of execution 
* [[17],[17,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations eval_translate_TCON_bb3_in/1 
* CE 12 is refined into CE [23] 
* CE 11 is refined into CE [24,25] 
* CE 10 is refined into CE [26,27] 


#### Refined cost equations eval_translate_TCON_bb3_in/1 
* CE 23: eval_translate_TCON_bb3_in(B) = 0
     [B=4] 
* CE 24: eval_translate_TCON_bb3_in(B) = 1+ eval_translate_TCON_bb5_in(C):1
     [C=2,B=3] 
* CE 25: eval_translate_TCON_bb3_in(B) = 1+ eval_translate_TCON_bb5_in(C):2
     [C=2,B=3] 
* CE 26: eval_translate_TCON_bb3_in(B) = 2+ eval_translate_TCON_bb5_in(C):1+ eval_translate_TCON_bb3_in(B)
     [C=2] 
* CE 27: eval_translate_TCON_bb3_in(B) = 2+ eval_translate_TCON_bb5_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_translate_TCON_bb3_in/1 
* CEs [25,27] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [24] --> Loop 21 

#### Loops of eval_translate_TCON_bb3_in/1 
* Loop 18: eval_translate_TCON_bb3_in(B) [] 
* Loop 19: eval_translate_TCON_bb3_in(B)->  eval_translate_TCON_bb3_in(B)
                  [] 
* Loop 20: eval_translate_TCON_bb3_in(B) [B=4] 
* Loop 21: eval_translate_TCON_bb3_in(B) [B=3] 

### Ranking functions of CR eval_translate_TCON_bb3_in(B) 

#### Partial ranking functions of CR eval_translate_TCON_bb3_in(B) 


### Resulting Chains:eval_translate_TCON_bb3_in(B) 
* [[19]]...
* [[19],21]
* [[19],20]
* [[19],18]...
* [21]
* [20]
* [18]...


### Merging Chains  eval_translate_TCON_bb3_in/1 into  External patterns of execution 
* [[21],[21,[19]]] --> 1 
* [[20],[20,[19]]] --> 2 
* [[18],[[19]],[18,[19]]] --> 3 


### Specialization of cost equations eval_translate_TCON_32/1 
* CE 19 is refined into CE [28] 


#### Refined cost equations eval_translate_TCON_32/1 
* CE 28: eval_translate_TCON_32(B) = 0+ eval_translate_TCON_bb13_in(B):1
     [] 

### Cost equations --> "Loop" of eval_translate_TCON_32/1 
* CEs [28] --> Loop 22 

#### Loops of eval_translate_TCON_32/1 
* Loop 22: eval_translate_TCON_32(B) [] 

### Ranking functions of CR eval_translate_TCON_32(B) 

#### Partial ranking functions of CR eval_translate_TCON_32(B) 


### Resulting Chains:eval_translate_TCON_32(B) 
* [22]


### Merging Chains  eval_translate_TCON_32/1 into  External patterns of execution 
* [[22]] --> 1 


### Specialization of cost equations eval_translate_TCON_bb10_in/1 
* CE 17 is refined into CE [29] 
* CE 18 is refined into CE [30] 


#### Refined cost equations eval_translate_TCON_bb10_in/1 
* CE 29: eval_translate_TCON_bb10_in(B) = 0+ eval_translate_TCON_32(B):1
     [] 
* CE 30: eval_translate_TCON_bb10_in(B) = 0+ eval_translate_TCON_bb13_in(B):1
     [] 

### Cost equations --> "Loop" of eval_translate_TCON_bb10_in/1 
* CEs [29,30] --> Loop 23 

#### Loops of eval_translate_TCON_bb10_in/1 
* Loop 23: eval_translate_TCON_bb10_in(B) [] 

### Ranking functions of CR eval_translate_TCON_bb10_in(B) 

#### Partial ranking functions of CR eval_translate_TCON_bb10_in(B) 


### Resulting Chains:eval_translate_TCON_bb10_in(B) 
* [23]


### Merging Chains  eval_translate_TCON_bb10_in/1 into  External patterns of execution 
* [[23]] --> 1 


### Specialization of cost equations loop_cont_eval_translate_TCON_bb3_in/2 
* CE 14 is refined into CE [31] 
* CE 13 is refined into CE [32] 


#### Refined cost equations loop_cont_eval_translate_TCON_bb3_in/2 
* CE 31: loop_cont_eval_translate_TCON_bb3_in(C,A) = 0+ eval_translate_TCON_bb10_in(A):1
     [C=4] 
* CE 32: loop_cont_eval_translate_TCON_bb3_in(C,A) = 0+ eval_translate_TCON_bb13_in(A):1
     [C=3] 

### Cost equations --> "Loop" of loop_cont_eval_translate_TCON_bb3_in/2 
* CEs [31] --> Loop 24 
* CEs [32] --> Loop 25 

#### Loops of loop_cont_eval_translate_TCON_bb3_in/2 
* Loop 24: loop_cont_eval_translate_TCON_bb3_in(C,A) [C=4] 
* Loop 25: loop_cont_eval_translate_TCON_bb3_in(C,A) [C=3] 

### Ranking functions of CR loop_cont_eval_translate_TCON_bb3_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_translate_TCON_bb3_in(C,A) 


### Resulting Chains:loop_cont_eval_translate_TCON_bb3_in(C,A) 
* [25]
* [24]


### Merging Chains  loop_cont_eval_translate_TCON_bb3_in/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_translate_TCON_14/1 
* CE 8 is refined into CE [33] 
* CE 9 is refined into CE [34,35,36] 


#### Refined cost equations eval_translate_TCON_14/1 
* CE 33: eval_translate_TCON_14(B) = 0+ eval_translate_TCON_bb13_in(B):1
     [] 
* CE 34: eval_translate_TCON_14(B) = 1+ eval_translate_TCON_bb3_in(C):1+ loop_cont_eval_translate_TCON_bb3_in(D,B):1
     [D=3,C=3] 
* CE 35: eval_translate_TCON_14(B) = 1+ eval_translate_TCON_bb3_in(C):2+ loop_cont_eval_translate_TCON_bb3_in(D,B):2
     [D=4,C=4] 
* CE 36: eval_translate_TCON_14(B) = 1+ eval_translate_TCON_bb3_in(C):3
     [] 

### Cost equations --> "Loop" of eval_translate_TCON_14/1 
* CEs [36] --> Loop 26 
* CEs [33,34,35] --> Loop 27 

#### Loops of eval_translate_TCON_14/1 
* Loop 26: eval_translate_TCON_14(B) [] 
* Loop 27: eval_translate_TCON_14(B) [] 

### Ranking functions of CR eval_translate_TCON_14(B) 

#### Partial ranking functions of CR eval_translate_TCON_14(B) 


### Resulting Chains:eval_translate_TCON_14(B) 
* [27]
* [26]...


### Merging Chains  eval_translate_TCON_14/1 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations eval_translate_TCON_8/1 
* CE 5 is refined into CE [37] 
* CE 6 is refined into CE [38,39] 


#### Refined cost equations eval_translate_TCON_8/1 
* CE 37: eval_translate_TCON_8(B) = 0+ eval_translate_TCON_bb13_in(B):1
     [] 
* CE 38: eval_translate_TCON_8(B) = 0+ eval_translate_TCON_14(B):1
     [] 
* CE 39: eval_translate_TCON_8(B) = 0+ eval_translate_TCON_14(B):2
     [] 

### Cost equations --> "Loop" of eval_translate_TCON_8/1 
* CEs [39] --> Loop 28 
* CEs [37,38] --> Loop 29 

#### Loops of eval_translate_TCON_8/1 
* Loop 28: eval_translate_TCON_8(B) [] 
* Loop 29: eval_translate_TCON_8(B) [] 

### Ranking functions of CR eval_translate_TCON_8(B) 

#### Partial ranking functions of CR eval_translate_TCON_8(B) 


### Resulting Chains:eval_translate_TCON_8(B) 
* [29]
* [28]...


### Merging Chains  eval_translate_TCON_8/1 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_translate_TCON_bb0_in/1 
* CE 3 is refined into CE [40,41] 
* CE 4 is refined into CE [42] 


#### Refined cost equations eval_translate_TCON_bb0_in/1 
* CE 40: eval_translate_TCON_bb0_in(B) = 0+ eval_translate_TCON_8(B):1
     [] 
* CE 41: eval_translate_TCON_bb0_in(B) = 0+ eval_translate_TCON_8(B):2
     [] 
* CE 42: eval_translate_TCON_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_translate_TCON_bb0_in/1 
* CEs [40,42] --> Loop 30 
* CEs [41] --> Loop 31 

#### Loops of eval_translate_TCON_bb0_in/1 
* Loop 30: eval_translate_TCON_bb0_in(B) [] 
* Loop 31: eval_translate_TCON_bb0_in(B) [] 

### Ranking functions of CR eval_translate_TCON_bb0_in(B) 

#### Partial ranking functions of CR eval_translate_TCON_bb0_in(B) 


### Resulting Chains:eval_translate_TCON_bb0_in(B) 
* [31]...
* [30]


### Merging Chains  eval_translate_TCON_bb0_in/1 into  External patterns of execution 
* [[30]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations eval_translate_TCON_start/2 
* CE 2 is refined into CE [43,44] 


#### Refined cost equations eval_translate_TCON_start/2 
* CE 43: eval_translate_TCON_start(V_length,B) = 0+ eval_translate_TCON_bb0_in(B):1
     [] 
* CE 44: eval_translate_TCON_start(V_length,B) = 0+ eval_translate_TCON_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_translate_TCON_start/2 
* CEs [44] --> Loop 32 
* CEs [43] --> Loop 33 

#### Loops of eval_translate_TCON_start/2 
* Loop 32: eval_translate_TCON_start(V_length,B) [] 
* Loop 33: eval_translate_TCON_start(V_length,B) [] 

### Ranking functions of CR eval_translate_TCON_start(V_length,B) 

#### Partial ranking functions of CR eval_translate_TCON_start(V_length,B) 


### Resulting Chains:eval_translate_TCON_start(V_length,B) 
* [33]
* [32]...


### Merging Chains  eval_translate_TCON_start/2 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of eval_translate_TCON_bb13_in(B):
* Chain [15]: 0
  with precondition: [] 


#### Cost of loops [16] 

 * loop 16:eval_translate_TCON_bb5_in(B) -> [eval_translate_TCON_bb5_in(B')] 
1
#### Cost of phase [16]:eval_translate_TCON_bb5_in(B) -> [eval_translate_TCON_bb5_in(B')] 
1*it(16)+0
#### Cost of phase [16]:eval_translate_TCON_bb5_in(B) -> [eval_translate_TCON_bb5_in(B')] 
1*it(16)+0
#### Cost of chains of eval_translate_TCON_bb5_in(B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [B=2] 

* Chain [[16],17]: 1*it(16)+0
  with precondition: [B=2] 

* Chain [17]: 0
  with precondition: [B=2] 


#### Cost of loops [19] 

 * loop 19:eval_translate_TCON_bb3_in(B) -> [eval_translate_TCON_bb3_in(B')] 
1*s(3)+2
#### Cost of phase [19]:eval_translate_TCON_bb3_in(B) -> [eval_translate_TCON_bb3_in(B')] 
3*it(19)+0
#### Cost of phase [19]:eval_translate_TCON_bb3_in(B) -> [eval_translate_TCON_bb3_in(B')] 
3*it(19)+0
#### Cost of phase [19]:eval_translate_TCON_bb3_in(B) -> [eval_translate_TCON_bb3_in(B')] 
3*it(19)+0
#### Cost of phase [19]:eval_translate_TCON_bb3_in(B) -> [eval_translate_TCON_bb3_in(B')] 
3*it(19)+0
#### Cost of chains of eval_translate_TCON_bb3_in(B):
* Chain [[19]]...: 3*it(19)+0
  with precondition: [] 

* Chain [[19],21]: 4*it(19)+1
  with precondition: [B=3] 

* Chain [[19],20]: 3*it(19)+0
  with precondition: [B=4] 

* Chain [[19],18]...: 4*aux(2)+0
  with precondition: [] 

* Chain [21]: 1*s(5)+1
  with precondition: [B=3] 

* Chain [20]: 0
  with precondition: [B=4] 

* Chain [18]...: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_translate_TCON_32(B):
* Chain [22]: 0
  with precondition: [] 


#### Cost of chains of eval_translate_TCON_bb10_in(B):
* Chain [23]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_translate_TCON_bb3_in(C,A):
* Chain [25]: 0
  with precondition: [C=3] 

* Chain [24]: 0
  with precondition: [C=4] 


#### Cost of chains of eval_translate_TCON_14(B):
* Chain [27]: 1*aux(6)+0
  with precondition: [] 

* Chain [26]...: 1*s(16)+1
  with precondition: [] 


#### Cost of chains of eval_translate_TCON_8(B):
* Chain [29]: 1*aux(7)+0
  with precondition: [] 

* Chain [28]...: 1*s(18)+1
  with precondition: [] 


#### Cost of chains of eval_translate_TCON_bb0_in(B):
* Chain [31]...: 1*s(19)+1
  with precondition: [] 

* Chain [30]: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_translate_TCON_start(V_length,B):
* Chain [33]: 1*s(21)+0
  with precondition: [] 

* Chain [32]...: 1*s(22)+1
  with precondition: [] 


Closed-form bounds of eval_translate_TCON_start(V_length,B): 
-------------------------------------
* Chain [33] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [32]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_translate_TCON_start(V_length,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 27 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 48 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 37 ms.
   - Equation cost structures 19 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 182 ms.

