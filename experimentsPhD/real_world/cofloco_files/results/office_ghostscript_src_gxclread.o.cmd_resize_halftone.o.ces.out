Warning: Ignored call to eval_cmd_resize_halftone_stop/1 in equation eval_cmd_resize_halftone_bb16_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_cmd_resize_halftone_bb16_in/1]
1. non_recursive  : [eval_cmd_resize_halftone_bb15_in/1]
2. non_recursive  : [eval_cmd_resize_halftone_29/1]
3. non_recursive  : [eval_cmd_resize_halftone_28/2]
4. non_recursive  : [eval_cmd_resize_halftone_bb13_in/2]
5. non_recursive  : [eval_cmd_resize_halftone_19/2]
6. non_recursive  : [eval_cmd_resize_halftone_18/2]
7. non_recursive  : [eval_cmd_resize_halftone_21/2]
8. non_recursive  : [eval_cmd_resize_halftone_20/2]
9. recursive  : [eval_cmd_resize_halftone_10/4,eval_cmd_resize_halftone_11/4,eval_cmd_resize_halftone_bb3_in/3]
10. non_recursive  : [eval_cmd_resize_halftone_13/1]
11. non_recursive  : [eval_cmd_resize_halftone_12/1]
12. non_recursive  : [eval_cmd_resize_halftone_15/1]
13. non_recursive  : [eval_cmd_resize_halftone_14/1]
14. non_recursive  : [loop_cont_eval_cmd_resize_halftone_bb3_in/2]
15. non_recursive  : [eval_cmd_resize_halftone_bb0_in/2]
16. non_recursive  : [eval_cmd_resize_halftone_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_cmd_resize_halftone_bb13_in/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_cmd_resize_halftone_bb3_in/3
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_cmd_resize_halftone_15/1
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into loop_cont_eval_cmd_resize_halftone_bb3_in/2
15. SCC is partially evaluated into eval_cmd_resize_halftone_bb0_in/2
16. SCC is partially evaluated into eval_cmd_resize_halftone_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cmd_resize_halftone_bb13_in/2 
* CE 11 is refined into CE [13] 


#### Refined cost equations eval_cmd_resize_halftone_bb13_in/2 
* CE 13: eval_cmd_resize_halftone_bb13_in(V_num_comp,B) = 0
     [] 

### Cost equations --> "Loop" of eval_cmd_resize_halftone_bb13_in/2 
* CEs [13] --> Loop 10 

#### Loops of eval_cmd_resize_halftone_bb13_in/2 
* Loop 10: eval_cmd_resize_halftone_bb13_in(V_num_comp,B) [] 

### Ranking functions of CR eval_cmd_resize_halftone_bb13_in(V_num_comp,B) 

#### Partial ranking functions of CR eval_cmd_resize_halftone_bb13_in(V_num_comp,B) 


### Resulting Chains:eval_cmd_resize_halftone_bb13_in(V_num_comp,B) 
* [10]


### Merging Chains  eval_cmd_resize_halftone_bb13_in/2 into  External patterns of execution 
* [[10]] --> 1 


### Specialization of cost equations eval_cmd_resize_halftone_bb3_in/3 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 6 is refined into CE [16] 


#### Refined cost equations eval_cmd_resize_halftone_bb3_in/3 
* CE 14: eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) = 0
     [V_num_comp>=V_i_0,B=3] 
* CE 15: eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) = 0
     [V_num_comp>=V_i_0,B=2] 
* CE 16: eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) = 1+ eval_cmd_resize_halftone_bb3_in(V_num_comp,C,B)
     [V_i_0>=V_num_comp+1,V_i_0=C+1] 

### Cost equations --> "Loop" of eval_cmd_resize_halftone_bb3_in/3 
* CEs [16] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_cmd_resize_halftone_bb3_in/3 
* Loop 11: eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B)->  eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0',B)
                  [V_i_0>=V_num_comp+1,V_i_0=V_i_0'+1] 
* Loop 12: eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) [V_num_comp>=V_i_0,B=3] 
* Loop 13: eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) [V_num_comp>=V_i_0,B=2] 

### Ranking functions of CR eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) 
* RF of phase [11]: [-V_num_comp+V_i_0]

#### Partial ranking functions of CR eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V_num_comp+V_i_0


### Resulting Chains:eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) 
* [[11],13]
* [[11],12]
* [13]
* [12]


### Merging Chains  eval_cmd_resize_halftone_bb3_in/3 into  External patterns of execution 
* [[13,[11]]] --> 1 
* [[13]] --> 2 
* [[12,[11]]] --> 3 
* [[12]] --> 4 


### Specialization of cost equations eval_cmd_resize_halftone_15/1 
* CE 12 is refined into CE [17] 


#### Refined cost equations eval_cmd_resize_halftone_15/1 
* CE 17: eval_cmd_resize_halftone_15(B) = 0
     [] 

### Cost equations --> "Loop" of eval_cmd_resize_halftone_15/1 
* CEs [17] --> Loop 14 

#### Loops of eval_cmd_resize_halftone_15/1 
* Loop 14: eval_cmd_resize_halftone_15(B) [] 

### Ranking functions of CR eval_cmd_resize_halftone_15(B) 

#### Partial ranking functions of CR eval_cmd_resize_halftone_15(B) 


### Resulting Chains:eval_cmd_resize_halftone_15(B) 
* [14]


### Merging Chains  eval_cmd_resize_halftone_15/1 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations loop_cont_eval_cmd_resize_halftone_bb3_in/2 
* CE 10 is refined into CE [18] 
* CE 9 is refined into CE [19] 


#### Refined cost equations loop_cont_eval_cmd_resize_halftone_bb3_in/2 
* CE 18: loop_cont_eval_cmd_resize_halftone_bb3_in(D,A) = 0+ eval_cmd_resize_halftone_15(A):1
     [D=3] 
* CE 19: loop_cont_eval_cmd_resize_halftone_bb3_in(D,A) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_cmd_resize_halftone_bb3_in/2 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 

#### Loops of loop_cont_eval_cmd_resize_halftone_bb3_in/2 
* Loop 15: loop_cont_eval_cmd_resize_halftone_bb3_in(D,A) [D=3] 
* Loop 16: loop_cont_eval_cmd_resize_halftone_bb3_in(D,A) [D=2] 

### Ranking functions of CR loop_cont_eval_cmd_resize_halftone_bb3_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_cmd_resize_halftone_bb3_in(D,A) 


### Resulting Chains:loop_cont_eval_cmd_resize_halftone_bb3_in(D,A) 
* [16]
* [15]


### Merging Chains  loop_cont_eval_cmd_resize_halftone_bb3_in/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_cmd_resize_halftone_bb0_in/2 
* CE 3 is refined into CE [20,21,22,23] 
* CE 4 is refined into CE [24] 
* CE 5 is refined into CE [25] 


#### Refined cost equations eval_cmd_resize_halftone_bb0_in/2 
* CE 20: eval_cmd_resize_halftone_bb0_in(V_num_comp,B) = 1+ eval_cmd_resize_halftone_bb3_in(V_num_comp,C,D):1+ loop_cont_eval_cmd_resize_halftone_bb3_in(E,B):1
     [C>=V_num_comp+1,E=2,D=2] 
* CE 21: eval_cmd_resize_halftone_bb0_in(V_num_comp,B) = 1+ eval_cmd_resize_halftone_bb3_in(V_num_comp,C,D):2+ loop_cont_eval_cmd_resize_halftone_bb3_in(E,B):1
     [V_num_comp>=C,E=2,D=2] 
* CE 22: eval_cmd_resize_halftone_bb0_in(V_num_comp,B) = 1+ eval_cmd_resize_halftone_bb3_in(V_num_comp,C,D):3+ loop_cont_eval_cmd_resize_halftone_bb3_in(E,B):2
     [C>=V_num_comp+1,E=3,D=3] 
* CE 23: eval_cmd_resize_halftone_bb0_in(V_num_comp,B) = 1+ eval_cmd_resize_halftone_bb3_in(V_num_comp,C,D):4+ loop_cont_eval_cmd_resize_halftone_bb3_in(E,B):2
     [V_num_comp>=C,E=3,D=3] 
* CE 24: eval_cmd_resize_halftone_bb0_in(V_num_comp,B) = 0+ eval_cmd_resize_halftone_bb13_in(V_num_comp,B):1
     [] 
* CE 25: eval_cmd_resize_halftone_bb0_in(V_num_comp,B) = 0
     [] 

### Cost equations --> "Loop" of eval_cmd_resize_halftone_bb0_in/2 
* CEs [20,21,22,23,24,25] --> Loop 17 

#### Loops of eval_cmd_resize_halftone_bb0_in/2 
* Loop 17: eval_cmd_resize_halftone_bb0_in(V_num_comp,B) [] 

### Ranking functions of CR eval_cmd_resize_halftone_bb0_in(V_num_comp,B) 

#### Partial ranking functions of CR eval_cmd_resize_halftone_bb0_in(V_num_comp,B) 


### Resulting Chains:eval_cmd_resize_halftone_bb0_in(V_num_comp,B) 
* [17]


### Merging Chains  eval_cmd_resize_halftone_bb0_in/2 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations eval_cmd_resize_halftone_start/2 
* CE 2 is refined into CE [26] 


#### Refined cost equations eval_cmd_resize_halftone_start/2 
* CE 26: eval_cmd_resize_halftone_start(V_num_comp,B) = 0+ eval_cmd_resize_halftone_bb0_in(V_num_comp,B):1
     [] 

### Cost equations --> "Loop" of eval_cmd_resize_halftone_start/2 
* CEs [26] --> Loop 18 

#### Loops of eval_cmd_resize_halftone_start/2 
* Loop 18: eval_cmd_resize_halftone_start(V_num_comp,B) [] 

### Ranking functions of CR eval_cmd_resize_halftone_start(V_num_comp,B) 

#### Partial ranking functions of CR eval_cmd_resize_halftone_start(V_num_comp,B) 


### Resulting Chains:eval_cmd_resize_halftone_start(V_num_comp,B) 
* [18]


### Merging Chains  eval_cmd_resize_halftone_start/2 into  External patterns of execution 
* [[18]] --> 1 


Computing Bounds
=====================================

#### Cost of chains of eval_cmd_resize_halftone_bb13_in(V_num_comp,B):
* Chain [10]: 0
  with precondition: [] 


#### Cost of loops [11] 

 * loop 11:eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) -> [eval_cmd_resize_halftone_bb3_in(V_num_comp',V_i_0',B')] 
1
#### Cost of phase [11]:eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) -> [eval_cmd_resize_halftone_bb3_in(V_num_comp',V_i_0',B')] 
1*it(11)+0
  Such that:it(11) =< -V_num_comp+V_i_0
it(11) =< -V_num_comp+V_i_0+V_num_comp'-V_i_0'

#### Cost of phase [11]:eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B) -> [eval_cmd_resize_halftone_bb3_in(V_num_comp',V_i_0',B')] 
1*it(11)+0
  Such that:it(11) =< -V_num_comp+V_i_0
it(11) =< -V_num_comp+V_i_0+V_num_comp'-V_i_0'

#### Cost of chains of eval_cmd_resize_halftone_bb3_in(V_num_comp,V_i_0,B):
* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< -V_num_comp+V_i_0

  with precondition: [B=2,V_i_0>=V_num_comp+1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< -V_num_comp+V_i_0

  with precondition: [B=3,V_i_0>=V_num_comp+1] 

* Chain [13]: 0
  with precondition: [B=2,V_num_comp>=V_i_0] 

* Chain [12]: 0
  with precondition: [B=3,V_num_comp>=V_i_0] 


#### Cost of chains of eval_cmd_resize_halftone_15(B):
* Chain [14]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_cmd_resize_halftone_bb3_in(D,A):
* Chain [16]: 0
  with precondition: [D=2] 

* Chain [15]: 0
  with precondition: [D=3] 


#### Cost of chains of eval_cmd_resize_halftone_bb0_in(V_num_comp,B):
* Chain [17]: 1*aux(1)+0
  with precondition: [] 


#### Cost of chains of eval_cmd_resize_halftone_start(V_num_comp,B):
* Chain [18]: 1*s(3)+0
  with precondition: [] 


Closed-form bounds of eval_cmd_resize_halftone_start(V_num_comp,B): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_cmd_resize_halftone_start(V_num_comp,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 6 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 16 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 12 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 59 ms.

