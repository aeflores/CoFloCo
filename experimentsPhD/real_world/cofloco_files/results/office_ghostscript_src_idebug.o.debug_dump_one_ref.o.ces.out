Warning: Ignored call to eval_debug_dump_one_ref_stop/1 in equation eval_debug_dump_one_ref_39/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_debug_dump_one_ref_23/6,eval_debug_dump_one_ref_24/6,eval_debug_dump_one_ref_bb5_in/5,eval_debug_dump_one_ref_bb8_in/5]
1. non_recursive  : [eval_debug_dump_one_ref_39/1]
2. non_recursive  : [eval_debug_dump_one_ref_38/2]
3. non_recursive  : [eval_debug_dump_one_ref_bb12_in/2]
4. non_recursive  : [eval_debug_dump_one_ref_37/2]
5. non_recursive  : [eval_debug_dump_one_ref_36/2]
6. non_recursive  : [eval_debug_dump_one_ref_35/2]
7. non_recursive  : [eval_debug_dump_one_ref_34/2]
8. non_recursive  : [eval_debug_dump_one_ref_30/2]
9. non_recursive  : [eval_debug_dump_one_ref_29/2]
10. non_recursive  : [eval_debug_dump_one_ref_28/4]
11. non_recursive  : [loop_cont_eval_debug_dump_one_ref_bb5_in/5]
12. non_recursive  : [eval_debug_dump_one_ref_12/2]
13. non_recursive  : [eval_debug_dump_one_ref_11/2]
14. non_recursive  : [eval_debug_dump_one_ref_7/2]
15. non_recursive  : [eval_debug_dump_one_ref_6/3]
16. non_recursive  : [eval_debug_dump_one_ref_9/2]
17. non_recursive  : [eval_debug_dump_one_ref_8/2]
18. non_recursive  : [eval_debug_dump_one_ref_bb0_in/2]
19. non_recursive  : [eval_debug_dump_one_ref_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_debug_dump_one_ref_bb5_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_debug_dump_one_ref_35/2
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_debug_dump_one_ref_30/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_debug_dump_one_ref_12/2
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_debug_dump_one_ref_7/2
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_debug_dump_one_ref_9/2
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_debug_dump_one_ref_bb0_in/2
19. SCC is partially evaluated into eval_debug_dump_one_ref_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_debug_dump_one_ref_bb5_in/5 
* CE 10 is refined into CE [14] 
* CE 9 is refined into CE [15] 


#### Refined cost equations eval_debug_dump_one_ref_bb5_in/5 
* CE 14: eval_debug_dump_one_ref_bb5_in(A,B,A,C,D) = 0
     [B=2] 
* CE 15: eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B,C,D,E) = 1+ eval_debug_dump_one_ref_bb5_in(V__tx_next_index,F,C,D,E)
     [F=2,B=2] 

### Cost equations --> "Loop" of eval_debug_dump_one_ref_bb5_in/5 
* CEs [15] --> Loop 10 
* CEs [14] --> Loop 11 

#### Loops of eval_debug_dump_one_ref_bb5_in/5 
* Loop 10: eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B,C,D,E)->  eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B',C,D,E)
                  [B'=2,B=2] 
* Loop 11: eval_debug_dump_one_ref_bb5_in(A,B,A,C,D) [B=2] 

### Ranking functions of CR eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B,C,D,E) 

#### Partial ranking functions of CR eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B,C,D,E) 


### Resulting Chains:eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B,C,D,E) 
* [[10]]...
* [[10],11]
* [11]


### Merging Chains  eval_debug_dump_one_ref_bb5_in/5 into  External patterns of execution 
* [[11],[11,[10]]] --> 1 
* [[[10]]] --> 2 


### Specialization of cost equations eval_debug_dump_one_ref_35/2 
* CE 13 is refined into CE [16] 


#### Refined cost equations eval_debug_dump_one_ref_35/2 
* CE 16: eval_debug_dump_one_ref_35(V__tx_next_index,B) = 0
     [] 

### Cost equations --> "Loop" of eval_debug_dump_one_ref_35/2 
* CEs [16] --> Loop 12 

#### Loops of eval_debug_dump_one_ref_35/2 
* Loop 12: eval_debug_dump_one_ref_35(V__tx_next_index,B) [] 

### Ranking functions of CR eval_debug_dump_one_ref_35(V__tx_next_index,B) 

#### Partial ranking functions of CR eval_debug_dump_one_ref_35(V__tx_next_index,B) 


### Resulting Chains:eval_debug_dump_one_ref_35(V__tx_next_index,B) 
* [12]


### Merging Chains  eval_debug_dump_one_ref_35/2 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations eval_debug_dump_one_ref_30/2 
* CE 11 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_debug_dump_one_ref_30/2 
* CE 17: eval_debug_dump_one_ref_30(V__tx_next_index,B) = 0+ eval_debug_dump_one_ref_35(V__tx_next_index,B):1
     [] 
* CE 18: eval_debug_dump_one_ref_30(V__tx_next_index,B) = 0
     [] 

### Cost equations --> "Loop" of eval_debug_dump_one_ref_30/2 
* CEs [17,18] --> Loop 13 

#### Loops of eval_debug_dump_one_ref_30/2 
* Loop 13: eval_debug_dump_one_ref_30(V__tx_next_index,B) [] 

### Ranking functions of CR eval_debug_dump_one_ref_30(V__tx_next_index,B) 

#### Partial ranking functions of CR eval_debug_dump_one_ref_30(V__tx_next_index,B) 


### Resulting Chains:eval_debug_dump_one_ref_30(V__tx_next_index,B) 
* [13]


### Merging Chains  eval_debug_dump_one_ref_30/2 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_debug_dump_one_ref_12/2 
* CE 8 is refined into CE [19,20] 


#### Refined cost equations eval_debug_dump_one_ref_12/2 
* CE 19: eval_debug_dump_one_ref_12(V__tx_next_index,B) = 1+ eval_debug_dump_one_ref_bb5_in(V__tx_next_index,C,V__tx_next_index,D,E):1+ eval_debug_dump_one_ref_30(V__tx_next_index,B):1
     [C=2] 
* CE 20: eval_debug_dump_one_ref_12(V__tx_next_index,B) = 1+ eval_debug_dump_one_ref_bb5_in(V__tx_next_index,C,D,E,F):2
     [C=2] 

### Cost equations --> "Loop" of eval_debug_dump_one_ref_12/2 
* CEs [20] --> Loop 14 
* CEs [19] --> Loop 15 

#### Loops of eval_debug_dump_one_ref_12/2 
* Loop 14: eval_debug_dump_one_ref_12(V__tx_next_index,B) [] 
* Loop 15: eval_debug_dump_one_ref_12(V__tx_next_index,B) [] 

### Ranking functions of CR eval_debug_dump_one_ref_12(V__tx_next_index,B) 

#### Partial ranking functions of CR eval_debug_dump_one_ref_12(V__tx_next_index,B) 


### Resulting Chains:eval_debug_dump_one_ref_12(V__tx_next_index,B) 
* [15]
* [14]...


### Merging Chains  eval_debug_dump_one_ref_12/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_debug_dump_one_ref_7/2 
* CE 6 is refined into CE [21,22] 


#### Refined cost equations eval_debug_dump_one_ref_7/2 
* CE 21: eval_debug_dump_one_ref_7(V__tx_next_index,B) = 1+ eval_debug_dump_one_ref_bb5_in(V__tx_next_index,C,V__tx_next_index,D,E):1+ eval_debug_dump_one_ref_30(V__tx_next_index,B):1
     [C=2] 
* CE 22: eval_debug_dump_one_ref_7(V__tx_next_index,B) = 1+ eval_debug_dump_one_ref_bb5_in(V__tx_next_index,C,D,E,F):2
     [C=2] 

### Cost equations --> "Loop" of eval_debug_dump_one_ref_7/2 
* CEs [22] --> Loop 16 
* CEs [21] --> Loop 17 

#### Loops of eval_debug_dump_one_ref_7/2 
* Loop 16: eval_debug_dump_one_ref_7(V__tx_next_index,B) [] 
* Loop 17: eval_debug_dump_one_ref_7(V__tx_next_index,B) [] 

### Ranking functions of CR eval_debug_dump_one_ref_7(V__tx_next_index,B) 

#### Partial ranking functions of CR eval_debug_dump_one_ref_7(V__tx_next_index,B) 


### Resulting Chains:eval_debug_dump_one_ref_7(V__tx_next_index,B) 
* [17]
* [16]...


### Merging Chains  eval_debug_dump_one_ref_7/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_debug_dump_one_ref_9/2 
* CE 7 is refined into CE [23,24] 


#### Refined cost equations eval_debug_dump_one_ref_9/2 
* CE 23: eval_debug_dump_one_ref_9(V__tx_next_index,B) = 1+ eval_debug_dump_one_ref_bb5_in(V__tx_next_index,C,V__tx_next_index,D,E):1+ eval_debug_dump_one_ref_30(V__tx_next_index,B):1
     [C=2] 
* CE 24: eval_debug_dump_one_ref_9(V__tx_next_index,B) = 1+ eval_debug_dump_one_ref_bb5_in(V__tx_next_index,C,D,E,F):2
     [C=2] 

### Cost equations --> "Loop" of eval_debug_dump_one_ref_9/2 
* CEs [24] --> Loop 18 
* CEs [23] --> Loop 19 

#### Loops of eval_debug_dump_one_ref_9/2 
* Loop 18: eval_debug_dump_one_ref_9(V__tx_next_index,B) [] 
* Loop 19: eval_debug_dump_one_ref_9(V__tx_next_index,B) [] 

### Ranking functions of CR eval_debug_dump_one_ref_9(V__tx_next_index,B) 

#### Partial ranking functions of CR eval_debug_dump_one_ref_9(V__tx_next_index,B) 


### Resulting Chains:eval_debug_dump_one_ref_9(V__tx_next_index,B) 
* [19]
* [18]...


### Merging Chains  eval_debug_dump_one_ref_9/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_debug_dump_one_ref_bb0_in/2 
* CE 3 is refined into CE [25,26] 
* CE 4 is refined into CE [27,28] 
* CE 5 is refined into CE [29,30] 


#### Refined cost equations eval_debug_dump_one_ref_bb0_in/2 
* CE 25: eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) = 0+ eval_debug_dump_one_ref_7(V__tx_next_index,B):1
     [] 
* CE 26: eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) = 0+ eval_debug_dump_one_ref_7(V__tx_next_index,B):2
     [] 
* CE 27: eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) = 0+ eval_debug_dump_one_ref_9(V__tx_next_index,B):1
     [] 
* CE 28: eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) = 0+ eval_debug_dump_one_ref_9(V__tx_next_index,B):2
     [] 
* CE 29: eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) = 0+ eval_debug_dump_one_ref_12(V__tx_next_index,B):1
     [] 
* CE 30: eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) = 0+ eval_debug_dump_one_ref_12(V__tx_next_index,B):2
     [] 

### Cost equations --> "Loop" of eval_debug_dump_one_ref_bb0_in/2 
* CEs [26,28,30] --> Loop 20 
* CEs [25,27,29] --> Loop 21 

#### Loops of eval_debug_dump_one_ref_bb0_in/2 
* Loop 20: eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) [] 
* Loop 21: eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) [] 

### Ranking functions of CR eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) 

#### Partial ranking functions of CR eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) 


### Resulting Chains:eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B) 
* [21]
* [20]...


### Merging Chains  eval_debug_dump_one_ref_bb0_in/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_debug_dump_one_ref_start/2 
* CE 2 is refined into CE [31,32] 


#### Refined cost equations eval_debug_dump_one_ref_start/2 
* CE 31: eval_debug_dump_one_ref_start(V__tx_next_index,B) = 0+ eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B):1
     [] 
* CE 32: eval_debug_dump_one_ref_start(V__tx_next_index,B) = 0+ eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B):2
     [] 

### Cost equations --> "Loop" of eval_debug_dump_one_ref_start/2 
* CEs [32] --> Loop 22 
* CEs [31] --> Loop 23 

#### Loops of eval_debug_dump_one_ref_start/2 
* Loop 22: eval_debug_dump_one_ref_start(V__tx_next_index,B) [] 
* Loop 23: eval_debug_dump_one_ref_start(V__tx_next_index,B) [] 

### Ranking functions of CR eval_debug_dump_one_ref_start(V__tx_next_index,B) 

#### Partial ranking functions of CR eval_debug_dump_one_ref_start(V__tx_next_index,B) 


### Resulting Chains:eval_debug_dump_one_ref_start(V__tx_next_index,B) 
* [23]
* [22]...


### Merging Chains  eval_debug_dump_one_ref_start/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B,C,D,E) -> [eval_debug_dump_one_ref_bb5_in(V__tx_next_index',B',C',D',E')] 
1
#### Cost of phase [10]:eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B,C,D,E) -> [eval_debug_dump_one_ref_bb5_in(V__tx_next_index',B',C',D',E')] 
1*it(10)+0
#### Cost of phase [10]:eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B,C,D,E) -> [eval_debug_dump_one_ref_bb5_in(V__tx_next_index',B',C',D',E')] 
1*it(10)+0
#### Cost of chains of eval_debug_dump_one_ref_bb5_in(V__tx_next_index,B,C,D,E):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [B=2] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=2,V__tx_next_index=C] 

* Chain [11]: 0
  with precondition: [B=2,C=V__tx_next_index] 


#### Cost of chains of eval_debug_dump_one_ref_35(V__tx_next_index,B):
* Chain [12]: 0
  with precondition: [] 


#### Cost of chains of eval_debug_dump_one_ref_30(V__tx_next_index,B):
* Chain [13]: 0
  with precondition: [] 


#### Cost of chains of eval_debug_dump_one_ref_12(V__tx_next_index,B):
* Chain [15]: 1*s(2)+1
  with precondition: [] 

* Chain [14]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_debug_dump_one_ref_7(V__tx_next_index,B):
* Chain [17]: 1*s(4)+1
  with precondition: [] 

* Chain [16]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_debug_dump_one_ref_9(V__tx_next_index,B):
* Chain [19]: 1*s(6)+1
  with precondition: [] 

* Chain [18]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_debug_dump_one_ref_bb0_in(V__tx_next_index,B):
* Chain [21]: 1*aux(2)+0
  with precondition: [] 

* Chain [20]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_debug_dump_one_ref_start(V__tx_next_index,B):
* Chain [23]: 1*s(14)+0
  with precondition: [] 

* Chain [22]...: 1*s(15)+0
  with precondition: [] 


Closed-form bounds of eval_debug_dump_one_ref_start(V__tx_next_index,B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [22]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_debug_dump_one_ref_start(V__tx_next_index,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 53 ms.
* Invariants computed in 16 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 51 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 36 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 233 ms.

