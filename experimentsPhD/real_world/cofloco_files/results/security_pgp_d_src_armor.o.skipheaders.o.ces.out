Warning: Ignored call to eval_skipheaders_stop/1 in equation eval_skipheaders_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_skipheaders_15/5,eval_skipheaders_16/6,eval_skipheaders_3/4,eval_skipheaders_30/6,eval_skipheaders_31/6,eval_skipheaders_32/6,eval_skipheaders_4/5,eval_skipheaders_5/5,eval_skipheaders_bb1_in/4,eval_skipheaders_bb6_in/5]
1. non_recursive  : [eval_skipheaders_bb11_in/1]
2. non_recursive  : [eval_skipheaders_21/2]
3. non_recursive  : [eval_skipheaders_20/3]
4. non_recursive  : [eval_skipheaders_27/1]
5. non_recursive  : [eval_skipheaders_26/2]
6. non_recursive  : [eval_skipheaders_25/2]
7. non_recursive  : [eval_skipheaders_bb10_in/2]
8. non_recursive  : [eval_skipheaders_18/3]
9. non_recursive  : [eval_skipheaders_17/3]
10. non_recursive  : [loop_cont_eval_skipheaders_bb1_in/4]
11. non_recursive  : [eval_skipheaders_bb0_in/2]
12. non_recursive  : [eval_skipheaders_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_skipheaders_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_skipheaders_18/3
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_skipheaders_bb1_in/4
11. SCC is partially evaluated into eval_skipheaders_bb0_in/2
12. SCC is partially evaluated into eval_skipheaders_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_skipheaders_bb1_in/4 
* CE 7 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 4 is refined into CE [15] 


#### Refined cost equations eval_skipheaders_bb1_in/4 
* CE 12: eval_skipheaders_bb1_in(V__infile_line,B,C,D) = 0
     [B=4] 
* CE 13: eval_skipheaders_bb1_in(V__infile_line,B,C,D) = 0
     [C=V__infile_line+1,B=3] 
* CE 14: eval_skipheaders_bb1_in(V__infile_line,B,C,D) = 0
     [C=V__infile_line+1,B=2] 
* CE 15: eval_skipheaders_bb1_in(V__infile_line,B,C,D) = 1+ eval_skipheaders_bb1_in(E,B,C,D)
     [] 

### Cost equations --> "Loop" of eval_skipheaders_bb1_in/4 
* CEs [15] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_skipheaders_bb1_in/4 
* Loop 11: eval_skipheaders_bb1_in(V__infile_line,B,C,D)->  eval_skipheaders_bb1_in(V__infile_line',B,C,D)
                  [] 
* Loop 12: eval_skipheaders_bb1_in(V__infile_line,B,C,D) [B=4] 
* Loop 13: eval_skipheaders_bb1_in(V__infile_line,B,C,D) [V__infile_line+1=C,B=3] 
* Loop 14: eval_skipheaders_bb1_in(V__infile_line,B,C,D) [V__infile_line+1=C,B=2] 

### Ranking functions of CR eval_skipheaders_bb1_in(V__infile_line,B,C,D) 

#### Partial ranking functions of CR eval_skipheaders_bb1_in(V__infile_line,B,C,D) 


### Resulting Chains:eval_skipheaders_bb1_in(V__infile_line,B,C,D) 
* [[11]]...
* [[11],14]
* [[11],13]
* [[11],12]
* [14]
* [13]
* [12]


### Merging Chains  eval_skipheaders_bb1_in/4 into  External patterns of execution 
* [[14],[14,[11]]] --> 1 
* [[13],[13,[11]]] --> 2 
* [[12],[12,[11]]] --> 3 
* [[[11]]] --> 4 


### Specialization of cost equations eval_skipheaders_18/3 
* CE 11 is refined into CE [16] 


#### Refined cost equations eval_skipheaders_18/3 
* CE 16: eval_skipheaders_18(V__infile_line,V_5,B) = 0
     [] 

### Cost equations --> "Loop" of eval_skipheaders_18/3 
* CEs [16] --> Loop 15 

#### Loops of eval_skipheaders_18/3 
* Loop 15: eval_skipheaders_18(V__infile_line,V_5,B) [] 

### Ranking functions of CR eval_skipheaders_18(V__infile_line,V_5,B) 

#### Partial ranking functions of CR eval_skipheaders_18(V__infile_line,V_5,B) 


### Resulting Chains:eval_skipheaders_18(V__infile_line,V_5,B) 
* [15]


### Merging Chains  eval_skipheaders_18/3 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations loop_cont_eval_skipheaders_bb1_in/4 
* CE 10 is refined into CE [17] 
* CE 9 is refined into CE [18] 
* CE 8 is refined into CE [19] 


#### Refined cost equations loop_cont_eval_skipheaders_bb1_in/4 
* CE 17: loop_cont_eval_skipheaders_bb1_in(D,A,B,C) = 0
     [D=4] 
* CE 18: loop_cont_eval_skipheaders_bb1_in(D,A,B,C) = 0
     [D=3] 
* CE 19: loop_cont_eval_skipheaders_bb1_in(D,A,B,C) = 0+ eval_skipheaders_18(A,B,C):1
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_skipheaders_bb1_in/4 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of loop_cont_eval_skipheaders_bb1_in/4 
* Loop 16: loop_cont_eval_skipheaders_bb1_in(D,A,B,C) [D=4] 
* Loop 17: loop_cont_eval_skipheaders_bb1_in(D,A,B,C) [D=3] 
* Loop 18: loop_cont_eval_skipheaders_bb1_in(D,A,B,C) [D=2] 

### Ranking functions of CR loop_cont_eval_skipheaders_bb1_in(D,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_skipheaders_bb1_in(D,A,B,C) 


### Resulting Chains:loop_cont_eval_skipheaders_bb1_in(D,A,B,C) 
* [18]
* [17]
* [16]


### Merging Chains  loop_cont_eval_skipheaders_bb1_in/4 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16]] --> 3 


### Specialization of cost equations eval_skipheaders_bb0_in/2 
* CE 3 is refined into CE [20,21,22,23] 


#### Refined cost equations eval_skipheaders_bb0_in/2 
* CE 20: eval_skipheaders_bb0_in(V__infile_line,B) = 1+ eval_skipheaders_bb1_in(V__infile_line,C,D,E):1+ loop_cont_eval_skipheaders_bb1_in(F,D,E,B):1
     [F=2,C=2] 
* CE 21: eval_skipheaders_bb0_in(V__infile_line,B) = 1+ eval_skipheaders_bb1_in(V__infile_line,C,D,E):2+ loop_cont_eval_skipheaders_bb1_in(F,D,E,B):2
     [F=3,C=3] 
* CE 22: eval_skipheaders_bb0_in(V__infile_line,B) = 1+ eval_skipheaders_bb1_in(V__infile_line,C,D,E):3+ loop_cont_eval_skipheaders_bb1_in(F,D,E,B):3
     [F=4,C=4] 
* CE 23: eval_skipheaders_bb0_in(V__infile_line,B) = 1+ eval_skipheaders_bb1_in(V__infile_line,C,D,E):4
     [] 

### Cost equations --> "Loop" of eval_skipheaders_bb0_in/2 
* CEs [23] --> Loop 19 
* CEs [20,21,22] --> Loop 20 

#### Loops of eval_skipheaders_bb0_in/2 
* Loop 19: eval_skipheaders_bb0_in(V__infile_line,B) [] 
* Loop 20: eval_skipheaders_bb0_in(V__infile_line,B) [] 

### Ranking functions of CR eval_skipheaders_bb0_in(V__infile_line,B) 

#### Partial ranking functions of CR eval_skipheaders_bb0_in(V__infile_line,B) 


### Resulting Chains:eval_skipheaders_bb0_in(V__infile_line,B) 
* [20]
* [19]...


### Merging Chains  eval_skipheaders_bb0_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_skipheaders_start/3 
* CE 2 is refined into CE [24,25] 


#### Refined cost equations eval_skipheaders_start/3 
* CE 24: eval_skipheaders_start(V_armorfollows,V__infile_line,B) = 0+ eval_skipheaders_bb0_in(V__infile_line,B):1
     [] 
* CE 25: eval_skipheaders_start(V_armorfollows,V__infile_line,B) = 0+ eval_skipheaders_bb0_in(V__infile_line,B):2
     [] 

### Cost equations --> "Loop" of eval_skipheaders_start/3 
* CEs [25] --> Loop 21 
* CEs [24] --> Loop 22 

#### Loops of eval_skipheaders_start/3 
* Loop 21: eval_skipheaders_start(V_armorfollows,V__infile_line,B) [] 
* Loop 22: eval_skipheaders_start(V_armorfollows,V__infile_line,B) [] 

### Ranking functions of CR eval_skipheaders_start(V_armorfollows,V__infile_line,B) 

#### Partial ranking functions of CR eval_skipheaders_start(V_armorfollows,V__infile_line,B) 


### Resulting Chains:eval_skipheaders_start(V_armorfollows,V__infile_line,B) 
* [22]
* [21]...


### Merging Chains  eval_skipheaders_start/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_skipheaders_bb1_in(V__infile_line,B,C,D) -> [eval_skipheaders_bb1_in(V__infile_line',B',C',D')] 
1
#### Cost of phase [11]:eval_skipheaders_bb1_in(V__infile_line,B,C,D) -> [eval_skipheaders_bb1_in(V__infile_line',B',C',D')] 
1*it(11)+0
#### Cost of phase [11]:eval_skipheaders_bb1_in(V__infile_line,B,C,D) -> [eval_skipheaders_bb1_in(V__infile_line',B',C',D')] 
1*it(11)+0
#### Cost of phase [11]:eval_skipheaders_bb1_in(V__infile_line,B,C,D) -> [eval_skipheaders_bb1_in(V__infile_line',B',C',D')] 
1*it(11)+0
#### Cost of phase [11]:eval_skipheaders_bb1_in(V__infile_line,B,C,D) -> [eval_skipheaders_bb1_in(V__infile_line',B',C',D')] 
1*it(11)+0
#### Cost of chains of eval_skipheaders_bb1_in(V__infile_line,B,C,D):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [] 

* Chain [[11],14]: 1*it(11)+0
  with precondition: [B=2] 

* Chain [[11],13]: 1*it(11)+0
  with precondition: [B=3] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=4] 

* Chain [14]: 0
  with precondition: [B=2,C=V__infile_line+1] 

* Chain [13]: 0
  with precondition: [B=3,C=V__infile_line+1] 

* Chain [12]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_skipheaders_18(V__infile_line,V_5,B):
* Chain [15]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_skipheaders_bb1_in(D,A,B,C):
* Chain [18]: 0
  with precondition: [D=2] 

* Chain [17]: 0
  with precondition: [D=3] 

* Chain [16]: 0
  with precondition: [D=4] 


#### Cost of chains of eval_skipheaders_bb0_in(V__infile_line,B):
* Chain [20]: 1*aux(4)+0
  with precondition: [] 

* Chain [19]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_skipheaders_start(V_armorfollows,V__infile_line,B):
* Chain [22]: 1*s(8)+0
  with precondition: [] 

* Chain [21]...: 1*s(9)+1
  with precondition: [] 


Closed-form bounds of eval_skipheaders_start(V_armorfollows,V__infile_line,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_skipheaders_start(V_armorfollows,V__infile_line,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 57 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 49 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 34 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 224 ms.

