Warning: Ignored call to eval_gx_purge_selected_cached_chars_stop/1 in equation loop_cont_eval_gx_purge_selected_cached_chars_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_gx_purge_selected_cached_chars_4/3,eval_gx_purge_selected_cached_chars_5/3,eval_gx_purge_selected_cached_chars_6/3,eval_gx_purge_selected_cached_chars_7/3,eval_gx_purge_selected_cached_chars_8/3,eval_gx_purge_selected_cached_chars_bb1_in/3,eval_gx_purge_selected_cached_chars_bb5_in/3]
1. non_recursive  : [loop_cont_eval_gx_purge_selected_cached_chars_bb1_in/2]
2. non_recursive  : [eval_gx_purge_selected_cached_chars_bb0_in/1]
3. non_recursive  : [eval_gx_purge_selected_cached_chars_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_gx_purge_selected_cached_chars_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_gx_purge_selected_cached_chars_bb0_in/1
3. SCC is partially evaluated into eval_gx_purge_selected_cached_chars_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gx_purge_selected_cached_chars_bb1_in/3 
* CE 6 is refined into CE [7] 
* CE 4 is refined into CE [8] 
* CE 5 is refined into CE [9] 


#### Refined cost equations eval_gx_purge_selected_cached_chars_bb1_in/3 
* CE 7: eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) = 0
     [V_chi_0>=V_2+1,V_chi_0>=0,B=2] 
* CE 8: eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) = 1+ eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,C)
     [V_2>=V_chi_0,V_chi_0>=0,C=2,B=2] 
* CE 9: eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) = 1+ eval_gx_purge_selected_cached_chars_bb1_in(V_2,C,D)
     [V_2>=V_chi_0,V_chi_0>=0,V_chi_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_gx_purge_selected_cached_chars_bb1_in/3 
* CEs [8] --> Loop 6 
* CEs [9] --> Loop 7 
* CEs [7] --> Loop 8 

#### Loops of eval_gx_purge_selected_cached_chars_bb1_in/3 
* Loop 6: eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B)->  eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B')
                  [V_2>=V_chi_0,V_chi_0>=0,B'=2,B=2] 
* Loop 7: eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B)->  eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0',B')
                  [V_2>=V_chi_0,V_chi_0>=0,V_chi_0+1=V_chi_0',B'=2,B=2] 
* Loop 8: eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) [V_chi_0>=V_2+1,V_chi_0>=0,B=2] 

### Ranking functions of CR eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) 

#### Partial ranking functions of CR eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) 
* Partial RF of phase [6,7]:
  - RF of loop [7:1]:
    V_2-V_chi_0+1


### Resulting Chains:eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) 
* [[6,7]]...
* [[6,7],8]
* [8]


### Merging Chains  eval_gx_purge_selected_cached_chars_bb1_in/3 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[6,7]]] --> 2 
* [[[6,7]]] --> 3 


### Specialization of cost equations eval_gx_purge_selected_cached_chars_bb0_in/1 
* CE 3 is refined into CE [10,11,12] 


#### Refined cost equations eval_gx_purge_selected_cached_chars_bb0_in/1 
* CE 10: eval_gx_purge_selected_cached_chars_bb0_in(B) = 1+ eval_gx_purge_selected_cached_chars_bb1_in(C,D,E):1
     [0>=C+1,E=2,D=0] 
* CE 11: eval_gx_purge_selected_cached_chars_bb0_in(B) = 1+ eval_gx_purge_selected_cached_chars_bb1_in(C,D,E):2
     [C>=0,E=2,D=0] 
* CE 12: eval_gx_purge_selected_cached_chars_bb0_in(B) = 1+ eval_gx_purge_selected_cached_chars_bb1_in(C,D,E):3
     [C>=0,E=2,D=0] 

### Cost equations --> "Loop" of eval_gx_purge_selected_cached_chars_bb0_in/1 
* CEs [12] --> Loop 9 
* CEs [10,11] --> Loop 10 

#### Loops of eval_gx_purge_selected_cached_chars_bb0_in/1 
* Loop 9: eval_gx_purge_selected_cached_chars_bb0_in(B) [] 
* Loop 10: eval_gx_purge_selected_cached_chars_bb0_in(B) [] 

### Ranking functions of CR eval_gx_purge_selected_cached_chars_bb0_in(B) 

#### Partial ranking functions of CR eval_gx_purge_selected_cached_chars_bb0_in(B) 


### Resulting Chains:eval_gx_purge_selected_cached_chars_bb0_in(B) 
* [10]
* [9]...


### Merging Chains  eval_gx_purge_selected_cached_chars_bb0_in/1 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_gx_purge_selected_cached_chars_start/1 
* CE 2 is refined into CE [13,14] 


#### Refined cost equations eval_gx_purge_selected_cached_chars_start/1 
* CE 13: eval_gx_purge_selected_cached_chars_start(B) = 0+ eval_gx_purge_selected_cached_chars_bb0_in(B):1
     [] 
* CE 14: eval_gx_purge_selected_cached_chars_start(B) = 0+ eval_gx_purge_selected_cached_chars_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_purge_selected_cached_chars_start/1 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_gx_purge_selected_cached_chars_start/1 
* Loop 11: eval_gx_purge_selected_cached_chars_start(B) [] 
* Loop 12: eval_gx_purge_selected_cached_chars_start(B) [] 

### Ranking functions of CR eval_gx_purge_selected_cached_chars_start(B) 

#### Partial ranking functions of CR eval_gx_purge_selected_cached_chars_start(B) 


### Resulting Chains:eval_gx_purge_selected_cached_chars_start(B) 
* [12]
* [11]...


### Merging Chains  eval_gx_purge_selected_cached_chars_start/1 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6,7] 

 * loop 6:eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) -> [eval_gx_purge_selected_cached_chars_bb1_in(V_2',V_chi_0',B')] 
1
 * loop 7:eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) -> [eval_gx_purge_selected_cached_chars_bb1_in(V_2',V_chi_0',B')] 
1
#### Cost of phase [6,7]:eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) -> [eval_gx_purge_selected_cached_chars_bb1_in(V_2',V_chi_0',B')] 
1*it(6)+1*it(7)+0
  Such that:it(7) =< V_2-V_chi_0+1
it(7) =< V_2-V_chi_0-V_2'+V_chi_0'

#### Cost of phase [6,7]:eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B) -> [eval_gx_purge_selected_cached_chars_bb1_in(V_2',V_chi_0',B')] 
1*it(6)+1*it(7)+0
  Such that:it(7) =< V_2-V_chi_0+1
it(7) =< V_2-V_chi_0-V_2'+V_chi_0'

#### Cost of chains of eval_gx_purge_selected_cached_chars_bb1_in(V_2,V_chi_0,B):
* Chain [[6,7]]...: 1*it(6)+1*it(7)+0
  Such that:it(7) =< V_2-V_chi_0+1

  with precondition: [V_2>=V_chi_0,V_chi_0>=0,B=2] 

* Chain [[6,7],8]: 1*it(6)+1*it(7)+0
  Such that:it(7) =< V_2-V_chi_0+1

  with precondition: [B=2,V_chi_0>=0,V_2>=V_chi_0] 

* Chain [8]: 0
  with precondition: [B=2,V_chi_0>=0,V_chi_0>=V_2+1] 


#### Cost of chains of eval_gx_purge_selected_cached_chars_bb0_in(B):
* Chain [10]: 1*aux(1)+0
  with precondition: [] 

* Chain [9]...: 2*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_gx_purge_selected_cached_chars_start(B):
* Chain [12]: 1*s(5)+0
  with precondition: [] 

* Chain [11]...: 2*s(6)+1
  with precondition: [] 


Closed-form bounds of eval_gx_purge_selected_cached_chars_start(B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gx_purge_selected_cached_chars_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 11 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 12 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 55 ms.

