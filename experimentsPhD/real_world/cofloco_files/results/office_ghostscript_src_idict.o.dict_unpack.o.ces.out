Warning: Ignored call to eval_dict_unpack_stop/1 in equation eval_dict_unpack_bb14_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_dict_unpack_bb14_in/1]
1. recursive  : [eval_dict_unpack_20/3,eval_dict_unpack_21/3,eval_dict_unpack_bb10_in/3,eval_dict_unpack_bb5_in/2]
2. non_recursive  : [eval_dict_unpack_45/1]
3. non_recursive  : [eval_dict_unpack_44/1]
4. non_recursive  : [eval_dict_unpack_bb13_in/1]
5. non_recursive  : [eval_dict_unpack_43/1]
6. non_recursive  : [eval_dict_unpack_42/1]
7. non_recursive  : [loop_cont_eval_dict_unpack_bb5_in/2]
8. non_recursive  : [eval_dict_unpack_14/2]
9. non_recursive  : [eval_dict_unpack_13/2]
10. non_recursive  : [eval_dict_unpack_bb3_in/2]
11. non_recursive  : [eval_dict_unpack_12/2]
12. non_recursive  : [eval_dict_unpack_11/2]
13. non_recursive  : [eval_dict_unpack_6/2]
14. non_recursive  : [eval_dict_unpack_5/2]
15. non_recursive  : [eval_dict_unpack_bb0_in/1]
16. non_recursive  : [eval_dict_unpack_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_dict_unpack_bb5_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_dict_unpack_bb5_in/2
8. SCC is partially evaluated into eval_dict_unpack_14/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_dict_unpack_6/2
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_dict_unpack_bb0_in/1
16. SCC is partially evaluated into eval_dict_unpack_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_dict_unpack_bb5_in/2 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 8 is refined into CE [16] 
* CE 9 is refined into CE [17] 


#### Refined cost equations eval_dict_unpack_bb5_in/2 
* CE 14: eval_dict_unpack_bb5_in(V_count_0,B) = 0
     [B=3,V_count_0=0] 
* CE 15: eval_dict_unpack_bb5_in(V_count_0,B) = 0
     [B=2,V_count_0=0] 
* CE 16: eval_dict_unpack_bb5_in(V_count_0,B) = 1+ eval_dict_unpack_bb5_in(C,B)
     [V_count_0>=1,V_count_0=C+1] 
* CE 17: eval_dict_unpack_bb5_in(V_count_0,B) = 1+ eval_dict_unpack_bb5_in(C,B)
     [0>=V_count_0+1,V_count_0=C+1] 

### Cost equations --> "Loop" of eval_dict_unpack_bb5_in/2 
* CEs [16] --> Loop 11 
* CEs [17] --> Loop 12 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_dict_unpack_bb5_in/2 
* Loop 11: eval_dict_unpack_bb5_in(V_count_0,B)->  eval_dict_unpack_bb5_in(V_count_0',B)
                  [V_count_0>=1,V_count_0=V_count_0'+1] 
* Loop 12: eval_dict_unpack_bb5_in(V_count_0,B)->  eval_dict_unpack_bb5_in(V_count_0',B)
                  [0>=V_count_0+1,V_count_0=V_count_0'+1] 
* Loop 13: eval_dict_unpack_bb5_in(V_count_0,B) [B=3,V_count_0=0] 
* Loop 14: eval_dict_unpack_bb5_in(V_count_0,B) [B=2,V_count_0=0] 

### Ranking functions of CR eval_dict_unpack_bb5_in(V_count_0,B) 
* RF of phase [11]: [V_count_0]

#### Partial ranking functions of CR eval_dict_unpack_bb5_in(V_count_0,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_count_0


### Resulting Chains:eval_dict_unpack_bb5_in(V_count_0,B) 
* [[12]]...
* [[11],14]
* [[11],13]
* [14]
* [13]


### Merging Chains  eval_dict_unpack_bb5_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[14,[11]]] --> 3 
* [[13,[11]]] --> 4 
* [[[12]]] --> 5 


### Specialization of cost equations loop_cont_eval_dict_unpack_bb5_in/2 
* CE 13 is refined into CE [18] 
* CE 12 is refined into CE [19] 


#### Refined cost equations loop_cont_eval_dict_unpack_bb5_in/2 
* CE 18: loop_cont_eval_dict_unpack_bb5_in(C,A) = 0
     [C=3] 
* CE 19: loop_cont_eval_dict_unpack_bb5_in(C,A) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_dict_unpack_bb5_in/2 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 

#### Loops of loop_cont_eval_dict_unpack_bb5_in/2 
* Loop 15: loop_cont_eval_dict_unpack_bb5_in(C,A) [C=3] 
* Loop 16: loop_cont_eval_dict_unpack_bb5_in(C,A) [C=2] 

### Ranking functions of CR loop_cont_eval_dict_unpack_bb5_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_dict_unpack_bb5_in(C,A) 


### Resulting Chains:loop_cont_eval_dict_unpack_bb5_in(C,A) 
* [16]
* [15]


### Merging Chains  loop_cont_eval_dict_unpack_bb5_in/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_dict_unpack_14/2 
* CE 6 is refined into CE [20] 
* CE 7 is refined into CE [21,22,23,24,25] 


#### Refined cost equations eval_dict_unpack_14/2 
* CE 20: eval_dict_unpack_14(V_15,B) = 0
     [] 
* CE 21: eval_dict_unpack_14(V_15,B) = 1+ eval_dict_unpack_bb5_in(C,D):1+ loop_cont_eval_dict_unpack_bb5_in(E,B):1
     [E=2,D=2,C=0,V_15=0] 
* CE 22: eval_dict_unpack_14(V_15,B) = 1+ eval_dict_unpack_bb5_in(C,D):2+ loop_cont_eval_dict_unpack_bb5_in(E,B):2
     [E=3,D=3,C=0,V_15=0] 
* CE 23: eval_dict_unpack_14(V_15,B) = 1+ eval_dict_unpack_bb5_in(V_15,C):3+ loop_cont_eval_dict_unpack_bb5_in(D,B):1
     [V_15>=1,D=2,C=2] 
* CE 24: eval_dict_unpack_14(V_15,B) = 1+ eval_dict_unpack_bb5_in(V_15,C):4+ loop_cont_eval_dict_unpack_bb5_in(D,B):2
     [V_15>=1,D=3,C=3] 
* CE 25: eval_dict_unpack_14(V_15,B) = 1+ eval_dict_unpack_bb5_in(V_15,C):5
     [0>=V_15+1] 

### Cost equations --> "Loop" of eval_dict_unpack_14/2 
* CEs [25] --> Loop 17 
* CEs [20,21,22,23,24] --> Loop 18 

#### Loops of eval_dict_unpack_14/2 
* Loop 17: eval_dict_unpack_14(V_15,B) [0>=V_15+1] 
* Loop 18: eval_dict_unpack_14(V_15,B) [] 

### Ranking functions of CR eval_dict_unpack_14(V_15,B) 

#### Partial ranking functions of CR eval_dict_unpack_14(V_15,B) 


### Resulting Chains:eval_dict_unpack_14(V_15,B) 
* [18]
* [17]...


### Merging Chains  eval_dict_unpack_14/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_dict_unpack_6/2 
* CE 5 is refined into CE [26,27] 


#### Refined cost equations eval_dict_unpack_6/2 
* CE 26: eval_dict_unpack_6(V_15,B) = 0+ eval_dict_unpack_14(V_15,B):1
     [] 
* CE 27: eval_dict_unpack_6(V_15,B) = 0+ eval_dict_unpack_14(V_15,B):2
     [0>=V_15+1] 

### Cost equations --> "Loop" of eval_dict_unpack_6/2 
* CEs [27] --> Loop 19 
* CEs [26] --> Loop 20 

#### Loops of eval_dict_unpack_6/2 
* Loop 19: eval_dict_unpack_6(V_15,B) [0>=V_15+1] 
* Loop 20: eval_dict_unpack_6(V_15,B) [] 

### Ranking functions of CR eval_dict_unpack_6(V_15,B) 

#### Partial ranking functions of CR eval_dict_unpack_6(V_15,B) 


### Resulting Chains:eval_dict_unpack_6(V_15,B) 
* [20]
* [19]...


### Merging Chains  eval_dict_unpack_6/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_dict_unpack_bb0_in/1 
* CE 3 is refined into CE [28,29] 
* CE 4 is refined into CE [30] 


#### Refined cost equations eval_dict_unpack_bb0_in/1 
* CE 28: eval_dict_unpack_bb0_in(B) = 0+ eval_dict_unpack_6(C,B):1
     [] 
* CE 29: eval_dict_unpack_bb0_in(B) = 0+ eval_dict_unpack_6(C,B):2
     [0>=C+1] 
* CE 30: eval_dict_unpack_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_dict_unpack_bb0_in/1 
* CEs [28,30] --> Loop 21 
* CEs [29] --> Loop 22 

#### Loops of eval_dict_unpack_bb0_in/1 
* Loop 21: eval_dict_unpack_bb0_in(B) [] 
* Loop 22: eval_dict_unpack_bb0_in(B) [] 

### Ranking functions of CR eval_dict_unpack_bb0_in(B) 

#### Partial ranking functions of CR eval_dict_unpack_bb0_in(B) 


### Resulting Chains:eval_dict_unpack_bb0_in(B) 
* [22]...
* [21]


### Merging Chains  eval_dict_unpack_bb0_in/1 into  External patterns of execution 
* [[21]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_dict_unpack_start/1 
* CE 2 is refined into CE [31,32] 


#### Refined cost equations eval_dict_unpack_start/1 
* CE 31: eval_dict_unpack_start(B) = 0+ eval_dict_unpack_bb0_in(B):1
     [] 
* CE 32: eval_dict_unpack_start(B) = 0+ eval_dict_unpack_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_dict_unpack_start/1 
* CEs [32] --> Loop 23 
* CEs [31] --> Loop 24 

#### Loops of eval_dict_unpack_start/1 
* Loop 23: eval_dict_unpack_start(B) [] 
* Loop 24: eval_dict_unpack_start(B) [] 

### Ranking functions of CR eval_dict_unpack_start(B) 

#### Partial ranking functions of CR eval_dict_unpack_start(B) 


### Resulting Chains:eval_dict_unpack_start(B) 
* [24]
* [23]...


### Merging Chains  eval_dict_unpack_start/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_dict_unpack_bb5_in(V_count_0,B) -> [eval_dict_unpack_bb5_in(V_count_0',B')] 
1
#### Cost of phase [12]:eval_dict_unpack_bb5_in(V_count_0,B) -> [eval_dict_unpack_bb5_in(V_count_0',B')] 
1*it(12)+0
#### Cost of loops [11] 

 * loop 11:eval_dict_unpack_bb5_in(V_count_0,B) -> [eval_dict_unpack_bb5_in(V_count_0',B')] 
1
#### Cost of phase [11]:eval_dict_unpack_bb5_in(V_count_0,B) -> [eval_dict_unpack_bb5_in(V_count_0',B')] 
1*it(11)+0
  Such that:it(11) =< V_count_0
it(11) =< V_count_0-V_count_0'

#### Cost of phase [11]:eval_dict_unpack_bb5_in(V_count_0,B) -> [eval_dict_unpack_bb5_in(V_count_0',B')] 
1*it(11)+0
  Such that:it(11) =< V_count_0
it(11) =< V_count_0-V_count_0'

#### Cost of chains of eval_dict_unpack_bb5_in(V_count_0,B):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [0>=V_count_0+1] 

* Chain [[11],14]: 1*it(11)+0
  Such that:it(11) =< V_count_0

  with precondition: [B=2,V_count_0>=1] 

* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V_count_0

  with precondition: [B=3,V_count_0>=1] 

* Chain [14]: 0
  with precondition: [V_count_0=0,B=2] 

* Chain [13]: 0
  with precondition: [V_count_0=0,B=3] 


#### Cost of chains of loop_cont_eval_dict_unpack_bb5_in(C,A):
* Chain [16]: 0
  with precondition: [C=2] 

* Chain [15]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_dict_unpack_14(V_15,B):
* Chain [18]: 2*s(1)+1
  Such that:aux(1) =< V_15
s(1) =< aux(1)

  with precondition: [] 

* Chain [17]...: 1*s(3)+1
  with precondition: [0>=V_15+1] 


#### Cost of chains of eval_dict_unpack_6(V_15,B):
* Chain [20]: 2*s(5)+1
  Such that:s(4) =< V_15
s(5) =< s(4)

  with precondition: [] 

* Chain [19]...: 1*s(6)+1
  with precondition: [0>=V_15+1] 


#### Cost of chains of eval_dict_unpack_bb0_in(B):
* Chain [22]...: 1*s(7)+1
  with precondition: [] 

* Chain [21]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_dict_unpack_start(B):
* Chain [24]: 1*s(10)+0
  with precondition: [] 

* Chain [23]...: 1*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_dict_unpack_start(B): 
-------------------------------------
* Chain [24] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_dict_unpack_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 16 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 13 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 69 ms.

