Warning: Ignored call to eval_debug_dump_bytes_stop/1 in equation loop_cont_eval_debug_dump_bytes_bb2_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_debug_dump_bytes_7/4,eval_debug_dump_bytes_8/4,eval_debug_dump_bytes_bb4_in/3]
1. recursive  : [eval_debug_dump_bytes_10/2,eval_debug_dump_bytes_3/2,eval_debug_dump_bytes_4/2,eval_debug_dump_bytes_9/2,eval_debug_dump_bytes_bb2_in/1,loop_cont_eval_debug_dump_bytes_bb4_in/3]
2. non_recursive  : [loop_cont_eval_debug_dump_bytes_bb2_in/2]
3. non_recursive  : [eval_debug_dump_bytes_1/1]
4. non_recursive  : [eval_debug_dump_bytes_0/1]
5. non_recursive  : [eval_debug_dump_bytes_bb0_in/1]
6. non_recursive  : [eval_debug_dump_bytes_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_debug_dump_bytes_bb4_in/3
1. SCC is partially evaluated into eval_debug_dump_bytes_bb2_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_debug_dump_bytes_1/1
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_debug_dump_bytes_bb0_in/1
6. SCC is partially evaluated into eval_debug_dump_bytes_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_debug_dump_bytes_bb4_in/3 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_debug_dump_bytes_bb4_in/3 
* CE 10: eval_debug_dump_bytes_bb4_in(A,B,A) = 0
     [B=2] 
* CE 11: eval_debug_dump_bytes_bb4_in(V_11,B,C) = 1+ eval_debug_dump_bytes_bb4_in(V_11,D,C)
     [D=2,B=2] 

### Cost equations --> "Loop" of eval_debug_dump_bytes_bb4_in/3 
* CEs [11] --> Loop 8 
* CEs [10] --> Loop 9 

#### Loops of eval_debug_dump_bytes_bb4_in/3 
* Loop 8: eval_debug_dump_bytes_bb4_in(V_11,B,C)->  eval_debug_dump_bytes_bb4_in(V_11,B',C)
                  [B'=2,B=2] 
* Loop 9: eval_debug_dump_bytes_bb4_in(A,B,A) [B=2] 

### Ranking functions of CR eval_debug_dump_bytes_bb4_in(V_11,B,C) 

#### Partial ranking functions of CR eval_debug_dump_bytes_bb4_in(V_11,B,C) 


### Resulting Chains:eval_debug_dump_bytes_bb4_in(V_11,B,C) 
* [[8]]...
* [[8],9]
* [9]


### Merging Chains  eval_debug_dump_bytes_bb4_in/3 into  External patterns of execution 
* [[9],[9,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval_debug_dump_bytes_bb2_in/1 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13,14] 


#### Refined cost equations eval_debug_dump_bytes_bb2_in/1 
* CE 12: eval_debug_dump_bytes_bb2_in(B) = 0
     [B=3] 
* CE 13: eval_debug_dump_bytes_bb2_in(B) = 2+ eval_debug_dump_bytes_bb4_in(C,D,C):1+ eval_debug_dump_bytes_bb2_in(E)
     [E=3,D=2,B=3] 
* CE 14: eval_debug_dump_bytes_bb2_in(B) = 2+ eval_debug_dump_bytes_bb4_in(C,D,E):2
     [F=3,D=2,B=3] 

### Cost equations --> "Loop" of eval_debug_dump_bytes_bb2_in/1 
* CEs [14] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_debug_dump_bytes_bb2_in/1 
* Loop 10: eval_debug_dump_bytes_bb2_in(B) [B=3] 
* Loop 11: eval_debug_dump_bytes_bb2_in(B)->  eval_debug_dump_bytes_bb2_in(B')
                  [B'=3,B=3] 
* Loop 12: eval_debug_dump_bytes_bb2_in(B) [B=3] 

### Ranking functions of CR eval_debug_dump_bytes_bb2_in(B) 

#### Partial ranking functions of CR eval_debug_dump_bytes_bb2_in(B) 


### Resulting Chains:eval_debug_dump_bytes_bb2_in(B) 
* [[11]]...
* [[11],12]
* [[11],10]...
* [12]
* [10]...


### Merging Chains  eval_debug_dump_bytes_bb2_in/1 into  External patterns of execution 
* [[12],[12,[11]]] --> 1 
* [[10],[[11]],[10,[11]]] --> 2 


### Specialization of cost equations eval_debug_dump_bytes_1/1 
* CE 5 is refined into CE [15,16] 


#### Refined cost equations eval_debug_dump_bytes_1/1 
* CE 15: eval_debug_dump_bytes_1(B) = 1+ eval_debug_dump_bytes_bb2_in(C):1
     [C=3] 
* CE 16: eval_debug_dump_bytes_1(B) = 1+ eval_debug_dump_bytes_bb2_in(C):2
     [C=3] 

### Cost equations --> "Loop" of eval_debug_dump_bytes_1/1 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_debug_dump_bytes_1/1 
* Loop 13: eval_debug_dump_bytes_1(B) [] 
* Loop 14: eval_debug_dump_bytes_1(B) [] 

### Ranking functions of CR eval_debug_dump_bytes_1(B) 

#### Partial ranking functions of CR eval_debug_dump_bytes_1(B) 


### Resulting Chains:eval_debug_dump_bytes_1(B) 
* [14]
* [13]...


### Merging Chains  eval_debug_dump_bytes_1/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_debug_dump_bytes_bb0_in/1 
* CE 3 is refined into CE [17,18] 
* CE 4 is refined into CE [19,20] 


#### Refined cost equations eval_debug_dump_bytes_bb0_in/1 
* CE 17: eval_debug_dump_bytes_bb0_in(B) = 0+ eval_debug_dump_bytes_1(B):1
     [] 
* CE 18: eval_debug_dump_bytes_bb0_in(B) = 0+ eval_debug_dump_bytes_1(B):2
     [] 
* CE 19: eval_debug_dump_bytes_bb0_in(B) = 1+ eval_debug_dump_bytes_bb2_in(C):1
     [C=3] 
* CE 20: eval_debug_dump_bytes_bb0_in(B) = 1+ eval_debug_dump_bytes_bb2_in(C):2
     [C=3] 

### Cost equations --> "Loop" of eval_debug_dump_bytes_bb0_in/1 
* CEs [18,20] --> Loop 15 
* CEs [17,19] --> Loop 16 

#### Loops of eval_debug_dump_bytes_bb0_in/1 
* Loop 15: eval_debug_dump_bytes_bb0_in(B) [] 
* Loop 16: eval_debug_dump_bytes_bb0_in(B) [] 

### Ranking functions of CR eval_debug_dump_bytes_bb0_in(B) 

#### Partial ranking functions of CR eval_debug_dump_bytes_bb0_in(B) 


### Resulting Chains:eval_debug_dump_bytes_bb0_in(B) 
* [16]
* [15]...


### Merging Chains  eval_debug_dump_bytes_bb0_in/1 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_debug_dump_bytes_start/1 
* CE 2 is refined into CE [21,22] 


#### Refined cost equations eval_debug_dump_bytes_start/1 
* CE 21: eval_debug_dump_bytes_start(B) = 0+ eval_debug_dump_bytes_bb0_in(B):1
     [] 
* CE 22: eval_debug_dump_bytes_start(B) = 0+ eval_debug_dump_bytes_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_debug_dump_bytes_start/1 
* CEs [22] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of eval_debug_dump_bytes_start/1 
* Loop 17: eval_debug_dump_bytes_start(B) [] 
* Loop 18: eval_debug_dump_bytes_start(B) [] 

### Ranking functions of CR eval_debug_dump_bytes_start(B) 

#### Partial ranking functions of CR eval_debug_dump_bytes_start(B) 


### Resulting Chains:eval_debug_dump_bytes_start(B) 
* [18]
* [17]...


### Merging Chains  eval_debug_dump_bytes_start/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_debug_dump_bytes_bb4_in(V_11,B,C) -> [eval_debug_dump_bytes_bb4_in(V_11',B',C')] 
1
#### Cost of phase [8]:eval_debug_dump_bytes_bb4_in(V_11,B,C) -> [eval_debug_dump_bytes_bb4_in(V_11',B',C')] 
1*it(8)+0
#### Cost of phase [8]:eval_debug_dump_bytes_bb4_in(V_11,B,C) -> [eval_debug_dump_bytes_bb4_in(V_11',B',C')] 
1*it(8)+0
#### Cost of chains of eval_debug_dump_bytes_bb4_in(V_11,B,C):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [B=2,V_11=C] 

* Chain [9]: 0
  with precondition: [B=2,C=V_11] 


#### Cost of loops [11] 

 * loop 11:eval_debug_dump_bytes_bb2_in(B) -> [eval_debug_dump_bytes_bb2_in(B')] 
1*s(3)+2
#### Cost of phase [11]:eval_debug_dump_bytes_bb2_in(B) -> [eval_debug_dump_bytes_bb2_in(B')] 
3*it(11)+0
#### Cost of phase [11]:eval_debug_dump_bytes_bb2_in(B) -> [eval_debug_dump_bytes_bb2_in(B')] 
3*it(11)+0
#### Cost of phase [11]:eval_debug_dump_bytes_bb2_in(B) -> [eval_debug_dump_bytes_bb2_in(B')] 
3*it(11)+0
#### Cost of chains of eval_debug_dump_bytes_bb2_in(B):
* Chain [[11]]...: 3*it(11)+0
  with precondition: [B=3] 

* Chain [[11],12]: 3*it(11)+0
  with precondition: [B=3] 

* Chain [[11],10]...: 4*it(11)+2
  with precondition: [B=3] 

* Chain [12]: 0
  with precondition: [B=3] 

* Chain [10]...: 1*s(5)+2
  with precondition: [B=3] 


#### Cost of chains of eval_debug_dump_bytes_1(B):
* Chain [14]: 1*s(10)+1
  with precondition: [] 

* Chain [13]...: 1*s(11)+1
  with precondition: [] 


#### Cost of chains of eval_debug_dump_bytes_bb0_in(B):
* Chain [16]: 1*aux(4)+0
  with precondition: [] 

* Chain [15]...: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_debug_dump_bytes_start(B):
* Chain [18]: 1*s(16)+0
  with precondition: [] 

* Chain [17]...: 1*s(17)+0
  with precondition: [] 


Closed-form bounds of eval_debug_dump_bytes_start(B): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_debug_dump_bytes_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 34 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 32 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 11 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 147 ms.

