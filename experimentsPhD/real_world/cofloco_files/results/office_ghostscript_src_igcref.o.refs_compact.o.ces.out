Warning: Ignored call to eval_refs_compact_stop/1 in equation eval_refs_compact_bb22_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_refs_compact_48/4,eval_refs_compact_49/4,eval_refs_compact_50/4,eval_refs_compact_55/4,eval_refs_compact_56/4,eval_refs_compact_57/4,eval_refs_compact_bb11_in/4,eval_refs_compact_bb8_in/4]
1. recursive  : [eval_refs_compact_bb16_in/5]
2. recursive  : [eval_refs_compact_bb19_in/3]
3. non_recursive  : [eval_refs_compact_bb22_in/1]
4. non_recursive  : [loop_cont_eval_refs_compact_bb19_in/2]
5. non_recursive  : [loop_cont_eval_refs_compact_bb16_in/4]
6. non_recursive  : [loop_cont_eval_refs_compact_bb8_in/4]
7. non_recursive  : [eval_refs_compact_bb7_in/2]
8. non_recursive  : [eval_refs_compact_26/2]
9. non_recursive  : [eval_refs_compact_25/2]
10. recursive  : [eval_refs_compact_bb1_in/3]
11. non_recursive  : [loop_cont_eval_refs_compact_bb1_in/3]
12. non_recursive  : [eval_refs_compact_bb0_in/2]
13. non_recursive  : [eval_refs_compact_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_refs_compact_bb8_in/4
1. SCC is partially evaluated into eval_refs_compact_bb16_in/5
2. SCC is partially evaluated into eval_refs_compact_bb19_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_refs_compact_bb16_in/4
6. SCC is partially evaluated into loop_cont_eval_refs_compact_bb8_in/4
7. SCC is partially evaluated into eval_refs_compact_bb7_in/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_refs_compact_bb1_in/3
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_refs_compact_bb0_in/2
13. SCC is partially evaluated into eval_refs_compact_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_refs_compact_bb8_in/4 
* CE 9 is refined into CE [18] 
* CE 8 is refined into CE [19] 


#### Refined cost equations eval_refs_compact_bb8_in/4 
* CE 18: eval_refs_compact_bb8_in(A,B,A,C) = 0
     [B=2] 
* CE 19: eval_refs_compact_bb8_in(V_size,B,C,D) = 1+ eval_refs_compact_bb8_in(V_size,B,C,D)
     [] 

### Cost equations --> "Loop" of eval_refs_compact_bb8_in/4 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of eval_refs_compact_bb8_in/4 
* Loop 16: eval_refs_compact_bb8_in(V_size,B,C,D)->  eval_refs_compact_bb8_in(V_size,B,C,D)
                  [] 
* Loop 17: eval_refs_compact_bb8_in(A,B,A,C) [B=2] 

### Ranking functions of CR eval_refs_compact_bb8_in(V_size,B,C,D) 

#### Partial ranking functions of CR eval_refs_compact_bb8_in(V_size,B,C,D) 


### Resulting Chains:eval_refs_compact_bb8_in(V_size,B,C,D) 
* [[16]]...
* [[16],17]
* [17]


### Merging Chains  eval_refs_compact_bb8_in/4 into  External patterns of execution 
* [[17],[17,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations eval_refs_compact_bb16_in/5 
* CE 12 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 11 is refined into CE [22] 


#### Refined cost equations eval_refs_compact_bb16_in/5 
* CE 20: eval_refs_compact_bb16_in(A,B,C,A,B) = 0
     [C=5] 
* CE 21: eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) = 0
     [B=4] 
* CE 22: eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) = 1+ eval_refs_compact_bb16_in(V_size,E,B,C,D)
     [E=V__sink+2] 

### Cost equations --> "Loop" of eval_refs_compact_bb16_in/5 
* CEs [22] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [21] --> Loop 20 

#### Loops of eval_refs_compact_bb16_in/5 
* Loop 18: eval_refs_compact_bb16_in(V_size,V__sink,B,C,D)->  eval_refs_compact_bb16_in(V_size,V__sink',B,C,D)
                  [V__sink+2=V__sink'] 
* Loop 19: eval_refs_compact_bb16_in(A,B,C,A,B) [C=5] 
* Loop 20: eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) [B=4] 

### Ranking functions of CR eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) 

#### Partial ranking functions of CR eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) 


### Resulting Chains:eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) 
* [[18]]...
* [[18],20]
* [[18],19]
* [20]
* [19]


### Merging Chains  eval_refs_compact_bb16_in/5 into  External patterns of execution 
* [[20],[20,[18]]] --> 1 
* [[19]] --> 2 
* [[19,[18]]] --> 3 
* [[[18]]] --> 4 


### Specialization of cost equations eval_refs_compact_bb19_in/3 
* CE 17 is refined into CE [23] 
* CE 16 is refined into CE [24] 


#### Refined cost equations eval_refs_compact_bb19_in/3 
* CE 23: eval_refs_compact_bb19_in(V_size,V_new_size_1,B) = 0
     [V_new_size_1>=V_size,B=4] 
* CE 24: eval_refs_compact_bb19_in(V_size,V_new_size_1,B) = 1+ eval_refs_compact_bb19_in(V_size,C,D)
     [V_size>=V_new_size_1+1,V_new_size_1+2=C,D=4,B=4] 

### Cost equations --> "Loop" of eval_refs_compact_bb19_in/3 
* CEs [24] --> Loop 21 
* CEs [23] --> Loop 22 

#### Loops of eval_refs_compact_bb19_in/3 
* Loop 21: eval_refs_compact_bb19_in(V_size,V_new_size_1,B)->  eval_refs_compact_bb19_in(V_size,V_new_size_1',B')
                  [V_size>=V_new_size_1+1,V_new_size_1+2=V_new_size_1',B'=4,B=4] 
* Loop 22: eval_refs_compact_bb19_in(V_size,V_new_size_1,B) [V_new_size_1>=V_size,B=4] 

### Ranking functions of CR eval_refs_compact_bb19_in(V_size,V_new_size_1,B) 
* RF of phase [21]: [V_size/2-V_new_size_1/2]

#### Partial ranking functions of CR eval_refs_compact_bb19_in(V_size,V_new_size_1,B) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_size/2-V_new_size_1/2


### Resulting Chains:eval_refs_compact_bb19_in(V_size,V_new_size_1,B) 
* [[21],22]
* [22]


### Merging Chains  eval_refs_compact_bb19_in/3 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[21]]] --> 2 


### Specialization of cost equations loop_cont_eval_refs_compact_bb16_in/4 
* CE 14 is refined into CE [25,26] 
* CE 15 is refined into CE [27] 


#### Refined cost equations loop_cont_eval_refs_compact_bb16_in/4 
* CE 25: loop_cont_eval_refs_compact_bb16_in(E,A,B,C) = 1+ eval_refs_compact_bb19_in(A,B,F):1
     [B>=A,F=4,E=5] 
* CE 26: loop_cont_eval_refs_compact_bb16_in(E,A,B,C) = 1+ eval_refs_compact_bb19_in(A,B,F):2
     [A>=B+1,F=4,E=5] 
* CE 27: loop_cont_eval_refs_compact_bb16_in(E,A,B,C) = 0
     [E=4] 

### Cost equations --> "Loop" of loop_cont_eval_refs_compact_bb16_in/4 
* CEs [26] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [27] --> Loop 25 

#### Loops of loop_cont_eval_refs_compact_bb16_in/4 
* Loop 23: loop_cont_eval_refs_compact_bb16_in(E,A,B,C) [A>=B+1,E=5] 
* Loop 24: loop_cont_eval_refs_compact_bb16_in(E,A,B,C) [B>=A,E=5] 
* Loop 25: loop_cont_eval_refs_compact_bb16_in(E,A,B,C) [E=4] 

### Ranking functions of CR loop_cont_eval_refs_compact_bb16_in(E,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_refs_compact_bb16_in(E,A,B,C) 


### Resulting Chains:loop_cont_eval_refs_compact_bb16_in(E,A,B,C) 
* [25]
* [24]
* [23]


### Merging Chains  loop_cont_eval_refs_compact_bb16_in/4 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 


### Specialization of cost equations loop_cont_eval_refs_compact_bb8_in/4 
* CE 10 is refined into CE [28,29,30,31,32,33] 


#### Refined cost equations loop_cont_eval_refs_compact_bb8_in/4 
* CE 28: loop_cont_eval_refs_compact_bb8_in(G,A,B,C) = 1+ eval_refs_compact_bb16_in(A,B,H,I,J):1+ loop_cont_eval_refs_compact_bb16_in(K,I,J,C):1
     [K=4,H=4,G=2] 
* CE 29: loop_cont_eval_refs_compact_bb8_in(G,A,B,C) = 1+ eval_refs_compact_bb16_in(A,B,H,A,B):2+ loop_cont_eval_refs_compact_bb16_in(I,A,B,C):2
     [B>=A,I=5,H=5,G=2] 
* CE 30: loop_cont_eval_refs_compact_bb8_in(G,A,B,C) = 1+ eval_refs_compact_bb16_in(A,B,H,A,B):2+ loop_cont_eval_refs_compact_bb16_in(I,A,B,C):3
     [A>=B+1,I=5,H=5,G=2] 
* CE 31: loop_cont_eval_refs_compact_bb8_in(G,A,B,C) = 1+ eval_refs_compact_bb16_in(A,B,H,A,I):3+ loop_cont_eval_refs_compact_bb16_in(J,A,I,C):2
     [I>=A,I>=B+2,J=5,H=5,G=2] 
* CE 32: loop_cont_eval_refs_compact_bb8_in(G,A,B,C) = 1+ eval_refs_compact_bb16_in(A,B,H,A,I):3+ loop_cont_eval_refs_compact_bb16_in(J,A,I,C):3
     [A>=I+1,I>=B+2,J=5,H=5,G=2] 
* CE 33: loop_cont_eval_refs_compact_bb8_in(G,A,B,C) = 1+ eval_refs_compact_bb16_in(A,B,H,I,J):4
     [G=2] 

### Cost equations --> "Loop" of loop_cont_eval_refs_compact_bb8_in/4 
* CEs [33] --> Loop 26 
* CEs [28,29,30,31,32] --> Loop 27 

#### Loops of loop_cont_eval_refs_compact_bb8_in/4 
* Loop 26: loop_cont_eval_refs_compact_bb8_in(G,A,B,C) [G=2] 
* Loop 27: loop_cont_eval_refs_compact_bb8_in(G,A,B,C) [G=2] 

### Ranking functions of CR loop_cont_eval_refs_compact_bb8_in(G,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_refs_compact_bb8_in(G,A,B,C) 


### Resulting Chains:loop_cont_eval_refs_compact_bb8_in(G,A,B,C) 
* [27]
* [26]...


### Merging Chains  loop_cont_eval_refs_compact_bb8_in/4 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations eval_refs_compact_bb7_in/2 
* CE 7 is refined into CE [34,35,36] 


#### Refined cost equations eval_refs_compact_bb7_in/2 
* CE 34: eval_refs_compact_bb7_in(V_size,B) = 1+ eval_refs_compact_bb8_in(V_size,C,V_size,D):1+ loop_cont_eval_refs_compact_bb8_in(E,V_size,D,B):1
     [E=2,C=2] 
* CE 35: eval_refs_compact_bb7_in(V_size,B) = 1+ eval_refs_compact_bb8_in(V_size,C,V_size,D):1+ loop_cont_eval_refs_compact_bb8_in(E,V_size,D,B):2
     [E=2,C=2] 
* CE 36: eval_refs_compact_bb7_in(V_size,B) = 1+ eval_refs_compact_bb8_in(V_size,C,D,E):2
     [] 

### Cost equations --> "Loop" of eval_refs_compact_bb7_in/2 
* CEs [35,36] --> Loop 28 
* CEs [34] --> Loop 29 

#### Loops of eval_refs_compact_bb7_in/2 
* Loop 28: eval_refs_compact_bb7_in(V_size,B) [] 
* Loop 29: eval_refs_compact_bb7_in(V_size,B) [] 

### Ranking functions of CR eval_refs_compact_bb7_in(V_size,B) 

#### Partial ranking functions of CR eval_refs_compact_bb7_in(V_size,B) 


### Resulting Chains:eval_refs_compact_bb7_in(V_size,B) 
* [29]
* [28]...


### Merging Chains  eval_refs_compact_bb7_in/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_refs_compact_bb1_in/3 
* CE 6 is refined into CE [37] 
* CE 5 is refined into CE [38] 


#### Refined cost equations eval_refs_compact_bb1_in/3 
* CE 37: eval_refs_compact_bb1_in(A,B,A) = 0
     [B=3] 
* CE 38: eval_refs_compact_bb1_in(V_size,B,C) = 1+ eval_refs_compact_bb1_in(V_size,D,C)
     [D=3,B=3] 

### Cost equations --> "Loop" of eval_refs_compact_bb1_in/3 
* CEs [38] --> Loop 30 
* CEs [37] --> Loop 31 

#### Loops of eval_refs_compact_bb1_in/3 
* Loop 30: eval_refs_compact_bb1_in(V_size,B,C)->  eval_refs_compact_bb1_in(V_size,B',C)
                  [B'=3,B=3] 
* Loop 31: eval_refs_compact_bb1_in(A,B,A) [B=3] 

### Ranking functions of CR eval_refs_compact_bb1_in(V_size,B,C) 

#### Partial ranking functions of CR eval_refs_compact_bb1_in(V_size,B,C) 


### Resulting Chains:eval_refs_compact_bb1_in(V_size,B,C) 
* [[30]]...
* [[30],31]
* [31]


### Merging Chains  eval_refs_compact_bb1_in/3 into  External patterns of execution 
* [[31],[31,[30]]] --> 1 
* [[[30]]] --> 2 


### Specialization of cost equations eval_refs_compact_bb0_in/2 
* CE 3 is refined into CE [39,40,41] 
* CE 4 is refined into CE [42,43] 


#### Refined cost equations eval_refs_compact_bb0_in/2 
* CE 39: eval_refs_compact_bb0_in(V_size,B) = 1+ eval_refs_compact_bb1_in(V_size,C,V_size):1+ eval_refs_compact_bb7_in(V_size,B):1
     [C=3] 
* CE 40: eval_refs_compact_bb0_in(V_size,B) = 1+ eval_refs_compact_bb1_in(V_size,C,V_size):1+ eval_refs_compact_bb7_in(V_size,B):2
     [C=3] 
* CE 41: eval_refs_compact_bb0_in(V_size,B) = 1+ eval_refs_compact_bb1_in(V_size,C,D):2
     [C=3] 
* CE 42: eval_refs_compact_bb0_in(V_size,B) = 0+ eval_refs_compact_bb7_in(V_size,B):1
     [] 
* CE 43: eval_refs_compact_bb0_in(V_size,B) = 0+ eval_refs_compact_bb7_in(V_size,B):2
     [] 

### Cost equations --> "Loop" of eval_refs_compact_bb0_in/2 
* CEs [40,41,43] --> Loop 32 
* CEs [39,42] --> Loop 33 

#### Loops of eval_refs_compact_bb0_in/2 
* Loop 32: eval_refs_compact_bb0_in(V_size,B) [] 
* Loop 33: eval_refs_compact_bb0_in(V_size,B) [] 

### Ranking functions of CR eval_refs_compact_bb0_in(V_size,B) 

#### Partial ranking functions of CR eval_refs_compact_bb0_in(V_size,B) 


### Resulting Chains:eval_refs_compact_bb0_in(V_size,B) 
* [33]
* [32]...


### Merging Chains  eval_refs_compact_bb0_in/2 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


### Specialization of cost equations eval_refs_compact_start/2 
* CE 2 is refined into CE [44,45] 


#### Refined cost equations eval_refs_compact_start/2 
* CE 44: eval_refs_compact_start(V_size,B) = 0+ eval_refs_compact_bb0_in(V_size,B):1
     [] 
* CE 45: eval_refs_compact_start(V_size,B) = 0+ eval_refs_compact_bb0_in(V_size,B):2
     [] 

### Cost equations --> "Loop" of eval_refs_compact_start/2 
* CEs [45] --> Loop 34 
* CEs [44] --> Loop 35 

#### Loops of eval_refs_compact_start/2 
* Loop 34: eval_refs_compact_start(V_size,B) [] 
* Loop 35: eval_refs_compact_start(V_size,B) [] 

### Ranking functions of CR eval_refs_compact_start(V_size,B) 

#### Partial ranking functions of CR eval_refs_compact_start(V_size,B) 


### Resulting Chains:eval_refs_compact_start(V_size,B) 
* [35]
* [34]...


### Merging Chains  eval_refs_compact_start/2 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_refs_compact_bb8_in(V_size,B,C,D) -> [eval_refs_compact_bb8_in(V_size',B',C',D')] 
1
#### Cost of phase [16]:eval_refs_compact_bb8_in(V_size,B,C,D) -> [eval_refs_compact_bb8_in(V_size',B',C',D')] 
1*it(16)+0
#### Cost of phase [16]:eval_refs_compact_bb8_in(V_size,B,C,D) -> [eval_refs_compact_bb8_in(V_size',B',C',D')] 
1*it(16)+0
#### Cost of chains of eval_refs_compact_bb8_in(V_size,B,C,D):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [] 

* Chain [[16],17]: 1*it(16)+0
  with precondition: [B=2,V_size=C] 

* Chain [17]: 0
  with precondition: [B=2,C=V_size] 


#### Cost of loops [18] 

 * loop 18:eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) -> [eval_refs_compact_bb16_in(V_size',V__sink',B',C',D')] 
1
#### Cost of phase [18]:eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) -> [eval_refs_compact_bb16_in(V_size',V__sink',B',C',D')] 
1*it(18)+0
#### Cost of phase [18]:eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) -> [eval_refs_compact_bb16_in(V_size',V__sink',B',C',D')] 
1*it(18)+0
#### Cost of phase [18]:eval_refs_compact_bb16_in(V_size,V__sink,B,C,D) -> [eval_refs_compact_bb16_in(V_size',V__sink',B',C',D')] 
1*it(18)+0
#### Cost of chains of eval_refs_compact_bb16_in(V_size,V__sink,B,C,D):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [] 

* Chain [[18],20]: 1*it(18)+0
  with precondition: [B=4] 

* Chain [[18],19]: 1*it(18)+0
  with precondition: [B=5,V_size=C,D>=V__sink+2] 

* Chain [20]: 0
  with precondition: [B=4] 

* Chain [19]: 0
  with precondition: [B=5,C=V_size,D=V__sink] 


#### Cost of loops [21] 

 * loop 21:eval_refs_compact_bb19_in(V_size,V_new_size_1,B) -> [eval_refs_compact_bb19_in(V_size',V_new_size_1',B')] 
1
#### Cost of phase [21]:eval_refs_compact_bb19_in(V_size,V_new_size_1,B) -> [eval_refs_compact_bb19_in(V_size',V_new_size_1',B')] 
1*it(21)+0
  Such that:it(21) =< V_size/2-V_new_size_1/2
it(21) =< V_size/2-V_new_size_1/2-V_size'/2+V_new_size_1'/2

#### Cost of chains of eval_refs_compact_bb19_in(V_size,V_new_size_1,B):
* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V_size/2-V_new_size_1/2

  with precondition: [B=4,V_size>=V_new_size_1+1] 

* Chain [22]: 0
  with precondition: [B=4,V_new_size_1>=V_size] 


#### Cost of chains of loop_cont_eval_refs_compact_bb16_in(E,A,B,C):
* Chain [25]: 0
  with precondition: [E=4] 

* Chain [24]: 1
  with precondition: [E=5,B>=A] 

* Chain [23]: 1*s(3)+1
  Such that:s(3) =< A/2-B/2

  with precondition: [E=5,A>=B+1] 


#### Cost of chains of loop_cont_eval_refs_compact_bb8_in(G,A,B,C):
* Chain [27]: 3*s(4)+2*s(5)+2
  Such that:aux(3) =< A/2-B/2
s(5) =< aux(3)

  with precondition: [G=2] 

* Chain [26]...: 1*s(9)+1
  with precondition: [G=2] 


#### Cost of chains of eval_refs_compact_bb7_in(V_size,B):
* Chain [29]: 4*s(10)+2*s(12)+3
  with precondition: [] 

* Chain [28]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of loops [30] 

 * loop 30:eval_refs_compact_bb1_in(V_size,B,C) -> [eval_refs_compact_bb1_in(V_size',B',C')] 
1
#### Cost of phase [30]:eval_refs_compact_bb1_in(V_size,B,C) -> [eval_refs_compact_bb1_in(V_size',B',C')] 
1*it(30)+0
#### Cost of phase [30]:eval_refs_compact_bb1_in(V_size,B,C) -> [eval_refs_compact_bb1_in(V_size',B',C')] 
1*it(30)+0
#### Cost of chains of eval_refs_compact_bb1_in(V_size,B,C):
* Chain [[30]]...: 1*it(30)+0
  with precondition: [B=3] 

* Chain [[30],31]: 1*it(30)+0
  with precondition: [B=3,V_size=C] 

* Chain [31]: 0
  with precondition: [B=3,C=V_size] 


#### Cost of chains of eval_refs_compact_bb0_in(V_size,B):
* Chain [33]: 1*aux(6)+0
  with precondition: [] 

* Chain [32]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_refs_compact_start(V_size,B):
* Chain [35]: 1*s(27)+0
  with precondition: [] 

* Chain [34]...: 1*s(28)+0
  with precondition: [] 


Closed-form bounds of eval_refs_compact_start(V_size,B): 
-------------------------------------
* Chain [35] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [34]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_refs_compact_start(V_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 48 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 33 ms.
   - Equation cost structures 14 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 144 ms.

