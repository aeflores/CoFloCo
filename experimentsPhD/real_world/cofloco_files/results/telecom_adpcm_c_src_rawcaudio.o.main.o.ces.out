Warning: Ignored call to eval_main_stop/1 in equation eval_main_13/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_4/1 
Warning: Ignored call to eval_main_stop/1 in equation loop_cont_eval_main_bb3_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_main_4/1]
1. non_recursive  : [eval_main_3/1]
2. non_recursive  : [eval_main_2/1]
3. recursive  : [eval_main_18/8,eval_main_19/8,eval_main_20/8,eval_main_bb8_in/8]
4. recursive  : [eval_main_10/2,eval_main_24/5,eval_main_25/5,eval_main_8/1,eval_main_9/1,eval_main_bb3_in/1,loop_cont_eval_main_bb8_in/6]
5. non_recursive  : [eval_main_13/1]
6. non_recursive  : [eval_main_12/1]
7. non_recursive  : [eval_main_11/1]
8. non_recursive  : [loop_cont_eval_main_bb3_in/2]
9. non_recursive  : [eval_main_7/1]
10. non_recursive  : [eval_main_6/1]
11. non_recursive  : [eval_main_5/1]
12. non_recursive  : [eval_main_1/1]
13. non_recursive  : [eval_main_0/1]
14. non_recursive  : [eval_main_bb0_in/1]
15. non_recursive  : [eval_main_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_main_bb8_in/8
4. SCC is partially evaluated into eval_main_bb3_in/1
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_main_bb3_in/2
9. SCC is partially evaluated into eval_main_7/1
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_main_1/1
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_main_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main_bb8_in/8 
* CE 14 is refined into CE [16] 
* CE 15 is discarded (unfeasible) 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_main_bb8_in/8 
* CE 16: eval_main_bb8_in(A,B,C,D,A,B,C,E) = 0
     [4*E+3>=A,2*B+1>=A,A>=2*B,A>=4*E,E>=0,C>=0,A>=1,D=2] 
* CE 17: eval_main_bb8_in(A,B,C,D,E,F,C,G) = 0
     [C>=0,G=0,F=0,E=0,D=2,B=0,A=0] 
* CE 18: eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F) = 1+ eval_main_bb8_in(V_14,V_18,G,H,C,D,E,F)
     [2*V_18+1>=V_14,V_14>=2*V_18,V_loop_wrap1_0>=0,V_18>=0,V_loop_wrap1_0+1=G,H=2,B=2] 

### Cost equations --> "Loop" of eval_main_bb8_in/8 
* CEs [18] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of eval_main_bb8_in/8 
* Loop 13: eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F)->  eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0',B',C,D,E,F)
                  [2*V_18+1>=V_14,V_14>=2*V_18,V_loop_wrap1_0>=0,V_18>=0,V_loop_wrap1_0+1=V_loop_wrap1_0',B'=2,B=2] 
* Loop 14: eval_main_bb8_in(A,B,C,D,A,B,C,E) [4*E+3>=A,2*B+1>=A,A>=2*B,A>=4*E,E>=0,C>=0,A>=1,D=2] 
* Loop 15: eval_main_bb8_in(A,B,C,D,E,F,C,G) [C>=0,G=0,F=0,E=0,D=2,B=0,A=0] 

### Ranking functions of CR eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F) 

#### Partial ranking functions of CR eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F) 


### Resulting Chains:eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F) 
* [[13]]...
* [[13],15]
* [[13],14]
* [15]
* [14]


### Merging Chains  eval_main_bb8_in/8 into  External patterns of execution 
* [[15]] --> 1 
* [[15,[13]]] --> 2 
* [[14]] --> 3 
* [[14,[13]]] --> 4 
* [[[13]]] --> 5 


### Specialization of cost equations eval_main_bb3_in/1 
* CE 8 is refined into CE [19,20,21] 
* CE 9 is refined into CE [22,23,24] 
* CE 6 is refined into CE [25] 
* CE 7 is refined into CE [26] 


#### Refined cost equations eval_main_bb3_in/1 
* CE 19: eval_main_bb3_in(B) = 2+ eval_main_bb8_in(C,D,E,F,G,H,I,J):1+ eval_main_bb3_in(B)
     [J=0,I=0,H=0,G=0,F=2,E=0,D=0,C=0] 
* CE 20: eval_main_bb3_in(B) = 2+ eval_main_bb8_in(C,D,E,F,G,H,I,J):2+ eval_main_bb3_in(B)
     [I>=1,J=0,H=0,G=0,F=2,E=0,D=0,C=0] 
* CE 21: eval_main_bb3_in(B) = 2+ eval_main_bb8_in(C,D,E,F,G,H,I,J):5
     [F=2,E=0,D=0,C=0] 
* CE 22: eval_main_bb3_in(B) = 2+ eval_main_bb8_in(C,D,E,F,C,D,G,H):3+ eval_main_bb3_in(B)
     [4*H+3>=C,2*D+1>=C,C>=2*D,C>=4*H,H>=0,C>=1,G=0,F=2,E=0] 
* CE 23: eval_main_bb3_in(B) = 2+ eval_main_bb8_in(C,D,E,F,C,D,G,H):4+ eval_main_bb3_in(B)
     [4*H+3>=C,2*D+1>=C,C>=2*D,C>=4*H,H>=0,G>=1,C>=1,F=2,E=0] 
* CE 24: eval_main_bb3_in(B) = 2+ eval_main_bb8_in(C,D,E,F,G,H,I,J):5
     [2*D+1>=C,C>=2*D,C>=1,F=2,E=0] 
* CE 25: eval_main_bb3_in(B) = 0
     [B=4] 
* CE 26: eval_main_bb3_in(B) = 0
     [B=3] 

### Cost equations --> "Loop" of eval_main_bb3_in/1 
* CEs [25] --> Loop 16 
* CEs [26] --> Loop 17 
* CEs [21,24] --> Loop 18 
* CEs [19,20,22,23] --> Loop 19 

#### Loops of eval_main_bb3_in/1 
* Loop 16: eval_main_bb3_in(B) [B=4] 
* Loop 17: eval_main_bb3_in(B) [B=3] 
* Loop 18: eval_main_bb3_in(B) [] 
* Loop 19: eval_main_bb3_in(B)->  eval_main_bb3_in(B)
                  [] 

### Ranking functions of CR eval_main_bb3_in(B) 

#### Partial ranking functions of CR eval_main_bb3_in(B) 


### Resulting Chains:eval_main_bb3_in(B) 
* [[19]]...
* [[19],18]...
* [[19],17]
* [[19],16]
* [18]...
* [17]
* [16]


### Merging Chains  eval_main_bb3_in/1 into  External patterns of execution 
* [[17],[17,[19]]] --> 1 
* [[16],[16,[19]]] --> 2 
* [[18],[[19]],[18,[19]]] --> 3 


### Specialization of cost equations loop_cont_eval_main_bb3_in/2 
* CE 11 is refined into CE [27] 
* CE 10 is refined into CE [28] 


#### Refined cost equations loop_cont_eval_main_bb3_in/2 
* CE 27: loop_cont_eval_main_bb3_in(C,A) = 0
     [C=4] 
* CE 28: loop_cont_eval_main_bb3_in(C,A) = 0
     [C=3] 

### Cost equations --> "Loop" of loop_cont_eval_main_bb3_in/2 
* CEs [27] --> Loop 20 
* CEs [28] --> Loop 21 

#### Loops of loop_cont_eval_main_bb3_in/2 
* Loop 20: loop_cont_eval_main_bb3_in(C,A) [C=4] 
* Loop 21: loop_cont_eval_main_bb3_in(C,A) [C=3] 

### Ranking functions of CR loop_cont_eval_main_bb3_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_main_bb3_in(C,A) 


### Resulting Chains:loop_cont_eval_main_bb3_in(C,A) 
* [21]
* [20]


### Merging Chains  loop_cont_eval_main_bb3_in/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_main_7/1 
* CE 5 is refined into CE [29,30,31] 


#### Refined cost equations eval_main_7/1 
* CE 29: eval_main_7(B) = 1+ eval_main_bb3_in(C):1+ loop_cont_eval_main_bb3_in(D,B):1
     [D=3,C=3] 
* CE 30: eval_main_7(B) = 1+ eval_main_bb3_in(C):2+ loop_cont_eval_main_bb3_in(D,B):2
     [D=4,C=4] 
* CE 31: eval_main_7(B) = 1+ eval_main_bb3_in(C):3
     [] 

### Cost equations --> "Loop" of eval_main_7/1 
* CEs [31] --> Loop 22 
* CEs [29,30] --> Loop 23 

#### Loops of eval_main_7/1 
* Loop 22: eval_main_7(B) [] 
* Loop 23: eval_main_7(B) [] 

### Ranking functions of CR eval_main_7(B) 

#### Partial ranking functions of CR eval_main_7(B) 


### Resulting Chains:eval_main_7(B) 
* [23]
* [22]...


### Merging Chains  eval_main_7/1 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_main_1/1 
* CE 3 is refined into CE [32] 
* CE 4 is refined into CE [33,34] 


#### Refined cost equations eval_main_1/1 
* CE 32: eval_main_1(B) = 0
     [] 
* CE 33: eval_main_1(B) = 0+ eval_main_7(B):1
     [] 
* CE 34: eval_main_1(B) = 0+ eval_main_7(B):2
     [] 

### Cost equations --> "Loop" of eval_main_1/1 
* CEs [34] --> Loop 24 
* CEs [32,33] --> Loop 25 

#### Loops of eval_main_1/1 
* Loop 24: eval_main_1(B) [] 
* Loop 25: eval_main_1(B) [] 

### Ranking functions of CR eval_main_1(B) 

#### Partial ranking functions of CR eval_main_1(B) 


### Resulting Chains:eval_main_1(B) 
* [25]
* [24]...


### Merging Chains  eval_main_1/1 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_main_start/1 
* CE 2 is refined into CE [35,36] 


#### Refined cost equations eval_main_start/1 
* CE 35: eval_main_start(B) = 0+ eval_main_1(B):1
     [] 
* CE 36: eval_main_start(B) = 0+ eval_main_1(B):2
     [] 

### Cost equations --> "Loop" of eval_main_start/1 
* CEs [36] --> Loop 26 
* CEs [35] --> Loop 27 

#### Loops of eval_main_start/1 
* Loop 26: eval_main_start(B) [] 
* Loop 27: eval_main_start(B) [] 

### Ranking functions of CR eval_main_start(B) 

#### Partial ranking functions of CR eval_main_start(B) 


### Resulting Chains:eval_main_start(B) 
* [27]
* [26]...


### Merging Chains  eval_main_start/1 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F) -> [eval_main_bb8_in(V_14',V_18',V_loop_wrap1_0',B',C',D',E',F')] 
1
#### Cost of phase [13]:eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F) -> [eval_main_bb8_in(V_14',V_18',V_loop_wrap1_0',B',C',D',E',F')] 
1*it(13)+0
#### Cost of phase [13]:eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F) -> [eval_main_bb8_in(V_14',V_18',V_loop_wrap1_0',B',C',D',E',F')] 
1*it(13)+0
#### Cost of phase [13]:eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F) -> [eval_main_bb8_in(V_14',V_18',V_loop_wrap1_0',B',C',D',E',F')] 
1*it(13)+0
#### Cost of chains of eval_main_bb8_in(V_14,V_18,V_loop_wrap1_0,B,C,D,E,F):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [V_14>=2*V_18,2*V_18+1>=V_14,V_18>=0,V_loop_wrap1_0>=0,B=2] 

* Chain [[13],15]: 1*it(13)+0
  with precondition: [V_14=0,V_18=0,B=2,C=0,D=0,F=0,V_loop_wrap1_0>=0,E>=V_loop_wrap1_0+1] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=2,V_14=C,V_18=D,V_14>=1,V_loop_wrap1_0>=0,F>=0,V_14>=4*F,V_14>=2*V_18,2*V_18+1>=V_14,4*F+3>=V_14,E>=V_loop_wrap1_0+1] 

* Chain [15]: 0
  with precondition: [V_14=0,V_18=0,B=2,C=0,D=0,F=0,V_loop_wrap1_0=E,V_loop_wrap1_0>=0] 

* Chain [14]: 0
  with precondition: [B=2,V_14=C,V_18=D,V_loop_wrap1_0=E,V_14>=1,V_loop_wrap1_0>=0,F>=0,V_14>=4*F,V_14>=2*V_18,2*V_18+1>=V_14,4*F+3>=V_14] 


#### Cost of loops [19] 

 * loop 19:eval_main_bb3_in(B) -> [eval_main_bb3_in(B')] 
1*s(3)+0
#### Cost of phase [19]:eval_main_bb3_in(B) -> [eval_main_bb3_in(B')] 
1*s(4)+0
#### Cost of phase [19]:eval_main_bb3_in(B) -> [eval_main_bb3_in(B')] 
1*s(4)+0
#### Cost of phase [19]:eval_main_bb3_in(B) -> [eval_main_bb3_in(B')] 
1*s(4)+0
#### Cost of phase [19]:eval_main_bb3_in(B) -> [eval_main_bb3_in(B')] 
1*s(4)+0
#### Cost of chains of eval_main_bb3_in(B):
* Chain [[19]]...: 1*s(4)+0
  with precondition: [] 

* Chain [[19],18]...: 2*aux(2)+0
  with precondition: [] 

* Chain [[19],17]: 1*s(4)+0
  with precondition: [B=3] 

* Chain [[19],16]: 1*s(4)+0
  with precondition: [B=4] 

* Chain [18]...: 1*aux(2)+0
  with precondition: [] 

* Chain [17]: 0
  with precondition: [B=3] 

* Chain [16]: 0
  with precondition: [B=4] 


#### Cost of chains of loop_cont_eval_main_bb3_in(C,A):
* Chain [21]: 0
  with precondition: [C=3] 

* Chain [20]: 0
  with precondition: [C=4] 


#### Cost of chains of eval_main_7(B):
* Chain [23]: 1*aux(6)+0
  with precondition: [] 

* Chain [22]...: 1*s(14)+1
  with precondition: [] 


#### Cost of chains of eval_main_1(B):
* Chain [25]: 1*aux(7)+0
  with precondition: [] 

* Chain [24]...: 1*s(16)+1
  with precondition: [] 


#### Cost of chains of eval_main_start(B):
* Chain [27]: 1*s(17)+0
  with precondition: [] 

* Chain [26]...: 1*s(18)+1
  with precondition: [] 


Closed-form bounds of eval_main_start(B): 
-------------------------------------
* Chain [27] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_main_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 20 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 16 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 39 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 28 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 145 ms.

