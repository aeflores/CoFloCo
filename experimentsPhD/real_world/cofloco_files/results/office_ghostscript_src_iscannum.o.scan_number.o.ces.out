WARNING: Excluded non-linear constraints:[-A*D+4294967295>=0,-A*D+4294967295+1=<A]
WARNING: Excluded non-linear constraints:[-A*D+4294967295>=0,-A*D+4294967295+1=< -A]
WARNING: Excluded non-linear constraints:[-A*D+4294967295>=0,-A*D+4294967295+1=<A]
WARNING: Excluded non-linear constraints:[-A*D+4294967295>=0,-A*D+4294967295+1=< -A]
WARNING: Excluded non-linear constraints:[-A*E+4294967295>=0,-A*E+4294967295+1=<A]
WARNING: Excluded non-linear constraints:[-A*E+4294967295>=0,-A*E+4294967295+1=< -A]
WARNING: Excluded non-linear constraints:[-A*E+4294967295>=0,-A*E+4294967295+1=<A]
WARNING: Excluded non-linear constraints:[-A*E+4294967295>=0,-A*E+4294967295+1=< -A]
Warning: Ignored call to eval_scan_number_stop/1 in equation eval_scan_number_bb116_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_scan_number_bb116_in/1]
1. non_recursive  : [eval_scan_number_NewDefault21_in/1]
2. non_recursive  : [eval_scan_number_bb59_in/1]
3. non_recursive  : [eval_scan_number_NewDefault_in/1]
4. recursive  : [eval_scan_number_bb37_in/1,eval_scan_number_bb42_in/1]
5. recursive  : [eval_scan_number_bb49_in/1]
6. non_recursive  : [eval_scan_number_bb52_in/1]
7. non_recursive  : [loop_cont_eval_scan_number_bb49_in/2]
8. non_recursive  : [eval_scan_number_bb48_in/1]
9. recursive  : [eval_scan_number_bb105_in/2]
10. non_recursive  : [eval_scan_number_bb112_in/1]
11. non_recursive  : [eval_scan_number_bb109_in/1]
12. recursive  : [eval_scan_number_bb99_in/2]
13. non_recursive  : [loop_cont_eval_scan_number_bb105_in/2]
14. non_recursive  : [loop_cont_eval_scan_number_bb99_in/2]
15. non_recursive  : [eval_scan_number_bb97_in/2]
16. non_recursive  : [eval_scan_number_NewDefault73_in/2]
17. recursive  : [eval_scan_number_bb90_in/5]
18. non_recursive  : [eval_scan_number_bb95_in/3]
19. non_recursive  : [loop_cont_eval_scan_number_bb90_in/4]
20. non_recursive  : [eval_scan_number_bb89_in/2]
21. non_recursive  : [eval_scan_number_NewDefault84_in/2]
22. non_recursive  : [eval_scan_number_bb87_in/2]
23. non_recursive  : [eval_scan_number_bb84_in/2]
24. non_recursive  : [eval_scan_number_bb83_in/2]
25. non_recursive  : [eval_scan_number_bb57_in/1]
26. recursive  : [eval_scan_number_bb62_in/6,eval_scan_number_bb78_in/6]
27. non_recursive  : [loop_cont_eval_scan_number_bb37_in/2]
28. non_recursive  : [eval_scan_number_bb115_in/1]
29. non_recursive  : [eval_scan_number_bb82_in/2]
30. non_recursive  : [eval_scan_number_NewDefault66_in/2]
31. recursive  : [eval_scan_number_bb66_in/8,eval_scan_number_bb75_in/8]
32. recursive  : [eval_scan_number_bb70_in/8]
33. non_recursive  : [eval_scan_number_bb77_in/2]
34. non_recursive  : [eval_scan_number_bb73_in/4]
35. non_recursive  : [loop_cont_eval_scan_number_bb70_in/5]
36. non_recursive  : [loop_cont_eval_scan_number_bb66_in/6]
37. non_recursive  : [loop_cont_eval_scan_number_bb62_in/5]
38. non_recursive  : [eval_scan_number_bb33_in/2]
39. recursive  : [eval_scan_number_bb32_in/4,eval_scan_number_bb9_in/3]
40. recursive  : [eval_scan_number_bb14_in/1,eval_scan_number_bb25_in/1]
41. recursive  : [eval_scan_number_bb22_in/4,eval_scan_number_bb24_in/4]
42. non_recursive  : [eval_scan_number_bb31_in/1]
43. non_recursive  : [eval_scan_number_NewDefault51_in/1]
44. non_recursive  : [eval_scan_number_bb27_in/1]
45. non_recursive  : [loop_cont_eval_scan_number_bb22_in/5]
46. non_recursive  : [eval_scan_number_NewDefault40_in/1]
47. non_recursive  : [eval_scan_number_bb19_in/1]
48. non_recursive  : [loop_cont_eval_scan_number_bb14_in/2]
49. non_recursive  : [loop_cont_eval_scan_number_bb9_in/3]
50. non_recursive  : [eval_scan_number_bb0_in/1]
51. non_recursive  : [eval_scan_number_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_scan_number_bb37_in/1
5. SCC is partially evaluated into eval_scan_number_bb49_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_scan_number_bb49_in/2
8. SCC is partially evaluated into eval_scan_number_bb48_in/1
9. SCC is partially evaluated into eval_scan_number_bb105_in/2
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_scan_number_bb109_in/1
12. SCC is partially evaluated into eval_scan_number_bb99_in/2
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_scan_number_bb97_in/2
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_scan_number_bb90_in/5
18. SCC is partially evaluated into eval_scan_number_bb95_in/3
19. SCC is partially evaluated into loop_cont_eval_scan_number_bb90_in/4
20. SCC is partially evaluated into eval_scan_number_bb89_in/2
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_scan_number_bb87_in/2
23. SCC is partially evaluated into eval_scan_number_bb84_in/2
24. SCC is partially evaluated into eval_scan_number_bb83_in/2
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_scan_number_bb62_in/6
27. SCC is partially evaluated into loop_cont_eval_scan_number_bb37_in/2
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_scan_number_NewDefault66_in/2
31. SCC is partially evaluated into eval_scan_number_bb66_in/8
32. SCC is partially evaluated into eval_scan_number_bb70_in/8
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is partially evaluated into loop_cont_eval_scan_number_bb66_in/6
37. SCC is partially evaluated into loop_cont_eval_scan_number_bb62_in/5
38. SCC is partially evaluated into eval_scan_number_bb33_in/2
39. SCC is partially evaluated into eval_scan_number_bb9_in/3
40. SCC is partially evaluated into eval_scan_number_bb14_in/1
41. SCC is partially evaluated into eval_scan_number_bb22_in/4
42. SCC is completely evaluated into other SCCs
43. SCC is completely evaluated into other SCCs
44. SCC is partially evaluated into eval_scan_number_bb27_in/1
45. SCC is completely evaluated into other SCCs
46. SCC is partially evaluated into eval_scan_number_NewDefault40_in/1
47. SCC is partially evaluated into eval_scan_number_bb19_in/1
48. SCC is partially evaluated into loop_cont_eval_scan_number_bb14_in/2
49. SCC is partially evaluated into loop_cont_eval_scan_number_bb9_in/3
50. SCC is partially evaluated into eval_scan_number_bb0_in/1
51. SCC is partially evaluated into eval_scan_number_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_scan_number_bb37_in/1 
* CE 39 is refined into CE [91] 
* CE 40 is refined into CE [92] 
* CE 38 is refined into CE [93] 


#### Refined cost equations eval_scan_number_bb37_in/1 
* CE 91: eval_scan_number_bb37_in(B) = 0
     [B=14] 
* CE 92: eval_scan_number_bb37_in(B) = 0
     [B=7] 
* CE 93: eval_scan_number_bb37_in(B) = 1+ eval_scan_number_bb37_in(B)
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb37_in/1 
* CEs [93] --> Loop 67 
* CEs [91] --> Loop 68 
* CEs [92] --> Loop 69 

#### Loops of eval_scan_number_bb37_in/1 
* Loop 67: eval_scan_number_bb37_in(B)->  eval_scan_number_bb37_in(B)
                  [] 
* Loop 68: eval_scan_number_bb37_in(B) [B=14] 
* Loop 69: eval_scan_number_bb37_in(B) [B=7] 

### Ranking functions of CR eval_scan_number_bb37_in(B) 

#### Partial ranking functions of CR eval_scan_number_bb37_in(B) 


### Resulting Chains:eval_scan_number_bb37_in(B) 
* [[67]]...
* [[67],69]
* [[67],68]
* [69]
* [68]


### Merging Chains  eval_scan_number_bb37_in/1 into  External patterns of execution 
* [[69],[69,[67]]] --> 1 
* [[68],[68,[67]]] --> 2 
* [[[67]]] --> 3 


### Specialization of cost equations eval_scan_number_bb49_in/1 
* CE 62 is refined into CE [94] 
* CE 60 is refined into CE [95] 
* CE 61 is refined into CE [96] 


#### Refined cost equations eval_scan_number_bb49_in/1 
* CE 94: eval_scan_number_bb49_in(B) = 1+ eval_scan_number_bb49_in(B)
     [] 
* CE 95: eval_scan_number_bb49_in(B) = 0
     [B=14] 
* CE 96: eval_scan_number_bb49_in(B) = 0
     [B=7] 

### Cost equations --> "Loop" of eval_scan_number_bb49_in/1 
* CEs [95] --> Loop 70 
* CEs [96] --> Loop 71 
* CEs [94] --> Loop 72 

#### Loops of eval_scan_number_bb49_in/1 
* Loop 70: eval_scan_number_bb49_in(B) [B=14] 
* Loop 71: eval_scan_number_bb49_in(B) [B=7] 
* Loop 72: eval_scan_number_bb49_in(B)->  eval_scan_number_bb49_in(B)
                  [] 

### Ranking functions of CR eval_scan_number_bb49_in(B) 

#### Partial ranking functions of CR eval_scan_number_bb49_in(B) 


### Resulting Chains:eval_scan_number_bb49_in(B) 
* [[72]]...
* [[72],71]
* [[72],70]
* [71]
* [70]


### Merging Chains  eval_scan_number_bb49_in/1 into  External patterns of execution 
* [[71],[71,[72]]] --> 1 
* [[70],[70,[72]]] --> 2 
* [[[72]]] --> 3 


### Specialization of cost equations loop_cont_eval_scan_number_bb49_in/2 
* CE 63 is refined into CE [97] 
* CE 64 is refined into CE [98] 


#### Refined cost equations loop_cont_eval_scan_number_bb49_in/2 
* CE 97: loop_cont_eval_scan_number_bb49_in(B,A) = 0
     [B=14] 
* CE 98: loop_cont_eval_scan_number_bb49_in(B,A) = 0
     [B=7] 

### Cost equations --> "Loop" of loop_cont_eval_scan_number_bb49_in/2 
* CEs [97] --> Loop 73 
* CEs [98] --> Loop 74 

#### Loops of loop_cont_eval_scan_number_bb49_in/2 
* Loop 73: loop_cont_eval_scan_number_bb49_in(B,A) [B=14] 
* Loop 74: loop_cont_eval_scan_number_bb49_in(B,A) [B=7] 

### Ranking functions of CR loop_cont_eval_scan_number_bb49_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_scan_number_bb49_in(B,A) 


### Resulting Chains:loop_cont_eval_scan_number_bb49_in(B,A) 
* [74]
* [73]


### Merging Chains  loop_cont_eval_scan_number_bb49_in/2 into  External patterns of execution 
* [[74]] --> 1 
* [[73]] --> 2 


### Specialization of cost equations eval_scan_number_bb48_in/1 
* CE 43 is refined into CE [99,100,101] 


#### Refined cost equations eval_scan_number_bb48_in/1 
* CE 99: eval_scan_number_bb48_in(B) = 1+ eval_scan_number_bb49_in(C):1+ loop_cont_eval_scan_number_bb49_in(D,B):1
     [D=7,C=7] 
* CE 100: eval_scan_number_bb48_in(B) = 1+ eval_scan_number_bb49_in(C):2+ loop_cont_eval_scan_number_bb49_in(D,B):2
     [D=14,C=14] 
* CE 101: eval_scan_number_bb48_in(B) = 1+ eval_scan_number_bb49_in(C):3
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb48_in/1 
* CEs [101] --> Loop 75 
* CEs [99,100] --> Loop 76 

#### Loops of eval_scan_number_bb48_in/1 
* Loop 75: eval_scan_number_bb48_in(B) [] 
* Loop 76: eval_scan_number_bb48_in(B) [] 

### Ranking functions of CR eval_scan_number_bb48_in(B) 

#### Partial ranking functions of CR eval_scan_number_bb48_in(B) 


### Resulting Chains:eval_scan_number_bb48_in(B) 
* [76]
* [75]...


### Merging Chains  eval_scan_number_bb48_in/1 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 


### Specialization of cost equations eval_scan_number_bb105_in/2 
* CE 79 is refined into CE [102] 
* CE 78 is refined into CE [103] 


#### Refined cost equations eval_scan_number_bb105_in/2 
* CE 102: eval_scan_number_bb105_in(V_exp10_10,B) = 0
     [V_exp10_10+6>=0,B=5] 
* CE 103: eval_scan_number_bb105_in(V_exp10_10,B) = 1+ eval_scan_number_bb105_in(C,D)
     [0>=V_exp10_10+7,V_exp10_10+6=C,D=5,B=5] 

### Cost equations --> "Loop" of eval_scan_number_bb105_in/2 
* CEs [103] --> Loop 77 
* CEs [102] --> Loop 78 

#### Loops of eval_scan_number_bb105_in/2 
* Loop 77: eval_scan_number_bb105_in(V_exp10_10,B)->  eval_scan_number_bb105_in(V_exp10_10',B')
                  [0>=V_exp10_10+7,V_exp10_10+6=V_exp10_10',B'=5,B=5] 
* Loop 78: eval_scan_number_bb105_in(V_exp10_10,B) [V_exp10_10+6>=0,B=5] 

### Ranking functions of CR eval_scan_number_bb105_in(V_exp10_10,B) 
* RF of phase [77]: [-V_exp10_10/6-1]

#### Partial ranking functions of CR eval_scan_number_bb105_in(V_exp10_10,B) 
* Partial RF of phase [77]:
  - RF of loop [77:1]:
    -V_exp10_10/6-1


### Resulting Chains:eval_scan_number_bb105_in(V_exp10_10,B) 
* [[77],78]
* [78]


### Merging Chains  eval_scan_number_bb105_in/2 into  External patterns of execution 
* [[78,[77]]] --> 1 
* [[78]] --> 2 


### Specialization of cost equations eval_scan_number_bb109_in/1 
* CE 77 is refined into CE [104] 


#### Refined cost equations eval_scan_number_bb109_in/1 
* CE 104: eval_scan_number_bb109_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb109_in/1 
* CEs [104] --> Loop 79 

#### Loops of eval_scan_number_bb109_in/1 
* Loop 79: eval_scan_number_bb109_in(B) [] 

### Ranking functions of CR eval_scan_number_bb109_in(B) 

#### Partial ranking functions of CR eval_scan_number_bb109_in(B) 


### Resulting Chains:eval_scan_number_bb109_in(B) 
* [79]


### Merging Chains  eval_scan_number_bb109_in/1 into  External patterns of execution 
* [[79]] --> 1 


### Specialization of cost equations eval_scan_number_bb99_in/2 
* CE 76 is refined into CE [105] 
* CE 75 is refined into CE [106] 


#### Refined cost equations eval_scan_number_bb99_in/2 
* CE 105: eval_scan_number_bb99_in(V_exp10_9,B) = 0
     [6>=V_exp10_9,B=5] 
* CE 106: eval_scan_number_bb99_in(V_exp10_9,B) = 1+ eval_scan_number_bb99_in(C,D)
     [V_exp10_9>=7,V_exp10_9=C+6,D=5,B=5] 

### Cost equations --> "Loop" of eval_scan_number_bb99_in/2 
* CEs [106] --> Loop 80 
* CEs [105] --> Loop 81 

#### Loops of eval_scan_number_bb99_in/2 
* Loop 80: eval_scan_number_bb99_in(V_exp10_9,B)->  eval_scan_number_bb99_in(V_exp10_9',B')
                  [V_exp10_9>=7,V_exp10_9=V_exp10_9'+6,B'=5,B=5] 
* Loop 81: eval_scan_number_bb99_in(V_exp10_9,B) [6>=V_exp10_9,B=5] 

### Ranking functions of CR eval_scan_number_bb99_in(V_exp10_9,B) 
* RF of phase [80]: [V_exp10_9/6-1]

#### Partial ranking functions of CR eval_scan_number_bb99_in(V_exp10_9,B) 
* Partial RF of phase [80]:
  - RF of loop [80:1]:
    V_exp10_9/6-1


### Resulting Chains:eval_scan_number_bb99_in(V_exp10_9,B) 
* [[80],81]
* [81]


### Merging Chains  eval_scan_number_bb99_in/2 into  External patterns of execution 
* [[81]] --> 1 
* [[81,[80]]] --> 2 


### Specialization of cost equations eval_scan_number_bb97_in/2 
* CE 65 is refined into CE [107,108] 
* CE 66 is refined into CE [109,110] 
* CE 67 is refined into CE [111] 


#### Refined cost equations eval_scan_number_bb97_in/2 
* CE 107: eval_scan_number_bb97_in(V_exp10_8,B) = 1+ eval_scan_number_bb99_in(V_exp10_8,C):1+ eval_scan_number_bb109_in(B):1
     [6>=V_exp10_8,C=5] 
* CE 108: eval_scan_number_bb97_in(V_exp10_8,B) = 1+ eval_scan_number_bb99_in(V_exp10_8,C):2+ eval_scan_number_bb109_in(B):1
     [V_exp10_8>=7,C=5] 
* CE 109: eval_scan_number_bb97_in(V_exp10_8,B) = 1+ eval_scan_number_bb105_in(V_exp10_8,C):1+ eval_scan_number_bb109_in(B):1
     [0>=V_exp10_8+7,C=5] 
* CE 110: eval_scan_number_bb97_in(V_exp10_8,B) = 1+ eval_scan_number_bb105_in(V_exp10_8,C):2+ eval_scan_number_bb109_in(B):1
     [V_exp10_8+6>=0,C=5] 
* CE 111: eval_scan_number_bb97_in(V_exp10_8,B) = 0+ eval_scan_number_bb109_in(B):1
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb97_in/2 
* CEs [107,108,109,110,111] --> Loop 82 

#### Loops of eval_scan_number_bb97_in/2 
* Loop 82: eval_scan_number_bb97_in(V_exp10_8,B) [] 

### Ranking functions of CR eval_scan_number_bb97_in(V_exp10_8,B) 

#### Partial ranking functions of CR eval_scan_number_bb97_in(V_exp10_8,B) 


### Resulting Chains:eval_scan_number_bb97_in(V_exp10_8,B) 
* [82]


### Merging Chains  eval_scan_number_bb97_in/2 into  External patterns of execution 
* [[82]] --> 1 


### Specialization of cost equations eval_scan_number_bb90_in/5 
* CE 86 is refined into CE [112] 
* CE 85 is refined into CE [113] 
* CE 84 is refined into CE [114] 


#### Refined cost equations eval_scan_number_bb90_in/5 
* CE 112: eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) = 1+ eval_scan_number_bb90_in(V_exp10_6,E,B,C,D)
     [] 
* CE 113: eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) = 0
     [B=7] 
* CE 114: eval_scan_number_bb90_in(A,B,C,A,B) = 0
     [C=6] 

### Cost equations --> "Loop" of eval_scan_number_bb90_in/5 
* CEs [113] --> Loop 83 
* CEs [114] --> Loop 84 
* CEs [112] --> Loop 85 

#### Loops of eval_scan_number_bb90_in/5 
* Loop 83: eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) [B=7] 
* Loop 84: eval_scan_number_bb90_in(A,B,C,A,B) [C=6] 
* Loop 85: eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D)->  eval_scan_number_bb90_in(V_exp10_6,V_iexp_0',B,C,D)
                  [] 

### Ranking functions of CR eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) 

#### Partial ranking functions of CR eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) 


### Resulting Chains:eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) 
* [[85]]...
* [[85],84]
* [[85],83]
* [84]
* [83]


### Merging Chains  eval_scan_number_bb90_in/5 into  External patterns of execution 
* [[84],[84,[85]]] --> 1 
* [[83],[83,[85]]] --> 2 
* [[[85]]] --> 3 


### Specialization of cost equations eval_scan_number_bb95_in/3 
* CE 89 is refined into CE [115] 
* CE 90 is refined into CE [116] 


#### Refined cost equations eval_scan_number_bb95_in/3 
* CE 115: eval_scan_number_bb95_in(V_exp10_6,V_iexp_0,B) = 0+ eval_scan_number_bb97_in(C,B):1
     [V_iexp_0+C=V_exp10_6] 
* CE 116: eval_scan_number_bb95_in(V_exp10_6,V_iexp_0,B) = 0+ eval_scan_number_bb97_in(C,B):1
     [C=V_exp10_6+V_iexp_0] 

### Cost equations --> "Loop" of eval_scan_number_bb95_in/3 
* CEs [115,116] --> Loop 86 

#### Loops of eval_scan_number_bb95_in/3 
* Loop 86: eval_scan_number_bb95_in(V_exp10_6,V_iexp_0,B) [] 

### Ranking functions of CR eval_scan_number_bb95_in(V_exp10_6,V_iexp_0,B) 

#### Partial ranking functions of CR eval_scan_number_bb95_in(V_exp10_6,V_iexp_0,B) 


### Resulting Chains:eval_scan_number_bb95_in(V_exp10_6,V_iexp_0,B) 
* [86]


### Merging Chains  eval_scan_number_bb95_in/3 into  External patterns of execution 
* [[86]] --> 1 


### Specialization of cost equations loop_cont_eval_scan_number_bb90_in/4 
* CE 88 is refined into CE [117] 
* CE 87 is refined into CE [118] 


#### Refined cost equations loop_cont_eval_scan_number_bb90_in/4 
* CE 117: loop_cont_eval_scan_number_bb90_in(D,A,B,C) = 0
     [D=7] 
* CE 118: loop_cont_eval_scan_number_bb90_in(D,A,B,C) = 0+ eval_scan_number_bb95_in(A,B,C):1
     [D=6] 

### Cost equations --> "Loop" of loop_cont_eval_scan_number_bb90_in/4 
* CEs [117] --> Loop 87 
* CEs [118] --> Loop 88 

#### Loops of loop_cont_eval_scan_number_bb90_in/4 
* Loop 87: loop_cont_eval_scan_number_bb90_in(D,A,B,C) [D=7] 
* Loop 88: loop_cont_eval_scan_number_bb90_in(D,A,B,C) [D=6] 

### Ranking functions of CR loop_cont_eval_scan_number_bb90_in(D,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_scan_number_bb90_in(D,A,B,C) 


### Resulting Chains:loop_cont_eval_scan_number_bb90_in(D,A,B,C) 
* [88]
* [87]


### Merging Chains  loop_cont_eval_scan_number_bb90_in/4 into  External patterns of execution 
* [[88]] --> 1 
* [[87]] --> 2 


### Specialization of cost equations eval_scan_number_bb89_in/2 
* CE 82 is refined into CE [119,120,121] 
* CE 83 is refined into CE [122] 


#### Refined cost equations eval_scan_number_bb89_in/2 
* CE 119: eval_scan_number_bb89_in(V_exp10_6,B) = 1+ eval_scan_number_bb90_in(V_exp10_6,C,D,V_exp10_6,E):1+ loop_cont_eval_scan_number_bb90_in(F,V_exp10_6,E,B):1
     [F=6,D=6] 
* CE 120: eval_scan_number_bb89_in(V_exp10_6,B) = 1+ eval_scan_number_bb90_in(V_exp10_6,C,D,E,F):2+ loop_cont_eval_scan_number_bb90_in(G,E,F,B):2
     [G=7,D=7] 
* CE 121: eval_scan_number_bb89_in(V_exp10_6,B) = 1+ eval_scan_number_bb90_in(V_exp10_6,C,D,E,F):3
     [] 
* CE 122: eval_scan_number_bb89_in(V_exp10_6,B) = 0
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb89_in/2 
* CEs [119,120,122] --> Loop 89 
* CEs [121] --> Loop 90 

#### Loops of eval_scan_number_bb89_in/2 
* Loop 89: eval_scan_number_bb89_in(V_exp10_6,B) [] 
* Loop 90: eval_scan_number_bb89_in(V_exp10_6,B) [] 

### Ranking functions of CR eval_scan_number_bb89_in(V_exp10_6,B) 

#### Partial ranking functions of CR eval_scan_number_bb89_in(V_exp10_6,B) 


### Resulting Chains:eval_scan_number_bb89_in(V_exp10_6,B) 
* [90]...
* [89]


### Merging Chains  eval_scan_number_bb89_in/2 into  External patterns of execution 
* [[89]] --> 1 
* [[90]] --> 2 


### Specialization of cost equations eval_scan_number_bb87_in/2 
* CE 80 is refined into CE [123] 
* CE 81 is refined into CE [124,125] 


#### Refined cost equations eval_scan_number_bb87_in/2 
* CE 123: eval_scan_number_bb87_in(V_exp10_6,B) = 0
     [] 
* CE 124: eval_scan_number_bb87_in(V_exp10_6,B) = 0+ eval_scan_number_bb89_in(V_exp10_6,B):1
     [] 
* CE 125: eval_scan_number_bb87_in(V_exp10_6,B) = 0+ eval_scan_number_bb89_in(V_exp10_6,B):2
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb87_in/2 
* CEs [125] --> Loop 91 
* CEs [123,124] --> Loop 92 

#### Loops of eval_scan_number_bb87_in/2 
* Loop 91: eval_scan_number_bb87_in(V_exp10_6,B) [] 
* Loop 92: eval_scan_number_bb87_in(V_exp10_6,B) [] 

### Ranking functions of CR eval_scan_number_bb87_in(V_exp10_6,B) 

#### Partial ranking functions of CR eval_scan_number_bb87_in(V_exp10_6,B) 


### Resulting Chains:eval_scan_number_bb87_in(V_exp10_6,B) 
* [92]
* [91]...


### Merging Chains  eval_scan_number_bb87_in/2 into  External patterns of execution 
* [[92]] --> 1 
* [[91]] --> 2 


### Specialization of cost equations eval_scan_number_bb84_in/2 
* CE 68 is refined into CE [126] 
* CE 69 is refined into CE [127,128] 
* CE 70 is refined into CE [129,130] 


#### Refined cost equations eval_scan_number_bb84_in/2 
* CE 126: eval_scan_number_bb84_in(V_exp10_6,B) = 0
     [] 
* CE 127: eval_scan_number_bb84_in(V_exp10_6,B) = 0+ eval_scan_number_bb87_in(V_exp10_6,B):1
     [] 
* CE 128: eval_scan_number_bb84_in(V_exp10_6,B) = 0+ eval_scan_number_bb87_in(V_exp10_6,B):2
     [] 
* CE 129: eval_scan_number_bb84_in(V_exp10_6,B) = 0+ eval_scan_number_bb89_in(V_exp10_6,B):1
     [] 
* CE 130: eval_scan_number_bb84_in(V_exp10_6,B) = 0+ eval_scan_number_bb89_in(V_exp10_6,B):2
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb84_in/2 
* CEs [128,130] --> Loop 93 
* CEs [126,127,129] --> Loop 94 

#### Loops of eval_scan_number_bb84_in/2 
* Loop 93: eval_scan_number_bb84_in(V_exp10_6,B) [] 
* Loop 94: eval_scan_number_bb84_in(V_exp10_6,B) [] 

### Ranking functions of CR eval_scan_number_bb84_in(V_exp10_6,B) 

#### Partial ranking functions of CR eval_scan_number_bb84_in(V_exp10_6,B) 


### Resulting Chains:eval_scan_number_bb84_in(V_exp10_6,B) 
* [94]
* [93]...


### Merging Chains  eval_scan_number_bb84_in/2 into  External patterns of execution 
* [[94]] --> 1 
* [[93]] --> 2 


### Specialization of cost equations eval_scan_number_bb83_in/2 
* CE 44 is refined into CE [131] 
* CE 45 is refined into CE [132,133] 


#### Refined cost equations eval_scan_number_bb83_in/2 
* CE 131: eval_scan_number_bb83_in(V_exp10_6,B) = 0+ eval_scan_number_bb97_in(V_exp10_6,B):1
     [] 
* CE 132: eval_scan_number_bb83_in(V_exp10_6,B) = 0+ eval_scan_number_bb84_in(V_exp10_6,B):1
     [] 
* CE 133: eval_scan_number_bb83_in(V_exp10_6,B) = 0+ eval_scan_number_bb84_in(V_exp10_6,B):2
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb83_in/2 
* CEs [133] --> Loop 95 
* CEs [131,132] --> Loop 96 

#### Loops of eval_scan_number_bb83_in/2 
* Loop 95: eval_scan_number_bb83_in(V_exp10_6,B) [] 
* Loop 96: eval_scan_number_bb83_in(V_exp10_6,B) [] 

### Ranking functions of CR eval_scan_number_bb83_in(V_exp10_6,B) 

#### Partial ranking functions of CR eval_scan_number_bb83_in(V_exp10_6,B) 


### Resulting Chains:eval_scan_number_bb83_in(V_exp10_6,B) 
* [96]
* [95]...


### Merging Chains  eval_scan_number_bb83_in/2 into  External patterns of execution 
* [[96]] --> 1 
* [[95]] --> 2 


### Specialization of cost equations eval_scan_number_bb62_in/6 
* CE 25 is refined into CE [134] 
* CE 24 is refined into CE [135] 
* CE 23 is refined into CE [136] 
* CE 22 is refined into CE [137] 


#### Refined cost equations eval_scan_number_bb62_in/6 
* CE 134: eval_scan_number_bb62_in(A,B,C,B,D,E) = 0
     [0>=B,C=13] 
* CE 135: eval_scan_number_bb62_in(A,B,C,B,D,E) = 0
     [0>=B,C=12] 
* CE 136: eval_scan_number_bb62_in(A,B,C,A,B,B) = 0
     [0>=B,C=11] 
* CE 137: eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E) = 1+ eval_scan_number_bb62_in(V_ival_2,F,B,C,D,E)
     [0>=V_exp10_0,V_exp10_0=F+1] 

### Cost equations --> "Loop" of eval_scan_number_bb62_in/6 
* CEs [137] --> Loop 97 
* CEs [134] --> Loop 98 
* CEs [135] --> Loop 99 
* CEs [136] --> Loop 100 

#### Loops of eval_scan_number_bb62_in/6 
* Loop 97: eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E)->  eval_scan_number_bb62_in(V_ival_2,V_exp10_0',B,C,D,E)
                  [0>=V_exp10_0,V_exp10_0=V_exp10_0'+1] 
* Loop 98: eval_scan_number_bb62_in(A,B,C,B,D,E) [0>=B,C=13] 
* Loop 99: eval_scan_number_bb62_in(A,B,C,B,D,E) [0>=B,C=12] 
* Loop 100: eval_scan_number_bb62_in(A,B,C,A,B,B) [0>=B,C=11] 

### Ranking functions of CR eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E) 

#### Partial ranking functions of CR eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E) 


### Resulting Chains:eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E) 
* [[97]]...
* [[97],100]
* [[97],99]
* [[97],98]
* [100]
* [99]
* [98]


### Merging Chains  eval_scan_number_bb62_in/6 into  External patterns of execution 
* [[100]] --> 1 
* [[100,[97]]] --> 2 
* [[99]] --> 3 
* [[99,[97]]] --> 4 
* [[98]] --> 5 
* [[98,[97]]] --> 6 
* [[[97]]] --> 7 


### Specialization of cost equations loop_cont_eval_scan_number_bb37_in/2 
* CE 41 is refined into CE [138] 
* CE 42 is refined into CE [139] 


#### Refined cost equations loop_cont_eval_scan_number_bb37_in/2 
* CE 138: loop_cont_eval_scan_number_bb37_in(B,A) = 0
     [B=14] 
* CE 139: loop_cont_eval_scan_number_bb37_in(B,A) = 0
     [B=7] 

### Cost equations --> "Loop" of loop_cont_eval_scan_number_bb37_in/2 
* CEs [138] --> Loop 101 
* CEs [139] --> Loop 102 

#### Loops of loop_cont_eval_scan_number_bb37_in/2 
* Loop 101: loop_cont_eval_scan_number_bb37_in(B,A) [B=14] 
* Loop 102: loop_cont_eval_scan_number_bb37_in(B,A) [B=7] 

### Ranking functions of CR loop_cont_eval_scan_number_bb37_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_scan_number_bb37_in(B,A) 


### Resulting Chains:loop_cont_eval_scan_number_bb37_in(B,A) 
* [102]
* [101]


### Merging Chains  loop_cont_eval_scan_number_bb37_in/2 into  External patterns of execution 
* [[102]] --> 1 
* [[101]] --> 2 


### Specialization of cost equations eval_scan_number_NewDefault66_in/2 
* CE 51 is refined into CE [140,141] 
* CE 52 is refined into CE [142] 


#### Refined cost equations eval_scan_number_NewDefault66_in/2 
* CE 140: eval_scan_number_NewDefault66_in(V_exp10_0,B) = 0+ eval_scan_number_bb83_in(V_exp10_0,B):1
     [] 
* CE 141: eval_scan_number_NewDefault66_in(V_exp10_0,B) = 0+ eval_scan_number_bb83_in(V_exp10_0,B):2
     [] 
* CE 142: eval_scan_number_NewDefault66_in(V_exp10_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_scan_number_NewDefault66_in/2 
* CEs [140,142] --> Loop 103 
* CEs [141] --> Loop 104 

#### Loops of eval_scan_number_NewDefault66_in/2 
* Loop 103: eval_scan_number_NewDefault66_in(V_exp10_0,B) [] 
* Loop 104: eval_scan_number_NewDefault66_in(V_exp10_0,B) [] 

### Ranking functions of CR eval_scan_number_NewDefault66_in(V_exp10_0,B) 

#### Partial ranking functions of CR eval_scan_number_NewDefault66_in(V_exp10_0,B) 


### Resulting Chains:eval_scan_number_NewDefault66_in(V_exp10_0,B) 
* [104]...
* [103]


### Merging Chains  eval_scan_number_NewDefault66_in/2 into  External patterns of execution 
* [[103]] --> 1 
* [[104]] --> 2 


### Specialization of cost equations eval_scan_number_bb66_in/8 
* CE 48 is refined into CE [143] 
* CE 47 is refined into CE [144] 
* CE 46 is refined into CE [145] 


#### Refined cost equations eval_scan_number_bb66_in/8 
* CE 143: eval_scan_number_bb66_in(A,B,C,D,C,E,F,G) = 0
     [D=10] 
* CE 144: eval_scan_number_bb66_in(A,B,C,D,A,B,C,C) = 0
     [D=9] 
* CE 145: eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F) = 1+ eval_scan_number_bb66_in(V_ival_2,V_exp10_0,G,B,C,D,E,F)
     [G+1=V_exp10_2] 

### Cost equations --> "Loop" of eval_scan_number_bb66_in/8 
* CEs [145] --> Loop 105 
* CEs [143] --> Loop 106 
* CEs [144] --> Loop 107 

#### Loops of eval_scan_number_bb66_in/8 
* Loop 105: eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F)->  eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2',B,C,D,E,F)
                  [V_exp10_2=V_exp10_2'+1] 
* Loop 106: eval_scan_number_bb66_in(A,B,C,D,C,E,F,G) [D=10] 
* Loop 107: eval_scan_number_bb66_in(A,B,C,D,A,B,C,C) [D=9] 

### Ranking functions of CR eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F) 

#### Partial ranking functions of CR eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F) 


### Resulting Chains:eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F) 
* [[105]]...
* [[105],107]
* [[105],106]
* [107]
* [106]


### Merging Chains  eval_scan_number_bb66_in/8 into  External patterns of execution 
* [[107]] --> 1 
* [[107,[105]]] --> 2 
* [[106]] --> 3 
* [[106,[105]]] --> 4 
* [[[105]]] --> 5 


### Specialization of cost equations eval_scan_number_bb70_in/8 
* CE 72 is refined into CE [146] 
* CE 71 is refined into CE [147] 


#### Refined cost equations eval_scan_number_bb70_in/8 
* CE 146: eval_scan_number_bb70_in(A,B,C,D,E,A,B,D) = 0
     [E=8] 
* CE 147: eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4,B,C,D,E) = 1+ eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,F,G,C,D,E)
     [F+1=V_exp10_4,G=8,B=8] 

### Cost equations --> "Loop" of eval_scan_number_bb70_in/8 
* CEs [147] --> Loop 108 
* CEs [146] --> Loop 109 

#### Loops of eval_scan_number_bb70_in/8 
* Loop 108: eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4,B,C,D,E)->  eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4',B',C,D,E)
                  [V_exp10_4=V_exp10_4'+1,B'=8,B=8] 
* Loop 109: eval_scan_number_bb70_in(A,B,C,D,E,A,B,D) [E=8] 

### Ranking functions of CR eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4,B,C,D,E) 

#### Partial ranking functions of CR eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4,B,C,D,E) 


### Resulting Chains:eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4,B,C,D,E) 
* [[108]]...
* [[108],109]
* [109]


### Merging Chains  eval_scan_number_bb70_in/8 into  External patterns of execution 
* [[109]] --> 1 
* [[109,[108]]] --> 2 
* [[[108]]] --> 3 


### Specialization of cost equations loop_cont_eval_scan_number_bb66_in/6 
* CE 50 is refined into CE [148,149] 
* CE 49 is refined into CE [150,151,152,153,154] 


#### Refined cost equations loop_cont_eval_scan_number_bb66_in/6 
* CE 148: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) = 0+ eval_scan_number_bb83_in(A,E):1
     [J=10] 
* CE 149: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) = 0+ eval_scan_number_bb83_in(A,E):2
     [J=10] 
* CE 150: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) = 1+ eval_scan_number_bb70_in(A,B,C,D,K,A,B,D):1+ eval_scan_number_bb83_in(D,E):1
     [K=8,J=9] 
* CE 151: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) = 1+ eval_scan_number_bb70_in(A,B,C,D,K,A,B,D):1+ eval_scan_number_bb83_in(D,E):2
     [K=8,J=9] 
* CE 152: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) = 1+ eval_scan_number_bb70_in(A,B,C,D,K,A,B,L):2+ eval_scan_number_bb83_in(L,E):1
     [D>=L+1,K=8,J=9] 
* CE 153: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) = 1+ eval_scan_number_bb70_in(A,B,C,D,K,A,B,L):2+ eval_scan_number_bb83_in(L,E):2
     [D>=L+1,K=8,J=9] 
* CE 154: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) = 1+ eval_scan_number_bb70_in(A,B,C,D,K,L,M,N):3
     [K=8,J=9] 

### Cost equations --> "Loop" of loop_cont_eval_scan_number_bb66_in/6 
* CEs [149] --> Loop 110 
* CEs [151,153,154] --> Loop 111 
* CEs [148] --> Loop 112 
* CEs [150,152] --> Loop 113 

#### Loops of loop_cont_eval_scan_number_bb66_in/6 
* Loop 110: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) [J=10] 
* Loop 111: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) [J=9] 
* Loop 112: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) [J=10] 
* Loop 113: loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) [J=9] 

### Ranking functions of CR loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E) 
* [113]
* [112]
* [111]...
* [110]...


### Merging Chains  loop_cont_eval_scan_number_bb66_in/6 into  External patterns of execution 
* [[113]] --> 1 
* [[112]] --> 2 
* [[111]] --> 3 
* [[110]] --> 4 


### Specialization of cost equations loop_cont_eval_scan_number_bb62_in/5 
* CE 28 is refined into CE [155,156] 
* CE 27 is refined into CE [157,158] 
* CE 26 is refined into CE [159,160,161,162,163,164,165,166,167] 


#### Refined cost equations loop_cont_eval_scan_number_bb62_in/5 
* CE 155: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 0+ eval_scan_number_NewDefault66_in(A,D):1
     [J=13] 
* CE 156: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 0+ eval_scan_number_NewDefault66_in(A,D):2
     [J=13] 
* CE 157: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 0+ eval_scan_number_bb83_in(A,D):1
     [J=12] 
* CE 158: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 0+ eval_scan_number_bb83_in(A,D):2
     [J=12] 
* CE 159: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 1+ eval_scan_number_bb66_in(A,B,C,K,A,B,C,C):1+ loop_cont_eval_scan_number_bb66_in(L,A,B,C,C,D):1
     [L=9,K=9,J=11] 
* CE 160: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 1+ eval_scan_number_bb66_in(A,B,C,K,A,B,C,C):1+ loop_cont_eval_scan_number_bb66_in(L,A,B,C,C,D):3
     [L=9,K=9,J=11] 
* CE 161: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 1+ eval_scan_number_bb66_in(A,B,C,K,A,B,L,L):2+ loop_cont_eval_scan_number_bb66_in(M,A,B,L,L,D):1
     [C>=L+1,M=9,K=9,J=11] 
* CE 162: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 1+ eval_scan_number_bb66_in(A,B,C,K,A,B,L,L):2+ loop_cont_eval_scan_number_bb66_in(M,A,B,L,L,D):3
     [C>=L+1,M=9,K=9,J=11] 
* CE 163: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 1+ eval_scan_number_bb66_in(A,B,C,K,C,L,M,N):3+ loop_cont_eval_scan_number_bb66_in(O,C,L,M,N,D):2
     [O=10,K=10,J=11] 
* CE 164: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 1+ eval_scan_number_bb66_in(A,B,C,K,C,L,M,N):3+ loop_cont_eval_scan_number_bb66_in(O,C,L,M,N,D):4
     [O=10,K=10,J=11] 
* CE 165: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 1+ eval_scan_number_bb66_in(A,B,C,K,L,M,N,O):4+ loop_cont_eval_scan_number_bb66_in(P,L,M,N,O,D):2
     [C>=L+1,P=10,K=10,J=11] 
* CE 166: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 1+ eval_scan_number_bb66_in(A,B,C,K,L,M,N,O):4+ loop_cont_eval_scan_number_bb66_in(P,L,M,N,O,D):4
     [C>=L+1,P=10,K=10,J=11] 
* CE 167: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) = 1+ eval_scan_number_bb66_in(A,B,C,K,L,M,N,O):5
     [J=11] 

### Cost equations --> "Loop" of loop_cont_eval_scan_number_bb62_in/5 
* CEs [156] --> Loop 114 
* CEs [158] --> Loop 115 
* CEs [160,162,164,166,167] --> Loop 116 
* CEs [155] --> Loop 117 
* CEs [157] --> Loop 118 
* CEs [159,161,163,165] --> Loop 119 

#### Loops of loop_cont_eval_scan_number_bb62_in/5 
* Loop 114: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) [J=13] 
* Loop 115: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) [J=12] 
* Loop 116: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) [J=11] 
* Loop 117: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) [J=13] 
* Loop 118: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) [J=12] 
* Loop 119: loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) [J=11] 

### Ranking functions of CR loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_scan_number_bb62_in(J,A,B,C,D) 
* [119]
* [118]
* [117]
* [116]...
* [115]...
* [114]...


### Merging Chains  loop_cont_eval_scan_number_bb62_in/5 into  External patterns of execution 
* [[119]] --> 1 
* [[118]] --> 2 
* [[117]] --> 3 
* [[116]] --> 4 
* [[115]] --> 5 
* [[114]] --> 6 


### Specialization of cost equations eval_scan_number_bb33_in/2 
* CE 14 is refined into CE [168] 
* CE 15 is refined into CE [169,170,171] 
* CE 16 is refined into CE [172,173,174] 
* CE 17 is refined into CE [175,176,177] 
* CE 18 is refined into CE [178,179,180] 
* CE 19 is refined into CE [181,182] 
* CE 20 is refined into CE [183,184,185,186,187,188,189,190,191,192,193,194,195] 
* CE 21 is refined into CE [196,197] 


#### Refined cost equations eval_scan_number_bb33_in/2 
* CE 168: eval_scan_number_bb33_in(V_ival_2,B) = 0
     [] 
* CE 169: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):1+ loop_cont_eval_scan_number_bb37_in(D,B):1
     [D=7,C=7,V_ival_2=1] 
* CE 170: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):2+ loop_cont_eval_scan_number_bb37_in(D,B):2
     [D=14,C=14,V_ival_2=1] 
* CE 171: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):3
     [V_ival_2=1] 
* CE 172: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):1+ loop_cont_eval_scan_number_bb37_in(D,B):1
     [D=7,C=7,V_ival_2+1=0] 
* CE 173: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):2+ loop_cont_eval_scan_number_bb37_in(D,B):2
     [D=14,C=14,V_ival_2+1=0] 
* CE 174: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):3
     [V_ival_2+1=0] 
* CE 175: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):1+ loop_cont_eval_scan_number_bb37_in(D,B):1
     [V_ival_2>=2,D=7,C=7] 
* CE 176: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):2+ loop_cont_eval_scan_number_bb37_in(D,B):2
     [V_ival_2>=2,D=14,C=14] 
* CE 177: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):3
     [V_ival_2>=2] 
* CE 178: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):1+ loop_cont_eval_scan_number_bb37_in(D,B):1
     [0>=V_ival_2+2,D=7,C=7] 
* CE 179: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):2+ loop_cont_eval_scan_number_bb37_in(D,B):2
     [0>=V_ival_2+2,D=14,C=14] 
* CE 180: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb37_in(C):3
     [0>=V_ival_2+2] 
* CE 181: eval_scan_number_bb33_in(V_ival_2,B) = 0+ eval_scan_number_bb48_in(B):1
     [] 
* CE 182: eval_scan_number_bb33_in(V_ival_2,B) = 0+ eval_scan_number_bb48_in(B):2
     [] 
* CE 183: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,V_ival_2,E,F):1+ loop_cont_eval_scan_number_bb62_in(G,V_ival_2,H,I,B):1
     [I=0,H=0,G=11,F=0,E=0,D=11,C=0] 
* CE 184: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,V_ival_2,E,F):1+ loop_cont_eval_scan_number_bb62_in(G,V_ival_2,H,I,B):4
     [I=0,H=0,G=11,F=0,E=0,D=11,C=0] 
* CE 185: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,V_ival_2,E,E):2+ loop_cont_eval_scan_number_bb62_in(F,V_ival_2,E,E,B):1
     [0>=E+1,F=11,D=11,C=0] 
* CE 186: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,V_ival_2,E,E):2+ loop_cont_eval_scan_number_bb62_in(F,V_ival_2,E,E,B):4
     [0>=E+1,F=11,D=11,C=0] 
* CE 187: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,E,F,G):3+ loop_cont_eval_scan_number_bb62_in(H,I,F,G,B):2
     [I=0,H=12,E=0,D=12,C=0] 
* CE 188: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,E,F,G):3+ loop_cont_eval_scan_number_bb62_in(H,I,F,G,B):5
     [I=0,H=12,E=0,D=12,C=0] 
* CE 189: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,E,F,G):4+ loop_cont_eval_scan_number_bb62_in(H,E,F,G,B):2
     [0>=E+1,H=12,D=12,C=0] 
* CE 190: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,E,F,G):4+ loop_cont_eval_scan_number_bb62_in(H,E,F,G,B):5
     [0>=E+1,H=12,D=12,C=0] 
* CE 191: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,E,F,G):5+ loop_cont_eval_scan_number_bb62_in(H,I,F,G,B):3
     [I=0,H=13,E=0,D=13,C=0] 
* CE 192: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,E,F,G):5+ loop_cont_eval_scan_number_bb62_in(H,I,F,G,B):6
     [I=0,H=13,E=0,D=13,C=0] 
* CE 193: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,E,F,G):6+ loop_cont_eval_scan_number_bb62_in(H,E,F,G,B):3
     [0>=E+1,H=13,D=13,C=0] 
* CE 194: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,E,F,G):6+ loop_cont_eval_scan_number_bb62_in(H,E,F,G,B):6
     [0>=E+1,H=13,D=13,C=0] 
* CE 195: eval_scan_number_bb33_in(V_ival_2,B) = 1+ eval_scan_number_bb62_in(V_ival_2,C,D,E,F,G):7
     [C=0] 
* CE 196: eval_scan_number_bb33_in(V_ival_2,B) = 0+ eval_scan_number_bb83_in(C,B):1
     [C=0] 
* CE 197: eval_scan_number_bb33_in(V_ival_2,B) = 0+ eval_scan_number_bb83_in(C,B):2
     [C=0] 

### Cost equations --> "Loop" of eval_scan_number_bb33_in/2 
* CEs [171,174,177,180,182,184,186,188,190,192,194,195,197] --> Loop 120 
* CEs [168,169,170,172,173,175,176,178,179,181,183,185,187,189,191,193,196] --> Loop 121 

#### Loops of eval_scan_number_bb33_in/2 
* Loop 120: eval_scan_number_bb33_in(V_ival_2,B) [] 
* Loop 121: eval_scan_number_bb33_in(V_ival_2,B) [] 

### Ranking functions of CR eval_scan_number_bb33_in(V_ival_2,B) 

#### Partial ranking functions of CR eval_scan_number_bb33_in(V_ival_2,B) 


### Resulting Chains:eval_scan_number_bb33_in(V_ival_2,B) 
* [121]
* [120]...


### Merging Chains  eval_scan_number_bb33_in/2 into  External patterns of execution 
* [[121]] --> 1 
* [[120]] --> 2 


### Specialization of cost equations eval_scan_number_bb9_in/3 
* CE 10 is refined into CE [198] 
* CE 9 is refined into CE [199] 
* CE 8 is refined into CE [200] 
* CE 7 is refined into CE [201] 


#### Refined cost equations eval_scan_number_bb9_in/3 
* CE 198: eval_scan_number_bb9_in(A,B,A) = 0
     [B=4] 
* CE 199: eval_scan_number_bb9_in(V_ival_1,B,C) = 0
     [B=3] 
* CE 200: eval_scan_number_bb9_in(V_ival_1,B,C) = 0
     [B=2] 
* CE 201: eval_scan_number_bb9_in(V_ival_1,B,C) = 1+ eval_scan_number_bb9_in(D,B,C)
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb9_in/3 
* CEs [201] --> Loop 122 
* CEs [198] --> Loop 123 
* CEs [199] --> Loop 124 
* CEs [200] --> Loop 125 

#### Loops of eval_scan_number_bb9_in/3 
* Loop 122: eval_scan_number_bb9_in(V_ival_1,B,C)->  eval_scan_number_bb9_in(V_ival_1',B,C)
                  [] 
* Loop 123: eval_scan_number_bb9_in(A,B,A) [B=4] 
* Loop 124: eval_scan_number_bb9_in(V_ival_1,B,C) [B=3] 
* Loop 125: eval_scan_number_bb9_in(V_ival_1,B,C) [B=2] 

### Ranking functions of CR eval_scan_number_bb9_in(V_ival_1,B,C) 

#### Partial ranking functions of CR eval_scan_number_bb9_in(V_ival_1,B,C) 


### Resulting Chains:eval_scan_number_bb9_in(V_ival_1,B,C) 
* [[122]]...
* [[122],125]
* [[122],124]
* [[122],123]
* [125]
* [124]
* [123]


### Merging Chains  eval_scan_number_bb9_in/3 into  External patterns of execution 
* [[125],[125,[122]]] --> 1 
* [[124],[124,[122]]] --> 2 
* [[123],[123,[122]]] --> 3 
* [[[122]]] --> 4 


### Specialization of cost equations eval_scan_number_bb14_in/1 
* CE 29 is refined into CE [202] 
* CE 31 is refined into CE [203] 
* CE 33 is refined into CE [204] 
* CE 32 is refined into CE [205] 
* CE 30 is refined into CE [206] 


#### Refined cost equations eval_scan_number_bb14_in/1 
* CE 202: eval_scan_number_bb14_in(B) = 0
     [B=18] 
* CE 203: eval_scan_number_bb14_in(B) = 0
     [B=17] 
* CE 204: eval_scan_number_bb14_in(B) = 0
     [B=16] 
* CE 205: eval_scan_number_bb14_in(B) = 0
     [B=15] 
* CE 206: eval_scan_number_bb14_in(B) = 1+ eval_scan_number_bb14_in(B)
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb14_in/1 
* CEs [206] --> Loop 126 
* CEs [202] --> Loop 127 
* CEs [203] --> Loop 128 
* CEs [204] --> Loop 129 
* CEs [205] --> Loop 130 

#### Loops of eval_scan_number_bb14_in/1 
* Loop 126: eval_scan_number_bb14_in(B)->  eval_scan_number_bb14_in(B)
                  [] 
* Loop 127: eval_scan_number_bb14_in(B) [B=18] 
* Loop 128: eval_scan_number_bb14_in(B) [B=17] 
* Loop 129: eval_scan_number_bb14_in(B) [B=16] 
* Loop 130: eval_scan_number_bb14_in(B) [B=15] 

### Ranking functions of CR eval_scan_number_bb14_in(B) 

#### Partial ranking functions of CR eval_scan_number_bb14_in(B) 


### Resulting Chains:eval_scan_number_bb14_in(B) 
* [[126]]...
* [[126],130]
* [[126],129]
* [[126],128]
* [[126],127]
* [130]
* [129]
* [128]
* [127]


### Merging Chains  eval_scan_number_bb14_in/1 into  External patterns of execution 
* [[130],[130,[126]]] --> 1 
* [[129],[129,[126]]] --> 2 
* [[128],[128,[126]]] --> 3 
* [[127],[127,[126]]] --> 4 
* [[[126]]] --> 5 


### Specialization of cost equations eval_scan_number_bb22_in/4 
* CE 56 is refined into CE [207] 
* CE 55 is refined into CE [208] 


#### Refined cost equations eval_scan_number_bb22_in/4 
* CE 207: eval_scan_number_bb22_in(B,C,D,E) = 1+ eval_scan_number_bb22_in(F,C,D,E)
     [F=8,B=8] 
* CE 208: eval_scan_number_bb22_in(B,C,D,E) = 0
     [E=0,B=8] 

### Cost equations --> "Loop" of eval_scan_number_bb22_in/4 
* CEs [208] --> Loop 131 
* CEs [207] --> Loop 132 

#### Loops of eval_scan_number_bb22_in/4 
* Loop 131: eval_scan_number_bb22_in(B,C,D,E) [E=0,B=8] 
* Loop 132: eval_scan_number_bb22_in(B,C,D,E)->  eval_scan_number_bb22_in(B',C,D,E)
                  [B'=8,B=8] 

### Ranking functions of CR eval_scan_number_bb22_in(B,C,D,E) 

#### Partial ranking functions of CR eval_scan_number_bb22_in(B,C,D,E) 


### Resulting Chains:eval_scan_number_bb22_in(B,C,D,E) 
* [[132]]...
* [[132],131]
* [131]


### Merging Chains  eval_scan_number_bb22_in/4 into  External patterns of execution 
* [[131],[131,[132]]] --> 1 
* [[[132]]] --> 2 


### Specialization of cost equations eval_scan_number_bb27_in/1 
* CE 57 is refined into CE [209] 
* CE 58 is refined into CE [210,211,212,213,214,215,216,217,218] 
* CE 59 is refined into CE [219,220] 


#### Refined cost equations eval_scan_number_bb27_in/1 
* CE 209: eval_scan_number_bb27_in(B) = 0
     [] 
* CE 210: eval_scan_number_bb27_in(B) = 1+ eval_scan_number_bb66_in(C,D,E,F,C,D,G,H):1+ loop_cont_eval_scan_number_bb66_in(I,C,D,J,K,B):1
     [K=0,J=0,I=9,H=0,G=0,F=9,E=0] 
* CE 211: eval_scan_number_bb27_in(B) = 1+ eval_scan_number_bb66_in(C,D,E,F,C,D,G,H):1+ loop_cont_eval_scan_number_bb66_in(I,C,D,J,K,B):3
     [K=0,J=0,I=9,H=0,G=0,F=9,E=0] 
* CE 212: eval_scan_number_bb27_in(B) = 1+ eval_scan_number_bb66_in(C,D,E,F,C,D,G,G):2+ loop_cont_eval_scan_number_bb66_in(H,C,D,G,G,B):1
     [0>=G+1,H=9,F=9,E=0] 
* CE 213: eval_scan_number_bb27_in(B) = 1+ eval_scan_number_bb66_in(C,D,E,F,C,D,G,G):2+ loop_cont_eval_scan_number_bb66_in(H,C,D,G,G,B):3
     [0>=G+1,H=9,F=9,E=0] 
* CE 214: eval_scan_number_bb27_in(B) = 1+ eval_scan_number_bb66_in(C,D,E,F,G,H,I,J):3+ loop_cont_eval_scan_number_bb66_in(K,L,H,I,J,B):2
     [L=0,K=10,G=0,F=10,E=0] 
* CE 215: eval_scan_number_bb27_in(B) = 1+ eval_scan_number_bb66_in(C,D,E,F,G,H,I,J):3+ loop_cont_eval_scan_number_bb66_in(K,L,H,I,J,B):4
     [L=0,K=10,G=0,F=10,E=0] 
* CE 216: eval_scan_number_bb27_in(B) = 1+ eval_scan_number_bb66_in(C,D,E,F,G,H,I,J):4+ loop_cont_eval_scan_number_bb66_in(K,G,H,I,J,B):2
     [0>=G+1,K=10,F=10,E=0] 
* CE 217: eval_scan_number_bb27_in(B) = 1+ eval_scan_number_bb66_in(C,D,E,F,G,H,I,J):4+ loop_cont_eval_scan_number_bb66_in(K,G,H,I,J,B):4
     [0>=G+1,K=10,F=10,E=0] 
* CE 218: eval_scan_number_bb27_in(B) = 1+ eval_scan_number_bb66_in(C,D,E,F,G,H,I,J):5
     [E=0] 
* CE 219: eval_scan_number_bb27_in(B) = 0+ eval_scan_number_bb83_in(C,B):1
     [C=0] 
* CE 220: eval_scan_number_bb27_in(B) = 0+ eval_scan_number_bb83_in(C,B):2
     [C=0] 

### Cost equations --> "Loop" of eval_scan_number_bb27_in/1 
* CEs [211,213,215,217,218,220] --> Loop 133 
* CEs [209,210,212,214,216,219] --> Loop 134 

#### Loops of eval_scan_number_bb27_in/1 
* Loop 133: eval_scan_number_bb27_in(B) [] 
* Loop 134: eval_scan_number_bb27_in(B) [] 

### Ranking functions of CR eval_scan_number_bb27_in(B) 

#### Partial ranking functions of CR eval_scan_number_bb27_in(B) 


### Resulting Chains:eval_scan_number_bb27_in(B) 
* [134]
* [133]...


### Merging Chains  eval_scan_number_bb27_in/1 into  External patterns of execution 
* [[134]] --> 1 
* [[133]] --> 2 


### Specialization of cost equations eval_scan_number_NewDefault40_in/1 
* CE 73 is refined into CE [221,222,223] 
* CE 74 is refined into CE [224,225] 


#### Refined cost equations eval_scan_number_NewDefault40_in/1 
* CE 221: eval_scan_number_NewDefault40_in(B) = 1+ eval_scan_number_bb22_in(C,D,E,F):1+ eval_scan_number_bb83_in(G,B):1
     [G=0,F=0,C=8] 
* CE 222: eval_scan_number_NewDefault40_in(B) = 1+ eval_scan_number_bb22_in(C,D,E,F):1+ eval_scan_number_bb83_in(G,B):2
     [G=0,F=0,C=8] 
* CE 223: eval_scan_number_NewDefault40_in(B) = 1+ eval_scan_number_bb22_in(C,D,E,F):2
     [C=8] 
* CE 224: eval_scan_number_NewDefault40_in(B) = 0+ eval_scan_number_bb27_in(B):1
     [] 
* CE 225: eval_scan_number_NewDefault40_in(B) = 0+ eval_scan_number_bb27_in(B):2
     [] 

### Cost equations --> "Loop" of eval_scan_number_NewDefault40_in/1 
* CEs [222,223,225] --> Loop 135 
* CEs [221,224] --> Loop 136 

#### Loops of eval_scan_number_NewDefault40_in/1 
* Loop 135: eval_scan_number_NewDefault40_in(B) [] 
* Loop 136: eval_scan_number_NewDefault40_in(B) [] 

### Ranking functions of CR eval_scan_number_NewDefault40_in(B) 

#### Partial ranking functions of CR eval_scan_number_NewDefault40_in(B) 


### Resulting Chains:eval_scan_number_NewDefault40_in(B) 
* [136]
* [135]...


### Merging Chains  eval_scan_number_NewDefault40_in/1 into  External patterns of execution 
* [[136]] --> 1 
* [[135]] --> 2 


### Specialization of cost equations eval_scan_number_bb19_in/1 
* CE 53 is refined into CE [226,227] 
* CE 54 is refined into CE [228,229] 


#### Refined cost equations eval_scan_number_bb19_in/1 
* CE 226: eval_scan_number_bb19_in(B) = 0+ eval_scan_number_bb83_in(C,B):1
     [C=0] 
* CE 227: eval_scan_number_bb19_in(B) = 0+ eval_scan_number_bb83_in(C,B):2
     [C=0] 
* CE 228: eval_scan_number_bb19_in(B) = 0+ eval_scan_number_NewDefault40_in(B):1
     [] 
* CE 229: eval_scan_number_bb19_in(B) = 0+ eval_scan_number_NewDefault40_in(B):2
     [] 

### Cost equations --> "Loop" of eval_scan_number_bb19_in/1 
* CEs [227,229] --> Loop 137 
* CEs [226,228] --> Loop 138 

#### Loops of eval_scan_number_bb19_in/1 
* Loop 137: eval_scan_number_bb19_in(B) [] 
* Loop 138: eval_scan_number_bb19_in(B) [] 

### Ranking functions of CR eval_scan_number_bb19_in(B) 

#### Partial ranking functions of CR eval_scan_number_bb19_in(B) 


### Resulting Chains:eval_scan_number_bb19_in(B) 
* [138]
* [137]...


### Merging Chains  eval_scan_number_bb19_in/1 into  External patterns of execution 
* [[138]] --> 1 
* [[137]] --> 2 


### Specialization of cost equations loop_cont_eval_scan_number_bb14_in/2 
* CE 37 is refined into CE [230,231] 
* CE 36 is refined into CE [232] 
* CE 35 is refined into CE [233,234,235] 
* CE 34 is refined into CE [236,237] 


#### Refined cost equations loop_cont_eval_scan_number_bb14_in/2 
* CE 230: loop_cont_eval_scan_number_bb14_in(B,A) = 0+ eval_scan_number_bb27_in(A):1
     [B=18] 
* CE 231: loop_cont_eval_scan_number_bb14_in(B,A) = 0+ eval_scan_number_bb27_in(A):2
     [B=18] 
* CE 232: loop_cont_eval_scan_number_bb14_in(B,A) = 0
     [B=17] 
* CE 233: loop_cont_eval_scan_number_bb14_in(B,A) = 1+ eval_scan_number_bb22_in(C,D,E,F):1+ eval_scan_number_bb83_in(G,A):1
     [G=0,F=0,C=8,B=16] 
* CE 234: loop_cont_eval_scan_number_bb14_in(B,A) = 1+ eval_scan_number_bb22_in(C,D,E,F):1+ eval_scan_number_bb83_in(G,A):2
     [G=0,F=0,C=8,B=16] 
* CE 235: loop_cont_eval_scan_number_bb14_in(B,A) = 1+ eval_scan_number_bb22_in(C,D,E,F):2
     [C=8,B=16] 
* CE 236: loop_cont_eval_scan_number_bb14_in(B,A) = 0+ eval_scan_number_bb19_in(A):1
     [B=15] 
* CE 237: loop_cont_eval_scan_number_bb14_in(B,A) = 0+ eval_scan_number_bb19_in(A):2
     [B=15] 

### Cost equations --> "Loop" of loop_cont_eval_scan_number_bb14_in/2 
* CEs [231] --> Loop 139 
* CEs [234,235] --> Loop 140 
* CEs [237] --> Loop 141 
* CEs [230] --> Loop 142 
* CEs [232] --> Loop 143 
* CEs [233] --> Loop 144 
* CEs [236] --> Loop 145 

#### Loops of loop_cont_eval_scan_number_bb14_in/2 
* Loop 139: loop_cont_eval_scan_number_bb14_in(B,A) [B=18] 
* Loop 140: loop_cont_eval_scan_number_bb14_in(B,A) [B=16] 
* Loop 141: loop_cont_eval_scan_number_bb14_in(B,A) [B=15] 
* Loop 142: loop_cont_eval_scan_number_bb14_in(B,A) [B=18] 
* Loop 143: loop_cont_eval_scan_number_bb14_in(B,A) [B=17] 
* Loop 144: loop_cont_eval_scan_number_bb14_in(B,A) [B=16] 
* Loop 145: loop_cont_eval_scan_number_bb14_in(B,A) [B=15] 

### Ranking functions of CR loop_cont_eval_scan_number_bb14_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_scan_number_bb14_in(B,A) 


### Resulting Chains:loop_cont_eval_scan_number_bb14_in(B,A) 
* [145]
* [144]
* [143]
* [142]
* [141]...
* [140]...
* [139]...


### Merging Chains  loop_cont_eval_scan_number_bb14_in/2 into  External patterns of execution 
* [[145]] --> 1 
* [[144]] --> 2 
* [[143]] --> 3 
* [[142]] --> 4 
* [[141]] --> 5 
* [[140]] --> 6 
* [[139]] --> 7 


### Specialization of cost equations loop_cont_eval_scan_number_bb9_in/3 
* CE 13 is refined into CE [238,239] 
* CE 12 is refined into CE [240,241,242,243,244,245,246,247] 
* CE 11 is refined into CE [248] 


#### Refined cost equations loop_cont_eval_scan_number_bb9_in/3 
* CE 238: loop_cont_eval_scan_number_bb9_in(C,A,B) = 0+ eval_scan_number_bb33_in(A,B):1
     [C=4] 
* CE 239: loop_cont_eval_scan_number_bb9_in(C,A,B) = 0+ eval_scan_number_bb33_in(A,B):2
     [C=4] 
* CE 240: loop_cont_eval_scan_number_bb9_in(C,A,B) = 1+ eval_scan_number_bb14_in(D):1+ loop_cont_eval_scan_number_bb14_in(E,B):1
     [E=15,D=15,C=3] 
* CE 241: loop_cont_eval_scan_number_bb9_in(C,A,B) = 1+ eval_scan_number_bb14_in(D):1+ loop_cont_eval_scan_number_bb14_in(E,B):5
     [E=15,D=15,C=3] 
* CE 242: loop_cont_eval_scan_number_bb9_in(C,A,B) = 1+ eval_scan_number_bb14_in(D):2+ loop_cont_eval_scan_number_bb14_in(E,B):2
     [E=16,D=16,C=3] 
* CE 243: loop_cont_eval_scan_number_bb9_in(C,A,B) = 1+ eval_scan_number_bb14_in(D):2+ loop_cont_eval_scan_number_bb14_in(E,B):6
     [E=16,D=16,C=3] 
* CE 244: loop_cont_eval_scan_number_bb9_in(C,A,B) = 1+ eval_scan_number_bb14_in(D):3+ loop_cont_eval_scan_number_bb14_in(E,B):3
     [E=17,D=17,C=3] 
* CE 245: loop_cont_eval_scan_number_bb9_in(C,A,B) = 1+ eval_scan_number_bb14_in(D):4+ loop_cont_eval_scan_number_bb14_in(E,B):4
     [E=18,D=18,C=3] 
* CE 246: loop_cont_eval_scan_number_bb9_in(C,A,B) = 1+ eval_scan_number_bb14_in(D):4+ loop_cont_eval_scan_number_bb14_in(E,B):7
     [E=18,D=18,C=3] 
* CE 247: loop_cont_eval_scan_number_bb9_in(C,A,B) = 1+ eval_scan_number_bb14_in(D):5
     [C=3] 
* CE 248: loop_cont_eval_scan_number_bb9_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_scan_number_bb9_in/3 
* CEs [238] --> Loop 146 
* CEs [240,242,244,245] --> Loop 147 
* CEs [248] --> Loop 148 
* CEs [239] --> Loop 149 
* CEs [241,243,246,247] --> Loop 150 

#### Loops of loop_cont_eval_scan_number_bb9_in/3 
* Loop 146: loop_cont_eval_scan_number_bb9_in(C,A,B) [C=4] 
* Loop 147: loop_cont_eval_scan_number_bb9_in(C,A,B) [C=3] 
* Loop 148: loop_cont_eval_scan_number_bb9_in(C,A,B) [C=2] 
* Loop 149: loop_cont_eval_scan_number_bb9_in(C,A,B) [C=4] 
* Loop 150: loop_cont_eval_scan_number_bb9_in(C,A,B) [C=3] 

### Ranking functions of CR loop_cont_eval_scan_number_bb9_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_scan_number_bb9_in(C,A,B) 


### Resulting Chains:loop_cont_eval_scan_number_bb9_in(C,A,B) 
* [150]...
* [149]...
* [148]
* [147]
* [146]


### Merging Chains  loop_cont_eval_scan_number_bb9_in/3 into  External patterns of execution 
* [[148]] --> 1 
* [[147]] --> 2 
* [[146]] --> 3 
* [[150]] --> 4 
* [[149]] --> 5 


### Specialization of cost equations eval_scan_number_bb0_in/1 
* CE 3 is refined into CE [249] 
* CE 4 is refined into CE [250,251,252,253,254,255] 
* CE 5 is refined into CE [256,257] 
* CE 6 is refined into CE [258,259,260,261,262,263,264,265,266,267,268,269,270] 


#### Refined cost equations eval_scan_number_bb0_in/1 
* CE 249: eval_scan_number_bb0_in(B) = 0
     [] 
* CE 250: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb9_in(C,D,E):1+ loop_cont_eval_scan_number_bb9_in(F,E,B):1
     [F=2,D=2] 
* CE 251: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb9_in(C,D,E):2+ loop_cont_eval_scan_number_bb9_in(F,E,B):2
     [F=3,D=3] 
* CE 252: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb9_in(C,D,E):2+ loop_cont_eval_scan_number_bb9_in(F,E,B):4
     [F=3,D=3] 
* CE 253: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb9_in(C,D,E):3+ loop_cont_eval_scan_number_bb9_in(F,E,B):3
     [F=4,D=4] 
* CE 254: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb9_in(C,D,E):3+ loop_cont_eval_scan_number_bb9_in(F,E,B):5
     [F=4,D=4] 
* CE 255: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb9_in(C,D,E):4
     [] 
* CE 256: eval_scan_number_bb0_in(B) = 0+ eval_scan_number_bb33_in(C,B):1
     [] 
* CE 257: eval_scan_number_bb0_in(B) = 0+ eval_scan_number_bb33_in(C,B):2
     [] 
* CE 258: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,C,F,G):1+ loop_cont_eval_scan_number_bb62_in(H,C,I,J,B):1
     [J=0,I=0,H=11,G=0,F=0,E=11,D=0] 
* CE 259: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,C,F,G):1+ loop_cont_eval_scan_number_bb62_in(H,C,I,J,B):4
     [J=0,I=0,H=11,G=0,F=0,E=11,D=0] 
* CE 260: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,C,F,F):2+ loop_cont_eval_scan_number_bb62_in(G,C,F,F,B):1
     [0>=F+1,G=11,E=11,D=0] 
* CE 261: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,C,F,F):2+ loop_cont_eval_scan_number_bb62_in(G,C,F,F,B):4
     [0>=F+1,G=11,E=11,D=0] 
* CE 262: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,F,G,H):3+ loop_cont_eval_scan_number_bb62_in(I,J,G,H,B):2
     [J=0,I=12,F=0,E=12,D=0] 
* CE 263: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,F,G,H):3+ loop_cont_eval_scan_number_bb62_in(I,J,G,H,B):5
     [J=0,I=12,F=0,E=12,D=0] 
* CE 264: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,F,G,H):4+ loop_cont_eval_scan_number_bb62_in(I,F,G,H,B):2
     [0>=F+1,I=12,E=12,D=0] 
* CE 265: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,F,G,H):4+ loop_cont_eval_scan_number_bb62_in(I,F,G,H,B):5
     [0>=F+1,I=12,E=12,D=0] 
* CE 266: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,F,G,H):5+ loop_cont_eval_scan_number_bb62_in(I,J,G,H,B):3
     [J=0,I=13,F=0,E=13,D=0] 
* CE 267: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,F,G,H):5+ loop_cont_eval_scan_number_bb62_in(I,J,G,H,B):6
     [J=0,I=13,F=0,E=13,D=0] 
* CE 268: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,F,G,H):6+ loop_cont_eval_scan_number_bb62_in(I,F,G,H,B):3
     [0>=F+1,I=13,E=13,D=0] 
* CE 269: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,F,G,H):6+ loop_cont_eval_scan_number_bb62_in(I,F,G,H,B):6
     [0>=F+1,I=13,E=13,D=0] 
* CE 270: eval_scan_number_bb0_in(B) = 1+ eval_scan_number_bb62_in(C,D,E,F,G,H):7
     [D=0] 

### Cost equations --> "Loop" of eval_scan_number_bb0_in/1 
* CEs [252,254,255,257,259,261,263,265,267,269,270] --> Loop 151 
* CEs [249,250,251,253,256,258,260,262,264,266,268] --> Loop 152 

#### Loops of eval_scan_number_bb0_in/1 
* Loop 151: eval_scan_number_bb0_in(B) [] 
* Loop 152: eval_scan_number_bb0_in(B) [] 

### Ranking functions of CR eval_scan_number_bb0_in(B) 

#### Partial ranking functions of CR eval_scan_number_bb0_in(B) 


### Resulting Chains:eval_scan_number_bb0_in(B) 
* [152]
* [151]...


### Merging Chains  eval_scan_number_bb0_in/1 into  External patterns of execution 
* [[152]] --> 1 
* [[151]] --> 2 


### Specialization of cost equations eval_scan_number_start/2 
* CE 2 is refined into CE [271,272] 


#### Refined cost equations eval_scan_number_start/2 
* CE 271: eval_scan_number_start(V_sign,B) = 0+ eval_scan_number_bb0_in(B):1
     [] 
* CE 272: eval_scan_number_start(V_sign,B) = 0+ eval_scan_number_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_scan_number_start/2 
* CEs [272] --> Loop 153 
* CEs [271] --> Loop 154 

#### Loops of eval_scan_number_start/2 
* Loop 153: eval_scan_number_start(V_sign,B) [] 
* Loop 154: eval_scan_number_start(V_sign,B) [] 

### Ranking functions of CR eval_scan_number_start(V_sign,B) 

#### Partial ranking functions of CR eval_scan_number_start(V_sign,B) 


### Resulting Chains:eval_scan_number_start(V_sign,B) 
* [154]
* [153]...


### Merging Chains  eval_scan_number_start/2 into  External patterns of execution 
* [[154]] --> 1 
* [[153]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [67] 

 * loop 67:eval_scan_number_bb37_in(B) -> [eval_scan_number_bb37_in(B')] 
1
#### Cost of phase [67]:eval_scan_number_bb37_in(B) -> [eval_scan_number_bb37_in(B')] 
1*it(67)+0
#### Cost of phase [67]:eval_scan_number_bb37_in(B) -> [eval_scan_number_bb37_in(B')] 
1*it(67)+0
#### Cost of phase [67]:eval_scan_number_bb37_in(B) -> [eval_scan_number_bb37_in(B')] 
1*it(67)+0
#### Cost of chains of eval_scan_number_bb37_in(B):
* Chain [[67]]...: 1*it(67)+0
  with precondition: [] 

* Chain [[67],69]: 1*it(67)+0
  with precondition: [B=7] 

* Chain [[67],68]: 1*it(67)+0
  with precondition: [B=14] 

* Chain [69]: 0
  with precondition: [B=7] 

* Chain [68]: 0
  with precondition: [B=14] 


#### Cost of loops [72] 

 * loop 72:eval_scan_number_bb49_in(B) -> [eval_scan_number_bb49_in(B')] 
1
#### Cost of phase [72]:eval_scan_number_bb49_in(B) -> [eval_scan_number_bb49_in(B')] 
1*it(72)+0
#### Cost of phase [72]:eval_scan_number_bb49_in(B) -> [eval_scan_number_bb49_in(B')] 
1*it(72)+0
#### Cost of phase [72]:eval_scan_number_bb49_in(B) -> [eval_scan_number_bb49_in(B')] 
1*it(72)+0
#### Cost of chains of eval_scan_number_bb49_in(B):
* Chain [[72]]...: 1*it(72)+0
  with precondition: [] 

* Chain [[72],71]: 1*it(72)+0
  with precondition: [B=7] 

* Chain [[72],70]: 1*it(72)+0
  with precondition: [B=14] 

* Chain [71]: 0
  with precondition: [B=7] 

* Chain [70]: 0
  with precondition: [B=14] 


#### Cost of chains of loop_cont_eval_scan_number_bb49_in(B,A):
* Chain [74]: 0
  with precondition: [B=7] 

* Chain [73]: 0
  with precondition: [B=14] 


#### Cost of chains of eval_scan_number_bb48_in(B):
* Chain [76]: 1*aux(5)+0
  with precondition: [] 

* Chain [75]...: 1*s(7)+1
  with precondition: [] 


#### Cost of loops [77] 

 * loop 77:eval_scan_number_bb105_in(V_exp10_10,B) -> [eval_scan_number_bb105_in(V_exp10_10',B')] 
1
#### Cost of phase [77]:eval_scan_number_bb105_in(V_exp10_10,B) -> [eval_scan_number_bb105_in(V_exp10_10',B')] 
1*it(77)+0
  Such that:it(77) =< -V_exp10_10/6
it(77) =< -V_exp10_10/6+V_exp10_10'/6

#### Cost of chains of eval_scan_number_bb105_in(V_exp10_10,B):
* Chain [[77],78]: 1*it(77)+0
  Such that:it(77) =< -V_exp10_10/6

  with precondition: [B=5,0>=V_exp10_10+7] 

* Chain [78]: 0
  with precondition: [B=5,V_exp10_10+6>=0] 


#### Cost of chains of eval_scan_number_bb109_in(B):
* Chain [79]: 0
  with precondition: [] 


#### Cost of loops [80] 

 * loop 80:eval_scan_number_bb99_in(V_exp10_9,B) -> [eval_scan_number_bb99_in(V_exp10_9',B')] 
1
#### Cost of phase [80]:eval_scan_number_bb99_in(V_exp10_9,B) -> [eval_scan_number_bb99_in(V_exp10_9',B')] 
1*it(80)+0
  Such that:it(80) =< V_exp10_9/6
it(80) =< V_exp10_9/6-V_exp10_9'/6

#### Cost of chains of eval_scan_number_bb99_in(V_exp10_9,B):
* Chain [[80],81]: 1*it(80)+0
  Such that:it(80) =< V_exp10_9/6

  with precondition: [B=5,V_exp10_9>=7] 

* Chain [81]: 0
  with precondition: [B=5,6>=V_exp10_9] 


#### Cost of chains of eval_scan_number_bb97_in(V_exp10_8,B):
* Chain [82]: 1*s(8)+1*s(9)+1
  Such that:s(9) =< -V_exp10_8/6
s(8) =< V_exp10_8/6

  with precondition: [] 


#### Cost of loops [85] 

 * loop 85:eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) -> [eval_scan_number_bb90_in(V_exp10_6',V_iexp_0',B',C',D')] 
1
#### Cost of phase [85]:eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) -> [eval_scan_number_bb90_in(V_exp10_6',V_iexp_0',B',C',D')] 
1*it(85)+0
#### Cost of phase [85]:eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) -> [eval_scan_number_bb90_in(V_exp10_6',V_iexp_0',B',C',D')] 
1*it(85)+0
#### Cost of phase [85]:eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D) -> [eval_scan_number_bb90_in(V_exp10_6',V_iexp_0',B',C',D')] 
1*it(85)+0
#### Cost of chains of eval_scan_number_bb90_in(V_exp10_6,V_iexp_0,B,C,D):
* Chain [[85]]...: 1*it(85)+0
  with precondition: [] 

* Chain [[85],84]: 1*it(85)+0
  with precondition: [B=6,V_exp10_6=C] 

* Chain [[85],83]: 1*it(85)+0
  with precondition: [B=7] 

* Chain [84]: 0
  with precondition: [B=6,C=V_exp10_6,D=V_iexp_0] 

* Chain [83]: 0
  with precondition: [B=7] 


#### Cost of chains of eval_scan_number_bb95_in(V_exp10_6,V_iexp_0,B):
* Chain [86]: 1*s(12)+1*s(13)+1*s(14)+1*s(15)+1
  Such that:s(14) =< -V_exp10_6/6-V_iexp_0/6
s(12) =< -V_exp10_6/6+V_iexp_0/6
s(13) =< V_exp10_6/6-V_iexp_0/6
s(15) =< V_exp10_6/6+V_iexp_0/6

  with precondition: [] 


#### Cost of chains of loop_cont_eval_scan_number_bb90_in(D,A,B,C):
* Chain [88]: 1*s(16)+1*s(17)+1*s(18)+1*s(19)+1
  Such that:s(16) =< -A/6-B/6
s(17) =< -A/6+B/6
s(18) =< A/6-B/6
s(19) =< A/6+B/6

  with precondition: [D=6] 

* Chain [87]: 0
  with precondition: [D=7] 


#### Cost of chains of eval_scan_number_bb89_in(V_exp10_6,B):
* Chain [90]...: 1*s(20)+1
  with precondition: [] 

* Chain [89]: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_scan_number_bb87_in(V_exp10_6,B):
* Chain [92]: 1*aux(9)+0
  with precondition: [] 

* Chain [91]...: 1*s(28)+1
  with precondition: [] 


#### Cost of chains of eval_scan_number_bb84_in(V_exp10_6,B):
* Chain [94]: 1*aux(10)+0
  with precondition: [] 

* Chain [93]...: 1*aux(11)+0
  with precondition: [] 


#### Cost of chains of eval_scan_number_bb83_in(V_exp10_6,B):
* Chain [96]: 1*s(33)+1*s(34)+1*s(35)+1
  Such that:s(33) =< -V_exp10_6/6
s(34) =< V_exp10_6/6

  with precondition: [] 

* Chain [95]...: 1*s(36)+0
  with precondition: [] 


#### Cost of loops [97] 

 * loop 97:eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E) -> [eval_scan_number_bb62_in(V_ival_2',V_exp10_0',B',C',D',E')] 
1
#### Cost of phase [97]:eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E) -> [eval_scan_number_bb62_in(V_ival_2',V_exp10_0',B',C',D',E')] 
1*it(97)+0
#### Cost of phase [97]:eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E) -> [eval_scan_number_bb62_in(V_ival_2',V_exp10_0',B',C',D',E')] 
1*it(97)+0
#### Cost of phase [97]:eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E) -> [eval_scan_number_bb62_in(V_ival_2',V_exp10_0',B',C',D',E')] 
1*it(97)+0
#### Cost of phase [97]:eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E) -> [eval_scan_number_bb62_in(V_ival_2',V_exp10_0',B',C',D',E')] 
1*it(97)+0
#### Cost of chains of eval_scan_number_bb62_in(V_ival_2,V_exp10_0,B,C,D,E):
* Chain [[97]]...: 1*it(97)+0
  with precondition: [0>=V_exp10_0] 

* Chain [[97],100]: 1*it(97)+0
  with precondition: [B=11,V_ival_2=C,D=E,0>=V_exp10_0,V_exp10_0>=D+1] 

* Chain [[97],99]: 1*it(97)+0
  with precondition: [B=12,0>=V_exp10_0,V_exp10_0>=C+1] 

* Chain [[97],98]: 1*it(97)+0
  with precondition: [B=13,0>=V_exp10_0,V_exp10_0>=C+1] 

* Chain [100]: 0
  with precondition: [B=11,C=V_ival_2,V_exp10_0=D,V_exp10_0=E,0>=V_exp10_0] 

* Chain [99]: 0
  with precondition: [B=12,V_exp10_0=C,0>=V_exp10_0] 

* Chain [98]: 0
  with precondition: [B=13,V_exp10_0=C,0>=V_exp10_0] 


#### Cost of chains of loop_cont_eval_scan_number_bb37_in(B,A):
* Chain [102]: 0
  with precondition: [B=7] 

* Chain [101]: 0
  with precondition: [B=14] 


#### Cost of chains of eval_scan_number_NewDefault66_in(V_exp10_0,B):
* Chain [104]...: 1*s(37)+0
  with precondition: [] 

* Chain [103]: 1*s(38)+1*s(39)+1*s(40)+1
  Such that:s(38) =< -V_exp10_0/6
s(39) =< V_exp10_0/6

  with precondition: [] 


#### Cost of loops [105] 

 * loop 105:eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F) -> [eval_scan_number_bb66_in(V_ival_2',V_exp10_0',V_exp10_2',B',C',D',E',F')] 
1
#### Cost of phase [105]:eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F) -> [eval_scan_number_bb66_in(V_ival_2',V_exp10_0',V_exp10_2',B',C',D',E',F')] 
1*it(105)+0
#### Cost of phase [105]:eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F) -> [eval_scan_number_bb66_in(V_ival_2',V_exp10_0',V_exp10_2',B',C',D',E',F')] 
1*it(105)+0
#### Cost of phase [105]:eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F) -> [eval_scan_number_bb66_in(V_ival_2',V_exp10_0',V_exp10_2',B',C',D',E',F')] 
1*it(105)+0
#### Cost of chains of eval_scan_number_bb66_in(V_ival_2,V_exp10_0,V_exp10_2,B,C,D,E,F):
* Chain [[105]]...: 1*it(105)+0
  with precondition: [] 

* Chain [[105],107]: 1*it(105)+0
  with precondition: [B=9,V_ival_2=C,V_exp10_0=D,E=F,V_exp10_2>=E+1] 

* Chain [[105],106]: 1*it(105)+0
  with precondition: [B=10,V_exp10_2>=C+1] 

* Chain [107]: 0
  with precondition: [B=9,C=V_ival_2,D=V_exp10_0,V_exp10_2=E,V_exp10_2=F] 

* Chain [106]: 0
  with precondition: [B=10,C=V_exp10_2] 


#### Cost of loops [108] 

 * loop 108:eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4,B,C,D,E) -> [eval_scan_number_bb70_in(V_ival_2',V_exp10_0',V_exp10_2',V_exp10_4',B',C',D',E')] 
1
#### Cost of phase [108]:eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4,B,C,D,E) -> [eval_scan_number_bb70_in(V_ival_2',V_exp10_0',V_exp10_2',V_exp10_4',B',C',D',E')] 
1*it(108)+0
#### Cost of phase [108]:eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4,B,C,D,E) -> [eval_scan_number_bb70_in(V_ival_2',V_exp10_0',V_exp10_2',V_exp10_4',B',C',D',E')] 
1*it(108)+0
#### Cost of chains of eval_scan_number_bb70_in(V_ival_2,V_exp10_0,V_exp10_2,V_exp10_4,B,C,D,E):
* Chain [[108]]...: 1*it(108)+0
  with precondition: [B=8] 

* Chain [[108],109]: 1*it(108)+0
  with precondition: [B=8,V_ival_2=C,V_exp10_0=D,V_exp10_4>=E+1] 

* Chain [109]: 0
  with precondition: [B=8,C=V_ival_2,D=V_exp10_0,E=V_exp10_4] 


#### Cost of chains of loop_cont_eval_scan_number_bb66_in(J,A,B,C,D,E):
* Chain [113]: 1*s(41)+2*s(42)+4*s(43)+2
  Such that:s(41) =< -D/6
aux(12) =< D/6
s(42) =< aux(12)

  with precondition: [J=9] 

* Chain [112]: 1*s(48)+1*s(49)+1*s(50)+1
  Such that:s(48) =< -A/6
s(49) =< A/6

  with precondition: [J=10] 

* Chain [111]...: 1*aux(13)+0
  with precondition: [J=9] 

* Chain [110]...: 1*s(55)+0
  with precondition: [J=10] 


#### Cost of chains of loop_cont_eval_scan_number_bb62_in(J,A,B,C,D):
* Chain [119]: 2*s(56)+6*s(58)+14*s(59)+3
  Such that:aux(14) =< -C/6
aux(15) =< C/6
s(56) =< aux(14)
s(58) =< aux(15)

  with precondition: [J=11] 

* Chain [118]: 1*s(72)+1*s(73)+1*s(74)+1
  Such that:s(72) =< -A/6
s(73) =< A/6

  with precondition: [J=12] 

* Chain [117]: 1*s(75)+1*s(76)+1*s(77)+1
  Such that:s(75) =< -A/6
s(76) =< A/6

  with precondition: [J=13] 

* Chain [116]...: 1*aux(16)+0
  with precondition: [J=11] 

* Chain [115]...: 1*s(85)+0
  with precondition: [J=12] 

* Chain [114]...: 1*s(86)+0
  with precondition: [J=13] 


#### Cost of chains of eval_scan_number_bb33_in(V_ival_2,B):
* Chain [121]: 1*aux(21)+0
  with precondition: [] 

* Chain [120]...: 1*aux(22)+0
  with precondition: [] 


#### Cost of loops [122] 

 * loop 122:eval_scan_number_bb9_in(V_ival_1,B,C) -> [eval_scan_number_bb9_in(V_ival_1',B',C')] 
1
#### Cost of phase [122]:eval_scan_number_bb9_in(V_ival_1,B,C) -> [eval_scan_number_bb9_in(V_ival_1',B',C')] 
1*it(122)+0
#### Cost of phase [122]:eval_scan_number_bb9_in(V_ival_1,B,C) -> [eval_scan_number_bb9_in(V_ival_1',B',C')] 
1*it(122)+0
#### Cost of phase [122]:eval_scan_number_bb9_in(V_ival_1,B,C) -> [eval_scan_number_bb9_in(V_ival_1',B',C')] 
1*it(122)+0
#### Cost of phase [122]:eval_scan_number_bb9_in(V_ival_1,B,C) -> [eval_scan_number_bb9_in(V_ival_1',B',C')] 
1*it(122)+0
#### Cost of chains of eval_scan_number_bb9_in(V_ival_1,B,C):
* Chain [[122]]...: 1*it(122)+0
  with precondition: [] 

* Chain [[122],125]: 1*it(122)+0
  with precondition: [B=2] 

* Chain [[122],124]: 1*it(122)+0
  with precondition: [B=3] 

* Chain [[122],123]: 1*it(122)+0
  with precondition: [B=4] 

* Chain [125]: 0
  with precondition: [B=2] 

* Chain [124]: 0
  with precondition: [B=3] 

* Chain [123]: 0
  with precondition: [B=4,C=V_ival_1] 


#### Cost of loops [126] 

 * loop 126:eval_scan_number_bb14_in(B) -> [eval_scan_number_bb14_in(B')] 
1
#### Cost of phase [126]:eval_scan_number_bb14_in(B) -> [eval_scan_number_bb14_in(B')] 
1*it(126)+0
#### Cost of phase [126]:eval_scan_number_bb14_in(B) -> [eval_scan_number_bb14_in(B')] 
1*it(126)+0
#### Cost of phase [126]:eval_scan_number_bb14_in(B) -> [eval_scan_number_bb14_in(B')] 
1*it(126)+0
#### Cost of phase [126]:eval_scan_number_bb14_in(B) -> [eval_scan_number_bb14_in(B')] 
1*it(126)+0
#### Cost of phase [126]:eval_scan_number_bb14_in(B) -> [eval_scan_number_bb14_in(B')] 
1*it(126)+0
#### Cost of chains of eval_scan_number_bb14_in(B):
* Chain [[126]]...: 1*it(126)+0
  with precondition: [] 

* Chain [[126],130]: 1*it(126)+0
  with precondition: [B=15] 

* Chain [[126],129]: 1*it(126)+0
  with precondition: [B=16] 

* Chain [[126],128]: 1*it(126)+0
  with precondition: [B=17] 

* Chain [[126],127]: 1*it(126)+0
  with precondition: [B=18] 

* Chain [130]: 0
  with precondition: [B=15] 

* Chain [129]: 0
  with precondition: [B=16] 

* Chain [128]: 0
  with precondition: [B=17] 

* Chain [127]: 0
  with precondition: [B=18] 


#### Cost of loops [132] 

 * loop 132:eval_scan_number_bb22_in(B,C,D,E) -> [eval_scan_number_bb22_in(B',C',D',E')] 
1
#### Cost of phase [132]:eval_scan_number_bb22_in(B,C,D,E) -> [eval_scan_number_bb22_in(B',C',D',E')] 
1*it(132)+0
#### Cost of phase [132]:eval_scan_number_bb22_in(B,C,D,E) -> [eval_scan_number_bb22_in(B',C',D',E')] 
1*it(132)+0
#### Cost of chains of eval_scan_number_bb22_in(B,C,D,E):
* Chain [[132]]...: 1*it(132)+0
  with precondition: [B=8] 

* Chain [[132],131]: 1*it(132)+0
  with precondition: [B=8,E=0] 

* Chain [131]: 0
  with precondition: [B=8,E=0] 


#### Cost of chains of eval_scan_number_bb27_in(B):
* Chain [134]: 1*aux(34)+0
  with precondition: [] 

* Chain [133]...: 1*aux(35)+0
  with precondition: [] 


#### Cost of chains of eval_scan_number_NewDefault40_in(B):
* Chain [136]: 1*aux(37)+0
  with precondition: [] 

* Chain [135]...: 1*aux(38)+0
  with precondition: [] 


#### Cost of chains of eval_scan_number_bb19_in(B):
* Chain [138]: 1*aux(40)+0
  with precondition: [] 

* Chain [137]...: 1*aux(41)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_scan_number_bb14_in(B,A):
* Chain [145]: 1*s(190)+0
  with precondition: [B=15] 

* Chain [144]: 2*s(191)+2
  with precondition: [B=16] 

* Chain [143]: 0
  with precondition: [B=17] 

* Chain [142]: 1*s(195)+0
  with precondition: [B=18] 

* Chain [141]...: 1*s(196)+0
  with precondition: [B=15] 

* Chain [140]...: 1*aux(43)+0
  with precondition: [B=16] 

* Chain [139]...: 1*s(200)+0
  with precondition: [B=18] 


#### Cost of chains of loop_cont_eval_scan_number_bb9_in(C,A,B):
* Chain [150]...: 1*aux(44)+0
  with precondition: [C=3] 

* Chain [149]...: 1*s(208)+0
  with precondition: [C=4] 

* Chain [148]: 0
  with precondition: [C=2] 

* Chain [147]: 1*aux(45)+0
  with precondition: [C=3] 

* Chain [146]: 1*s(216)+0
  with precondition: [C=4] 


#### Cost of chains of eval_scan_number_bb0_in(B):
* Chain [152]: 1*aux(49)+0
  with precondition: [] 

* Chain [151]...: 1*aux(50)+0
  with precondition: [] 


#### Cost of chains of eval_scan_number_start(V_sign,B):
* Chain [154]: 1*s(264)+0
  with precondition: [] 

* Chain [153]...: 1*s(265)+0
  with precondition: [] 


Closed-form bounds of eval_scan_number_start(V_sign,B): 
-------------------------------------
* Chain [154] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [153]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_scan_number_start(V_sign,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 57 ms.
* Invariants computed in 66 ms.
   - Backward Invariants 39 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 223 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 154 ms.
   - Equation cost structures 98 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 35 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 595 ms.

