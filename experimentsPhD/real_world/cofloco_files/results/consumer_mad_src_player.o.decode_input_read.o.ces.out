Warning: Ignored call to eval_decode_input_read_stop/1 in equation eval_decode_input_read_32/1 
Warning: Ignored call to eval_decode_input_read_stop/1 in equation eval_decode_input_read_bb13_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_decode_input_read_15/4,eval_decode_input_read_16/5,eval_decode_input_read_bb4_in/2]
1. non_recursive  : [eval_decode_input_read_bb13_in/1]
2. non_recursive  : [eval_decode_input_read_20/1]
3. non_recursive  : [eval_decode_input_read_19/1]
4. non_recursive  : [eval_decode_input_read_38/1]
5. non_recursive  : [eval_decode_input_read_37/2]
6. non_recursive  : [eval_decode_input_read_bb12_in/2]
7. non_recursive  : [eval_decode_input_read_NewDefault3_in/2]
8. non_recursive  : [eval_decode_input_read_NewDefault_in/2]
9. non_recursive  : [eval_decode_input_read_32/1]
10. non_recursive  : [eval_decode_input_read_31/1]
11. recursive  : [eval_decode_input_read_bb9_in/3]
12. non_recursive  : [loop_cont_eval_decode_input_read_bb9_in/3]
13. non_recursive  : [eval_decode_input_read_bb7_in/2]
14. non_recursive  : [loop_cont_eval_decode_input_read_bb4_in/3]
15. non_recursive  : [eval_decode_input_read_10/1]
16. non_recursive  : [eval_decode_input_read_9/1]
17. non_recursive  : [eval_decode_input_read_bb3_in/1]
18. non_recursive  : [eval_decode_input_read_8/1]
19. non_recursive  : [eval_decode_input_read_7/2]
20. non_recursive  : [eval_decode_input_read_bb0_in/1]
21. non_recursive  : [eval_decode_input_read_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_decode_input_read_bb4_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_decode_input_read_bb9_in/3
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_decode_input_read_bb7_in/2
14. SCC is partially evaluated into loop_cont_eval_decode_input_read_bb4_in/3
15. SCC is partially evaluated into eval_decode_input_read_10/1
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_decode_input_read_bb0_in/1
21. SCC is partially evaluated into eval_decode_input_read_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_decode_input_read_bb4_in/2 
* CE 10 is refined into CE [19] 
* CE 6 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 9 is refined into CE [23] 


#### Refined cost equations eval_decode_input_read_bb4_in/2 
* CE 19: eval_decode_input_read_bb4_in(B,C) = 1+ eval_decode_input_read_bb4_in(B,C)
     [] 
* CE 20: eval_decode_input_read_bb4_in(B,C) = 0
     [B=6] 
* CE 21: eval_decode_input_read_bb4_in(B,C) = 0
     [B=5] 
* CE 22: eval_decode_input_read_bb4_in(B,C) = 0
     [B=4] 
* CE 23: eval_decode_input_read_bb4_in(B,C) = 0
     [B=3] 

### Cost equations --> "Loop" of eval_decode_input_read_bb4_in/2 
* CEs [20] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [19] --> Loop 20 

#### Loops of eval_decode_input_read_bb4_in/2 
* Loop 16: eval_decode_input_read_bb4_in(B,C) [B=6] 
* Loop 17: eval_decode_input_read_bb4_in(B,C) [B=5] 
* Loop 18: eval_decode_input_read_bb4_in(B,C) [B=4] 
* Loop 19: eval_decode_input_read_bb4_in(B,C) [B=3] 
* Loop 20: eval_decode_input_read_bb4_in(B,C)->  eval_decode_input_read_bb4_in(B,C)
                  [] 

### Ranking functions of CR eval_decode_input_read_bb4_in(B,C) 

#### Partial ranking functions of CR eval_decode_input_read_bb4_in(B,C) 


### Resulting Chains:eval_decode_input_read_bb4_in(B,C) 
* [[20]]...
* [[20],19]
* [[20],18]
* [[20],17]
* [[20],16]
* [19]
* [18]
* [17]
* [16]


### Merging Chains  eval_decode_input_read_bb4_in/2 into  External patterns of execution 
* [[19],[19,[20]]] --> 1 
* [[18],[18,[20]]] --> 2 
* [[17],[17,[20]]] --> 3 
* [[16],[16,[20]]] --> 4 
* [[[20]]] --> 5 


### Specialization of cost equations eval_decode_input_read_bb9_in/3 
* CE 18 is refined into CE [24] 
* CE 17 is refined into CE [25] 


#### Refined cost equations eval_decode_input_read_bb9_in/3 
* CE 24: eval_decode_input_read_bb9_in(A,B,A) = 0
     [A>=8,B=2] 
* CE 25: eval_decode_input_read_bb9_in(V_len_0,B,C) = 1+ eval_decode_input_read_bb9_in(D,E,C)
     [7>=V_len_0,V_len_0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_decode_input_read_bb9_in/3 
* CEs [25] --> Loop 21 
* CEs [24] --> Loop 22 

#### Loops of eval_decode_input_read_bb9_in/3 
* Loop 21: eval_decode_input_read_bb9_in(V_len_0,B,C)->  eval_decode_input_read_bb9_in(V_len_0',B',C)
                  [7>=V_len_0,V_len_0+1=V_len_0',B'=2,B=2] 
* Loop 22: eval_decode_input_read_bb9_in(A,B,A) [A>=8,B=2] 

### Ranking functions of CR eval_decode_input_read_bb9_in(V_len_0,B,C) 
* RF of phase [21]: [-V_len_0+8]

#### Partial ranking functions of CR eval_decode_input_read_bb9_in(V_len_0,B,C) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    -V_len_0+8


### Resulting Chains:eval_decode_input_read_bb9_in(V_len_0,B,C) 
* [[21],22]
* [22]


### Merging Chains  eval_decode_input_read_bb9_in/3 into  External patterns of execution 
* [[22,[21]]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_decode_input_read_bb7_in/2 
* CE 15 is refined into CE [26,27] 
* CE 16 is refined into CE [28] 


#### Refined cost equations eval_decode_input_read_bb7_in/2 
* CE 26: eval_decode_input_read_bb7_in(V_34,B) = 1+ eval_decode_input_read_bb9_in(V_34,C,D):1
     [7>=V_34,D=8,C=2] 
* CE 27: eval_decode_input_read_bb7_in(V_34,B) = 1+ eval_decode_input_read_bb9_in(V_34,C,V_34):2
     [V_34>=8,C=2] 
* CE 28: eval_decode_input_read_bb7_in(V_34,B) = 0
     [] 

### Cost equations --> "Loop" of eval_decode_input_read_bb7_in/2 
* CEs [26,27,28] --> Loop 23 

#### Loops of eval_decode_input_read_bb7_in/2 
* Loop 23: eval_decode_input_read_bb7_in(V_34,B) [] 

### Ranking functions of CR eval_decode_input_read_bb7_in(V_34,B) 

#### Partial ranking functions of CR eval_decode_input_read_bb7_in(V_34,B) 


### Resulting Chains:eval_decode_input_read_bb7_in(V_34,B) 
* [23]


### Merging Chains  eval_decode_input_read_bb7_in/2 into  External patterns of execution 
* [[23]] --> 1 


### Specialization of cost equations loop_cont_eval_decode_input_read_bb4_in/3 
* CE 14 is refined into CE [29] 
* CE 13 is refined into CE [30] 
* CE 12 is refined into CE [31] 
* CE 11 is refined into CE [32] 


#### Refined cost equations loop_cont_eval_decode_input_read_bb4_in/3 
* CE 29: loop_cont_eval_decode_input_read_bb4_in(C,A,B) = 0
     [C=6] 
* CE 30: loop_cont_eval_decode_input_read_bb4_in(C,A,B) = 0+ eval_decode_input_read_bb7_in(A,B):1
     [C=5] 
* CE 31: loop_cont_eval_decode_input_read_bb4_in(C,A,B) = 0
     [C=4] 
* CE 32: loop_cont_eval_decode_input_read_bb4_in(C,A,B) = 0
     [C=3] 

### Cost equations --> "Loop" of loop_cont_eval_decode_input_read_bb4_in/3 
* CEs [29] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [31] --> Loop 26 
* CEs [32] --> Loop 27 

#### Loops of loop_cont_eval_decode_input_read_bb4_in/3 
* Loop 24: loop_cont_eval_decode_input_read_bb4_in(C,A,B) [C=6] 
* Loop 25: loop_cont_eval_decode_input_read_bb4_in(C,A,B) [C=5] 
* Loop 26: loop_cont_eval_decode_input_read_bb4_in(C,A,B) [C=4] 
* Loop 27: loop_cont_eval_decode_input_read_bb4_in(C,A,B) [C=3] 

### Ranking functions of CR loop_cont_eval_decode_input_read_bb4_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_decode_input_read_bb4_in(C,A,B) 


### Resulting Chains:loop_cont_eval_decode_input_read_bb4_in(C,A,B) 
* [27]
* [26]
* [25]
* [24]


### Merging Chains  loop_cont_eval_decode_input_read_bb4_in/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 
* [[25]] --> 3 
* [[24]] --> 4 


### Specialization of cost equations eval_decode_input_read_10/1 
* CE 5 is refined into CE [33,34,35,36,37] 


#### Refined cost equations eval_decode_input_read_10/1 
* CE 33: eval_decode_input_read_10(B) = 1+ eval_decode_input_read_bb4_in(C,D):1+ loop_cont_eval_decode_input_read_bb4_in(E,D,B):1
     [E=3,C=3] 
* CE 34: eval_decode_input_read_10(B) = 1+ eval_decode_input_read_bb4_in(C,D):2+ loop_cont_eval_decode_input_read_bb4_in(E,D,B):2
     [E=4,C=4] 
* CE 35: eval_decode_input_read_10(B) = 1+ eval_decode_input_read_bb4_in(C,D):3+ loop_cont_eval_decode_input_read_bb4_in(E,D,B):3
     [E=5,C=5] 
* CE 36: eval_decode_input_read_10(B) = 1+ eval_decode_input_read_bb4_in(C,D):4+ loop_cont_eval_decode_input_read_bb4_in(E,D,B):4
     [E=6,C=6] 
* CE 37: eval_decode_input_read_10(B) = 1+ eval_decode_input_read_bb4_in(C,D):5
     [] 

### Cost equations --> "Loop" of eval_decode_input_read_10/1 
* CEs [37] --> Loop 28 
* CEs [33,34,35,36] --> Loop 29 

#### Loops of eval_decode_input_read_10/1 
* Loop 28: eval_decode_input_read_10(B) [] 
* Loop 29: eval_decode_input_read_10(B) [] 

### Ranking functions of CR eval_decode_input_read_10(B) 

#### Partial ranking functions of CR eval_decode_input_read_10(B) 


### Resulting Chains:eval_decode_input_read_10(B) 
* [29]
* [28]...


### Merging Chains  eval_decode_input_read_10/1 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_decode_input_read_bb0_in/1 
* CE 3 is refined into CE [38] 
* CE 4 is refined into CE [39,40] 


#### Refined cost equations eval_decode_input_read_bb0_in/1 
* CE 38: eval_decode_input_read_bb0_in(B) = 0
     [] 
* CE 39: eval_decode_input_read_bb0_in(B) = 0+ eval_decode_input_read_10(B):1
     [] 
* CE 40: eval_decode_input_read_bb0_in(B) = 0+ eval_decode_input_read_10(B):2
     [] 

### Cost equations --> "Loop" of eval_decode_input_read_bb0_in/1 
* CEs [40] --> Loop 30 
* CEs [38,39] --> Loop 31 

#### Loops of eval_decode_input_read_bb0_in/1 
* Loop 30: eval_decode_input_read_bb0_in(B) [] 
* Loop 31: eval_decode_input_read_bb0_in(B) [] 

### Ranking functions of CR eval_decode_input_read_bb0_in(B) 

#### Partial ranking functions of CR eval_decode_input_read_bb0_in(B) 


### Resulting Chains:eval_decode_input_read_bb0_in(B) 
* [31]
* [30]...


### Merging Chains  eval_decode_input_read_bb0_in/1 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations eval_decode_input_read_start/1 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_decode_input_read_start/1 
* CE 41: eval_decode_input_read_start(B) = 0+ eval_decode_input_read_bb0_in(B):1
     [] 
* CE 42: eval_decode_input_read_start(B) = 0+ eval_decode_input_read_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_decode_input_read_start/1 
* CEs [42] --> Loop 32 
* CEs [41] --> Loop 33 

#### Loops of eval_decode_input_read_start/1 
* Loop 32: eval_decode_input_read_start(B) [] 
* Loop 33: eval_decode_input_read_start(B) [] 

### Ranking functions of CR eval_decode_input_read_start(B) 

#### Partial ranking functions of CR eval_decode_input_read_start(B) 


### Resulting Chains:eval_decode_input_read_start(B) 
* [33]
* [32]...


### Merging Chains  eval_decode_input_read_start/1 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [20] 

 * loop 20:eval_decode_input_read_bb4_in(B,C) -> [eval_decode_input_read_bb4_in(B',C')] 
1
#### Cost of phase [20]:eval_decode_input_read_bb4_in(B,C) -> [eval_decode_input_read_bb4_in(B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_decode_input_read_bb4_in(B,C) -> [eval_decode_input_read_bb4_in(B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_decode_input_read_bb4_in(B,C) -> [eval_decode_input_read_bb4_in(B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_decode_input_read_bb4_in(B,C) -> [eval_decode_input_read_bb4_in(B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_decode_input_read_bb4_in(B,C) -> [eval_decode_input_read_bb4_in(B',C')] 
1*it(20)+0
#### Cost of chains of eval_decode_input_read_bb4_in(B,C):
* Chain [[20]]...: 1*it(20)+0
  with precondition: [] 

* Chain [[20],19]: 1*it(20)+0
  with precondition: [B=3] 

* Chain [[20],18]: 1*it(20)+0
  with precondition: [B=4] 

* Chain [[20],17]: 1*it(20)+0
  with precondition: [B=5] 

* Chain [[20],16]: 1*it(20)+0
  with precondition: [B=6] 

* Chain [19]: 0
  with precondition: [B=3] 

* Chain [18]: 0
  with precondition: [B=4] 

* Chain [17]: 0
  with precondition: [B=5] 

* Chain [16]: 0
  with precondition: [B=6] 


#### Cost of loops [21] 

 * loop 21:eval_decode_input_read_bb9_in(V_len_0,B,C) -> [eval_decode_input_read_bb9_in(V_len_0',B',C')] 
1
#### Cost of phase [21]:eval_decode_input_read_bb9_in(V_len_0,B,C) -> [eval_decode_input_read_bb9_in(V_len_0',B',C')] 
1*it(21)+0
  Such that:it(21) =< -V_len_0+8
it(21) =< -V_len_0+V_len_0'

#### Cost of chains of eval_decode_input_read_bb9_in(V_len_0,B,C):
* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< -V_len_0+8

  with precondition: [B=2,C=8,7>=V_len_0] 

* Chain [22]: 0
  with precondition: [B=2,V_len_0=C,V_len_0>=8] 


#### Cost of chains of eval_decode_input_read_bb7_in(V_34,B):
* Chain [23]: 1*s(5)+1
  Such that:s(5) =< -V_34+8

  with precondition: [] 


#### Cost of chains of loop_cont_eval_decode_input_read_bb4_in(C,A,B):
* Chain [27]: 0
  with precondition: [C=3] 

* Chain [26]: 0
  with precondition: [C=4] 

* Chain [25]: 1*s(6)+1
  Such that:s(6) =< -A+8

  with precondition: [C=5] 

* Chain [24]: 0
  with precondition: [C=6] 


#### Cost of chains of eval_decode_input_read_10(B):
* Chain [29]: 1*aux(5)+0
  with precondition: [] 

* Chain [28]...: 1*s(12)+1
  with precondition: [] 


#### Cost of chains of eval_decode_input_read_bb0_in(B):
* Chain [31]: 1*aux(6)+0
  with precondition: [] 

* Chain [30]...: 1*s(14)+1
  with precondition: [] 


#### Cost of chains of eval_decode_input_read_start(B):
* Chain [33]: 1*s(15)+0
  with precondition: [] 

* Chain [32]...: 1*s(16)+1
  with precondition: [] 


Closed-form bounds of eval_decode_input_read_start(B): 
-------------------------------------
* Chain [33] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [32]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_decode_input_read_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 47 ms.
* Invariants computed in 31 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 70 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 54 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 16 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 270 ms.

