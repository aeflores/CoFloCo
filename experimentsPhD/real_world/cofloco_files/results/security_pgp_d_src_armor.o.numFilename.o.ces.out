Warning: Ignored call to eval_numFilename_stop/1 in equation loop_cont_eval_numFilename_bb1_in/2 
Warning: Ignored call to eval_numFilename_stop/1 in equation loop_cont_eval_numFilename_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_numFilename_bb1_in/4]
1. non_recursive  : [loop_cont_eval_numFilename_bb1_in/2]
2. non_recursive  : [eval_numFilename_2/3]
3. non_recursive  : [eval_numFilename_1/3]
4. non_recursive  : [eval_numFilename_0/3]
5. non_recursive  : [eval_numFilename_bb0_in/3]
6. non_recursive  : [eval_numFilename_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_numFilename_bb1_in/4
1. SCC is partially evaluated into loop_cont_eval_numFilename_bb1_in/2
2. SCC is partially evaluated into eval_numFilename_2/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_numFilename_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_numFilename_bb1_in/4 
* CE 13 is refined into CE [20] 
* CE 17 is refined into CE [21] 
* CE 14 is refined into CE [22] 
* CE 18 is refined into CE [23] 
* CE 12 is refined into CE [24] 
* CE 16 is refined into CE [25] 
* CE 9 is refined into CE [26] 
* CE 10 is refined into CE [27] 
* CE 8 is refined into CE [28] 
* CE 11 is refined into CE [29] 
* CE 15 is refined into CE [30] 
* CE 7 is refined into CE [31] 
* CE 5 is refined into CE [32] 
* CE 6 is refined into CE [33] 
* CE 4 is refined into CE [34] 


#### Refined cost equations eval_numFilename_bb1_in/4 
* CE 20: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [V_offset_0>=3,V__0>=1,V__01>=1,B=2] 
* CE 21: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [V_offset_0>=3,V__01>=1,0>=V__0+1,B=2] 
* CE 22: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [V__0>=1,0>=V__01+1,B=2,V_offset_0=1] 
* CE 23: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [0>=V__0+1,0>=V__01+1,B=2,V_offset_0=1] 
* CE 24: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [V_offset_0>=1,V__0>=1,V__01>=1,9>=V__01,B=2] 
* CE 25: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [V_offset_0>=1,V__01>=1,0>=V__0+1,9>=V__01,B=2] 
* CE 26: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [V_offset_0>=3,V__01>=1,B=2,V__0=0] 
* CE 27: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [0>=V__01+1,B=2,V_offset_0=1,V__0=0] 
* CE 28: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [V_offset_0>=1,V__01>=1,9>=V__01,B=2,V__0=0] 
* CE 29: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [V__0>=1,B=2,V_offset_0=1,V__01=0] 
* CE 30: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [0>=V__0+1,B=2,V_offset_0=1,V__01=0] 
* CE 31: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 0
     [B=2,V_offset_0=1,V__0=0,V__01=0] 
* CE 32: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 1+ eval_numFilename_bb1_in(C,D,E,B)
     [10*D+9>=V__0,10*C+9>=V__01,V__0>=10*D,V__01>=10*C,D>=0,C>=1,V_offset_0>=1,V__0>=1,2>=V_offset_0,V_offset_0+1=E] 
* CE 33: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 1+ eval_numFilename_bb1_in(C,D,E,B)
     [10*D>=V__0,10*C+9>=V__01,V__0+9>=10*D,V__01>=10*C,C>=1,V_offset_0>=1,0>=D,2>=V_offset_0,0>=V__0+1,V_offset_0+1=E] 
* CE 34: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) = 1+ eval_numFilename_bb1_in(C,D,E,B)
     [10*C+9>=V__01,V__01>=10*C,C>=1,V_offset_0>=1,2>=V_offset_0,V_offset_0+1=E,D=0,V__0=0] 

### Cost equations --> "Loop" of eval_numFilename_bb1_in/4 
* CEs [32] --> Loop 19 
* CEs [33] --> Loop 20 
* CEs [34] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [21] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [25] --> Loop 25 
* CEs [22] --> Loop 26 
* CEs [23] --> Loop 27 
* CEs [26] --> Loop 28 
* CEs [28] --> Loop 29 
* CEs [27] --> Loop 30 
* CEs [29] --> Loop 31 
* CEs [30] --> Loop 32 
* CEs [31] --> Loop 33 

#### Loops of eval_numFilename_bb1_in/4 
* Loop 19: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B)->  eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B)
                  [10*V__0'+9>=V__0,10*V__01'+9>=V__01,V__0>=10*V__0',V__01>=10*V__01',V__0'>=0,V__01'>=1,V_offset_0>=1,V__0>=1,2>=V_offset_0,V_offset_0+1=V_offset_0'] 
* Loop 20: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B)->  eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B)
                  [10*V__0'>=V__0,10*V__01'+9>=V__01,V__0+9>=10*V__0',V__01>=10*V__01',V__01'>=1,V_offset_0>=1,0>=V__0',2>=V_offset_0,0>=V__0+1,V_offset_0+1=V_offset_0'] 
* Loop 21: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B)->  eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B)
                  [10*V__01'+9>=V__01,V__01>=10*V__01',V__01'>=1,V_offset_0>=1,2>=V_offset_0,V_offset_0+1=V_offset_0',V__0'=0,V__0=0] 
* Loop 22: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [V_offset_0>=3,V__0>=1,V__01>=1,B=2] 
* Loop 23: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [V_offset_0>=3,V__01>=1,0>=V__0+1,B=2] 
* Loop 24: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [V_offset_0>=1,V__0>=1,V__01>=1,9>=V__01,B=2] 
* Loop 25: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [V_offset_0>=1,V__01>=1,0>=V__0+1,9>=V__01,B=2] 
* Loop 26: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [V__0>=1,0>=V__01+1,B=2,V_offset_0=1] 
* Loop 27: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [0>=V__0+1,0>=V__01+1,B=2,V_offset_0=1] 
* Loop 28: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [V_offset_0>=3,V__01>=1,B=2,V__0=0] 
* Loop 29: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [V_offset_0>=1,V__01>=1,9>=V__01,B=2,V__0=0] 
* Loop 30: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [0>=V__01+1,B=2,V_offset_0=1,V__0=0] 
* Loop 31: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [V__0>=1,B=2,V_offset_0=1,V__01=0] 
* Loop 32: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [0>=V__0+1,B=2,V_offset_0=1,V__01=0] 
* Loop 33: eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) [B=2,V_offset_0=1,V__0=0,V__01=0] 

### Ranking functions of CR eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) 
* RF of phase [19]: [10/9*V__0-1,V__01/9-1,-V_offset_0+3]
* RF of phase [20]: [-10/9*V__0-1,V__01/9-1,-V_offset_0+3]
* RF of phase [21]: [V__01/9-1,-V_offset_0+3]

#### Partial ranking functions of CR eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    10/9*V__0-1
    V__01/9-1
    -V_offset_0+3
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    -10/9*V__0-1
    V__01/9-1
    -V_offset_0+3
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V__01/9-1
    -V_offset_0+3


### Resulting Chains:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) 
* [[21],29]
* [[21],28]
* [[20],[21],29]
* [[20],[21],28]
* [[20],29]
* [[20],28]
* [[20],25]
* [[20],23]
* [[19],[21],29]
* [[19],[21],28]
* [[19],29]
* [[19],28]
* [[19],24]
* [[19],22]
* [33]
* [32]
* [31]
* [30]
* [29]
* [27]
* [26]
* [25]
* [24]


### Merging Chains  eval_numFilename_bb1_in/4 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 
* [[31]] --> 3 
* [[30]] --> 4 
* [[29]] --> 5 
* [[29,[21]]] --> 6 
* [[28,[21]]] --> 7 
* [[28,[21],[19]],[29,[21],[19]]] --> 8 
* [[28,[21],[20]],[29,[21],[20]]] --> 9 
* [[27]] --> 10 
* [[26]] --> 11 
* [[25]] --> 12 
* [[24]] --> 13 
* [[29,[20]]] --> 14 
* [[25,[20]]] --> 15 
* [[29,[19]]] --> 16 
* [[24,[19]]] --> 17 
* [[28,[19]]] --> 18 
* [[28,[20]]] --> 19 
* [[23,[20]]] --> 20 
* [[22,[19]]] --> 21 


### Specialization of cost equations loop_cont_eval_numFilename_bb1_in/2 
* CE 19 is refined into CE [35] 


#### Refined cost equations loop_cont_eval_numFilename_bb1_in/2 
* CE 35: loop_cont_eval_numFilename_bb1_in(E,A) = 0
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_numFilename_bb1_in/2 
* CEs [35] --> Loop 34 

#### Loops of loop_cont_eval_numFilename_bb1_in/2 
* Loop 34: loop_cont_eval_numFilename_bb1_in(E,A) [E=2] 

### Ranking functions of CR loop_cont_eval_numFilename_bb1_in(E,A) 

#### Partial ranking functions of CR loop_cont_eval_numFilename_bb1_in(E,A) 


### Resulting Chains:loop_cont_eval_numFilename_bb1_in(E,A) 
* [34]


### Merging Chains  loop_cont_eval_numFilename_bb1_in/2 into  External patterns of execution 
* [[34]] --> 1 


### Specialization of cost equations eval_numFilename_2/3 
* CE 3 is refined into CE [36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56] 


#### Refined cost equations eval_numFilename_2/3 
* CE 36: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(C,D,E,F):1+ loop_cont_eval_numFilename_bb1_in(G,B):1
     [G=2,F=2,E=1,D=0,C=0,V_ofnum=0,V_num=0] 
* CE 37: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(C,V_num,D,E):2+ loop_cont_eval_numFilename_bb1_in(F,B):1
     [0>=V_num+1,F=2,E=2,D=1,C=0,V_ofnum=0] 
* CE 38: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(C,V_num,D,E):3+ loop_cont_eval_numFilename_bb1_in(F,B):1
     [V_num>=1,F=2,E=2,D=1,C=0,V_ofnum=0] 
* CE 39: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,C,D,E):4+ loop_cont_eval_numFilename_bb1_in(F,B):1
     [0>=V_ofnum+1,F=2,E=2,D=1,C=0,V_num=0] 
* CE 40: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,C,D,E):5+ loop_cont_eval_numFilename_bb1_in(F,B):1
     [V_ofnum>=1,9>=V_ofnum,F=2,E=2,D=1,C=0,V_num=0] 
* CE 41: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,C,D,E):6+ loop_cont_eval_numFilename_bb1_in(F,B):1
     [V_ofnum>=10,999>=V_ofnum,F=2,E=2,D=1,C=0,V_num=0] 
* CE 42: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,C,D,E):7+ loop_cont_eval_numFilename_bb1_in(F,B):1
     [V_ofnum>=100,F=2,E=2,D=1,C=0,V_num=0] 
* CE 43: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):8+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_num>=1,V_ofnum>=100,9>=V_num,E=2,D=2,C=1] 
* CE 44: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):9+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_num+9>=0,V_ofnum>=100,0>=V_num+1,E=2,D=2,C=1] 
* CE 45: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):10+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [0>=V_num+1,0>=V_ofnum+1,E=2,D=2,C=1] 
* CE 46: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):11+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_num>=1,0>=V_ofnum+1,E=2,D=2,C=1] 
* CE 47: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):12+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_ofnum>=1,0>=V_num+1,9>=V_ofnum,E=2,D=2,C=1] 
* CE 48: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):13+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_num>=1,V_ofnum>=1,9>=V_ofnum,E=2,D=2,C=1] 
* CE 49: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):14+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_num+V_ofnum>=1,0>=100*V_num+V_ofnum+1,V_num+99>=0,V_ofnum>=10,0>=V_num+1,999>=V_ofnum,E=2,D=2,C=1] 
* CE 50: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):15+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [0>=10*V_num+V_ofnum+1,V_ofnum>=10,0>=V_num+10,999>=V_ofnum,E=2,D=2,C=1] 
* CE 51: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):16+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_ofnum>=V_num+1,100*V_num>=V_ofnum+1,V_num>=1,V_ofnum>=10,99>=V_num,999>=V_ofnum,E=2,D=2,C=1] 
* CE 52: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):17+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [10*V_num>=V_ofnum+1,V_num>=10,V_ofnum>=10,999>=V_ofnum,E=2,D=2,C=1] 
* CE 53: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):18+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_num>=10,V_ofnum>=100,99>=V_num,E=2,D=2,C=1] 
* CE 54: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):19+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_num+99>=0,V_ofnum>=100,0>=V_num+10,E=2,D=2,C=1] 
* CE 55: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):20+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_ofnum>=100,0>=V_num+100,E=2,D=2,C=1] 
* CE 56: eval_numFilename_2(V_num,V_ofnum,B) = 1+ eval_numFilename_bb1_in(V_ofnum,V_num,C,D):21+ loop_cont_eval_numFilename_bb1_in(E,B):1
     [V_num>=100,V_ofnum>=100,E=2,D=2,C=1] 

### Cost equations --> "Loop" of eval_numFilename_2/3 
* CEs [56] --> Loop 35 
* CEs [46] --> Loop 36 
* CEs [48] --> Loop 37 
* CEs [52] --> Loop 38 
* CEs [55] --> Loop 39 
* CEs [54] --> Loop 40 
* CEs [50] --> Loop 41 
* CEs [44] --> Loop 42 
* CEs [45] --> Loop 43 
* CEs [47] --> Loop 44 
* CEs [49] --> Loop 45 
* CEs [43] --> Loop 46 
* CEs [53] --> Loop 47 
* CEs [51] --> Loop 48 
* CEs [38] --> Loop 49 
* CEs [37] --> Loop 50 
* CEs [42] --> Loop 51 
* CEs [39] --> Loop 52 
* CEs [40] --> Loop 53 
* CEs [41] --> Loop 54 
* CEs [36] --> Loop 55 

#### Loops of eval_numFilename_2/3 
* Loop 35: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=100,V_num>=100] 
* Loop 36: eval_numFilename_2(V_num,V_ofnum,B) [V_num>=1,0>=V_ofnum+1] 
* Loop 37: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=1,V_num>=1,9>=V_ofnum] 
* Loop 38: eval_numFilename_2(V_num,V_ofnum,B) [10*V_num>=V_ofnum+1,V_ofnum>=10,V_num>=10,999>=V_ofnum] 
* Loop 39: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=100,0>=V_num+100] 
* Loop 40: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=100,V_num+99>=0,0>=V_num+10] 
* Loop 41: eval_numFilename_2(V_num,V_ofnum,B) [0>=10*V_num+V_ofnum+1,V_ofnum>=10,999>=V_ofnum,0>=V_num+10] 
* Loop 42: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=100,V_num+9>=0,0>=V_num+1] 
* Loop 43: eval_numFilename_2(V_num,V_ofnum,B) [0>=V_ofnum+1,0>=V_num+1] 
* Loop 44: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=1,9>=V_ofnum,0>=V_num+1] 
* Loop 45: eval_numFilename_2(V_num,V_ofnum,B) [V_num+V_ofnum>=1,0>=100*V_num+V_ofnum+1,V_ofnum>=10,V_num+99>=0,999>=V_ofnum,0>=V_num+1] 
* Loop 46: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=100,V_num>=1,9>=V_num] 
* Loop 47: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=100,V_num>=10,99>=V_num] 
* Loop 48: eval_numFilename_2(V_num,V_ofnum,B) [100*V_num>=V_ofnum+1,V_ofnum>=V_num+1,V_ofnum>=10,V_num>=1,999>=V_ofnum,99>=V_num] 
* Loop 49: eval_numFilename_2(V_num,V_ofnum,B) [V_num>=1,V_ofnum=0] 
* Loop 50: eval_numFilename_2(V_num,V_ofnum,B) [0>=V_num+1,V_ofnum=0] 
* Loop 51: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=100,V_num=0] 
* Loop 52: eval_numFilename_2(V_num,V_ofnum,B) [0>=V_ofnum+1,V_num=0] 
* Loop 53: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=1,9>=V_ofnum,V_num=0] 
* Loop 54: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum>=10,999>=V_ofnum,V_num=0] 
* Loop 55: eval_numFilename_2(V_num,V_ofnum,B) [V_ofnum=0,V_num=0] 

### Ranking functions of CR eval_numFilename_2(V_num,V_ofnum,B) 

#### Partial ranking functions of CR eval_numFilename_2(V_num,V_ofnum,B) 


### Resulting Chains:eval_numFilename_2(V_num,V_ofnum,B) 
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]


### Merging Chains  eval_numFilename_2/3 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 
* [[53]] --> 3 
* [[52]] --> 4 
* [[51]] --> 5 
* [[50]] --> 6 
* [[49]] --> 7 
* [[48]] --> 8 
* [[47]] --> 9 
* [[46]] --> 10 
* [[45]] --> 11 
* [[44]] --> 12 
* [[43]] --> 13 
* [[42]] --> 14 
* [[41]] --> 15 
* [[40]] --> 16 
* [[39]] --> 17 
* [[38]] --> 18 
* [[37]] --> 19 
* [[36]] --> 20 
* [[35]] --> 21 


### Specialization of cost equations eval_numFilename_start/3 
* CE 2 is refined into CE [57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77] 


#### Refined cost equations eval_numFilename_start/3 
* CE 57: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(C,D,B):1
     [D=0,C=0,V_ofnum=0,V_num=0] 
* CE 58: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(C,V_ofnum,B):2
     [V_ofnum>=10,999>=V_ofnum,C=0,V_num=0] 
* CE 59: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(C,V_ofnum,B):3
     [V_ofnum>=1,9>=V_ofnum,C=0,V_num=0] 
* CE 60: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(C,V_ofnum,B):4
     [0>=V_ofnum+1,C=0,V_num=0] 
* CE 61: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(C,V_ofnum,B):5
     [V_ofnum>=100,C=0,V_num=0] 
* CE 62: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,C,B):6
     [0>=V_num+1,C=0,V_ofnum=0] 
* CE 63: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,C,B):7
     [V_num>=1,C=0,V_ofnum=0] 
* CE 64: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):8
     [100*V_num>=V_ofnum+1,V_ofnum>=V_num+1,V_ofnum>=10,V_num>=1,999>=V_ofnum,99>=V_num] 
* CE 65: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):9
     [V_ofnum>=100,V_num>=10,99>=V_num] 
* CE 66: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):10
     [V_ofnum>=100,V_num>=1,9>=V_num] 
* CE 67: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):11
     [V_num+V_ofnum>=1,0>=100*V_num+V_ofnum+1,V_ofnum>=10,V_num+99>=0,999>=V_ofnum,0>=V_num+1] 
* CE 68: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):12
     [V_ofnum>=1,9>=V_ofnum,0>=V_num+1] 
* CE 69: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):13
     [0>=V_ofnum+1,0>=V_num+1] 
* CE 70: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):14
     [V_ofnum>=100,V_num+9>=0,0>=V_num+1] 
* CE 71: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):15
     [0>=10*V_num+V_ofnum+1,V_ofnum>=10,999>=V_ofnum,0>=V_num+10] 
* CE 72: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):16
     [V_ofnum>=100,V_num+99>=0,0>=V_num+10] 
* CE 73: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):17
     [V_ofnum>=100,0>=V_num+100] 
* CE 74: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):18
     [10*V_num>=V_ofnum+1,V_ofnum>=10,V_num>=10,999>=V_ofnum] 
* CE 75: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):19
     [V_ofnum>=1,V_num>=1,9>=V_ofnum] 
* CE 76: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):20
     [V_num>=1,0>=V_ofnum+1] 
* CE 77: eval_numFilename_start(V_num,V_ofnum,B) = 0+ eval_numFilename_2(V_num,V_ofnum,B):21
     [V_ofnum>=100,V_num>=100] 

### Cost equations --> "Loop" of eval_numFilename_start/3 
* CEs [77] --> Loop 56 
* CEs [76] --> Loop 57 
* CEs [75] --> Loop 58 
* CEs [74] --> Loop 59 
* CEs [73] --> Loop 60 
* CEs [72] --> Loop 61 
* CEs [71] --> Loop 62 
* CEs [70] --> Loop 63 
* CEs [69] --> Loop 64 
* CEs [68] --> Loop 65 
* CEs [67] --> Loop 66 
* CEs [66] --> Loop 67 
* CEs [65] --> Loop 68 
* CEs [64] --> Loop 69 
* CEs [63] --> Loop 70 
* CEs [62] --> Loop 71 
* CEs [61] --> Loop 72 
* CEs [60] --> Loop 73 
* CEs [59] --> Loop 74 
* CEs [58] --> Loop 75 
* CEs [57] --> Loop 76 

#### Loops of eval_numFilename_start/3 
* Loop 56: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=100,V_num>=100] 
* Loop 57: eval_numFilename_start(V_num,V_ofnum,B) [V_num>=1,0>=V_ofnum+1] 
* Loop 58: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=1,V_num>=1,9>=V_ofnum] 
* Loop 59: eval_numFilename_start(V_num,V_ofnum,B) [10*V_num>=V_ofnum+1,V_ofnum>=10,V_num>=10,999>=V_ofnum] 
* Loop 60: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=100,0>=V_num+100] 
* Loop 61: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=100,V_num+99>=0,0>=V_num+10] 
* Loop 62: eval_numFilename_start(V_num,V_ofnum,B) [0>=10*V_num+V_ofnum+1,V_ofnum>=10,999>=V_ofnum,0>=V_num+10] 
* Loop 63: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=100,V_num+9>=0,0>=V_num+1] 
* Loop 64: eval_numFilename_start(V_num,V_ofnum,B) [0>=V_ofnum+1,0>=V_num+1] 
* Loop 65: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=1,9>=V_ofnum,0>=V_num+1] 
* Loop 66: eval_numFilename_start(V_num,V_ofnum,B) [V_num+V_ofnum>=1,0>=100*V_num+V_ofnum+1,V_ofnum>=10,V_num+99>=0,999>=V_ofnum,0>=V_num+1] 
* Loop 67: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=100,V_num>=1,9>=V_num] 
* Loop 68: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=100,V_num>=10,99>=V_num] 
* Loop 69: eval_numFilename_start(V_num,V_ofnum,B) [100*V_num>=V_ofnum+1,V_ofnum>=V_num+1,V_ofnum>=10,V_num>=1,999>=V_ofnum,99>=V_num] 
* Loop 70: eval_numFilename_start(V_num,V_ofnum,B) [V_num>=1,V_ofnum=0] 
* Loop 71: eval_numFilename_start(V_num,V_ofnum,B) [0>=V_num+1,V_ofnum=0] 
* Loop 72: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=100,V_num=0] 
* Loop 73: eval_numFilename_start(V_num,V_ofnum,B) [0>=V_ofnum+1,V_num=0] 
* Loop 74: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=1,9>=V_ofnum,V_num=0] 
* Loop 75: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum>=10,999>=V_ofnum,V_num=0] 
* Loop 76: eval_numFilename_start(V_num,V_ofnum,B) [V_ofnum=0,V_num=0] 

### Ranking functions of CR eval_numFilename_start(V_num,V_ofnum,B) 

#### Partial ranking functions of CR eval_numFilename_start(V_num,V_ofnum,B) 


### Resulting Chains:eval_numFilename_start(V_num,V_ofnum,B) 
* [76]
* [75]
* [74]
* [73]
* [72]
* [71]
* [70]
* [69]
* [68]
* [67]
* [66]
* [65]
* [64]
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]


### Merging Chains  eval_numFilename_start/3 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 
* [[74]] --> 3 
* [[73]] --> 4 
* [[72]] --> 5 
* [[71]] --> 6 
* [[70]] --> 7 
* [[69]] --> 8 
* [[68]] --> 9 
* [[67]] --> 10 
* [[66]] --> 11 
* [[65]] --> 12 
* [[64]] --> 13 
* [[63]] --> 14 
* [[62]] --> 15 
* [[61]] --> 16 
* [[60]] --> 17 
* [[59]] --> 18 
* [[58]] --> 19 
* [[57]] --> 20 
* [[56]] --> 21 


Computing Bounds
=====================================

#### Cost of loops [21] 

 * loop 21:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1
#### Cost of phase [21]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(21)+0
  Such that:it(21) =< V__01/9
it(21) =< V__01/9-V__01'/9
it(21) =< -V_offset_0+3
it(21) =< -V_offset_0+V_offset_0'

#### Cost of phase [21]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(21)+0
  Such that:it(21) =< V__01/9
it(21) =< V__01/9-V__01'/9
it(21) =< -V_offset_0+3
it(21) =< -V_offset_0+V_offset_0'

#### Cost of loops [20] 

 * loop 20:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1
#### Cost of phase [20]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(20)+0
  Such that:it(20) =< V__01/9
it(20) =< V__01/9-V__01'/9
it(20) =< -10/9*V__0
it(20) =< -10/9*V__0+10/9*V__0'
it(20) =< -V_offset_0+3
it(20) =< -V_offset_0+V_offset_0'

#### Cost of phase [20]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(20)+0
  Such that:it(20) =< V__01/9
it(20) =< V__01/9-V__01'/9
it(20) =< -10/9*V__0
it(20) =< -10/9*V__0+10/9*V__0'
it(20) =< -V_offset_0+3
it(20) =< -V_offset_0+V_offset_0'

#### Cost of phase [20]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(20)+0
  Such that:it(20) =< V__01/9
it(20) =< V__01/9-V__01'/9
it(20) =< -10/9*V__0
it(20) =< -10/9*V__0+10/9*V__0'
it(20) =< -V_offset_0+3
it(20) =< -V_offset_0+V_offset_0'

#### Cost of phase [20]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(20)+0
  Such that:it(20) =< V__01/9
it(20) =< V__01/9-V__01'/9
it(20) =< -10/9*V__0
it(20) =< -10/9*V__0+10/9*V__0'
it(20) =< -V_offset_0+3
it(20) =< -V_offset_0+V_offset_0'

#### Cost of phase [20]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(20)+0
  Such that:it(20) =< V__01/9
it(20) =< V__01/9-V__01'/9
it(20) =< -10/9*V__0
it(20) =< -10/9*V__0+10/9*V__0'
it(20) =< -V_offset_0+3
it(20) =< -V_offset_0+V_offset_0'

#### Cost of phase [20]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(20)+0
  Such that:it(20) =< V__01/9
it(20) =< V__01/9-V__01'/9
it(20) =< -10/9*V__0
it(20) =< -10/9*V__0+10/9*V__0'
it(20) =< -V_offset_0+3
it(20) =< -V_offset_0+V_offset_0'

#### Cost of loops [19] 

 * loop 19:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1
#### Cost of phase [19]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(19)+0
  Such that:it(19) =< V__01/9
it(19) =< V__01/9-V__01'/9
it(19) =< 10/9*V__0
it(19) =< 10/9*V__0-10/9*V__0'
it(19) =< -V_offset_0+3
it(19) =< -V_offset_0+V_offset_0'

#### Cost of phase [19]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(19)+0
  Such that:it(19) =< V__01/9
it(19) =< V__01/9-V__01'/9
it(19) =< 10/9*V__0
it(19) =< 10/9*V__0-10/9*V__0'
it(19) =< -V_offset_0+3
it(19) =< -V_offset_0+V_offset_0'

#### Cost of phase [19]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(19)+0
  Such that:it(19) =< V__01/9
it(19) =< V__01/9-V__01'/9
it(19) =< 10/9*V__0
it(19) =< 10/9*V__0-10/9*V__0'
it(19) =< -V_offset_0+3
it(19) =< -V_offset_0+V_offset_0'

#### Cost of phase [19]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(19)+0
  Such that:it(19) =< V__01/9
it(19) =< V__01/9-V__01'/9
it(19) =< 10/9*V__0
it(19) =< 10/9*V__0-10/9*V__0'
it(19) =< -V_offset_0+3
it(19) =< -V_offset_0+V_offset_0'

#### Cost of phase [19]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(19)+0
  Such that:it(19) =< V__01/9
it(19) =< V__01/9-V__01'/9
it(19) =< 10/9*V__0
it(19) =< 10/9*V__0-10/9*V__0'
it(19) =< -V_offset_0+3
it(19) =< -V_offset_0+V_offset_0'

#### Cost of phase [19]:eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B) -> [eval_numFilename_bb1_in(V__01',V__0',V_offset_0',B')] 
1*it(19)+0
  Such that:it(19) =< V__01/9
it(19) =< V__01/9-V__01'/9
it(19) =< 10/9*V__0
it(19) =< 10/9*V__0-10/9*V__0'
it(19) =< -V_offset_0+3
it(19) =< -V_offset_0+V_offset_0'

#### Cost of chains of eval_numFilename_bb1_in(V__01,V__0,V_offset_0,B):
* Chain [[21],29]: 1*it(21)+0
  Such that:it(21) =< V__01/90+8/9

  with precondition: [V__0=0,B=2,2>=V_offset_0,V__01>=10,V_offset_0>=1,1899>=900*V_offset_0+V__01] 

* Chain [[21],28]: 1*it(21)+0
  Such that:it(21) =< -V_offset_0+3

  with precondition: [V__0=0,B=2,2>=V_offset_0,V_offset_0>=1,V__01+90*V_offset_0>=190] 

* Chain [[20],[21],29]: 1*it(20)+1*it(21)+0
  Such that:it(20) =< 1
it(21) =< V__01/900+8/9

  with precondition: [V_offset_0=1,B=2,999>=V__01,0>=V__0+1,V__01>=100,V__0+9>=0] 

* Chain [[20],[21],28]: 2*it(20)+0
  Such that:aux(1) =< 1
it(20) =< aux(1)

  with precondition: [V_offset_0=1,B=2,0>=V__0+1,V__01>=100,V__0+9>=0] 

* Chain [[20],29]: 1*it(20)+0
  Such that:it(20) =< -V__0/9+8/9

  with precondition: [B=2,0>=V__0+1,2>=V_offset_0,V__01>=10,V_offset_0>=1,1899>=900*V_offset_0+V__01,0>=100*V__0+V__01+1,V__0+189>=90*V_offset_0,V__0+V__01>=1] 

* Chain [[20],28]: 1*it(20)+0
  Such that:it(20) =< -V_offset_0+3

  with precondition: [B=2,2>=V_offset_0,V_offset_0>=1,V__0+189>=90*V_offset_0,9*V_offset_0>=V__0+19,V__01+90*V_offset_0>=190] 

* Chain [[20],25]: 1*it(20)+0
  Such that:it(20) =< -V__0/9

  with precondition: [B=2,0>=V__0+10,2>=V_offset_0,V__01>=10,V_offset_0>=1,1899>=900*V_offset_0+V__01,0>=10*V__0+V__01+1] 

* Chain [[20],23]: 1*it(20)+0
  Such that:it(20) =< -V_offset_0+3

  with precondition: [B=2,2>=V_offset_0,V_offset_0>=1,90*V_offset_0>=V__0+190,V__01+90*V_offset_0>=190] 

* Chain [[19],[21],29]: 1*it(19)+1*it(21)+0
  Such that:it(19) =< 1
it(21) =< V__01/900+8/9

  with precondition: [V_offset_0=1,B=2,999>=V__01,9>=V__0,V__01>=100,V__0>=1] 

* Chain [[19],[21],28]: 2*it(19)+0
  Such that:aux(2) =< 1
it(19) =< aux(2)

  with precondition: [V_offset_0=1,B=2,9>=V__0,V__01>=100,V__0>=1] 

* Chain [[19],29]: 1*it(19)+0
  Such that:it(19) =< V__0/9+8/9

  with precondition: [B=2,2>=V_offset_0,V__01>=10,V__0>=1,V_offset_0>=1,1899>=900*V_offset_0+V__01,189>=90*V_offset_0+V__0,100*V__0>=V__01+1,V__01>=V__0+1] 

* Chain [[19],28]: 1*it(19)+0
  Such that:it(19) =< -V_offset_0+3

  with precondition: [B=2,2>=V_offset_0,V_offset_0>=1,189>=90*V_offset_0+V__0,V__01+90*V_offset_0>=190,V__0+9*V_offset_0>=19] 

* Chain [[19],24]: 1*it(19)+0
  Such that:it(19) =< V__0/9

  with precondition: [B=2,2>=V_offset_0,V__01>=10,V__0>=10,V_offset_0>=1,1899>=900*V_offset_0+V__01,10*V__0>=V__01+1] 

* Chain [[19],22]: 1*it(19)+0
  Such that:it(19) =< -V_offset_0+3

  with precondition: [B=2,2>=V_offset_0,V_offset_0>=1,V__01+90*V_offset_0>=190,V__0+90*V_offset_0>=190] 

* Chain [33]: 0
  with precondition: [V__01=0,V__0=0,V_offset_0=1,B=2] 

* Chain [32]: 0
  with precondition: [V__01=0,V_offset_0=1,B=2,0>=V__0+1] 

* Chain [31]: 0
  with precondition: [V__01=0,V_offset_0=1,B=2,V__0>=1] 

* Chain [30]: 0
  with precondition: [V__0=0,V_offset_0=1,B=2,0>=V__01+1] 

* Chain [29]: 0
  with precondition: [V__0=0,B=2,9>=V__01,V__01>=1,V_offset_0>=1] 

* Chain [27]: 0
  with precondition: [V_offset_0=1,B=2,0>=V__01+1,0>=V__0+1] 

* Chain [26]: 0
  with precondition: [V_offset_0=1,B=2,0>=V__01+1,V__0>=1] 

* Chain [25]: 0
  with precondition: [B=2,9>=V__01,0>=V__0+1,V__01>=1,V_offset_0>=1] 

* Chain [24]: 0
  with precondition: [B=2,9>=V__01,V__01>=1,V__0>=1,V_offset_0>=1] 


#### Cost of chains of loop_cont_eval_numFilename_bb1_in(E,A):
* Chain [34]: 0
  with precondition: [E=2] 


#### Cost of chains of eval_numFilename_2(V_num,V_ofnum,B):
* Chain [55]: 1
  with precondition: [V_num=0,V_ofnum=0] 

* Chain [54]: 1*s(9)+1
  Such that:s(9) =< V_ofnum/90+8/9

  with precondition: [V_num=0,999>=V_ofnum,V_ofnum>=10] 

* Chain [53]: 1
  with precondition: [V_num=0,9>=V_ofnum,V_ofnum>=1] 

* Chain [52]: 1
  with precondition: [V_num=0,0>=V_ofnum+1] 

* Chain [51]: 1*s(10)+1
  Such that:s(10) =< 2

  with precondition: [V_num=0,V_ofnum>=100] 

* Chain [50]: 1
  with precondition: [V_ofnum=0,0>=V_num+1] 

* Chain [49]: 1
  with precondition: [V_ofnum=0,V_num>=1] 

* Chain [48]: 1*s(11)+1
  Such that:s(11) =< V_num/9+8/9

  with precondition: [99>=V_num,999>=V_ofnum,V_num>=1,V_ofnum>=10,V_ofnum>=V_num+1,100*V_num>=V_ofnum+1] 

* Chain [47]: 1*s(12)+1
  Such that:s(12) =< 2

  with precondition: [99>=V_num,V_num>=10,V_ofnum>=100] 

* Chain [46]: 1*s(13)+3*s(15)+1
  Such that:s(14) =< 1
s(13) =< V_ofnum/900+8/9
s(15) =< s(14)

  with precondition: [9>=V_num,V_num>=1,V_ofnum>=100] 

* Chain [45]: 1*s(16)+1
  Such that:s(16) =< -V_num/9+8/9

  with precondition: [0>=V_num+1,999>=V_ofnum,V_num+99>=0,V_ofnum>=10,0>=100*V_num+V_ofnum+1,V_num+V_ofnum>=1] 

* Chain [44]: 1
  with precondition: [0>=V_num+1,9>=V_ofnum,V_ofnum>=1] 

* Chain [43]: 1
  with precondition: [0>=V_num+1,0>=V_ofnum+1] 

* Chain [42]: 1*s(17)+3*s(19)+1
  Such that:s(18) =< 1
s(17) =< V_ofnum/900+8/9
s(19) =< s(18)

  with precondition: [0>=V_num+1,V_num+9>=0,V_ofnum>=100] 

* Chain [41]: 1*s(20)+1
  Such that:s(20) =< -V_num/9

  with precondition: [0>=V_num+10,999>=V_ofnum,V_ofnum>=10,0>=10*V_num+V_ofnum+1] 

* Chain [40]: 1*s(21)+1
  Such that:s(21) =< 2

  with precondition: [0>=V_num+10,V_num+99>=0,V_ofnum>=100] 

* Chain [39]: 1*s(22)+1
  Such that:s(22) =< 2

  with precondition: [0>=V_num+100,V_ofnum>=100] 

* Chain [38]: 1*s(23)+1
  Such that:s(23) =< V_num/9

  with precondition: [999>=V_ofnum,V_num>=10,V_ofnum>=10,10*V_num>=V_ofnum+1] 

* Chain [37]: 1
  with precondition: [9>=V_ofnum,V_num>=1,V_ofnum>=1] 

* Chain [36]: 1
  with precondition: [0>=V_ofnum+1,V_num>=1] 

* Chain [35]: 1*s(24)+1
  Such that:s(24) =< 2

  with precondition: [V_num>=100,V_ofnum>=100] 


#### Cost of chains of eval_numFilename_start(V_num,V_ofnum,B):
* Chain [76]: 1
  with precondition: [V_num=0,V_ofnum=0] 

* Chain [75]: 1*s(25)+1
  Such that:s(25) =< V_ofnum/90+8/9

  with precondition: [V_num=0,999>=V_ofnum,V_ofnum>=10] 

* Chain [74]: 1
  with precondition: [V_num=0,9>=V_ofnum,V_ofnum>=1] 

* Chain [73]: 1
  with precondition: [V_num=0,0>=V_ofnum+1] 

* Chain [72]: 1*s(26)+1
  Such that:s(26) =< 2

  with precondition: [V_num=0,V_ofnum>=100] 

* Chain [71]: 1
  with precondition: [V_ofnum=0,0>=V_num+1] 

* Chain [70]: 1
  with precondition: [V_ofnum=0,V_num>=1] 

* Chain [69]: 1*s(27)+1
  Such that:s(27) =< V_num/9+8/9

  with precondition: [99>=V_num,999>=V_ofnum,V_num>=1,V_ofnum>=10,V_ofnum>=V_num+1,100*V_num>=V_ofnum+1] 

* Chain [68]: 1*s(28)+1
  Such that:s(28) =< 2

  with precondition: [99>=V_num,V_num>=10,V_ofnum>=100] 

* Chain [67]: 1*s(30)+3*s(31)+1
  Such that:s(29) =< 1
s(30) =< V_ofnum/900+8/9
s(31) =< s(29)

  with precondition: [9>=V_num,V_num>=1,V_ofnum>=100] 

* Chain [66]: 1*s(32)+1
  Such that:s(32) =< -V_num/9+8/9

  with precondition: [0>=V_num+1,999>=V_ofnum,V_num+99>=0,V_ofnum>=10,0>=100*V_num+V_ofnum+1,V_num+V_ofnum>=1] 

* Chain [65]: 1
  with precondition: [0>=V_num+1,9>=V_ofnum,V_ofnum>=1] 

* Chain [64]: 1
  with precondition: [0>=V_num+1,0>=V_ofnum+1] 

* Chain [63]: 1*s(34)+3*s(35)+1
  Such that:s(33) =< 1
s(34) =< V_ofnum/900+8/9
s(35) =< s(33)

  with precondition: [0>=V_num+1,V_num+9>=0,V_ofnum>=100] 

* Chain [62]: 1*s(36)+1
  Such that:s(36) =< -V_num/9

  with precondition: [0>=V_num+10,999>=V_ofnum,V_ofnum>=10,0>=10*V_num+V_ofnum+1] 

* Chain [61]: 1*s(37)+1
  Such that:s(37) =< 2

  with precondition: [0>=V_num+10,V_num+99>=0,V_ofnum>=100] 

* Chain [60]: 1*s(38)+1
  Such that:s(38) =< 2

  with precondition: [0>=V_num+100,V_ofnum>=100] 

* Chain [59]: 1*s(39)+1
  Such that:s(39) =< V_num/9

  with precondition: [999>=V_ofnum,V_num>=10,V_ofnum>=10,10*V_num>=V_ofnum+1] 

* Chain [58]: 1
  with precondition: [9>=V_ofnum,V_num>=1,V_ofnum>=1] 

* Chain [57]: 1
  with precondition: [0>=V_ofnum+1,V_num>=1] 

* Chain [56]: 1*s(40)+1
  Such that:s(40) =< 2

  with precondition: [V_num>=100,V_ofnum>=100] 


Closed-form bounds of eval_numFilename_start(V_num,V_ofnum,B): 
-------------------------------------
* Chain [76] with precondition: [V_num=0,V_ofnum=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [75] with precondition: [V_num=0,999>=V_ofnum,V_ofnum>=10] 
    - Upper bound: V_ofnum/90+17/9 
    - Complexity: n 
* Chain [74] with precondition: [V_num=0,9>=V_ofnum,V_ofnum>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [73] with precondition: [V_num=0,0>=V_ofnum+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [72] with precondition: [V_num=0,V_ofnum>=100] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [71] with precondition: [V_ofnum=0,0>=V_num+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [70] with precondition: [V_ofnum=0,V_num>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [69] with precondition: [99>=V_num,999>=V_ofnum,V_num>=1,V_ofnum>=10,V_ofnum>=V_num+1,100*V_num>=V_ofnum+1] 
    - Upper bound: V_num/9+17/9 
    - Complexity: n 
* Chain [68] with precondition: [99>=V_num,V_num>=10,V_ofnum>=100] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [67] with precondition: [9>=V_num,V_num>=1,V_ofnum>=100] 
    - Upper bound: V_ofnum/900+44/9 
    - Complexity: n 
* Chain [66] with precondition: [0>=V_num+1,999>=V_ofnum,V_num+99>=0,V_ofnum>=10,0>=100*V_num+V_ofnum+1,V_num+V_ofnum>=1] 
    - Upper bound: -V_num/9+17/9 
    - Complexity: n 
* Chain [65] with precondition: [0>=V_num+1,9>=V_ofnum,V_ofnum>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [64] with precondition: [0>=V_num+1,0>=V_ofnum+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [63] with precondition: [0>=V_num+1,V_num+9>=0,V_ofnum>=100] 
    - Upper bound: V_ofnum/900+44/9 
    - Complexity: n 
* Chain [62] with precondition: [0>=V_num+10,999>=V_ofnum,V_ofnum>=10,0>=10*V_num+V_ofnum+1] 
    - Upper bound: -V_num/9+1 
    - Complexity: n 
* Chain [61] with precondition: [0>=V_num+10,V_num+99>=0,V_ofnum>=100] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [60] with precondition: [0>=V_num+100,V_ofnum>=100] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [59] with precondition: [999>=V_ofnum,V_num>=10,V_ofnum>=10,10*V_num>=V_ofnum+1] 
    - Upper bound: V_num/9+1 
    - Complexity: n 
* Chain [58] with precondition: [9>=V_ofnum,V_num>=1,V_ofnum>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [57] with precondition: [0>=V_ofnum+1,V_num>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [56] with precondition: [V_num>=100,V_ofnum>=100] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of eval_numFilename_start(V_num,V_ofnum,B): max([2,nat(V_num/9+8/9),nat(V_ofnum/90+8/9),nat(-V_num/9+8/9),nat(V_num/9),nat(-V_num/9),nat(V_ofnum/900+8/9)+3])+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 32 ms.
* Invariants computed in 87 ms.
   - Backward Invariants 58 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 136 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 182 ms.
   - Equation cost structures 43 ms.
   - Phase cost structures 14 ms.
   - Chain cost structures 107 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 567 ms.

