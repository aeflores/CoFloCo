Warning: Ignored call to eval_tokenexec_continue_stop/1 in equation eval_tokenexec_continue_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_tokenexec_continue_16/2,eval_tokenexec_continue_17/3,eval_tokenexec_continue_3/2,eval_tokenexec_continue_4/2,eval_tokenexec_continue_bb1_in/2]
1. non_recursive  : [eval_tokenexec_continue_bb15_in/1]
2. non_recursive  : [eval_tokenexec_continue_24/1]
3. non_recursive  : [eval_tokenexec_continue_23/1]
4. non_recursive  : [eval_tokenexec_continue_bb13_in/1]
5. non_recursive  : [eval_tokenexec_continue_22/1]
6. non_recursive  : [eval_tokenexec_continue_21/1]
7. non_recursive  : [eval_tokenexec_continue_bb9_in/1]
8. non_recursive  : [eval_tokenexec_continue_13/1]
9. non_recursive  : [eval_tokenexec_continue_12/1]
10. non_recursive  : [eval_tokenexec_continue_bb8_in/1]
11. non_recursive  : [eval_tokenexec_continue_NewDefault12_in/1]
12. non_recursive  : [eval_tokenexec_continue_NewDefault_in/1]
13. non_recursive  : [eval_tokenexec_continue_bb6_in/1]
14. non_recursive  : [loop_cont_eval_tokenexec_continue_bb1_in/2]
15. non_recursive  : [eval_tokenexec_continue_1/2]
16. non_recursive  : [eval_tokenexec_continue_0/2]
17. non_recursive  : [eval_tokenexec_continue_bb0_in/2]
18. non_recursive  : [eval_tokenexec_continue_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_tokenexec_continue_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_tokenexec_continue_bb13_in/1
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_tokenexec_continue_bb9_in/1
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into loop_cont_eval_tokenexec_continue_bb1_in/2
15. SCC is partially evaluated into eval_tokenexec_continue_1/2
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_tokenexec_continue_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_tokenexec_continue_bb1_in/2 
* CE 4 is refined into CE [20] 
* CE 5 is refined into CE [21] 
* CE 6 is refined into CE [22] 
* CE 7 is refined into CE [23] 
* CE 8 is refined into CE [24] 
* CE 10 is refined into CE [25] 
* CE 9 is refined into CE [26] 


#### Refined cost equations eval_tokenexec_continue_bb1_in/2 
* CE 20: eval_tokenexec_continue_bb1_in(V_save,B) = 0
     [B=7] 
* CE 21: eval_tokenexec_continue_bb1_in(V_save,B) = 0
     [B=6] 
* CE 22: eval_tokenexec_continue_bb1_in(V_save,B) = 0
     [B=5] 
* CE 23: eval_tokenexec_continue_bb1_in(V_save,B) = 0
     [B=4] 
* CE 24: eval_tokenexec_continue_bb1_in(V_save,B) = 0
     [B=3] 
* CE 25: eval_tokenexec_continue_bb1_in(V_save,B) = 0
     [B=2] 
* CE 26: eval_tokenexec_continue_bb1_in(V_save,B) = 1+ eval_tokenexec_continue_bb1_in(V_save,B)
     [] 

### Cost equations --> "Loop" of eval_tokenexec_continue_bb1_in/2 
* CEs [26] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [23] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [25] --> Loop 24 

#### Loops of eval_tokenexec_continue_bb1_in/2 
* Loop 18: eval_tokenexec_continue_bb1_in(V_save,B)->  eval_tokenexec_continue_bb1_in(V_save,B)
                  [] 
* Loop 19: eval_tokenexec_continue_bb1_in(V_save,B) [B=7] 
* Loop 20: eval_tokenexec_continue_bb1_in(V_save,B) [B=6] 
* Loop 21: eval_tokenexec_continue_bb1_in(V_save,B) [B=5] 
* Loop 22: eval_tokenexec_continue_bb1_in(V_save,B) [B=4] 
* Loop 23: eval_tokenexec_continue_bb1_in(V_save,B) [B=3] 
* Loop 24: eval_tokenexec_continue_bb1_in(V_save,B) [B=2] 

### Ranking functions of CR eval_tokenexec_continue_bb1_in(V_save,B) 

#### Partial ranking functions of CR eval_tokenexec_continue_bb1_in(V_save,B) 


### Resulting Chains:eval_tokenexec_continue_bb1_in(V_save,B) 
* [[18]]...
* [[18],24]
* [[18],23]
* [[18],22]
* [[18],21]
* [[18],20]
* [[18],19]
* [24]
* [23]
* [22]
* [21]
* [20]
* [19]


### Merging Chains  eval_tokenexec_continue_bb1_in/2 into  External patterns of execution 
* [[24],[24,[18]]] --> 1 
* [[23],[23,[18]]] --> 2 
* [[22],[22,[18]]] --> 3 
* [[21],[21,[18]]] --> 4 
* [[20],[20,[18]]] --> 5 
* [[19],[19,[18]]] --> 6 
* [[[18]]] --> 7 


### Specialization of cost equations eval_tokenexec_continue_bb13_in/1 
* CE 19 is refined into CE [27] 


#### Refined cost equations eval_tokenexec_continue_bb13_in/1 
* CE 27: eval_tokenexec_continue_bb13_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_tokenexec_continue_bb13_in/1 
* CEs [27] --> Loop 25 

#### Loops of eval_tokenexec_continue_bb13_in/1 
* Loop 25: eval_tokenexec_continue_bb13_in(B) [] 

### Ranking functions of CR eval_tokenexec_continue_bb13_in(B) 

#### Partial ranking functions of CR eval_tokenexec_continue_bb13_in(B) 


### Resulting Chains:eval_tokenexec_continue_bb13_in(B) 
* [25]


### Merging Chains  eval_tokenexec_continue_bb13_in/1 into  External patterns of execution 
* [[25]] --> 1 


### Specialization of cost equations eval_tokenexec_continue_bb9_in/1 
* CE 17 is refined into CE [28] 
* CE 18 is refined into CE [29] 


#### Refined cost equations eval_tokenexec_continue_bb9_in/1 
* CE 28: eval_tokenexec_continue_bb9_in(B) = 0
     [] 
* CE 29: eval_tokenexec_continue_bb9_in(B) = 0+ eval_tokenexec_continue_bb13_in(B):1
     [] 

### Cost equations --> "Loop" of eval_tokenexec_continue_bb9_in/1 
* CEs [28,29] --> Loop 26 

#### Loops of eval_tokenexec_continue_bb9_in/1 
* Loop 26: eval_tokenexec_continue_bb9_in(B) [] 

### Ranking functions of CR eval_tokenexec_continue_bb9_in(B) 

#### Partial ranking functions of CR eval_tokenexec_continue_bb9_in(B) 


### Resulting Chains:eval_tokenexec_continue_bb9_in(B) 
* [26]


### Merging Chains  eval_tokenexec_continue_bb9_in/1 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations loop_cont_eval_tokenexec_continue_bb1_in/2 
* CE 16 is refined into CE [30] 
* CE 15 is refined into CE [31] 
* CE 14 is refined into CE [32] 
* CE 13 is refined into CE [33] 
* CE 12 is refined into CE [34] 
* CE 11 is refined into CE [35] 


#### Refined cost equations loop_cont_eval_tokenexec_continue_bb1_in/2 
* CE 30: loop_cont_eval_tokenexec_continue_bb1_in(C,A) = 0+ eval_tokenexec_continue_bb9_in(A):1
     [C=7] 
* CE 31: loop_cont_eval_tokenexec_continue_bb1_in(C,A) = 0+ eval_tokenexec_continue_bb9_in(A):1
     [C=6] 
* CE 32: loop_cont_eval_tokenexec_continue_bb1_in(C,A) = 0+ eval_tokenexec_continue_bb9_in(A):1
     [C=5] 
* CE 33: loop_cont_eval_tokenexec_continue_bb1_in(C,A) = 0+ eval_tokenexec_continue_bb9_in(A):1
     [C=4] 
* CE 34: loop_cont_eval_tokenexec_continue_bb1_in(C,A) = 0
     [C=3] 
* CE 35: loop_cont_eval_tokenexec_continue_bb1_in(C,A) = 0+ eval_tokenexec_continue_bb9_in(A):1
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_tokenexec_continue_bb1_in/2 
* CEs [30] --> Loop 27 
* CEs [31] --> Loop 28 
* CEs [32] --> Loop 29 
* CEs [33] --> Loop 30 
* CEs [34] --> Loop 31 
* CEs [35] --> Loop 32 

#### Loops of loop_cont_eval_tokenexec_continue_bb1_in/2 
* Loop 27: loop_cont_eval_tokenexec_continue_bb1_in(C,A) [C=7] 
* Loop 28: loop_cont_eval_tokenexec_continue_bb1_in(C,A) [C=6] 
* Loop 29: loop_cont_eval_tokenexec_continue_bb1_in(C,A) [C=5] 
* Loop 30: loop_cont_eval_tokenexec_continue_bb1_in(C,A) [C=4] 
* Loop 31: loop_cont_eval_tokenexec_continue_bb1_in(C,A) [C=3] 
* Loop 32: loop_cont_eval_tokenexec_continue_bb1_in(C,A) [C=2] 

### Ranking functions of CR loop_cont_eval_tokenexec_continue_bb1_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_tokenexec_continue_bb1_in(C,A) 


### Resulting Chains:loop_cont_eval_tokenexec_continue_bb1_in(C,A) 
* [32]
* [31]
* [30]
* [29]
* [28]
* [27]


### Merging Chains  loop_cont_eval_tokenexec_continue_bb1_in/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 
* [[30]] --> 3 
* [[29]] --> 4 
* [[28]] --> 5 
* [[27]] --> 6 


### Specialization of cost equations eval_tokenexec_continue_1/2 
* CE 3 is refined into CE [36,37,38,39,40,41,42] 


#### Refined cost equations eval_tokenexec_continue_1/2 
* CE 36: eval_tokenexec_continue_1(V_save,B) = 1+ eval_tokenexec_continue_bb1_in(V_save,C):1+ loop_cont_eval_tokenexec_continue_bb1_in(D,B):1
     [D=2,C=2] 
* CE 37: eval_tokenexec_continue_1(V_save,B) = 1+ eval_tokenexec_continue_bb1_in(V_save,C):2+ loop_cont_eval_tokenexec_continue_bb1_in(D,B):2
     [D=3,C=3] 
* CE 38: eval_tokenexec_continue_1(V_save,B) = 1+ eval_tokenexec_continue_bb1_in(V_save,C):3+ loop_cont_eval_tokenexec_continue_bb1_in(D,B):3
     [D=4,C=4] 
* CE 39: eval_tokenexec_continue_1(V_save,B) = 1+ eval_tokenexec_continue_bb1_in(V_save,C):4+ loop_cont_eval_tokenexec_continue_bb1_in(D,B):4
     [D=5,C=5] 
* CE 40: eval_tokenexec_continue_1(V_save,B) = 1+ eval_tokenexec_continue_bb1_in(V_save,C):5+ loop_cont_eval_tokenexec_continue_bb1_in(D,B):5
     [D=6,C=6] 
* CE 41: eval_tokenexec_continue_1(V_save,B) = 1+ eval_tokenexec_continue_bb1_in(V_save,C):6+ loop_cont_eval_tokenexec_continue_bb1_in(D,B):6
     [D=7,C=7] 
* CE 42: eval_tokenexec_continue_1(V_save,B) = 1+ eval_tokenexec_continue_bb1_in(V_save,C):7
     [] 

### Cost equations --> "Loop" of eval_tokenexec_continue_1/2 
* CEs [42] --> Loop 33 
* CEs [36,37,38,39,40,41] --> Loop 34 

#### Loops of eval_tokenexec_continue_1/2 
* Loop 33: eval_tokenexec_continue_1(V_save,B) [] 
* Loop 34: eval_tokenexec_continue_1(V_save,B) [] 

### Ranking functions of CR eval_tokenexec_continue_1(V_save,B) 

#### Partial ranking functions of CR eval_tokenexec_continue_1(V_save,B) 


### Resulting Chains:eval_tokenexec_continue_1(V_save,B) 
* [34]
* [33]...


### Merging Chains  eval_tokenexec_continue_1/2 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_tokenexec_continue_start/2 
* CE 2 is refined into CE [43,44] 


#### Refined cost equations eval_tokenexec_continue_start/2 
* CE 43: eval_tokenexec_continue_start(V_save,B) = 0+ eval_tokenexec_continue_1(V_save,B):1
     [] 
* CE 44: eval_tokenexec_continue_start(V_save,B) = 0+ eval_tokenexec_continue_1(V_save,B):2
     [] 

### Cost equations --> "Loop" of eval_tokenexec_continue_start/2 
* CEs [44] --> Loop 35 
* CEs [43] --> Loop 36 

#### Loops of eval_tokenexec_continue_start/2 
* Loop 35: eval_tokenexec_continue_start(V_save,B) [] 
* Loop 36: eval_tokenexec_continue_start(V_save,B) [] 

### Ranking functions of CR eval_tokenexec_continue_start(V_save,B) 

#### Partial ranking functions of CR eval_tokenexec_continue_start(V_save,B) 


### Resulting Chains:eval_tokenexec_continue_start(V_save,B) 
* [36]
* [35]...


### Merging Chains  eval_tokenexec_continue_start/2 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [18] 

 * loop 18:eval_tokenexec_continue_bb1_in(V_save,B) -> [eval_tokenexec_continue_bb1_in(V_save',B')] 
1
#### Cost of phase [18]:eval_tokenexec_continue_bb1_in(V_save,B) -> [eval_tokenexec_continue_bb1_in(V_save',B')] 
1*it(18)+0
#### Cost of phase [18]:eval_tokenexec_continue_bb1_in(V_save,B) -> [eval_tokenexec_continue_bb1_in(V_save',B')] 
1*it(18)+0
#### Cost of phase [18]:eval_tokenexec_continue_bb1_in(V_save,B) -> [eval_tokenexec_continue_bb1_in(V_save',B')] 
1*it(18)+0
#### Cost of phase [18]:eval_tokenexec_continue_bb1_in(V_save,B) -> [eval_tokenexec_continue_bb1_in(V_save',B')] 
1*it(18)+0
#### Cost of phase [18]:eval_tokenexec_continue_bb1_in(V_save,B) -> [eval_tokenexec_continue_bb1_in(V_save',B')] 
1*it(18)+0
#### Cost of phase [18]:eval_tokenexec_continue_bb1_in(V_save,B) -> [eval_tokenexec_continue_bb1_in(V_save',B')] 
1*it(18)+0
#### Cost of phase [18]:eval_tokenexec_continue_bb1_in(V_save,B) -> [eval_tokenexec_continue_bb1_in(V_save',B')] 
1*it(18)+0
#### Cost of chains of eval_tokenexec_continue_bb1_in(V_save,B):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [] 

* Chain [[18],24]: 1*it(18)+0
  with precondition: [B=2] 

* Chain [[18],23]: 1*it(18)+0
  with precondition: [B=3] 

* Chain [[18],22]: 1*it(18)+0
  with precondition: [B=4] 

* Chain [[18],21]: 1*it(18)+0
  with precondition: [B=5] 

* Chain [[18],20]: 1*it(18)+0
  with precondition: [B=6] 

* Chain [[18],19]: 1*it(18)+0
  with precondition: [B=7] 

* Chain [24]: 0
  with precondition: [B=2] 

* Chain [23]: 0
  with precondition: [B=3] 

* Chain [22]: 0
  with precondition: [B=4] 

* Chain [21]: 0
  with precondition: [B=5] 

* Chain [20]: 0
  with precondition: [B=6] 

* Chain [19]: 0
  with precondition: [B=7] 


#### Cost of chains of eval_tokenexec_continue_bb13_in(B):
* Chain [25]: 0
  with precondition: [] 


#### Cost of chains of eval_tokenexec_continue_bb9_in(B):
* Chain [26]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_tokenexec_continue_bb1_in(C,A):
* Chain [32]: 0
  with precondition: [C=2] 

* Chain [31]: 0
  with precondition: [C=3] 

* Chain [30]: 0
  with precondition: [C=4] 

* Chain [29]: 0
  with precondition: [C=5] 

* Chain [28]: 0
  with precondition: [C=6] 

* Chain [27]: 0
  with precondition: [C=7] 


#### Cost of chains of eval_tokenexec_continue_1(V_save,B):
* Chain [34]: 1*aux(7)+0
  with precondition: [] 

* Chain [33]...: 1*s(13)+1
  with precondition: [] 


#### Cost of chains of eval_tokenexec_continue_start(V_save,B):
* Chain [36]: 1*s(14)+0
  with precondition: [] 

* Chain [35]...: 1*s(15)+1
  with precondition: [] 


Closed-form bounds of eval_tokenexec_continue_start(V_save,B): 
-------------------------------------
* Chain [36] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [35]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_tokenexec_continue_start(V_save,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 22 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 75 ms.

