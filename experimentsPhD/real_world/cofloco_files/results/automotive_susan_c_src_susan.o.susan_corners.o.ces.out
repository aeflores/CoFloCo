WARNING: Excluded non-linear constraints:[H-F*M>=0,H-F*M+1=<F]
WARNING: Excluded non-linear constraints:[H-F*M>=0,H-F*M+1=< -F]
WARNING: Excluded non-linear constraints:[-H+F*M>=0,-H+F*M+1=<F]
WARNING: Excluded non-linear constraints:[-H+F*M>=0,-H+F*M+1=< -F]
WARNING: Excluded non-linear constraints:[H-G*M>=0,H-G*M+1=<G]
WARNING: Excluded non-linear constraints:[H-G*M>=0,H-G*M+1=< -G]
WARNING: Excluded non-linear constraints:[-H+G*M>=0,-H+G*M+1=<G]
WARNING: Excluded non-linear constraints:[-H+G*M>=0,-H+G*M+1=< -G]
WARNING: Excluded non-linear constraints:[I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1+10000=0]
WARNING: Excluded non-linear constraints:[I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1+10000>=0+1,I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1-2*C3+10000>=0,I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1-2*C3+10000+1=<2]
WARNING: Excluded non-linear constraints:[I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1+10000+1=<0,-I* -I-2*I*J-2*I*K-2*I*L-2*I*M-2*I*N-2*I*O-2*I*P-2*I*Q-2*I*R-2*I*S-2*I*T-2*I*U-2*I*V-2*I*W-2*I*X-2*I*Y-2*I*Z-2*I*A1-2*I*B1-2*I*C1-2*I*D1-2*I*E1-2*I*F1-2*I*G1-2*I*H1-2*I*I1-2*I*J1-2*I*K1-2*I*L1-2*I*M1-2*I*N1-2*I*O1-2*I*P1-2*I*Q1-2*I*R1-J*J-2*J*K-2*J*L-2*J*M-2*J*N-2*J*O-2*J*P-2*J*Q-2*J*R-2*J*S-2*J*T-2*J*U-2*J*V-2*J*W-2*J*X-2*J*Y-2*J*Z-2*J*A1-2*J*B1-2*J*C1-2*J*D1-2*J*E1-2*J*F1-2*J*G1-2*J*H1-2*J*I1-2*J*J1-2*J*K1-2*J*L1-2*J*M1-2*J*N1-2*J*O1-2*J*P1-2*J*Q1-2*J*R1-K*K-2*K*L-2*K*M-2*K*N-2*K*O-2*K*P-2*K*Q-2*K*R-2*K*S-2*K*T-2*K*U-2*K*V-2*K*W-2*K*X-2*K*Y-2*K*Z-2*K*A1-2*K*B1-2*K*C1-2*K*D1-2*K*E1-2*K*F1-2*K*G1-2*K*H1-2*K*I1-2*K*J1-2*K*K1-2*K*L1-2*K*M1-2*K*N1-2*K*O1-2*K*P1-2*K*Q1-2*K*R1-L*L-2*L*M-2*L*N-2*L*O-2*L*P-2*L*Q-2*L*R-2*L*S-2*L*T-2*L*U-2*L*V-2*L*W-2*L*X-2*L*Y-2*L*Z-2*L*A1-2*L*B1-2*L*C1-2*L*D1-2*L*E1-2*L*F1-2*L*G1-2*L*H1-2*L*I1-2*L*J1-2*L*K1-2*L*L1-2*L*M1-2*L*N1-2*L*O1-2*L*P1-2*L*Q1-2*L*R1-M*M-2*M*N-2*M*O-2*M*P-2*M*Q-2*M*R-2*M*S-2*M*T-2*M*U-2*M*V-2*M*W-2*M*X-2*M*Y-2*M*Z-2*M*A1-2*M*B1-2*M*C1-2*M*D1-2*M*E1-2*M*F1-2*M*G1-2*M*H1-2*M*I1-2*M*J1-2*M*K1-2*M*L1-2*M*M1-2*M*N1-2*M*O1-2*M*P1-2*M*Q1-2*M*R1-N*N-2*N*O-2*N*P-2*N*Q-2*N*R-2*N*S-2*N*T-2*N*U-2*N*V-2*N*W-2*N*X-2*N*Y-2*N*Z-2*N*A1-2*N*B1-2*N*C1-2*N*D1-2*N*E1-2*N*F1-2*N*G1-2*N*H1-2*N*I1-2*N*J1-2*N*K1-2*N*L1-2*N*M1-2*N*N1-2*N*O1-2*N*P1-2*N*Q1-2*N*R1-O*O-2*O*P-2*O*Q-2*O*R-2*O*S-2*O*T-2*O*U-2*O*V-2*O*W-2*O*X-2*O*Y-2*O*Z-2*O*A1-2*O*B1-2*O*C1-2*O*D1-2*O*E1-2*O*F1-2*O*G1-2*O*H1-2*O*I1-2*O*J1-2*O*K1-2*O*L1-2*O*M1-2*O*N1-2*O*O1-2*O*P1-2*O*Q1-2*O*R1-P*P-2*P*Q-2*P*R-2*P*S-2*P*T-2*P*U-2*P*V-2*P*W-2*P*X-2*P*Y-2*P*Z-2*P*A1-2*P*B1-2*P*C1-2*P*D1-2*P*E1-2*P*F1-2*P*G1-2*P*H1-2*P*I1-2*P*J1-2*P*K1-2*P*L1-2*P*M1-2*P*N1-2*P*O1-2*P*P1-2*P*Q1-2*P*R1-Q*Q-2*Q*R-2*Q*S-2*Q*T-2*Q*U-2*Q*V-2*Q*W-2*Q*X-2*Q*Y-2*Q*Z-2*Q*A1-2*Q*B1-2*Q*C1-2*Q*D1-2*Q*E1-2*Q*F1-2*Q*G1-2*Q*H1-2*Q*I1-2*Q*J1-2*Q*K1-2*Q*L1-2*Q*M1-2*Q*N1-2*Q*O1-2*Q*P1-2*Q*Q1-2*Q*R1-R*R-2*R*S-2*R*T-2*R*U-2*R*V-2*R*W-2*R*X-2*R*Y-2*R*Z-2*R*A1-2*R*B1-2*R*C1-2*R*D1-2*R*E1-2*R*F1-2*R*G1-2*R*H1-2*R*I1-2*R*J1-2*R*K1-2*R*L1-2*R*M1-2*R*N1-2*R*O1-2*R*P1-2*R*Q1-2*R*R1-S*S-2*S*T-2*S*U-2*S*V-2*S*W-2*S*X-2*S*Y-2*S*Z-2*S*A1-2*S*B1-2*S*C1-2*S*D1-2*S*E1-2*S*F1-2*S*G1-2*S*H1-2*S*I1-2*S*J1-2*S*K1-2*S*L1-2*S*M1-2*S*N1-2*S*O1-2*S*P1-2*S*Q1-2*S*R1-T*T-2*T*U-2*T*V-2*T*W-2*T*X-2*T*Y-2*T*Z-2*T*A1-2*T*B1-2*T*C1-2*T*D1-2*T*E1-2*T*F1-2*T*G1-2*T*H1-2*T*I1-2*T*J1-2*T*K1-2*T*L1-2*T*M1-2*T*N1-2*T*O1-2*T*P1-2*T*Q1-2*T*R1-U*U-2*U*V-2*U*W-2*U*X-2*U*Y-2*U*Z-2*U*A1-2*U*B1-2*U*C1-2*U*D1-2*U*E1-2*U*F1-2*U*G1-2*U*H1-2*U*I1-2*U*J1-2*U*K1-2*U*L1-2*U*M1-2*U*N1-2*U*O1-2*U*P1-2*U*Q1-2*U*R1-V*V-2*V*W-2*V*X-2*V*Y-2*V*Z-2*V*A1-2*V*B1-2*V*C1-2*V*D1-2*V*E1-2*V*F1-2*V*G1-2*V*H1-2*V*I1-2*V*J1-2*V*K1-2*V*L1-2*V*M1-2*V*N1-2*V*O1-2*V*P1-2*V*Q1-2*V*R1-W*W-2*W*X-2*W*Y-2*W*Z-2*W*A1-2*W*B1-2*W*C1-2*W*D1-2*W*E1-2*W*F1-2*W*G1-2*W*H1-2*W*I1-2*W*J1-2*W*K1-2*W*L1-2*W*M1-2*W*N1-2*W*O1-2*W*P1-2*W*Q1-2*W*R1-X*X-2*X*Y-2*X*Z-2*X*A1-2*X*B1-2*X*C1-2*X*D1-2*X*E1-2*X*F1-2*X*G1-2*X*H1-2*X*I1-2*X*J1-2*X*K1-2*X*L1-2*X*M1-2*X*N1-2*X*O1-2*X*P1-2*X*Q1-2*X*R1-Y*Y-2*Y*Z-2*Y*A1-2*Y*B1-2*Y*C1-2*Y*D1-2*Y*E1-2*Y*F1-2*Y*G1-2*Y*H1-2*Y*I1-2*Y*J1-2*Y*K1-2*Y*L1-2*Y*M1-2*Y*N1-2*Y*O1-2*Y*P1-2*Y*Q1-2*Y*R1-Z*Z-2*Z*A1-2*Z*B1-2*Z*C1-2*Z*D1-2*Z*E1-2*Z*F1-2*Z*G1-2*Z*H1-2*Z*I1-2*Z*J1-2*Z*K1-2*Z*L1-2*Z*M1-2*Z*N1-2*Z*O1-2*Z*P1-2*Z*Q1-2*Z*R1-A1*A1-2*A1*B1-2*A1*C1-2*A1*D1-2*A1*E1-2*A1*F1-2*A1*G1-2*A1*H1-2*A1*I1-2*A1*J1-2*A1*K1-2*A1*L1-2*A1*M1-2*A1*N1-2*A1*O1-2*A1*P1-2*A1*Q1-2*A1*R1-B1*B1-2*B1*C1-2*B1*D1-2*B1*E1-2*B1*F1-2*B1*G1-2*B1*H1-2*B1*I1-2*B1*J1-2*B1*K1-2*B1*L1-2*B1*M1-2*B1*N1-2*B1*O1-2*B1*P1-2*B1*Q1-2*B1*R1-C1*C1-2*C1*D1-2*C1*E1-2*C1*F1-2*C1*G1-2*C1*H1-2*C1*I1-2*C1*J1-2*C1*K1-2*C1*L1-2*C1*M1-2*C1*N1-2*C1*O1-2*C1*P1-2*C1*Q1-2*C1*R1-D1*D1-2*D1*E1-2*D1*F1-2*D1*G1-2*D1*H1-2*D1*I1-2*D1*J1-2*D1*K1-2*D1*L1-2*D1*M1-2*D1*N1-2*D1*O1-2*D1*P1-2*D1*Q1-2*D1*R1-E1*E1-2*E1*F1-2*E1*G1-2*E1*H1-2*E1*I1-2*E1*J1-2*E1*K1-2*E1*L1-2*E1*M1-2*E1*N1-2*E1*O1-2*E1*P1-2*E1*Q1-2*E1*R1-F1*F1-2*F1*G1-2*F1*H1-2*F1*I1-2*F1*J1-2*F1*K1-2*F1*L1-2*F1*M1-2*F1*N1-2*F1*O1-2*F1*P1-2*F1*Q1-2*F1*R1-G1*G1-2*G1*H1-2*G1*I1-2*G1*J1-2*G1*K1-2*G1*L1-2*G1*M1-2*G1*N1-2*G1*O1-2*G1*P1-2*G1*Q1-2*G1*R1-H1*H1-2*H1*I1-2*H1*J1-2*H1*K1-2*H1*L1-2*H1*M1-2*H1*N1-2*H1*O1-2*H1*P1-2*H1*Q1-2*H1*R1-I1*I1-2*I1*J1-2*I1*K1-2*I1*L1-2*I1*M1-2*I1*N1-2*I1*O1-2*I1*P1-2*I1*Q1-2*I1*R1-J1*J1-2*J1*K1-2*J1*L1-2*J1*M1-2*J1*N1-2*J1*O1-2*J1*P1-2*J1*Q1-2*J1*R1-K1*K1-2*K1*L1-2*K1*M1-2*K1*N1-2*K1*O1-2*K1*P1-2*K1*Q1-2*K1*R1-L1*L1-2*L1*M1-2*L1*N1-2*L1*O1-2*L1*P1-2*L1*Q1-2*L1*R1-M1*M1-2*M1*N1-2*M1*O1-2*M1*P1-2*M1*Q1-2*M1*R1-N1*N1-2*N1*O1-2*N1*P1-2*N1*Q1-2*N1*R1-O1*O1-2*O1*P1-2*O1*Q1-2*O1*R1-P1*P1-2*P1*Q1-2*P1*R1-Q1*Q1-2*Q1*R1-R1*R1+2*C3-10000>=0,-I* -I-2*I*J-2*I*K-2*I*L-2*I*M-2*I*N-2*I*O-2*I*P-2*I*Q-2*I*R-2*I*S-2*I*T-2*I*U-2*I*V-2*I*W-2*I*X-2*I*Y-2*I*Z-2*I*A1-2*I*B1-2*I*C1-2*I*D1-2*I*E1-2*I*F1-2*I*G1-2*I*H1-2*I*I1-2*I*J1-2*I*K1-2*I*L1-2*I*M1-2*I*N1-2*I*O1-2*I*P1-2*I*Q1-2*I*R1-J*J-2*J*K-2*J*L-2*J*M-2*J*N-2*J*O-2*J*P-2*J*Q-2*J*R-2*J*S-2*J*T-2*J*U-2*J*V-2*J*W-2*J*X-2*J*Y-2*J*Z-2*J*A1-2*J*B1-2*J*C1-2*J*D1-2*J*E1-2*J*F1-2*J*G1-2*J*H1-2*J*I1-2*J*J1-2*J*K1-2*J*L1-2*J*M1-2*J*N1-2*J*O1-2*J*P1-2*J*Q1-2*J*R1-K*K-2*K*L-2*K*M-2*K*N-2*K*O-2*K*P-2*K*Q-2*K*R-2*K*S-2*K*T-2*K*U-2*K*V-2*K*W-2*K*X-2*K*Y-2*K*Z-2*K*A1-2*K*B1-2*K*C1-2*K*D1-2*K*E1-2*K*F1-2*K*G1-2*K*H1-2*K*I1-2*K*J1-2*K*K1-2*K*L1-2*K*M1-2*K*N1-2*K*O1-2*K*P1-2*K*Q1-2*K*R1-L*L-2*L*M-2*L*N-2*L*O-2*L*P-2*L*Q-2*L*R-2*L*S-2*L*T-2*L*U-2*L*V-2*L*W-2*L*X-2*L*Y-2*L*Z-2*L*A1-2*L*B1-2*L*C1-2*L*D1-2*L*E1-2*L*F1-2*L*G1-2*L*H1-2*L*I1-2*L*J1-2*L*K1-2*L*L1-2*L*M1-2*L*N1-2*L*O1-2*L*P1-2*L*Q1-2*L*R1-M*M-2*M*N-2*M*O-2*M*P-2*M*Q-2*M*R-2*M*S-2*M*T-2*M*U-2*M*V-2*M*W-2*M*X-2*M*Y-2*M*Z-2*M*A1-2*M*B1-2*M*C1-2*M*D1-2*M*E1-2*M*F1-2*M*G1-2*M*H1-2*M*I1-2*M*J1-2*M*K1-2*M*L1-2*M*M1-2*M*N1-2*M*O1-2*M*P1-2*M*Q1-2*M*R1-N*N-2*N*O-2*N*P-2*N*Q-2*N*R-2*N*S-2*N*T-2*N*U-2*N*V-2*N*W-2*N*X-2*N*Y-2*N*Z-2*N*A1-2*N*B1-2*N*C1-2*N*D1-2*N*E1-2*N*F1-2*N*G1-2*N*H1-2*N*I1-2*N*J1-2*N*K1-2*N*L1-2*N*M1-2*N*N1-2*N*O1-2*N*P1-2*N*Q1-2*N*R1-O*O-2*O*P-2*O*Q-2*O*R-2*O*S-2*O*T-2*O*U-2*O*V-2*O*W-2*O*X-2*O*Y-2*O*Z-2*O*A1-2*O*B1-2*O*C1-2*O*D1-2*O*E1-2*O*F1-2*O*G1-2*O*H1-2*O*I1-2*O*J1-2*O*K1-2*O*L1-2*O*M1-2*O*N1-2*O*O1-2*O*P1-2*O*Q1-2*O*R1-P*P-2*P*Q-2*P*R-2*P*S-2*P*T-2*P*U-2*P*V-2*P*W-2*P*X-2*P*Y-2*P*Z-2*P*A1-2*P*B1-2*P*C1-2*P*D1-2*P*E1-2*P*F1-2*P*G1-2*P*H1-2*P*I1-2*P*J1-2*P*K1-2*P*L1-2*P*M1-2*P*N1-2*P*O1-2*P*P1-2*P*Q1-2*P*R1-Q*Q-2*Q*R-2*Q*S-2*Q*T-2*Q*U-2*Q*V-2*Q*W-2*Q*X-2*Q*Y-2*Q*Z-2*Q*A1-2*Q*B1-2*Q*C1-2*Q*D1-2*Q*E1-2*Q*F1-2*Q*G1-2*Q*H1-2*Q*I1-2*Q*J1-2*Q*K1-2*Q*L1-2*Q*M1-2*Q*N1-2*Q*O1-2*Q*P1-2*Q*Q1-2*Q*R1-R*R-2*R*S-2*R*T-2*R*U-2*R*V-2*R*W-2*R*X-2*R*Y-2*R*Z-2*R*A1-2*R*B1-2*R*C1-2*R*D1-2*R*E1-2*R*F1-2*R*G1-2*R*H1-2*R*I1-2*R*J1-2*R*K1-2*R*L1-2*R*M1-2*R*N1-2*R*O1-2*R*P1-2*R*Q1-2*R*R1-S*S-2*S*T-2*S*U-2*S*V-2*S*W-2*S*X-2*S*Y-2*S*Z-2*S*A1-2*S*B1-2*S*C1-2*S*D1-2*S*E1-2*S*F1-2*S*G1-2*S*H1-2*S*I1-2*S*J1-2*S*K1-2*S*L1-2*S*M1-2*S*N1-2*S*O1-2*S*P1-2*S*Q1-2*S*R1-T*T-2*T*U-2*T*V-2*T*W-2*T*X-2*T*Y-2*T*Z-2*T*A1-2*T*B1-2*T*C1-2*T*D1-2*T*E1-2*T*F1-2*T*G1-2*T*H1-2*T*I1-2*T*J1-2*T*K1-2*T*L1-2*T*M1-2*T*N1-2*T*O1-2*T*P1-2*T*Q1-2*T*R1-U*U-2*U*V-2*U*W-2*U*X-2*U*Y-2*U*Z-2*U*A1-2*U*B1-2*U*C1-2*U*D1-2*U*E1-2*U*F1-2*U*G1-2*U*H1-2*U*I1-2*U*J1-2*U*K1-2*U*L1-2*U*M1-2*U*N1-2*U*O1-2*U*P1-2*U*Q1-2*U*R1-V*V-2*V*W-2*V*X-2*V*Y-2*V*Z-2*V*A1-2*V*B1-2*V*C1-2*V*D1-2*V*E1-2*V*F1-2*V*G1-2*V*H1-2*V*I1-2*V*J1-2*V*K1-2*V*L1-2*V*M1-2*V*N1-2*V*O1-2*V*P1-2*V*Q1-2*V*R1-W*W-2*W*X-2*W*Y-2*W*Z-2*W*A1-2*W*B1-2*W*C1-2*W*D1-2*W*E1-2*W*F1-2*W*G1-2*W*H1-2*W*I1-2*W*J1-2*W*K1-2*W*L1-2*W*M1-2*W*N1-2*W*O1-2*W*P1-2*W*Q1-2*W*R1-X*X-2*X*Y-2*X*Z-2*X*A1-2*X*B1-2*X*C1-2*X*D1-2*X*E1-2*X*F1-2*X*G1-2*X*H1-2*X*I1-2*X*J1-2*X*K1-2*X*L1-2*X*M1-2*X*N1-2*X*O1-2*X*P1-2*X*Q1-2*X*R1-Y*Y-2*Y*Z-2*Y*A1-2*Y*B1-2*Y*C1-2*Y*D1-2*Y*E1-2*Y*F1-2*Y*G1-2*Y*H1-2*Y*I1-2*Y*J1-2*Y*K1-2*Y*L1-2*Y*M1-2*Y*N1-2*Y*O1-2*Y*P1-2*Y*Q1-2*Y*R1-Z*Z-2*Z*A1-2*Z*B1-2*Z*C1-2*Z*D1-2*Z*E1-2*Z*F1-2*Z*G1-2*Z*H1-2*Z*I1-2*Z*J1-2*Z*K1-2*Z*L1-2*Z*M1-2*Z*N1-2*Z*O1-2*Z*P1-2*Z*Q1-2*Z*R1-A1*A1-2*A1*B1-2*A1*C1-2*A1*D1-2*A1*E1-2*A1*F1-2*A1*G1-2*A1*H1-2*A1*I1-2*A1*J1-2*A1*K1-2*A1*L1-2*A1*M1-2*A1*N1-2*A1*O1-2*A1*P1-2*A1*Q1-2*A1*R1-B1*B1-2*B1*C1-2*B1*D1-2*B1*E1-2*B1*F1-2*B1*G1-2*B1*H1-2*B1*I1-2*B1*J1-2*B1*K1-2*B1*L1-2*B1*M1-2*B1*N1-2*B1*O1-2*B1*P1-2*B1*Q1-2*B1*R1-C1*C1-2*C1*D1-2*C1*E1-2*C1*F1-2*C1*G1-2*C1*H1-2*C1*I1-2*C1*J1-2*C1*K1-2*C1*L1-2*C1*M1-2*C1*N1-2*C1*O1-2*C1*P1-2*C1*Q1-2*C1*R1-D1*D1-2*D1*E1-2*D1*F1-2*D1*G1-2*D1*H1-2*D1*I1-2*D1*J1-2*D1*K1-2*D1*L1-2*D1*M1-2*D1*N1-2*D1*O1-2*D1*P1-2*D1*Q1-2*D1*R1-E1*E1-2*E1*F1-2*E1*G1-2*E1*H1-2*E1*I1-2*E1*J1-2*E1*K1-2*E1*L1-2*E1*M1-2*E1*N1-2*E1*O1-2*E1*P1-2*E1*Q1-2*E1*R1-F1*F1-2*F1*G1-2*F1*H1-2*F1*I1-2*F1*J1-2*F1*K1-2*F1*L1-2*F1*M1-2*F1*N1-2*F1*O1-2*F1*P1-2*F1*Q1-2*F1*R1-G1*G1-2*G1*H1-2*G1*I1-2*G1*J1-2*G1*K1-2*G1*L1-2*G1*M1-2*G1*N1-2*G1*O1-2*G1*P1-2*G1*Q1-2*G1*R1-H1*H1-2*H1*I1-2*H1*J1-2*H1*K1-2*H1*L1-2*H1*M1-2*H1*N1-2*H1*O1-2*H1*P1-2*H1*Q1-2*H1*R1-I1*I1-2*I1*J1-2*I1*K1-2*I1*L1-2*I1*M1-2*I1*N1-2*I1*O1-2*I1*P1-2*I1*Q1-2*I1*R1-J1*J1-2*J1*K1-2*J1*L1-2*J1*M1-2*J1*N1-2*J1*O1-2*J1*P1-2*J1*Q1-2*J1*R1-K1*K1-2*K1*L1-2*K1*M1-2*K1*N1-2*K1*O1-2*K1*P1-2*K1*Q1-2*K1*R1-L1*L1-2*L1*M1-2*L1*N1-2*L1*O1-2*L1*P1-2*L1*Q1-2*L1*R1-M1*M1-2*M1*N1-2*M1*O1-2*M1*P1-2*M1*Q1-2*M1*R1-N1*N1-2*N1*O1-2*N1*P1-2*N1*Q1-2*N1*R1-O1*O1-2*O1*P1-2*O1*Q1-2*O1*R1-P1*P1-2*P1*Q1-2*P1*R1-Q1*Q1-2*Q1*R1-R1*R1+2*C3-10000+1=<2]
WARNING: Excluded non-linear constraints:[I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1+10000=0]
WARNING: Excluded non-linear constraints:[I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1+10000>=0+1,I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1-2*C3+10000>=0,I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1-2*C3+10000+1=<2]
WARNING: Excluded non-linear constraints:[I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1+10000+1=<0,-I* -I-2*I*J-2*I*K-2*I*L-2*I*M-2*I*N-2*I*O-2*I*P-2*I*Q-2*I*R-2*I*S-2*I*T-2*I*U-2*I*V-2*I*W-2*I*X-2*I*Y-2*I*Z-2*I*A1-2*I*B1-2*I*C1-2*I*D1-2*I*E1-2*I*F1-2*I*G1-2*I*H1-2*I*I1-2*I*J1-2*I*K1-2*I*L1-2*I*M1-2*I*N1-2*I*O1-2*I*P1-2*I*Q1-2*I*R1-J*J-2*J*K-2*J*L-2*J*M-2*J*N-2*J*O-2*J*P-2*J*Q-2*J*R-2*J*S-2*J*T-2*J*U-2*J*V-2*J*W-2*J*X-2*J*Y-2*J*Z-2*J*A1-2*J*B1-2*J*C1-2*J*D1-2*J*E1-2*J*F1-2*J*G1-2*J*H1-2*J*I1-2*J*J1-2*J*K1-2*J*L1-2*J*M1-2*J*N1-2*J*O1-2*J*P1-2*J*Q1-2*J*R1-K*K-2*K*L-2*K*M-2*K*N-2*K*O-2*K*P-2*K*Q-2*K*R-2*K*S-2*K*T-2*K*U-2*K*V-2*K*W-2*K*X-2*K*Y-2*K*Z-2*K*A1-2*K*B1-2*K*C1-2*K*D1-2*K*E1-2*K*F1-2*K*G1-2*K*H1-2*K*I1-2*K*J1-2*K*K1-2*K*L1-2*K*M1-2*K*N1-2*K*O1-2*K*P1-2*K*Q1-2*K*R1-L*L-2*L*M-2*L*N-2*L*O-2*L*P-2*L*Q-2*L*R-2*L*S-2*L*T-2*L*U-2*L*V-2*L*W-2*L*X-2*L*Y-2*L*Z-2*L*A1-2*L*B1-2*L*C1-2*L*D1-2*L*E1-2*L*F1-2*L*G1-2*L*H1-2*L*I1-2*L*J1-2*L*K1-2*L*L1-2*L*M1-2*L*N1-2*L*O1-2*L*P1-2*L*Q1-2*L*R1-M*M-2*M*N-2*M*O-2*M*P-2*M*Q-2*M*R-2*M*S-2*M*T-2*M*U-2*M*V-2*M*W-2*M*X-2*M*Y-2*M*Z-2*M*A1-2*M*B1-2*M*C1-2*M*D1-2*M*E1-2*M*F1-2*M*G1-2*M*H1-2*M*I1-2*M*J1-2*M*K1-2*M*L1-2*M*M1-2*M*N1-2*M*O1-2*M*P1-2*M*Q1-2*M*R1-N*N-2*N*O-2*N*P-2*N*Q-2*N*R-2*N*S-2*N*T-2*N*U-2*N*V-2*N*W-2*N*X-2*N*Y-2*N*Z-2*N*A1-2*N*B1-2*N*C1-2*N*D1-2*N*E1-2*N*F1-2*N*G1-2*N*H1-2*N*I1-2*N*J1-2*N*K1-2*N*L1-2*N*M1-2*N*N1-2*N*O1-2*N*P1-2*N*Q1-2*N*R1-O*O-2*O*P-2*O*Q-2*O*R-2*O*S-2*O*T-2*O*U-2*O*V-2*O*W-2*O*X-2*O*Y-2*O*Z-2*O*A1-2*O*B1-2*O*C1-2*O*D1-2*O*E1-2*O*F1-2*O*G1-2*O*H1-2*O*I1-2*O*J1-2*O*K1-2*O*L1-2*O*M1-2*O*N1-2*O*O1-2*O*P1-2*O*Q1-2*O*R1-P*P-2*P*Q-2*P*R-2*P*S-2*P*T-2*P*U-2*P*V-2*P*W-2*P*X-2*P*Y-2*P*Z-2*P*A1-2*P*B1-2*P*C1-2*P*D1-2*P*E1-2*P*F1-2*P*G1-2*P*H1-2*P*I1-2*P*J1-2*P*K1-2*P*L1-2*P*M1-2*P*N1-2*P*O1-2*P*P1-2*P*Q1-2*P*R1-Q*Q-2*Q*R-2*Q*S-2*Q*T-2*Q*U-2*Q*V-2*Q*W-2*Q*X-2*Q*Y-2*Q*Z-2*Q*A1-2*Q*B1-2*Q*C1-2*Q*D1-2*Q*E1-2*Q*F1-2*Q*G1-2*Q*H1-2*Q*I1-2*Q*J1-2*Q*K1-2*Q*L1-2*Q*M1-2*Q*N1-2*Q*O1-2*Q*P1-2*Q*Q1-2*Q*R1-R*R-2*R*S-2*R*T-2*R*U-2*R*V-2*R*W-2*R*X-2*R*Y-2*R*Z-2*R*A1-2*R*B1-2*R*C1-2*R*D1-2*R*E1-2*R*F1-2*R*G1-2*R*H1-2*R*I1-2*R*J1-2*R*K1-2*R*L1-2*R*M1-2*R*N1-2*R*O1-2*R*P1-2*R*Q1-2*R*R1-S*S-2*S*T-2*S*U-2*S*V-2*S*W-2*S*X-2*S*Y-2*S*Z-2*S*A1-2*S*B1-2*S*C1-2*S*D1-2*S*E1-2*S*F1-2*S*G1-2*S*H1-2*S*I1-2*S*J1-2*S*K1-2*S*L1-2*S*M1-2*S*N1-2*S*O1-2*S*P1-2*S*Q1-2*S*R1-T*T-2*T*U-2*T*V-2*T*W-2*T*X-2*T*Y-2*T*Z-2*T*A1-2*T*B1-2*T*C1-2*T*D1-2*T*E1-2*T*F1-2*T*G1-2*T*H1-2*T*I1-2*T*J1-2*T*K1-2*T*L1-2*T*M1-2*T*N1-2*T*O1-2*T*P1-2*T*Q1-2*T*R1-U*U-2*U*V-2*U*W-2*U*X-2*U*Y-2*U*Z-2*U*A1-2*U*B1-2*U*C1-2*U*D1-2*U*E1-2*U*F1-2*U*G1-2*U*H1-2*U*I1-2*U*J1-2*U*K1-2*U*L1-2*U*M1-2*U*N1-2*U*O1-2*U*P1-2*U*Q1-2*U*R1-V*V-2*V*W-2*V*X-2*V*Y-2*V*Z-2*V*A1-2*V*B1-2*V*C1-2*V*D1-2*V*E1-2*V*F1-2*V*G1-2*V*H1-2*V*I1-2*V*J1-2*V*K1-2*V*L1-2*V*M1-2*V*N1-2*V*O1-2*V*P1-2*V*Q1-2*V*R1-W*W-2*W*X-2*W*Y-2*W*Z-2*W*A1-2*W*B1-2*W*C1-2*W*D1-2*W*E1-2*W*F1-2*W*G1-2*W*H1-2*W*I1-2*W*J1-2*W*K1-2*W*L1-2*W*M1-2*W*N1-2*W*O1-2*W*P1-2*W*Q1-2*W*R1-X*X-2*X*Y-2*X*Z-2*X*A1-2*X*B1-2*X*C1-2*X*D1-2*X*E1-2*X*F1-2*X*G1-2*X*H1-2*X*I1-2*X*J1-2*X*K1-2*X*L1-2*X*M1-2*X*N1-2*X*O1-2*X*P1-2*X*Q1-2*X*R1-Y*Y-2*Y*Z-2*Y*A1-2*Y*B1-2*Y*C1-2*Y*D1-2*Y*E1-2*Y*F1-2*Y*G1-2*Y*H1-2*Y*I1-2*Y*J1-2*Y*K1-2*Y*L1-2*Y*M1-2*Y*N1-2*Y*O1-2*Y*P1-2*Y*Q1-2*Y*R1-Z*Z-2*Z*A1-2*Z*B1-2*Z*C1-2*Z*D1-2*Z*E1-2*Z*F1-2*Z*G1-2*Z*H1-2*Z*I1-2*Z*J1-2*Z*K1-2*Z*L1-2*Z*M1-2*Z*N1-2*Z*O1-2*Z*P1-2*Z*Q1-2*Z*R1-A1*A1-2*A1*B1-2*A1*C1-2*A1*D1-2*A1*E1-2*A1*F1-2*A1*G1-2*A1*H1-2*A1*I1-2*A1*J1-2*A1*K1-2*A1*L1-2*A1*M1-2*A1*N1-2*A1*O1-2*A1*P1-2*A1*Q1-2*A1*R1-B1*B1-2*B1*C1-2*B1*D1-2*B1*E1-2*B1*F1-2*B1*G1-2*B1*H1-2*B1*I1-2*B1*J1-2*B1*K1-2*B1*L1-2*B1*M1-2*B1*N1-2*B1*O1-2*B1*P1-2*B1*Q1-2*B1*R1-C1*C1-2*C1*D1-2*C1*E1-2*C1*F1-2*C1*G1-2*C1*H1-2*C1*I1-2*C1*J1-2*C1*K1-2*C1*L1-2*C1*M1-2*C1*N1-2*C1*O1-2*C1*P1-2*C1*Q1-2*C1*R1-D1*D1-2*D1*E1-2*D1*F1-2*D1*G1-2*D1*H1-2*D1*I1-2*D1*J1-2*D1*K1-2*D1*L1-2*D1*M1-2*D1*N1-2*D1*O1-2*D1*P1-2*D1*Q1-2*D1*R1-E1*E1-2*E1*F1-2*E1*G1-2*E1*H1-2*E1*I1-2*E1*J1-2*E1*K1-2*E1*L1-2*E1*M1-2*E1*N1-2*E1*O1-2*E1*P1-2*E1*Q1-2*E1*R1-F1*F1-2*F1*G1-2*F1*H1-2*F1*I1-2*F1*J1-2*F1*K1-2*F1*L1-2*F1*M1-2*F1*N1-2*F1*O1-2*F1*P1-2*F1*Q1-2*F1*R1-G1*G1-2*G1*H1-2*G1*I1-2*G1*J1-2*G1*K1-2*G1*L1-2*G1*M1-2*G1*N1-2*G1*O1-2*G1*P1-2*G1*Q1-2*G1*R1-H1*H1-2*H1*I1-2*H1*J1-2*H1*K1-2*H1*L1-2*H1*M1-2*H1*N1-2*H1*O1-2*H1*P1-2*H1*Q1-2*H1*R1-I1*I1-2*I1*J1-2*I1*K1-2*I1*L1-2*I1*M1-2*I1*N1-2*I1*O1-2*I1*P1-2*I1*Q1-2*I1*R1-J1*J1-2*J1*K1-2*J1*L1-2*J1*M1-2*J1*N1-2*J1*O1-2*J1*P1-2*J1*Q1-2*J1*R1-K1*K1-2*K1*L1-2*K1*M1-2*K1*N1-2*K1*O1-2*K1*P1-2*K1*Q1-2*K1*R1-L1*L1-2*L1*M1-2*L1*N1-2*L1*O1-2*L1*P1-2*L1*Q1-2*L1*R1-M1*M1-2*M1*N1-2*M1*O1-2*M1*P1-2*M1*Q1-2*M1*R1-N1*N1-2*N1*O1-2*N1*P1-2*N1*Q1-2*N1*R1-O1*O1-2*O1*P1-2*O1*Q1-2*O1*R1-P1*P1-2*P1*Q1-2*P1*R1-Q1*Q1-2*Q1*R1-R1*R1+2*C3-10000>=0,-I* -I-2*I*J-2*I*K-2*I*L-2*I*M-2*I*N-2*I*O-2*I*P-2*I*Q-2*I*R-2*I*S-2*I*T-2*I*U-2*I*V-2*I*W-2*I*X-2*I*Y-2*I*Z-2*I*A1-2*I*B1-2*I*C1-2*I*D1-2*I*E1-2*I*F1-2*I*G1-2*I*H1-2*I*I1-2*I*J1-2*I*K1-2*I*L1-2*I*M1-2*I*N1-2*I*O1-2*I*P1-2*I*Q1-2*I*R1-J*J-2*J*K-2*J*L-2*J*M-2*J*N-2*J*O-2*J*P-2*J*Q-2*J*R-2*J*S-2*J*T-2*J*U-2*J*V-2*J*W-2*J*X-2*J*Y-2*J*Z-2*J*A1-2*J*B1-2*J*C1-2*J*D1-2*J*E1-2*J*F1-2*J*G1-2*J*H1-2*J*I1-2*J*J1-2*J*K1-2*J*L1-2*J*M1-2*J*N1-2*J*O1-2*J*P1-2*J*Q1-2*J*R1-K*K-2*K*L-2*K*M-2*K*N-2*K*O-2*K*P-2*K*Q-2*K*R-2*K*S-2*K*T-2*K*U-2*K*V-2*K*W-2*K*X-2*K*Y-2*K*Z-2*K*A1-2*K*B1-2*K*C1-2*K*D1-2*K*E1-2*K*F1-2*K*G1-2*K*H1-2*K*I1-2*K*J1-2*K*K1-2*K*L1-2*K*M1-2*K*N1-2*K*O1-2*K*P1-2*K*Q1-2*K*R1-L*L-2*L*M-2*L*N-2*L*O-2*L*P-2*L*Q-2*L*R-2*L*S-2*L*T-2*L*U-2*L*V-2*L*W-2*L*X-2*L*Y-2*L*Z-2*L*A1-2*L*B1-2*L*C1-2*L*D1-2*L*E1-2*L*F1-2*L*G1-2*L*H1-2*L*I1-2*L*J1-2*L*K1-2*L*L1-2*L*M1-2*L*N1-2*L*O1-2*L*P1-2*L*Q1-2*L*R1-M*M-2*M*N-2*M*O-2*M*P-2*M*Q-2*M*R-2*M*S-2*M*T-2*M*U-2*M*V-2*M*W-2*M*X-2*M*Y-2*M*Z-2*M*A1-2*M*B1-2*M*C1-2*M*D1-2*M*E1-2*M*F1-2*M*G1-2*M*H1-2*M*I1-2*M*J1-2*M*K1-2*M*L1-2*M*M1-2*M*N1-2*M*O1-2*M*P1-2*M*Q1-2*M*R1-N*N-2*N*O-2*N*P-2*N*Q-2*N*R-2*N*S-2*N*T-2*N*U-2*N*V-2*N*W-2*N*X-2*N*Y-2*N*Z-2*N*A1-2*N*B1-2*N*C1-2*N*D1-2*N*E1-2*N*F1-2*N*G1-2*N*H1-2*N*I1-2*N*J1-2*N*K1-2*N*L1-2*N*M1-2*N*N1-2*N*O1-2*N*P1-2*N*Q1-2*N*R1-O*O-2*O*P-2*O*Q-2*O*R-2*O*S-2*O*T-2*O*U-2*O*V-2*O*W-2*O*X-2*O*Y-2*O*Z-2*O*A1-2*O*B1-2*O*C1-2*O*D1-2*O*E1-2*O*F1-2*O*G1-2*O*H1-2*O*I1-2*O*J1-2*O*K1-2*O*L1-2*O*M1-2*O*N1-2*O*O1-2*O*P1-2*O*Q1-2*O*R1-P*P-2*P*Q-2*P*R-2*P*S-2*P*T-2*P*U-2*P*V-2*P*W-2*P*X-2*P*Y-2*P*Z-2*P*A1-2*P*B1-2*P*C1-2*P*D1-2*P*E1-2*P*F1-2*P*G1-2*P*H1-2*P*I1-2*P*J1-2*P*K1-2*P*L1-2*P*M1-2*P*N1-2*P*O1-2*P*P1-2*P*Q1-2*P*R1-Q*Q-2*Q*R-2*Q*S-2*Q*T-2*Q*U-2*Q*V-2*Q*W-2*Q*X-2*Q*Y-2*Q*Z-2*Q*A1-2*Q*B1-2*Q*C1-2*Q*D1-2*Q*E1-2*Q*F1-2*Q*G1-2*Q*H1-2*Q*I1-2*Q*J1-2*Q*K1-2*Q*L1-2*Q*M1-2*Q*N1-2*Q*O1-2*Q*P1-2*Q*Q1-2*Q*R1-R*R-2*R*S-2*R*T-2*R*U-2*R*V-2*R*W-2*R*X-2*R*Y-2*R*Z-2*R*A1-2*R*B1-2*R*C1-2*R*D1-2*R*E1-2*R*F1-2*R*G1-2*R*H1-2*R*I1-2*R*J1-2*R*K1-2*R*L1-2*R*M1-2*R*N1-2*R*O1-2*R*P1-2*R*Q1-2*R*R1-S*S-2*S*T-2*S*U-2*S*V-2*S*W-2*S*X-2*S*Y-2*S*Z-2*S*A1-2*S*B1-2*S*C1-2*S*D1-2*S*E1-2*S*F1-2*S*G1-2*S*H1-2*S*I1-2*S*J1-2*S*K1-2*S*L1-2*S*M1-2*S*N1-2*S*O1-2*S*P1-2*S*Q1-2*S*R1-T*T-2*T*U-2*T*V-2*T*W-2*T*X-2*T*Y-2*T*Z-2*T*A1-2*T*B1-2*T*C1-2*T*D1-2*T*E1-2*T*F1-2*T*G1-2*T*H1-2*T*I1-2*T*J1-2*T*K1-2*T*L1-2*T*M1-2*T*N1-2*T*O1-2*T*P1-2*T*Q1-2*T*R1-U*U-2*U*V-2*U*W-2*U*X-2*U*Y-2*U*Z-2*U*A1-2*U*B1-2*U*C1-2*U*D1-2*U*E1-2*U*F1-2*U*G1-2*U*H1-2*U*I1-2*U*J1-2*U*K1-2*U*L1-2*U*M1-2*U*N1-2*U*O1-2*U*P1-2*U*Q1-2*U*R1-V*V-2*V*W-2*V*X-2*V*Y-2*V*Z-2*V*A1-2*V*B1-2*V*C1-2*V*D1-2*V*E1-2*V*F1-2*V*G1-2*V*H1-2*V*I1-2*V*J1-2*V*K1-2*V*L1-2*V*M1-2*V*N1-2*V*O1-2*V*P1-2*V*Q1-2*V*R1-W*W-2*W*X-2*W*Y-2*W*Z-2*W*A1-2*W*B1-2*W*C1-2*W*D1-2*W*E1-2*W*F1-2*W*G1-2*W*H1-2*W*I1-2*W*J1-2*W*K1-2*W*L1-2*W*M1-2*W*N1-2*W*O1-2*W*P1-2*W*Q1-2*W*R1-X*X-2*X*Y-2*X*Z-2*X*A1-2*X*B1-2*X*C1-2*X*D1-2*X*E1-2*X*F1-2*X*G1-2*X*H1-2*X*I1-2*X*J1-2*X*K1-2*X*L1-2*X*M1-2*X*N1-2*X*O1-2*X*P1-2*X*Q1-2*X*R1-Y*Y-2*Y*Z-2*Y*A1-2*Y*B1-2*Y*C1-2*Y*D1-2*Y*E1-2*Y*F1-2*Y*G1-2*Y*H1-2*Y*I1-2*Y*J1-2*Y*K1-2*Y*L1-2*Y*M1-2*Y*N1-2*Y*O1-2*Y*P1-2*Y*Q1-2*Y*R1-Z*Z-2*Z*A1-2*Z*B1-2*Z*C1-2*Z*D1-2*Z*E1-2*Z*F1-2*Z*G1-2*Z*H1-2*Z*I1-2*Z*J1-2*Z*K1-2*Z*L1-2*Z*M1-2*Z*N1-2*Z*O1-2*Z*P1-2*Z*Q1-2*Z*R1-A1*A1-2*A1*B1-2*A1*C1-2*A1*D1-2*A1*E1-2*A1*F1-2*A1*G1-2*A1*H1-2*A1*I1-2*A1*J1-2*A1*K1-2*A1*L1-2*A1*M1-2*A1*N1-2*A1*O1-2*A1*P1-2*A1*Q1-2*A1*R1-B1*B1-2*B1*C1-2*B1*D1-2*B1*E1-2*B1*F1-2*B1*G1-2*B1*H1-2*B1*I1-2*B1*J1-2*B1*K1-2*B1*L1-2*B1*M1-2*B1*N1-2*B1*O1-2*B1*P1-2*B1*Q1-2*B1*R1-C1*C1-2*C1*D1-2*C1*E1-2*C1*F1-2*C1*G1-2*C1*H1-2*C1*I1-2*C1*J1-2*C1*K1-2*C1*L1-2*C1*M1-2*C1*N1-2*C1*O1-2*C1*P1-2*C1*Q1-2*C1*R1-D1*D1-2*D1*E1-2*D1*F1-2*D1*G1-2*D1*H1-2*D1*I1-2*D1*J1-2*D1*K1-2*D1*L1-2*D1*M1-2*D1*N1-2*D1*O1-2*D1*P1-2*D1*Q1-2*D1*R1-E1*E1-2*E1*F1-2*E1*G1-2*E1*H1-2*E1*I1-2*E1*J1-2*E1*K1-2*E1*L1-2*E1*M1-2*E1*N1-2*E1*O1-2*E1*P1-2*E1*Q1-2*E1*R1-F1*F1-2*F1*G1-2*F1*H1-2*F1*I1-2*F1*J1-2*F1*K1-2*F1*L1-2*F1*M1-2*F1*N1-2*F1*O1-2*F1*P1-2*F1*Q1-2*F1*R1-G1*G1-2*G1*H1-2*G1*I1-2*G1*J1-2*G1*K1-2*G1*L1-2*G1*M1-2*G1*N1-2*G1*O1-2*G1*P1-2*G1*Q1-2*G1*R1-H1*H1-2*H1*I1-2*H1*J1-2*H1*K1-2*H1*L1-2*H1*M1-2*H1*N1-2*H1*O1-2*H1*P1-2*H1*Q1-2*H1*R1-I1*I1-2*I1*J1-2*I1*K1-2*I1*L1-2*I1*M1-2*I1*N1-2*I1*O1-2*I1*P1-2*I1*Q1-2*I1*R1-J1*J1-2*J1*K1-2*J1*L1-2*J1*M1-2*J1*N1-2*J1*O1-2*J1*P1-2*J1*Q1-2*J1*R1-K1*K1-2*K1*L1-2*K1*M1-2*K1*N1-2*K1*O1-2*K1*P1-2*K1*Q1-2*K1*R1-L1*L1-2*L1*M1-2*L1*N1-2*L1*O1-2*L1*P1-2*L1*Q1-2*L1*R1-M1*M1-2*M1*N1-2*M1*O1-2*M1*P1-2*M1*Q1-2*M1*R1-N1*N1-2*N1*O1-2*N1*P1-2*N1*Q1-2*N1*R1-O1*O1-2*O1*P1-2*O1*Q1-2*O1*R1-P1*P1-2*P1*Q1-2*P1*R1-Q1*Q1-2*Q1*R1-R1*R1+2*C3-10000+1=<2]
WARNING: Excluded non-linear constraints:[I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1+10000=0]
WARNING: Excluded non-linear constraints:[I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1+10000>=0+1,I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1-2*C3+10000>=0,I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1-2*C3+10000+1=<2]
WARNING: Excluded non-linear constraints:[I*I+2*I*J+2*I*K+2*I*L+2*I*M+2*I*N+2*I*O+2*I*P+2*I*Q+2*I*R+2*I*S+2*I*T+2*I*U+2*I*V+2*I*W+2*I*X+2*I*Y+2*I*Z+2*I*A1+2*I*B1+2*I*C1+2*I*D1+2*I*E1+2*I*F1+2*I*G1+2*I*H1+2*I*I1+2*I*J1+2*I*K1+2*I*L1+2*I*M1+2*I*N1+2*I*O1+2*I*P1+2*I*Q1+2*I*R1+J*J+2*J*K+2*J*L+2*J*M+2*J*N+2*J*O+2*J*P+2*J*Q+2*J*R+2*J*S+2*J*T+2*J*U+2*J*V+2*J*W+2*J*X+2*J*Y+2*J*Z+2*J*A1+2*J*B1+2*J*C1+2*J*D1+2*J*E1+2*J*F1+2*J*G1+2*J*H1+2*J*I1+2*J*J1+2*J*K1+2*J*L1+2*J*M1+2*J*N1+2*J*O1+2*J*P1+2*J*Q1+2*J*R1+K*K+2*K*L+2*K*M+2*K*N+2*K*O+2*K*P+2*K*Q+2*K*R+2*K*S+2*K*T+2*K*U+2*K*V+2*K*W+2*K*X+2*K*Y+2*K*Z+2*K*A1+2*K*B1+2*K*C1+2*K*D1+2*K*E1+2*K*F1+2*K*G1+2*K*H1+2*K*I1+2*K*J1+2*K*K1+2*K*L1+2*K*M1+2*K*N1+2*K*O1+2*K*P1+2*K*Q1+2*K*R1+L*L+2*L*M+2*L*N+2*L*O+2*L*P+2*L*Q+2*L*R+2*L*S+2*L*T+2*L*U+2*L*V+2*L*W+2*L*X+2*L*Y+2*L*Z+2*L*A1+2*L*B1+2*L*C1+2*L*D1+2*L*E1+2*L*F1+2*L*G1+2*L*H1+2*L*I1+2*L*J1+2*L*K1+2*L*L1+2*L*M1+2*L*N1+2*L*O1+2*L*P1+2*L*Q1+2*L*R1+M*M+2*M*N+2*M*O+2*M*P+2*M*Q+2*M*R+2*M*S+2*M*T+2*M*U+2*M*V+2*M*W+2*M*X+2*M*Y+2*M*Z+2*M*A1+2*M*B1+2*M*C1+2*M*D1+2*M*E1+2*M*F1+2*M*G1+2*M*H1+2*M*I1+2*M*J1+2*M*K1+2*M*L1+2*M*M1+2*M*N1+2*M*O1+2*M*P1+2*M*Q1+2*M*R1+N*N+2*N*O+2*N*P+2*N*Q+2*N*R+2*N*S+2*N*T+2*N*U+2*N*V+2*N*W+2*N*X+2*N*Y+2*N*Z+2*N*A1+2*N*B1+2*N*C1+2*N*D1+2*N*E1+2*N*F1+2*N*G1+2*N*H1+2*N*I1+2*N*J1+2*N*K1+2*N*L1+2*N*M1+2*N*N1+2*N*O1+2*N*P1+2*N*Q1+2*N*R1+O*O+2*O*P+2*O*Q+2*O*R+2*O*S+2*O*T+2*O*U+2*O*V+2*O*W+2*O*X+2*O*Y+2*O*Z+2*O*A1+2*O*B1+2*O*C1+2*O*D1+2*O*E1+2*O*F1+2*O*G1+2*O*H1+2*O*I1+2*O*J1+2*O*K1+2*O*L1+2*O*M1+2*O*N1+2*O*O1+2*O*P1+2*O*Q1+2*O*R1+P*P+2*P*Q+2*P*R+2*P*S+2*P*T+2*P*U+2*P*V+2*P*W+2*P*X+2*P*Y+2*P*Z+2*P*A1+2*P*B1+2*P*C1+2*P*D1+2*P*E1+2*P*F1+2*P*G1+2*P*H1+2*P*I1+2*P*J1+2*P*K1+2*P*L1+2*P*M1+2*P*N1+2*P*O1+2*P*P1+2*P*Q1+2*P*R1+Q*Q+2*Q*R+2*Q*S+2*Q*T+2*Q*U+2*Q*V+2*Q*W+2*Q*X+2*Q*Y+2*Q*Z+2*Q*A1+2*Q*B1+2*Q*C1+2*Q*D1+2*Q*E1+2*Q*F1+2*Q*G1+2*Q*H1+2*Q*I1+2*Q*J1+2*Q*K1+2*Q*L1+2*Q*M1+2*Q*N1+2*Q*O1+2*Q*P1+2*Q*Q1+2*Q*R1+R*R+2*R*S+2*R*T+2*R*U+2*R*V+2*R*W+2*R*X+2*R*Y+2*R*Z+2*R*A1+2*R*B1+2*R*C1+2*R*D1+2*R*E1+2*R*F1+2*R*G1+2*R*H1+2*R*I1+2*R*J1+2*R*K1+2*R*L1+2*R*M1+2*R*N1+2*R*O1+2*R*P1+2*R*Q1+2*R*R1+S*S+2*S*T+2*S*U+2*S*V+2*S*W+2*S*X+2*S*Y+2*S*Z+2*S*A1+2*S*B1+2*S*C1+2*S*D1+2*S*E1+2*S*F1+2*S*G1+2*S*H1+2*S*I1+2*S*J1+2*S*K1+2*S*L1+2*S*M1+2*S*N1+2*S*O1+2*S*P1+2*S*Q1+2*S*R1+T*T+2*T*U+2*T*V+2*T*W+2*T*X+2*T*Y+2*T*Z+2*T*A1+2*T*B1+2*T*C1+2*T*D1+2*T*E1+2*T*F1+2*T*G1+2*T*H1+2*T*I1+2*T*J1+2*T*K1+2*T*L1+2*T*M1+2*T*N1+2*T*O1+2*T*P1+2*T*Q1+2*T*R1+U*U+2*U*V+2*U*W+2*U*X+2*U*Y+2*U*Z+2*U*A1+2*U*B1+2*U*C1+2*U*D1+2*U*E1+2*U*F1+2*U*G1+2*U*H1+2*U*I1+2*U*J1+2*U*K1+2*U*L1+2*U*M1+2*U*N1+2*U*O1+2*U*P1+2*U*Q1+2*U*R1+V*V+2*V*W+2*V*X+2*V*Y+2*V*Z+2*V*A1+2*V*B1+2*V*C1+2*V*D1+2*V*E1+2*V*F1+2*V*G1+2*V*H1+2*V*I1+2*V*J1+2*V*K1+2*V*L1+2*V*M1+2*V*N1+2*V*O1+2*V*P1+2*V*Q1+2*V*R1+W*W+2*W*X+2*W*Y+2*W*Z+2*W*A1+2*W*B1+2*W*C1+2*W*D1+2*W*E1+2*W*F1+2*W*G1+2*W*H1+2*W*I1+2*W*J1+2*W*K1+2*W*L1+2*W*M1+2*W*N1+2*W*O1+2*W*P1+2*W*Q1+2*W*R1+X*X+2*X*Y+2*X*Z+2*X*A1+2*X*B1+2*X*C1+2*X*D1+2*X*E1+2*X*F1+2*X*G1+2*X*H1+2*X*I1+2*X*J1+2*X*K1+2*X*L1+2*X*M1+2*X*N1+2*X*O1+2*X*P1+2*X*Q1+2*X*R1+Y*Y+2*Y*Z+2*Y*A1+2*Y*B1+2*Y*C1+2*Y*D1+2*Y*E1+2*Y*F1+2*Y*G1+2*Y*H1+2*Y*I1+2*Y*J1+2*Y*K1+2*Y*L1+2*Y*M1+2*Y*N1+2*Y*O1+2*Y*P1+2*Y*Q1+2*Y*R1+Z*Z+2*Z*A1+2*Z*B1+2*Z*C1+2*Z*D1+2*Z*E1+2*Z*F1+2*Z*G1+2*Z*H1+2*Z*I1+2*Z*J1+2*Z*K1+2*Z*L1+2*Z*M1+2*Z*N1+2*Z*O1+2*Z*P1+2*Z*Q1+2*Z*R1+A1*A1+2*A1*B1+2*A1*C1+2*A1*D1+2*A1*E1+2*A1*F1+2*A1*G1+2*A1*H1+2*A1*I1+2*A1*J1+2*A1*K1+2*A1*L1+2*A1*M1+2*A1*N1+2*A1*O1+2*A1*P1+2*A1*Q1+2*A1*R1+B1*B1+2*B1*C1+2*B1*D1+2*B1*E1+2*B1*F1+2*B1*G1+2*B1*H1+2*B1*I1+2*B1*J1+2*B1*K1+2*B1*L1+2*B1*M1+2*B1*N1+2*B1*O1+2*B1*P1+2*B1*Q1+2*B1*R1+C1*C1+2*C1*D1+2*C1*E1+2*C1*F1+2*C1*G1+2*C1*H1+2*C1*I1+2*C1*J1+2*C1*K1+2*C1*L1+2*C1*M1+2*C1*N1+2*C1*O1+2*C1*P1+2*C1*Q1+2*C1*R1+D1*D1+2*D1*E1+2*D1*F1+2*D1*G1+2*D1*H1+2*D1*I1+2*D1*J1+2*D1*K1+2*D1*L1+2*D1*M1+2*D1*N1+2*D1*O1+2*D1*P1+2*D1*Q1+2*D1*R1+E1*E1+2*E1*F1+2*E1*G1+2*E1*H1+2*E1*I1+2*E1*J1+2*E1*K1+2*E1*L1+2*E1*M1+2*E1*N1+2*E1*O1+2*E1*P1+2*E1*Q1+2*E1*R1+F1*F1+2*F1*G1+2*F1*H1+2*F1*I1+2*F1*J1+2*F1*K1+2*F1*L1+2*F1*M1+2*F1*N1+2*F1*O1+2*F1*P1+2*F1*Q1+2*F1*R1+G1*G1+2*G1*H1+2*G1*I1+2*G1*J1+2*G1*K1+2*G1*L1+2*G1*M1+2*G1*N1+2*G1*O1+2*G1*P1+2*G1*Q1+2*G1*R1+H1*H1+2*H1*I1+2*H1*J1+2*H1*K1+2*H1*L1+2*H1*M1+2*H1*N1+2*H1*O1+2*H1*P1+2*H1*Q1+2*H1*R1+I1*I1+2*I1*J1+2*I1*K1+2*I1*L1+2*I1*M1+2*I1*N1+2*I1*O1+2*I1*P1+2*I1*Q1+2*I1*R1+J1*J1+2*J1*K1+2*J1*L1+2*J1*M1+2*J1*N1+2*J1*O1+2*J1*P1+2*J1*Q1+2*J1*R1+K1*K1+2*K1*L1+2*K1*M1+2*K1*N1+2*K1*O1+2*K1*P1+2*K1*Q1+2*K1*R1+L1*L1+2*L1*M1+2*L1*N1+2*L1*O1+2*L1*P1+2*L1*Q1+2*L1*R1+M1*M1+2*M1*N1+2*M1*O1+2*M1*P1+2*M1*Q1+2*M1*R1+N1*N1+2*N1*O1+2*N1*P1+2*N1*Q1+2*N1*R1+O1*O1+2*O1*P1+2*O1*Q1+2*O1*R1+P1*P1+2*P1*Q1+2*P1*R1+Q1*Q1+2*Q1*R1+R1*R1+10000+1=<0,-I* -I-2*I*J-2*I*K-2*I*L-2*I*M-2*I*N-2*I*O-2*I*P-2*I*Q-2*I*R-2*I*S-2*I*T-2*I*U-2*I*V-2*I*W-2*I*X-2*I*Y-2*I*Z-2*I*A1-2*I*B1-2*I*C1-2*I*D1-2*I*E1-2*I*F1-2*I*G1-2*I*H1-2*I*I1-2*I*J1-2*I*K1-2*I*L1-2*I*M1-2*I*N1-2*I*O1-2*I*P1-2*I*Q1-2*I*R1-J*J-2*J*K-2*J*L-2*J*M-2*J*N-2*J*O-2*J*P-2*J*Q-2*J*R-2*J*S-2*J*T-2*J*U-2*J*V-2*J*W-2*J*X-2*J*Y-2*J*Z-2*J*A1-2*J*B1-2*J*C1-2*J*D1-2*J*E1-2*J*F1-2*J*G1-2*J*H1-2*J*I1-2*J*J1-2*J*K1-2*J*L1-2*J*M1-2*J*N1-2*J*O1-2*J*P1-2*J*Q1-2*J*R1-K*K-2*K*L-2*K*M-2*K*N-2*K*O-2*K*P-2*K*Q-2*K*R-2*K*S-2*K*T-2*K*U-2*K*V-2*K*W-2*K*X-2*K*Y-2*K*Z-2*K*A1-2*K*B1-2*K*C1-2*K*D1-2*K*E1-2*K*F1-2*K*G1-2*K*H1-2*K*I1-2*K*J1-2*K*K1-2*K*L1-2*K*M1-2*K*N1-2*K*O1-2*K*P1-2*K*Q1-2*K*R1-L*L-2*L*M-2*L*N-2*L*O-2*L*P-2*L*Q-2*L*R-2*L*S-2*L*T-2*L*U-2*L*V-2*L*W-2*L*X-2*L*Y-2*L*Z-2*L*A1-2*L*B1-2*L*C1-2*L*D1-2*L*E1-2*L*F1-2*L*G1-2*L*H1-2*L*I1-2*L*J1-2*L*K1-2*L*L1-2*L*M1-2*L*N1-2*L*O1-2*L*P1-2*L*Q1-2*L*R1-M*M-2*M*N-2*M*O-2*M*P-2*M*Q-2*M*R-2*M*S-2*M*T-2*M*U-2*M*V-2*M*W-2*M*X-2*M*Y-2*M*Z-2*M*A1-2*M*B1-2*M*C1-2*M*D1-2*M*E1-2*M*F1-2*M*G1-2*M*H1-2*M*I1-2*M*J1-2*M*K1-2*M*L1-2*M*M1-2*M*N1-2*M*O1-2*M*P1-2*M*Q1-2*M*R1-N*N-2*N*O-2*N*P-2*N*Q-2*N*R-2*N*S-2*N*T-2*N*U-2*N*V-2*N*W-2*N*X-2*N*Y-2*N*Z-2*N*A1-2*N*B1-2*N*C1-2*N*D1-2*N*E1-2*N*F1-2*N*G1-2*N*H1-2*N*I1-2*N*J1-2*N*K1-2*N*L1-2*N*M1-2*N*N1-2*N*O1-2*N*P1-2*N*Q1-2*N*R1-O*O-2*O*P-2*O*Q-2*O*R-2*O*S-2*O*T-2*O*U-2*O*V-2*O*W-2*O*X-2*O*Y-2*O*Z-2*O*A1-2*O*B1-2*O*C1-2*O*D1-2*O*E1-2*O*F1-2*O*G1-2*O*H1-2*O*I1-2*O*J1-2*O*K1-2*O*L1-2*O*M1-2*O*N1-2*O*O1-2*O*P1-2*O*Q1-2*O*R1-P*P-2*P*Q-2*P*R-2*P*S-2*P*T-2*P*U-2*P*V-2*P*W-2*P*X-2*P*Y-2*P*Z-2*P*A1-2*P*B1-2*P*C1-2*P*D1-2*P*E1-2*P*F1-2*P*G1-2*P*H1-2*P*I1-2*P*J1-2*P*K1-2*P*L1-2*P*M1-2*P*N1-2*P*O1-2*P*P1-2*P*Q1-2*P*R1-Q*Q-2*Q*R-2*Q*S-2*Q*T-2*Q*U-2*Q*V-2*Q*W-2*Q*X-2*Q*Y-2*Q*Z-2*Q*A1-2*Q*B1-2*Q*C1-2*Q*D1-2*Q*E1-2*Q*F1-2*Q*G1-2*Q*H1-2*Q*I1-2*Q*J1-2*Q*K1-2*Q*L1-2*Q*M1-2*Q*N1-2*Q*O1-2*Q*P1-2*Q*Q1-2*Q*R1-R*R-2*R*S-2*R*T-2*R*U-2*R*V-2*R*W-2*R*X-2*R*Y-2*R*Z-2*R*A1-2*R*B1-2*R*C1-2*R*D1-2*R*E1-2*R*F1-2*R*G1-2*R*H1-2*R*I1-2*R*J1-2*R*K1-2*R*L1-2*R*M1-2*R*N1-2*R*O1-2*R*P1-2*R*Q1-2*R*R1-S*S-2*S*T-2*S*U-2*S*V-2*S*W-2*S*X-2*S*Y-2*S*Z-2*S*A1-2*S*B1-2*S*C1-2*S*D1-2*S*E1-2*S*F1-2*S*G1-2*S*H1-2*S*I1-2*S*J1-2*S*K1-2*S*L1-2*S*M1-2*S*N1-2*S*O1-2*S*P1-2*S*Q1-2*S*R1-T*T-2*T*U-2*T*V-2*T*W-2*T*X-2*T*Y-2*T*Z-2*T*A1-2*T*B1-2*T*C1-2*T*D1-2*T*E1-2*T*F1-2*T*G1-2*T*H1-2*T*I1-2*T*J1-2*T*K1-2*T*L1-2*T*M1-2*T*N1-2*T*O1-2*T*P1-2*T*Q1-2*T*R1-U*U-2*U*V-2*U*W-2*U*X-2*U*Y-2*U*Z-2*U*A1-2*U*B1-2*U*C1-2*U*D1-2*U*E1-2*U*F1-2*U*G1-2*U*H1-2*U*I1-2*U*J1-2*U*K1-2*U*L1-2*U*M1-2*U*N1-2*U*O1-2*U*P1-2*U*Q1-2*U*R1-V*V-2*V*W-2*V*X-2*V*Y-2*V*Z-2*V*A1-2*V*B1-2*V*C1-2*V*D1-2*V*E1-2*V*F1-2*V*G1-2*V*H1-2*V*I1-2*V*J1-2*V*K1-2*V*L1-2*V*M1-2*V*N1-2*V*O1-2*V*P1-2*V*Q1-2*V*R1-W*W-2*W*X-2*W*Y-2*W*Z-2*W*A1-2*W*B1-2*W*C1-2*W*D1-2*W*E1-2*W*F1-2*W*G1-2*W*H1-2*W*I1-2*W*J1-2*W*K1-2*W*L1-2*W*M1-2*W*N1-2*W*O1-2*W*P1-2*W*Q1-2*W*R1-X*X-2*X*Y-2*X*Z-2*X*A1-2*X*B1-2*X*C1-2*X*D1-2*X*E1-2*X*F1-2*X*G1-2*X*H1-2*X*I1-2*X*J1-2*X*K1-2*X*L1-2*X*M1-2*X*N1-2*X*O1-2*X*P1-2*X*Q1-2*X*R1-Y*Y-2*Y*Z-2*Y*A1-2*Y*B1-2*Y*C1-2*Y*D1-2*Y*E1-2*Y*F1-2*Y*G1-2*Y*H1-2*Y*I1-2*Y*J1-2*Y*K1-2*Y*L1-2*Y*M1-2*Y*N1-2*Y*O1-2*Y*P1-2*Y*Q1-2*Y*R1-Z*Z-2*Z*A1-2*Z*B1-2*Z*C1-2*Z*D1-2*Z*E1-2*Z*F1-2*Z*G1-2*Z*H1-2*Z*I1-2*Z*J1-2*Z*K1-2*Z*L1-2*Z*M1-2*Z*N1-2*Z*O1-2*Z*P1-2*Z*Q1-2*Z*R1-A1*A1-2*A1*B1-2*A1*C1-2*A1*D1-2*A1*E1-2*A1*F1-2*A1*G1-2*A1*H1-2*A1*I1-2*A1*J1-2*A1*K1-2*A1*L1-2*A1*M1-2*A1*N1-2*A1*O1-2*A1*P1-2*A1*Q1-2*A1*R1-B1*B1-2*B1*C1-2*B1*D1-2*B1*E1-2*B1*F1-2*B1*G1-2*B1*H1-2*B1*I1-2*B1*J1-2*B1*K1-2*B1*L1-2*B1*M1-2*B1*N1-2*B1*O1-2*B1*P1-2*B1*Q1-2*B1*R1-C1*C1-2*C1*D1-2*C1*E1-2*C1*F1-2*C1*G1-2*C1*H1-2*C1*I1-2*C1*J1-2*C1*K1-2*C1*L1-2*C1*M1-2*C1*N1-2*C1*O1-2*C1*P1-2*C1*Q1-2*C1*R1-D1*D1-2*D1*E1-2*D1*F1-2*D1*G1-2*D1*H1-2*D1*I1-2*D1*J1-2*D1*K1-2*D1*L1-2*D1*M1-2*D1*N1-2*D1*O1-2*D1*P1-2*D1*Q1-2*D1*R1-E1*E1-2*E1*F1-2*E1*G1-2*E1*H1-2*E1*I1-2*E1*J1-2*E1*K1-2*E1*L1-2*E1*M1-2*E1*N1-2*E1*O1-2*E1*P1-2*E1*Q1-2*E1*R1-F1*F1-2*F1*G1-2*F1*H1-2*F1*I1-2*F1*J1-2*F1*K1-2*F1*L1-2*F1*M1-2*F1*N1-2*F1*O1-2*F1*P1-2*F1*Q1-2*F1*R1-G1*G1-2*G1*H1-2*G1*I1-2*G1*J1-2*G1*K1-2*G1*L1-2*G1*M1-2*G1*N1-2*G1*O1-2*G1*P1-2*G1*Q1-2*G1*R1-H1*H1-2*H1*I1-2*H1*J1-2*H1*K1-2*H1*L1-2*H1*M1-2*H1*N1-2*H1*O1-2*H1*P1-2*H1*Q1-2*H1*R1-I1*I1-2*I1*J1-2*I1*K1-2*I1*L1-2*I1*M1-2*I1*N1-2*I1*O1-2*I1*P1-2*I1*Q1-2*I1*R1-J1*J1-2*J1*K1-2*J1*L1-2*J1*M1-2*J1*N1-2*J1*O1-2*J1*P1-2*J1*Q1-2*J1*R1-K1*K1-2*K1*L1-2*K1*M1-2*K1*N1-2*K1*O1-2*K1*P1-2*K1*Q1-2*K1*R1-L1*L1-2*L1*M1-2*L1*N1-2*L1*O1-2*L1*P1-2*L1*Q1-2*L1*R1-M1*M1-2*M1*N1-2*M1*O1-2*M1*P1-2*M1*Q1-2*M1*R1-N1*N1-2*N1*O1-2*N1*P1-2*N1*Q1-2*N1*R1-O1*O1-2*O1*P1-2*O1*Q1-2*O1*R1-P1*P1-2*P1*Q1-2*P1*R1-Q1*Q1-2*Q1*R1-R1*R1+2*C3-10000>=0,-I* -I-2*I*J-2*I*K-2*I*L-2*I*M-2*I*N-2*I*O-2*I*P-2*I*Q-2*I*R-2*I*S-2*I*T-2*I*U-2*I*V-2*I*W-2*I*X-2*I*Y-2*I*Z-2*I*A1-2*I*B1-2*I*C1-2*I*D1-2*I*E1-2*I*F1-2*I*G1-2*I*H1-2*I*I1-2*I*J1-2*I*K1-2*I*L1-2*I*M1-2*I*N1-2*I*O1-2*I*P1-2*I*Q1-2*I*R1-J*J-2*J*K-2*J*L-2*J*M-2*J*N-2*J*O-2*J*P-2*J*Q-2*J*R-2*J*S-2*J*T-2*J*U-2*J*V-2*J*W-2*J*X-2*J*Y-2*J*Z-2*J*A1-2*J*B1-2*J*C1-2*J*D1-2*J*E1-2*J*F1-2*J*G1-2*J*H1-2*J*I1-2*J*J1-2*J*K1-2*J*L1-2*J*M1-2*J*N1-2*J*O1-2*J*P1-2*J*Q1-2*J*R1-K*K-2*K*L-2*K*M-2*K*N-2*K*O-2*K*P-2*K*Q-2*K*R-2*K*S-2*K*T-2*K*U-2*K*V-2*K*W-2*K*X-2*K*Y-2*K*Z-2*K*A1-2*K*B1-2*K*C1-2*K*D1-2*K*E1-2*K*F1-2*K*G1-2*K*H1-2*K*I1-2*K*J1-2*K*K1-2*K*L1-2*K*M1-2*K*N1-2*K*O1-2*K*P1-2*K*Q1-2*K*R1-L*L-2*L*M-2*L*N-2*L*O-2*L*P-2*L*Q-2*L*R-2*L*S-2*L*T-2*L*U-2*L*V-2*L*W-2*L*X-2*L*Y-2*L*Z-2*L*A1-2*L*B1-2*L*C1-2*L*D1-2*L*E1-2*L*F1-2*L*G1-2*L*H1-2*L*I1-2*L*J1-2*L*K1-2*L*L1-2*L*M1-2*L*N1-2*L*O1-2*L*P1-2*L*Q1-2*L*R1-M*M-2*M*N-2*M*O-2*M*P-2*M*Q-2*M*R-2*M*S-2*M*T-2*M*U-2*M*V-2*M*W-2*M*X-2*M*Y-2*M*Z-2*M*A1-2*M*B1-2*M*C1-2*M*D1-2*M*E1-2*M*F1-2*M*G1-2*M*H1-2*M*I1-2*M*J1-2*M*K1-2*M*L1-2*M*M1-2*M*N1-2*M*O1-2*M*P1-2*M*Q1-2*M*R1-N*N-2*N*O-2*N*P-2*N*Q-2*N*R-2*N*S-2*N*T-2*N*U-2*N*V-2*N*W-2*N*X-2*N*Y-2*N*Z-2*N*A1-2*N*B1-2*N*C1-2*N*D1-2*N*E1-2*N*F1-2*N*G1-2*N*H1-2*N*I1-2*N*J1-2*N*K1-2*N*L1-2*N*M1-2*N*N1-2*N*O1-2*N*P1-2*N*Q1-2*N*R1-O*O-2*O*P-2*O*Q-2*O*R-2*O*S-2*O*T-2*O*U-2*O*V-2*O*W-2*O*X-2*O*Y-2*O*Z-2*O*A1-2*O*B1-2*O*C1-2*O*D1-2*O*E1-2*O*F1-2*O*G1-2*O*H1-2*O*I1-2*O*J1-2*O*K1-2*O*L1-2*O*M1-2*O*N1-2*O*O1-2*O*P1-2*O*Q1-2*O*R1-P*P-2*P*Q-2*P*R-2*P*S-2*P*T-2*P*U-2*P*V-2*P*W-2*P*X-2*P*Y-2*P*Z-2*P*A1-2*P*B1-2*P*C1-2*P*D1-2*P*E1-2*P*F1-2*P*G1-2*P*H1-2*P*I1-2*P*J1-2*P*K1-2*P*L1-2*P*M1-2*P*N1-2*P*O1-2*P*P1-2*P*Q1-2*P*R1-Q*Q-2*Q*R-2*Q*S-2*Q*T-2*Q*U-2*Q*V-2*Q*W-2*Q*X-2*Q*Y-2*Q*Z-2*Q*A1-2*Q*B1-2*Q*C1-2*Q*D1-2*Q*E1-2*Q*F1-2*Q*G1-2*Q*H1-2*Q*I1-2*Q*J1-2*Q*K1-2*Q*L1-2*Q*M1-2*Q*N1-2*Q*O1-2*Q*P1-2*Q*Q1-2*Q*R1-R*R-2*R*S-2*R*T-2*R*U-2*R*V-2*R*W-2*R*X-2*R*Y-2*R*Z-2*R*A1-2*R*B1-2*R*C1-2*R*D1-2*R*E1-2*R*F1-2*R*G1-2*R*H1-2*R*I1-2*R*J1-2*R*K1-2*R*L1-2*R*M1-2*R*N1-2*R*O1-2*R*P1-2*R*Q1-2*R*R1-S*S-2*S*T-2*S*U-2*S*V-2*S*W-2*S*X-2*S*Y-2*S*Z-2*S*A1-2*S*B1-2*S*C1-2*S*D1-2*S*E1-2*S*F1-2*S*G1-2*S*H1-2*S*I1-2*S*J1-2*S*K1-2*S*L1-2*S*M1-2*S*N1-2*S*O1-2*S*P1-2*S*Q1-2*S*R1-T*T-2*T*U-2*T*V-2*T*W-2*T*X-2*T*Y-2*T*Z-2*T*A1-2*T*B1-2*T*C1-2*T*D1-2*T*E1-2*T*F1-2*T*G1-2*T*H1-2*T*I1-2*T*J1-2*T*K1-2*T*L1-2*T*M1-2*T*N1-2*T*O1-2*T*P1-2*T*Q1-2*T*R1-U*U-2*U*V-2*U*W-2*U*X-2*U*Y-2*U*Z-2*U*A1-2*U*B1-2*U*C1-2*U*D1-2*U*E1-2*U*F1-2*U*G1-2*U*H1-2*U*I1-2*U*J1-2*U*K1-2*U*L1-2*U*M1-2*U*N1-2*U*O1-2*U*P1-2*U*Q1-2*U*R1-V*V-2*V*W-2*V*X-2*V*Y-2*V*Z-2*V*A1-2*V*B1-2*V*C1-2*V*D1-2*V*E1-2*V*F1-2*V*G1-2*V*H1-2*V*I1-2*V*J1-2*V*K1-2*V*L1-2*V*M1-2*V*N1-2*V*O1-2*V*P1-2*V*Q1-2*V*R1-W*W-2*W*X-2*W*Y-2*W*Z-2*W*A1-2*W*B1-2*W*C1-2*W*D1-2*W*E1-2*W*F1-2*W*G1-2*W*H1-2*W*I1-2*W*J1-2*W*K1-2*W*L1-2*W*M1-2*W*N1-2*W*O1-2*W*P1-2*W*Q1-2*W*R1-X*X-2*X*Y-2*X*Z-2*X*A1-2*X*B1-2*X*C1-2*X*D1-2*X*E1-2*X*F1-2*X*G1-2*X*H1-2*X*I1-2*X*J1-2*X*K1-2*X*L1-2*X*M1-2*X*N1-2*X*O1-2*X*P1-2*X*Q1-2*X*R1-Y*Y-2*Y*Z-2*Y*A1-2*Y*B1-2*Y*C1-2*Y*D1-2*Y*E1-2*Y*F1-2*Y*G1-2*Y*H1-2*Y*I1-2*Y*J1-2*Y*K1-2*Y*L1-2*Y*M1-2*Y*N1-2*Y*O1-2*Y*P1-2*Y*Q1-2*Y*R1-Z*Z-2*Z*A1-2*Z*B1-2*Z*C1-2*Z*D1-2*Z*E1-2*Z*F1-2*Z*G1-2*Z*H1-2*Z*I1-2*Z*J1-2*Z*K1-2*Z*L1-2*Z*M1-2*Z*N1-2*Z*O1-2*Z*P1-2*Z*Q1-2*Z*R1-A1*A1-2*A1*B1-2*A1*C1-2*A1*D1-2*A1*E1-2*A1*F1-2*A1*G1-2*A1*H1-2*A1*I1-2*A1*J1-2*A1*K1-2*A1*L1-2*A1*M1-2*A1*N1-2*A1*O1-2*A1*P1-2*A1*Q1-2*A1*R1-B1*B1-2*B1*C1-2*B1*D1-2*B1*E1-2*B1*F1-2*B1*G1-2*B1*H1-2*B1*I1-2*B1*J1-2*B1*K1-2*B1*L1-2*B1*M1-2*B1*N1-2*B1*O1-2*B1*P1-2*B1*Q1-2*B1*R1-C1*C1-2*C1*D1-2*C1*E1-2*C1*F1-2*C1*G1-2*C1*H1-2*C1*I1-2*C1*J1-2*C1*K1-2*C1*L1-2*C1*M1-2*C1*N1-2*C1*O1-2*C1*P1-2*C1*Q1-2*C1*R1-D1*D1-2*D1*E1-2*D1*F1-2*D1*G1-2*D1*H1-2*D1*I1-2*D1*J1-2*D1*K1-2*D1*L1-2*D1*M1-2*D1*N1-2*D1*O1-2*D1*P1-2*D1*Q1-2*D1*R1-E1*E1-2*E1*F1-2*E1*G1-2*E1*H1-2*E1*I1-2*E1*J1-2*E1*K1-2*E1*L1-2*E1*M1-2*E1*N1-2*E1*O1-2*E1*P1-2*E1*Q1-2*E1*R1-F1*F1-2*F1*G1-2*F1*H1-2*F1*I1-2*F1*J1-2*F1*K1-2*F1*L1-2*F1*M1-2*F1*N1-2*F1*O1-2*F1*P1-2*F1*Q1-2*F1*R1-G1*G1-2*G1*H1-2*G1*I1-2*G1*J1-2*G1*K1-2*G1*L1-2*G1*M1-2*G1*N1-2*G1*O1-2*G1*P1-2*G1*Q1-2*G1*R1-H1*H1-2*H1*I1-2*H1*J1-2*H1*K1-2*H1*L1-2*H1*M1-2*H1*N1-2*H1*O1-2*H1*P1-2*H1*Q1-2*H1*R1-I1*I1-2*I1*J1-2*I1*K1-2*I1*L1-2*I1*M1-2*I1*N1-2*I1*O1-2*I1*P1-2*I1*Q1-2*I1*R1-J1*J1-2*J1*K1-2*J1*L1-2*J1*M1-2*J1*N1-2*J1*O1-2*J1*P1-2*J1*Q1-2*J1*R1-K1*K1-2*K1*L1-2*K1*M1-2*K1*N1-2*K1*O1-2*K1*P1-2*K1*Q1-2*K1*R1-L1*L1-2*L1*M1-2*L1*N1-2*L1*O1-2*L1*P1-2*L1*Q1-2*L1*R1-M1*M1-2*M1*N1-2*M1*O1-2*M1*P1-2*M1*Q1-2*M1*R1-N1*N1-2*N1*O1-2*N1*P1-2*N1*Q1-2*N1*R1-O1*O1-2*O1*P1-2*O1*Q1-2*O1*R1-P1*P1-2*P1*Q1-2*P1*R1-Q1*Q1-2*Q1*R1-R1*R1+2*C3-10000+1=<2]
WARNING: Excluded non-linear constraints:[51*G-E*N>=0,51*G-E*N+1=<E]
WARNING: Excluded non-linear constraints:[51*G-E*N>=0,51*G-E*N+1=< -E]
WARNING: Excluded non-linear constraints:[-51*G+E*N>=0,-51*G+E*N+1=<E]
WARNING: Excluded non-linear constraints:[-51*G+E*N>=0,-51*G+E*N+1=< -E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=<E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=<E,51*G-E*O>=0,51*G-E*O+1=<E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=<E,51*G-E*O>=0,51*G-E*O+1=< -E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=<E,-51*G+E*O>=0,-51*G+E*O+1=<E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=<E,-51*G+E*O>=0,-51*G+E*O+1=< -E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=< -E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=< -E,51*G-E*O>=0,51*G-E*O+1=<E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=< -E,51*G-E*O>=0,51*G-E*O+1=< -E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=< -E,-51*G+E*O>=0,-51*G+E*O+1=<E]
WARNING: Excluded non-linear constraints:[51*F-E*N>=0,51*F-E*N+1=< -E,-51*G+E*O>=0,-51*G+E*O+1=< -E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=<E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=<E,51*G-E*O>=0,51*G-E*O+1=<E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=<E,51*G-E*O>=0,51*G-E*O+1=< -E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=<E,-51*G+E*O>=0,-51*G+E*O+1=<E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=<E,-51*G+E*O>=0,-51*G+E*O+1=< -E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=< -E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=< -E,51*G-E*O>=0,51*G-E*O+1=<E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=< -E,51*G-E*O>=0,51*G-E*O+1=< -E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=< -E,-51*G+E*O>=0,-51*G+E*O+1=<E]
WARNING: Excluded non-linear constraints:[-51*F+E*N>=0,-51*F+E*N+1=< -E,-51*G+E*O>=0,-51*G+E*O+1=< -E]
WARNING: Excluded non-linear constraints:[D=4*A*B]
WARNING: Excluded non-linear constraints:[D=4*A*B]
WARNING: Excluded non-linear constraints:[D=4*A*B]
Warning: Ignored call to eval_susan_corners_stop/1 in equation eval_susan_corners_1142/1 
Warning: Ignored call to eval_susan_corners_stop/1 in equation eval_susan_corners_1151/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_susan_corners_664/11,eval_susan_corners_665/11,eval_susan_corners_666/12,eval_susan_corners_711/11,eval_susan_corners_712/11,eval_susan_corners_713/12,eval_susan_corners_bb27_in/12,eval_susan_corners_bb2_in/8,eval_susan_corners_bb30_in/12,eval_susan_corners_bb33_in/12,eval_susan_corners_bb37_in/12,eval_susan_corners_bb40_in/12,eval_susan_corners_bb43_in/12,eval_susan_corners_bb44_in/13,eval_susan_corners_bb46_in/11]
1. recursive  : [eval_susan_corners_bb1_in/7,loop_cont_eval_susan_corners_bb2_in/8]
2. recursive  : [eval_susan_corners_bb101_in/8,eval_susan_corners_bb49_in/8]
3. recursive  : [eval_susan_corners_bb48_in/4,loop_cont_eval_susan_corners_bb49_in/5]
4. non_recursive  : [eval_susan_corners_1142/1]
5. non_recursive  : [eval_susan_corners_1141/1]
6. non_recursive  : [eval_susan_corners_1140/1]
7. non_recursive  : [eval_susan_corners_1151/1]
8. non_recursive  : [eval_susan_corners_1150/1]
9. non_recursive  : [eval_susan_corners_1149/1]
10. non_recursive  : [loop_cont_eval_susan_corners_bb48_in/2]
11. non_recursive  : [loop_cont_eval_susan_corners_bb1_in/5]
12. non_recursive  : [eval_susan_corners_12/3]
13. non_recursive  : [eval_susan_corners_11/4]
14. non_recursive  : [eval_susan_corners_8/3]
15. non_recursive  : [eval_susan_corners_7/4]
16. non_recursive  : [eval_susan_corners_4/3]
17. non_recursive  : [eval_susan_corners_3/4]
18. non_recursive  : [eval_susan_corners_bb0_in/3]
19. non_recursive  : [eval_susan_corners_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_susan_corners_bb2_in/8
1. SCC is partially evaluated into eval_susan_corners_bb1_in/7
2. SCC is partially evaluated into eval_susan_corners_bb49_in/8
3. SCC is partially evaluated into eval_susan_corners_bb48_in/4
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_susan_corners_bb48_in/2
11. SCC is partially evaluated into loop_cont_eval_susan_corners_bb1_in/5
12. SCC is partially evaluated into eval_susan_corners_12/3
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_susan_corners_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_susan_corners_bb2_in/8 
* CE 8 is refined into CE [17] 
* CE 7 is refined into CE [18] 


#### Refined cost equations eval_susan_corners_bb2_in/8 
* CE 17: eval_susan_corners_bb2_in(A,B,C,D,E,A,B,F) = 0
     [B>=C+6,D+5>=A,D>=5,C+1=F,E=4] 
* CE 18: eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) = 1+ eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,F,G,C,D,E)
     [V_x_size>=V_j_0+6,V_y_size>=V_i_0+6,V_j_0>=5,V_j_0+1=F,G=4,B=4] 

### Cost equations --> "Loop" of eval_susan_corners_bb2_in/8 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_susan_corners_bb2_in/8 
* Loop 16: eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E)->  eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0',B',C,D,E)
                  [V_x_size>=V_j_0+6,V_y_size>=V_i_0+6,V_j_0>=5,V_j_0+1=V_j_0',B'=4,B=4] 
* Loop 17: eval_susan_corners_bb2_in(A,B,C,D,E,A,B,F) [B>=C+6,D+5>=A,D>=5,C+1=F,E=4] 

### Ranking functions of CR eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) 
* RF of phase [16]: [V_x_size-V_j_0-5]

#### Partial ranking functions of CR eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_x_size-V_j_0-5


### Resulting Chains:eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) 
* [[16],17]
* [17]


### Merging Chains  eval_susan_corners_bb2_in/8 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[16]]] --> 2 


### Specialization of cost equations eval_susan_corners_bb1_in/7 
* CE 5 is refined into CE [19] 
* CE 4 is refined into CE [20,21] 


#### Refined cost equations eval_susan_corners_bb1_in/7 
* CE 19: eval_susan_corners_bb1_in(A,B,C,D,A,B,E) = 0
     [C+5>=B,E=5,D=3] 
* CE 20: eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) = 2+ eval_susan_corners_bb2_in(V_x_size,V_y_size,F,G,H,V_x_size,V_y_size,I):1+ eval_susan_corners_bb1_in(V_x_size,V_y_size,I,B,C,D,E)
     [V_y_size>=I+5,10>=V_x_size,I=F+1,I=V_i_0+1,H=4,G=5] 
* CE 21: eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) = 2+ eval_susan_corners_bb2_in(V_x_size,V_y_size,F,G,H,V_x_size,V_y_size,I):2+ eval_susan_corners_bb1_in(V_x_size,V_y_size,I,B,C,D,E)
     [V_y_size>=I+5,V_x_size>=11,I=F+1,I=V_i_0+1,H=4,G=5] 

### Cost equations --> "Loop" of eval_susan_corners_bb1_in/7 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [19] --> Loop 20 

#### Loops of eval_susan_corners_bb1_in/7 
* Loop 18: eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E)->  eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0',B,C,D,E)
                  [V_y_size>=V_i_0+6,V_x_size>=11,V_i_0+1=V_i_0'] 
* Loop 19: eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E)->  eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0',B,C,D,E)
                  [V_y_size>=V_i_0+6,10>=V_x_size,V_i_0+1=V_i_0'] 
* Loop 20: eval_susan_corners_bb1_in(A,B,C,D,A,B,E) [C+5>=B,E=5,D=3] 

### Ranking functions of CR eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) 
* RF of phase [18]: [V_y_size-V_i_0-5]
* RF of phase [19]: [V_y_size-V_i_0-5]

#### Partial ranking functions of CR eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_y_size-V_i_0-5
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V_y_size-V_i_0-5


### Resulting Chains:eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) 
* [[19],20]
* [[18],20]
* [20]


### Merging Chains  eval_susan_corners_bb1_in/7 into  External patterns of execution 
* [[20]] --> 1 
* [[20,[19]]] --> 2 
* [[20,[18]]] --> 3 


### Specialization of cost equations eval_susan_corners_bb49_in/8 
* CE 16 is refined into CE [22] 
* CE 15 is refined into CE [23] 
* CE 14 is refined into CE [24] 


#### Refined cost equations eval_susan_corners_bb49_in/8 
* CE 22: eval_susan_corners_bb49_in(A,B,C,D,E,A,B,F) = 0
     [B>=C+6,D+5>=A,D>=5,C+1=F,E=3] 
* CE 23: eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) = 0
     [V_x_size>=V_j_1+6,V_y_size>=V_i_1+6,V_j_1>=5,B=2] 
* CE 24: eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) = 1+ eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,F,B,C,D,E)
     [V_x_size>=V_j_1+6,V_y_size>=V_i_1+6,B>=2,V_j_1>=5,3>=B,V_j_1+1=F] 

### Cost equations --> "Loop" of eval_susan_corners_bb49_in/8 
* CEs [24] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [23] --> Loop 23 

#### Loops of eval_susan_corners_bb49_in/8 
* Loop 21: eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E)->  eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1',B,C,D,E)
                  [V_x_size>=V_j_1+6,V_y_size>=V_i_1+6,B>=2,V_j_1>=5,3>=B,V_j_1+1=V_j_1'] 
* Loop 22: eval_susan_corners_bb49_in(A,B,C,D,E,A,B,F) [B>=C+6,D+5>=A,D>=5,C+1=F,E=3] 
* Loop 23: eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) [V_x_size>=V_j_1+6,V_y_size>=V_i_1+6,V_j_1>=5,B=2] 

### Ranking functions of CR eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) 
* RF of phase [21]: [V_x_size-V_j_1-5]

#### Partial ranking functions of CR eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_x_size-V_j_1-5


### Resulting Chains:eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) 
* [[21],23]
* [[21],22]
* [23]
* [22]


### Merging Chains  eval_susan_corners_bb49_in/8 into  External patterns of execution 
* [[23],[23,[21]]] --> 1 
* [[22]] --> 2 
* [[22,[21]]] --> 3 


### Specialization of cost equations eval_susan_corners_bb48_in/4 
* CE 11 is refined into CE [25] 
* CE 10 is refined into CE [26] 
* CE 9 is refined into CE [27,28] 


#### Refined cost equations eval_susan_corners_bb48_in/4 
* CE 25: eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) = 0
     [V_i_1+5>=V_y_size,B=5] 
* CE 26: eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) = 1+ eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,C,D,E,F,G):1
     [V_y_size>=V_i_1+6,V_x_size>=11,D=2,C=5,B=2] 
* CE 27: eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) = 2+ eval_susan_corners_bb49_in(V_x_size,V_y_size,C,D,E,V_x_size,V_y_size,F):2+ eval_susan_corners_bb48_in(V_x_size,V_y_size,F,B)
     [V_y_size>=F+5,10>=V_x_size,F=C+1,F=V_i_1+1,E=3,D=5] 
* CE 28: eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) = 2+ eval_susan_corners_bb49_in(V_x_size,V_y_size,C,D,E,V_x_size,V_y_size,F):3+ eval_susan_corners_bb48_in(V_x_size,V_y_size,F,B)
     [V_y_size>=F+5,V_x_size>=11,F=C+1,F=V_i_1+1,E=3,D=5] 

### Cost equations --> "Loop" of eval_susan_corners_bb48_in/4 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [25] --> Loop 26 
* CEs [26] --> Loop 27 

#### Loops of eval_susan_corners_bb48_in/4 
* Loop 24: eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B)->  eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1',B)
                  [V_y_size>=V_i_1+6,V_x_size>=11,V_i_1+1=V_i_1'] 
* Loop 25: eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B)->  eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1',B)
                  [V_y_size>=V_i_1+6,10>=V_x_size,V_i_1+1=V_i_1'] 
* Loop 26: eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) [V_i_1+5>=V_y_size,B=5] 
* Loop 27: eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) [V_y_size>=V_i_1+6,V_x_size>=11,B=2] 

### Ranking functions of CR eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) 
* RF of phase [24]: [V_y_size-V_i_1-5]
* RF of phase [25]: [V_y_size-V_i_1-5]

#### Partial ranking functions of CR eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V_y_size-V_i_1-5
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V_y_size-V_i_1-5


### Resulting Chains:eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) 
* [[25],26]
* [[24],27]
* [[24],26]
* [27]
* [26]


### Merging Chains  eval_susan_corners_bb48_in/4 into  External patterns of execution 
* [[27],[27,[24]]] --> 1 
* [[26,[25]]] --> 2 
* [[26,[24]]] --> 3 
* [[26]] --> 4 


### Specialization of cost equations loop_cont_eval_susan_corners_bb48_in/2 
* CE 12 is refined into CE [29] 
* CE 13 is refined into CE [30] 


#### Refined cost equations loop_cont_eval_susan_corners_bb48_in/2 
* CE 29: loop_cont_eval_susan_corners_bb48_in(D,A) = 0
     [D=5] 
* CE 30: loop_cont_eval_susan_corners_bb48_in(D,A) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_susan_corners_bb48_in/2 
* CEs [29] --> Loop 28 
* CEs [30] --> Loop 29 

#### Loops of loop_cont_eval_susan_corners_bb48_in/2 
* Loop 28: loop_cont_eval_susan_corners_bb48_in(D,A) [D=5] 
* Loop 29: loop_cont_eval_susan_corners_bb48_in(D,A) [D=2] 

### Ranking functions of CR loop_cont_eval_susan_corners_bb48_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_susan_corners_bb48_in(D,A) 


### Resulting Chains:loop_cont_eval_susan_corners_bb48_in(D,A) 
* [29]
* [28]


### Merging Chains  loop_cont_eval_susan_corners_bb48_in/2 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations loop_cont_eval_susan_corners_bb1_in/5 
* CE 6 is refined into CE [31,32,33,34] 


#### Refined cost equations loop_cont_eval_susan_corners_bb1_in/5 
* CE 31: loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) = 1+ eval_susan_corners_bb48_in(A,B,C,I):1+ loop_cont_eval_susan_corners_bb48_in(J,D):1
     [B>=C+6,A>=11,J=2,I=2,H=3] 
* CE 32: loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) = 1+ eval_susan_corners_bb48_in(A,B,C,I):2+ loop_cont_eval_susan_corners_bb48_in(J,D):2
     [B>=C+6,10>=A,J=5,I=5,H=3] 
* CE 33: loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) = 1+ eval_susan_corners_bb48_in(A,B,C,I):3+ loop_cont_eval_susan_corners_bb48_in(J,D):2
     [B>=C+6,A>=11,J=5,I=5,H=3] 
* CE 34: loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) = 1+ eval_susan_corners_bb48_in(A,B,C,I):4+ loop_cont_eval_susan_corners_bb48_in(J,D):2
     [C+5>=B,J=5,I=5,H=3] 

### Cost equations --> "Loop" of loop_cont_eval_susan_corners_bb1_in/5 
* CEs [34] --> Loop 30 
* CEs [31,33] --> Loop 31 
* CEs [32] --> Loop 32 

#### Loops of loop_cont_eval_susan_corners_bb1_in/5 
* Loop 30: loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) [C+5>=B,H=3] 
* Loop 31: loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) [B>=C+6,A>=11,H=3] 
* Loop 32: loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) [B>=C+6,10>=A,H=3] 

### Ranking functions of CR loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) 


### Resulting Chains:loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D) 
* [32]
* [31]
* [30]


### Merging Chains  loop_cont_eval_susan_corners_bb1_in/5 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 
* [[30]] --> 3 


### Specialization of cost equations eval_susan_corners_12/3 
* CE 3 is refined into CE [35,36,37] 


#### Refined cost equations eval_susan_corners_12/3 
* CE 35: eval_susan_corners_12(V_x_size,V_y_size,B) = 1+ eval_susan_corners_bb1_in(V_x_size,V_y_size,C,D,V_x_size,V_y_size,E):1+ loop_cont_eval_susan_corners_bb1_in(F,V_x_size,V_y_size,G,B):3
     [10>=V_y_size,G=5,F=3,E=5,D=3,C=5] 
* CE 36: eval_susan_corners_12(V_x_size,V_y_size,B) = 1+ eval_susan_corners_bb1_in(V_x_size,V_y_size,C,D,V_x_size,V_y_size,E):2+ loop_cont_eval_susan_corners_bb1_in(F,V_x_size,V_y_size,G,B):1
     [V_y_size>=11,10>=V_x_size,G=5,F=3,E=5,D=3,C=5] 
* CE 37: eval_susan_corners_12(V_x_size,V_y_size,B) = 1+ eval_susan_corners_bb1_in(V_x_size,V_y_size,C,D,V_x_size,V_y_size,E):3+ loop_cont_eval_susan_corners_bb1_in(F,V_x_size,V_y_size,G,B):2
     [V_y_size>=11,V_x_size>=11,G=5,F=3,E=5,D=3,C=5] 

### Cost equations --> "Loop" of eval_susan_corners_12/3 
* CEs [37] --> Loop 33 
* CEs [35] --> Loop 34 
* CEs [36] --> Loop 35 

#### Loops of eval_susan_corners_12/3 
* Loop 33: eval_susan_corners_12(V_x_size,V_y_size,B) [V_y_size>=11,V_x_size>=11] 
* Loop 34: eval_susan_corners_12(V_x_size,V_y_size,B) [10>=V_y_size] 
* Loop 35: eval_susan_corners_12(V_x_size,V_y_size,B) [V_y_size>=11,10>=V_x_size] 

### Ranking functions of CR eval_susan_corners_12(V_x_size,V_y_size,B) 

#### Partial ranking functions of CR eval_susan_corners_12(V_x_size,V_y_size,B) 


### Resulting Chains:eval_susan_corners_12(V_x_size,V_y_size,B) 
* [35]
* [34]
* [33]


### Merging Chains  eval_susan_corners_12/3 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 
* [[33]] --> 3 


### Specialization of cost equations eval_susan_corners_start/4 
* CE 2 is refined into CE [38,39,40] 


#### Refined cost equations eval_susan_corners_start/4 
* CE 38: eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B) = 0+ eval_susan_corners_12(V_x_size,V_y_size,B):1
     [V_y_size>=11,10>=V_x_size] 
* CE 39: eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B) = 0+ eval_susan_corners_12(V_x_size,V_y_size,B):2
     [10>=V_y_size] 
* CE 40: eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B) = 0+ eval_susan_corners_12(V_x_size,V_y_size,B):3
     [V_y_size>=11,V_x_size>=11] 

### Cost equations --> "Loop" of eval_susan_corners_start/4 
* CEs [40] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [38] --> Loop 38 

#### Loops of eval_susan_corners_start/4 
* Loop 36: eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B) [V_y_size>=11,V_x_size>=11] 
* Loop 37: eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B) [10>=V_y_size] 
* Loop 38: eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B) [V_y_size>=11,10>=V_x_size] 

### Ranking functions of CR eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B) 

#### Partial ranking functions of CR eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B) 


### Resulting Chains:eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B) 
* [38]
* [37]
* [36]


### Merging Chains  eval_susan_corners_start/4 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 
* [[36]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) -> [eval_susan_corners_bb2_in(V_x_size',V_y_size',V_i_0',V_j_0',B',C',D',E')] 
1
#### Cost of phase [16]:eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E) -> [eval_susan_corners_bb2_in(V_x_size',V_y_size',V_i_0',V_j_0',B',C',D',E')] 
1*it(16)+0
  Such that:it(16) =< V_x_size-V_j_0
it(16) =< V_x_size-V_j_0-V_x_size'+V_j_0'

#### Cost of chains of eval_susan_corners_bb2_in(V_x_size,V_y_size,V_i_0,V_j_0,B,C,D,E):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_x_size-V_j_0

  with precondition: [B=4,V_x_size=C,V_y_size=D,V_i_0+1=E,V_j_0>=5,V_y_size>=V_i_0+6,V_x_size>=V_j_0+6] 

* Chain [17]: 0
  with precondition: [B=4,V_x_size=C,V_y_size=D,V_i_0+1=E,V_j_0>=5,V_j_0+5>=V_x_size,V_y_size>=V_i_0+6] 


#### Cost of loops [19] 

 * loop 19:eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) -> [eval_susan_corners_bb1_in(V_x_size',V_y_size',V_i_0',B',C',D',E')] 
2
#### Cost of phase [19]:eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) -> [eval_susan_corners_bb1_in(V_x_size',V_y_size',V_i_0',B',C',D',E')] 
2*it(19)+0
  Such that:it(19) =< V_y_size-V_i_0
it(19) =< V_y_size-V_i_0-V_y_size'+V_i_0'

#### Cost of loops [18] 

 * loop 18:eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) -> [eval_susan_corners_bb1_in(V_x_size',V_y_size',V_i_0',B',C',D',E')] 
1*s(2)+2
  Such that:s(2) =< V_x_size'

#### Cost of phase [18]:eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E) -> [eval_susan_corners_bb1_in(V_x_size',V_y_size',V_i_0',B',C',D',E')] 
2*it(18)+1*s(3)+0
  Such that:aux(1) =< V_x_size
it(18) =< V_y_size-V_i_0
it(18) =< V_y_size-V_i_0-V_y_size'+V_i_0'
s(3) =< it(18)*aux(1)

#### Cost of chains of eval_susan_corners_bb1_in(V_x_size,V_y_size,V_i_0,B,C,D,E):
* Chain [[19],20]: 2*it(19)+0
  Such that:it(19) =< -V_i_0+D

  with precondition: [B=3,E=5,V_x_size=C,V_y_size=D,10>=V_x_size,V_i_0>=5,V_y_size>=V_i_0+6] 

* Chain [[18],20]: 2*it(18)+1*s(3)+0
  Such that:it(18) =< -V_i_0+D
aux(1) =< C
s(3) =< it(18)*aux(1)

  with precondition: [B=3,E=5,V_x_size=C,V_y_size=D,V_x_size>=11,V_i_0>=5,V_y_size>=V_i_0+6] 

* Chain [20]: 0
  with precondition: [B=3,E=5,C=V_x_size,V_y_size=D,V_i_0>=5,V_i_0+5>=V_y_size] 


#### Cost of loops [21] 

 * loop 21:eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) -> [eval_susan_corners_bb49_in(V_x_size',V_y_size',V_i_1',V_j_1',B',C',D',E')] 
1
#### Cost of phase [21]:eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) -> [eval_susan_corners_bb49_in(V_x_size',V_y_size',V_i_1',V_j_1',B',C',D',E')] 
1*it(21)+0
  Such that:it(21) =< V_x_size-V_j_1
it(21) =< V_x_size-V_j_1-V_x_size'+V_j_1'

#### Cost of phase [21]:eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E) -> [eval_susan_corners_bb49_in(V_x_size',V_y_size',V_i_1',V_j_1',B',C',D',E')] 
1*it(21)+0
  Such that:it(21) =< V_x_size-V_j_1
it(21) =< V_x_size-V_j_1-V_x_size'+V_j_1'

#### Cost of chains of eval_susan_corners_bb49_in(V_x_size,V_y_size,V_i_1,V_j_1,B,C,D,E):
* Chain [[21],23]: 1*it(21)+0
  Such that:it(21) =< V_x_size-V_j_1

  with precondition: [B=2,V_j_1>=5,V_y_size>=V_i_1+6,V_x_size>=V_j_1+7] 

* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V_x_size-V_j_1

  with precondition: [B=3,V_x_size=C,V_y_size=D,V_i_1+1=E,V_j_1>=5,V_y_size>=V_i_1+6,V_x_size>=V_j_1+6] 

* Chain [23]: 0
  with precondition: [B=2,V_j_1>=5,V_y_size>=V_i_1+6,V_x_size>=V_j_1+6] 

* Chain [22]: 0
  with precondition: [B=3,V_x_size=C,V_y_size=D,V_i_1+1=E,V_j_1>=5,V_j_1+5>=V_x_size,V_y_size>=V_i_1+6] 


#### Cost of loops [25] 

 * loop 25:eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_bb48_in(V_x_size',V_y_size',V_i_1',B')] 
2
#### Cost of phase [25]:eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_bb48_in(V_x_size',V_y_size',V_i_1',B')] 
2*it(25)+0
  Such that:it(25) =< V_y_size-V_i_1
it(25) =< V_y_size-V_i_1-V_y_size'+V_i_1'

#### Cost of loops [24] 

 * loop 24:eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_bb48_in(V_x_size',V_y_size',V_i_1',B')] 
1*s(7)+2
  Such that:s(7) =< V_x_size

#### Cost of phase [24]:eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_bb48_in(V_x_size',V_y_size',V_i_1',B')] 
2*it(24)+1*s(8)+0
  Such that:aux(2) =< V_x_size
it(24) =< V_y_size-V_i_1
it(24) =< V_y_size-V_i_1-V_y_size'+V_i_1'
s(8) =< it(24)*aux(2)

#### Cost of phase [24]:eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B) -> [eval_susan_corners_bb48_in(V_x_size',V_y_size',V_i_1',B')] 
2*it(24)+1*s(8)+0
  Such that:aux(2) =< V_x_size
it(24) =< V_y_size-V_i_1
it(24) =< V_y_size-V_i_1-V_y_size'+V_i_1'
s(8) =< it(24)*aux(2)

#### Cost of chains of eval_susan_corners_bb48_in(V_x_size,V_y_size,V_i_1,B):
* Chain [[25],26]: 2*it(25)+0
  Such that:it(25) =< V_y_size-V_i_1

  with precondition: [B=5,10>=V_x_size,V_y_size>=V_i_1+6] 

* Chain [[24],27]: 2*it(24)+1*s(5)+1*s(8)+1
  Such that:it(24) =< V_y_size-V_i_1
aux(3) =< V_x_size
s(5) =< aux(3)
s(8) =< it(24)*aux(3)

  with precondition: [B=2,V_x_size>=11,V_y_size>=V_i_1+7] 

* Chain [[24],26]: 2*it(24)+1*s(8)+0
  Such that:aux(2) =< V_x_size
it(24) =< V_y_size-V_i_1
s(8) =< it(24)*aux(2)

  with precondition: [B=5,V_x_size>=11,V_y_size>=V_i_1+6] 

* Chain [27]: 1*s(5)+1
  Such that:s(5) =< V_x_size

  with precondition: [B=2,V_x_size>=11,V_y_size>=V_i_1+6] 

* Chain [26]: 0
  with precondition: [B=5,V_i_1+5>=V_y_size] 


#### Cost of chains of loop_cont_eval_susan_corners_bb48_in(D,A):
* Chain [29]: 0
  with precondition: [D=2] 

* Chain [28]: 0
  with precondition: [D=5] 


#### Cost of chains of loop_cont_eval_susan_corners_bb1_in(H,A,B,C,D):
* Chain [32]: 2*s(14)+1
  Such that:s(14) =< B-C

  with precondition: [H=3,10>=A,B>=C+6] 

* Chain [31]: 4*s(15)+2*s(17)+2*s(18)+2
  Such that:aux(5) =< A
aux(6) =< B-C
s(15) =< aux(6)
s(17) =< aux(5)
s(18) =< s(15)*aux(5)

  with precondition: [H=3,A>=11,B>=C+6] 

* Chain [30]: 1
  with precondition: [H=3,C+5>=B] 


#### Cost of chains of eval_susan_corners_12(V_x_size,V_y_size,B):
* Chain [35]: 4*s(22)+2
  Such that:aux(7) =< V_y_size
s(22) =< aux(7)

  with precondition: [10>=V_x_size,V_y_size>=11] 

* Chain [34]: 2
  with precondition: [10>=V_y_size] 

* Chain [33]: 6*s(24)+3*s(26)+2*s(30)+3
  Such that:aux(8) =< V_x_size
aux(9) =< V_y_size
s(24) =< aux(9)
s(30) =< aux(8)
s(26) =< s(24)*aux(8)

  with precondition: [V_x_size>=11,V_y_size>=11] 


#### Cost of chains of eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B):
* Chain [38]: 4*s(33)+2
  Such that:s(32) =< V_y_size
s(33) =< s(32)

  with precondition: [10>=V_x_size,V_y_size>=11] 

* Chain [37]: 2
  with precondition: [10>=V_y_size] 

* Chain [36]: 6*s(36)+2*s(37)+3*s(38)+3
  Such that:s(34) =< V_x_size
s(35) =< V_y_size
s(36) =< s(35)
s(37) =< s(34)
s(38) =< s(36)*s(34)

  with precondition: [V_x_size>=11,V_y_size>=11] 


Closed-form bounds of eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B): 
-------------------------------------
* Chain [38] with precondition: [10>=V_x_size,V_y_size>=11] 
    - Upper bound: 4*V_y_size+2 
    - Complexity: n 
* Chain [37] with precondition: [10>=V_y_size] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [36] with precondition: [V_x_size>=11,V_y_size>=11] 
    - Upper bound: 2*V_x_size+3+3*V_x_size*V_y_size+6*V_y_size 
    - Complexity: n^2 

### Maximum cost of eval_susan_corners_start(V_max_no,V_x_size,V_y_size,B): nat(V_x_size)*2+1+nat(V_x_size)*3*nat(V_y_size)+nat(V_y_size)*2+nat(V_y_size)*4+2 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 523 ms.
* Invariants computed in 61 ms.
   - Backward Invariants 30 ms.
   - Transitive Invariants 14 ms.
* Refinement performed in 89 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 95 ms.
   - Equation cost structures 33 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 30 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 1004 ms.

