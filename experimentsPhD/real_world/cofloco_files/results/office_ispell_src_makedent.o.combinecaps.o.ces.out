Warning: Ignored call to eval_combinecaps_stop/1 in equation eval_combinecaps_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_combinecaps_bb11_in/1]
1. non_recursive  : [eval_combinecaps_16/1]
2. non_recursive  : [eval_combinecaps_15/2]
3. non_recursive  : [eval_combinecaps_41/1]
4. non_recursive  : [eval_combinecaps_40/2]
5. non_recursive  : [eval_combinecaps_29/2]
6. non_recursive  : [eval_combinecaps_28/2]
7. non_recursive  : [eval_combinecaps_18/2]
8. non_recursive  : [eval_combinecaps_17/2]
9. non_recursive  : [eval_combinecaps_12/2]
10. non_recursive  : [eval_combinecaps_11/2]
11. non_recursive  : [eval_combinecaps_10/2]
12. non_recursive  : [eval_combinecaps_bb4_in/2]
13. non_recursive  : [eval_combinecaps_9/2]
14. non_recursive  : [eval_combinecaps_8/2]
15. recursive  : [eval_combinecaps_6/3,eval_combinecaps_7/4,eval_combinecaps_bb1_in/3]
16. non_recursive  : [loop_cont_eval_combinecaps_bb1_in/3]
17. non_recursive  : [eval_combinecaps_bb0_in/2]
18. non_recursive  : [eval_combinecaps_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_combinecaps_29/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_combinecaps_12/2
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_combinecaps_bb4_in/2
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_combinecaps_bb1_in/3
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_combinecaps_bb0_in/2
18. SCC is partially evaluated into eval_combinecaps_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_combinecaps_29/2 
* CE 11 is refined into CE [12] 


#### Refined cost equations eval_combinecaps_29/2 
* CE 12: eval_combinecaps_29(V__cbench_print,B) = 0
     [] 

### Cost equations --> "Loop" of eval_combinecaps_29/2 
* CEs [12] --> Loop 8 

#### Loops of eval_combinecaps_29/2 
* Loop 8: eval_combinecaps_29(V__cbench_print,B) [] 

### Ranking functions of CR eval_combinecaps_29(V__cbench_print,B) 

#### Partial ranking functions of CR eval_combinecaps_29(V__cbench_print,B) 


### Resulting Chains:eval_combinecaps_29(V__cbench_print,B) 
* [8]


### Merging Chains  eval_combinecaps_29/2 into  External patterns of execution 
* [[8]] --> 1 


### Specialization of cost equations eval_combinecaps_12/2 
* CE 9 is refined into CE [13] 
* CE 10 is refined into CE [14] 


#### Refined cost equations eval_combinecaps_12/2 
* CE 13: eval_combinecaps_12(V__cbench_print,B) = 0
     [] 
* CE 14: eval_combinecaps_12(V__cbench_print,B) = 0+ eval_combinecaps_29(C,B):1
     [] 

### Cost equations --> "Loop" of eval_combinecaps_12/2 
* CEs [13,14] --> Loop 9 

#### Loops of eval_combinecaps_12/2 
* Loop 9: eval_combinecaps_12(V__cbench_print,B) [] 

### Ranking functions of CR eval_combinecaps_12(V__cbench_print,B) 

#### Partial ranking functions of CR eval_combinecaps_12(V__cbench_print,B) 


### Resulting Chains:eval_combinecaps_12(V__cbench_print,B) 
* [9]


### Merging Chains  eval_combinecaps_12/2 into  External patterns of execution 
* [[9]] --> 1 


### Specialization of cost equations eval_combinecaps_bb4_in/2 
* CE 7 is refined into CE [15] 
* CE 8 is refined into CE [16] 


#### Refined cost equations eval_combinecaps_bb4_in/2 
* CE 15: eval_combinecaps_bb4_in(V__cbench_print,B) = 0+ eval_combinecaps_12(V__cbench_print,B):1
     [] 
* CE 16: eval_combinecaps_bb4_in(V__cbench_print,B) = 0
     [] 

### Cost equations --> "Loop" of eval_combinecaps_bb4_in/2 
* CEs [15,16] --> Loop 10 

#### Loops of eval_combinecaps_bb4_in/2 
* Loop 10: eval_combinecaps_bb4_in(V__cbench_print,B) [] 

### Ranking functions of CR eval_combinecaps_bb4_in(V__cbench_print,B) 

#### Partial ranking functions of CR eval_combinecaps_bb4_in(V__cbench_print,B) 


### Resulting Chains:eval_combinecaps_bb4_in(V__cbench_print,B) 
* [10]


### Merging Chains  eval_combinecaps_bb4_in/2 into  External patterns of execution 
* [[10]] --> 1 


### Specialization of cost equations eval_combinecaps_bb1_in/3 
* CE 6 is refined into CE [17] 
* CE 5 is refined into CE [18] 


#### Refined cost equations eval_combinecaps_bb1_in/3 
* CE 17: eval_combinecaps_bb1_in(A,B,A) = 0
     [B=2] 
* CE 18: eval_combinecaps_bb1_in(V__cbench_print,B,C) = 1+ eval_combinecaps_bb1_in(V__cbench_print,D,C)
     [D=2,B=2] 

### Cost equations --> "Loop" of eval_combinecaps_bb1_in/3 
* CEs [18] --> Loop 11 
* CEs [17] --> Loop 12 

#### Loops of eval_combinecaps_bb1_in/3 
* Loop 11: eval_combinecaps_bb1_in(V__cbench_print,B,C)->  eval_combinecaps_bb1_in(V__cbench_print,B',C)
                  [B'=2,B=2] 
* Loop 12: eval_combinecaps_bb1_in(A,B,A) [B=2] 

### Ranking functions of CR eval_combinecaps_bb1_in(V__cbench_print,B,C) 

#### Partial ranking functions of CR eval_combinecaps_bb1_in(V__cbench_print,B,C) 


### Resulting Chains:eval_combinecaps_bb1_in(V__cbench_print,B,C) 
* [[11]]...
* [[11],12]
* [12]


### Merging Chains  eval_combinecaps_bb1_in/3 into  External patterns of execution 
* [[12],[12,[11]]] --> 1 
* [[[11]]] --> 2 


### Specialization of cost equations eval_combinecaps_bb0_in/2 
* CE 3 is refined into CE [19,20] 
* CE 4 is refined into CE [21] 


#### Refined cost equations eval_combinecaps_bb0_in/2 
* CE 19: eval_combinecaps_bb0_in(V__cbench_print,B) = 1+ eval_combinecaps_bb1_in(V__cbench_print,C,V__cbench_print):1+ eval_combinecaps_bb4_in(V__cbench_print,B):1
     [C=2] 
* CE 20: eval_combinecaps_bb0_in(V__cbench_print,B) = 1+ eval_combinecaps_bb1_in(V__cbench_print,C,D):2
     [C=2] 
* CE 21: eval_combinecaps_bb0_in(V__cbench_print,B) = 0+ eval_combinecaps_bb4_in(V__cbench_print,B):1
     [] 

### Cost equations --> "Loop" of eval_combinecaps_bb0_in/2 
* CEs [19,21] --> Loop 13 
* CEs [20] --> Loop 14 

#### Loops of eval_combinecaps_bb0_in/2 
* Loop 13: eval_combinecaps_bb0_in(V__cbench_print,B) [] 
* Loop 14: eval_combinecaps_bb0_in(V__cbench_print,B) [] 

### Ranking functions of CR eval_combinecaps_bb0_in(V__cbench_print,B) 

#### Partial ranking functions of CR eval_combinecaps_bb0_in(V__cbench_print,B) 


### Resulting Chains:eval_combinecaps_bb0_in(V__cbench_print,B) 
* [14]...
* [13]


### Merging Chains  eval_combinecaps_bb0_in/2 into  External patterns of execution 
* [[13]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_combinecaps_start/2 
* CE 2 is refined into CE [22,23] 


#### Refined cost equations eval_combinecaps_start/2 
* CE 22: eval_combinecaps_start(V__cbench_print,B) = 0+ eval_combinecaps_bb0_in(V__cbench_print,B):1
     [] 
* CE 23: eval_combinecaps_start(V__cbench_print,B) = 0+ eval_combinecaps_bb0_in(V__cbench_print,B):2
     [] 

### Cost equations --> "Loop" of eval_combinecaps_start/2 
* CEs [23] --> Loop 15 
* CEs [22] --> Loop 16 

#### Loops of eval_combinecaps_start/2 
* Loop 15: eval_combinecaps_start(V__cbench_print,B) [] 
* Loop 16: eval_combinecaps_start(V__cbench_print,B) [] 

### Ranking functions of CR eval_combinecaps_start(V__cbench_print,B) 

#### Partial ranking functions of CR eval_combinecaps_start(V__cbench_print,B) 


### Resulting Chains:eval_combinecaps_start(V__cbench_print,B) 
* [16]
* [15]...


### Merging Chains  eval_combinecaps_start/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of eval_combinecaps_29(V__cbench_print,B):
* Chain [8]: 0
  with precondition: [] 


#### Cost of chains of eval_combinecaps_12(V__cbench_print,B):
* Chain [9]: 0
  with precondition: [] 


#### Cost of chains of eval_combinecaps_bb4_in(V__cbench_print,B):
* Chain [10]: 0
  with precondition: [] 


#### Cost of loops [11] 

 * loop 11:eval_combinecaps_bb1_in(V__cbench_print,B,C) -> [eval_combinecaps_bb1_in(V__cbench_print',B',C')] 
1
#### Cost of phase [11]:eval_combinecaps_bb1_in(V__cbench_print,B,C) -> [eval_combinecaps_bb1_in(V__cbench_print',B',C')] 
1*it(11)+0
#### Cost of phase [11]:eval_combinecaps_bb1_in(V__cbench_print,B,C) -> [eval_combinecaps_bb1_in(V__cbench_print',B',C')] 
1*it(11)+0
#### Cost of chains of eval_combinecaps_bb1_in(V__cbench_print,B,C):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [B=2] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=2,V__cbench_print=C] 

* Chain [12]: 0
  with precondition: [B=2,C=V__cbench_print] 


#### Cost of chains of eval_combinecaps_bb0_in(V__cbench_print,B):
* Chain [14]...: 1*s(2)+1
  with precondition: [] 

* Chain [13]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_combinecaps_start(V__cbench_print,B):
* Chain [16]: 1*s(4)+0
  with precondition: [] 

* Chain [15]...: 1*s(5)+1
  with precondition: [] 


Closed-form bounds of eval_combinecaps_start(V__cbench_print,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_combinecaps_start(V__cbench_print,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 3 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 8 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 8 ms.
   - Equation cost structures 2 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 46 ms.

