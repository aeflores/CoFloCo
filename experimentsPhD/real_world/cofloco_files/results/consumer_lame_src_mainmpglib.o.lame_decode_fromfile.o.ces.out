WARNING: Excluded non-linear constraints:[C-2*A*B>=0,C-2*A*B+1=<2*A]
WARNING: Excluded non-linear constraints:[C-2*A*B>=0,C-2*A*B+1=< -2*A]
WARNING: Excluded non-linear constraints:[-C+2*A*B>=0,-C+2*A*B+1=<2*A]
WARNING: Excluded non-linear constraints:[-C+2*A*B>=0,-C+2*A*B+1=< -2*A]
WARNING: Excluded non-linear constraints:[E-2*D*F>=0,E-2*D*F+1=<2*D]
WARNING: Excluded non-linear constraints:[E-2*D*F>=0,E-2*D*F+1=< -2*D]
WARNING: Excluded non-linear constraints:[-E+2*D*F>=0,-E+2*D*F+1=<2*D]
WARNING: Excluded non-linear constraints:[-E+2*D*F>=0,-E+2*D*F+1=< -2*D]
WARNING: Excluded non-linear constraints:[G-2*F*H>=0,G-2*F*H+1=<2*F]
WARNING: Excluded non-linear constraints:[G-2*F*H>=0,G-2*F*H+1=< -2*F]
WARNING: Excluded non-linear constraints:[-G+2*F*H>=0,-G+2*F*H+1=<2*F]
WARNING: Excluded non-linear constraints:[-G+2*F*H>=0,-G+2*F*H+1=< -2*F]
WARNING: Excluded non-linear constraints:[F-2*E*G>=0,F-2*E*G+1=<2*E]
WARNING: Excluded non-linear constraints:[F-2*E*G>=0,F-2*E*G+1=< -2*E]
WARNING: Excluded non-linear constraints:[-F+2*E*G>=0,-F+2*E*G+1=<2*E]
WARNING: Excluded non-linear constraints:[-F+2*E*G>=0,-F+2*E*G+1=< -2*E]
Warning: Ignored call to eval_lame_decode_fromfile_stop/1 in equation eval_lame_decode_fromfile_36/1 
Warning: Ignored call to eval_lame_decode_fromfile_stop/1 in equation eval_lame_decode_fromfile_bb16_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_lame_decode_fromfile_11/6,eval_lame_decode_fromfile_12/6,eval_lame_decode_fromfile_8/4,eval_lame_decode_fromfile_9/5,eval_lame_decode_fromfile__critedge_in/4,eval_lame_decode_fromfile_bb2_in/4]
1. non_recursive  : [eval_lame_decode_fromfile_36/1]
2. non_recursive  : [eval_lame_decode_fromfile_35/1]
3. non_recursive  : [eval_lame_decode_fromfile_34/1]
4. non_recursive  : [eval_lame_decode_fromfile_NewDefault_in/1]
5. non_recursive  : [eval_lame_decode_fromfile_bb16_in/1]
6. non_recursive  : [eval_lame_decode_fromfile_bb15_in/1]
7. recursive  : [eval_lame_decode_fromfile_bb12_in/8,eval_lame_decode_fromfile_bb8_in/8]
8. recursive  : [eval_lame_decode_fromfile_bb7_in/4,loop_cont_eval_lame_decode_fromfile_bb8_in/5]
9. non_recursive  : [loop_cont_eval_lame_decode_fromfile_bb7_in/2]
10. non_recursive  : [loop_cont_eval_lame_decode_fromfile_bb2_in/5]
11. non_recursive  : [eval_lame_decode_fromfile_5/1]
12. non_recursive  : [eval_lame_decode_fromfile_4/2]
13. non_recursive  : [eval_lame_decode_fromfile_2/2]
14. non_recursive  : [eval_lame_decode_fromfile_1/1]
15. non_recursive  : [eval_lame_decode_fromfile_bb0_in/1]
16. non_recursive  : [eval_lame_decode_fromfile_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_lame_decode_fromfile_bb2_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_lame_decode_fromfile_bb8_in/8
8. SCC is partially evaluated into eval_lame_decode_fromfile_bb7_in/4
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_lame_decode_fromfile_bb2_in/5
11. SCC is partially evaluated into eval_lame_decode_fromfile_5/1
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_lame_decode_fromfile_2/2
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_lame_decode_fromfile_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_lame_decode_fromfile_bb2_in/4 
* CE 13 is refined into CE [23] 
* CE 6 is refined into CE [24] 
* CE 14 is refined into CE [25] 
* CE 9 is refined into CE [26] 
* CE 11 is refined into CE [27] 
* CE 12 is refined into CE [28] 
* CE 10 is refined into CE [29] 
* CE 8 is refined into CE [30] 
* CE 7 is refined into CE [31] 


#### Refined cost equations eval_lame_decode_fromfile_bb2_in/4 
* CE 23: eval_lame_decode_fromfile_bb2_in(B,C,D,E) = 0
     [B=5] 
* CE 24: eval_lame_decode_fromfile_bb2_in(B,C,D,E) = 0
     [B=4] 
* CE 25: eval_lame_decode_fromfile_bb2_in(B,C,D,E) = 0
     [B=3] 
* CE 26: eval_lame_decode_fromfile_bb2_in(B,C,D,E) = 0
     [2*C>=1,D>=0,E=0,B=2] 
* CE 27: eval_lame_decode_fromfile_bb2_in(B,C,D,E) = 0
     [2*C>=1,0>=D,E=0,B=2] 
* CE 28: eval_lame_decode_fromfile_bb2_in(B,C,D,E) = 0
     [D>=0,0>=2*C+1,E=0,B=2] 
* CE 29: eval_lame_decode_fromfile_bb2_in(B,C,D,E) = 0
     [0>=D,0>=2*C+1,E=0,B=2] 
* CE 30: eval_lame_decode_fromfile_bb2_in(B,C,D,E) = 0
     [E=0,D=0,B=2] 
* CE 31: eval_lame_decode_fromfile_bb2_in(B,C,D,E) = 1+ eval_lame_decode_fromfile_bb2_in(B,C,D,E)
     [] 

### Cost equations --> "Loop" of eval_lame_decode_fromfile_bb2_in/4 
* CEs [31] --> Loop 21 
* CEs [23] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [30] --> Loop 29 

#### Loops of eval_lame_decode_fromfile_bb2_in/4 
* Loop 21: eval_lame_decode_fromfile_bb2_in(B,C,D,E)->  eval_lame_decode_fromfile_bb2_in(B,C,D,E)
                  [] 
* Loop 22: eval_lame_decode_fromfile_bb2_in(B,C,D,E) [B=5] 
* Loop 23: eval_lame_decode_fromfile_bb2_in(B,C,D,E) [B=4] 
* Loop 24: eval_lame_decode_fromfile_bb2_in(B,C,D,E) [B=3] 
* Loop 25: eval_lame_decode_fromfile_bb2_in(B,C,D,E) [2*C>=1,D>=0,E=0,B=2] 
* Loop 26: eval_lame_decode_fromfile_bb2_in(B,C,D,E) [2*C>=1,0>=D,E=0,B=2] 
* Loop 27: eval_lame_decode_fromfile_bb2_in(B,C,D,E) [D>=0,0>=2*C+1,E=0,B=2] 
* Loop 28: eval_lame_decode_fromfile_bb2_in(B,C,D,E) [0>=D,0>=2*C+1,E=0,B=2] 
* Loop 29: eval_lame_decode_fromfile_bb2_in(B,C,D,E) [E=0,D=0,B=2] 

### Ranking functions of CR eval_lame_decode_fromfile_bb2_in(B,C,D,E) 

#### Partial ranking functions of CR eval_lame_decode_fromfile_bb2_in(B,C,D,E) 


### Resulting Chains:eval_lame_decode_fromfile_bb2_in(B,C,D,E) 
* [[21]]...
* [[21],29]
* [[21],28]
* [[21],27]
* [[21],26]
* [[21],25]
* [[21],24]
* [[21],23]
* [[21],22]
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]
* [23]
* [22]


### Merging Chains  eval_lame_decode_fromfile_bb2_in/4 into  External patterns of execution 
* [[29],[29,[21]]] --> 1 
* [[28],[28,[21]]] --> 2 
* [[27],[27,[21]]] --> 3 
* [[26],[26,[21]]] --> 4 
* [[25],[25,[21]]] --> 5 
* [[24],[24,[21]]] --> 6 
* [[23],[23,[21]]] --> 7 
* [[22],[22,[21]]] --> 8 
* [[[21]]] --> 9 


### Specialization of cost equations eval_lame_decode_fromfile_bb8_in/8 
* CE 22 is refined into CE [32] 
* CE 21 is refined into CE [33] 


#### Refined cost equations eval_lame_decode_fromfile_bb8_in/8 
* CE 32: eval_lame_decode_fromfile_bb8_in(A,B,C,D,E,A,B,F) = 0
     [A>=C+1,D>=B,D>=0,C+1=F,E=2] 
* CE 33: eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,V_i_0,B,C,D,E) = 1+ eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,F,G,C,D,E)
     [V_23>=V_i_0+1,V_19>=V_j_0+1,V_i_0>=0,V_i_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_lame_decode_fromfile_bb8_in/8 
* CEs [33] --> Loop 30 
* CEs [32] --> Loop 31 

#### Loops of eval_lame_decode_fromfile_bb8_in/8 
* Loop 30: eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,V_i_0,B,C,D,E)->  eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,V_i_0',B',C,D,E)
                  [V_23>=V_i_0+1,V_19>=V_j_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 31: eval_lame_decode_fromfile_bb8_in(A,B,C,D,E,A,B,F) [A>=C+1,D>=B,D>=0,C+1=F,E=2] 

### Ranking functions of CR eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,V_i_0,B,C,D,E) 
* RF of phase [30]: [V_23-V_i_0]

#### Partial ranking functions of CR eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,V_i_0,B,C,D,E) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    V_23-V_i_0


### Resulting Chains:eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,V_i_0,B,C,D,E) 
* [[30],31]
* [31]


### Merging Chains  eval_lame_decode_fromfile_bb8_in/8 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[30]]] --> 2 


### Specialization of cost equations eval_lame_decode_fromfile_bb7_in/4 
* CE 20 is refined into CE [34] 
* CE 19 is refined into CE [35,36] 


#### Refined cost equations eval_lame_decode_fromfile_bb7_in/4 
* CE 34: eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) = 0
     [V_j_0>=V_19,B=3] 
* CE 35: eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) = 2+ eval_lame_decode_fromfile_bb8_in(V_19,V_23,C,D,E,V_19,V_23,F):1+ eval_lame_decode_fromfile_bb7_in(V_19,V_23,F,G)
     [V_19>=F,0>=V_23,F=C+1,F=V_j_0+1,G=3,E=2,D=0,B=3] 
* CE 36: eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) = 2+ eval_lame_decode_fromfile_bb8_in(V_19,V_23,C,D,E,V_19,V_23,F):2+ eval_lame_decode_fromfile_bb7_in(V_19,V_23,F,G)
     [V_19>=F,V_23>=1,F=C+1,F=V_j_0+1,G=3,E=2,D=0,B=3] 

### Cost equations --> "Loop" of eval_lame_decode_fromfile_bb7_in/4 
* CEs [36] --> Loop 32 
* CEs [35] --> Loop 33 
* CEs [34] --> Loop 34 

#### Loops of eval_lame_decode_fromfile_bb7_in/4 
* Loop 32: eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B)->  eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0',B')
                  [V_19>=V_j_0+1,V_23>=1,V_j_0+1=V_j_0',B'=3,B=3] 
* Loop 33: eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B)->  eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0',B')
                  [V_19>=V_j_0+1,0>=V_23,V_j_0+1=V_j_0',B'=3,B=3] 
* Loop 34: eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) [V_j_0>=V_19,B=3] 

### Ranking functions of CR eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) 
* RF of phase [32]: [V_19-V_j_0]
* RF of phase [33]: [V_19-V_j_0]

#### Partial ranking functions of CR eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V_19-V_j_0
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V_19-V_j_0


### Resulting Chains:eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) 
* [[33],34]
* [[32],34]
* [34]


### Merging Chains  eval_lame_decode_fromfile_bb7_in/4 into  External patterns of execution 
* [[34,[33]]] --> 1 
* [[34,[32]]] --> 2 
* [[34]] --> 3 


### Specialization of cost equations loop_cont_eval_lame_decode_fromfile_bb2_in/5 
* CE 17 is refined into CE [37] 
* CE 15 is refined into CE [38] 
* CE 18 is refined into CE [39] 
* CE 16 is refined into CE [40,41,42] 


#### Refined cost equations loop_cont_eval_lame_decode_fromfile_bb2_in/5 
* CE 37: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) = 0
     [E=5] 
* CE 38: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) = 0
     [E=4] 
* CE 39: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) = 0
     [E=3] 
* CE 40: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) = 1+ eval_lame_decode_fromfile_bb7_in(A,B,C,F):1
     [A>=C+1,0>=B,F=3,E=2] 
* CE 41: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) = 1+ eval_lame_decode_fromfile_bb7_in(A,B,C,F):2
     [A>=C+1,B>=1,F=3,E=2] 
* CE 42: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) = 1+ eval_lame_decode_fromfile_bb7_in(A,B,C,F):3
     [C>=A,F=3,E=2] 

### Cost equations --> "Loop" of loop_cont_eval_lame_decode_fromfile_bb2_in/5 
* CEs [37] --> Loop 35 
* CEs [38] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [42] --> Loop 38 
* CEs [41] --> Loop 39 
* CEs [40] --> Loop 40 

#### Loops of loop_cont_eval_lame_decode_fromfile_bb2_in/5 
* Loop 35: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) [E=5] 
* Loop 36: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) [E=4] 
* Loop 37: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) [E=3] 
* Loop 38: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) [C>=A,E=2] 
* Loop 39: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) [A>=C+1,B>=1,E=2] 
* Loop 40: loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) [A>=C+1,0>=B,E=2] 

### Ranking functions of CR loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) 


### Resulting Chains:loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D) 
* [40]
* [39]
* [38]
* [37]
* [36]
* [35]


### Merging Chains  loop_cont_eval_lame_decode_fromfile_bb2_in/5 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 
* [[38]] --> 3 
* [[37]] --> 4 
* [[36]] --> 5 
* [[35]] --> 6 


### Specialization of cost equations eval_lame_decode_fromfile_5/1 
* CE 5 is refined into CE [43,44,45,46,47,48,49,50,51,52,53] 


#### Refined cost equations eval_lame_decode_fromfile_5/1 
* CE 43: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):1+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,H,I,B):1
     [D>=1,I=0,H=0,G=2,F=0,E=0,C=2] 
* CE 44: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):1+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,H,I,B):3
     [0>=D,I=0,H=0,G=2,F=0,E=0,C=2] 
* CE 45: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):2+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,E,H,B):3
     [0>=E,0>=2*D+1,H=0,G=2,F=0,C=2] 
* CE 46: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):3+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,E,H,B):3
     [E>=0,0>=2*D+1,H=0,G=2,F=0,C=2] 
* CE 47: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):4+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,E,H,B):1
     [D>=1,0>=E,H=0,G=2,F=0,C=2] 
* CE 48: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):5+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,H,I,B):1
     [D>=1,I=0,H=0,G=2,F=0,E=0,C=2] 
* CE 49: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):5+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,E,H,B):2
     [E>=1,D>=1,H=0,G=2,F=0,C=2] 
* CE 50: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):6+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,E,F,B):4
     [G=3,C=3] 
* CE 51: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):7+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,E,F,B):5
     [G=4,C=4] 
* CE 52: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):8+ loop_cont_eval_lame_decode_fromfile_bb2_in(G,D,E,F,B):6
     [G=5,C=5] 
* CE 53: eval_lame_decode_fromfile_5(B) = 1+ eval_lame_decode_fromfile_bb2_in(C,D,E,F):9
     [] 

### Cost equations --> "Loop" of eval_lame_decode_fromfile_5/1 
* CEs [53] --> Loop 41 
* CEs [43,44,45,46,47,48,49,50,51,52] --> Loop 42 

#### Loops of eval_lame_decode_fromfile_5/1 
* Loop 41: eval_lame_decode_fromfile_5(B) [] 
* Loop 42: eval_lame_decode_fromfile_5(B) [] 

### Ranking functions of CR eval_lame_decode_fromfile_5(B) 

#### Partial ranking functions of CR eval_lame_decode_fromfile_5(B) 


### Resulting Chains:eval_lame_decode_fromfile_5(B) 
* [42]
* [41]...


### Merging Chains  eval_lame_decode_fromfile_5/1 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_lame_decode_fromfile_2/2 
* CE 3 is refined into CE [54] 
* CE 4 is refined into CE [55,56] 


#### Refined cost equations eval_lame_decode_fromfile_2/2 
* CE 54: eval_lame_decode_fromfile_2(V_1,B) = 0
     [] 
* CE 55: eval_lame_decode_fromfile_2(V_1,B) = 0+ eval_lame_decode_fromfile_5(B):1
     [] 
* CE 56: eval_lame_decode_fromfile_2(V_1,B) = 0+ eval_lame_decode_fromfile_5(B):2
     [] 

### Cost equations --> "Loop" of eval_lame_decode_fromfile_2/2 
* CEs [56] --> Loop 43 
* CEs [54,55] --> Loop 44 

#### Loops of eval_lame_decode_fromfile_2/2 
* Loop 43: eval_lame_decode_fromfile_2(V_1,B) [] 
* Loop 44: eval_lame_decode_fromfile_2(V_1,B) [] 

### Ranking functions of CR eval_lame_decode_fromfile_2(V_1,B) 

#### Partial ranking functions of CR eval_lame_decode_fromfile_2(V_1,B) 


### Resulting Chains:eval_lame_decode_fromfile_2(V_1,B) 
* [44]
* [43]...


### Merging Chains  eval_lame_decode_fromfile_2/2 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations eval_lame_decode_fromfile_start/1 
* CE 2 is refined into CE [57,58] 


#### Refined cost equations eval_lame_decode_fromfile_start/1 
* CE 57: eval_lame_decode_fromfile_start(B) = 0+ eval_lame_decode_fromfile_2(C,B):1
     [] 
* CE 58: eval_lame_decode_fromfile_start(B) = 0+ eval_lame_decode_fromfile_2(C,B):2
     [] 

### Cost equations --> "Loop" of eval_lame_decode_fromfile_start/1 
* CEs [58] --> Loop 45 
* CEs [57] --> Loop 46 

#### Loops of eval_lame_decode_fromfile_start/1 
* Loop 45: eval_lame_decode_fromfile_start(B) [] 
* Loop 46: eval_lame_decode_fromfile_start(B) [] 

### Ranking functions of CR eval_lame_decode_fromfile_start(B) 

#### Partial ranking functions of CR eval_lame_decode_fromfile_start(B) 


### Resulting Chains:eval_lame_decode_fromfile_start(B) 
* [46]
* [45]...


### Merging Chains  eval_lame_decode_fromfile_start/1 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [21] 

 * loop 21:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1
#### Cost of phase [21]:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1*it(21)+0
#### Cost of phase [21]:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1*it(21)+0
#### Cost of phase [21]:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1*it(21)+0
#### Cost of phase [21]:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1*it(21)+0
#### Cost of phase [21]:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1*it(21)+0
#### Cost of phase [21]:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1*it(21)+0
#### Cost of phase [21]:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1*it(21)+0
#### Cost of phase [21]:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1*it(21)+0
#### Cost of phase [21]:eval_lame_decode_fromfile_bb2_in(B,C,D,E) -> [eval_lame_decode_fromfile_bb2_in(B',C',D',E')] 
1*it(21)+0
#### Cost of chains of eval_lame_decode_fromfile_bb2_in(B,C,D,E):
* Chain [[21]]...: 1*it(21)+0
  with precondition: [] 

* Chain [[21],29]: 1*it(21)+0
  with precondition: [B=2,D=0,E=0] 

* Chain [[21],28]: 1*it(21)+0
  with precondition: [B=2,E=0,0>=2*C+1,0>=D] 

* Chain [[21],27]: 1*it(21)+0
  with precondition: [B=2,E=0,0>=2*C+1,D>=0] 

* Chain [[21],26]: 1*it(21)+0
  with precondition: [B=2,E=0,0>=D,2*C>=1] 

* Chain [[21],25]: 1*it(21)+0
  with precondition: [B=2,E=0,D>=0,2*C>=1] 

* Chain [[21],24]: 1*it(21)+0
  with precondition: [B=3] 

* Chain [[21],23]: 1*it(21)+0
  with precondition: [B=4] 

* Chain [[21],22]: 1*it(21)+0
  with precondition: [B=5] 

* Chain [29]: 0
  with precondition: [B=2,D=0,E=0] 

* Chain [28]: 0
  with precondition: [B=2,E=0,0>=2*C+1,0>=D] 

* Chain [27]: 0
  with precondition: [B=2,E=0,0>=2*C+1,D>=0] 

* Chain [26]: 0
  with precondition: [B=2,E=0,0>=D,2*C>=1] 

* Chain [25]: 0
  with precondition: [B=2,E=0,D>=0,2*C>=1] 

* Chain [24]: 0
  with precondition: [B=3] 

* Chain [23]: 0
  with precondition: [B=4] 

* Chain [22]: 0
  with precondition: [B=5] 


#### Cost of loops [30] 

 * loop 30:eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,V_i_0,B,C,D,E) -> [eval_lame_decode_fromfile_bb8_in(V_19',V_23',V_j_0',V_i_0',B',C',D',E')] 
1
#### Cost of phase [30]:eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,V_i_0,B,C,D,E) -> [eval_lame_decode_fromfile_bb8_in(V_19',V_23',V_j_0',V_i_0',B',C',D',E')] 
1*it(30)+0
  Such that:it(30) =< V_23-V_i_0
it(30) =< V_23-V_i_0-V_23'+V_i_0'

#### Cost of chains of eval_lame_decode_fromfile_bb8_in(V_19,V_23,V_j_0,V_i_0,B,C,D,E):
* Chain [[30],31]: 1*it(30)+0
  Such that:it(30) =< -V_i_0+D

  with precondition: [B=2,V_19=C,V_23=D,V_j_0+1=E,V_i_0>=0,V_19>=V_j_0+1,V_23>=V_i_0+1] 

* Chain [31]: 0
  with precondition: [B=2,V_19=C,V_23=D,V_j_0+1=E,V_i_0>=0,V_i_0>=V_23,V_19>=V_j_0+1] 


#### Cost of loops [33] 

 * loop 33:eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) -> [eval_lame_decode_fromfile_bb7_in(V_19',V_23',V_j_0',B')] 
2
#### Cost of phase [33]:eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) -> [eval_lame_decode_fromfile_bb7_in(V_19',V_23',V_j_0',B')] 
2*it(33)+0
  Such that:it(33) =< V_19-V_j_0
it(33) =< V_19-V_j_0-V_19'+V_j_0'

#### Cost of loops [32] 

 * loop 32:eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) -> [eval_lame_decode_fromfile_bb7_in(V_19',V_23',V_j_0',B')] 
1*s(10)+2
  Such that:s(10) =< V_23'

#### Cost of phase [32]:eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B) -> [eval_lame_decode_fromfile_bb7_in(V_19',V_23',V_j_0',B')] 
2*it(32)+1*s(11)+0
  Such that:it(32) =< V_19-V_j_0
it(32) =< V_19-V_j_0-V_19'+V_j_0'
aux(9) =< V_23
s(11) =< it(32)*aux(9)

#### Cost of chains of eval_lame_decode_fromfile_bb7_in(V_19,V_23,V_j_0,B):
* Chain [[33],34]: 2*it(33)+0
  Such that:it(33) =< V_19-V_j_0

  with precondition: [B=3,0>=V_23,V_19>=V_j_0+1] 

* Chain [[32],34]: 2*it(32)+1*s(11)+0
  Such that:it(32) =< V_19-V_j_0
aux(9) =< V_23
s(11) =< it(32)*aux(9)

  with precondition: [B=3,V_23>=1,V_19>=V_j_0+1] 

* Chain [34]: 0
  with precondition: [B=3,V_j_0>=V_19] 


#### Cost of chains of loop_cont_eval_lame_decode_fromfile_bb2_in(E,A,B,C,D):
* Chain [40]: 2*s(12)+1
  Such that:s(12) =< A-C

  with precondition: [E=2,0>=B,A>=C+1] 

* Chain [39]: 2*s(13)+1*s(15)+1
  Such that:s(13) =< A-C
s(14) =< B
s(15) =< s(13)*s(14)

  with precondition: [E=2,B>=1,A>=C+1] 

* Chain [38]: 1
  with precondition: [E=2,C>=A] 

* Chain [37]: 0
  with precondition: [E=3] 

* Chain [36]: 0
  with precondition: [E=4] 

* Chain [35]: 0
  with precondition: [E=5] 


#### Cost of chains of eval_lame_decode_fromfile_5(B):
* Chain [42]: 1*aux(10)+0
  with precondition: [] 

* Chain [41]...: 1*s(32)+1
  with precondition: [] 


#### Cost of chains of eval_lame_decode_fromfile_2(V_1,B):
* Chain [44]: 1*aux(11)+0
  with precondition: [] 

* Chain [43]...: 1*s(34)+1
  with precondition: [] 


#### Cost of chains of eval_lame_decode_fromfile_start(B):
* Chain [46]: 1*s(35)+0
  with precondition: [] 

* Chain [45]...: 1*s(36)+1
  with precondition: [] 


Closed-form bounds of eval_lame_decode_fromfile_start(B): 
-------------------------------------
* Chain [46] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_lame_decode_fromfile_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 74 ms.
* Invariants computed in 119 ms.
   - Backward Invariants 70 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 234 ms.
* Termination proved in 23 ms.
* Upper bounds computed in 178 ms.
   - Equation cost structures 65 ms.
   - Phase cost structures 55 ms.
   - Chain cost structures 63 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 767 ms.

