Warning: Ignored call to eval_say_file_stop/1 in equation eval_say_file_30/1 
Warning: Ignored call to eval_say_file_stop/1 in equation eval_say_file_4/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_say_file_4/1]
1. non_recursive  : [eval_say_file_3/3]
2. non_recursive  : [eval_say_file_2/3]
3. recursive  : [eval_say_file_10/7,eval_say_file_11/8,eval_say_file_13/9,eval_say_file_14/9,eval_say_file_15/9,eval_say_file_bb3_in/7]
4. recursive  : [eval_say_file_21/6,eval_say_file_22/6,eval_say_file_24/8,eval_say_file_25/8,eval_say_file_bb7_in/6]
5. non_recursive  : [eval_say_file_30/1]
6. non_recursive  : [eval_say_file_29/3]
7. non_recursive  : [eval_say_file_28/3]
8. non_recursive  : [eval_say_file_bb9_in/3]
9. non_recursive  : [loop_cont_eval_say_file_bb7_in/4]
10. non_recursive  : [loop_cont_eval_say_file_bb3_in/5]
11. non_recursive  : [eval_say_file_9/3]
12. non_recursive  : [eval_say_file_8/3]
13. non_recursive  : [eval_say_file_7/3]
14. non_recursive  : [eval_say_file_6/3]
15. non_recursive  : [eval_say_file_5/3]
16. non_recursive  : [eval_say_file_1/3]
17. non_recursive  : [eval_say_file_0/3]
18. non_recursive  : [eval_say_file_bb0_in/3]
19. non_recursive  : [eval_say_file_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_say_file_bb3_in/7
4. SCC is partially evaluated into eval_say_file_bb7_in/6
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_say_file_bb3_in/5
11. SCC is partially evaluated into eval_say_file_9/3
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_say_file_1/3
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_say_file_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_say_file_bb3_in/7 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 6 is refined into CE [15] 


#### Refined cost equations eval_say_file_bb3_in/7 
* CE 13: eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0,B,C,D,E) = 1+ eval_say_file_bb3_in(V__once,V__verbose,F,B,C,D,E)
     [V_nlines_0>=0,499>=V_nlines_0,V_nlines_0+1=F] 
* CE 14: eval_say_file_bb3_in(A,B,C,D,A,B,E) = 0
     [C>=0,E=0,D=3] 
* CE 15: eval_say_file_bb3_in(A,B,C,D,A,B,E) = 0
     [C>=0,D=2] 

### Cost equations --> "Loop" of eval_say_file_bb3_in/7 
* CEs [14] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [13] --> Loop 13 

#### Loops of eval_say_file_bb3_in/7 
* Loop 11: eval_say_file_bb3_in(A,B,C,D,A,B,E) [C>=0,E=0,D=3] 
* Loop 12: eval_say_file_bb3_in(A,B,C,D,A,B,E) [C>=0,D=2] 
* Loop 13: eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0,B,C,D,E)->  eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0',B,C,D,E)
                  [V_nlines_0>=0,499>=V_nlines_0,V_nlines_0+1=V_nlines_0'] 

### Ranking functions of CR eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0,B,C,D,E) 
* RF of phase [13]: [-V_nlines_0+500]

#### Partial ranking functions of CR eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0,B,C,D,E) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    -V_nlines_0+500


### Resulting Chains:eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0,B,C,D,E) 
* [[13],12]
* [[13],11]
* [12]
* [11]


### Merging Chains  eval_say_file_bb3_in/7 into  External patterns of execution 
* [[12],[12,[13]]] --> 1 
* [[11],[11,[13]]] --> 2 


### Specialization of cost equations eval_say_file_bb7_in/6 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


#### Refined cost equations eval_say_file_bb7_in/6 
* CE 16: eval_say_file_bb7_in(A,B,C,D,A,B) = 0
     [D=2] 
* CE 17: eval_say_file_bb7_in(V__once,V__verbose,V_loop_wrap1_0,B,C,D) = 1+ eval_say_file_bb7_in(E,V__verbose,F,G,C,D)
     [F=V_loop_wrap1_0+1,G=2,E=1,B=2] 

### Cost equations --> "Loop" of eval_say_file_bb7_in/6 
* CEs [17] --> Loop 14 
* CEs [16] --> Loop 15 

#### Loops of eval_say_file_bb7_in/6 
* Loop 14: eval_say_file_bb7_in(V__once,V__verbose,V_loop_wrap1_0,B,C,D)->  eval_say_file_bb7_in(V__once',V__verbose,V_loop_wrap1_0',B',C,D)
                  [V_loop_wrap1_0+1=V_loop_wrap1_0',B'=2,V__once'=1,B=2] 
* Loop 15: eval_say_file_bb7_in(A,B,C,D,A,B) [D=2] 

### Ranking functions of CR eval_say_file_bb7_in(V__once,V__verbose,V_loop_wrap1_0,B,C,D) 

#### Partial ranking functions of CR eval_say_file_bb7_in(V__once,V__verbose,V_loop_wrap1_0,B,C,D) 


### Resulting Chains:eval_say_file_bb7_in(V__once,V__verbose,V_loop_wrap1_0,B,C,D) 
* [[14]]...
* [[14],15]
* [15]


### Merging Chains  eval_say_file_bb7_in/6 into  External patterns of execution 
* [[15,[14]]] --> 1 
* [[15]] --> 2 
* [[[14]]] --> 3 


### Specialization of cost equations loop_cont_eval_say_file_bb3_in/5 
* CE 9 is refined into CE [18,19,20] 
* CE 10 is refined into CE [21] 


#### Refined cost equations loop_cont_eval_say_file_bb3_in/5 
* CE 18: loop_cont_eval_say_file_bb3_in(I,A,B,C,D) = 1+ eval_say_file_bb7_in(A,B,C,J,K,B):1
     [K=1,J=2,I=3] 
* CE 19: loop_cont_eval_say_file_bb3_in(I,A,B,C,D) = 1+ eval_say_file_bb7_in(A,B,C,J,A,B):2
     [J=2,I=3] 
* CE 20: loop_cont_eval_say_file_bb3_in(I,A,B,C,D) = 1+ eval_say_file_bb7_in(A,B,C,J,K,L):3
     [J=2,I=3] 
* CE 21: loop_cont_eval_say_file_bb3_in(I,A,B,C,D) = 0
     [I=2] 

### Cost equations --> "Loop" of loop_cont_eval_say_file_bb3_in/5 
* CEs [18,19] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of loop_cont_eval_say_file_bb3_in/5 
* Loop 16: loop_cont_eval_say_file_bb3_in(I,A,B,C,D) [I=3] 
* Loop 17: loop_cont_eval_say_file_bb3_in(I,A,B,C,D) [I=2] 
* Loop 18: loop_cont_eval_say_file_bb3_in(I,A,B,C,D) [I=3] 

### Ranking functions of CR loop_cont_eval_say_file_bb3_in(I,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_say_file_bb3_in(I,A,B,C,D) 


### Resulting Chains:loop_cont_eval_say_file_bb3_in(I,A,B,C,D) 
* [18]...
* [17]
* [16]


### Merging Chains  loop_cont_eval_say_file_bb3_in/5 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[18]] --> 3 


### Specialization of cost equations eval_say_file_9/3 
* CE 5 is refined into CE [22,23,24] 


#### Refined cost equations eval_say_file_9/3 
* CE 22: eval_say_file_9(V__once,V__verbose,B) = 1+ eval_say_file_bb3_in(V__once,V__verbose,C,D,V__once,V__verbose,E):1+ loop_cont_eval_say_file_bb3_in(F,V__once,V__verbose,E,B):1
     [F=2,D=2,C=0] 
* CE 23: eval_say_file_9(V__once,V__verbose,B) = 1+ eval_say_file_bb3_in(V__once,V__verbose,C,D,V__once,V__verbose,E):2+ loop_cont_eval_say_file_bb3_in(F,V__once,V__verbose,G,B):2
     [G=0,F=3,E=0,D=3,C=0] 
* CE 24: eval_say_file_9(V__once,V__verbose,B) = 1+ eval_say_file_bb3_in(V__once,V__verbose,C,D,V__once,V__verbose,E):2+ loop_cont_eval_say_file_bb3_in(F,V__once,V__verbose,G,B):3
     [G=0,F=3,E=0,D=3,C=0] 

### Cost equations --> "Loop" of eval_say_file_9/3 
* CEs [24] --> Loop 19 
* CEs [22,23] --> Loop 20 

#### Loops of eval_say_file_9/3 
* Loop 19: eval_say_file_9(V__once,V__verbose,B) [] 
* Loop 20: eval_say_file_9(V__once,V__verbose,B) [] 

### Ranking functions of CR eval_say_file_9(V__once,V__verbose,B) 

#### Partial ranking functions of CR eval_say_file_9(V__once,V__verbose,B) 


### Resulting Chains:eval_say_file_9(V__once,V__verbose,B) 
* [20]
* [19]...


### Merging Chains  eval_say_file_9/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_say_file_1/3 
* CE 3 is refined into CE [25] 
* CE 4 is refined into CE [26,27] 


#### Refined cost equations eval_say_file_1/3 
* CE 25: eval_say_file_1(V__once,V__verbose,B) = 0
     [] 
* CE 26: eval_say_file_1(V__once,V__verbose,B) = 0+ eval_say_file_9(V__once,V__verbose,B):1
     [] 
* CE 27: eval_say_file_1(V__once,V__verbose,B) = 0+ eval_say_file_9(V__once,V__verbose,B):2
     [] 

### Cost equations --> "Loop" of eval_say_file_1/3 
* CEs [27] --> Loop 21 
* CEs [25,26] --> Loop 22 

#### Loops of eval_say_file_1/3 
* Loop 21: eval_say_file_1(V__once,V__verbose,B) [] 
* Loop 22: eval_say_file_1(V__once,V__verbose,B) [] 

### Ranking functions of CR eval_say_file_1(V__once,V__verbose,B) 

#### Partial ranking functions of CR eval_say_file_1(V__once,V__verbose,B) 


### Resulting Chains:eval_say_file_1(V__once,V__verbose,B) 
* [22]
* [21]...


### Merging Chains  eval_say_file_1/3 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_say_file_start/3 
* CE 2 is refined into CE [28,29] 


#### Refined cost equations eval_say_file_start/3 
* CE 28: eval_say_file_start(V__once,V__verbose,B) = 0+ eval_say_file_1(V__once,V__verbose,B):1
     [] 
* CE 29: eval_say_file_start(V__once,V__verbose,B) = 0+ eval_say_file_1(V__once,V__verbose,B):2
     [] 

### Cost equations --> "Loop" of eval_say_file_start/3 
* CEs [29] --> Loop 23 
* CEs [28] --> Loop 24 

#### Loops of eval_say_file_start/3 
* Loop 23: eval_say_file_start(V__once,V__verbose,B) [] 
* Loop 24: eval_say_file_start(V__once,V__verbose,B) [] 

### Ranking functions of CR eval_say_file_start(V__once,V__verbose,B) 

#### Partial ranking functions of CR eval_say_file_start(V__once,V__verbose,B) 


### Resulting Chains:eval_say_file_start(V__once,V__verbose,B) 
* [24]
* [23]...


### Merging Chains  eval_say_file_start/3 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0,B,C,D,E) -> [eval_say_file_bb3_in(V__once',V__verbose',V_nlines_0',B',C',D',E')] 
1
#### Cost of phase [13]:eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0,B,C,D,E) -> [eval_say_file_bb3_in(V__once',V__verbose',V_nlines_0',B',C',D',E')] 
1*it(13)+0
  Such that:it(13) =< -V_nlines_0+500
it(13) =< -V_nlines_0+V_nlines_0'

#### Cost of phase [13]:eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0,B,C,D,E) -> [eval_say_file_bb3_in(V__once',V__verbose',V_nlines_0',B',C',D',E')] 
1*it(13)+0
  Such that:it(13) =< -V_nlines_0+500
it(13) =< -V_nlines_0+V_nlines_0'

#### Cost of chains of eval_say_file_bb3_in(V__once,V__verbose,V_nlines_0,B,C,D,E):
* Chain [[13],12]: 1*it(13)+0
  Such that:it(13) =< -V_nlines_0+500

  with precondition: [B=2,V__once=C,V__verbose=D,499>=V_nlines_0,V_nlines_0>=0] 

* Chain [[13],11]: 1*it(13)+0
  Such that:it(13) =< -V_nlines_0+500

  with precondition: [B=3,E=0,V__once=C,V__verbose=D,499>=V_nlines_0,V_nlines_0>=0] 

* Chain [12]: 0
  with precondition: [B=2,C=V__once,D=V__verbose,V_nlines_0>=0] 

* Chain [11]: 0
  with precondition: [B=3,E=0,C=V__once,D=V__verbose,V_nlines_0>=0] 


#### Cost of loops [14] 

 * loop 14:eval_say_file_bb7_in(V__once,V__verbose,V_loop_wrap1_0,B,C,D) -> [eval_say_file_bb7_in(V__once',V__verbose',V_loop_wrap1_0',B',C',D')] 
1
#### Cost of phase [14]:eval_say_file_bb7_in(V__once,V__verbose,V_loop_wrap1_0,B,C,D) -> [eval_say_file_bb7_in(V__once',V__verbose',V_loop_wrap1_0',B',C',D')] 
1*it(14)+0
#### Cost of phase [14]:eval_say_file_bb7_in(V__once,V__verbose,V_loop_wrap1_0,B,C,D) -> [eval_say_file_bb7_in(V__once',V__verbose',V_loop_wrap1_0',B',C',D')] 
1*it(14)+0
#### Cost of chains of eval_say_file_bb7_in(V__once,V__verbose,V_loop_wrap1_0,B,C,D):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [B=2] 

* Chain [[14],15]: 1*it(14)+0
  with precondition: [B=2,C=1,V__verbose=D] 

* Chain [15]: 0
  with precondition: [B=2,C=V__once,D=V__verbose] 


#### Cost of chains of loop_cont_eval_say_file_bb3_in(I,A,B,C,D):
* Chain [18]...: 1*s(3)+1
  with precondition: [I=3] 

* Chain [17]: 0
  with precondition: [I=2] 

* Chain [16]: 1*aux(1)+0
  with precondition: [I=3] 


#### Cost of chains of eval_say_file_9(V__once,V__verbose,B):
* Chain [20]: 1*aux(3)+0
  with precondition: [] 

* Chain [19]...: 1*s(8)+1*s(9)+2
  Such that:s(8) =< 500

  with precondition: [] 


#### Cost of chains of eval_say_file_1(V__once,V__verbose,B):
* Chain [22]: 1*aux(4)+0
  with precondition: [] 

* Chain [21]...: 1*s(11)+1*s(12)+2
  Such that:s(11) =< 500

  with precondition: [] 


#### Cost of chains of eval_say_file_start(V__once,V__verbose,B):
* Chain [24]: 1*s(13)+0
  with precondition: [] 

* Chain [23]...: 1*s(14)+1*s(15)+2
  Such that:s(14) =< 500

  with precondition: [] 


Closed-form bounds of eval_say_file_start(V__once,V__verbose,B): 
-------------------------------------
* Chain [24] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_say_file_start(V__once,V__verbose,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 36 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 35 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 26 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 152 ms.

