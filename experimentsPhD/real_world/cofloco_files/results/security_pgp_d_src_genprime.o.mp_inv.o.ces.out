Warning: Ignored call to eval_mp_inv_stop/1 in equation eval_mp_inv_106/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_mp_inv_18/3,eval_mp_inv_19/3,eval_mp_inv_34/3,eval_mp_inv_35/3,eval_mp_inv_36/3,eval_mp_inv_37/3,eval_mp_inv_53/4,eval_mp_inv_54/4,eval_mp_inv_60/4,eval_mp_inv_61/4,eval_mp_inv__critedge_in/3,eval_mp_inv_bb10_in/3,eval_mp_inv_bb12_in/4,eval_mp_inv_bb14_in/4,eval_mp_inv_bb1_in/3,eval_mp_inv_bb4_in/3,eval_mp_inv_bb6_in/3,eval_mp_inv_bb8_in/3]
1. non_recursive  : [eval_mp_inv_106/1]
2. non_recursive  : [eval_mp_inv_105/2]
3. non_recursive  : [eval_mp_inv_104/2]
4. non_recursive  : [eval_mp_inv_103/2]
5. non_recursive  : [eval_mp_inv_102/2]
6. non_recursive  : [eval_mp_inv_101/2]
7. non_recursive  : [eval_mp_inv_100/2]
8. non_recursive  : [eval_mp_inv_bb23_in/2]
9. non_recursive  : [eval_mp_inv_94/2]
10. non_recursive  : [eval_mp_inv_93/2]
11. non_recursive  : [eval_mp_inv_bb21_in/2]
12. non_recursive  : [eval_mp_inv_bb19_in/2]
13. non_recursive  : [eval_mp_inv_86/2]
14. non_recursive  : [eval_mp_inv_85/2]
15. non_recursive  : [eval_mp_inv_79/2]
16. non_recursive  : [eval_mp_inv_78/3]
17. non_recursive  : [eval_mp_inv_bb17_in/2]
18. non_recursive  : [loop_cont_eval_mp_inv_bb1_in/3]
19. non_recursive  : [eval_mp_inv_12/2]
20. non_recursive  : [eval_mp_inv_11/2]
21. non_recursive  : [eval_mp_inv_10/2]
22. non_recursive  : [eval_mp_inv_9/3]
23. non_recursive  : [eval_mp_inv_5/2]
24. non_recursive  : [eval_mp_inv_4/3]
25. non_recursive  : [eval_mp_inv_bb0_in/2]
26. non_recursive  : [eval_mp_inv_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_mp_inv_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_mp_inv_79/2
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_mp_inv_12/2
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_mp_inv_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mp_inv_bb1_in/3 
* CE 5 is refined into CE [7] 
* CE 4 is refined into CE [8] 


#### Refined cost equations eval_mp_inv_bb1_in/3 
* CE 7: eval_mp_inv_bb1_in(V__global_precision,B,C) = 1+ eval_mp_inv_bb1_in(V__global_precision,D,C)
     [D=2,B=2] 
* CE 8: eval_mp_inv_bb1_in(A,B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_mp_inv_bb1_in/3 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_mp_inv_bb1_in/3 
* Loop 6: eval_mp_inv_bb1_in(A,B,A) [B=2] 
* Loop 7: eval_mp_inv_bb1_in(V__global_precision,B,C)->  eval_mp_inv_bb1_in(V__global_precision,B',C)
                  [B'=2,B=2] 

### Ranking functions of CR eval_mp_inv_bb1_in(V__global_precision,B,C) 

#### Partial ranking functions of CR eval_mp_inv_bb1_in(V__global_precision,B,C) 


### Resulting Chains:eval_mp_inv_bb1_in(V__global_precision,B,C) 
* [[7]]...
* [[7],6]
* [6]


### Merging Chains  eval_mp_inv_bb1_in/3 into  External patterns of execution 
* [[6],[6,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_mp_inv_79/2 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_mp_inv_79/2 
* CE 9: eval_mp_inv_79(V__global_precision,B) = 0
     [] 

### Cost equations --> "Loop" of eval_mp_inv_79/2 
* CEs [9] --> Loop 8 

#### Loops of eval_mp_inv_79/2 
* Loop 8: eval_mp_inv_79(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_inv_79(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_inv_79(V__global_precision,B) 


### Resulting Chains:eval_mp_inv_79(V__global_precision,B) 
* [8]


### Merging Chains  eval_mp_inv_79/2 into  External patterns of execution 
* [[8]] --> 1 


### Specialization of cost equations eval_mp_inv_12/2 
* CE 3 is refined into CE [10,11] 


#### Refined cost equations eval_mp_inv_12/2 
* CE 10: eval_mp_inv_12(V__global_precision,B) = 1+ eval_mp_inv_bb1_in(V__global_precision,C,V__global_precision):1+ eval_mp_inv_79(V__global_precision,B):1
     [C=2] 
* CE 11: eval_mp_inv_12(V__global_precision,B) = 1+ eval_mp_inv_bb1_in(V__global_precision,C,D):2
     [C=2] 

### Cost equations --> "Loop" of eval_mp_inv_12/2 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_mp_inv_12/2 
* Loop 9: eval_mp_inv_12(V__global_precision,B) [] 
* Loop 10: eval_mp_inv_12(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_inv_12(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_inv_12(V__global_precision,B) 


### Resulting Chains:eval_mp_inv_12(V__global_precision,B) 
* [10]
* [9]...


### Merging Chains  eval_mp_inv_12/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_mp_inv_start/2 
* CE 2 is refined into CE [12,13] 


#### Refined cost equations eval_mp_inv_start/2 
* CE 12: eval_mp_inv_start(V__global_precision,B) = 0+ eval_mp_inv_12(V__global_precision,B):1
     [] 
* CE 13: eval_mp_inv_start(V__global_precision,B) = 0+ eval_mp_inv_12(V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_mp_inv_start/2 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_mp_inv_start/2 
* Loop 11: eval_mp_inv_start(V__global_precision,B) [] 
* Loop 12: eval_mp_inv_start(V__global_precision,B) [] 

### Ranking functions of CR eval_mp_inv_start(V__global_precision,B) 

#### Partial ranking functions of CR eval_mp_inv_start(V__global_precision,B) 


### Resulting Chains:eval_mp_inv_start(V__global_precision,B) 
* [12]
* [11]...


### Merging Chains  eval_mp_inv_start/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_mp_inv_bb1_in(V__global_precision,B,C) -> [eval_mp_inv_bb1_in(V__global_precision',B',C')] 
1
#### Cost of phase [7]:eval_mp_inv_bb1_in(V__global_precision,B,C) -> [eval_mp_inv_bb1_in(V__global_precision',B',C')] 
1*it(7)+0
#### Cost of phase [7]:eval_mp_inv_bb1_in(V__global_precision,B,C) -> [eval_mp_inv_bb1_in(V__global_precision',B',C')] 
1*it(7)+0
#### Cost of chains of eval_mp_inv_bb1_in(V__global_precision,B,C):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [B=2] 

* Chain [[7],6]: 1*it(7)+0
  with precondition: [B=2,V__global_precision=C] 

* Chain [6]: 0
  with precondition: [B=2,C=V__global_precision] 


#### Cost of chains of eval_mp_inv_79(V__global_precision,B):
* Chain [8]: 0
  with precondition: [] 


#### Cost of chains of eval_mp_inv_12(V__global_precision,B):
* Chain [10]: 1*s(2)+1
  with precondition: [] 

* Chain [9]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_mp_inv_start(V__global_precision,B):
* Chain [12]: 1*s(4)+1
  with precondition: [] 

* Chain [11]...: 1*s(5)+1
  with precondition: [] 


Closed-form bounds of eval_mp_inv_start(V__global_precision,B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mp_inv_start(V__global_precision,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 19 ms.
* Invariants computed in 3 ms.
   - Backward Invariants 1 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 8 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 6 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 61 ms.

