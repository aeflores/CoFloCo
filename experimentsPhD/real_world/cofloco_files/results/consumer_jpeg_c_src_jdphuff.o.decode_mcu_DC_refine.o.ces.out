Warning: Ignored call to eval_decode_mcu_DC_refine_stop/1 in equation eval_decode_mcu_DC_refine_bb12_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_decode_mcu_DC_refine_bb12_in/1]
1. recursive  : [eval_decode_mcu_DC_refine_22/4,eval_decode_mcu_DC_refine_23/4,eval_decode_mcu_DC_refine_bb10_in/7,eval_decode_mcu_DC_refine_bb4_in/4,eval_decode_mcu_DC_refine_bb8_in/6]
2. non_recursive  : [loop_cont_eval_decode_mcu_DC_refine_bb4_in/2]
3. non_recursive  : [eval_decode_mcu_DC_refine_bb3_in/1]
4. non_recursive  : [eval_decode_mcu_DC_refine_7/1]
5. non_recursive  : [eval_decode_mcu_DC_refine_6/1]
6. non_recursive  : [eval_decode_mcu_DC_refine_bb0_in/1]
7. non_recursive  : [eval_decode_mcu_DC_refine_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_decode_mcu_DC_refine_bb4_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_decode_mcu_DC_refine_bb3_in/1
4. SCC is partially evaluated into eval_decode_mcu_DC_refine_7/1
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_decode_mcu_DC_refine_bb0_in/1
7. SCC is partially evaluated into eval_decode_mcu_DC_refine_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_decode_mcu_DC_refine_bb4_in/4 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_decode_mcu_DC_refine_bb4_in/4 
* CE 10: eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 1+ eval_decode_mcu_DC_refine_bb4_in(C,D,E,F)
     [V_blkn_0>=0,V_blkn_0+1=E,F=2,B=2] 
* CE 11: eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) = 0
     [V_blkn_0>=0,B=2] 

### Cost equations --> "Loop" of eval_decode_mcu_DC_refine_bb4_in/4 
* CEs [11] --> Loop 7 
* CEs [10] --> Loop 8 

#### Loops of eval_decode_mcu_DC_refine_bb4_in/4 
* Loop 7: eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) [V_blkn_0>=0,B=2] 
* Loop 8: eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B)->  eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B')
                  [V_blkn_0>=0,V_blkn_0+1=V_blkn_0',B'=2,B=2] 

### Ranking functions of CR eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) 

#### Partial ranking functions of CR eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) 


### Resulting Chains:eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) 
* [[8]]...
* [[8],7]
* [7]


### Merging Chains  eval_decode_mcu_DC_refine_bb4_in/4 into  External patterns of execution 
* [[7],[7,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval_decode_mcu_DC_refine_bb3_in/1 
* CE 7 is refined into CE [12,13] 


#### Refined cost equations eval_decode_mcu_DC_refine_bb3_in/1 
* CE 12: eval_decode_mcu_DC_refine_bb3_in(B) = 1+ eval_decode_mcu_DC_refine_bb4_in(C,D,E,F):1
     [F=2,E=0] 
* CE 13: eval_decode_mcu_DC_refine_bb3_in(B) = 1+ eval_decode_mcu_DC_refine_bb4_in(C,D,E,F):2
     [F=2,E=0] 

### Cost equations --> "Loop" of eval_decode_mcu_DC_refine_bb3_in/1 
* CEs [13] --> Loop 9 
* CEs [12] --> Loop 10 

#### Loops of eval_decode_mcu_DC_refine_bb3_in/1 
* Loop 9: eval_decode_mcu_DC_refine_bb3_in(B) [] 
* Loop 10: eval_decode_mcu_DC_refine_bb3_in(B) [] 

### Ranking functions of CR eval_decode_mcu_DC_refine_bb3_in(B) 

#### Partial ranking functions of CR eval_decode_mcu_DC_refine_bb3_in(B) 


### Resulting Chains:eval_decode_mcu_DC_refine_bb3_in(B) 
* [10]
* [9]...


### Merging Chains  eval_decode_mcu_DC_refine_bb3_in/1 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_decode_mcu_DC_refine_7/1 
* CE 5 is refined into CE [14,15] 
* CE 6 is refined into CE [16] 


#### Refined cost equations eval_decode_mcu_DC_refine_7/1 
* CE 14: eval_decode_mcu_DC_refine_7(B) = 0+ eval_decode_mcu_DC_refine_bb3_in(B):1
     [] 
* CE 15: eval_decode_mcu_DC_refine_7(B) = 0+ eval_decode_mcu_DC_refine_bb3_in(B):2
     [] 
* CE 16: eval_decode_mcu_DC_refine_7(B) = 0
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_DC_refine_7/1 
* CEs [14,16] --> Loop 11 
* CEs [15] --> Loop 12 

#### Loops of eval_decode_mcu_DC_refine_7/1 
* Loop 11: eval_decode_mcu_DC_refine_7(B) [] 
* Loop 12: eval_decode_mcu_DC_refine_7(B) [] 

### Ranking functions of CR eval_decode_mcu_DC_refine_7(B) 

#### Partial ranking functions of CR eval_decode_mcu_DC_refine_7(B) 


### Resulting Chains:eval_decode_mcu_DC_refine_7(B) 
* [12]...
* [11]


### Merging Chains  eval_decode_mcu_DC_refine_7/1 into  External patterns of execution 
* [[11]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_decode_mcu_DC_refine_bb0_in/1 
* CE 3 is refined into CE [17,18] 
* CE 4 is refined into CE [19,20] 


#### Refined cost equations eval_decode_mcu_DC_refine_bb0_in/1 
* CE 17: eval_decode_mcu_DC_refine_bb0_in(B) = 0+ eval_decode_mcu_DC_refine_7(B):1
     [] 
* CE 18: eval_decode_mcu_DC_refine_bb0_in(B) = 0+ eval_decode_mcu_DC_refine_7(B):2
     [] 
* CE 19: eval_decode_mcu_DC_refine_bb0_in(B) = 0+ eval_decode_mcu_DC_refine_bb3_in(B):1
     [] 
* CE 20: eval_decode_mcu_DC_refine_bb0_in(B) = 0+ eval_decode_mcu_DC_refine_bb3_in(B):2
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_DC_refine_bb0_in/1 
* CEs [18,20] --> Loop 13 
* CEs [17,19] --> Loop 14 

#### Loops of eval_decode_mcu_DC_refine_bb0_in/1 
* Loop 13: eval_decode_mcu_DC_refine_bb0_in(B) [] 
* Loop 14: eval_decode_mcu_DC_refine_bb0_in(B) [] 

### Ranking functions of CR eval_decode_mcu_DC_refine_bb0_in(B) 

#### Partial ranking functions of CR eval_decode_mcu_DC_refine_bb0_in(B) 


### Resulting Chains:eval_decode_mcu_DC_refine_bb0_in(B) 
* [14]
* [13]...


### Merging Chains  eval_decode_mcu_DC_refine_bb0_in/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_decode_mcu_DC_refine_start/1 
* CE 2 is refined into CE [21,22] 


#### Refined cost equations eval_decode_mcu_DC_refine_start/1 
* CE 21: eval_decode_mcu_DC_refine_start(B) = 0+ eval_decode_mcu_DC_refine_bb0_in(B):1
     [] 
* CE 22: eval_decode_mcu_DC_refine_start(B) = 0+ eval_decode_mcu_DC_refine_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_DC_refine_start/1 
* CEs [22] --> Loop 15 
* CEs [21] --> Loop 16 

#### Loops of eval_decode_mcu_DC_refine_start/1 
* Loop 15: eval_decode_mcu_DC_refine_start(B) [] 
* Loop 16: eval_decode_mcu_DC_refine_start(B) [] 

### Ranking functions of CR eval_decode_mcu_DC_refine_start(B) 

#### Partial ranking functions of CR eval_decode_mcu_DC_refine_start(B) 


### Resulting Chains:eval_decode_mcu_DC_refine_start(B) 
* [16]
* [15]...


### Merging Chains  eval_decode_mcu_DC_refine_start/1 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) -> [eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B')] 
1
#### Cost of phase [8]:eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) -> [eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B')] 
1*it(8)+0
#### Cost of phase [8]:eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B) -> [eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0',V_get_buffer_0',V_blkn_0',B')] 
1*it(8)+0
#### Cost of chains of eval_decode_mcu_DC_refine_bb4_in(V_bits_left_0,V_get_buffer_0,V_blkn_0,B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [V_blkn_0>=0,B=2] 

* Chain [[8],7]: 1*it(8)+0
  with precondition: [B=2,V_blkn_0>=0] 

* Chain [7]: 0
  with precondition: [B=2,V_blkn_0>=0] 


#### Cost of chains of eval_decode_mcu_DC_refine_bb3_in(B):
* Chain [10]: 1*s(2)+1
  with precondition: [] 

* Chain [9]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_decode_mcu_DC_refine_7(B):
* Chain [12]...: 1*s(4)+1
  with precondition: [] 

* Chain [11]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_decode_mcu_DC_refine_bb0_in(B):
* Chain [14]: 1*aux(3)+0
  with precondition: [] 

* Chain [13]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_decode_mcu_DC_refine_start(B):
* Chain [16]: 1*s(10)+0
  with precondition: [] 

* Chain [15]...: 1*s(11)+0
  with precondition: [] 


Closed-form bounds of eval_decode_mcu_DC_refine_start(B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_decode_mcu_DC_refine_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 9 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 7 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 50 ms.

