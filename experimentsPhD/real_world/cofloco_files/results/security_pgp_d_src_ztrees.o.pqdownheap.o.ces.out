Warning: Ignored call to eval_pqdownheap_stop/1 in equation eval_pqdownheap_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_pqdownheap_bb10_in/3,eval_pqdownheap_bb1_in/3,eval_pqdownheap_bb6_in/3,eval_pqdownheap_bb7_in/3]
1. non_recursive  : [eval_pqdownheap_bb11_in/1]
2. non_recursive  : [loop_cont_eval_pqdownheap_bb1_in/2]
3. non_recursive  : [eval_pqdownheap_bb0_in/2]
4. non_recursive  : [eval_pqdownheap_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_pqdownheap_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_pqdownheap_bb0_in/2
4. SCC is partially evaluated into eval_pqdownheap_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_pqdownheap_bb1_in/3 
* CE 4 is refined into CE [7] 
* CE 6 is refined into CE [8] 
* CE 5 is refined into CE [9] 


#### Refined cost equations eval_pqdownheap_bb1_in/3 
* CE 7: eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) = 0
     [V__heap_len>=V_j_0,B=2] 
* CE 8: eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) = 0
     [V_j_0>=V__heap_len+1,B=2] 
* CE 9: eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) = 1+ eval_pqdownheap_bb1_in(V__heap_len,C,D)
     [V__heap_len>=V_j_0,D=2,B=2] 

### Cost equations --> "Loop" of eval_pqdownheap_bb1_in/3 
* CEs [9] --> Loop 6 
* CEs [7] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_pqdownheap_bb1_in/3 
* Loop 6: eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B)->  eval_pqdownheap_bb1_in(V__heap_len,V_j_0',B')
                  [V__heap_len>=V_j_0,B'=2,B=2] 
* Loop 7: eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) [V__heap_len>=V_j_0,B=2] 
* Loop 8: eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) [V_j_0>=V__heap_len+1,B=2] 

### Ranking functions of CR eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) 

#### Partial ranking functions of CR eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) 


### Resulting Chains:eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) 
* [[6]]...
* [[6],8]
* [[6],7]
* [8]
* [7]


### Merging Chains  eval_pqdownheap_bb1_in/3 into  External patterns of execution 
* [[8]] --> 1 
* [[7],[7,[6]],[8,[6]]] --> 2 
* [[[6]]] --> 3 


### Specialization of cost equations eval_pqdownheap_bb0_in/2 
* CE 3 is refined into CE [10,11,12] 


#### Refined cost equations eval_pqdownheap_bb0_in/2 
* CE 10: eval_pqdownheap_bb0_in(V__heap_len,B) = 1+ eval_pqdownheap_bb1_in(V__heap_len,C,D):1
     [C>=V__heap_len+1,D=2] 
* CE 11: eval_pqdownheap_bb0_in(V__heap_len,B) = 1+ eval_pqdownheap_bb1_in(V__heap_len,C,D):2
     [V__heap_len>=C,D=2] 
* CE 12: eval_pqdownheap_bb0_in(V__heap_len,B) = 1+ eval_pqdownheap_bb1_in(V__heap_len,C,D):3
     [V__heap_len>=C,D=2] 

### Cost equations --> "Loop" of eval_pqdownheap_bb0_in/2 
* CEs [12] --> Loop 9 
* CEs [10,11] --> Loop 10 

#### Loops of eval_pqdownheap_bb0_in/2 
* Loop 9: eval_pqdownheap_bb0_in(V__heap_len,B) [] 
* Loop 10: eval_pqdownheap_bb0_in(V__heap_len,B) [] 

### Ranking functions of CR eval_pqdownheap_bb0_in(V__heap_len,B) 

#### Partial ranking functions of CR eval_pqdownheap_bb0_in(V__heap_len,B) 


### Resulting Chains:eval_pqdownheap_bb0_in(V__heap_len,B) 
* [10]
* [9]...


### Merging Chains  eval_pqdownheap_bb0_in/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_pqdownheap_start/3 
* CE 2 is refined into CE [13,14] 


#### Refined cost equations eval_pqdownheap_start/3 
* CE 13: eval_pqdownheap_start(V_k,V__heap_len,B) = 0+ eval_pqdownheap_bb0_in(V__heap_len,B):1
     [] 
* CE 14: eval_pqdownheap_start(V_k,V__heap_len,B) = 0+ eval_pqdownheap_bb0_in(V__heap_len,B):2
     [] 

### Cost equations --> "Loop" of eval_pqdownheap_start/3 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_pqdownheap_start/3 
* Loop 11: eval_pqdownheap_start(V_k,V__heap_len,B) [] 
* Loop 12: eval_pqdownheap_start(V_k,V__heap_len,B) [] 

### Ranking functions of CR eval_pqdownheap_start(V_k,V__heap_len,B) 

#### Partial ranking functions of CR eval_pqdownheap_start(V_k,V__heap_len,B) 


### Resulting Chains:eval_pqdownheap_start(V_k,V__heap_len,B) 
* [12]
* [11]...


### Merging Chains  eval_pqdownheap_start/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) -> [eval_pqdownheap_bb1_in(V__heap_len',V_j_0',B')] 
1
#### Cost of phase [6]:eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) -> [eval_pqdownheap_bb1_in(V__heap_len',V_j_0',B')] 
1*it(6)+0
#### Cost of phase [6]:eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) -> [eval_pqdownheap_bb1_in(V__heap_len',V_j_0',B')] 
1*it(6)+0
#### Cost of phase [6]:eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B) -> [eval_pqdownheap_bb1_in(V__heap_len',V_j_0',B')] 
1*it(6)+0
#### Cost of chains of eval_pqdownheap_bb1_in(V__heap_len,V_j_0,B):
* Chain [[6]]...: 1*it(6)+0
  with precondition: [V__heap_len>=V_j_0,B=2] 

* Chain [[6],8]: 1*it(6)+0
  with precondition: [B=2,V__heap_len>=V_j_0] 

* Chain [[6],7]: 1*it(6)+0
  with precondition: [B=2,V__heap_len>=V_j_0] 

* Chain [8]: 0
  with precondition: [B=2,V_j_0>=V__heap_len+1] 

* Chain [7]: 0
  with precondition: [B=2,V__heap_len>=V_j_0] 


#### Cost of chains of eval_pqdownheap_bb0_in(V__heap_len,B):
* Chain [10]: 1*aux(2)+0
  with precondition: [] 

* Chain [9]...: 1*s(4)+1
  with precondition: [] 


#### Cost of chains of eval_pqdownheap_start(V_k,V__heap_len,B):
* Chain [12]: 1*s(5)+0
  with precondition: [] 

* Chain [11]...: 1*s(6)+1
  with precondition: [] 


Closed-form bounds of eval_pqdownheap_start(V_k,V__heap_len,B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_pqdownheap_start(V_k,V__heap_len,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 9 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 8 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 40 ms.

