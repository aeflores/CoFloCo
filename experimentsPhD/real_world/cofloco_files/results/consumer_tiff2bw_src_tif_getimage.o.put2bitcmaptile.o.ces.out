Warning: Ignored call to eval_put2bitcmaptile_stop/1 in equation loop_cont_eval_put2bitcmaptile_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_put2bitcmaptile_bb2_in/9]
1. recursive  : [eval_put2bitcmaptile_NewDefault_in/5,eval_put2bitcmaptile_bb1_in/3,eval_put2bitcmaptile_bb7_in/5,eval_put2bitcmaptile_bb8_in/5,eval_put2bitcmaptile_bb9_in/5,loop_cont_eval_put2bitcmaptile_bb2_in/6]
2. non_recursive  : [loop_cont_eval_put2bitcmaptile_bb1_in/2]
3. non_recursive  : [eval_put2bitcmaptile_bb0_in/4]
4. non_recursive  : [eval_put2bitcmaptile_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_put2bitcmaptile_bb2_in/9
1. SCC is partially evaluated into eval_put2bitcmaptile_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_put2bitcmaptile_bb0_in/4
4. SCC is partially evaluated into eval_put2bitcmaptile_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_put2bitcmaptile_bb2_in/9 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 
* CE 12 is refined into CE [19] 
* CE 11 is refined into CE [20] 


#### Refined cost equations eval_put2bitcmaptile_bb2_in/9 
* CE 16: eval_put2bitcmaptile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,3>=D,C+1=F,C+1=B,E=5] 
* CE 17: eval_put2bitcmaptile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,3>=D,C+1=F,C+1=B,E=4] 
* CE 18: eval_put2bitcmaptile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,3>=D,C+1=F,C+1=B,E=3] 
* CE 19: eval_put2bitcmaptile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,3>=D,C+1=F,C+1=B,E=2] 
* CE 20: eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) = 1+ eval_put2bitcmaptile_bb2_in(V_w,G,V_3,H,B,C,D,E,F)
     [V_w>=V__x_0,B>=2,V__x_0>=4,V_3>=0,5>=B,V__x_0=H+4,V_3+1=G,V_3+1=V__01] 

### Cost equations --> "Loop" of eval_put2bitcmaptile_bb2_in/9 
* CEs [20] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 

#### Loops of eval_put2bitcmaptile_bb2_in/9 
* Loop 12: eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F)->  eval_put2bitcmaptile_bb2_in(V_w,V__01',V_3,V__x_0',B,C,D,E,F)
                  [V_w>=V__x_0,B>=2,V__x_0>=4,V_3>=0,5>=B,V__x_0=V__x_0'+4,V_3+1=V__01',V_3+1=V__01] 
* Loop 13: eval_put2bitcmaptile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,3>=D,B=F+1,B=C+1,E=5] 
* Loop 14: eval_put2bitcmaptile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,3>=D,B=F+1,B=C+1,E=4] 
* Loop 15: eval_put2bitcmaptile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,3>=D,B=F+1,B=C+1,E=3] 
* Loop 16: eval_put2bitcmaptile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,3>=D,B=F+1,B=C+1,E=2] 

### Ranking functions of CR eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) 
* RF of phase [12]: [V__x_0/4-3/4]

#### Partial ranking functions of CR eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V__x_0/4-3/4


### Resulting Chains:eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) 
* [[12],16]
* [[12],15]
* [[12],14]
* [[12],13]
* [16]
* [15]
* [14]
* [13]


### Merging Chains  eval_put2bitcmaptile_bb2_in/9 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[12]]] --> 2 
* [[15]] --> 3 
* [[15,[12]]] --> 4 
* [[14]] --> 5 
* [[14,[12]]] --> 6 
* [[13]] --> 7 
* [[13,[12]]] --> 8 


### Specialization of cost equations eval_put2bitcmaptile_bb1_in/3 
* CE 10 is refined into CE [21] 
* CE 6 is refined into CE [22,23] 
* CE 7 is refined into CE [24,25] 
* CE 8 is refined into CE [26,27] 
* CE 9 is refined into CE [28,29] 


#### Refined cost equations eval_put2bitcmaptile_bb1_in/3 
* CE 21: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) = 0
     [0>=V__01,B=6] 
* CE 22: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put2bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):7+ eval_put2bitcmaptile_bb1_in(V_w,D,G)
     [D>=0,3>=V_w,D+1=F,D+1=C,D+1=V__01,G=6,E=5,B=6] 
* CE 23: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put2bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):8+ eval_put2bitcmaptile_bb1_in(V_w,D,H)
     [V_w>=G+4,G>=0,D>=0,3>=G,D+1=F,D+1=C,D+1=V__01,H=6,E=5,B=6] 
* CE 24: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put2bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):3+ eval_put2bitcmaptile_bb1_in(V_w,D,G)
     [D>=0,3>=V_w,D+1=F,D+1=C,D+1=V__01,G=6,E=3,B=6] 
* CE 25: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put2bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):4+ eval_put2bitcmaptile_bb1_in(V_w,D,H)
     [V_w>=G+4,G>=0,D>=0,3>=G,D+1=F,D+1=C,D+1=V__01,H=6,E=3,B=6] 
* CE 26: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put2bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):1+ eval_put2bitcmaptile_bb1_in(V_w,D,G)
     [D>=0,3>=V_w,D+1=F,D+1=C,D+1=V__01,G=6,E=2,B=6] 
* CE 27: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put2bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):2+ eval_put2bitcmaptile_bb1_in(V_w,D,H)
     [V_w>=G+4,G>=0,D>=0,3>=G,D+1=F,D+1=C,D+1=V__01,H=6,E=2,B=6] 
* CE 28: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put2bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):5+ eval_put2bitcmaptile_bb1_in(V_w,D,G)
     [D>=0,3>=V_w,D+1=F,D+1=C,D+1=V__01,G=6,E=4,B=6] 
* CE 29: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) = 2+ eval_put2bitcmaptile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):6+ eval_put2bitcmaptile_bb1_in(V_w,D,H)
     [V_w>=G+4,G>=0,D>=0,3>=G,D+1=F,D+1=C,D+1=V__01,H=6,E=4,B=6] 

### Cost equations --> "Loop" of eval_put2bitcmaptile_bb1_in/3 
* CEs [23,25,27,29] --> Loop 17 
* CEs [22,24,26,28] --> Loop 18 
* CEs [21] --> Loop 19 

#### Loops of eval_put2bitcmaptile_bb1_in/3 
* Loop 17: eval_put2bitcmaptile_bb1_in(V_w,V__01,B)->  eval_put2bitcmaptile_bb1_in(V_w,V__01',B')
                  [V__01>=1,V_w>=4,V__01=V__01'+1,B'=6,B=6] 
* Loop 18: eval_put2bitcmaptile_bb1_in(V_w,V__01,B)->  eval_put2bitcmaptile_bb1_in(V_w,V__01',B')
                  [V__01>=1,3>=V_w,V__01=V__01'+1,B'=6,B=6] 
* Loop 19: eval_put2bitcmaptile_bb1_in(V_w,V__01,B) [0>=V__01,B=6] 

### Ranking functions of CR eval_put2bitcmaptile_bb1_in(V_w,V__01,B) 
* RF of phase [17]: [V__01]
* RF of phase [18]: [V__01]

#### Partial ranking functions of CR eval_put2bitcmaptile_bb1_in(V_w,V__01,B) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V__01
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V__01


### Resulting Chains:eval_put2bitcmaptile_bb1_in(V_w,V__01,B) 
* [[18],19]
* [[17],19]
* [19]


### Merging Chains  eval_put2bitcmaptile_bb1_in/3 into  External patterns of execution 
* [[19,[18]]] --> 1 
* [[19]] --> 2 
* [[19,[17]]] --> 3 


### Specialization of cost equations eval_put2bitcmaptile_bb0_in/4 
* CE 4 is refined into CE [30,31,32] 
* CE 5 is refined into CE [33,34,35] 
* CE 3 is refined into CE [36,37,38] 


#### Refined cost equations eval_put2bitcmaptile_bb0_in/4 
* CE 30: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put2bitcmaptile_bb1_in(V_w,V_h,C):1
     [V_h>=1,V_fromskew>=1,3>=V_w,C=6] 
* CE 31: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put2bitcmaptile_bb1_in(V_w,V_h,C):2
     [V_fromskew>=1,0>=V_h,C=6] 
* CE 32: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put2bitcmaptile_bb1_in(V_w,V_h,C):3
     [V_h>=1,V_w>=4,V_fromskew>=1,C=6] 
* CE 33: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put2bitcmaptile_bb1_in(V_w,V_h,C):1
     [V_h>=1,3>=V_w,0>=V_fromskew+1,C=6] 
* CE 34: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put2bitcmaptile_bb1_in(V_w,V_h,C):2
     [0>=V_h,0>=V_fromskew+1,C=6] 
* CE 35: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put2bitcmaptile_bb1_in(V_w,V_h,C):3
     [V_h>=1,V_w>=4,0>=V_fromskew+1,C=6] 
* CE 36: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put2bitcmaptile_bb1_in(V_w,V_h,C):1
     [V_h>=1,3>=V_w,C=6,V_fromskew=0] 
* CE 37: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put2bitcmaptile_bb1_in(V_w,V_h,C):2
     [0>=V_h,C=6,V_fromskew=0] 
* CE 38: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) = 1+ eval_put2bitcmaptile_bb1_in(V_w,V_h,C):3
     [V_h>=1,V_w>=4,C=6,V_fromskew=0] 

### Cost equations --> "Loop" of eval_put2bitcmaptile_bb0_in/4 
* CEs [32] --> Loop 20 
* CEs [35] --> Loop 21 
* CEs [31] --> Loop 22 
* CEs [34] --> Loop 23 
* CEs [30] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [38] --> Loop 26 
* CEs [37] --> Loop 27 
* CEs [36] --> Loop 28 

#### Loops of eval_put2bitcmaptile_bb0_in/4 
* Loop 20: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_fromskew>=1,V_h>=1,V_w>=4] 
* Loop 21: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_h>=1,V_w>=4,0>=V_fromskew+1] 
* Loop 22: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_fromskew>=1,0>=V_h] 
* Loop 23: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [0>=V_fromskew+1,0>=V_h] 
* Loop 24: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_fromskew>=1,V_h>=1,3>=V_w] 
* Loop 25: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_h>=1,0>=V_fromskew+1,3>=V_w] 
* Loop 26: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_h>=1,V_w>=4,V_fromskew=0] 
* Loop 27: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [0>=V_h,V_fromskew=0] 
* Loop 28: eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) [V_h>=1,3>=V_w,V_fromskew=0] 

### Ranking functions of CR eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) 

#### Partial ranking functions of CR eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) 


### Resulting Chains:eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B) 
* [28]
* [27]
* [26]
* [25]
* [24]
* [23]
* [22]
* [21]
* [20]


### Merging Chains  eval_put2bitcmaptile_bb0_in/4 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[26]] --> 3 
* [[25]] --> 4 
* [[24]] --> 5 
* [[23]] --> 6 
* [[22]] --> 7 
* [[21]] --> 8 
* [[20]] --> 9 


### Specialization of cost equations eval_put2bitcmaptile_start/7 
* CE 2 is refined into CE [39,40,41,42,43,44,45,46,47] 


#### Refined cost equations eval_put2bitcmaptile_start/7 
* CE 39: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put2bitcmaptile_bb0_in(V_w,V_h,C,B):1
     [V_h>=1,3>=V_w,C=0,V_fromskew=0] 
* CE 40: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put2bitcmaptile_bb0_in(V_w,V_h,C,B):2
     [0>=V_h,C=0,V_fromskew=0] 
* CE 41: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put2bitcmaptile_bb0_in(V_w,V_h,C,B):3
     [V_h>=1,V_w>=4,C=0,V_fromskew=0] 
* CE 42: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):4
     [V_h>=1,0>=V_fromskew+1,3>=V_w] 
* CE 43: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):5
     [V_fromskew>=1,V_h>=1,3>=V_w] 
* CE 44: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):6
     [0>=V_fromskew+1,0>=V_h] 
* CE 45: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):7
     [V_fromskew>=1,0>=V_h] 
* CE 46: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):8
     [V_h>=1,V_w>=4,0>=V_fromskew+1] 
* CE 47: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):9
     [V_fromskew>=1,V_h>=1,V_w>=4] 

### Cost equations --> "Loop" of eval_put2bitcmaptile_start/7 
* CEs [47] --> Loop 29 
* CEs [46] --> Loop 30 
* CEs [45] --> Loop 31 
* CEs [44] --> Loop 32 
* CEs [43] --> Loop 33 
* CEs [42] --> Loop 34 
* CEs [41] --> Loop 35 
* CEs [40] --> Loop 36 
* CEs [39] --> Loop 37 

#### Loops of eval_put2bitcmaptile_start/7 
* Loop 29: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_fromskew>=1,V_h>=1,V_w>=4] 
* Loop 30: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,V_w>=4,0>=V_fromskew+1] 
* Loop 31: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_fromskew>=1,0>=V_h] 
* Loop 32: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [0>=V_fromskew+1,0>=V_h] 
* Loop 33: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_fromskew>=1,V_h>=1,3>=V_w] 
* Loop 34: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,0>=V_fromskew+1,3>=V_w] 
* Loop 35: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,V_w>=4,V_fromskew=0] 
* Loop 36: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [0>=V_h,V_fromskew=0] 
* Loop 37: eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,3>=V_w,V_fromskew=0] 

### Ranking functions of CR eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 

#### Partial ranking functions of CR eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 


### Resulting Chains:eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 
* [37]
* [36]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]
* [29]


### Merging Chains  eval_put2bitcmaptile_start/7 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 
* [[35]] --> 3 
* [[34]] --> 4 
* [[33]] --> 5 
* [[32]] --> 6 
* [[31]] --> 7 
* [[30]] --> 8 
* [[29]] --> 9 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) -> [eval_put2bitcmaptile_bb2_in(V_w',V__01',V_3',V__x_0',B',C',D',E',F')] 
1
#### Cost of phase [12]:eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) -> [eval_put2bitcmaptile_bb2_in(V_w',V__01',V_3',V__x_0',B',C',D',E',F')] 
1*it(12)+0
  Such that:it(12) =< V__x_0/4
it(12) =< V__x_0/4-V__x_0'/4

#### Cost of phase [12]:eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) -> [eval_put2bitcmaptile_bb2_in(V_w',V__01',V_3',V__x_0',B',C',D',E',F')] 
1*it(12)+0
  Such that:it(12) =< V__x_0/4
it(12) =< V__x_0/4-V__x_0'/4

#### Cost of phase [12]:eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) -> [eval_put2bitcmaptile_bb2_in(V_w',V__01',V_3',V__x_0',B',C',D',E',F')] 
1*it(12)+0
  Such that:it(12) =< V__x_0/4
it(12) =< V__x_0/4-V__x_0'/4

#### Cost of phase [12]:eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F) -> [eval_put2bitcmaptile_bb2_in(V_w',V__01',V_3',V__x_0',B',C',D',E',F')] 
1*it(12)+0
  Such that:it(12) =< V__x_0/4
it(12) =< V__x_0/4-V__x_0'/4

#### Cost of chains of eval_put2bitcmaptile_bb2_in(V_w,V__01,V_3,V__x_0,B,C,D,E,F):
* Chain [[12],16]: 1*it(12)+0
  Such that:it(12) =< V__x_0/4-F/4

  with precondition: [B=2,V__01=V_3+1,V_w=C,V__01=D,V__01=E+1,3>=F,V__01>=1,F>=0,V_w>=V__x_0,V__x_0>=F+4] 

* Chain [[12],15]: 1*it(12)+0
  Such that:it(12) =< V__x_0/4-F/4

  with precondition: [B=3,V__01=V_3+1,V_w=C,V__01=D,V__01=E+1,3>=F,V__01>=1,F>=0,V_w>=V__x_0,V__x_0>=F+4] 

* Chain [[12],14]: 1*it(12)+0
  Such that:it(12) =< V__x_0/4-F/4

  with precondition: [B=4,V__01=V_3+1,V_w=C,V__01=D,V__01=E+1,3>=F,V__01>=1,F>=0,V_w>=V__x_0,V__x_0>=F+4] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V__x_0/4-F/4

  with precondition: [B=5,V__01=V_3+1,V_w=C,V__01=D,V__01=E+1,3>=F,V__01>=1,F>=0,V_w>=V__x_0,V__x_0>=F+4] 

* Chain [16]: 0
  with precondition: [B=2,V_3+1=V__01,V_w=C,V_3+1=D,V_3=E,V__x_0=F,3>=V__x_0,V_3>=0,V_w>=V__x_0] 

* Chain [15]: 0
  with precondition: [B=3,V_3+1=V__01,V_w=C,V_3+1=D,V_3=E,V__x_0=F,3>=V__x_0,V_3>=0,V_w>=V__x_0] 

* Chain [14]: 0
  with precondition: [B=4,V_3+1=V__01,V_w=C,V_3+1=D,V_3=E,V__x_0=F,3>=V__x_0,V_3>=0,V_w>=V__x_0] 

* Chain [13]: 0
  with precondition: [B=5,V_3+1=V__01,V_w=C,V_3+1=D,V_3=E,V__x_0=F,3>=V__x_0,V_3>=0,V_w>=V__x_0] 


#### Cost of loops [18] 

 * loop 18:eval_put2bitcmaptile_bb1_in(V_w,V__01,B) -> [eval_put2bitcmaptile_bb1_in(V_w',V__01',B')] 
2
#### Cost of phase [18]:eval_put2bitcmaptile_bb1_in(V_w,V__01,B) -> [eval_put2bitcmaptile_bb1_in(V_w',V__01',B')] 
2*it(18)+0
  Such that:it(18) =< V__01
it(18) =< V__01-V__01'

#### Cost of loops [17] 

 * loop 17:eval_put2bitcmaptile_bb1_in(V_w,V__01,B) -> [eval_put2bitcmaptile_bb1_in(V_w',V__01',B')] 
4*s(6)+2
  Such that:s(5) =< V_w'/4
s(6) =< s(5)

#### Cost of phase [17]:eval_put2bitcmaptile_bb1_in(V_w,V__01,B) -> [eval_put2bitcmaptile_bb1_in(V_w',V__01',B')] 
2*it(17)+4*s(7)+0
  Such that:aux(2) =< V_w/4
it(17) =< V__01
it(17) =< V__01-V__01'
s(8) =< it(17)*aux(2)
s(7) =< s(8)

#### Cost of chains of eval_put2bitcmaptile_bb1_in(V_w,V__01,B):
* Chain [[18],19]: 2*it(18)+0
  Such that:it(18) =< V__01

  with precondition: [B=6,3>=V_w,V__01>=1] 

* Chain [[17],19]: 2*it(17)+4*s(7)+0
  Such that:aux(2) =< V_w/4
it(17) =< V__01
s(8) =< it(17)*aux(2)
s(7) =< s(8)

  with precondition: [B=6,V_w>=4,V__01>=1] 

* Chain [19]: 0
  with precondition: [B=6,0>=V__01] 


#### Cost of chains of eval_put2bitcmaptile_bb0_in(V_w,V_h,V_fromskew,B):
* Chain [28]: 2*s(9)+1
  Such that:s(9) =< V_h

  with precondition: [V_fromskew=0,3>=V_w,V_h>=1] 

* Chain [27]: 1
  with precondition: [V_fromskew=0,0>=V_h] 

* Chain [26]: 2*s(11)+4*s(13)+1
  Such that:s(10) =< V_w/4
s(11) =< V_h
s(12) =< s(11)*s(10)
s(13) =< s(12)

  with precondition: [V_fromskew=0,V_w>=4,V_h>=1] 

* Chain [25]: 2*s(14)+1
  Such that:s(14) =< V_h

  with precondition: [3>=V_w,0>=V_fromskew+1,V_h>=1] 

* Chain [24]: 2*s(15)+1
  Such that:s(15) =< V_h

  with precondition: [3>=V_w,V_h>=1,V_fromskew>=1] 

* Chain [23]: 1
  with precondition: [0>=V_h,0>=V_fromskew+1] 

* Chain [22]: 1
  with precondition: [0>=V_h,V_fromskew>=1] 

* Chain [21]: 2*s(17)+4*s(19)+1
  Such that:s(16) =< V_w/4
s(17) =< V_h
s(18) =< s(17)*s(16)
s(19) =< s(18)

  with precondition: [0>=V_fromskew+1,V_w>=4,V_h>=1] 

* Chain [20]: 2*s(21)+4*s(23)+1
  Such that:s(20) =< V_w/4
s(21) =< V_h
s(22) =< s(21)*s(20)
s(23) =< s(22)

  with precondition: [V_w>=4,V_h>=1,V_fromskew>=1] 


#### Cost of chains of eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B):
* Chain [37]: 2*s(24)+1
  Such that:s(24) =< V_h

  with precondition: [V_fromskew=0,3>=V_w,V_h>=1] 

* Chain [36]: 1
  with precondition: [V_fromskew=0,0>=V_h] 

* Chain [35]: 2*s(26)+4*s(28)+1
  Such that:s(25) =< V_w/4
s(26) =< V_h
s(27) =< s(26)*s(25)
s(28) =< s(27)

  with precondition: [V_fromskew=0,V_w>=4,V_h>=1] 

* Chain [34]: 2*s(29)+1
  Such that:s(29) =< V_h

  with precondition: [3>=V_w,0>=V_fromskew+1,V_h>=1] 

* Chain [33]: 2*s(30)+1
  Such that:s(30) =< V_h

  with precondition: [3>=V_w,V_h>=1,V_fromskew>=1] 

* Chain [32]: 1
  with precondition: [0>=V_h,0>=V_fromskew+1] 

* Chain [31]: 1
  with precondition: [0>=V_h,V_fromskew>=1] 

* Chain [30]: 2*s(32)+4*s(34)+1
  Such that:s(31) =< V_w/4
s(32) =< V_h
s(33) =< s(32)*s(31)
s(34) =< s(33)

  with precondition: [0>=V_fromskew+1,V_w>=4,V_h>=1] 

* Chain [29]: 2*s(36)+4*s(38)+1
  Such that:s(35) =< V_w/4
s(36) =< V_h
s(37) =< s(36)*s(35)
s(38) =< s(37)

  with precondition: [V_w>=4,V_h>=1,V_fromskew>=1] 


Closed-form bounds of eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): 
-------------------------------------
* Chain [37] with precondition: [V_fromskew=0,3>=V_w,V_h>=1] 
    - Upper bound: 2*V_h+1 
    - Complexity: n 
* Chain [36] with precondition: [V_fromskew=0,0>=V_h] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [35] with precondition: [V_fromskew=0,V_w>=4,V_h>=1] 
    - Upper bound: 2*V_h+1+V_w/4* (4*V_h) 
    - Complexity: n^2 
* Chain [34] with precondition: [3>=V_w,0>=V_fromskew+1,V_h>=1] 
    - Upper bound: 2*V_h+1 
    - Complexity: n 
* Chain [33] with precondition: [3>=V_w,V_h>=1,V_fromskew>=1] 
    - Upper bound: 2*V_h+1 
    - Complexity: n 
* Chain [32] with precondition: [0>=V_h,0>=V_fromskew+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [31] with precondition: [0>=V_h,V_fromskew>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [30] with precondition: [0>=V_fromskew+1,V_w>=4,V_h>=1] 
    - Upper bound: 2*V_h+1+V_w/4* (4*V_h) 
    - Complexity: n^2 
* Chain [29] with precondition: [V_w>=4,V_h>=1,V_fromskew>=1] 
    - Upper bound: 2*V_h+1+V_w/4* (4*V_h) 
    - Complexity: n^2 

### Maximum cost of eval_put2bitcmaptile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): nat(V_h)*4*nat(V_w/4)+nat(V_h)*2+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 144 ms.
* Invariants computed in 171 ms.
   - Backward Invariants 113 ms.
   - Transitive Invariants 19 ms.
* Refinement performed in 358 ms.
* Termination proved in 22 ms.
* Upper bounds computed in 348 ms.
   - Equation cost structures 148 ms.
   - Phase cost structures 106 ms.
   - Chain cost structures 101 ms.
   - Solving cost expressions 8 ms.
* Total analysis performed in 1196 ms.

