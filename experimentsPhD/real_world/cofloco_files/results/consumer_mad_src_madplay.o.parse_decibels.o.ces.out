Warning: Ignored call to eval_parse_decibels_stop/1 in equation eval_parse_decibels_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_parse_decibels_bb1_in/1]
1. recursive  : [eval_parse_decibels_bb5_in/1]
2. non_recursive  : [eval_parse_decibels_bb7_in/1]
3. non_recursive  : [loop_cont_eval_parse_decibels_bb5_in/2]
4. non_recursive  : [eval_parse_decibels_18/1]
5. non_recursive  : [eval_parse_decibels_17/1]
6. non_recursive  : [eval_parse_decibels_15/1]
7. non_recursive  : [eval_parse_decibels_14/1]
8. non_recursive  : [loop_cont_eval_parse_decibels_bb1_in/2]
9. non_recursive  : [eval_parse_decibels_4/1]
10. non_recursive  : [eval_parse_decibels_3/1]
11. non_recursive  : [eval_parse_decibels_2/1]
12. non_recursive  : [eval_parse_decibels_1/1]
13. non_recursive  : [eval_parse_decibels_bb0_in/1]
14. non_recursive  : [eval_parse_decibels_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_parse_decibels_bb1_in/1
1. SCC is partially evaluated into eval_parse_decibels_bb5_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_parse_decibels_18/1
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_parse_decibels_15/1
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_parse_decibels_4/1
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_parse_decibels_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_parse_decibels_bb1_in/1 
* CE 5 is refined into CE [11] 
* CE 4 is refined into CE [12] 


#### Refined cost equations eval_parse_decibels_bb1_in/1 
* CE 11: eval_parse_decibels_bb1_in(B) = 0
     [B=3] 
* CE 12: eval_parse_decibels_bb1_in(B) = 1+ eval_parse_decibels_bb1_in(C)
     [C=3,B=3] 

### Cost equations --> "Loop" of eval_parse_decibels_bb1_in/1 
* CEs [12] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of eval_parse_decibels_bb1_in/1 
* Loop 9: eval_parse_decibels_bb1_in(B)->  eval_parse_decibels_bb1_in(B')
                  [B'=3,B=3] 
* Loop 10: eval_parse_decibels_bb1_in(B) [B=3] 

### Ranking functions of CR eval_parse_decibels_bb1_in(B) 

#### Partial ranking functions of CR eval_parse_decibels_bb1_in(B) 


### Resulting Chains:eval_parse_decibels_bb1_in(B) 
* [[9]]...
* [[9],10]
* [10]


### Merging Chains  eval_parse_decibels_bb1_in/1 into  External patterns of execution 
* [[10],[10,[9]]] --> 1 
* [[[9]]] --> 2 


### Specialization of cost equations eval_parse_decibels_bb5_in/1 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


#### Refined cost equations eval_parse_decibels_bb5_in/1 
* CE 13: eval_parse_decibels_bb5_in(B) = 0
     [B=2] 
* CE 14: eval_parse_decibels_bb5_in(B) = 1+ eval_parse_decibels_bb5_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_parse_decibels_bb5_in/1 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_parse_decibels_bb5_in/1 
* Loop 11: eval_parse_decibels_bb5_in(B)->  eval_parse_decibels_bb5_in(B')
                  [B'=2,B=2] 
* Loop 12: eval_parse_decibels_bb5_in(B) [B=2] 

### Ranking functions of CR eval_parse_decibels_bb5_in(B) 

#### Partial ranking functions of CR eval_parse_decibels_bb5_in(B) 


### Resulting Chains:eval_parse_decibels_bb5_in(B) 
* [[11]]...
* [[11],12]
* [12]


### Merging Chains  eval_parse_decibels_bb5_in/1 into  External patterns of execution 
* [[12],[12,[11]]] --> 1 
* [[[11]]] --> 2 


### Specialization of cost equations eval_parse_decibels_18/1 
* CE 8 is refined into CE [15,16] 


#### Refined cost equations eval_parse_decibels_18/1 
* CE 15: eval_parse_decibels_18(B) = 1+ eval_parse_decibels_bb5_in(C):1
     [C=2] 
* CE 16: eval_parse_decibels_18(B) = 1+ eval_parse_decibels_bb5_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_parse_decibels_18/1 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_parse_decibels_18/1 
* Loop 13: eval_parse_decibels_18(B) [] 
* Loop 14: eval_parse_decibels_18(B) [] 

### Ranking functions of CR eval_parse_decibels_18(B) 

#### Partial ranking functions of CR eval_parse_decibels_18(B) 


### Resulting Chains:eval_parse_decibels_18(B) 
* [14]
* [13]...


### Merging Chains  eval_parse_decibels_18/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_parse_decibels_15/1 
* CE 6 is refined into CE [17,18] 
* CE 7 is refined into CE [19] 


#### Refined cost equations eval_parse_decibels_15/1 
* CE 17: eval_parse_decibels_15(B) = 0+ eval_parse_decibels_18(B):1
     [] 
* CE 18: eval_parse_decibels_15(B) = 0+ eval_parse_decibels_18(B):2
     [] 
* CE 19: eval_parse_decibels_15(B) = 0
     [] 

### Cost equations --> "Loop" of eval_parse_decibels_15/1 
* CEs [17,19] --> Loop 15 
* CEs [18] --> Loop 16 

#### Loops of eval_parse_decibels_15/1 
* Loop 15: eval_parse_decibels_15(B) [] 
* Loop 16: eval_parse_decibels_15(B) [] 

### Ranking functions of CR eval_parse_decibels_15(B) 

#### Partial ranking functions of CR eval_parse_decibels_15(B) 


### Resulting Chains:eval_parse_decibels_15(B) 
* [16]...
* [15]


### Merging Chains  eval_parse_decibels_15/1 into  External patterns of execution 
* [[15]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_parse_decibels_4/1 
* CE 3 is refined into CE [20,21,22] 


#### Refined cost equations eval_parse_decibels_4/1 
* CE 20: eval_parse_decibels_4(B) = 1+ eval_parse_decibels_bb1_in(C):1+ eval_parse_decibels_15(B):1
     [C=3] 
* CE 21: eval_parse_decibels_4(B) = 1+ eval_parse_decibels_bb1_in(C):1+ eval_parse_decibels_15(B):2
     [C=3] 
* CE 22: eval_parse_decibels_4(B) = 1+ eval_parse_decibels_bb1_in(C):2
     [C=3] 

### Cost equations --> "Loop" of eval_parse_decibels_4/1 
* CEs [21,22] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of eval_parse_decibels_4/1 
* Loop 17: eval_parse_decibels_4(B) [] 
* Loop 18: eval_parse_decibels_4(B) [] 

### Ranking functions of CR eval_parse_decibels_4(B) 

#### Partial ranking functions of CR eval_parse_decibels_4(B) 


### Resulting Chains:eval_parse_decibels_4(B) 
* [18]
* [17]...


### Merging Chains  eval_parse_decibels_4/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_parse_decibels_start/1 
* CE 2 is refined into CE [23,24] 


#### Refined cost equations eval_parse_decibels_start/1 
* CE 23: eval_parse_decibels_start(B) = 0+ eval_parse_decibels_4(B):1
     [] 
* CE 24: eval_parse_decibels_start(B) = 0+ eval_parse_decibels_4(B):2
     [] 

### Cost equations --> "Loop" of eval_parse_decibels_start/1 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 

#### Loops of eval_parse_decibels_start/1 
* Loop 19: eval_parse_decibels_start(B) [] 
* Loop 20: eval_parse_decibels_start(B) [] 

### Ranking functions of CR eval_parse_decibels_start(B) 

#### Partial ranking functions of CR eval_parse_decibels_start(B) 


### Resulting Chains:eval_parse_decibels_start(B) 
* [20]
* [19]...


### Merging Chains  eval_parse_decibels_start/1 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_parse_decibels_bb1_in(B) -> [eval_parse_decibels_bb1_in(B')] 
1
#### Cost of phase [9]:eval_parse_decibels_bb1_in(B) -> [eval_parse_decibels_bb1_in(B')] 
1*it(9)+0
#### Cost of phase [9]:eval_parse_decibels_bb1_in(B) -> [eval_parse_decibels_bb1_in(B')] 
1*it(9)+0
#### Cost of chains of eval_parse_decibels_bb1_in(B):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [B=3] 

* Chain [[9],10]: 1*it(9)+0
  with precondition: [B=3] 

* Chain [10]: 0
  with precondition: [B=3] 


#### Cost of loops [11] 

 * loop 11:eval_parse_decibels_bb5_in(B) -> [eval_parse_decibels_bb5_in(B')] 
1
#### Cost of phase [11]:eval_parse_decibels_bb5_in(B) -> [eval_parse_decibels_bb5_in(B')] 
1*it(11)+0
#### Cost of phase [11]:eval_parse_decibels_bb5_in(B) -> [eval_parse_decibels_bb5_in(B')] 
1*it(11)+0
#### Cost of chains of eval_parse_decibels_bb5_in(B):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [B=2] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=2] 

* Chain [12]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_parse_decibels_18(B):
* Chain [14]: 1*s(3)+1
  with precondition: [] 

* Chain [13]...: 1*s(4)+1
  with precondition: [] 


#### Cost of chains of eval_parse_decibels_15(B):
* Chain [16]...: 1*s(5)+1
  with precondition: [] 

* Chain [15]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_parse_decibels_4(B):
* Chain [18]: 2*s(7)+1
  with precondition: [] 

* Chain [17]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_parse_decibels_start(B):
* Chain [20]: 2*s(12)+1
  with precondition: [] 

* Chain [19]...: 1*s(13)+0
  with precondition: [] 


Closed-form bounds of eval_parse_decibels_start(B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_parse_decibels_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 6 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 7 ms.
   - Equation cost structures 2 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 35 ms.

