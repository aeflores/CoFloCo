Warning: Ignored call to eval_pclxl_char_index_stop/1 in equation eval_pclxl_char_index_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_pclxl_char_index_NewDefault_in/1,eval_pclxl_char_index_bb1_in/1,eval_pclxl_char_index_bb7_in/1]
1. non_recursive  : [eval_pclxl_char_index_bb6_in/1]
2. non_recursive  : [loop_cont_eval_pclxl_char_index_bb1_in/2]
3. non_recursive  : [eval_pclxl_char_index_bb0_in/2]
4. non_recursive  : [eval_pclxl_char_index_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_pclxl_char_index_bb1_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_pclxl_char_index_bb0_in/2
4. SCC is partially evaluated into eval_pclxl_char_index_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_pclxl_char_index_bb1_in/1 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_pclxl_char_index_bb1_in/1 
* CE 8: eval_pclxl_char_index_bb1_in(B) = 1+ eval_pclxl_char_index_bb1_in(C)
     [C=2,B=2] 
* CE 9: eval_pclxl_char_index_bb1_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_pclxl_char_index_bb1_in/1 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_pclxl_char_index_bb1_in/1 
* Loop 7: eval_pclxl_char_index_bb1_in(B) [B=2] 
* Loop 8: eval_pclxl_char_index_bb1_in(B)->  eval_pclxl_char_index_bb1_in(B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_pclxl_char_index_bb1_in(B) 

#### Partial ranking functions of CR eval_pclxl_char_index_bb1_in(B) 


### Resulting Chains:eval_pclxl_char_index_bb1_in(B) 
* [[8]]...
* [[8],7]
* [7]


### Merging Chains  eval_pclxl_char_index_bb1_in/1 into  External patterns of execution 
* [[7],[7,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval_pclxl_char_index_bb0_in/2 
* CE 4 is refined into CE [10,11] 
* CE 5 is refined into CE [12,13] 
* CE 3 is refined into CE [14,15] 


#### Refined cost equations eval_pclxl_char_index_bb0_in/2 
* CE 10: eval_pclxl_char_index_bb0_in(V_id,B) = 1+ eval_pclxl_char_index_bb1_in(C):1
     [247*V_id>=1,C=2] 
* CE 11: eval_pclxl_char_index_bb0_in(V_id,B) = 1+ eval_pclxl_char_index_bb1_in(C):2
     [247*V_id>=1,C=2] 
* CE 12: eval_pclxl_char_index_bb0_in(V_id,B) = 1+ eval_pclxl_char_index_bb1_in(C):1
     [0>=247*V_id+1,C=2] 
* CE 13: eval_pclxl_char_index_bb0_in(V_id,B) = 1+ eval_pclxl_char_index_bb1_in(C):2
     [0>=247*V_id+1,C=2] 
* CE 14: eval_pclxl_char_index_bb0_in(V_id,B) = 1+ eval_pclxl_char_index_bb1_in(C):1
     [C=2,V_id=0] 
* CE 15: eval_pclxl_char_index_bb0_in(V_id,B) = 1+ eval_pclxl_char_index_bb1_in(C):2
     [C=2,V_id=0] 

### Cost equations --> "Loop" of eval_pclxl_char_index_bb0_in/2 
* CEs [11] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [10] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_pclxl_char_index_bb0_in/2 
* Loop 9: eval_pclxl_char_index_bb0_in(V_id,B) [247*V_id>=1] 
* Loop 10: eval_pclxl_char_index_bb0_in(V_id,B) [0>=247*V_id+1] 
* Loop 11: eval_pclxl_char_index_bb0_in(V_id,B) [V_id=0] 
* Loop 12: eval_pclxl_char_index_bb0_in(V_id,B) [247*V_id>=1] 
* Loop 13: eval_pclxl_char_index_bb0_in(V_id,B) [0>=247*V_id+1] 
* Loop 14: eval_pclxl_char_index_bb0_in(V_id,B) [V_id=0] 

### Ranking functions of CR eval_pclxl_char_index_bb0_in(V_id,B) 

#### Partial ranking functions of CR eval_pclxl_char_index_bb0_in(V_id,B) 


### Resulting Chains:eval_pclxl_char_index_bb0_in(V_id,B) 
* [14]
* [13]
* [12]
* [11]...
* [10]...
* [9]...


### Merging Chains  eval_pclxl_char_index_bb0_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[12]] --> 3 
* [[11]] --> 4 
* [[10]] --> 5 
* [[9]] --> 6 


### Specialization of cost equations eval_pclxl_char_index_start/2 
* CE 2 is refined into CE [16,17,18,19,20,21] 


#### Refined cost equations eval_pclxl_char_index_start/2 
* CE 16: eval_pclxl_char_index_start(V_id,B) = 0+ eval_pclxl_char_index_bb0_in(C,B):1
     [C=0,V_id=0] 
* CE 17: eval_pclxl_char_index_start(V_id,B) = 0+ eval_pclxl_char_index_bb0_in(V_id,B):2
     [0>=247*V_id+1] 
* CE 18: eval_pclxl_char_index_start(V_id,B) = 0+ eval_pclxl_char_index_bb0_in(V_id,B):3
     [247*V_id>=1] 
* CE 19: eval_pclxl_char_index_start(V_id,B) = 0+ eval_pclxl_char_index_bb0_in(C,B):4
     [C=0,V_id=0] 
* CE 20: eval_pclxl_char_index_start(V_id,B) = 0+ eval_pclxl_char_index_bb0_in(V_id,B):5
     [0>=247*V_id+1] 
* CE 21: eval_pclxl_char_index_start(V_id,B) = 0+ eval_pclxl_char_index_bb0_in(V_id,B):6
     [247*V_id>=1] 

### Cost equations --> "Loop" of eval_pclxl_char_index_start/2 
* CEs [21] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17] --> Loop 19 
* CEs [16] --> Loop 20 

#### Loops of eval_pclxl_char_index_start/2 
* Loop 15: eval_pclxl_char_index_start(V_id,B) [247*V_id>=1] 
* Loop 16: eval_pclxl_char_index_start(V_id,B) [0>=247*V_id+1] 
* Loop 17: eval_pclxl_char_index_start(V_id,B) [V_id=0] 
* Loop 18: eval_pclxl_char_index_start(V_id,B) [247*V_id>=1] 
* Loop 19: eval_pclxl_char_index_start(V_id,B) [0>=247*V_id+1] 
* Loop 20: eval_pclxl_char_index_start(V_id,B) [V_id=0] 

### Ranking functions of CR eval_pclxl_char_index_start(V_id,B) 

#### Partial ranking functions of CR eval_pclxl_char_index_start(V_id,B) 


### Resulting Chains:eval_pclxl_char_index_start(V_id,B) 
* [20]
* [19]
* [18]
* [17]...
* [16]...
* [15]...


### Merging Chains  eval_pclxl_char_index_start/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[17]] --> 4 
* [[16]] --> 5 
* [[15]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_pclxl_char_index_bb1_in(B) -> [eval_pclxl_char_index_bb1_in(B')] 
1
#### Cost of phase [8]:eval_pclxl_char_index_bb1_in(B) -> [eval_pclxl_char_index_bb1_in(B')] 
1*it(8)+0
#### Cost of phase [8]:eval_pclxl_char_index_bb1_in(B) -> [eval_pclxl_char_index_bb1_in(B')] 
1*it(8)+0
#### Cost of chains of eval_pclxl_char_index_bb1_in(B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],7]: 1*it(8)+0
  with precondition: [B=2] 

* Chain [7]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_pclxl_char_index_bb0_in(V_id,B):
* Chain [14]: 1*s(2)+1
  with precondition: [V_id=0] 

* Chain [13]: 1*s(3)+1
  with precondition: [0>=247*V_id+1] 

* Chain [12]: 1*s(4)+1
  with precondition: [247*V_id>=1] 

* Chain [11]...: 1*s(5)+1
  with precondition: [V_id=0] 

* Chain [10]...: 1*s(6)+1
  with precondition: [0>=247*V_id+1] 

* Chain [9]...: 1*s(7)+1
  with precondition: [247*V_id>=1] 


#### Cost of chains of eval_pclxl_char_index_start(V_id,B):
* Chain [20]: 1*s(8)+1
  with precondition: [V_id=0] 

* Chain [19]: 1*s(9)+1
  with precondition: [0>=247*V_id+1] 

* Chain [18]: 1*s(10)+1
  with precondition: [247*V_id>=1] 

* Chain [17]...: 1*s(11)+1
  with precondition: [V_id=0] 

* Chain [16]...: 1*s(12)+1
  with precondition: [0>=247*V_id+1] 

* Chain [15]...: 1*s(13)+1
  with precondition: [247*V_id>=1] 


Closed-form bounds of eval_pclxl_char_index_start(V_id,B): 
-------------------------------------
* Chain [20] with precondition: [V_id=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19] with precondition: [0>=247*V_id+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18] with precondition: [247*V_id>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17]... with precondition: [V_id=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16]... with precondition: [0>=247*V_id+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [247*V_id>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_pclxl_char_index_start(V_id,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 14 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 36 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 123 ms.

