Warning: Ignored call to eval_setkrent_stop/1 in equation eval_setkrent_17/1 
Warning: Ignored call to eval_setkrent_stop/1 in equation eval_setkrent_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_setkrent_17/1]
1. non_recursive  : [eval_setkrent_16/2]
2. recursive  : [eval_setkrent_5/5,eval_setkrent_6/5,eval_setkrent_bb2_in/5]
3. non_recursive  : [eval_setkrent_bb6_in/1]
4. non_recursive  : [eval_setkrent_10/2]
5. non_recursive  : [eval_setkrent_9/2]
6. non_recursive  : [loop_cont_eval_setkrent_bb2_in/3]
7. non_recursive  : [eval_setkrent_bb0_in/2]
8. non_recursive  : [eval_setkrent_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_setkrent_bb2_in/5
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_setkrent_bb2_in/3
7. SCC is partially evaluated into eval_setkrent_bb0_in/2
8. SCC is partially evaluated into eval_setkrent_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_setkrent_bb2_in/5 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations eval_setkrent_bb2_in/5 
* CE 10: eval_setkrent_bb2_in(A,A,B,C,A) = 0
     [B>=A,B>=0,C=3] 
* CE 11: eval_setkrent_bb2_in(A,A,B,C,D) = 0
     [A>=B+1,B>=0,C=2] 
* CE 12: eval_setkrent_bb2_in(A,A,B,C,D) = 1+ eval_setkrent_bb2_in(A,A,E,C,D)
     [A>=B+1,B>=0,B+1=E] 

### Cost equations --> "Loop" of eval_setkrent_bb2_in/5 
* CEs [12] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of eval_setkrent_bb2_in/5 
* Loop 8: eval_setkrent_bb2_in(A,A,B,C,D)->  eval_setkrent_bb2_in(A,A,A',C,D)
                  [A>=B+1,B>=0,B+1=A'] 
* Loop 9: eval_setkrent_bb2_in(A,A,B,C,A) [B>=A,B>=0,C=3] 
* Loop 10: eval_setkrent_bb2_in(A,A,B,C,D) [A>=B+1,B>=0,C=2] 

### Ranking functions of CR eval_setkrent_bb2_in(V__nkr,V_4,V_i_0,B,C) 
* RF of phase [8]: [V_4-V_i_0,V__nkr-V_i_0]

#### Partial ranking functions of CR eval_setkrent_bb2_in(V__nkr,V_4,V_i_0,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_4-V_i_0
    V__nkr-V_i_0


### Resulting Chains:eval_setkrent_bb2_in(V__nkr,V_4,V_i_0,B,C) 
* [[8],10]
* [[8],9]
* [10]
* [9]


### Merging Chains  eval_setkrent_bb2_in/5 into  External patterns of execution 
* [[10],[10,[8]]] --> 1 
* [[9]] --> 2 
* [[9,[8]]] --> 3 


### Specialization of cost equations loop_cont_eval_setkrent_bb2_in/3 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 


#### Refined cost equations loop_cont_eval_setkrent_bb2_in/3 
* CE 13: loop_cont_eval_setkrent_bb2_in(C,A,B) = 0
     [C=3] 
* CE 14: loop_cont_eval_setkrent_bb2_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_setkrent_bb2_in/3 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of loop_cont_eval_setkrent_bb2_in/3 
* Loop 11: loop_cont_eval_setkrent_bb2_in(C,A,B) [C=3] 
* Loop 12: loop_cont_eval_setkrent_bb2_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_setkrent_bb2_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_setkrent_bb2_in(C,A,B) 


### Resulting Chains:loop_cont_eval_setkrent_bb2_in(C,A,B) 
* [12]
* [11]


### Merging Chains  loop_cont_eval_setkrent_bb2_in/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_setkrent_bb0_in/2 
* CE 3 is refined into CE [15,16,17] 
* CE 4 is refined into CE [18] 


#### Refined cost equations eval_setkrent_bb0_in/2 
* CE 15: eval_setkrent_bb0_in(V__nkr,B) = 1+ eval_setkrent_bb2_in(V__nkr,V__nkr,C,D,E):1+ loop_cont_eval_setkrent_bb2_in(F,E,B):1
     [V__nkr>=1,F=2,D=2,C=0] 
* CE 16: eval_setkrent_bb0_in(V__nkr,B) = 1+ eval_setkrent_bb2_in(V__nkr,V__nkr,C,D,V__nkr):2+ loop_cont_eval_setkrent_bb2_in(E,V__nkr,B):2
     [0>=V__nkr,E=3,D=3,C=0] 
* CE 17: eval_setkrent_bb0_in(V__nkr,B) = 1+ eval_setkrent_bb2_in(V__nkr,V__nkr,C,D,V__nkr):3+ loop_cont_eval_setkrent_bb2_in(E,V__nkr,B):2
     [V__nkr>=1,E=3,D=3,C=0] 
* CE 18: eval_setkrent_bb0_in(V__nkr,B) = 0
     [] 

### Cost equations --> "Loop" of eval_setkrent_bb0_in/2 
* CEs [15,16,17,18] --> Loop 13 

#### Loops of eval_setkrent_bb0_in/2 
* Loop 13: eval_setkrent_bb0_in(V__nkr,B) [] 

### Ranking functions of CR eval_setkrent_bb0_in(V__nkr,B) 

#### Partial ranking functions of CR eval_setkrent_bb0_in(V__nkr,B) 


### Resulting Chains:eval_setkrent_bb0_in(V__nkr,B) 
* [13]


### Merging Chains  eval_setkrent_bb0_in/2 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_setkrent_start/2 
* CE 2 is refined into CE [19] 


#### Refined cost equations eval_setkrent_start/2 
* CE 19: eval_setkrent_start(V__nkr,B) = 0+ eval_setkrent_bb0_in(V__nkr,B):1
     [] 

### Cost equations --> "Loop" of eval_setkrent_start/2 
* CEs [19] --> Loop 14 

#### Loops of eval_setkrent_start/2 
* Loop 14: eval_setkrent_start(V__nkr,B) [] 

### Ranking functions of CR eval_setkrent_start(V__nkr,B) 

#### Partial ranking functions of CR eval_setkrent_start(V__nkr,B) 


### Resulting Chains:eval_setkrent_start(V__nkr,B) 
* [14]


### Merging Chains  eval_setkrent_start/2 into  External patterns of execution 
* [[14]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_setkrent_bb2_in(V__nkr,V_4,V_i_0,B,C) -> [eval_setkrent_bb2_in(V__nkr',V_4',V_i_0',B',C')] 
1
#### Cost of phase [8]:eval_setkrent_bb2_in(V__nkr,V_4,V_i_0,B,C) -> [eval_setkrent_bb2_in(V__nkr',V_4',V_i_0',B',C')] 
1*it(8)+0
  Such that:it(8) =< V__nkr-V_i_0
it(8) =< V__nkr-V_i_0-V__nkr'+V_i_0'
it(8) =< V_4-V_i_0
it(8) =< V_4-V_i_0-V_4'+V_i_0'

#### Cost of phase [8]:eval_setkrent_bb2_in(V__nkr,V_4,V_i_0,B,C) -> [eval_setkrent_bb2_in(V__nkr',V_4',V_i_0',B',C')] 
1*it(8)+0
  Such that:it(8) =< V__nkr-V_i_0
it(8) =< V__nkr-V_i_0-V__nkr'+V_i_0'
it(8) =< V_4-V_i_0
it(8) =< V_4-V_i_0-V_4'+V_i_0'

#### Cost of chains of eval_setkrent_bb2_in(V__nkr,V_4,V_i_0,B,C):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V__nkr-V_i_0

  with precondition: [B=2,V__nkr=V_4,V_i_0>=0,V__nkr>=V_i_0+2] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -V_i_0+C

  with precondition: [B=3,V__nkr=V_4,V__nkr=C,V_i_0>=0,V__nkr>=V_i_0+1] 

* Chain [10]: 0
  with precondition: [B=2,V_4=V__nkr,V_i_0>=0,V_4>=V_i_0+1] 

* Chain [9]: 0
  with precondition: [B=3,V_4=V__nkr,V_4=C,V_i_0>=0,V_i_0>=V_4] 


#### Cost of chains of loop_cont_eval_setkrent_bb2_in(C,A,B):
* Chain [12]: 0
  with precondition: [C=2] 

* Chain [11]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_setkrent_bb0_in(V__nkr,B):
* Chain [13]: 2*s(2)+1
  Such that:aux(1) =< V__nkr
s(2) =< aux(1)

  with precondition: [] 


#### Cost of chains of eval_setkrent_start(V__nkr,B):
* Chain [14]: 2*s(5)+1
  Such that:s(4) =< V__nkr
s(5) =< s(4)

  with precondition: [] 


Closed-form bounds of eval_setkrent_start(V__nkr,B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: nat(V__nkr)*2+1 
    - Complexity: n 

### Maximum cost of eval_setkrent_start(V__nkr,B): nat(V__nkr)*2+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 18 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 19 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 74 ms.

