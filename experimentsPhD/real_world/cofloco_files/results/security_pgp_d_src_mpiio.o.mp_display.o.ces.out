Warning: Ignored call to eval_mp_display_stop/1 in equation eval_mp_display_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_mp_display_bb10_in/1]
1. non_recursive  : [eval_mp_display_5/1]
2. non_recursive  : [eval_mp_display_4/1]
3. recursive  : [eval_mp_display_19/12,eval_mp_display_20/12,eval_mp_display_bb6_in/11]
4. recursive  : [eval_mp_display_14/5,eval_mp_display_15/5,eval_mp_display_16/6,eval_mp_display_22/6,eval_mp_display_23/6,eval_mp_display_24/6,eval_mp_display_bb3_in/3,eval_mp_display_bb8_in/5,loop_cont_eval_mp_display_bb6_in/6]
5. non_recursive  : [eval_mp_display_26/1]
6. non_recursive  : [eval_mp_display_25/1]
7. non_recursive  : [loop_cont_eval_mp_display_bb3_in/2]
8. non_recursive  : [eval_mp_display_2/2]
9. non_recursive  : [eval_mp_display_1/1]
10. non_recursive  : [eval_mp_display_0/1]
11. non_recursive  : [eval_mp_display_bb0_in/1]
12. non_recursive  : [eval_mp_display_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_mp_display_bb6_in/11
4. SCC is partially evaluated into eval_mp_display_bb3_in/3
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_mp_display_2/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_mp_display_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mp_display_bb6_in/11 
* CE 20 is refined into CE [21] 
* CE 18 is refined into CE [22] 
* CE 19 is refined into CE [23] 


#### Refined cost equations eval_mp_display_bb6_in/11 
* CE 21: eval_mp_display_bb6_in(A,B,C,D,E,F,G,H,I,C,D) = 0
     [E>=0,C+1=I,D=H+1,C+1=B,D=A+1,G=2,F=0] 
* CE 22: eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F) = 1+ eval_mp_display_bb6_in(G,H,V_8,V_10,V_15,I,J,C,D,E,F)
     [V_15>=V_j_0,V_j_0>=1,V_j_0=I+1,V_8+1=H,V_10=G+1,V_8+1=V_precision_0,V_10=V_i_0+1,J=2,B=2] 
* CE 23: eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F) = 1+ eval_mp_display_bb6_in(G,H,V_8,V_10,V_15,I,J,C,D,E,F)
     [V_15>=V_j_0,0>=V_j_0+1,V_j_0=I+1,V_8+1=H,V_10=G+1,V_8+1=V_precision_0,V_10=V_i_0+1,J=2,B=2] 

### Cost equations --> "Loop" of eval_mp_display_bb6_in/11 
* CEs [22] --> Loop 13 
* CEs [23] --> Loop 14 
* CEs [21] --> Loop 15 

#### Loops of eval_mp_display_bb6_in/11 
* Loop 13: eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F)->  eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8',V_10',V_15,V_j_0',B',C,D,E,F)
                  [V_15>=V_j_0,V_j_0>=1,V_j_0=V_j_0'+1,V_i_0+1=V_10',V_precision_0=V_8'+1,V_i_0+1=V_10,V_precision_0=V_8+1,B'=2,B=2] 
* Loop 14: eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F)->  eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8',V_10',V_15,V_j_0',B',C,D,E,F)
                  [V_15>=V_j_0,0>=V_j_0+1,V_j_0=V_j_0'+1,V_i_0+1=V_10',V_precision_0=V_8'+1,V_i_0+1=V_10,V_precision_0=V_8+1,B'=2,B=2] 
* Loop 15: eval_mp_display_bb6_in(A,B,C,D,E,F,G,H,I,C,D) [E>=0,C+1=I,D=H+1,C+1=B,D=A+1,G=2,F=0] 

### Ranking functions of CR eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F) 
* RF of phase [13]: [V_j_0]

#### Partial ranking functions of CR eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_j_0


### Resulting Chains:eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F) 
* [[14]]...
* [[13],15]
* [15]


### Merging Chains  eval_mp_display_bb6_in/11 into  External patterns of execution 
* [[15]] --> 1 
* [[15,[13]]] --> 2 
* [[[14]]] --> 3 


### Specialization of cost equations eval_mp_display_bb3_in/3 
* CE 17 is refined into CE [24] 
* CE 6 is refined into CE [25,26,27] 
* CE 12 is refined into CE [28] 
* CE 9 is refined into CE [29,30,31] 
* CE 15 is refined into CE [32] 
* CE 5 is refined into CE [33,34,35] 
* CE 11 is refined into CE [36] 
* CE 8 is refined into CE [37,38,39] 
* CE 14 is refined into CE [40] 
* CE 7 is refined into CE [41,42,43] 
* CE 13 is refined into CE [44] 
* CE 10 is refined into CE [45,46,47] 
* CE 16 is refined into CE [48] 


#### Refined cost equations eval_mp_display_bb3_in/3 
* CE 24: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 0
     [B=3,V_precision_0=0] 
* CE 25: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,H,I,J,K,E,F):1+ eval_mp_display_bb3_in(F,E,L)
     [F>=2,E>=0,E+1=K,F=J+1,E+1=D,F=C+1,E+1=V_precision_0,F=V_i_0+1,L=3,I=2,H=0,G=0,B=3] 
* CE 26: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,G,H,I,J,E,F):2+ eval_mp_display_bb3_in(F,E,K)
     [G>=1,F>=2,E>=0,E+1=J,F=I+1,E+1=D,F=C+1,E+1=V_precision_0,F=V_i_0+1,K=3,H=2,B=3] 
* CE 27: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(V_i_0,V_precision_0,C,D,E,E,F,G,H,I,J):3
     [V_precision_0>=1,V_i_0>=1,0>=E+1,V_i_0+1=D,V_precision_0=C+1,K=3,F=2,B=3] 
* CE 28: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 1+ eval_mp_display_bb3_in(C,D,E)
     [V_precision_0>=1,V_i_0>=1,V_precision_0=D+1,V_i_0+1=C,E=3,B=3] 
* CE 29: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,H,I,J,K,E,F):1+ eval_mp_display_bb3_in(F,E,L)
     [F>=2,0>=E+2,E+1=K,F=J+1,E+1=D,F=C+1,E+1=V_precision_0,F=V_i_0+1,L=3,I=2,H=0,G=0,B=3] 
* CE 30: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,G,H,I,J,E,F):2+ eval_mp_display_bb3_in(F,E,K)
     [G>=1,F>=2,0>=E+2,E+1=J,F=I+1,E+1=D,F=C+1,E+1=V_precision_0,F=V_i_0+1,K=3,H=2,B=3] 
* CE 31: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(V_i_0,V_precision_0,C,D,E,E,F,G,H,I,J):3
     [V_i_0>=1,0>=E+1,0>=V_precision_0+1,V_i_0+1=D,V_precision_0=C+1,K=3,F=2,B=3] 
* CE 32: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 1+ eval_mp_display_bb3_in(C,D,E)
     [V_i_0>=1,0>=V_precision_0+1,V_precision_0=D+1,V_i_0+1=C,E=3,B=3] 
* CE 33: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,H,I,J,K,E,F):1+ eval_mp_display_bb3_in(F,E,L)
     [E>=0,0>=F,E+1=K,F=J+1,E+1=D,F=C+1,E+1=V_precision_0,F=V_i_0+1,L=3,I=2,H=0,G=0,B=3] 
* CE 34: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,G,H,I,J,E,F):2+ eval_mp_display_bb3_in(F,E,K)
     [G>=1,E>=0,0>=F,E+1=J,F=I+1,E+1=D,F=C+1,E+1=V_precision_0,F=V_i_0+1,K=3,H=2,B=3] 
* CE 35: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(V_i_0,V_precision_0,C,D,E,E,F,G,H,I,J):3
     [V_precision_0>=1,0>=E+1,0>=V_i_0+1,V_i_0+1=D,V_precision_0=C+1,K=3,F=2,B=3] 
* CE 36: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 1+ eval_mp_display_bb3_in(C,D,E)
     [V_precision_0>=1,0>=V_i_0+1,V_precision_0=D+1,V_i_0+1=C,E=3,B=3] 
* CE 37: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,H,I,J,K,E,F):1+ eval_mp_display_bb3_in(F,E,L)
     [0>=F,0>=E+2,E+1=K,F=J+1,E+1=D,F=C+1,E+1=V_precision_0,F=V_i_0+1,L=3,I=2,H=0,G=0,B=3] 
* CE 38: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,G,H,I,J,E,F):2+ eval_mp_display_bb3_in(F,E,K)
     [G>=1,0>=F,0>=E+2,E+1=J,F=I+1,E+1=D,F=C+1,E+1=V_precision_0,F=V_i_0+1,K=3,H=2,B=3] 
* CE 39: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(V_i_0,V_precision_0,C,D,E,E,F,G,H,I,J):3
     [0>=E+1,0>=V_precision_0+1,0>=V_i_0+1,V_i_0+1=D,V_precision_0=C+1,K=3,F=2,B=3] 
* CE 40: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 1+ eval_mp_display_bb3_in(C,D,E)
     [0>=V_precision_0+1,0>=V_i_0+1,V_precision_0=D+1,V_i_0+1=C,E=3,B=3] 
* CE 41: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,H,I,J,K,E,L):1+ eval_mp_display_bb3_in(M,E,N)
     [E>=0,E+1=K,E+1=D,E+1=V_precision_0,N=3,M=1,L=1,J=0,I=2,H=0,G=0,F=1,C=0,B=3,V_i_0=0] 
* CE 42: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,G,H,I,J,E,K):2+ eval_mp_display_bb3_in(L,E,M)
     [G>=1,E>=0,E+1=J,E+1=D,E+1=V_precision_0,M=3,L=1,K=1,I=0,H=2,F=1,C=0,B=3,V_i_0=0] 
* CE 43: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,V_precision_0,D,E,F,F,G,H,I,J,K):3
     [V_precision_0>=1,0>=F+1,V_precision_0=D+1,L=3,G=2,E=1,C=0,B=3,V_i_0=0] 
* CE 44: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 1+ eval_mp_display_bb3_in(C,D,E)
     [V_precision_0>=1,V_precision_0=D+1,E=3,C=1,B=3,V_i_0=0] 
* CE 45: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,H,I,J,K,E,L):1+ eval_mp_display_bb3_in(M,E,N)
     [0>=E+2,E+1=K,E+1=D,E+1=V_precision_0,N=3,M=1,L=1,J=0,I=2,H=0,G=0,F=1,C=0,B=3,V_i_0=0] 
* CE 46: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,D,E,F,G,G,H,I,J,E,K):2+ eval_mp_display_bb3_in(L,E,M)
     [G>=1,0>=E+2,E+1=J,E+1=D,E+1=V_precision_0,M=3,L=1,K=1,I=0,H=2,F=1,C=0,B=3,V_i_0=0] 
* CE 47: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 2+ eval_mp_display_bb6_in(C,V_precision_0,D,E,F,F,G,H,I,J,K):3
     [0>=F+1,0>=V_precision_0+1,V_precision_0=D+1,L=3,G=2,E=1,C=0,B=3,V_i_0=0] 
* CE 48: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) = 1+ eval_mp_display_bb3_in(C,D,E)
     [0>=V_precision_0+1,V_precision_0=D+1,E=3,C=1,B=3,V_i_0=0] 

### Cost equations --> "Loop" of eval_mp_display_bb3_in/3 
* CEs [25,26,28] --> Loop 16 
* CEs [29,30,32] --> Loop 17 
* CEs [33,34,36] --> Loop 18 
* CEs [37,38,40] --> Loop 19 
* CEs [41,42,44] --> Loop 20 
* CEs [45,46,48] --> Loop 21 
* CEs [27] --> Loop 22 
* CEs [31] --> Loop 23 
* CEs [35] --> Loop 24 
* CEs [39] --> Loop 25 
* CEs [43] --> Loop 26 
* CEs [47] --> Loop 27 
* CEs [24] --> Loop 28 

#### Loops of eval_mp_display_bb3_in/3 
* Loop 16: eval_mp_display_bb3_in(V_i_0,V_precision_0,B)->  eval_mp_display_bb3_in(V_i_0',V_precision_0',B')
                  [V_precision_0>=1,V_i_0>=1,V_precision_0=V_precision_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 17: eval_mp_display_bb3_in(V_i_0,V_precision_0,B)->  eval_mp_display_bb3_in(V_i_0',V_precision_0',B')
                  [V_i_0>=1,0>=V_precision_0+1,V_precision_0=V_precision_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 18: eval_mp_display_bb3_in(V_i_0,V_precision_0,B)->  eval_mp_display_bb3_in(V_i_0',V_precision_0',B')
                  [V_precision_0>=1,0>=V_i_0+1,V_precision_0=V_precision_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 19: eval_mp_display_bb3_in(V_i_0,V_precision_0,B)->  eval_mp_display_bb3_in(V_i_0',V_precision_0',B')
                  [0>=V_precision_0+1,0>=V_i_0+1,V_precision_0=V_precision_0'+1,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 20: eval_mp_display_bb3_in(V_i_0,V_precision_0,B)->  eval_mp_display_bb3_in(V_i_0',V_precision_0',B')
                  [V_precision_0>=1,V_precision_0=V_precision_0'+1,B'=3,V_i_0'=1,B=3,V_i_0=0] 
* Loop 21: eval_mp_display_bb3_in(V_i_0,V_precision_0,B)->  eval_mp_display_bb3_in(V_i_0',V_precision_0',B')
                  [0>=V_precision_0+1,V_precision_0=V_precision_0'+1,B'=3,V_i_0'=1,B=3,V_i_0=0] 
* Loop 22: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) [V_precision_0>=1,V_i_0>=1,B=3] 
* Loop 23: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) [V_i_0>=1,0>=V_precision_0+1,B=3] 
* Loop 24: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) [V_precision_0>=1,0>=V_i_0+1,B=3] 
* Loop 25: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) [0>=V_precision_0+1,0>=V_i_0+1,B=3] 
* Loop 26: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) [V_precision_0>=1,B=3,V_i_0=0] 
* Loop 27: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) [0>=V_precision_0+1,B=3,V_i_0=0] 
* Loop 28: eval_mp_display_bb3_in(V_i_0,V_precision_0,B) [B=3,V_precision_0=0] 

### Ranking functions of CR eval_mp_display_bb3_in(V_i_0,V_precision_0,B) 
* RF of phase [16]: [V_precision_0]

#### Partial ranking functions of CR eval_mp_display_bb3_in(V_i_0,V_precision_0,B) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_precision_0


### Resulting Chains:eval_mp_display_bb3_in(V_i_0,V_precision_0,B) 
* [28]
* [27]...
* [26]...
* [21,[17]]...
* [21,[17],23]...
* [21,23]...
* [20,[16],28]
* [20,[16],22]...
* [20,28]
* [20,22]...


### Merging Chains  eval_mp_display_bb3_in/3 into  External patterns of execution 
* [[28,20]] --> 1 
* [[28,[16],20]] --> 2 
* [[28]] --> 3 
* [[23,21],[[17],21],[23,[17],21],[27]] --> 4 
* [[26]] --> 5 
* [[22,20]] --> 6 
* [[22,[16],20]] --> 7 


### Specialization of cost equations eval_mp_display_2/2 
* CE 3 is refined into CE [49] 
* CE 4 is refined into CE [50,51,52,53,54,55,56] 


#### Refined cost equations eval_mp_display_2/2 
* CE 49: eval_mp_display_2(V_0,B) = 0
     [] 
* CE 50: eval_mp_display_2(V_0,B) = 1+ eval_mp_display_bb3_in(C,D,E):1
     [E=3,D=1,C=0,V_0=1] 
* CE 51: eval_mp_display_2(V_0,B) = 1+ eval_mp_display_bb3_in(C,V_0,D):2
     [V_0>=2,D=3,C=0] 
* CE 52: eval_mp_display_2(V_0,B) = 1+ eval_mp_display_bb3_in(C,D,E):3
     [E=3,D=0,C=0,V_0=0] 
* CE 53: eval_mp_display_2(V_0,B) = 1+ eval_mp_display_bb3_in(C,V_0,D):4
     [0>=V_0+1,D=3,C=0] 
* CE 54: eval_mp_display_2(V_0,B) = 1+ eval_mp_display_bb3_in(C,V_0,D):5
     [V_0>=1,D=3,C=0] 
* CE 55: eval_mp_display_2(V_0,B) = 1+ eval_mp_display_bb3_in(C,V_0,D):6
     [V_0>=2,D=3,C=0] 
* CE 56: eval_mp_display_2(V_0,B) = 1+ eval_mp_display_bb3_in(C,V_0,D):7
     [V_0>=3,D=3,C=0] 

### Cost equations --> "Loop" of eval_mp_display_2/2 
* CEs [54,55,56] --> Loop 29 
* CEs [53] --> Loop 30 
* CEs [49,50,51,52] --> Loop 31 

#### Loops of eval_mp_display_2/2 
* Loop 29: eval_mp_display_2(V_0,B) [V_0>=1] 
* Loop 30: eval_mp_display_2(V_0,B) [0>=V_0+1] 
* Loop 31: eval_mp_display_2(V_0,B) [] 

### Ranking functions of CR eval_mp_display_2(V_0,B) 

#### Partial ranking functions of CR eval_mp_display_2(V_0,B) 


### Resulting Chains:eval_mp_display_2(V_0,B) 
* [31]
* [30]...
* [29]...


### Merging Chains  eval_mp_display_2/2 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 
* [[29]] --> 3 


### Specialization of cost equations eval_mp_display_start/1 
* CE 2 is refined into CE [57,58,59] 


#### Refined cost equations eval_mp_display_start/1 
* CE 57: eval_mp_display_start(B) = 0+ eval_mp_display_2(C,B):1
     [] 
* CE 58: eval_mp_display_start(B) = 0+ eval_mp_display_2(C,B):2
     [0>=C+1] 
* CE 59: eval_mp_display_start(B) = 0+ eval_mp_display_2(C,B):3
     [C>=1] 

### Cost equations --> "Loop" of eval_mp_display_start/1 
* CEs [58,59] --> Loop 32 
* CEs [57] --> Loop 33 

#### Loops of eval_mp_display_start/1 
* Loop 32: eval_mp_display_start(B) [] 
* Loop 33: eval_mp_display_start(B) [] 

### Ranking functions of CR eval_mp_display_start(B) 

#### Partial ranking functions of CR eval_mp_display_start(B) 


### Resulting Chains:eval_mp_display_start(B) 
* [33]
* [32]...


### Merging Chains  eval_mp_display_start/1 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F) -> [eval_mp_display_bb6_in(V_i_0',V_precision_0',V_8',V_10',V_15',V_j_0',B',C',D',E',F')] 
1
#### Cost of phase [14]:eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F) -> [eval_mp_display_bb6_in(V_i_0',V_precision_0',V_8',V_10',V_15',V_j_0',B',C',D',E',F')] 
1*it(14)+0
#### Cost of loops [13] 

 * loop 13:eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F) -> [eval_mp_display_bb6_in(V_i_0',V_precision_0',V_8',V_10',V_15',V_j_0',B',C',D',E',F')] 
1
#### Cost of phase [13]:eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F) -> [eval_mp_display_bb6_in(V_i_0',V_precision_0',V_8',V_10',V_15',V_j_0',B',C',D',E',F')] 
1*it(13)+0
  Such that:it(13) =< V_j_0
it(13) =< V_j_0-V_j_0'

#### Cost of chains of eval_mp_display_bb6_in(V_i_0,V_precision_0,V_8,V_10,V_15,V_j_0,B,C,D,E,F):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [V_i_0+1=V_10,V_precision_0=V_8+1,0>=V_j_0+1,V_15>=V_j_0,B=2] 

* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< V_j_0

  with precondition: [B=2,V_precision_0=V_8+1,V_i_0+1=V_10,V_i_0=C,V_precision_0=D,V_precision_0=E+1,V_i_0+1=F,V_j_0>=1,V_15>=V_j_0] 

* Chain [15]: 0
  with precondition: [V_j_0=0,B=2,V_precision_0=V_8+1,V_i_0+1=V_10,V_i_0=C,V_precision_0=D,V_precision_0=E+1,V_i_0+1=F,V_15>=0] 


#### Cost of loops [17] 

 * loop 17:eval_mp_display_bb3_in(V_i_0,V_precision_0,B) -> [eval_mp_display_bb3_in(V_i_0',V_precision_0',B')] 
1*s(4)+0
#### Cost of phase [17]:eval_mp_display_bb3_in(V_i_0,V_precision_0,B) -> [eval_mp_display_bb3_in(V_i_0',V_precision_0',B')] 
1*s(5)+0
#### Cost of phase [17]:eval_mp_display_bb3_in(V_i_0,V_precision_0,B) -> [eval_mp_display_bb3_in(V_i_0',V_precision_0',B')] 
1*s(5)+0
#### Cost of loops [16] 

 * loop 16:eval_mp_display_bb3_in(V_i_0,V_precision_0,B) -> [eval_mp_display_bb3_in(V_i_0',V_precision_0',B')] 
1*s(9)+0
#### Cost of phase [16]:eval_mp_display_bb3_in(V_i_0,V_precision_0,B) -> [eval_mp_display_bb3_in(V_i_0',V_precision_0',B')] 
1*s(10)+0
#### Cost of phase [16]:eval_mp_display_bb3_in(V_i_0,V_precision_0,B) -> [eval_mp_display_bb3_in(V_i_0',V_precision_0',B')] 
1*s(10)+0
#### Cost of chains of eval_mp_display_bb3_in(V_i_0,V_precision_0,B):
* Chain [28]: 0
  with precondition: [V_precision_0=0,B=3,V_i_0>=0] 

* Chain [27]...: 1*s(1)+2
  with precondition: [V_i_0=0,B=3,0>=V_precision_0+1] 

* Chain [26]...: 1*s(2)+2
  with precondition: [V_i_0=0,B=3,V_precision_0>=1] 

* Chain [21,[17]]...: 2*aux(2)+0
  with precondition: [V_i_0=0,B=3,0>=V_precision_0+1] 

* Chain [21,[17],23]...: 3*aux(2)+2
  with precondition: [V_i_0=0,B=3,0>=V_precision_0+1] 

* Chain [21,23]...: 2*aux(2)+2
  with precondition: [V_i_0=0,B=3,0>=V_precision_0+1] 

* Chain [20,[16],28]: 2*aux(4)+0
  with precondition: [V_i_0=0,B=3,V_precision_0>=2] 

* Chain [20,[16],22]...: 3*aux(4)+2
  with precondition: [V_i_0=0,B=3,V_precision_0>=3] 

* Chain [20,28]: 1*aux(4)+0
  with precondition: [V_i_0=0,V_precision_0=1,B=3] 

* Chain [20,22]...: 2*aux(4)+2
  with precondition: [V_i_0=0,B=3,V_precision_0>=2] 


#### Cost of chains of eval_mp_display_2(V_0,B):
* Chain [31]: 1*aux(6)+0
  with precondition: [] 

* Chain [30]...: 1*s(19)+1
  with precondition: [0>=V_0+1] 

* Chain [29]...: 1*aux(7)+0
  with precondition: [V_0>=1] 


#### Cost of chains of eval_mp_display_start(B):
* Chain [33]: 1*s(23)+0
  with precondition: [] 

* Chain [32]...: 1*aux(8)+0
  with precondition: [] 


Closed-form bounds of eval_mp_display_start(B): 
-------------------------------------
* Chain [33] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [32]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mp_display_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 75 ms.
* Invariants computed in 58 ms.
   - Backward Invariants 21 ms.
   - Transitive Invariants 13 ms.
* Refinement performed in 135 ms.
* Termination proved in 10 ms.
* Upper bounds computed in 65 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 23 ms.
   - Chain cost structures 16 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 403 ms.

