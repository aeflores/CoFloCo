Warning: Ignored call to eval_bmhi_search_stop/1 in equation eval_bmhi_search_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_bmhi_search_25/10,eval_bmhi_search_26/11,eval_bmhi_search_bb5_in/8]
1. recursive  : [eval_bmhi_search__critedge_in/5,eval_bmhi_search_bb2_in/3,loop_cont_eval_bmhi_search_bb5_in/6]
2. non_recursive  : [eval_bmhi_search_bb8_in/1]
3. non_recursive  : [loop_cont_eval_bmhi_search_bb2_in/2]
4. non_recursive  : [eval_bmhi_search_bb0_in/3]
5. non_recursive  : [eval_bmhi_search_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_bmhi_search_bb5_in/8
1. SCC is partially evaluated into eval_bmhi_search_bb2_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_bmhi_search_bb0_in/3
5. SCC is partially evaluated into eval_bmhi_search_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_bmhi_search_bb5_in/8 
* CE 9 is refined into CE [12] 
* CE 11 is refined into CE [13] 
* CE 10 is refined into CE [14] 


#### Refined cost equations eval_bmhi_search_bb5_in/8 
* CE 12: eval_bmhi_search_bb5_in(A,B,C,D,A,B,C,E) = 0
     [A>=C+1,C>=1,C=E+1,D=2] 
* CE 13: eval_bmhi_search_bb5_in(A,B,C,D,A,B,C,E) = 0
     [A>=C+1,0>=C,C=E+1,D=2] 
* CE 14: eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0,B,C,D,E,F) = 1+ eval_bmhi_search_bb5_in(V__patlen,V__skip2,G,H,C,D,E,F)
     [V__patlen>=V_j_0+1,V_j_0>=1,V_j_0=G+1,H=2,B=2] 

### Cost equations --> "Loop" of eval_bmhi_search_bb5_in/8 
* CEs [14] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [13] --> Loop 10 

#### Loops of eval_bmhi_search_bb5_in/8 
* Loop 8: eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0,B,C,D,E,F)->  eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0',B',C,D,E,F)
                  [V__patlen>=V_j_0+1,V_j_0>=1,V_j_0=V_j_0'+1,B'=2,B=2] 
* Loop 9: eval_bmhi_search_bb5_in(A,B,C,D,A,B,C,E) [A>=C+1,C>=1,C=E+1,D=2] 
* Loop 10: eval_bmhi_search_bb5_in(A,B,C,D,A,B,C,E) [A>=C+1,0>=C,C=E+1,D=2] 

### Ranking functions of CR eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0,B,C,D,E,F) 
* RF of phase [8]: [V_j_0]

#### Partial ranking functions of CR eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0,B,C,D,E,F) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_j_0


### Resulting Chains:eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0,B,C,D,E,F) 
* [[8],10]
* [[8],9]
* [10]
* [9]


### Merging Chains  eval_bmhi_search_bb5_in/8 into  External patterns of execution 
* [[10,[8]]] --> 1 
* [[10]] --> 2 
* [[9]] --> 3 
* [[9,[8]]] --> 4 


### Specialization of cost equations eval_bmhi_search_bb2_in/3 
* CE 6 is refined into CE [15,16,17,18] 
* CE 8 is refined into CE [19] 
* CE 5 is refined into CE [20,21,22,23] 
* CE 7 is refined into CE [24] 


#### Refined cost equations eval_bmhi_search_bb2_in/3 
* CE 15: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 1+ eval_bmhi_search_bb5_in(V__patlen,V__skip2,C,D,V__patlen,V__skip2,E,F):1
     [V__patlen>=2,V__patlen=C+1,F+1=0,E=0,D=2,B=3] 
* CE 16: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 1+ eval_bmhi_search_bb5_in(V__patlen,V__skip2,C,D,V__patlen,V__skip2,E,F):2
     [1>=V__patlen,V__patlen=F+2,V__patlen=E+1,V__patlen=C+1,D=2,B=3] 
* CE 17: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 1+ eval_bmhi_search_bb5_in(V__patlen,V__skip2,C,D,V__patlen,V__skip2,E,F):3
     [V__patlen>=2,V__patlen=F+2,V__patlen=E+1,V__patlen=C+1,D=2,B=3] 
* CE 18: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 1+ eval_bmhi_search_bb5_in(V__patlen,V__skip2,C,D,V__patlen,V__skip2,E,F):4
     [V__patlen>=F+3,F>=0,F+1=E,V__patlen=C+1,D=2,B=3] 
* CE 19: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 0
     [B=3] 
* CE 20: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 2+ eval_bmhi_search_bb5_in(V__patlen,V__skip2,C,D,V__patlen,V__skip2,E,F):1+ eval_bmhi_search_bb2_in(V__patlen,V__skip2,G)
     [V__patlen>=2,V__patlen=C+1,G=3,F+1=0,E=0,D=2,B=3] 
* CE 21: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 2+ eval_bmhi_search_bb5_in(V__patlen,V__skip2,C,D,V__patlen,V__skip2,E,F):2+ eval_bmhi_search_bb2_in(V__patlen,V__skip2,G)
     [1>=V__patlen,V__patlen=F+2,V__patlen=E+1,V__patlen=C+1,G=3,D=2,B=3] 
* CE 22: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 2+ eval_bmhi_search_bb5_in(V__patlen,V__skip2,C,D,V__patlen,V__skip2,E,F):3+ eval_bmhi_search_bb2_in(V__patlen,V__skip2,G)
     [V__patlen>=2,V__patlen=F+2,V__patlen=E+1,V__patlen=C+1,G=3,D=2,B=3] 
* CE 23: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 2+ eval_bmhi_search_bb5_in(V__patlen,V__skip2,C,D,V__patlen,V__skip2,E,F):4+ eval_bmhi_search_bb2_in(V__patlen,V__skip2,G)
     [V__patlen>=F+3,F>=0,F+1=E,V__patlen=C+1,G=3,D=2,B=3] 
* CE 24: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) = 1+ eval_bmhi_search_bb2_in(V__patlen,V__skip2,C)
     [C=3,B=3] 

### Cost equations --> "Loop" of eval_bmhi_search_bb2_in/3 
* CEs [20,21,22,23,24] --> Loop 11 
* CEs [15,16,17,18,19] --> Loop 12 

#### Loops of eval_bmhi_search_bb2_in/3 
* Loop 11: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B)->  eval_bmhi_search_bb2_in(V__patlen,V__skip2,B')
                  [B'=3,B=3] 
* Loop 12: eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) [B=3] 

### Ranking functions of CR eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) 

#### Partial ranking functions of CR eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) 


### Resulting Chains:eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) 
* [[11]]...
* [[11],12]
* [12]


### Merging Chains  eval_bmhi_search_bb2_in/3 into  External patterns of execution 
* [[12],[12,[11]]] --> 1 
* [[[11]]] --> 2 


### Specialization of cost equations eval_bmhi_search_bb0_in/3 
* CE 3 is refined into CE [25] 
* CE 4 is refined into CE [26,27] 


#### Refined cost equations eval_bmhi_search_bb0_in/3 
* CE 25: eval_bmhi_search_bb0_in(V__patlen,V__skip2,B) = 0
     [] 
* CE 26: eval_bmhi_search_bb0_in(V__patlen,V__skip2,B) = 1+ eval_bmhi_search_bb2_in(V__patlen,V__skip2,C):1
     [C=3] 
* CE 27: eval_bmhi_search_bb0_in(V__patlen,V__skip2,B) = 1+ eval_bmhi_search_bb2_in(V__patlen,V__skip2,C):2
     [C=3] 

### Cost equations --> "Loop" of eval_bmhi_search_bb0_in/3 
* CEs [27] --> Loop 13 
* CEs [25,26] --> Loop 14 

#### Loops of eval_bmhi_search_bb0_in/3 
* Loop 13: eval_bmhi_search_bb0_in(V__patlen,V__skip2,B) [] 
* Loop 14: eval_bmhi_search_bb0_in(V__patlen,V__skip2,B) [] 

### Ranking functions of CR eval_bmhi_search_bb0_in(V__patlen,V__skip2,B) 

#### Partial ranking functions of CR eval_bmhi_search_bb0_in(V__patlen,V__skip2,B) 


### Resulting Chains:eval_bmhi_search_bb0_in(V__patlen,V__skip2,B) 
* [14]
* [13]...


### Merging Chains  eval_bmhi_search_bb0_in/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_bmhi_search_start/4 
* CE 2 is refined into CE [28,29] 


#### Refined cost equations eval_bmhi_search_start/4 
* CE 28: eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B) = 0+ eval_bmhi_search_bb0_in(V__patlen,V__skip2,B):1
     [] 
* CE 29: eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B) = 0+ eval_bmhi_search_bb0_in(V__patlen,V__skip2,B):2
     [] 

### Cost equations --> "Loop" of eval_bmhi_search_start/4 
* CEs [29] --> Loop 15 
* CEs [28] --> Loop 16 

#### Loops of eval_bmhi_search_start/4 
* Loop 15: eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B) [] 
* Loop 16: eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B) [] 

### Ranking functions of CR eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B) 

#### Partial ranking functions of CR eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B) 


### Resulting Chains:eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B) 
* [16]
* [15]...


### Merging Chains  eval_bmhi_search_start/4 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0,B,C,D,E,F) -> [eval_bmhi_search_bb5_in(V__patlen',V__skip2',V_j_0',B',C',D',E',F')] 
1
#### Cost of phase [8]:eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0,B,C,D,E,F) -> [eval_bmhi_search_bb5_in(V__patlen',V__skip2',V_j_0',B',C',D',E',F')] 
1*it(8)+0
  Such that:it(8) =< V_j_0
it(8) =< V_j_0-V_j_0'

#### Cost of phase [8]:eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0,B,C,D,E,F) -> [eval_bmhi_search_bb5_in(V__patlen',V__skip2',V_j_0',B',C',D',E',F')] 
1*it(8)+0
  Such that:it(8) =< V_j_0
it(8) =< V_j_0-V_j_0'

#### Cost of chains of eval_bmhi_search_bb5_in(V__patlen,V__skip2,V_j_0,B,C,D,E,F):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V_j_0

  with precondition: [B=2,E=0,F+1=0,V__patlen=C,V__skip2=D,V_j_0>=1,V__patlen>=V_j_0+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_j_0-E

  with precondition: [B=2,V__patlen=C,V__skip2=D,E=F+1,E>=1,V__patlen>=V_j_0+1,V_j_0>=E+1] 

* Chain [10]: 0
  with precondition: [B=2,D=V__skip2,V__patlen=C,V_j_0=E,V_j_0=F+1,0>=V_j_0,V__patlen>=V_j_0+1] 

* Chain [9]: 0
  with precondition: [B=2,D=V__skip2,V__patlen=C,V_j_0=E,V_j_0=F+1,V_j_0>=1,V__patlen>=V_j_0+1] 


#### Cost of loops [11] 

 * loop 11:eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) -> [eval_bmhi_search_bb2_in(V__patlen',V__skip2',B')] 
2*s(4)+2
  Such that:s(3) =< V__patlen'
s(4) =< s(3)

#### Cost of phase [11]:eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) -> [eval_bmhi_search_bb2_in(V__patlen',V__skip2',B')] 
2*it(11)+2*s(5)+0
#### Cost of phase [11]:eval_bmhi_search_bb2_in(V__patlen,V__skip2,B) -> [eval_bmhi_search_bb2_in(V__patlen',V__skip2',B')] 
2*it(11)+2*s(5)+0
#### Cost of chains of eval_bmhi_search_bb2_in(V__patlen,V__skip2,B):
* Chain [[11]]...: 4*it(11)+0
  with precondition: [B=3] 

* Chain [[11],12]: 4*it(11)+2*s(7)+1
  Such that:aux(3) =< V__patlen
s(7) =< aux(3)

  with precondition: [B=3] 

* Chain [12]: 2*s(7)+1
  Such that:aux(3) =< V__patlen
s(7) =< aux(3)

  with precondition: [B=3] 


#### Cost of chains of eval_bmhi_search_bb0_in(V__patlen,V__skip2,B):
* Chain [14]: 4*s(15)+4*s(16)+2
  Such that:s(14) =< V__patlen
s(15) =< s(14)

  with precondition: [] 

* Chain [13]...: 4*s(17)+1
  with precondition: [] 


#### Cost of chains of eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B):
* Chain [16]: 4*s(19)+4*s(20)+2
  Such that:s(18) =< V__patlen
s(19) =< s(18)

  with precondition: [] 

* Chain [15]...: 4*s(21)+1
  with precondition: [] 


Closed-form bounds of eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_bmhi_search_start(V_stringlen,V__patlen,V__skip2,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 27 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 75 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 122 ms.
   - Equation cost structures 48 ms.
   - Phase cost structures 51 ms.
   - Chain cost structures 37 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 269 ms.

