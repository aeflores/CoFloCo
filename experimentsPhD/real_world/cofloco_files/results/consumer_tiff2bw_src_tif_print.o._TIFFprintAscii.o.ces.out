Warning: Ignored call to eval__TIFFprintAscii_stop/1 in equation loop_cont_eval__TIFFprintAscii_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval__TIFFprintAscii_bb4_in/3]
1. recursive  : [eval__TIFFprintAscii_14/2,eval__TIFFprintAscii_15/2,eval__TIFFprintAscii_25/3,eval__TIFFprintAscii_26/3,eval__TIFFprintAscii_30/3,eval__TIFFprintAscii_31/3,eval__TIFFprintAscii_bb10_in/2,eval__TIFFprintAscii_bb1_in/1,eval__TIFFprintAscii_bb7_in/2,loop_cont_eval__TIFFprintAscii_bb4_in/3]
2. non_recursive  : [loop_cont_eval__TIFFprintAscii_bb1_in/2]
3. non_recursive  : [eval__TIFFprintAscii_1/1]
4. non_recursive  : [eval__TIFFprintAscii_0/1]
5. non_recursive  : [eval__TIFFprintAscii_bb0_in/1]
6. non_recursive  : [eval__TIFFprintAscii_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval__TIFFprintAscii_bb4_in/3
1. SCC is partially evaluated into eval__TIFFprintAscii_bb1_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval__TIFFprintAscii_1/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval__TIFFprintAscii_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval__TIFFprintAscii_bb4_in/3 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval__TIFFprintAscii_bb4_in/3 
* CE 9: eval__TIFFprintAscii_bb4_in(V_14,B,C) = 1+ eval__TIFFprintAscii_bb4_in(V_14,D,C)
     [D=2,B=2] 
* CE 10: eval__TIFFprintAscii_bb4_in(A,B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of eval__TIFFprintAscii_bb4_in/3 
* CEs [10] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval__TIFFprintAscii_bb4_in/3 
* Loop 7: eval__TIFFprintAscii_bb4_in(A,B,A) [B=2] 
* Loop 8: eval__TIFFprintAscii_bb4_in(V_14,B,C)->  eval__TIFFprintAscii_bb4_in(V_14,B',C)
                  [B'=2,B=2] 

### Ranking functions of CR eval__TIFFprintAscii_bb4_in(V_14,B,C) 

#### Partial ranking functions of CR eval__TIFFprintAscii_bb4_in(V_14,B,C) 


### Resulting Chains:eval__TIFFprintAscii_bb4_in(V_14,B,C) 
* [[8]]...
* [[8],7]
* [7]


### Merging Chains  eval__TIFFprintAscii_bb4_in/3 into  External patterns of execution 
* [[7],[7,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval__TIFFprintAscii_bb1_in/1 
* CE 6 is refined into CE [11] 
* CE 4 is refined into CE [12,13] 
* CE 5 is refined into CE [14] 


#### Refined cost equations eval__TIFFprintAscii_bb1_in/1 
* CE 11: eval__TIFFprintAscii_bb1_in(B) = 0
     [B=3] 
* CE 12: eval__TIFFprintAscii_bb1_in(B) = 2+ eval__TIFFprintAscii_bb4_in(C,D,C):1+ eval__TIFFprintAscii_bb1_in(E)
     [E=3,D=2,B=3] 
* CE 13: eval__TIFFprintAscii_bb1_in(B) = 2+ eval__TIFFprintAscii_bb4_in(C,D,E):2
     [F=3,D=2,B=3] 
* CE 14: eval__TIFFprintAscii_bb1_in(B) = 1+ eval__TIFFprintAscii_bb1_in(C)
     [C=3,B=3] 

### Cost equations --> "Loop" of eval__TIFFprintAscii_bb1_in/1 
* CEs [12,14] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval__TIFFprintAscii_bb1_in/1 
* Loop 9: eval__TIFFprintAscii_bb1_in(B)->  eval__TIFFprintAscii_bb1_in(B')
                  [B'=3,B=3] 
* Loop 10: eval__TIFFprintAscii_bb1_in(B) [B=3] 
* Loop 11: eval__TIFFprintAscii_bb1_in(B) [B=3] 

### Ranking functions of CR eval__TIFFprintAscii_bb1_in(B) 

#### Partial ranking functions of CR eval__TIFFprintAscii_bb1_in(B) 


### Resulting Chains:eval__TIFFprintAscii_bb1_in(B) 
* [[9]]...
* [[9],11]
* [[9],10]...
* [11]
* [10]...


### Merging Chains  eval__TIFFprintAscii_bb1_in/1 into  External patterns of execution 
* [[11],[11,[9]]] --> 1 
* [[10],[[9]],[10,[9]]] --> 2 


### Specialization of cost equations eval__TIFFprintAscii_1/1 
* CE 3 is refined into CE [15,16] 


#### Refined cost equations eval__TIFFprintAscii_1/1 
* CE 15: eval__TIFFprintAscii_1(B) = 1+ eval__TIFFprintAscii_bb1_in(C):1
     [C=3] 
* CE 16: eval__TIFFprintAscii_1(B) = 1+ eval__TIFFprintAscii_bb1_in(C):2
     [C=3] 

### Cost equations --> "Loop" of eval__TIFFprintAscii_1/1 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval__TIFFprintAscii_1/1 
* Loop 12: eval__TIFFprintAscii_1(B) [] 
* Loop 13: eval__TIFFprintAscii_1(B) [] 

### Ranking functions of CR eval__TIFFprintAscii_1(B) 

#### Partial ranking functions of CR eval__TIFFprintAscii_1(B) 


### Resulting Chains:eval__TIFFprintAscii_1(B) 
* [13]
* [12]...


### Merging Chains  eval__TIFFprintAscii_1/1 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval__TIFFprintAscii_start/1 
* CE 2 is refined into CE [17,18] 


#### Refined cost equations eval__TIFFprintAscii_start/1 
* CE 17: eval__TIFFprintAscii_start(B) = 0+ eval__TIFFprintAscii_1(B):1
     [] 
* CE 18: eval__TIFFprintAscii_start(B) = 0+ eval__TIFFprintAscii_1(B):2
     [] 

### Cost equations --> "Loop" of eval__TIFFprintAscii_start/1 
* CEs [18] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of eval__TIFFprintAscii_start/1 
* Loop 14: eval__TIFFprintAscii_start(B) [] 
* Loop 15: eval__TIFFprintAscii_start(B) [] 

### Ranking functions of CR eval__TIFFprintAscii_start(B) 

#### Partial ranking functions of CR eval__TIFFprintAscii_start(B) 


### Resulting Chains:eval__TIFFprintAscii_start(B) 
* [15]
* [14]...


### Merging Chains  eval__TIFFprintAscii_start/1 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval__TIFFprintAscii_bb4_in(V_14,B,C) -> [eval__TIFFprintAscii_bb4_in(V_14',B',C')] 
1
#### Cost of phase [8]:eval__TIFFprintAscii_bb4_in(V_14,B,C) -> [eval__TIFFprintAscii_bb4_in(V_14',B',C')] 
1*it(8)+0
#### Cost of phase [8]:eval__TIFFprintAscii_bb4_in(V_14,B,C) -> [eval__TIFFprintAscii_bb4_in(V_14',B',C')] 
1*it(8)+0
#### Cost of chains of eval__TIFFprintAscii_bb4_in(V_14,B,C):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],7]: 1*it(8)+0
  with precondition: [B=2,V_14=C] 

* Chain [7]: 0
  with precondition: [B=2,C=V_14] 


#### Cost of loops [9] 

 * loop 9:eval__TIFFprintAscii_bb1_in(B) -> [eval__TIFFprintAscii_bb1_in(B')] 
1*s(3)+0
#### Cost of phase [9]:eval__TIFFprintAscii_bb1_in(B) -> [eval__TIFFprintAscii_bb1_in(B')] 
1*s(4)+0
#### Cost of phase [9]:eval__TIFFprintAscii_bb1_in(B) -> [eval__TIFFprintAscii_bb1_in(B')] 
1*s(4)+0
#### Cost of phase [9]:eval__TIFFprintAscii_bb1_in(B) -> [eval__TIFFprintAscii_bb1_in(B')] 
1*s(4)+0
#### Cost of chains of eval__TIFFprintAscii_bb1_in(B):
* Chain [[9]]...: 1*s(4)+0
  with precondition: [B=3] 

* Chain [[9],11]: 1*s(4)+0
  with precondition: [B=3] 

* Chain [[9],10]...: 2*s(4)+2
  with precondition: [B=3] 

* Chain [11]: 0
  with precondition: [B=3] 

* Chain [10]...: 1*s(5)+2
  with precondition: [B=3] 


#### Cost of chains of eval__TIFFprintAscii_1(B):
* Chain [13]: 1*s(10)+1
  with precondition: [] 

* Chain [12]...: 1*s(11)+1
  with precondition: [] 


#### Cost of chains of eval__TIFFprintAscii_start(B):
* Chain [15]: 1*s(12)+1
  with precondition: [] 

* Chain [14]...: 1*s(13)+1
  with precondition: [] 


Closed-form bounds of eval__TIFFprintAscii_start(B): 
-------------------------------------
* Chain [15] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [14]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval__TIFFprintAscii_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 6 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 11 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 10 ms.
   - Equation cost structures 1 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 45 ms.

