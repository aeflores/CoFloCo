Warning: Ignored call to eval_op_show_restore_stop/1 in equation eval_op_show_restore_19/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_op_show_restore_16/3,eval_op_show_restore_17/4,eval_op_show_restore_bb4_in/3]
1. non_recursive  : [eval_op_show_restore_19/1]
2. non_recursive  : [eval_op_show_restore_18/1]
3. non_recursive  : [loop_cont_eval_op_show_restore_bb4_in/2]
4. non_recursive  : [eval_op_show_restore_bb3_in/2]
5. non_recursive  : [eval_op_show_restore_9/2]
6. non_recursive  : [eval_op_show_restore_8/3]
7. non_recursive  : [eval_op_show_restore_6/4]
8. non_recursive  : [eval_op_show_restore_5/3]
9. non_recursive  : [eval_op_show_restore_bb0_in/1]
10. non_recursive  : [eval_op_show_restore_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_op_show_restore_bb4_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_op_show_restore_bb3_in/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_op_show_restore_6/4
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_op_show_restore_bb0_in/1
10. SCC is partially evaluated into eval_op_show_restore_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_op_show_restore_bb4_in/3 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_op_show_restore_bb4_in/3 
* CE 10: eval_op_show_restore_bb4_in(V__,V_code_0,B) = 0
     [B=2] 
* CE 11: eval_op_show_restore_bb4_in(V__,V_code_0,B) = 1+ eval_op_show_restore_bb4_in(V__,C,D)
     [V_code_0>=0,D=2,B=2] 

### Cost equations --> "Loop" of eval_op_show_restore_bb4_in/3 
* CEs [11] --> Loop 7 
* CEs [10] --> Loop 8 

#### Loops of eval_op_show_restore_bb4_in/3 
* Loop 7: eval_op_show_restore_bb4_in(V__,V_code_0,B)->  eval_op_show_restore_bb4_in(V__,V_code_0',B')
                  [V_code_0>=0,B'=2,B=2] 
* Loop 8: eval_op_show_restore_bb4_in(V__,V_code_0,B) [B=2] 

### Ranking functions of CR eval_op_show_restore_bb4_in(V__,V_code_0,B) 

#### Partial ranking functions of CR eval_op_show_restore_bb4_in(V__,V_code_0,B) 


### Resulting Chains:eval_op_show_restore_bb4_in(V__,V_code_0,B) 
* [[7]]...
* [[7],8]
* [8]


### Merging Chains  eval_op_show_restore_bb4_in/3 into  External patterns of execution 
* [[8],[8,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_op_show_restore_bb3_in/2 
* CE 6 is refined into CE [12,13] 
* CE 7 is refined into CE [14,15] 


#### Refined cost equations eval_op_show_restore_bb3_in/2 
* CE 12: eval_op_show_restore_bb3_in(V_11,B) = 1+ eval_op_show_restore_bb4_in(C,D,E):1
     [C+1=V_11,E=2,D=0] 
* CE 13: eval_op_show_restore_bb3_in(V_11,B) = 1+ eval_op_show_restore_bb4_in(C,D,E):2
     [C+1=V_11,E=2,D=0] 
* CE 14: eval_op_show_restore_bb3_in(V_11,B) = 1+ eval_op_show_restore_bb4_in(V_11,C,D):1
     [D=2,C=0] 
* CE 15: eval_op_show_restore_bb3_in(V_11,B) = 1+ eval_op_show_restore_bb4_in(V_11,C,D):2
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_op_show_restore_bb3_in/2 
* CEs [13,15] --> Loop 9 
* CEs [12,14] --> Loop 10 

#### Loops of eval_op_show_restore_bb3_in/2 
* Loop 9: eval_op_show_restore_bb3_in(V_11,B) [] 
* Loop 10: eval_op_show_restore_bb3_in(V_11,B) [] 

### Ranking functions of CR eval_op_show_restore_bb3_in(V_11,B) 

#### Partial ranking functions of CR eval_op_show_restore_bb3_in(V_11,B) 


### Resulting Chains:eval_op_show_restore_bb3_in(V_11,B) 
* [10]
* [9]...


### Merging Chains  eval_op_show_restore_bb3_in/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_op_show_restore_6/4 
* CE 5 is refined into CE [16,17] 


#### Refined cost equations eval_op_show_restore_6/4 
* CE 16: eval_op_show_restore_6(V_11,V_17,V_18,B) = 0+ eval_op_show_restore_bb3_in(V_11,B):1
     [] 
* CE 17: eval_op_show_restore_6(V_11,V_17,V_18,B) = 0+ eval_op_show_restore_bb3_in(V_11,B):2
     [] 

### Cost equations --> "Loop" of eval_op_show_restore_6/4 
* CEs [17] --> Loop 11 
* CEs [16] --> Loop 12 

#### Loops of eval_op_show_restore_6/4 
* Loop 11: eval_op_show_restore_6(V_11,V_17,V_18,B) [] 
* Loop 12: eval_op_show_restore_6(V_11,V_17,V_18,B) [] 

### Ranking functions of CR eval_op_show_restore_6(V_11,V_17,V_18,B) 

#### Partial ranking functions of CR eval_op_show_restore_6(V_11,V_17,V_18,B) 


### Resulting Chains:eval_op_show_restore_6(V_11,V_17,V_18,B) 
* [12]
* [11]...


### Merging Chains  eval_op_show_restore_6/4 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_op_show_restore_bb0_in/1 
* CE 3 is refined into CE [18,19] 
* CE 4 is refined into CE [20,21] 


#### Refined cost equations eval_op_show_restore_bb0_in/1 
* CE 18: eval_op_show_restore_bb0_in(B) = 0+ eval_op_show_restore_6(C,D,E,B):1
     [] 
* CE 19: eval_op_show_restore_bb0_in(B) = 0+ eval_op_show_restore_6(C,D,E,B):2
     [] 
* CE 20: eval_op_show_restore_bb0_in(B) = 0+ eval_op_show_restore_bb3_in(C,B):1
     [] 
* CE 21: eval_op_show_restore_bb0_in(B) = 0+ eval_op_show_restore_bb3_in(C,B):2
     [] 

### Cost equations --> "Loop" of eval_op_show_restore_bb0_in/1 
* CEs [19,21] --> Loop 13 
* CEs [18,20] --> Loop 14 

#### Loops of eval_op_show_restore_bb0_in/1 
* Loop 13: eval_op_show_restore_bb0_in(B) [] 
* Loop 14: eval_op_show_restore_bb0_in(B) [] 

### Ranking functions of CR eval_op_show_restore_bb0_in(B) 

#### Partial ranking functions of CR eval_op_show_restore_bb0_in(B) 


### Resulting Chains:eval_op_show_restore_bb0_in(B) 
* [14]
* [13]...


### Merging Chains  eval_op_show_restore_bb0_in/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_op_show_restore_start/2 
* CE 2 is refined into CE [22,23] 


#### Refined cost equations eval_op_show_restore_start/2 
* CE 22: eval_op_show_restore_start(V_for_error,B) = 0+ eval_op_show_restore_bb0_in(B):1
     [] 
* CE 23: eval_op_show_restore_start(V_for_error,B) = 0+ eval_op_show_restore_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_op_show_restore_start/2 
* CEs [23] --> Loop 15 
* CEs [22] --> Loop 16 

#### Loops of eval_op_show_restore_start/2 
* Loop 15: eval_op_show_restore_start(V_for_error,B) [] 
* Loop 16: eval_op_show_restore_start(V_for_error,B) [] 

### Ranking functions of CR eval_op_show_restore_start(V_for_error,B) 

#### Partial ranking functions of CR eval_op_show_restore_start(V_for_error,B) 


### Resulting Chains:eval_op_show_restore_start(V_for_error,B) 
* [16]
* [15]...


### Merging Chains  eval_op_show_restore_start/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_op_show_restore_bb4_in(V__,V_code_0,B) -> [eval_op_show_restore_bb4_in(V__',V_code_0',B')] 
1
#### Cost of phase [7]:eval_op_show_restore_bb4_in(V__,V_code_0,B) -> [eval_op_show_restore_bb4_in(V__',V_code_0',B')] 
1*it(7)+0
#### Cost of phase [7]:eval_op_show_restore_bb4_in(V__,V_code_0,B) -> [eval_op_show_restore_bb4_in(V__',V_code_0',B')] 
1*it(7)+0
#### Cost of chains of eval_op_show_restore_bb4_in(V__,V_code_0,B):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [V_code_0>=0,B=2] 

* Chain [[7],8]: 1*it(7)+0
  with precondition: [B=2,V_code_0>=0] 

* Chain [8]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_op_show_restore_bb3_in(V_11,B):
* Chain [10]: 1*aux(2)+0
  with precondition: [] 

* Chain [9]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_op_show_restore_6(V_11,V_17,V_18,B):
* Chain [12]: 1*s(6)+0
  with precondition: [] 

* Chain [11]...: 1*s(7)+0
  with precondition: [] 


#### Cost of chains of eval_op_show_restore_bb0_in(B):
* Chain [14]: 1*aux(4)+0
  with precondition: [] 

* Chain [13]...: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_op_show_restore_start(V_for_error,B):
* Chain [16]: 1*s(12)+0
  with precondition: [] 

* Chain [15]...: 1*s(13)+0
  with precondition: [] 


Closed-form bounds of eval_op_show_restore_start(V_for_error,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_op_show_restore_start(V_for_error,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 3 ms.
   - Backward Invariants 1 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 9 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 8 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 44 ms.

