Warning: Ignored call to eval_putcontig8bitYCbCr22tile_stop/1 in equation loop_cont_eval_putcontig8bitYCbCr22tile_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_putcontig8bitYCbCr22tile_bb2_in/6]
1. recursive  : [eval_putcontig8bitYCbCr22tile_bb1_in/3,loop_cont_eval_putcontig8bitYCbCr22tile_bb2_in/4]
2. non_recursive  : [loop_cont_eval_putcontig8bitYCbCr22tile_bb1_in/2]
3. non_recursive  : [eval_putcontig8bitYCbCr22tile_bb0_in/2]
4. non_recursive  : [eval_putcontig8bitYCbCr22tile_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_putcontig8bitYCbCr22tile_bb2_in/6
1. SCC is partially evaluated into eval_putcontig8bitYCbCr22tile_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_putcontig8bitYCbCr22tile_bb0_in/2
4. SCC is partially evaluated into eval_putcontig8bitYCbCr22tile_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_putcontig8bitYCbCr22tile_bb2_in/6 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


#### Refined cost equations eval_putcontig8bitYCbCr22tile_bb2_in/6 
* CE 9: eval_putcontig8bitYCbCr22tile_bb2_in(A,B,C,D,A,E) = 0
     [B>=2,A>=1,B=E+2,D=2,C=1] 
* CE 10: eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D) = 1+ eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,E,F,C,D)
     [V_18>=V__01,V__01>=2,V__02>=2,V__01=E+1,F=2,B=2] 
* CE 11: eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D) = 1+ eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,E,F,C,D)
     [V_18>=V__01,V__02>=2,0>=V__01,V__01=E+1,F=2,B=2] 

### Cost equations --> "Loop" of eval_putcontig8bitYCbCr22tile_bb2_in/6 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_putcontig8bitYCbCr22tile_bb2_in/6 
* Loop 8: eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D)->  eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01',B',C,D)
                  [V_18>=V__01,V__01>=2,V__02>=2,V__01=V__01'+1,B'=2,B=2] 
* Loop 9: eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D)->  eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01',B',C,D)
                  [V_18>=V__01,V__02>=2,0>=V__01,V__01=V__01'+1,B'=2,B=2] 
* Loop 10: eval_putcontig8bitYCbCr22tile_bb2_in(A,B,C,D,A,E) [B>=2,A>=1,B=E+2,D=2,C=1] 

### Ranking functions of CR eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D) 
* RF of phase [8]: [V__01-1]

#### Partial ranking functions of CR eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__01-1


### Resulting Chains:eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D) 
* [[9]]...
* [[8],10]
* [10]


### Merging Chains  eval_putcontig8bitYCbCr22tile_bb2_in/6 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[8]]] --> 2 
* [[[9]]] --> 3 


### Specialization of cost equations eval_putcontig8bitYCbCr22tile_bb1_in/3 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13,14,15] 


#### Refined cost equations eval_putcontig8bitYCbCr22tile_bb1_in/3 
* CE 12: eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) = 0
     [1>=V__02,B=3] 
* CE 13: eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) = 2+ eval_putcontig8bitYCbCr22tile_bb2_in(C,D,E,F,G,H):1+ eval_putcontig8bitYCbCr22tile_bb1_in(I,H,J)
     [H>=0,H+2=D,H+2=V__02,J=3,I=1,G=1,F=2,E=1,C=1,B=3,V_18=1] 
* CE 14: eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) = 2+ eval_putcontig8bitYCbCr22tile_bb2_in(V_18,C,V_18,D,V_18,E):2+ eval_putcontig8bitYCbCr22tile_bb1_in(V_18,E,F)
     [E>=0,V_18>=2,E+2=C,E+2=V__02,F=3,D=2,B=3] 
* CE 15: eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) = 2+ eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V_18,C,D,E):3
     [V__02>=2,0>=V_18,F=3,C=2,B=3] 

### Cost equations --> "Loop" of eval_putcontig8bitYCbCr22tile_bb1_in/3 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [12] --> Loop 14 

#### Loops of eval_putcontig8bitYCbCr22tile_bb1_in/3 
* Loop 11: eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) [V__02>=2,0>=V_18,B=3] 
* Loop 12: eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B)->  eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02',B')
                  [V__02>=2,V_18>=2,V__02=V__02'+2,B'=3,B=3] 
* Loop 13: eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B)->  eval_putcontig8bitYCbCr22tile_bb1_in(V_18',V__02',B')
                  [V__02>=2,V__02=V__02'+2,B'=3,V_18'=1,B=3,V_18=1] 
* Loop 14: eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) [1>=V__02,B=3] 

### Ranking functions of CR eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) 
* RF of phase [12]: [V__02-1]
* RF of phase [13]: [V__02/2-1/2]

#### Partial ranking functions of CR eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V__02-1
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V__02/2-1/2


### Resulting Chains:eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) 
* [[13],14]
* [[12],14]
* [14]
* [11]...


### Merging Chains  eval_putcontig8bitYCbCr22tile_bb1_in/3 into  External patterns of execution 
* [[14,[13]]] --> 1 
* [[14]] --> 2 
* [[14,[12]]] --> 3 
* [[11]] --> 4 


### Specialization of cost equations eval_putcontig8bitYCbCr22tile_bb0_in/2 
* CE 3 is refined into CE [16,17,18,19] 


#### Refined cost equations eval_putcontig8bitYCbCr22tile_bb0_in/2 
* CE 16: eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr22tile_bb1_in(C,V_h,D):1
     [V_h>=2,D=3,C=1] 
* CE 17: eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr22tile_bb1_in(C,V_h,D):2
     [1>=V_h,D=3] 
* CE 18: eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr22tile_bb1_in(C,V_h,D):3
     [V_h>=2,C>=2,D=3] 
* CE 19: eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) = 1+ eval_putcontig8bitYCbCr22tile_bb1_in(C,V_h,D):4
     [V_h>=2,0>=C,D=3] 

### Cost equations --> "Loop" of eval_putcontig8bitYCbCr22tile_bb0_in/2 
* CEs [19] --> Loop 15 
* CEs [16,18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of eval_putcontig8bitYCbCr22tile_bb0_in/2 
* Loop 15: eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) [V_h>=2] 
* Loop 16: eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) [V_h>=2] 
* Loop 17: eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) [1>=V_h] 

### Ranking functions of CR eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) 

#### Partial ranking functions of CR eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) 


### Resulting Chains:eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B) 
* [17]
* [16]
* [15]...


### Merging Chains  eval_putcontig8bitYCbCr22tile_bb0_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 
* [[15]] --> 3 


### Specialization of cost equations eval_putcontig8bitYCbCr22tile_start/7 
* CE 2 is refined into CE [20,21,22] 


#### Refined cost equations eval_putcontig8bitYCbCr22tile_start/7 
* CE 20: eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B):1
     [1>=V_h] 
* CE 21: eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B):2
     [V_h>=2] 
* CE 22: eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B):3
     [V_h>=2] 

### Cost equations --> "Loop" of eval_putcontig8bitYCbCr22tile_start/7 
* CEs [22] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 

#### Loops of eval_putcontig8bitYCbCr22tile_start/7 
* Loop 18: eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=2] 
* Loop 19: eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=2] 
* Loop 20: eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [1>=V_h] 

### Ranking functions of CR eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 

#### Partial ranking functions of CR eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 


### Resulting Chains:eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 
* [20]
* [19]
* [18]...


### Merging Chains  eval_putcontig8bitYCbCr22tile_start/7 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr22tile_bb2_in(V_18',V__02',V__01',B',C',D')] 
1
#### Cost of phase [9]:eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr22tile_bb2_in(V_18',V__02',V__01',B',C',D')] 
1*it(9)+0
#### Cost of loops [8] 

 * loop 8:eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr22tile_bb2_in(V_18',V__02',V__01',B',C',D')] 
1
#### Cost of phase [8]:eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D) -> [eval_putcontig8bitYCbCr22tile_bb2_in(V_18',V__02',V__01',B',C',D')] 
1*it(8)+0
  Such that:it(8) =< V__01
it(8) =< V__01-V__01'

#### Cost of chains of eval_putcontig8bitYCbCr22tile_bb2_in(V_18,V__02,V__01,B,C,D):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [0>=V__01,V_18>=V__01,V__02>=2,B=2] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V__01

  with precondition: [B=2,V_18=C,V__02=D+2,V__02>=2,V__01>=2,V_18>=V__01] 

* Chain [10]: 0
  with precondition: [V__01=1,B=2,V_18=C,V__02=D+2,V_18>=1,V__02>=2] 


#### Cost of loops [13] 

 * loop 13:eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) -> [eval_putcontig8bitYCbCr22tile_bb1_in(V_18',V__02',B')] 
2
#### Cost of phase [13]:eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) -> [eval_putcontig8bitYCbCr22tile_bb1_in(V_18',V__02',B')] 
2*it(13)+0
  Such that:it(13) =< V__02/2
it(13) =< V__02/2-V__02'/2

#### Cost of loops [12] 

 * loop 12:eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) -> [eval_putcontig8bitYCbCr22tile_bb1_in(V_18',V__02',B')] 
1*s(2)+2
  Such that:s(2) =< V_18'

#### Cost of phase [12]:eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B) -> [eval_putcontig8bitYCbCr22tile_bb1_in(V_18',V__02',B')] 
2*it(12)+1*s(3)+0
  Such that:aux(1) =< V_18
it(12) =< V__02
it(12) =< V__02-V__02'
s(3) =< it(12)*aux(1)

#### Cost of chains of eval_putcontig8bitYCbCr22tile_bb1_in(V_18,V__02,B):
* Chain [[13],14]: 2*it(13)+0
  Such that:it(13) =< V__02/2

  with precondition: [V_18=1,B=3,V__02>=2] 

* Chain [[12],14]: 2*it(12)+1*s(3)+0
  Such that:aux(1) =< V_18
it(12) =< V__02
s(3) =< it(12)*aux(1)

  with precondition: [B=3,V_18>=2,V__02>=2] 

* Chain [14]: 0
  with precondition: [B=3,1>=V__02] 

* Chain [11]...: 1*s(4)+2
  with precondition: [B=3,0>=V_18,V__02>=2] 


#### Cost of chains of eval_putcontig8bitYCbCr22tile_bb0_in(V_h,B):
* Chain [17]: 1
  with precondition: [1>=V_h] 

* Chain [16]: 2*s(5)+2*s(7)+1*s(8)+1
  Such that:s(7) =< V_h
s(5) =< V_h/2

  with precondition: [V_h>=2] 

* Chain [15]...: 1*s(9)+3
  with precondition: [V_h>=2] 


#### Cost of chains of eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B):
* Chain [20]: 1
  with precondition: [1>=V_h] 

* Chain [19]: 2*s(10)+2*s(11)+1*s(12)+1
  Such that:s(10) =< V_h
s(11) =< V_h/2

  with precondition: [V_h>=2] 

* Chain [18]...: 1*s(13)+3
  with precondition: [V_h>=2] 


Closed-form bounds of eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): 
-------------------------------------
* Chain [20] with precondition: [1>=V_h] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [V_h>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [V_h>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_putcontig8bitYCbCr22tile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 37 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 34 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 16 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 131 ms.

