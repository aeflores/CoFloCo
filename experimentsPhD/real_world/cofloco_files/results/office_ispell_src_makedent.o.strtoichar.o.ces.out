Warning: Ignored call to eval_strtoichar_stop/1 in equation eval_strtoichar_bb9_in/2 
Warning: Ignored call to eval_strtoichar_stop/1 in equation eval_strtoichar_bb9_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_strtoichar_14/6,eval_strtoichar_15/6,eval_strtoichar_bb1_in/5,eval_strtoichar_bb5_in/6,eval_strtoichar_bb8_in/6]
1. non_recursive  : [eval_strtoichar_bb9_in/2]
2. non_recursive  : [loop_cont_eval_strtoichar_bb1_in/3]
3. non_recursive  : [eval_strtoichar_bb0_in/4]
4. non_recursive  : [eval_strtoichar_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_strtoichar_bb1_in/5
1. SCC is partially evaluated into eval_strtoichar_bb9_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_strtoichar_bb0_in/4
4. SCC is partially evaluated into eval_strtoichar_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_strtoichar_bb1_in/5 
* CE 7 is refined into CE [11] 
* CE 8 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations eval_strtoichar_bb1_in/5 
* CE 11: eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) = 0
     [V__02>=2,V__02=C+1,B=2] 
* CE 12: eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) = 0
     [1>=V__02,V__02=C+1,B=2] 
* CE 13: eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) = 1+ eval_strtoichar_bb1_in(V_canonical,D,E,F,C)
     [V__02>=2,V__02=E+1,F=2,B=2] 

### Cost equations --> "Loop" of eval_strtoichar_bb1_in/5 
* CEs [13] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_strtoichar_bb1_in/5 
* Loop 10: eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C)->  eval_strtoichar_bb1_in(V_canonical,V__laststringch',V__02',B',C)
                  [V__02>=2,V__02=V__02'+1,B'=2,B=2] 
* Loop 11: eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) [V__02>=2,V__02=C+1,B=2] 
* Loop 12: eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) [1>=V__02,V__02=C+1,B=2] 

### Ranking functions of CR eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) 
* RF of phase [10]: [V__02-1]

#### Partial ranking functions of CR eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V__02-1


### Resulting Chains:eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) 
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  eval_strtoichar_bb1_in/5 into  External patterns of execution 
* [[12,[10]]] --> 1 
* [[12]] --> 2 
* [[11]] --> 3 
* [[11,[10]]] --> 4 


### Specialization of cost equations eval_strtoichar_bb9_in/2 
* CE 9 is refined into CE [14] 
* CE 10 is refined into CE [15] 


#### Refined cost equations eval_strtoichar_bb9_in/2 
* CE 14: eval_strtoichar_bb9_in(V_3,B) = 0
     [V_3>=1] 
* CE 15: eval_strtoichar_bb9_in(V_3,B) = 0
     [0>=V_3] 

### Cost equations --> "Loop" of eval_strtoichar_bb9_in/2 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_strtoichar_bb9_in/2 
* Loop 13: eval_strtoichar_bb9_in(V_3,B) [V_3>=1] 
* Loop 14: eval_strtoichar_bb9_in(V_3,B) [0>=V_3] 

### Ranking functions of CR eval_strtoichar_bb9_in(V_3,B) 

#### Partial ranking functions of CR eval_strtoichar_bb9_in(V_3,B) 


### Resulting Chains:eval_strtoichar_bb9_in(V_3,B) 
* [14]
* [13]


### Merging Chains  eval_strtoichar_bb9_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_strtoichar_bb0_in/4 
* CE 4 is refined into CE [16,17,18,19] 
* CE 5 is refined into CE [20] 
* CE 3 is refined into CE [21] 


#### Refined cost equations eval_strtoichar_bb0_in/4 
* CE 16: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) = 1+ eval_strtoichar_bb1_in(V_canonical,V__laststringch,V_outlen,C,D):1+ eval_strtoichar_bb9_in(E,B):1
     [V_outlen>=2,E=0,D=0,C=2] 
* CE 17: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) = 1+ eval_strtoichar_bb1_in(V_canonical,V__laststringch,C,D,E):2+ eval_strtoichar_bb9_in(F,B):1
     [F=0,E=0,D=2,C=1,V_outlen=1] 
* CE 18: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) = 1+ eval_strtoichar_bb1_in(V_canonical,V__laststringch,C,D,E):3+ eval_strtoichar_bb9_in(E,B):2
     [E>=1,E+1=C,E+1=V_outlen,D=2] 
* CE 19: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) = 1+ eval_strtoichar_bb1_in(V_canonical,V__laststringch,V_outlen,C,D):4+ eval_strtoichar_bb9_in(D,B):2
     [V_outlen>=D+2,D>=1,C=2] 
* CE 20: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) = 1+ eval_strtoichar_bb1_in(V_canonical,V__laststringch,C,D,E):2+ eval_strtoichar_bb9_in(E,B):1
     [0>=E+2,E+1=C,E+1=V_outlen,D=2] 
* CE 21: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) = 1+ eval_strtoichar_bb1_in(V_canonical,V__laststringch,C,D,E):2+ eval_strtoichar_bb9_in(F,B):1
     [F+1=0,E+1=0,D=2,C=0,V_outlen=0] 

### Cost equations --> "Loop" of eval_strtoichar_bb0_in/4 
* CEs [16,18,19] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of eval_strtoichar_bb0_in/4 
* Loop 15: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) [V_outlen>=2] 
* Loop 16: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) [0>=V_outlen+1] 
* Loop 17: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) [V_outlen=1] 
* Loop 18: eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) [V_outlen=0] 

### Ranking functions of CR eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) 

#### Partial ranking functions of CR eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) 


### Resulting Chains:eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B) 
* [18]
* [17]
* [16]
* [15]


### Merging Chains  eval_strtoichar_bb0_in/4 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16]] --> 3 
* [[15]] --> 4 


### Specialization of cost equations eval_strtoichar_start/4 
* CE 2 is refined into CE [22,23,24,25] 


#### Refined cost equations eval_strtoichar_start/4 
* CE 22: eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) = 0+ eval_strtoichar_bb0_in(C,V_canonical,V__laststringch,B):1
     [C=0,V_outlen=0] 
* CE 23: eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) = 0+ eval_strtoichar_bb0_in(C,V_canonical,V__laststringch,B):2
     [C=1,V_outlen=1] 
* CE 24: eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) = 0+ eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B):3
     [0>=V_outlen+1] 
* CE 25: eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) = 0+ eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B):4
     [V_outlen>=2] 

### Cost equations --> "Loop" of eval_strtoichar_start/4 
* CEs [25] --> Loop 19 
* CEs [24] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [22] --> Loop 22 

#### Loops of eval_strtoichar_start/4 
* Loop 19: eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) [V_outlen>=2] 
* Loop 20: eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) [0>=V_outlen+1] 
* Loop 21: eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) [V_outlen=1] 
* Loop 22: eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) [V_outlen=0] 

### Ranking functions of CR eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) 

#### Partial ranking functions of CR eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) 


### Resulting Chains:eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B) 
* [22]
* [21]
* [20]
* [19]


### Merging Chains  eval_strtoichar_start/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[19]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) -> [eval_strtoichar_bb1_in(V_canonical',V__laststringch',V__02',B',C')] 
1
#### Cost of phase [10]:eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) -> [eval_strtoichar_bb1_in(V_canonical',V__laststringch',V__02',B',C')] 
1*it(10)+0
  Such that:it(10) =< V__02
it(10) =< V__02-V__02'

#### Cost of phase [10]:eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C) -> [eval_strtoichar_bb1_in(V_canonical',V__laststringch',V__02',B',C')] 
1*it(10)+0
  Such that:it(10) =< V__02
it(10) =< V__02-V__02'

#### Cost of chains of eval_strtoichar_bb1_in(V_canonical,V__laststringch,V__02,B,C):
* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< V__02

  with precondition: [B=2,C=0,V__02>=2] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V__02-C

  with precondition: [B=2,C>=1,V__02>=C+2] 

* Chain [12]: 0
  with precondition: [B=2,V__02=C+1,1>=V__02] 

* Chain [11]: 0
  with precondition: [B=2,V__02=C+1,V__02>=2] 


#### Cost of chains of eval_strtoichar_bb9_in(V_3,B):
* Chain [14]: 0
  with precondition: [0>=V_3] 

* Chain [13]: 0
  with precondition: [V_3>=1] 


#### Cost of chains of eval_strtoichar_bb0_in(V_outlen,V_canonical,V__laststringch,B):
* Chain [18]: 1
  with precondition: [V_outlen=0] 

* Chain [17]: 1
  with precondition: [V_outlen=1] 

* Chain [16]: 1
  with precondition: [0>=V_outlen+1] 

* Chain [15]: 2*s(1)+1
  Such that:aux(1) =< V_outlen
s(1) =< aux(1)

  with precondition: [V_outlen>=2] 


#### Cost of chains of eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B):
* Chain [22]: 1
  with precondition: [V_outlen=0] 

* Chain [21]: 1
  with precondition: [V_outlen=1] 

* Chain [20]: 1
  with precondition: [0>=V_outlen+1] 

* Chain [19]: 2*s(4)+1
  Such that:s(3) =< V_outlen
s(4) =< s(3)

  with precondition: [V_outlen>=2] 


Closed-form bounds of eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B): 
-------------------------------------
* Chain [22] with precondition: [V_outlen=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [21] with precondition: [V_outlen=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [20] with precondition: [0>=V_outlen+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [V_outlen>=2] 
    - Upper bound: 2*V_outlen+1 
    - Complexity: n 

### Maximum cost of eval_strtoichar_start(V_outlen,V_canonical,V__laststringch,B): nat(V_outlen)*2+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 10 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 28 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 18 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 89 ms.

