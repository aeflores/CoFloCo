Warning: Ignored call to eval_encode_mcu_huff_stop/1 in equation eval_encode_mcu_huff_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_encode_mcu_huff_bb11_in/1]
1. recursive  : [eval_encode_mcu_huff_24/3,eval_encode_mcu_huff_25/3,eval_encode_mcu_huff_bb4_in/2]
2. non_recursive  : [eval_encode_mcu_huff_bb10_in/1]
3. non_recursive  : [eval_encode_mcu_huff_37/1]
4. non_recursive  : [eval_encode_mcu_huff_36/1]
5. non_recursive  : [loop_cont_eval_encode_mcu_huff_bb4_in/2]
6. non_recursive  : [eval_encode_mcu_huff_bb3_in/1]
7. non_recursive  : [eval_encode_mcu_huff_11/1]
8. non_recursive  : [eval_encode_mcu_huff_10/2]
9. non_recursive  : [eval_encode_mcu_huff_4/1]
10. non_recursive  : [eval_encode_mcu_huff_3/1]
11. non_recursive  : [eval_encode_mcu_huff_bb0_in/1]
12. non_recursive  : [eval_encode_mcu_huff_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_encode_mcu_huff_bb4_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_encode_mcu_huff_37/1
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_encode_mcu_huff_bb4_in/2
6. SCC is partially evaluated into eval_encode_mcu_huff_bb3_in/1
7. SCC is partially evaluated into eval_encode_mcu_huff_11/1
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_encode_mcu_huff_4/1
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_encode_mcu_huff_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encode_mcu_huff_bb4_in/2 
* CE 10 is refined into CE [14] 
* CE 8 is refined into CE [15] 
* CE 9 is refined into CE [16] 


#### Refined cost equations eval_encode_mcu_huff_bb4_in/2 
* CE 14: eval_encode_mcu_huff_bb4_in(V_blkn_0,B) = 0
     [V_blkn_0>=0,B=3] 
* CE 15: eval_encode_mcu_huff_bb4_in(V_blkn_0,B) = 0
     [V_blkn_0>=0,B=2] 
* CE 16: eval_encode_mcu_huff_bb4_in(V_blkn_0,B) = 1+ eval_encode_mcu_huff_bb4_in(C,B)
     [V_blkn_0>=0,V_blkn_0+1=C] 

### Cost equations --> "Loop" of eval_encode_mcu_huff_bb4_in/2 
* CEs [16] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_encode_mcu_huff_bb4_in/2 
* Loop 11: eval_encode_mcu_huff_bb4_in(V_blkn_0,B)->  eval_encode_mcu_huff_bb4_in(V_blkn_0',B)
                  [V_blkn_0>=0,V_blkn_0+1=V_blkn_0'] 
* Loop 12: eval_encode_mcu_huff_bb4_in(V_blkn_0,B) [V_blkn_0>=0,B=3] 
* Loop 13: eval_encode_mcu_huff_bb4_in(V_blkn_0,B) [V_blkn_0>=0,B=2] 

### Ranking functions of CR eval_encode_mcu_huff_bb4_in(V_blkn_0,B) 

#### Partial ranking functions of CR eval_encode_mcu_huff_bb4_in(V_blkn_0,B) 


### Resulting Chains:eval_encode_mcu_huff_bb4_in(V_blkn_0,B) 
* [[11]]...
* [[11],13]
* [[11],12]
* [13]
* [12]


### Merging Chains  eval_encode_mcu_huff_bb4_in/2 into  External patterns of execution 
* [[13],[13,[11]]] --> 1 
* [[12],[12,[11]]] --> 2 
* [[[11]]] --> 3 


### Specialization of cost equations eval_encode_mcu_huff_37/1 
* CE 13 is refined into CE [17] 


#### Refined cost equations eval_encode_mcu_huff_37/1 
* CE 17: eval_encode_mcu_huff_37(B) = 0
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_huff_37/1 
* CEs [17] --> Loop 14 

#### Loops of eval_encode_mcu_huff_37/1 
* Loop 14: eval_encode_mcu_huff_37(B) [] 

### Ranking functions of CR eval_encode_mcu_huff_37(B) 

#### Partial ranking functions of CR eval_encode_mcu_huff_37(B) 


### Resulting Chains:eval_encode_mcu_huff_37(B) 
* [14]


### Merging Chains  eval_encode_mcu_huff_37/1 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations loop_cont_eval_encode_mcu_huff_bb4_in/2 
* CE 12 is refined into CE [18] 
* CE 11 is refined into CE [19] 


#### Refined cost equations loop_cont_eval_encode_mcu_huff_bb4_in/2 
* CE 18: loop_cont_eval_encode_mcu_huff_bb4_in(B,A) = 0+ eval_encode_mcu_huff_37(A):1
     [B=3] 
* CE 19: loop_cont_eval_encode_mcu_huff_bb4_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_encode_mcu_huff_bb4_in/2 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 

#### Loops of loop_cont_eval_encode_mcu_huff_bb4_in/2 
* Loop 15: loop_cont_eval_encode_mcu_huff_bb4_in(B,A) [B=3] 
* Loop 16: loop_cont_eval_encode_mcu_huff_bb4_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_encode_mcu_huff_bb4_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_encode_mcu_huff_bb4_in(B,A) 


### Resulting Chains:loop_cont_eval_encode_mcu_huff_bb4_in(B,A) 
* [16]
* [15]


### Merging Chains  loop_cont_eval_encode_mcu_huff_bb4_in/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_encode_mcu_huff_bb3_in/1 
* CE 7 is refined into CE [20,21,22] 


#### Refined cost equations eval_encode_mcu_huff_bb3_in/1 
* CE 20: eval_encode_mcu_huff_bb3_in(B) = 1+ eval_encode_mcu_huff_bb4_in(C,D):1+ loop_cont_eval_encode_mcu_huff_bb4_in(E,B):1
     [E=2,D=2,C=0] 
* CE 21: eval_encode_mcu_huff_bb3_in(B) = 1+ eval_encode_mcu_huff_bb4_in(C,D):2+ loop_cont_eval_encode_mcu_huff_bb4_in(E,B):2
     [E=3,D=3,C=0] 
* CE 22: eval_encode_mcu_huff_bb3_in(B) = 1+ eval_encode_mcu_huff_bb4_in(C,D):3
     [C=0] 

### Cost equations --> "Loop" of eval_encode_mcu_huff_bb3_in/1 
* CEs [22] --> Loop 17 
* CEs [20,21] --> Loop 18 

#### Loops of eval_encode_mcu_huff_bb3_in/1 
* Loop 17: eval_encode_mcu_huff_bb3_in(B) [] 
* Loop 18: eval_encode_mcu_huff_bb3_in(B) [] 

### Ranking functions of CR eval_encode_mcu_huff_bb3_in(B) 

#### Partial ranking functions of CR eval_encode_mcu_huff_bb3_in(B) 


### Resulting Chains:eval_encode_mcu_huff_bb3_in(B) 
* [18]
* [17]...


### Merging Chains  eval_encode_mcu_huff_bb3_in/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_encode_mcu_huff_11/1 
* CE 5 is refined into CE [23,24] 
* CE 6 is refined into CE [25] 


#### Refined cost equations eval_encode_mcu_huff_11/1 
* CE 23: eval_encode_mcu_huff_11(B) = 0+ eval_encode_mcu_huff_bb3_in(B):1
     [] 
* CE 24: eval_encode_mcu_huff_11(B) = 0+ eval_encode_mcu_huff_bb3_in(B):2
     [] 
* CE 25: eval_encode_mcu_huff_11(B) = 0
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_huff_11/1 
* CEs [23,25] --> Loop 19 
* CEs [24] --> Loop 20 

#### Loops of eval_encode_mcu_huff_11/1 
* Loop 19: eval_encode_mcu_huff_11(B) [] 
* Loop 20: eval_encode_mcu_huff_11(B) [] 

### Ranking functions of CR eval_encode_mcu_huff_11(B) 

#### Partial ranking functions of CR eval_encode_mcu_huff_11(B) 


### Resulting Chains:eval_encode_mcu_huff_11(B) 
* [20]...
* [19]


### Merging Chains  eval_encode_mcu_huff_11/1 into  External patterns of execution 
* [[19]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_encode_mcu_huff_4/1 
* CE 3 is refined into CE [26,27] 
* CE 4 is refined into CE [28,29] 


#### Refined cost equations eval_encode_mcu_huff_4/1 
* CE 26: eval_encode_mcu_huff_4(B) = 0+ eval_encode_mcu_huff_11(B):1
     [] 
* CE 27: eval_encode_mcu_huff_4(B) = 0+ eval_encode_mcu_huff_11(B):2
     [] 
* CE 28: eval_encode_mcu_huff_4(B) = 0+ eval_encode_mcu_huff_bb3_in(B):1
     [] 
* CE 29: eval_encode_mcu_huff_4(B) = 0+ eval_encode_mcu_huff_bb3_in(B):2
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_huff_4/1 
* CEs [27,29] --> Loop 21 
* CEs [26,28] --> Loop 22 

#### Loops of eval_encode_mcu_huff_4/1 
* Loop 21: eval_encode_mcu_huff_4(B) [] 
* Loop 22: eval_encode_mcu_huff_4(B) [] 

### Ranking functions of CR eval_encode_mcu_huff_4(B) 

#### Partial ranking functions of CR eval_encode_mcu_huff_4(B) 


### Resulting Chains:eval_encode_mcu_huff_4(B) 
* [22]
* [21]...


### Merging Chains  eval_encode_mcu_huff_4/1 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_encode_mcu_huff_start/1 
* CE 2 is refined into CE [30,31] 


#### Refined cost equations eval_encode_mcu_huff_start/1 
* CE 30: eval_encode_mcu_huff_start(B) = 0+ eval_encode_mcu_huff_4(B):1
     [] 
* CE 31: eval_encode_mcu_huff_start(B) = 0+ eval_encode_mcu_huff_4(B):2
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_huff_start/1 
* CEs [31] --> Loop 23 
* CEs [30] --> Loop 24 

#### Loops of eval_encode_mcu_huff_start/1 
* Loop 23: eval_encode_mcu_huff_start(B) [] 
* Loop 24: eval_encode_mcu_huff_start(B) [] 

### Ranking functions of CR eval_encode_mcu_huff_start(B) 

#### Partial ranking functions of CR eval_encode_mcu_huff_start(B) 


### Resulting Chains:eval_encode_mcu_huff_start(B) 
* [24]
* [23]...


### Merging Chains  eval_encode_mcu_huff_start/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_encode_mcu_huff_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_huff_bb4_in(V_blkn_0',B')] 
1
#### Cost of phase [11]:eval_encode_mcu_huff_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_huff_bb4_in(V_blkn_0',B')] 
1*it(11)+0
#### Cost of phase [11]:eval_encode_mcu_huff_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_huff_bb4_in(V_blkn_0',B')] 
1*it(11)+0
#### Cost of phase [11]:eval_encode_mcu_huff_bb4_in(V_blkn_0,B) -> [eval_encode_mcu_huff_bb4_in(V_blkn_0',B')] 
1*it(11)+0
#### Cost of chains of eval_encode_mcu_huff_bb4_in(V_blkn_0,B):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [V_blkn_0>=0] 

* Chain [[11],13]: 1*it(11)+0
  with precondition: [B=2,V_blkn_0>=0] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=3,V_blkn_0>=0] 

* Chain [13]: 0
  with precondition: [B=2,V_blkn_0>=0] 

* Chain [12]: 0
  with precondition: [B=3,V_blkn_0>=0] 


#### Cost of chains of eval_encode_mcu_huff_37(B):
* Chain [14]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_encode_mcu_huff_bb4_in(B,A):
* Chain [16]: 0
  with precondition: [B=2] 

* Chain [15]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_encode_mcu_huff_bb3_in(B):
* Chain [18]: 1*aux(3)+0
  with precondition: [] 

* Chain [17]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_huff_11(B):
* Chain [20]...: 1*s(6)+1
  with precondition: [] 

* Chain [19]: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_huff_4(B):
* Chain [22]: 1*aux(5)+0
  with precondition: [] 

* Chain [21]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_huff_start(B):
* Chain [24]: 1*s(12)+0
  with precondition: [] 

* Chain [23]...: 1*s(13)+0
  with precondition: [] 


Closed-form bounds of eval_encode_mcu_huff_start(B): 
-------------------------------------
* Chain [24] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_encode_mcu_huff_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 13 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 10 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 46 ms.

