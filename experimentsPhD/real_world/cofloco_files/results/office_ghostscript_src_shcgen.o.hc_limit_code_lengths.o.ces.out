Warning: Ignored call to eval_hc_limit_code_lengths_stop/1 in equation loop_cont_eval_hc_limit_code_lengths_bb6_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_hc_limit_code_lengths_bb1_in/4]
1. recursive  : [eval_hc_limit_code_lengths_bb4_in/4]
2. recursive  : [eval_hc_limit_code_lengths_NewDefault_in/2,eval_hc_limit_code_lengths_bb11_in/2,eval_hc_limit_code_lengths_bb6_in/2]
3. non_recursive  : [loop_cont_eval_hc_limit_code_lengths_bb6_in/2]
4. non_recursive  : [loop_cont_eval_hc_limit_code_lengths_bb4_in/3]
5. non_recursive  : [loop_cont_eval_hc_limit_code_lengths_bb1_in/4]
6. non_recursive  : [eval_hc_limit_code_lengths_bb0_in/2]
7. non_recursive  : [eval_hc_limit_code_lengths_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_hc_limit_code_lengths_bb1_in/4
1. SCC is partially evaluated into eval_hc_limit_code_lengths_bb4_in/4
2. SCC is partially evaluated into eval_hc_limit_code_lengths_bb6_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_hc_limit_code_lengths_bb4_in/3
5. SCC is partially evaluated into loop_cont_eval_hc_limit_code_lengths_bb1_in/4
6. SCC is partially evaluated into eval_hc_limit_code_lengths_bb0_in/2
7. SCC is partially evaluated into eval_hc_limit_code_lengths_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_hc_limit_code_lengths_bb1_in/4 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


#### Refined cost equations eval_hc_limit_code_lengths_bb1_in/4 
* CE 12: eval_hc_limit_code_lengths_bb1_in(A,B,A,C) = 0
     [B=4] 
* CE 13: eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D) = 1+ eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D)
     [] 

### Cost equations --> "Loop" of eval_hc_limit_code_lengths_bb1_in/4 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_hc_limit_code_lengths_bb1_in/4 
* Loop 11: eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D)->  eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D)
                  [] 
* Loop 12: eval_hc_limit_code_lengths_bb1_in(A,B,A,C) [B=4] 

### Ranking functions of CR eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D) 

#### Partial ranking functions of CR eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D) 


### Resulting Chains:eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D) 
* [[11]]...
* [[11],12]
* [12]


### Merging Chains  eval_hc_limit_code_lengths_bb1_in/4 into  External patterns of execution 
* [[12],[12,[11]]] --> 1 
* [[[11]]] --> 2 


### Specialization of cost equations eval_hc_limit_code_lengths_bb4_in/4 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations eval_hc_limit_code_lengths_bb4_in/4 
* CE 14: eval_hc_limit_code_lengths_bb4_in(A,B,C,B) = 0
     [C=3] 
* CE 15: eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C) = 1+ eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C)
     [] 

### Cost equations --> "Loop" of eval_hc_limit_code_lengths_bb4_in/4 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_hc_limit_code_lengths_bb4_in/4 
* Loop 13: eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C)->  eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C)
                  [] 
* Loop 14: eval_hc_limit_code_lengths_bb4_in(A,B,C,B) [C=3] 

### Ranking functions of CR eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C) 

#### Partial ranking functions of CR eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C) 


### Resulting Chains:eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C) 
* [[13]]...
* [[13],14]
* [14]


### Merging Chains  eval_hc_limit_code_lengths_bb4_in/4 into  External patterns of execution 
* [[14],[14,[13]]] --> 1 
* [[[13]]] --> 2 


### Specialization of cost equations eval_hc_limit_code_lengths_bb6_in/2 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 


#### Refined cost equations eval_hc_limit_code_lengths_bb6_in/2 
* CE 16: eval_hc_limit_code_lengths_bb6_in(V_needed_0,B) = 0
     [0>=V_needed_0,B=2] 
* CE 17: eval_hc_limit_code_lengths_bb6_in(V_needed_0,B) = 1+ eval_hc_limit_code_lengths_bb6_in(C,D)
     [V_needed_0>=1,V_needed_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_hc_limit_code_lengths_bb6_in/2 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of eval_hc_limit_code_lengths_bb6_in/2 
* Loop 15: eval_hc_limit_code_lengths_bb6_in(V_needed_0,B)->  eval_hc_limit_code_lengths_bb6_in(V_needed_0',B')
                  [V_needed_0>=1,V_needed_0=V_needed_0'+1,B'=2,B=2] 
* Loop 16: eval_hc_limit_code_lengths_bb6_in(V_needed_0,B) [0>=V_needed_0,B=2] 

### Ranking functions of CR eval_hc_limit_code_lengths_bb6_in(V_needed_0,B) 
* RF of phase [15]: [V_needed_0]

#### Partial ranking functions of CR eval_hc_limit_code_lengths_bb6_in(V_needed_0,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_needed_0


### Resulting Chains:eval_hc_limit_code_lengths_bb6_in(V_needed_0,B) 
* [[15],16]
* [16]


### Merging Chains  eval_hc_limit_code_lengths_bb6_in/2 into  External patterns of execution 
* [[16]] --> 1 
* [[16,[15]]] --> 2 


### Specialization of cost equations loop_cont_eval_hc_limit_code_lengths_bb4_in/3 
* CE 9 is refined into CE [18,19] 


#### Refined cost equations loop_cont_eval_hc_limit_code_lengths_bb4_in/3 
* CE 18: loop_cont_eval_hc_limit_code_lengths_bb4_in(D,A,B) = 1+ eval_hc_limit_code_lengths_bb6_in(A,E):1
     [0>=A,E=2,D=3] 
* CE 19: loop_cont_eval_hc_limit_code_lengths_bb4_in(D,A,B) = 1+ eval_hc_limit_code_lengths_bb6_in(A,E):2
     [A>=1,E=2,D=3] 

### Cost equations --> "Loop" of loop_cont_eval_hc_limit_code_lengths_bb4_in/3 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 

#### Loops of loop_cont_eval_hc_limit_code_lengths_bb4_in/3 
* Loop 17: loop_cont_eval_hc_limit_code_lengths_bb4_in(D,A,B) [A>=1,D=3] 
* Loop 18: loop_cont_eval_hc_limit_code_lengths_bb4_in(D,A,B) [0>=A,D=3] 

### Ranking functions of CR loop_cont_eval_hc_limit_code_lengths_bb4_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_hc_limit_code_lengths_bb4_in(D,A,B) 


### Resulting Chains:loop_cont_eval_hc_limit_code_lengths_bb4_in(D,A,B) 
* [18]
* [17]


### Merging Chains  loop_cont_eval_hc_limit_code_lengths_bb4_in/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations loop_cont_eval_hc_limit_code_lengths_bb1_in/4 
* CE 6 is refined into CE [20,21,22] 


#### Refined cost equations loop_cont_eval_hc_limit_code_lengths_bb1_in/4 
* CE 20: loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C) = 1+ eval_hc_limit_code_lengths_bb4_in(A,B,J,B):1+ loop_cont_eval_hc_limit_code_lengths_bb4_in(K,B,C):1
     [0>=B,K=3,J=3,I=4] 
* CE 21: loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C) = 1+ eval_hc_limit_code_lengths_bb4_in(A,B,J,B):1+ loop_cont_eval_hc_limit_code_lengths_bb4_in(K,B,C):2
     [B>=1,K=3,J=3,I=4] 
* CE 22: loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C) = 1+ eval_hc_limit_code_lengths_bb4_in(A,B,J,K):2
     [I=4] 

### Cost equations --> "Loop" of loop_cont_eval_hc_limit_code_lengths_bb1_in/4 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 

#### Loops of loop_cont_eval_hc_limit_code_lengths_bb1_in/4 
* Loop 19: loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C) [I=4] 
* Loop 20: loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C) [B>=1,I=4] 
* Loop 21: loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C) [0>=B,I=4] 

### Ranking functions of CR loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C) 


### Resulting Chains:loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C) 
* [21]
* [20]
* [19]...


### Merging Chains  loop_cont_eval_hc_limit_code_lengths_bb1_in/4 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 


### Specialization of cost equations eval_hc_limit_code_lengths_bb0_in/2 
* CE 3 is refined into CE [23,24,25,26] 


#### Refined cost equations eval_hc_limit_code_lengths_bb0_in/2 
* CE 23: eval_hc_limit_code_lengths_bb0_in(V_max_length,B) = 1+ eval_hc_limit_code_lengths_bb1_in(V_max_length,C,V_max_length,D):1+ loop_cont_eval_hc_limit_code_lengths_bb1_in(E,V_max_length,D,B):1
     [0>=D,E=4,C=4] 
* CE 24: eval_hc_limit_code_lengths_bb0_in(V_max_length,B) = 1+ eval_hc_limit_code_lengths_bb1_in(V_max_length,C,V_max_length,D):1+ loop_cont_eval_hc_limit_code_lengths_bb1_in(E,V_max_length,D,B):2
     [D>=1,E=4,C=4] 
* CE 25: eval_hc_limit_code_lengths_bb0_in(V_max_length,B) = 1+ eval_hc_limit_code_lengths_bb1_in(V_max_length,C,V_max_length,D):1+ loop_cont_eval_hc_limit_code_lengths_bb1_in(E,V_max_length,D,B):3
     [E=4,C=4] 
* CE 26: eval_hc_limit_code_lengths_bb0_in(V_max_length,B) = 1+ eval_hc_limit_code_lengths_bb1_in(V_max_length,C,D,E):2
     [] 

### Cost equations --> "Loop" of eval_hc_limit_code_lengths_bb0_in/2 
* CEs [25,26] --> Loop 22 
* CEs [23,24] --> Loop 23 

#### Loops of eval_hc_limit_code_lengths_bb0_in/2 
* Loop 22: eval_hc_limit_code_lengths_bb0_in(V_max_length,B) [] 
* Loop 23: eval_hc_limit_code_lengths_bb0_in(V_max_length,B) [] 

### Ranking functions of CR eval_hc_limit_code_lengths_bb0_in(V_max_length,B) 

#### Partial ranking functions of CR eval_hc_limit_code_lengths_bb0_in(V_max_length,B) 


### Resulting Chains:eval_hc_limit_code_lengths_bb0_in(V_max_length,B) 
* [23]
* [22]...


### Merging Chains  eval_hc_limit_code_lengths_bb0_in/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_hc_limit_code_lengths_start/3 
* CE 2 is refined into CE [27,28] 


#### Refined cost equations eval_hc_limit_code_lengths_start/3 
* CE 27: eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B) = 0+ eval_hc_limit_code_lengths_bb0_in(V_max_length,B):1
     [] 
* CE 28: eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B) = 0+ eval_hc_limit_code_lengths_bb0_in(V_max_length,B):2
     [] 

### Cost equations --> "Loop" of eval_hc_limit_code_lengths_start/3 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 

#### Loops of eval_hc_limit_code_lengths_start/3 
* Loop 24: eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B) [] 
* Loop 25: eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B) [] 

### Ranking functions of CR eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B) 

#### Partial ranking functions of CR eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B) 


### Resulting Chains:eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B) 
* [25]
* [24]...


### Merging Chains  eval_hc_limit_code_lengths_start/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D) -> [eval_hc_limit_code_lengths_bb1_in(V_max_length',B',C',D')] 
1
#### Cost of phase [11]:eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D) -> [eval_hc_limit_code_lengths_bb1_in(V_max_length',B',C',D')] 
1*it(11)+0
#### Cost of phase [11]:eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D) -> [eval_hc_limit_code_lengths_bb1_in(V_max_length',B',C',D')] 
1*it(11)+0
#### Cost of chains of eval_hc_limit_code_lengths_bb1_in(V_max_length,B,C,D):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=4,V_max_length=C] 

* Chain [12]: 0
  with precondition: [B=4,C=V_max_length] 


#### Cost of loops [13] 

 * loop 13:eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C) -> [eval_hc_limit_code_lengths_bb4_in(V_max_length',V_24',B',C')] 
1
#### Cost of phase [13]:eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C) -> [eval_hc_limit_code_lengths_bb4_in(V_max_length',V_24',B',C')] 
1*it(13)+0
#### Cost of phase [13]:eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C) -> [eval_hc_limit_code_lengths_bb4_in(V_max_length',V_24',B',C')] 
1*it(13)+0
#### Cost of chains of eval_hc_limit_code_lengths_bb4_in(V_max_length,V_24,B,C):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=3,V_24=C] 

* Chain [14]: 0
  with precondition: [B=3,C=V_24] 


#### Cost of loops [15] 

 * loop 15:eval_hc_limit_code_lengths_bb6_in(V_needed_0,B) -> [eval_hc_limit_code_lengths_bb6_in(V_needed_0',B')] 
1
#### Cost of phase [15]:eval_hc_limit_code_lengths_bb6_in(V_needed_0,B) -> [eval_hc_limit_code_lengths_bb6_in(V_needed_0',B')] 
1*it(15)+0
  Such that:it(15) =< V_needed_0
it(15) =< V_needed_0-V_needed_0'

#### Cost of chains of eval_hc_limit_code_lengths_bb6_in(V_needed_0,B):
* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< V_needed_0

  with precondition: [B=2,V_needed_0>=1] 

* Chain [16]: 0
  with precondition: [B=2,0>=V_needed_0] 


#### Cost of chains of loop_cont_eval_hc_limit_code_lengths_bb4_in(D,A,B):
* Chain [18]: 1
  with precondition: [D=3,0>=A] 

* Chain [17]: 1*s(3)+1
  Such that:s(3) =< A

  with precondition: [D=3,A>=1] 


#### Cost of chains of loop_cont_eval_hc_limit_code_lengths_bb1_in(I,A,B,C):
* Chain [21]: 1*s(4)+2
  with precondition: [I=4,0>=B] 

* Chain [20]: 1*s(5)+1*s(6)+2
  Such that:s(6) =< B

  with precondition: [I=4,B>=1] 

* Chain [19]...: 1*s(7)+1
  with precondition: [I=4] 


#### Cost of chains of eval_hc_limit_code_lengths_bb0_in(V_max_length,B):
* Chain [23]: 1*aux(3)+0
  with precondition: [] 

* Chain [22]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B):
* Chain [25]: 1*s(16)+0
  with precondition: [] 

* Chain [24]...: 1*s(17)+0
  with precondition: [] 


Closed-form bounds of eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B): 
-------------------------------------
* Chain [25] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_hc_limit_code_lengths_start(V_num_values,V_max_length,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 28 ms.
* Invariants computed in 36 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 86 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 63 ms.
   - Equation cost structures 28 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 17 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 282 ms.

