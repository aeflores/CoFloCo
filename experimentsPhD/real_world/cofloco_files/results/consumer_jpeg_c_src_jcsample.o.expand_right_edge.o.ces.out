Warning: Ignored call to eval_expand_right_edge_stop/1 in equation eval_expand_right_edge_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_expand_right_edge_bb4_in/8]
1. recursive  : [eval_expand_right_edge_bb2_in/4,loop_cont_eval_expand_right_edge_bb4_in/5]
2. non_recursive  : [eval_expand_right_edge_bb7_in/1]
3. non_recursive  : [loop_cont_eval_expand_right_edge_bb2_in/2]
4. non_recursive  : [eval_expand_right_edge_bb0_in/4]
5. non_recursive  : [eval_expand_right_edge_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_expand_right_edge_bb4_in/8
1. SCC is partially evaluated into eval_expand_right_edge_bb2_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_expand_right_edge_bb0_in/4
5. SCC is partially evaluated into eval_expand_right_edge_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_expand_right_edge_bb4_in/8 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_expand_right_edge_bb4_in/8 
* CE 9: eval_expand_right_edge_bb4_in(A,B,C,D,E,A,B,F) = 0
     [B>=D,A>=C+1,0>=D,C+1=F,E=2] 
* CE 10: eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,V_count_0,B,C,D,E) = 1+ eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,F,G,C,D,E)
     [V_0>=V_count_0,V_num_rows>=V_row_0+1,V_count_0>=1,V_count_0=F+1,G=2,B=2] 

### Cost equations --> "Loop" of eval_expand_right_edge_bb4_in/8 
* CEs [10] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_expand_right_edge_bb4_in/8 
* Loop 7: eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,V_count_0,B,C,D,E)->  eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,V_count_0',B',C,D,E)
                  [V_0>=V_count_0,V_num_rows>=V_row_0+1,V_count_0>=1,V_count_0=V_count_0'+1,B'=2,B=2] 
* Loop 8: eval_expand_right_edge_bb4_in(A,B,C,D,E,A,B,F) [B>=D,A>=C+1,0>=D,C+1=F,E=2] 

### Ranking functions of CR eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,V_count_0,B,C,D,E) 
* RF of phase [7]: [V_count_0]

#### Partial ranking functions of CR eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,V_count_0,B,C,D,E) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_count_0


### Resulting Chains:eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,V_count_0,B,C,D,E) 
* [[7],8]
* [8]


### Merging Chains  eval_expand_right_edge_bb4_in/8 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[7]]] --> 2 


### Specialization of cost equations eval_expand_right_edge_bb2_in/4 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12,13] 


#### Refined cost equations eval_expand_right_edge_bb2_in/4 
* CE 11: eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) = 0
     [V_row_0>=V_num_rows,B=3] 
* CE 12: eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) = 2+ eval_expand_right_edge_bb4_in(V_num_rows,V_0,C,V_0,D,V_num_rows,V_0,E):1+ eval_expand_right_edge_bb2_in(V_num_rows,V_0,E,F)
     [V_num_rows>=E,0>=V_0,E=C+1,E=V_row_0+1,F=3,D=2,B=3] 
* CE 13: eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) = 2+ eval_expand_right_edge_bb4_in(V_num_rows,V_0,C,V_0,D,V_num_rows,V_0,E):2+ eval_expand_right_edge_bb2_in(V_num_rows,V_0,E,F)
     [V_num_rows>=E,V_0>=1,E=C+1,E=V_row_0+1,F=3,D=2,B=3] 

### Cost equations --> "Loop" of eval_expand_right_edge_bb2_in/4 
* CEs [13] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_expand_right_edge_bb2_in/4 
* Loop 9: eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B)->  eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0',B')
                  [V_num_rows>=V_row_0+1,V_0>=1,V_row_0+1=V_row_0',B'=3,B=3] 
* Loop 10: eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B)->  eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0',B')
                  [V_num_rows>=V_row_0+1,0>=V_0,V_row_0+1=V_row_0',B'=3,B=3] 
* Loop 11: eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) [V_row_0>=V_num_rows,B=3] 

### Ranking functions of CR eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) 
* RF of phase [9]: [V_num_rows-V_row_0]
* RF of phase [10]: [V_num_rows-V_row_0]

#### Partial ranking functions of CR eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_num_rows-V_row_0
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_num_rows-V_row_0


### Resulting Chains:eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) 
* [[10],11]
* [[9],11]
* [11]


### Merging Chains  eval_expand_right_edge_bb2_in/4 into  External patterns of execution 
* [[11,[10]]] --> 1 
* [[11,[9]]] --> 2 
* [[11]] --> 3 


### Specialization of cost equations eval_expand_right_edge_bb0_in/4 
* CE 3 is refined into CE [14,15,16] 
* CE 4 is refined into CE [17] 


#### Refined cost equations eval_expand_right_edge_bb0_in/4 
* CE 14: eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B) = 1+ eval_expand_right_edge_bb2_in(V_num_rows,C,D,E):1
     [V_num_rows>=1,0>=C,V_input_cols+C=V_output_cols,E=3,D=0] 
* CE 15: eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B) = 1+ eval_expand_right_edge_bb2_in(V_num_rows,C,D,E):2
     [C>=1,V_num_rows>=1,V_input_cols+C=V_output_cols,E=3,D=0] 
* CE 16: eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B) = 1+ eval_expand_right_edge_bb2_in(V_num_rows,C,D,E):3
     [0>=V_num_rows,V_output_cols=V_input_cols+C,E=3,D=0] 
* CE 17: eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B) = 0
     [] 

### Cost equations --> "Loop" of eval_expand_right_edge_bb0_in/4 
* CEs [14,15,16,17] --> Loop 12 

#### Loops of eval_expand_right_edge_bb0_in/4 
* Loop 12: eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B) [] 

### Ranking functions of CR eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B) 

#### Partial ranking functions of CR eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B) 


### Resulting Chains:eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B) 
* [12]


### Merging Chains  eval_expand_right_edge_bb0_in/4 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations eval_expand_right_edge_start/4 
* CE 2 is refined into CE [18] 


#### Refined cost equations eval_expand_right_edge_start/4 
* CE 18: eval_expand_right_edge_start(V_num_rows,V_input_cols,V_output_cols,B) = 0+ eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B):1
     [] 

### Cost equations --> "Loop" of eval_expand_right_edge_start/4 
* CEs [18] --> Loop 13 

#### Loops of eval_expand_right_edge_start/4 
* Loop 13: eval_expand_right_edge_start(V_num_rows,V_input_cols,V_output_cols,B) [] 

### Ranking functions of CR eval_expand_right_edge_start(V_num_rows,V_input_cols,V_output_cols,B) 

#### Partial ranking functions of CR eval_expand_right_edge_start(V_num_rows,V_input_cols,V_output_cols,B) 


### Resulting Chains:eval_expand_right_edge_start(V_num_rows,V_input_cols,V_output_cols,B) 
* [13]


### Merging Chains  eval_expand_right_edge_start/4 into  External patterns of execution 
* [[13]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,V_count_0,B,C,D,E) -> [eval_expand_right_edge_bb4_in(V_num_rows',V_0',V_row_0',V_count_0',B',C',D',E')] 
1
#### Cost of phase [7]:eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,V_count_0,B,C,D,E) -> [eval_expand_right_edge_bb4_in(V_num_rows',V_0',V_row_0',V_count_0',B',C',D',E')] 
1*it(7)+0
  Such that:it(7) =< V_count_0
it(7) =< V_count_0-V_count_0'

#### Cost of chains of eval_expand_right_edge_bb4_in(V_num_rows,V_0,V_row_0,V_count_0,B,C,D,E):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V_count_0

  with precondition: [B=2,V_num_rows=C,V_0=D,V_row_0+1=E,V_count_0>=1,V_num_rows>=V_row_0+1,V_0>=V_count_0] 

* Chain [8]: 0
  with precondition: [B=2,V_num_rows=C,V_0=D,V_row_0+1=E,0>=V_count_0,V_num_rows>=V_row_0+1,V_0>=V_count_0] 


#### Cost of loops [10] 

 * loop 10:eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) -> [eval_expand_right_edge_bb2_in(V_num_rows',V_0',V_row_0',B')] 
2
#### Cost of phase [10]:eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) -> [eval_expand_right_edge_bb2_in(V_num_rows',V_0',V_row_0',B')] 
2*it(10)+0
  Such that:it(10) =< V_num_rows-V_row_0
it(10) =< V_num_rows-V_row_0-V_num_rows'+V_row_0'

#### Cost of loops [9] 

 * loop 9:eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) -> [eval_expand_right_edge_bb2_in(V_num_rows',V_0',V_row_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_0'

#### Cost of phase [9]:eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B) -> [eval_expand_right_edge_bb2_in(V_num_rows',V_0',V_row_0',B')] 
2*it(9)+1*s(3)+0
  Such that:it(9) =< V_num_rows-V_row_0
it(9) =< V_num_rows-V_row_0-V_num_rows'+V_row_0'
aux(1) =< V_0
s(3) =< it(9)*aux(1)

#### Cost of chains of eval_expand_right_edge_bb2_in(V_num_rows,V_0,V_row_0,B):
* Chain [[10],11]: 2*it(10)+0
  Such that:it(10) =< V_num_rows-V_row_0

  with precondition: [B=3,0>=V_0,V_row_0>=0,V_num_rows>=V_row_0+1] 

* Chain [[9],11]: 2*it(9)+1*s(3)+0
  Such that:it(9) =< V_num_rows-V_row_0
aux(1) =< V_0
s(3) =< it(9)*aux(1)

  with precondition: [B=3,V_0>=1,V_row_0>=0,V_num_rows>=V_row_0+1] 

* Chain [11]: 0
  with precondition: [B=3,V_row_0>=0,V_row_0>=V_num_rows] 


#### Cost of chains of eval_expand_right_edge_bb0_in(V_num_rows,V_input_cols,V_output_cols,B):
* Chain [12]: 4*s(4)+1*s(7)+1
  Such that:s(6) =< -V_input_cols+V_output_cols
aux(2) =< V_num_rows
s(4) =< aux(2)
s(7) =< s(4)*s(6)

  with precondition: [] 


#### Cost of chains of eval_expand_right_edge_start(V_num_rows,V_input_cols,V_output_cols,B):
* Chain [13]: 4*s(10)+1*s(11)+1
  Such that:s(9) =< V_num_rows
s(8) =< -V_input_cols+V_output_cols
s(10) =< s(9)
s(11) =< s(10)*s(8)

  with precondition: [] 


Closed-form bounds of eval_expand_right_edge_start(V_num_rows,V_input_cols,V_output_cols,B): 
-------------------------------------
* Chain [13] with precondition: [] 
    - Upper bound: nat(V_num_rows)*4+1+nat(-V_input_cols+V_output_cols)*nat(V_num_rows) 
    - Complexity: n^2 

### Maximum cost of eval_expand_right_edge_start(V_num_rows,V_input_cols,V_output_cols,B): nat(V_num_rows)*4+1+nat(-V_input_cols+V_output_cols)*nat(V_num_rows) 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 31 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 85 ms.
   - Equation cost structures 28 ms.
   - Phase cost structures 39 ms.
   - Chain cost structures 23 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 170 ms.

