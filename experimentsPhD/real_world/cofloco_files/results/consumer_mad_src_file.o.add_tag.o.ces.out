Warning: Ignored call to eval_add_tag_stop/1 in equation eval_add_tag_bb11_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_add_tag_bb11_in/1]
1. recursive  : [eval_add_tag_bb2_in/6]
2. non_recursive  : [eval_add_tag_25/1]
3. non_recursive  : [eval_add_tag_24/1]
4. non_recursive  : [eval_add_tag_35/1]
5. non_recursive  : [eval_add_tag_34/1]
6. non_recursive  : [eval_add_tag_33/1]
7. non_recursive  : [eval_add_tag_23/1]
8. non_recursive  : [eval_add_tag_22/1]
9. non_recursive  : [eval_add_tag_21/1]
10. non_recursive  : [eval_add_tag_20/2]
11. non_recursive  : [eval_add_tag_18/2]
12. non_recursive  : [eval_add_tag_17/3]
13. non_recursive  : [loop_cont_eval_add_tag_bb2_in/4]
14. non_recursive  : [eval_add_tag_1/2]
15. non_recursive  : [eval_add_tag_0/2]
16. non_recursive  : [eval_add_tag_bb0_in/2]
17. non_recursive  : [eval_add_tag_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_add_tag_bb2_in/6
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_add_tag_23/1
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_add_tag_21/1
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_add_tag_18/2
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into loop_cont_eval_add_tag_bb2_in/4
14. SCC is partially evaluated into eval_add_tag_1/2
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_add_tag_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_add_tag_bb2_in/6 
* CE 7 is refined into CE [15] 
* CE 5 is refined into CE [16] 
* CE 6 is refined into CE [17] 


#### Refined cost equations eval_add_tag_bb2_in/6 
* CE 15: eval_add_tag_bb2_in(A,B,C,D,A,E) = 0
     [C>=B,C>=0,D=3] 
* CE 16: eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D) = 0
     [V_6>=V_i_0+1,V_i_0>=0,B=2] 
* CE 17: eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D) = 1+ eval_add_tag_bb2_in(V_length,V_6,E,B,C,D)
     [V_6>=V_i_0+1,V_i_0>=0,V_i_0+1=E] 

### Cost equations --> "Loop" of eval_add_tag_bb2_in/6 
* CEs [17] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 

#### Loops of eval_add_tag_bb2_in/6 
* Loop 11: eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D)->  eval_add_tag_bb2_in(V_length,V_6,V_i_0',B,C,D)
                  [V_6>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0'] 
* Loop 12: eval_add_tag_bb2_in(A,B,C,D,A,E) [C>=B,C>=0,D=3] 
* Loop 13: eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D) [V_6>=V_i_0+1,V_i_0>=0,B=2] 

### Ranking functions of CR eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D) 
* RF of phase [11]: [V_6-V_i_0]

#### Partial ranking functions of CR eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_6-V_i_0


### Resulting Chains:eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D) 
* [[11],13]
* [[11],12]
* [13]
* [12]


### Merging Chains  eval_add_tag_bb2_in/6 into  External patterns of execution 
* [[13],[13,[11]]] --> 1 
* [[12]] --> 2 
* [[12,[11]]] --> 3 


### Specialization of cost equations eval_add_tag_23/1 
* CE 14 is refined into CE [18] 


#### Refined cost equations eval_add_tag_23/1 
* CE 18: eval_add_tag_23(B) = 0
     [] 

### Cost equations --> "Loop" of eval_add_tag_23/1 
* CEs [18] --> Loop 14 

#### Loops of eval_add_tag_23/1 
* Loop 14: eval_add_tag_23(B) [] 

### Ranking functions of CR eval_add_tag_23(B) 

#### Partial ranking functions of CR eval_add_tag_23(B) 


### Resulting Chains:eval_add_tag_23(B) 
* [14]


### Merging Chains  eval_add_tag_23/1 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations eval_add_tag_21/1 
* CE 12 is refined into CE [19] 
* CE 13 is refined into CE [20] 


#### Refined cost equations eval_add_tag_21/1 
* CE 19: eval_add_tag_21(B) = 0
     [] 
* CE 20: eval_add_tag_21(B) = 0+ eval_add_tag_23(B):1
     [] 

### Cost equations --> "Loop" of eval_add_tag_21/1 
* CEs [19,20] --> Loop 15 

#### Loops of eval_add_tag_21/1 
* Loop 15: eval_add_tag_21(B) [] 

### Ranking functions of CR eval_add_tag_21(B) 

#### Partial ranking functions of CR eval_add_tag_21(B) 


### Resulting Chains:eval_add_tag_21(B) 
* [15]


### Merging Chains  eval_add_tag_21/1 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_add_tag_18/2 
* CE 10 is refined into CE [21] 
* CE 11 is refined into CE [22] 


#### Refined cost equations eval_add_tag_18/2 
* CE 21: eval_add_tag_18(V_length,B) = 0
     [] 
* CE 22: eval_add_tag_18(V_length,B) = 0+ eval_add_tag_21(B):1
     [] 

### Cost equations --> "Loop" of eval_add_tag_18/2 
* CEs [21,22] --> Loop 16 

#### Loops of eval_add_tag_18/2 
* Loop 16: eval_add_tag_18(V_length,B) [] 

### Ranking functions of CR eval_add_tag_18(V_length,B) 

#### Partial ranking functions of CR eval_add_tag_18(V_length,B) 


### Resulting Chains:eval_add_tag_18(V_length,B) 
* [16]


### Merging Chains  eval_add_tag_18/2 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations loop_cont_eval_add_tag_bb2_in/4 
* CE 9 is refined into CE [23] 
* CE 8 is refined into CE [24] 


#### Refined cost equations loop_cont_eval_add_tag_bb2_in/4 
* CE 23: loop_cont_eval_add_tag_bb2_in(F,A,B,C) = 0+ eval_add_tag_18(A,C):1
     [F=3] 
* CE 24: loop_cont_eval_add_tag_bb2_in(F,A,B,C) = 0
     [F=2] 

### Cost equations --> "Loop" of loop_cont_eval_add_tag_bb2_in/4 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 

#### Loops of loop_cont_eval_add_tag_bb2_in/4 
* Loop 17: loop_cont_eval_add_tag_bb2_in(F,A,B,C) [F=3] 
* Loop 18: loop_cont_eval_add_tag_bb2_in(F,A,B,C) [F=2] 

### Ranking functions of CR loop_cont_eval_add_tag_bb2_in(F,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_add_tag_bb2_in(F,A,B,C) 


### Resulting Chains:loop_cont_eval_add_tag_bb2_in(F,A,B,C) 
* [18]
* [17]


### Merging Chains  loop_cont_eval_add_tag_bb2_in/4 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_add_tag_1/2 
* CE 3 is refined into CE [25] 
* CE 4 is refined into CE [26,27,28] 


#### Refined cost equations eval_add_tag_1/2 
* CE 25: eval_add_tag_1(V_length,B) = 0
     [] 
* CE 26: eval_add_tag_1(V_length,B) = 1+ eval_add_tag_bb2_in(V_length,C,D,E,F,G):1+ loop_cont_eval_add_tag_bb2_in(H,F,G,B):1
     [C>=1,H=2,E=2,D=0] 
* CE 27: eval_add_tag_1(V_length,B) = 1+ eval_add_tag_bb2_in(V_length,C,D,E,V_length,F):2+ loop_cont_eval_add_tag_bb2_in(G,V_length,F,B):2
     [0>=C,G=3,E=3,D=0] 
* CE 28: eval_add_tag_1(V_length,B) = 1+ eval_add_tag_bb2_in(V_length,C,D,E,V_length,F):3+ loop_cont_eval_add_tag_bb2_in(G,V_length,F,B):2
     [C>=1,G=3,E=3,D=0] 

### Cost equations --> "Loop" of eval_add_tag_1/2 
* CEs [25,26,27,28] --> Loop 19 

#### Loops of eval_add_tag_1/2 
* Loop 19: eval_add_tag_1(V_length,B) [] 

### Ranking functions of CR eval_add_tag_1(V_length,B) 

#### Partial ranking functions of CR eval_add_tag_1(V_length,B) 


### Resulting Chains:eval_add_tag_1(V_length,B) 
* [19]


### Merging Chains  eval_add_tag_1/2 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations eval_add_tag_start/2 
* CE 2 is refined into CE [29] 


#### Refined cost equations eval_add_tag_start/2 
* CE 29: eval_add_tag_start(V_length,B) = 0+ eval_add_tag_1(V_length,B):1
     [] 

### Cost equations --> "Loop" of eval_add_tag_start/2 
* CEs [29] --> Loop 20 

#### Loops of eval_add_tag_start/2 
* Loop 20: eval_add_tag_start(V_length,B) [] 

### Ranking functions of CR eval_add_tag_start(V_length,B) 

#### Partial ranking functions of CR eval_add_tag_start(V_length,B) 


### Resulting Chains:eval_add_tag_start(V_length,B) 
* [20]


### Merging Chains  eval_add_tag_start/2 into  External patterns of execution 
* [[20]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D) -> [eval_add_tag_bb2_in(V_length',V_6',V_i_0',B',C',D')] 
1
#### Cost of phase [11]:eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D) -> [eval_add_tag_bb2_in(V_length',V_6',V_i_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< V_6-V_i_0
it(11) =< V_6-V_i_0-V_6'+V_i_0'

#### Cost of phase [11]:eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D) -> [eval_add_tag_bb2_in(V_length',V_6',V_i_0',B',C',D')] 
1*it(11)+0
  Such that:it(11) =< V_6-V_i_0
it(11) =< V_6-V_i_0-V_6'+V_i_0'

#### Cost of chains of eval_add_tag_bb2_in(V_length,V_6,V_i_0,B,C,D):
* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< V_6-V_i_0

  with precondition: [B=2,V_i_0>=0,V_6>=V_i_0+2] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V_6-V_i_0

  with precondition: [B=3,V_length=C,V_i_0>=0,V_6>=V_i_0+1] 

* Chain [13]: 0
  with precondition: [B=2,V_i_0>=0,V_6>=V_i_0+1] 

* Chain [12]: 0
  with precondition: [B=3,C=V_length,V_i_0>=0,V_i_0>=V_6] 


#### Cost of chains of eval_add_tag_23(B):
* Chain [14]: 0
  with precondition: [] 


#### Cost of chains of eval_add_tag_21(B):
* Chain [15]: 0
  with precondition: [] 


#### Cost of chains of eval_add_tag_18(V_length,B):
* Chain [16]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_add_tag_bb2_in(F,A,B,C):
* Chain [18]: 0
  with precondition: [F=2] 

* Chain [17]: 0
  with precondition: [F=3] 


#### Cost of chains of eval_add_tag_1(V_length,B):
* Chain [19]: 1*aux(1)+0
  with precondition: [] 


#### Cost of chains of eval_add_tag_start(V_length,B):
* Chain [20]: 1*s(4)+0
  with precondition: [] 


Closed-form bounds of eval_add_tag_start(V_length,B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_add_tag_start(V_length,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 26 ms.
* Invariants computed in 35 ms.
   - Backward Invariants 20 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 65 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 50 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 19 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 234 ms.

