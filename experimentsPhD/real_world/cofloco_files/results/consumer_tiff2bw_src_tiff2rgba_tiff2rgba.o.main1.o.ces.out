Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_bb14_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_main1_0/11,eval_main1_1/11,eval_main1_34/11,eval_main1_35/11,eval_main1_38/11,eval_main1_39/11,eval_main1_42/11,eval_main1_43/11,eval_main1_46/11,eval_main1_47/11,eval_main1_50/11,eval_main1_51/11,eval_main1_54/11,eval_main1_55/11,eval_main1_56/11,eval_main1_57/12,eval_main1_59/11,eval_main1_60/12,eval_main1_NewDefault_in/11,eval_main1_bb1_in/11]
1. non_recursive  : [eval_main1_bb14_in/1]
2. recursive  : [eval_main1_18/13,eval_main1_19/14,eval_main1_20/14,eval_main1_21/14,eval_main1_22/14,eval_main1_23/15,eval_main1_bb7_in/13]
3. recursive  : [eval_main1_16/10,eval_main1_17/10,eval_main1_24/12,eval_main1_25/12,eval_main1_bb12_in/10,eval_main1_bb5_in/10,loop_cont_eval_main1_bb7_in/13]
4. non_recursive  : [eval_main1_33/1]
5. non_recursive  : [eval_main1_32/5]
6. non_recursive  : [eval_main1_27/1]
7. non_recursive  : [eval_main1_26/5]
8. non_recursive  : [eval_main1_bb11_in/5]
9. non_recursive  : [loop_cont_eval_main1_bb5_in/6]
10. non_recursive  : [eval_main1_10/6]
11. non_recursive  : [eval_main1_9/6]
12. non_recursive  : [eval_main1_bb4_in/6]
13. non_recursive  : [eval_main1_6/6]
14. non_recursive  : [eval_main1_5/6]
15. non_recursive  : [loop_cont_eval_main1_bb1_in/7]
16. non_recursive  : [eval_main1_bb0_in/6]
17. non_recursive  : [eval_main1_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_main1_bb1_in/11
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_main1_bb7_in/13
3. SCC is partially evaluated into eval_main1_bb5_in/10
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into loop_cont_eval_main1_bb5_in/6
10. SCC is partially evaluated into eval_main1_10/6
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into loop_cont_eval_main1_bb1_in/7
16. SCC is partially evaluated into eval_main1_bb0_in/6
17. SCC is partially evaluated into eval_main1_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main1_bb1_in/11 
* CE 7 is refined into CE [26] 
* CE 4 is refined into CE [27] 
* CE 10 is refined into CE [28] 
* CE 11 is refined into CE [29] 
* CE 9 is refined into CE [30] 
* CE 8 is refined into CE [31] 
* CE 5 is refined into CE [32] 
* CE 6 is refined into CE [33] 


#### Refined cost equations eval_main1_bb1_in/11 
* CE 26: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) = 1+ eval_main1_bb1_in(V_argc,V__compression,H,V__process_by_block,V__optind,B,C,D,E,F,G)
     [] 
* CE 27: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) = 1+ eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,H,V__optind,B,C,D,E,F,G)
     [H=1] 
* CE 28: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) = 1+ eval_main1_bb1_in(V_argc,H,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)
     [H=7] 
* CE 29: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) = 1+ eval_main1_bb1_in(V_argc,H,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)
     [H=5] 
* CE 30: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) = 1+ eval_main1_bb1_in(V_argc,H,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)
     [H=1] 
* CE 31: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) = 1+ eval_main1_bb1_in(V_argc,H,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)
     [H+32763=0] 
* CE 32: eval_main1_bb1_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [F=6] 
* CE 33: eval_main1_bb1_in(A,B,C,D,E,F,A,B,C,D,E) = 0
     [F=5] 

### Cost equations --> "Loop" of eval_main1_bb1_in/11 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [31] --> Loop 30 

#### Loops of eval_main1_bb1_in/11 
* Loop 23: eval_main1_bb1_in(A,B,C,D,E,F,A,B,C,D,E) [F=6] 
* Loop 24: eval_main1_bb1_in(A,B,C,D,E,F,A,B,C,D,E) [F=5] 
* Loop 25: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)->  eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip',V__process_by_block,V__optind,B,C,D,E,F,G)
                  [] 
* Loop 26: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)->  eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block',V__optind,B,C,D,E,F,G)
                  [V__process_by_block'=1] 
* Loop 27: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)->  eval_main1_bb1_in(V_argc,V__compression',V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)
                  [V__compression'=7] 
* Loop 28: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)->  eval_main1_bb1_in(V_argc,V__compression',V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)
                  [V__compression'=5] 
* Loop 29: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)->  eval_main1_bb1_in(V_argc,V__compression',V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)
                  [V__compression'=1] 
* Loop 30: eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)->  eval_main1_bb1_in(V_argc,V__compression',V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G)
                  [V__compression'+32763=0] 

### Ranking functions of CR eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) 


### Resulting Chains:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) 
* [[25,26,27,28,29,30]]...
* [[25,26,27,28,29,30],24]
* [[25,26,27,28,29,30],23]
* [24]
* [23]


### Merging Chains  eval_main1_bb1_in/11 into  External patterns of execution 
* [[24],[24,[25,26,27,28,29,30]]] --> 1 
* [[23],[23,[25,26,27,28,29,30]]] --> 2 
* [[[25,26,27,28,29,30]]] --> 3 


### Specialization of cost equations eval_main1_bb7_in/13 
* CE 25 is refined into CE [34] 
* CE 24 is refined into CE [35] 
* CE 22 is refined into CE [36] 
* CE 23 is refined into CE [37] 


#### Refined cost equations eval_main1_bb7_in/13 
* CE 34: eval_main1_bb7_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [A>=E+2,G>=1,H=0,F=3] 
* CE 35: eval_main1_bb7_in(A,B,C,D,E,F,A,B,C,D,E,G,H) = 0
     [A>=E+2,0>=G+1,H=0,F=3] 
* CE 36: eval_main1_bb7_in(A,B,C,D,E,F,B,C,D,E,G,H,I) = 0
     [A>=E+2,F=2] 
* CE 37: eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I) = 1+ eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I)
     [V_argc>=V__optind+2,B>=2,3>=B] 

### Cost equations --> "Loop" of eval_main1_bb7_in/13 
* CEs [37] --> Loop 31 
* CEs [34] --> Loop 32 
* CEs [35] --> Loop 33 
* CEs [36] --> Loop 34 

#### Loops of eval_main1_bb7_in/13 
* Loop 31: eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I)->  eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I)
                  [V_argc>=V__optind+2,B>=2,3>=B] 
* Loop 32: eval_main1_bb7_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [A>=E+2,G>=1,H=0,F=3] 
* Loop 33: eval_main1_bb7_in(A,B,C,D,E,F,A,B,C,D,E,G,H) [A>=E+2,0>=G+1,H=0,F=3] 
* Loop 34: eval_main1_bb7_in(A,B,C,D,E,F,B,C,D,E,G,H,I) [A>=E+2,F=2] 

### Ranking functions of CR eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I) 
* [[31]]...
* [[31],34]
* [[31],33]
* [[31],32]
* [34]
* [33]
* [32]


### Merging Chains  eval_main1_bb7_in/13 into  External patterns of execution 
* [[34],[34,[31]]] --> 1 
* [[33],[33,[31]]] --> 2 
* [[32],[32,[31]]] --> 3 
* [[[31]]] --> 4 


### Specialization of cost equations eval_main1_bb5_in/10 
* CE 19 is refined into CE [38] 
* CE 18 is refined into CE [39,40] 
* CE 16 is refined into CE [41] 
* CE 17 is refined into CE [42,43,44] 


#### Refined cost equations eval_main1_bb5_in/10 
* CE 38: eval_main1_bb5_in(A,B,C,D,E,F,B,C,D,E) = 0
     [E+1>=A,F=4] 
* CE 39: eval_main1_bb5_in(A,B,C,D,E,F,B,C,D,E) = 1+ eval_main1_bb7_in(A,B,C,D,E,G,B,C,D,E,H,I,J):1
     [A>=E+2,G=2,F=2] 
* CE 40: eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) = 1+ eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,G,C,D,E,F,H,I,J):4
     [V_argc>=V__optind+2,G=2,B=2] 
* CE 41: eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) = 1+ eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,G,B,C,D,E,F)
     [V_argc>=V__optind+2,V__optind+1=G] 
* CE 42: eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) = 2+ eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,G,V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,H,I):2+ eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,J,B,C,D,E,F)
     [V_argc>=V__optind+2,0>=H+1,V__optind+1=J,I=0,G=3] 
* CE 43: eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) = 2+ eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,G,V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,H,I):3+ eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,J,B,C,D,E,F)
     [V_argc>=V__optind+2,H>=1,V__optind+1=J,I=0,G=3] 
* CE 44: eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) = 2+ eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,G,H,I,J,K,L,M,N):4
     [V_argc>=V__optind+2,O=L+1,G=3] 

### Cost equations --> "Loop" of eval_main1_bb5_in/10 
* CEs [40,44] --> Loop 35 
* CEs [41,42,43] --> Loop 36 
* CEs [38] --> Loop 37 
* CEs [39] --> Loop 38 

#### Loops of eval_main1_bb5_in/10 
* Loop 35: eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) [V_argc>=V__optind+2] 
* Loop 36: eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F)->  eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind',B,C,D,E,F)
                  [V_argc>=V__optind+2,V__optind+1=V__optind'] 
* Loop 37: eval_main1_bb5_in(A,B,C,D,E,F,B,C,D,E) [E+1>=A,F=4] 
* Loop 38: eval_main1_bb5_in(A,B,C,D,E,F,B,C,D,E) [A>=E+2,F=2] 

### Ranking functions of CR eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) 
* RF of phase [36]: [V_argc-V__optind-1]

#### Partial ranking functions of CR eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) 
* Partial RF of phase [36]:
  - RF of loop [36:1]:
    V_argc-V__optind-1


### Resulting Chains:eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) 
* [[36],38]
* [[36],37]
* [[36],35]...
* [38]
* [37]
* [35]...


### Merging Chains  eval_main1_bb5_in/10 into  External patterns of execution 
* [[38]] --> 1 
* [[38,[36]]] --> 2 
* [[37]] --> 3 
* [[37,[36]]] --> 4 
* [[35]] --> 5 
* [[35,[36]]] --> 6 


### Specialization of cost equations loop_cont_eval_main1_bb5_in/6 
* CE 20 is refined into CE [45] 
* CE 21 is refined into CE [46] 


#### Refined cost equations loop_cont_eval_main1_bb5_in/6 
* CE 45: loop_cont_eval_main1_bb5_in(H,A,B,C,D,E) = 0
     [H=4] 
* CE 46: loop_cont_eval_main1_bb5_in(H,A,B,C,D,E) = 0
     [H=2] 

### Cost equations --> "Loop" of loop_cont_eval_main1_bb5_in/6 
* CEs [45] --> Loop 39 
* CEs [46] --> Loop 40 

#### Loops of loop_cont_eval_main1_bb5_in/6 
* Loop 39: loop_cont_eval_main1_bb5_in(H,A,B,C,D,E) [H=4] 
* Loop 40: loop_cont_eval_main1_bb5_in(H,A,B,C,D,E) [H=2] 

### Ranking functions of CR loop_cont_eval_main1_bb5_in(H,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_main1_bb5_in(H,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_main1_bb5_in(H,A,B,C,D,E) 
* [40]
* [39]


### Merging Chains  loop_cont_eval_main1_bb5_in/6 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


### Specialization of cost equations eval_main1_10/6 
* CE 14 is refined into CE [47] 
* CE 15 is refined into CE [48,49,50,51,52,53] 


#### Refined cost equations eval_main1_10/6 
* CE 47: eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 0
     [] 
* CE 48: eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,V__compression,V__rowsperstrip,V__process_by_block,V__optind):1+ loop_cont_eval_main1_bb5_in(D,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B):1
     [V_argc>=V__optind+2,D=2,C=2] 
* CE 49: eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,V__compression,V__rowsperstrip,V__process_by_block,D):2+ loop_cont_eval_main1_bb5_in(E,V__compression,V__rowsperstrip,V__process_by_block,D,B):1
     [V_argc>=D+2,D>=V__optind+1,E=2,C=2] 
* CE 50: eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,V__compression,V__rowsperstrip,V__process_by_block,V__optind):3+ loop_cont_eval_main1_bb5_in(D,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B):2
     [V__optind+1>=V_argc,D=4,C=4] 
* CE 51: eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb5_in(C,V__compression,V__rowsperstrip,V__process_by_block,V__optind,D,V__compression,V__rowsperstrip,V__process_by_block,E):4+ loop_cont_eval_main1_bb5_in(F,V__compression,V__rowsperstrip,V__process_by_block,E,B):2
     [E>=V__optind+1,E+1=C,E+1=V_argc,F=4,D=4] 
* CE 52: eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,D,E,F,G):5
     [V_argc>=V__optind+2] 
* CE 53: eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,D,E,F,G):6
     [V_argc>=V__optind+3] 

### Cost equations --> "Loop" of eval_main1_10/6 
* CEs [52,53] --> Loop 41 
* CEs [47,48,49,50,51] --> Loop 42 

#### Loops of eval_main1_10/6 
* Loop 41: eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) [V_argc>=V__optind+2] 
* Loop 42: eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) [] 

### Ranking functions of CR eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) 

#### Partial ranking functions of CR eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) 


### Resulting Chains:eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) 
* [42]
* [41]...


### Merging Chains  eval_main1_10/6 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations loop_cont_eval_main1_bb1_in/7 
* CE 13 is refined into CE [54,55] 
* CE 12 is refined into CE [56,57] 


#### Refined cost equations loop_cont_eval_main1_bb1_in/7 
* CE 54: loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) = 0+ eval_main1_10(A,B,C,D,E,F):1
     [G=6] 
* CE 55: loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) = 0+ eval_main1_10(A,B,C,D,E,F):2
     [A>=E+2,G=6] 
* CE 56: loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) = 0+ eval_main1_10(A,B,C,D,E,F):1
     [G=5] 
* CE 57: loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) = 0+ eval_main1_10(A,B,C,D,E,F):2
     [A>=E+2,G=5] 

### Cost equations --> "Loop" of loop_cont_eval_main1_bb1_in/7 
* CEs [55] --> Loop 43 
* CEs [57] --> Loop 44 
* CEs [54] --> Loop 45 
* CEs [56] --> Loop 46 

#### Loops of loop_cont_eval_main1_bb1_in/7 
* Loop 43: loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) [A>=E+2,G=6] 
* Loop 44: loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) [A>=E+2,G=5] 
* Loop 45: loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) [G=6] 
* Loop 46: loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) [G=5] 

### Ranking functions of CR loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) 

#### Partial ranking functions of CR loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) 


### Resulting Chains:loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F) 
* [46]
* [45]
* [44]...
* [43]...


### Merging Chains  loop_cont_eval_main1_bb1_in/7 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 
* [[44]] --> 3 
* [[43]] --> 4 


### Specialization of cost equations eval_main1_bb0_in/6 
* CE 3 is refined into CE [58,59,60,61,62] 


#### Refined cost equations eval_main1_bb0_in/6 
* CE 58: eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,V_argc,D,E,F,V__optind):1+ loop_cont_eval_main1_bb1_in(G,V_argc,D,E,F,V__optind,B):1
     [G=5,C=5] 
* CE 59: eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,V_argc,D,E,F,V__optind):1+ loop_cont_eval_main1_bb1_in(G,V_argc,D,E,F,V__optind,B):3
     [V_argc>=V__optind+2,G=5,C=5] 
* CE 60: eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,V_argc,D,E,F,V__optind):2+ loop_cont_eval_main1_bb1_in(G,V_argc,D,E,F,V__optind,B):2
     [G=6,C=6] 
* CE 61: eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,V_argc,D,E,F,V__optind):2+ loop_cont_eval_main1_bb1_in(G,V_argc,D,E,F,V__optind,B):4
     [V_argc>=V__optind+2,G=6,C=6] 
* CE 62: eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 1+ eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,C,D,E,F,G,H):3
     [] 

### Cost equations --> "Loop" of eval_main1_bb0_in/6 
* CEs [59,61,62] --> Loop 47 
* CEs [58,60] --> Loop 48 

#### Loops of eval_main1_bb0_in/6 
* Loop 47: eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) [] 
* Loop 48: eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) [] 

### Ranking functions of CR eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) 

#### Partial ranking functions of CR eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) 


### Resulting Chains:eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) 
* [48]
* [47]...


### Merging Chains  eval_main1_bb0_in/6 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 


### Specialization of cost equations eval_main1_start/6 
* CE 2 is refined into CE [63,64] 


#### Refined cost equations eval_main1_start/6 
* CE 63: eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 0+ eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B):1
     [] 
* CE 64: eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) = 0+ eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B):2
     [] 

### Cost equations --> "Loop" of eval_main1_start/6 
* CEs [64] --> Loop 49 
* CEs [63] --> Loop 50 

#### Loops of eval_main1_start/6 
* Loop 49: eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) [] 
* Loop 50: eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) [] 

### Ranking functions of CR eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) 

#### Partial ranking functions of CR eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) 


### Resulting Chains:eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B) 
* [50]
* [49]...


### Merging Chains  eval_main1_start/6 into  External patterns of execution 
* [[50]] --> 1 
* [[49]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [25,26,27,28,29,30] 

 * loop 25:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) -> [eval_main1_bb1_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G')] 
1
 * loop 26:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) -> [eval_main1_bb1_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G')] 
1
 * loop 27:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) -> [eval_main1_bb1_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G')] 
1
 * loop 28:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) -> [eval_main1_bb1_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G')] 
1
 * loop 29:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) -> [eval_main1_bb1_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G')] 
1
 * loop 30:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) -> [eval_main1_bb1_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G')] 
1
#### Cost of phase [25,26,27,28,29,30]:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) -> [eval_main1_bb1_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G')] 
6*it(25)+0
#### Cost of phase [25,26,27,28,29,30]:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) -> [eval_main1_bb1_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G')] 
6*it(25)+0
#### Cost of phase [25,26,27,28,29,30]:eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G) -> [eval_main1_bb1_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G')] 
6*it(25)+0
#### Cost of chains of eval_main1_bb1_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G):
* Chain [[25,26,27,28,29,30]]...: 6*it(25)+0
  with precondition: [] 

* Chain [[25,26,27,28,29,30],24]: 6*it(25)+0
  with precondition: [B=5,V_argc=C,V__optind=G] 

* Chain [[25,26,27,28,29,30],23]: 6*it(25)+0
  with precondition: [B=6,V_argc=C,V__optind=G] 

* Chain [24]: 0
  with precondition: [B=5,C=V_argc,D=V__compression,E=V__rowsperstrip,F=V__process_by_block,G=V__optind] 

* Chain [23]: 0
  with precondition: [B=6,C=V_argc,D=V__compression,E=V__rowsperstrip,F=V__process_by_block,G=V__optind] 


#### Cost of loops [31] 

 * loop 31:eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I) -> [eval_main1_bb7_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [31]:eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I) -> [eval_main1_bb7_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G',H',I')] 
1*it(31)+0
#### Cost of phase [31]:eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I) -> [eval_main1_bb7_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G',H',I')] 
1*it(31)+0
#### Cost of phase [31]:eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I) -> [eval_main1_bb7_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G',H',I')] 
1*it(31)+0
#### Cost of phase [31]:eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I) -> [eval_main1_bb7_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F',G',H',I')] 
1*it(31)+0
#### Cost of chains of eval_main1_bb7_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F,G,H,I):
* Chain [[31]]...: 1*it(31)+0
  with precondition: [V_argc>=V__optind+2,B>=2,3>=B] 

* Chain [[31],34]: 1*it(31)+0
  with precondition: [B=2,V__compression=C,V__rowsperstrip=D,V__process_by_block=E,V__optind=F,V_argc>=V__optind+2] 

* Chain [[31],33]: 1*it(31)+0
  with precondition: [B=3,I=0,V_argc=C,V__compression=D,V__rowsperstrip=E,V__process_by_block=F,V__optind=G,0>=H+1,V_argc>=V__optind+2] 

* Chain [[31],32]: 1*it(31)+0
  with precondition: [B=3,I=0,V_argc=C,V__compression=D,V__rowsperstrip=E,V__process_by_block=F,V__optind=G,H>=1,V_argc>=V__optind+2] 

* Chain [34]: 0
  with precondition: [B=2,C=V__compression,D=V__rowsperstrip,E=V__process_by_block,V__optind=F,V_argc>=V__optind+2] 

* Chain [33]: 0
  with precondition: [B=3,I=0,D=V__compression,E=V__rowsperstrip,F=V__process_by_block,V_argc=C,V__optind=G,0>=H+1,V_argc>=V__optind+2] 

* Chain [32]: 0
  with precondition: [B=3,I=0,D=V__compression,E=V__rowsperstrip,F=V__process_by_block,V_argc=C,V__optind=G,H>=1,V_argc>=V__optind+2] 


#### Cost of loops [36] 

 * loop 36:eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) -> [eval_main1_bb5_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F')] 
1*s(9)+0
#### Cost of phase [36]:eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) -> [eval_main1_bb5_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F')] 
1*s(10)+0
#### Cost of phase [36]:eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) -> [eval_main1_bb5_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F')] 
1*s(10)+0
#### Cost of phase [36]:eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F) -> [eval_main1_bb5_in(V_argc',V__compression',V__rowsperstrip',V__process_by_block',V__optind',B',C',D',E',F')] 
1*s(10)+0
#### Cost of chains of eval_main1_bb5_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B,C,D,E,F):
* Chain [[36],38]: 2*s(6)+1
  with precondition: [B=2,V__compression=C,V__rowsperstrip=D,V__process_by_block=E,F>=V__optind+1,V_argc>=F+2] 

* Chain [[36],37]: 1*s(10)+0
  with precondition: [B=4,V__compression=C,V__rowsperstrip=D,V__process_by_block=E,V_argc=F+1,V_argc>=V__optind+2] 

* Chain [[36],35]...: 2*aux(7)+0
  with precondition: [V_argc>=V__optind+3] 

* Chain [38]: 1*s(6)+1
  with precondition: [B=2,C=V__compression,D=V__rowsperstrip,E=V__process_by_block,V__optind=F,V_argc>=V__optind+2] 

* Chain [37]: 0
  with precondition: [B=4,C=V__compression,D=V__rowsperstrip,E=V__process_by_block,V__optind=F,V__optind+1>=V_argc] 

* Chain [35]...: 1*aux(7)+0
  with precondition: [V_argc>=V__optind+2] 


#### Cost of chains of loop_cont_eval_main1_bb5_in(H,A,B,C,D,E):
* Chain [40]: 0
  with precondition: [H=2] 

* Chain [39]: 0
  with precondition: [H=4] 


#### Cost of chains of eval_main1_10(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B):
* Chain [42]: 1*aux(8)+0
  with precondition: [] 

* Chain [41]...: 1*aux(9)+0
  with precondition: [V_argc>=V__optind+2] 


#### Cost of chains of loop_cont_eval_main1_bb1_in(G,A,B,C,D,E,F):
* Chain [46]: 1*s(18)+0
  with precondition: [G=5] 

* Chain [45]: 1*s(19)+0
  with precondition: [G=6] 

* Chain [44]...: 1*s(20)+0
  with precondition: [G=5,A>=E+2] 

* Chain [43]...: 1*s(21)+0
  with precondition: [G=6,A>=E+2] 


#### Cost of chains of eval_main1_bb0_in(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B):
* Chain [48]: 1*aux(10)+0
  with precondition: [] 

* Chain [47]...: 1*aux(11)+0
  with precondition: [] 


#### Cost of chains of eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B):
* Chain [50]: 1*s(31)+0
  with precondition: [] 

* Chain [49]...: 1*s(32)+0
  with precondition: [] 


Closed-form bounds of eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B): 
-------------------------------------
* Chain [50] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [49]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_main1_start(V_argc,V__compression,V__rowsperstrip,V__process_by_block,V__optind,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 168 ms.
* Invariants computed in 74 ms.
   - Backward Invariants 45 ms.
   - Transitive Invariants 12 ms.
* Refinement performed in 176 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 91 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 29 ms.
   - Chain cost structures 29 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 635 ms.

