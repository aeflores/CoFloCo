Warning: Ignored call to eval_dict_copy_entries_stop/1 in equation eval_dict_copy_entries_bb12_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_dict_copy_entries_6/2,eval_dict_copy_entries_7/3,eval_dict_copy_entries_8/3,eval_dict_copy_entries_9/3,eval_dict_copy_entries_bb2_in/2,eval_dict_copy_entries_bb5_in/3]
1. non_recursive  : [eval_dict_copy_entries_bb12_in/1]
2. recursive  : [eval_dict_copy_entries_20/3,eval_dict_copy_entries_21/4,eval_dict_copy_entries_22/4,eval_dict_copy_entries_23/4,eval_dict_copy_entries_24/4,eval_dict_copy_entries_25/4,eval_dict_copy_entries_bb11_in/4,eval_dict_copy_entries_bb8_in/3]
3. non_recursive  : [loop_cont_eval_dict_copy_entries_bb8_in/2]
4. non_recursive  : [eval_dict_copy_entries_19/2]
5. non_recursive  : [eval_dict_copy_entries_18/1]
6. non_recursive  : [eval_dict_copy_entries_bb7_in/1]
7. non_recursive  : [loop_cont_eval_dict_copy_entries_bb2_in/2]
8. non_recursive  : [eval_dict_copy_entries_5/2]
9. non_recursive  : [eval_dict_copy_entries_4/1]
10. non_recursive  : [eval_dict_copy_entries_bb0_in/1]
11. non_recursive  : [eval_dict_copy_entries_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_dict_copy_entries_bb2_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_dict_copy_entries_bb8_in/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_dict_copy_entries_19/2
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_dict_copy_entries_bb2_in/2
8. SCC is partially evaluated into eval_dict_copy_entries_5/2
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_dict_copy_entries_bb0_in/1
11. SCC is partially evaluated into eval_dict_copy_entries_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_dict_copy_entries_bb2_in/2 
* CE 9 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 8 is refined into CE [16] 


#### Refined cost equations eval_dict_copy_entries_bb2_in/2 
* CE 14: eval_dict_copy_entries_bb2_in(V_index_0,B) = 1+ eval_dict_copy_entries_bb2_in(C,B)
     [C>=0] 
* CE 15: eval_dict_copy_entries_bb2_in(V_index_0,B) = 0
     [B=3] 
* CE 16: eval_dict_copy_entries_bb2_in(V_index_0,B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_dict_copy_entries_bb2_in/2 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_dict_copy_entries_bb2_in/2 
* Loop 12: eval_dict_copy_entries_bb2_in(V_index_0,B) [B=3] 
* Loop 13: eval_dict_copy_entries_bb2_in(V_index_0,B) [B=2] 
* Loop 14: eval_dict_copy_entries_bb2_in(V_index_0,B)->  eval_dict_copy_entries_bb2_in(V_index_0',B)
                  [V_index_0'>=0] 

### Ranking functions of CR eval_dict_copy_entries_bb2_in(V_index_0,B) 

#### Partial ranking functions of CR eval_dict_copy_entries_bb2_in(V_index_0,B) 


### Resulting Chains:eval_dict_copy_entries_bb2_in(V_index_0,B) 
* [[14]]...
* [[14],13]
* [[14],12]
* [13]
* [12]


### Merging Chains  eval_dict_copy_entries_bb2_in/2 into  External patterns of execution 
* [[13],[13,[14]]] --> 1 
* [[12],[12,[14]]] --> 2 
* [[[14]]] --> 3 


### Specialization of cost equations eval_dict_copy_entries_bb8_in/3 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


#### Refined cost equations eval_dict_copy_entries_bb8_in/3 
* CE 17: eval_dict_copy_entries_bb8_in(V_28,V_index_1,B) = 1+ eval_dict_copy_entries_bb8_in(V_28,C,D)
     [C>=0,D=2,B=2] 
* CE 18: eval_dict_copy_entries_bb8_in(V_28,V_index_1,B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_dict_copy_entries_bb8_in/3 
* CEs [18] --> Loop 15 
* CEs [17] --> Loop 16 

#### Loops of eval_dict_copy_entries_bb8_in/3 
* Loop 15: eval_dict_copy_entries_bb8_in(V_28,V_index_1,B) [B=2] 
* Loop 16: eval_dict_copy_entries_bb8_in(V_28,V_index_1,B)->  eval_dict_copy_entries_bb8_in(V_28,V_index_1',B')
                  [V_index_1'>=0,B'=2,B=2] 

### Ranking functions of CR eval_dict_copy_entries_bb8_in(V_28,V_index_1,B) 

#### Partial ranking functions of CR eval_dict_copy_entries_bb8_in(V_28,V_index_1,B) 


### Resulting Chains:eval_dict_copy_entries_bb8_in(V_28,V_index_1,B) 
* [[16]]...
* [[16],15]
* [15]


### Merging Chains  eval_dict_copy_entries_bb8_in/3 into  External patterns of execution 
* [[15],[15,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations eval_dict_copy_entries_19/2 
* CE 6 is refined into CE [19,20] 


#### Refined cost equations eval_dict_copy_entries_19/2 
* CE 19: eval_dict_copy_entries_19(V_28,B) = 1+ eval_dict_copy_entries_bb8_in(V_28,V_28,C):1
     [C=2] 
* CE 20: eval_dict_copy_entries_19(V_28,B) = 1+ eval_dict_copy_entries_bb8_in(V_28,V_28,C):2
     [C=2] 

### Cost equations --> "Loop" of eval_dict_copy_entries_19/2 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of eval_dict_copy_entries_19/2 
* Loop 17: eval_dict_copy_entries_19(V_28,B) [] 
* Loop 18: eval_dict_copy_entries_19(V_28,B) [] 

### Ranking functions of CR eval_dict_copy_entries_19(V_28,B) 

#### Partial ranking functions of CR eval_dict_copy_entries_19(V_28,B) 


### Resulting Chains:eval_dict_copy_entries_19(V_28,B) 
* [18]
* [17]...


### Merging Chains  eval_dict_copy_entries_19/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations loop_cont_eval_dict_copy_entries_bb2_in/2 
* CE 10 is refined into CE [21,22] 
* CE 11 is refined into CE [23] 


#### Refined cost equations loop_cont_eval_dict_copy_entries_bb2_in/2 
* CE 21: loop_cont_eval_dict_copy_entries_bb2_in(C,A) = 0+ eval_dict_copy_entries_19(D,A):1
     [C=3] 
* CE 22: loop_cont_eval_dict_copy_entries_bb2_in(C,A) = 0+ eval_dict_copy_entries_19(D,A):2
     [C=3] 
* CE 23: loop_cont_eval_dict_copy_entries_bb2_in(C,A) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_dict_copy_entries_bb2_in/2 
* CEs [21] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 

#### Loops of loop_cont_eval_dict_copy_entries_bb2_in/2 
* Loop 19: loop_cont_eval_dict_copy_entries_bb2_in(C,A) [C=3] 
* Loop 20: loop_cont_eval_dict_copy_entries_bb2_in(C,A) [C=2] 
* Loop 21: loop_cont_eval_dict_copy_entries_bb2_in(C,A) [C=3] 

### Ranking functions of CR loop_cont_eval_dict_copy_entries_bb2_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_dict_copy_entries_bb2_in(C,A) 


### Resulting Chains:loop_cont_eval_dict_copy_entries_bb2_in(C,A) 
* [21]...
* [20]
* [19]


### Merging Chains  loop_cont_eval_dict_copy_entries_bb2_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[21]] --> 3 


### Specialization of cost equations eval_dict_copy_entries_5/2 
* CE 5 is refined into CE [24,25,26,27] 


#### Refined cost equations eval_dict_copy_entries_5/2 
* CE 24: eval_dict_copy_entries_5(V_6,B) = 1+ eval_dict_copy_entries_bb2_in(V_6,C):1+ loop_cont_eval_dict_copy_entries_bb2_in(D,B):1
     [D=2,C=2] 
* CE 25: eval_dict_copy_entries_5(V_6,B) = 1+ eval_dict_copy_entries_bb2_in(V_6,C):2+ loop_cont_eval_dict_copy_entries_bb2_in(D,B):2
     [D=3,C=3] 
* CE 26: eval_dict_copy_entries_5(V_6,B) = 1+ eval_dict_copy_entries_bb2_in(V_6,C):2+ loop_cont_eval_dict_copy_entries_bb2_in(D,B):3
     [D=3,C=3] 
* CE 27: eval_dict_copy_entries_5(V_6,B) = 1+ eval_dict_copy_entries_bb2_in(V_6,C):3
     [] 

### Cost equations --> "Loop" of eval_dict_copy_entries_5/2 
* CEs [26,27] --> Loop 22 
* CEs [24,25] --> Loop 23 

#### Loops of eval_dict_copy_entries_5/2 
* Loop 22: eval_dict_copy_entries_5(V_6,B) [] 
* Loop 23: eval_dict_copy_entries_5(V_6,B) [] 

### Ranking functions of CR eval_dict_copy_entries_5(V_6,B) 

#### Partial ranking functions of CR eval_dict_copy_entries_5(V_6,B) 


### Resulting Chains:eval_dict_copy_entries_5(V_6,B) 
* [23]
* [22]...


### Merging Chains  eval_dict_copy_entries_5/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_dict_copy_entries_bb0_in/1 
* CE 3 is refined into CE [28,29] 
* CE 4 is refined into CE [30,31] 


#### Refined cost equations eval_dict_copy_entries_bb0_in/1 
* CE 28: eval_dict_copy_entries_bb0_in(B) = 0+ eval_dict_copy_entries_5(C,B):1
     [] 
* CE 29: eval_dict_copy_entries_bb0_in(B) = 0+ eval_dict_copy_entries_5(C,B):2
     [] 
* CE 30: eval_dict_copy_entries_bb0_in(B) = 0+ eval_dict_copy_entries_19(C,B):1
     [] 
* CE 31: eval_dict_copy_entries_bb0_in(B) = 0+ eval_dict_copy_entries_19(C,B):2
     [] 

### Cost equations --> "Loop" of eval_dict_copy_entries_bb0_in/1 
* CEs [29,31] --> Loop 24 
* CEs [28,30] --> Loop 25 

#### Loops of eval_dict_copy_entries_bb0_in/1 
* Loop 24: eval_dict_copy_entries_bb0_in(B) [] 
* Loop 25: eval_dict_copy_entries_bb0_in(B) [] 

### Ranking functions of CR eval_dict_copy_entries_bb0_in(B) 

#### Partial ranking functions of CR eval_dict_copy_entries_bb0_in(B) 


### Resulting Chains:eval_dict_copy_entries_bb0_in(B) 
* [25]
* [24]...


### Merging Chains  eval_dict_copy_entries_bb0_in/1 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_dict_copy_entries_start/2 
* CE 2 is refined into CE [32,33] 


#### Refined cost equations eval_dict_copy_entries_start/2 
* CE 32: eval_dict_copy_entries_start(V_new_only,B) = 0+ eval_dict_copy_entries_bb0_in(B):1
     [] 
* CE 33: eval_dict_copy_entries_start(V_new_only,B) = 0+ eval_dict_copy_entries_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_dict_copy_entries_start/2 
* CEs [33] --> Loop 26 
* CEs [32] --> Loop 27 

#### Loops of eval_dict_copy_entries_start/2 
* Loop 26: eval_dict_copy_entries_start(V_new_only,B) [] 
* Loop 27: eval_dict_copy_entries_start(V_new_only,B) [] 

### Ranking functions of CR eval_dict_copy_entries_start(V_new_only,B) 

#### Partial ranking functions of CR eval_dict_copy_entries_start(V_new_only,B) 


### Resulting Chains:eval_dict_copy_entries_start(V_new_only,B) 
* [27]
* [26]...


### Merging Chains  eval_dict_copy_entries_start/2 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_dict_copy_entries_bb2_in(V_index_0,B) -> [eval_dict_copy_entries_bb2_in(V_index_0',B')] 
1
#### Cost of phase [14]:eval_dict_copy_entries_bb2_in(V_index_0,B) -> [eval_dict_copy_entries_bb2_in(V_index_0',B')] 
1*it(14)+0
#### Cost of phase [14]:eval_dict_copy_entries_bb2_in(V_index_0,B) -> [eval_dict_copy_entries_bb2_in(V_index_0',B')] 
1*it(14)+0
#### Cost of phase [14]:eval_dict_copy_entries_bb2_in(V_index_0,B) -> [eval_dict_copy_entries_bb2_in(V_index_0',B')] 
1*it(14)+0
#### Cost of chains of eval_dict_copy_entries_bb2_in(V_index_0,B):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [] 

* Chain [[14],13]: 1*it(14)+0
  with precondition: [B=2] 

* Chain [[14],12]: 1*it(14)+0
  with precondition: [B=3] 

* Chain [13]: 0
  with precondition: [B=2] 

* Chain [12]: 0
  with precondition: [B=3] 


#### Cost of loops [16] 

 * loop 16:eval_dict_copy_entries_bb8_in(V_28,V_index_1,B) -> [eval_dict_copy_entries_bb8_in(V_28',V_index_1',B')] 
1
#### Cost of phase [16]:eval_dict_copy_entries_bb8_in(V_28,V_index_1,B) -> [eval_dict_copy_entries_bb8_in(V_28',V_index_1',B')] 
1*it(16)+0
#### Cost of phase [16]:eval_dict_copy_entries_bb8_in(V_28,V_index_1,B) -> [eval_dict_copy_entries_bb8_in(V_28',V_index_1',B')] 
1*it(16)+0
#### Cost of chains of eval_dict_copy_entries_bb8_in(V_28,V_index_1,B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [B=2] 

* Chain [[16],15]: 1*it(16)+0
  with precondition: [B=2] 

* Chain [15]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_dict_copy_entries_19(V_28,B):
* Chain [18]: 1*s(4)+1
  with precondition: [] 

* Chain [17]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of loop_cont_eval_dict_copy_entries_bb2_in(C,A):
* Chain [21]...: 1*s(6)+1
  with precondition: [C=3] 

* Chain [20]: 0
  with precondition: [C=2] 

* Chain [19]: 1*s(7)+1
  with precondition: [C=3] 


#### Cost of chains of eval_dict_copy_entries_5(V_6,B):
* Chain [23]: 1*aux(4)+0
  with precondition: [] 

* Chain [22]...: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_dict_copy_entries_bb0_in(B):
* Chain [25]: 1*aux(6)+0
  with precondition: [] 

* Chain [24]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_dict_copy_entries_start(V_new_only,B):
* Chain [27]: 1*s(18)+0
  with precondition: [] 

* Chain [26]...: 1*s(19)+0
  with precondition: [] 


Closed-form bounds of eval_dict_copy_entries_start(V_new_only,B): 
-------------------------------------
* Chain [27] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [26]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_dict_copy_entries_start(V_new_only,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 16 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 13 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 75 ms.

