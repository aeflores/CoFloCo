WARNING: Excluded non-linear constraints:[-C-2*C*D+2000000>=0,-C-2*C*D+2000000+1=<2*C]
WARNING: Excluded non-linear constraints:[-C-2*C*D+2000000>=0,-C-2*C*D+2000000+1=< -2*C]
WARNING: Excluded non-linear constraints:[C+2*C*D-2000000>=0,C+2*C*D-2000000+1=<2*C]
WARNING: Excluded non-linear constraints:[C+2*C*D-2000000>=0,C+2*C*D-2000000+1=< -2*C]
Warning: Ignored call to eval_noiseTickSize_stop/1 in equation eval_noiseTickSize_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_noiseTickSize_20/4,eval_noiseTickSize_21/4,eval_noiseTickSize_22/5,eval_noiseTickSize_23/5,eval_noiseTickSize_3/4,eval_noiseTickSize_4/4,eval_noiseTickSize_bb1_in/4,eval_noiseTickSize_bb3_in/5]
1. non_recursive  : [eval_noiseTickSize_bb7_in/1]
2. non_recursive  : [eval_noiseTickSize_33/1]
3. non_recursive  : [eval_noiseTickSize_32/4]
4. non_recursive  : [eval_noiseTickSize_26/2]
5. non_recursive  : [eval_noiseTickSize_25/2]
6. non_recursive  : [loop_cont_eval_noiseTickSize_bb1_in/3]
7. non_recursive  : [eval_noiseTickSize_2/2]
8. non_recursive  : [eval_noiseTickSize_1/2]
9. non_recursive  : [eval_noiseTickSize_0/2]
10. non_recursive  : [eval_noiseTickSize_bb0_in/2]
11. non_recursive  : [eval_noiseTickSize_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_noiseTickSize_bb1_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_noiseTickSize_26/2
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_noiseTickSize_bb1_in/3
7. SCC is partially evaluated into eval_noiseTickSize_2/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_noiseTickSize_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_noiseTickSize_bb1_in/4 
* CE 4 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


#### Refined cost equations eval_noiseTickSize_bb1_in/4 
* CE 10: eval_noiseTickSize_bb1_in(A,B,C,A) = 0
     [14>=B,C=3] 
* CE 11: eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) = 0
     [14>=V_i_0,B=2] 
* CE 12: eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) = 1+ eval_noiseTickSize_bb1_in(V__verbose,D,B,C)
     [14>=D,14>=V_i_0] 

### Cost equations --> "Loop" of eval_noiseTickSize_bb1_in/4 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_noiseTickSize_bb1_in/4 
* Loop 9: eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C)->  eval_noiseTickSize_bb1_in(V__verbose,V_i_0',B,C)
                  [14>=V_i_0',14>=V_i_0] 
* Loop 10: eval_noiseTickSize_bb1_in(A,B,C,A) [14>=B,C=3] 
* Loop 11: eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) [14>=V_i_0,B=2] 

### Ranking functions of CR eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) 

#### Partial ranking functions of CR eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) 


### Resulting Chains:eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) 
* [[9]]...
* [[9],11]
* [[9],10]
* [11]
* [10]


### Merging Chains  eval_noiseTickSize_bb1_in/4 into  External patterns of execution 
* [[11],[11,[9]]] --> 1 
* [[10],[10,[9]]] --> 2 
* [[[9]]] --> 3 


### Specialization of cost equations eval_noiseTickSize_26/2 
* CE 9 is refined into CE [13] 


#### Refined cost equations eval_noiseTickSize_26/2 
* CE 13: eval_noiseTickSize_26(V__verbose,B) = 0
     [] 

### Cost equations --> "Loop" of eval_noiseTickSize_26/2 
* CEs [13] --> Loop 12 

#### Loops of eval_noiseTickSize_26/2 
* Loop 12: eval_noiseTickSize_26(V__verbose,B) [] 

### Ranking functions of CR eval_noiseTickSize_26(V__verbose,B) 

#### Partial ranking functions of CR eval_noiseTickSize_26(V__verbose,B) 


### Resulting Chains:eval_noiseTickSize_26(V__verbose,B) 
* [12]


### Merging Chains  eval_noiseTickSize_26/2 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations loop_cont_eval_noiseTickSize_bb1_in/3 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations loop_cont_eval_noiseTickSize_bb1_in/3 
* CE 14: loop_cont_eval_noiseTickSize_bb1_in(C,A,B) = 0+ eval_noiseTickSize_26(A,B):1
     [C=3] 
* CE 15: loop_cont_eval_noiseTickSize_bb1_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_noiseTickSize_bb1_in/3 
* CEs [14] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of loop_cont_eval_noiseTickSize_bb1_in/3 
* Loop 13: loop_cont_eval_noiseTickSize_bb1_in(C,A,B) [C=3] 
* Loop 14: loop_cont_eval_noiseTickSize_bb1_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_noiseTickSize_bb1_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_noiseTickSize_bb1_in(C,A,B) 


### Resulting Chains:loop_cont_eval_noiseTickSize_bb1_in(C,A,B) 
* [14]
* [13]


### Merging Chains  loop_cont_eval_noiseTickSize_bb1_in/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_noiseTickSize_2/2 
* CE 3 is refined into CE [16,17,18] 


#### Refined cost equations eval_noiseTickSize_2/2 
* CE 16: eval_noiseTickSize_2(V__verbose,B) = 1+ eval_noiseTickSize_bb1_in(V__verbose,C,D,E):1+ loop_cont_eval_noiseTickSize_bb1_in(F,E,B):1
     [F=2,D=2,C=0] 
* CE 17: eval_noiseTickSize_2(V__verbose,B) = 1+ eval_noiseTickSize_bb1_in(V__verbose,C,D,V__verbose):2+ loop_cont_eval_noiseTickSize_bb1_in(E,V__verbose,B):2
     [E=3,D=3,C=0] 
* CE 18: eval_noiseTickSize_2(V__verbose,B) = 1+ eval_noiseTickSize_bb1_in(V__verbose,C,D,E):3
     [C=0] 

### Cost equations --> "Loop" of eval_noiseTickSize_2/2 
* CEs [18] --> Loop 15 
* CEs [16,17] --> Loop 16 

#### Loops of eval_noiseTickSize_2/2 
* Loop 15: eval_noiseTickSize_2(V__verbose,B) [] 
* Loop 16: eval_noiseTickSize_2(V__verbose,B) [] 

### Ranking functions of CR eval_noiseTickSize_2(V__verbose,B) 

#### Partial ranking functions of CR eval_noiseTickSize_2(V__verbose,B) 


### Resulting Chains:eval_noiseTickSize_2(V__verbose,B) 
* [16]
* [15]...


### Merging Chains  eval_noiseTickSize_2/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_noiseTickSize_start/2 
* CE 2 is refined into CE [19,20] 


#### Refined cost equations eval_noiseTickSize_start/2 
* CE 19: eval_noiseTickSize_start(V__verbose,B) = 0+ eval_noiseTickSize_2(V__verbose,B):1
     [] 
* CE 20: eval_noiseTickSize_start(V__verbose,B) = 0+ eval_noiseTickSize_2(V__verbose,B):2
     [] 

### Cost equations --> "Loop" of eval_noiseTickSize_start/2 
* CEs [20] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of eval_noiseTickSize_start/2 
* Loop 17: eval_noiseTickSize_start(V__verbose,B) [] 
* Loop 18: eval_noiseTickSize_start(V__verbose,B) [] 

### Ranking functions of CR eval_noiseTickSize_start(V__verbose,B) 

#### Partial ranking functions of CR eval_noiseTickSize_start(V__verbose,B) 


### Resulting Chains:eval_noiseTickSize_start(V__verbose,B) 
* [18]
* [17]...


### Merging Chains  eval_noiseTickSize_start/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) -> [eval_noiseTickSize_bb1_in(V__verbose',V_i_0',B',C')] 
1
#### Cost of phase [9]:eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) -> [eval_noiseTickSize_bb1_in(V__verbose',V_i_0',B',C')] 
1*it(9)+0
#### Cost of phase [9]:eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) -> [eval_noiseTickSize_bb1_in(V__verbose',V_i_0',B',C')] 
1*it(9)+0
#### Cost of phase [9]:eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C) -> [eval_noiseTickSize_bb1_in(V__verbose',V_i_0',B',C')] 
1*it(9)+0
#### Cost of chains of eval_noiseTickSize_bb1_in(V__verbose,V_i_0,B,C):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [14>=V_i_0] 

* Chain [[9],11]: 1*it(9)+0
  with precondition: [B=2,14>=V_i_0] 

* Chain [[9],10]: 1*it(9)+0
  with precondition: [B=3,V__verbose=C,14>=V_i_0] 

* Chain [11]: 0
  with precondition: [B=2,14>=V_i_0] 

* Chain [10]: 0
  with precondition: [B=3,C=V__verbose,14>=V_i_0] 


#### Cost of chains of eval_noiseTickSize_26(V__verbose,B):
* Chain [12]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_noiseTickSize_bb1_in(C,A,B):
* Chain [14]: 0
  with precondition: [C=2] 

* Chain [13]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_noiseTickSize_2(V__verbose,B):
* Chain [16]: 1*aux(3)+0
  with precondition: [] 

* Chain [15]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_noiseTickSize_start(V__verbose,B):
* Chain [18]: 1*s(6)+0
  with precondition: [] 

* Chain [17]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_noiseTickSize_start(V__verbose,B): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_noiseTickSize_start(V__verbose,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 55 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 43 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 33 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 216 ms.

