Warning: Ignored call to eval_ParseRecipients_stop/1 in equation eval_ParseRecipients_bb36_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ParseRecipients_0/1,eval_ParseRecipients_1/1,eval_ParseRecipients_bb1_in/1]
1. recursive  : [eval_ParseRecipients_bb22_in/5]
2. recursive  : [eval_ParseRecipients_32/5,eval_ParseRecipients_33/5,eval_ParseRecipients_34/5,eval_ParseRecipients_35/5,eval_ParseRecipients_53/5,eval_ParseRecipients_54/5,eval_ParseRecipients_58/5,eval_ParseRecipients_59/5,eval_ParseRecipients_63/7,eval_ParseRecipients_64/7,eval_ParseRecipients_65/7,eval_ParseRecipients_66/7,eval_ParseRecipients_bb18_in/5,eval_ParseRecipients_bb26_in/5,loop_cont_eval_ParseRecipients_bb22_in/6]
3. recursive  : [eval_ParseRecipients_10/3,eval_ParseRecipients_11/3,eval_ParseRecipients_19/5,eval_ParseRecipients_20/5,eval_ParseRecipients_21/5,eval_ParseRecipients_22/5,eval_ParseRecipients_23/3,eval_ParseRecipients_24/3,eval_ParseRecipients_25/3,eval_ParseRecipients_26/3,eval_ParseRecipients_27/3,eval_ParseRecipients_28/3,eval_ParseRecipients_29/3,eval_ParseRecipients_30/3,eval_ParseRecipients_31/3,eval_ParseRecipients_67/4,eval_ParseRecipients_68/4,eval_ParseRecipients_69/4,eval_ParseRecipients_70/4,eval_ParseRecipients_71/4,eval_ParseRecipients_72/4,eval_ParseRecipients_73/4,eval_ParseRecipients_bb16_in/3,eval_ParseRecipients_bb31_in/4,eval_ParseRecipients_bb8_in/3,loop_cont_eval_ParseRecipients_bb18_in/5]
4. non_recursive  : [eval_ParseRecipients_bb36_in/1]
5. non_recursive  : [eval_ParseRecipients_bb35_in/1]
6. non_recursive  : [eval_ParseRecipients_80/1]
7. non_recursive  : [eval_ParseRecipients_79/1]
8. non_recursive  : [eval_ParseRecipients_78/1]
9. non_recursive  : [eval_ParseRecipients_77/2]
10. non_recursive  : [loop_cont_eval_ParseRecipients_bb8_in/3]
11. non_recursive  : [eval_ParseRecipients_9/1]
12. non_recursive  : [eval_ParseRecipients_8/1]
13. non_recursive  : [eval_ParseRecipients_bb7_in/1]
14. non_recursive  : [eval_ParseRecipients_7/1]
15. non_recursive  : [eval_ParseRecipients_6/1]
16. non_recursive  : [eval_ParseRecipients_5/1]
17. non_recursive  : [eval_ParseRecipients_4/2]
18. non_recursive  : [eval_ParseRecipients_bb4_in/1]
19. non_recursive  : [loop_cont_eval_ParseRecipients_bb1_in/2]
20. non_recursive  : [eval_ParseRecipients_bb0_in/1]
21. non_recursive  : [eval_ParseRecipients_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ParseRecipients_bb1_in/1
1. SCC is partially evaluated into eval_ParseRecipients_bb22_in/5
2. SCC is partially evaluated into eval_ParseRecipients_bb18_in/5
3. SCC is partially evaluated into eval_ParseRecipients_bb8_in/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_ParseRecipients_78/1
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_ParseRecipients_bb8_in/3
11. SCC is partially evaluated into eval_ParseRecipients_9/1
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_ParseRecipients_5/1
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_ParseRecipients_bb4_in/1
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_ParseRecipients_bb0_in/1
21. SCC is partially evaluated into eval_ParseRecipients_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ParseRecipients_bb1_in/1 
* CE 5 is refined into CE [24] 
* CE 4 is refined into CE [25] 


#### Refined cost equations eval_ParseRecipients_bb1_in/1 
* CE 24: eval_ParseRecipients_bb1_in(B) = 1+ eval_ParseRecipients_bb1_in(C)
     [C=6,B=6] 
* CE 25: eval_ParseRecipients_bb1_in(B) = 0
     [B=6] 

### Cost equations --> "Loop" of eval_ParseRecipients_bb1_in/1 
* CEs [25] --> Loop 19 
* CEs [24] --> Loop 20 

#### Loops of eval_ParseRecipients_bb1_in/1 
* Loop 19: eval_ParseRecipients_bb1_in(B) [B=6] 
* Loop 20: eval_ParseRecipients_bb1_in(B)->  eval_ParseRecipients_bb1_in(B')
                  [B'=6,B=6] 

### Ranking functions of CR eval_ParseRecipients_bb1_in(B) 

#### Partial ranking functions of CR eval_ParseRecipients_bb1_in(B) 


### Resulting Chains:eval_ParseRecipients_bb1_in(B) 
* [[20]]...
* [[20],19]
* [19]


### Merging Chains  eval_ParseRecipients_bb1_in/1 into  External patterns of execution 
* [[19],[19,[20]]] --> 1 
* [[[20]]] --> 2 


### Specialization of cost equations eval_ParseRecipients_bb22_in/5 
* CE 23 is refined into CE [26] 
* CE 22 is refined into CE [27] 


#### Refined cost equations eval_ParseRecipients_bb22_in/5 
* CE 26: eval_ParseRecipients_bb22_in(A,B,C,A,B) = 0
     [C=2] 
* CE 27: eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) = 1+ eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,E,C,D)
     [E=2,B=2] 

### Cost equations --> "Loop" of eval_ParseRecipients_bb22_in/5 
* CEs [27] --> Loop 21 
* CEs [26] --> Loop 22 

#### Loops of eval_ParseRecipients_bb22_in/5 
* Loop 21: eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D)->  eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B',C,D)
                  [B'=2,B=2] 
* Loop 22: eval_ParseRecipients_bb22_in(A,B,C,A,B) [C=2] 

### Ranking functions of CR eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) 

#### Partial ranking functions of CR eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) 


### Resulting Chains:eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) 
* [[21]]...
* [[21],22]
* [22]


### Merging Chains  eval_ParseRecipients_bb22_in/5 into  External patterns of execution 
* [[22],[22,[21]]] --> 1 
* [[[21]]] --> 2 


### Specialization of cost equations eval_ParseRecipients_bb18_in/5 
* CE 20 is refined into CE [28] 
* CE 17 is refined into CE [29] 
* CE 18 is refined into CE [30,31] 
* CE 19 is refined into CE [32,33] 


#### Refined cost equations eval_ParseRecipients_bb18_in/5 
* CE 28: eval_ParseRecipients_bb18_in(A,B,C,A,B) = 0
     [C=3] 
* CE 29: eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) = 1+ eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,E,C,D)
     [E=3,B=3] 
* CE 30: eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) = 2+ eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,E,V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2):1+ eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,F,G,C,D)
     [V_MAX_RECIPIENTS_2+128=F,G=3,E=2,B=3] 
* CE 31: eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) = 2+ eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,E,F,G):2
     [H=G+128,I=3,E=2,B=3] 
* CE 32: eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) = 2+ eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,E,V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2):1+ eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,F,C,D)
     [F=3,E=2,B=3] 
* CE 33: eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) = 2+ eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,E,F,G):2
     [H=3,E=2,B=3] 

### Cost equations --> "Loop" of eval_ParseRecipients_bb18_in/5 
* CEs [31,33] --> Loop 23 
* CEs [29,32] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [28] --> Loop 26 

#### Loops of eval_ParseRecipients_bb18_in/5 
* Loop 23: eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) [B=3] 
* Loop 24: eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D)->  eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B',C,D)
                  [B'=3,B=3] 
* Loop 25: eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D)->  eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2',B',C,D)
                  [V_MAX_RECIPIENTS_2+128=V_MAX_RECIPIENTS_2',B'=3,B=3] 
* Loop 26: eval_ParseRecipients_bb18_in(A,B,C,A,B) [C=3] 

### Ranking functions of CR eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) 

#### Partial ranking functions of CR eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) 


### Resulting Chains:eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) 
* [[24,25]]...
* [[24,25],26]
* [[24,25],23]...
* [26]
* [23]...


### Merging Chains  eval_ParseRecipients_bb18_in/5 into  External patterns of execution 
* [[26],[26,[24,25]]] --> 1 
* [[[24,25]]] --> 2 
* [[23],[23,[24,25]]] --> 3 


### Specialization of cost equations eval_ParseRecipients_bb8_in/3 
* CE 14 is refined into CE [34] 
* CE 13 is refined into CE [35] 
* CE 10 is refined into CE [36] 
* CE 11 is refined into CE [37,38,39] 
* CE 12 is refined into CE [40] 


#### Refined cost equations eval_ParseRecipients_bb8_in/3 
* CE 34: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) = 0
     [B=5] 
* CE 35: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) = 0
     [C=8*V_MAX_RECIPIENTS_0+8,B=4] 
* CE 36: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) = 1+ eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C)
     [] 
* CE 37: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) = 2+ eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_0,D,V_MAX_RECIPIENTS_0,E):1+ eval_ParseRecipients_bb8_in(E,B,C)
     [E>=V_MAX_RECIPIENTS_0,D=3] 
* CE 38: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) = 2+ eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_0,D,E,F):2
     [D=3] 
* CE 39: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) = 2+ eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_0,D,E,F):3
     [D=3] 
* CE 40: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) = 1+ eval_ParseRecipients_bb8_in(D,B,C)
     [D=V_MAX_RECIPIENTS_0+128] 

### Cost equations --> "Loop" of eval_ParseRecipients_bb8_in/3 
* CEs [36] --> Loop 27 
* CEs [37,40] --> Loop 28 
* CEs [38,39] --> Loop 29 
* CEs [34] --> Loop 30 
* CEs [35] --> Loop 31 

#### Loops of eval_ParseRecipients_bb8_in/3 
* Loop 27: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C)->  eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C)
                  [] 
* Loop 28: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C)->  eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0',B,C)
                  [V_MAX_RECIPIENTS_0'>=V_MAX_RECIPIENTS_0] 
* Loop 29: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) [] 
* Loop 30: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) [B=5] 
* Loop 31: eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) [8*V_MAX_RECIPIENTS_0+8=C,B=4] 

### Ranking functions of CR eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) 

#### Partial ranking functions of CR eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) 


### Resulting Chains:eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) 
* [[27,28]]...
* [[27,28],31]
* [[27,28],30]
* [[27,28],29]...
* [31]
* [30]
* [29]...


### Merging Chains  eval_ParseRecipients_bb8_in/3 into  External patterns of execution 
* [[31],[31,[27,28]]] --> 1 
* [[30],[30,[27,28]]] --> 2 
* [[[27,28]]] --> 3 
* [[29],[29,[27,28]]] --> 4 


### Specialization of cost equations eval_ParseRecipients_78/1 
* CE 21 is refined into CE [41] 


#### Refined cost equations eval_ParseRecipients_78/1 
* CE 41: eval_ParseRecipients_78(B) = 0
     [] 

### Cost equations --> "Loop" of eval_ParseRecipients_78/1 
* CEs [41] --> Loop 32 

#### Loops of eval_ParseRecipients_78/1 
* Loop 32: eval_ParseRecipients_78(B) [] 

### Ranking functions of CR eval_ParseRecipients_78(B) 

#### Partial ranking functions of CR eval_ParseRecipients_78(B) 


### Resulting Chains:eval_ParseRecipients_78(B) 
* [32]


### Merging Chains  eval_ParseRecipients_78/1 into  External patterns of execution 
* [[32]] --> 1 


### Specialization of cost equations loop_cont_eval_ParseRecipients_bb8_in/3 
* CE 16 is refined into CE [42] 
* CE 15 is refined into CE [43] 


#### Refined cost equations loop_cont_eval_ParseRecipients_bb8_in/3 
* CE 42: loop_cont_eval_ParseRecipients_bb8_in(C,A,B) = 0
     [C=5] 
* CE 43: loop_cont_eval_ParseRecipients_bb8_in(C,A,B) = 0+ eval_ParseRecipients_78(B):1
     [C=4] 

### Cost equations --> "Loop" of loop_cont_eval_ParseRecipients_bb8_in/3 
* CEs [42] --> Loop 33 
* CEs [43] --> Loop 34 

#### Loops of loop_cont_eval_ParseRecipients_bb8_in/3 
* Loop 33: loop_cont_eval_ParseRecipients_bb8_in(C,A,B) [C=5] 
* Loop 34: loop_cont_eval_ParseRecipients_bb8_in(C,A,B) [C=4] 

### Ranking functions of CR loop_cont_eval_ParseRecipients_bb8_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_ParseRecipients_bb8_in(C,A,B) 


### Resulting Chains:loop_cont_eval_ParseRecipients_bb8_in(C,A,B) 
* [34]
* [33]


### Merging Chains  loop_cont_eval_ParseRecipients_bb8_in/3 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_ParseRecipients_9/1 
* CE 9 is refined into CE [44,45,46,47] 


#### Refined cost equations eval_ParseRecipients_9/1 
* CE 44: eval_ParseRecipients_9(B) = 1+ eval_ParseRecipients_bb8_in(C,D,E):1+ loop_cont_eval_ParseRecipients_bb8_in(F,E,B):1
     [E>=1032,F=4,D=4,C=128] 
* CE 45: eval_ParseRecipients_9(B) = 1+ eval_ParseRecipients_bb8_in(C,D,E):2+ loop_cont_eval_ParseRecipients_bb8_in(F,E,B):2
     [F=5,D=5,C=128] 
* CE 46: eval_ParseRecipients_9(B) = 1+ eval_ParseRecipients_bb8_in(C,D,E):3
     [C=128] 
* CE 47: eval_ParseRecipients_9(B) = 1+ eval_ParseRecipients_bb8_in(C,D,E):4
     [C=128] 

### Cost equations --> "Loop" of eval_ParseRecipients_9/1 
* CEs [46,47] --> Loop 35 
* CEs [44,45] --> Loop 36 

#### Loops of eval_ParseRecipients_9/1 
* Loop 35: eval_ParseRecipients_9(B) [] 
* Loop 36: eval_ParseRecipients_9(B) [] 

### Ranking functions of CR eval_ParseRecipients_9(B) 

#### Partial ranking functions of CR eval_ParseRecipients_9(B) 


### Resulting Chains:eval_ParseRecipients_9(B) 
* [36]
* [35]...


### Merging Chains  eval_ParseRecipients_9/1 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


### Specialization of cost equations eval_ParseRecipients_5/1 
* CE 8 is refined into CE [48,49] 


#### Refined cost equations eval_ParseRecipients_5/1 
* CE 48: eval_ParseRecipients_5(B) = 0+ eval_ParseRecipients_9(B):1
     [] 
* CE 49: eval_ParseRecipients_5(B) = 0+ eval_ParseRecipients_9(B):2
     [] 

### Cost equations --> "Loop" of eval_ParseRecipients_5/1 
* CEs [49] --> Loop 37 
* CEs [48] --> Loop 38 

#### Loops of eval_ParseRecipients_5/1 
* Loop 37: eval_ParseRecipients_5(B) [] 
* Loop 38: eval_ParseRecipients_5(B) [] 

### Ranking functions of CR eval_ParseRecipients_5(B) 

#### Partial ranking functions of CR eval_ParseRecipients_5(B) 


### Resulting Chains:eval_ParseRecipients_5(B) 
* [38]
* [37]...


### Merging Chains  eval_ParseRecipients_5/1 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_ParseRecipients_bb4_in/1 
* CE 6 is refined into CE [50,51] 
* CE 7 is refined into CE [52] 


#### Refined cost equations eval_ParseRecipients_bb4_in/1 
* CE 50: eval_ParseRecipients_bb4_in(B) = 0+ eval_ParseRecipients_5(B):1
     [] 
* CE 51: eval_ParseRecipients_bb4_in(B) = 0+ eval_ParseRecipients_5(B):2
     [] 
* CE 52: eval_ParseRecipients_bb4_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_ParseRecipients_bb4_in/1 
* CEs [50,52] --> Loop 39 
* CEs [51] --> Loop 40 

#### Loops of eval_ParseRecipients_bb4_in/1 
* Loop 39: eval_ParseRecipients_bb4_in(B) [] 
* Loop 40: eval_ParseRecipients_bb4_in(B) [] 

### Ranking functions of CR eval_ParseRecipients_bb4_in(B) 

#### Partial ranking functions of CR eval_ParseRecipients_bb4_in(B) 


### Resulting Chains:eval_ParseRecipients_bb4_in(B) 
* [40]...
* [39]


### Merging Chains  eval_ParseRecipients_bb4_in/1 into  External patterns of execution 
* [[39]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations eval_ParseRecipients_bb0_in/1 
* CE 3 is refined into CE [53,54,55] 


#### Refined cost equations eval_ParseRecipients_bb0_in/1 
* CE 53: eval_ParseRecipients_bb0_in(B) = 1+ eval_ParseRecipients_bb1_in(C):1+ eval_ParseRecipients_bb4_in(B):1
     [C=6] 
* CE 54: eval_ParseRecipients_bb0_in(B) = 1+ eval_ParseRecipients_bb1_in(C):1+ eval_ParseRecipients_bb4_in(B):2
     [C=6] 
* CE 55: eval_ParseRecipients_bb0_in(B) = 1+ eval_ParseRecipients_bb1_in(C):2
     [C=6] 

### Cost equations --> "Loop" of eval_ParseRecipients_bb0_in/1 
* CEs [54,55] --> Loop 41 
* CEs [53] --> Loop 42 

#### Loops of eval_ParseRecipients_bb0_in/1 
* Loop 41: eval_ParseRecipients_bb0_in(B) [] 
* Loop 42: eval_ParseRecipients_bb0_in(B) [] 

### Ranking functions of CR eval_ParseRecipients_bb0_in(B) 

#### Partial ranking functions of CR eval_ParseRecipients_bb0_in(B) 


### Resulting Chains:eval_ParseRecipients_bb0_in(B) 
* [42]
* [41]...


### Merging Chains  eval_ParseRecipients_bb0_in/1 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_ParseRecipients_start/1 
* CE 2 is refined into CE [56,57] 


#### Refined cost equations eval_ParseRecipients_start/1 
* CE 56: eval_ParseRecipients_start(B) = 0+ eval_ParseRecipients_bb0_in(B):1
     [] 
* CE 57: eval_ParseRecipients_start(B) = 0+ eval_ParseRecipients_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_ParseRecipients_start/1 
* CEs [57] --> Loop 43 
* CEs [56] --> Loop 44 

#### Loops of eval_ParseRecipients_start/1 
* Loop 43: eval_ParseRecipients_start(B) [] 
* Loop 44: eval_ParseRecipients_start(B) [] 

### Ranking functions of CR eval_ParseRecipients_start(B) 

#### Partial ranking functions of CR eval_ParseRecipients_start(B) 


### Resulting Chains:eval_ParseRecipients_start(B) 
* [44]
* [43]...


### Merging Chains  eval_ParseRecipients_start/1 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [20] 

 * loop 20:eval_ParseRecipients_bb1_in(B) -> [eval_ParseRecipients_bb1_in(B')] 
1
#### Cost of phase [20]:eval_ParseRecipients_bb1_in(B) -> [eval_ParseRecipients_bb1_in(B')] 
1*it(20)+0
#### Cost of phase [20]:eval_ParseRecipients_bb1_in(B) -> [eval_ParseRecipients_bb1_in(B')] 
1*it(20)+0
#### Cost of chains of eval_ParseRecipients_bb1_in(B):
* Chain [[20]]...: 1*it(20)+0
  with precondition: [B=6] 

* Chain [[20],19]: 1*it(20)+0
  with precondition: [B=6] 

* Chain [19]: 0
  with precondition: [B=6] 


#### Cost of loops [21] 

 * loop 21:eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) -> [eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0',V_MAX_RECIPIENTS_2',B',C',D')] 
1
#### Cost of phase [21]:eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) -> [eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0',V_MAX_RECIPIENTS_2',B',C',D')] 
1*it(21)+0
#### Cost of phase [21]:eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) -> [eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0',V_MAX_RECIPIENTS_2',B',C',D')] 
1*it(21)+0
#### Cost of chains of eval_ParseRecipients_bb22_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D):
* Chain [[21]]...: 1*it(21)+0
  with precondition: [B=2] 

* Chain [[21],22]: 1*it(21)+0
  with precondition: [B=2,V_MAX_RECIPIENTS_0=C,V_MAX_RECIPIENTS_2=D] 

* Chain [22]: 0
  with precondition: [B=2,C=V_MAX_RECIPIENTS_0,D=V_MAX_RECIPIENTS_2] 


#### Cost of loops [24,25] 

 * loop 24:eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) -> [eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0',V_MAX_RECIPIENTS_2',B',C',D')] 
1*s(4)+0
 * loop 25:eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) -> [eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0',V_MAX_RECIPIENTS_2',B',C',D')] 
1*s(6)+2
#### Cost of phase [24,25]:eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) -> [eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0',V_MAX_RECIPIENTS_2',B',C',D')] 
4*it(25)+0
#### Cost of phase [24,25]:eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) -> [eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0',V_MAX_RECIPIENTS_2',B',C',D')] 
4*it(25)+0
#### Cost of phase [24,25]:eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D) -> [eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0',V_MAX_RECIPIENTS_2',B',C',D')] 
4*it(25)+0
#### Cost of chains of eval_ParseRecipients_bb18_in(V_MAX_RECIPIENTS_0,V_MAX_RECIPIENTS_2,B,C,D):
* Chain [[24,25]]...: 4*it(25)+0
  with precondition: [B=3] 

* Chain [[24,25],26]: 4*it(25)+0
  with precondition: [B=3,V_MAX_RECIPIENTS_0=C,V_MAX_RECIPIENTS_2>=V_MAX_RECIPIENTS_0,D>=V_MAX_RECIPIENTS_2] 

* Chain [[24,25],23]...: 5*aux(4)+0
  with precondition: [B=3,V_MAX_RECIPIENTS_2>=V_MAX_RECIPIENTS_0] 

* Chain [26]: 0
  with precondition: [B=3,V_MAX_RECIPIENTS_0=C,V_MAX_RECIPIENTS_2=D,V_MAX_RECIPIENTS_2>=V_MAX_RECIPIENTS_0] 

* Chain [23]...: 1*aux(4)+0
  with precondition: [B=3,V_MAX_RECIPIENTS_2>=V_MAX_RECIPIENTS_0] 


#### Cost of loops [27,28] 

 * loop 27:eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) -> [eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0',B',C')] 
1
 * loop 28:eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) -> [eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0',B',C')] 
1*s(15)+0
#### Cost of phase [27,28]:eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) -> [eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0',B',C')] 
2*it(27)+0
#### Cost of phase [27,28]:eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) -> [eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0',B',C')] 
2*it(27)+0
#### Cost of phase [27,28]:eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) -> [eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0',B',C')] 
2*it(27)+0
#### Cost of phase [27,28]:eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C) -> [eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0',B',C')] 
2*it(27)+0
#### Cost of chains of eval_ParseRecipients_bb8_in(V_MAX_RECIPIENTS_0,B,C):
* Chain [[27,28]]...: 2*it(27)+0
  with precondition: [] 

* Chain [[27,28],31]: 2*it(27)+0
  with precondition: [B=4,V_MAX_RECIPIENTS_0>=128,C>=8*V_MAX_RECIPIENTS_0+8] 

* Chain [[27,28],30]: 2*it(27)+0
  with precondition: [B=5,V_MAX_RECIPIENTS_0>=128] 

* Chain [[27,28],29]...: 3*aux(8)+0
  with precondition: [V_MAX_RECIPIENTS_0>=128] 

* Chain [31]: 0
  with precondition: [B=4,8*V_MAX_RECIPIENTS_0+8=C,V_MAX_RECIPIENTS_0>=128] 

* Chain [30]: 0
  with precondition: [B=5,V_MAX_RECIPIENTS_0>=128] 

* Chain [29]...: 1*aux(8)+0
  with precondition: [V_MAX_RECIPIENTS_0>=128] 


#### Cost of chains of eval_ParseRecipients_78(B):
* Chain [32]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_ParseRecipients_bb8_in(C,A,B):
* Chain [34]: 0
  with precondition: [C=4] 

* Chain [33]: 0
  with precondition: [C=5] 


#### Cost of chains of eval_ParseRecipients_9(B):
* Chain [36]: 1*aux(12)+0
  with precondition: [] 

* Chain [35]...: 1*aux(13)+0
  with precondition: [] 


#### Cost of chains of eval_ParseRecipients_5(B):
* Chain [38]: 1*s(27)+0
  with precondition: [] 

* Chain [37]...: 1*s(28)+0
  with precondition: [] 


#### Cost of chains of eval_ParseRecipients_bb4_in(B):
* Chain [40]...: 1*s(29)+0
  with precondition: [] 

* Chain [39]: 1*aux(14)+0
  with precondition: [] 


#### Cost of chains of eval_ParseRecipients_bb0_in(B):
* Chain [42]: 2*s(31)+1
  with precondition: [] 

* Chain [41]...: 1*aux(15)+0
  with precondition: [] 


#### Cost of chains of eval_ParseRecipients_start(B):
* Chain [44]: 2*s(36)+1
  with precondition: [] 

* Chain [43]...: 1*s(37)+0
  with precondition: [] 


Closed-form bounds of eval_ParseRecipients_start(B): 
-------------------------------------
* Chain [44] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_ParseRecipients_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 49 ms.
* Invariants computed in 33 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 46 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 38 ms.
   - Equation cost structures 14 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 13 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 221 ms.

