Warning: Ignored call to eval_encryptkeyintofile_stop/1 in equation eval_encryptkeyintofile_bb18_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_encryptkeyintofile_14/7,eval_encryptkeyintofile_15/7,eval_encryptkeyintofile_bb3_in/7]
1. non_recursive  : [eval_encryptkeyintofile_bb18_in/1]
2. non_recursive  : [eval_encryptkeyintofile_25/1]
3. non_recursive  : [eval_encryptkeyintofile_24/3]
4. non_recursive  : [eval_encryptkeyintofile_23/3]
5. non_recursive  : [eval_encryptkeyintofile_33/1]
6. non_recursive  : [eval_encryptkeyintofile_32/3]
7. non_recursive  : [eval_encryptkeyintofile_31/3]
8. non_recursive  : [eval_encryptkeyintofile_45/1]
9. non_recursive  : [eval_encryptkeyintofile_44/3]
10. non_recursive  : [eval_encryptkeyintofile_43/3]
11. non_recursive  : [eval_encryptkeyintofile_bb16_in/3]
12. non_recursive  : [eval_encryptkeyintofile_38/3]
13. non_recursive  : [eval_encryptkeyintofile_37/3]
14. non_recursive  : [eval_encryptkeyintofile_40/3]
15. non_recursive  : [eval_encryptkeyintofile_39/3]
16. non_recursive  : [eval_encryptkeyintofile_59/1]
17. non_recursive  : [eval_encryptkeyintofile_58/3]
18. non_recursive  : [eval_encryptkeyintofile_57/3]
19. non_recursive  : [eval_encryptkeyintofile_56/3]
20. non_recursive  : [eval_encryptkeyintofile_55/3]
21. non_recursive  : [eval_encryptkeyintofile_54/3]
22. non_recursive  : [eval_encryptkeyintofile_53/4]
23. non_recursive  : [eval_encryptkeyintofile_52/3]
24. non_recursive  : [eval_encryptkeyintofile_51/4]
25. non_recursive  : [eval_encryptkeyintofile_47/3]
26. non_recursive  : [eval_encryptkeyintofile_46/3]
27. non_recursive  : [eval_encryptkeyintofile_42/3]
28. non_recursive  : [eval_encryptkeyintofile_41/4]
29. non_recursive  : [eval_encryptkeyintofile_NewDefault_in/4]
30. non_recursive  : [eval_encryptkeyintofile_36/4]
31. non_recursive  : [eval_encryptkeyintofile_35/4]
32. non_recursive  : [eval_encryptkeyintofile_27/4]
33. non_recursive  : [eval_encryptkeyintofile_26/4]
34. non_recursive  : [eval_encryptkeyintofile_22/4]
35. non_recursive  : [eval_encryptkeyintofile_21/5]
36. non_recursive  : [eval_encryptkeyintofile_20/4]
37. non_recursive  : [eval_encryptkeyintofile_19/4]
38. non_recursive  : [eval_encryptkeyintofile_18/4]
39. non_recursive  : [eval_encryptkeyintofile_bb6_in/4]
40. non_recursive  : [loop_cont_eval_encryptkeyintofile_bb3_in/5]
41. non_recursive  : [eval_encryptkeyintofile_12/4]
42. non_recursive  : [eval_encryptkeyintofile_11/4]
43. non_recursive  : [eval_encryptkeyintofile_10/1]
44. non_recursive  : [eval_encryptkeyintofile_9/3]
45. non_recursive  : [eval_encryptkeyintofile_8/3]
46. non_recursive  : [eval_encryptkeyintofile_7/4]
47. non_recursive  : [eval_encryptkeyintofile_6/5]
48. non_recursive  : [eval_encryptkeyintofile_2/4]
49. non_recursive  : [eval_encryptkeyintofile_1/4]
50. non_recursive  : [eval_encryptkeyintofile_bb0_in/4]
51. non_recursive  : [eval_encryptkeyintofile_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_encryptkeyintofile_bb3_in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_encryptkeyintofile_36/4
31. SCC is completely evaluated into other SCCs
32. SCC is partially evaluated into eval_encryptkeyintofile_27/4
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_encryptkeyintofile_22/4
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is completely evaluated into other SCCs
39. SCC is partially evaluated into eval_encryptkeyintofile_bb6_in/4
40. SCC is completely evaluated into other SCCs
41. SCC is partially evaluated into eval_encryptkeyintofile_12/4
42. SCC is completely evaluated into other SCCs
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is completely evaluated into other SCCs
46. SCC is partially evaluated into eval_encryptkeyintofile_7/4
47. SCC is completely evaluated into other SCCs
48. SCC is completely evaluated into other SCCs
49. SCC is completely evaluated into other SCCs
50. SCC is completely evaluated into other SCCs
51. SCC is partially evaluated into eval_encryptkeyintofile_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encryptkeyintofile_bb3_in/7 
* CE 7 is refined into CE [15] 
* CE 6 is refined into CE [16] 


#### Refined cost equations eval_encryptkeyintofile_bb3_in/7 
* CE 15: eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B,C,D,E) = 1+ eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,F,C,D,E)
     [F=2,B=2] 
* CE 16: eval_encryptkeyintofile_bb3_in(A,B,C,D,A,B,C) = 0
     [D=2] 

### Cost equations --> "Loop" of eval_encryptkeyintofile_bb3_in/7 
* CEs [16] --> Loop 10 
* CEs [15] --> Loop 11 

#### Loops of eval_encryptkeyintofile_bb3_in/7 
* Loop 10: eval_encryptkeyintofile_bb3_in(A,B,C,D,A,B,C) [D=2] 
* Loop 11: eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B,C,D,E)->  eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B',C,D,E)
                  [B'=2,B=2] 

### Ranking functions of CR eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B,C,D,E) 

#### Partial ranking functions of CR eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B,C,D,E) 


### Resulting Chains:eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B,C,D,E) 
* [[11]]...
* [[11],10]
* [10]


### Merging Chains  eval_encryptkeyintofile_bb3_in/7 into  External patterns of execution 
* [[10],[10,[11]]] --> 1 
* [[[11]]] --> 2 


### Specialization of cost equations eval_encryptkeyintofile_36/4 
* CE 14 is refined into CE [17] 


#### Refined cost equations eval_encryptkeyintofile_36/4 
* CE 17: eval_encryptkeyintofile_36(V__quietmode,V__version_byte,V_62,B) = 0
     [] 

### Cost equations --> "Loop" of eval_encryptkeyintofile_36/4 
* CEs [17] --> Loop 12 

#### Loops of eval_encryptkeyintofile_36/4 
* Loop 12: eval_encryptkeyintofile_36(V__quietmode,V__version_byte,V_62,B) [] 

### Ranking functions of CR eval_encryptkeyintofile_36(V__quietmode,V__version_byte,V_62,B) 

#### Partial ranking functions of CR eval_encryptkeyintofile_36(V__quietmode,V__version_byte,V_62,B) 


### Resulting Chains:eval_encryptkeyintofile_36(V__quietmode,V__version_byte,V_62,B) 
* [12]


### Merging Chains  eval_encryptkeyintofile_36/4 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations eval_encryptkeyintofile_27/4 
* CE 12 is refined into CE [18] 
* CE 13 is refined into CE [19] 


#### Refined cost equations eval_encryptkeyintofile_27/4 
* CE 18: eval_encryptkeyintofile_27(V_ckp_length,V__quietmode,V__version_byte,B) = 0
     [] 
* CE 19: eval_encryptkeyintofile_27(V_ckp_length,V__quietmode,V__version_byte,B) = 0+ eval_encryptkeyintofile_36(V__quietmode,V__version_byte,C,B):1
     [] 

### Cost equations --> "Loop" of eval_encryptkeyintofile_27/4 
* CEs [18,19] --> Loop 13 

#### Loops of eval_encryptkeyintofile_27/4 
* Loop 13: eval_encryptkeyintofile_27(V_ckp_length,V__quietmode,V__version_byte,B) [] 

### Ranking functions of CR eval_encryptkeyintofile_27(V_ckp_length,V__quietmode,V__version_byte,B) 

#### Partial ranking functions of CR eval_encryptkeyintofile_27(V_ckp_length,V__quietmode,V__version_byte,B) 


### Resulting Chains:eval_encryptkeyintofile_27(V_ckp_length,V__quietmode,V__version_byte,B) 
* [13]


### Merging Chains  eval_encryptkeyintofile_27/4 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_encryptkeyintofile_22/4 
* CE 10 is refined into CE [20] 
* CE 11 is refined into CE [21] 


#### Refined cost equations eval_encryptkeyintofile_22/4 
* CE 20: eval_encryptkeyintofile_22(V_ckp_length,V__quietmode,V__version_byte,B) = 0
     [] 
* CE 21: eval_encryptkeyintofile_22(V_ckp_length,V__quietmode,V__version_byte,B) = 0+ eval_encryptkeyintofile_27(V_ckp_length,V__quietmode,V__version_byte,B):1
     [] 

### Cost equations --> "Loop" of eval_encryptkeyintofile_22/4 
* CEs [20,21] --> Loop 14 

#### Loops of eval_encryptkeyintofile_22/4 
* Loop 14: eval_encryptkeyintofile_22(V_ckp_length,V__quietmode,V__version_byte,B) [] 

### Ranking functions of CR eval_encryptkeyintofile_22(V_ckp_length,V__quietmode,V__version_byte,B) 

#### Partial ranking functions of CR eval_encryptkeyintofile_22(V_ckp_length,V__quietmode,V__version_byte,B) 


### Resulting Chains:eval_encryptkeyintofile_22(V_ckp_length,V__quietmode,V__version_byte,B) 
* [14]


### Merging Chains  eval_encryptkeyintofile_22/4 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations eval_encryptkeyintofile_bb6_in/4 
* CE 8 is refined into CE [22] 
* CE 9 is refined into CE [23] 


#### Refined cost equations eval_encryptkeyintofile_bb6_in/4 
* CE 22: eval_encryptkeyintofile_bb6_in(V_ckp_length,V__quietmode,V__version_byte,B) = 0
     [] 
* CE 23: eval_encryptkeyintofile_bb6_in(V_ckp_length,V__quietmode,V__version_byte,B) = 0+ eval_encryptkeyintofile_22(V_ckp_length,V__quietmode,V__version_byte,B):1
     [] 

### Cost equations --> "Loop" of eval_encryptkeyintofile_bb6_in/4 
* CEs [22,23] --> Loop 15 

#### Loops of eval_encryptkeyintofile_bb6_in/4 
* Loop 15: eval_encryptkeyintofile_bb6_in(V_ckp_length,V__quietmode,V__version_byte,B) [] 

### Ranking functions of CR eval_encryptkeyintofile_bb6_in(V_ckp_length,V__quietmode,V__version_byte,B) 

#### Partial ranking functions of CR eval_encryptkeyintofile_bb6_in(V_ckp_length,V__quietmode,V__version_byte,B) 


### Resulting Chains:eval_encryptkeyintofile_bb6_in(V_ckp_length,V__quietmode,V__version_byte,B) 
* [15]


### Merging Chains  eval_encryptkeyintofile_bb6_in/4 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_encryptkeyintofile_12/4 
* CE 5 is refined into CE [24,25] 


#### Refined cost equations eval_encryptkeyintofile_12/4 
* CE 24: eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B) = 1+ eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,C,V_ckp_length,V__quietmode,V__version_byte):1+ eval_encryptkeyintofile_bb6_in(V_ckp_length,V__quietmode,V__version_byte,B):1
     [C=2] 
* CE 25: eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B) = 1+ eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,C,D,E,F):2
     [C=2] 

### Cost equations --> "Loop" of eval_encryptkeyintofile_12/4 
* CEs [25] --> Loop 16 
* CEs [24] --> Loop 17 

#### Loops of eval_encryptkeyintofile_12/4 
* Loop 16: eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B) [] 
* Loop 17: eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B) [] 

### Ranking functions of CR eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B) 

#### Partial ranking functions of CR eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B) 


### Resulting Chains:eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B) 
* [17]
* [16]...


### Merging Chains  eval_encryptkeyintofile_12/4 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_encryptkeyintofile_7/4 
* CE 3 is refined into CE [26] 
* CE 4 is refined into CE [27,28] 


#### Refined cost equations eval_encryptkeyintofile_7/4 
* CE 26: eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B) = 0
     [] 
* CE 27: eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B) = 0+ eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B):1
     [] 
* CE 28: eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B) = 0+ eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B):2
     [] 

### Cost equations --> "Loop" of eval_encryptkeyintofile_7/4 
* CEs [28] --> Loop 18 
* CEs [26,27] --> Loop 19 

#### Loops of eval_encryptkeyintofile_7/4 
* Loop 18: eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B) [] 
* Loop 19: eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B) [] 

### Ranking functions of CR eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B) 

#### Partial ranking functions of CR eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B) 


### Resulting Chains:eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B) 
* [19]
* [18]...


### Merging Chains  eval_encryptkeyintofile_7/4 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_encryptkeyintofile_start/5 
* CE 2 is refined into CE [29,30] 


#### Refined cost equations eval_encryptkeyintofile_start/5 
* CE 29: eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B) = 0+ eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B):1
     [] 
* CE 30: eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B) = 0+ eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B):2
     [] 

### Cost equations --> "Loop" of eval_encryptkeyintofile_start/5 
* CEs [30] --> Loop 20 
* CEs [29] --> Loop 21 

#### Loops of eval_encryptkeyintofile_start/5 
* Loop 20: eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B) [] 
* Loop 21: eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B) [] 

### Ranking functions of CR eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B) 

#### Partial ranking functions of CR eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B) 


### Resulting Chains:eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B) 
* [21]
* [20]...


### Merging Chains  eval_encryptkeyintofile_start/5 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B,C,D,E) -> [eval_encryptkeyintofile_bb3_in(V_ckp_length',V__quietmode',V__version_byte',B',C',D',E')] 
1
#### Cost of phase [11]:eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B,C,D,E) -> [eval_encryptkeyintofile_bb3_in(V_ckp_length',V__quietmode',V__version_byte',B',C',D',E')] 
1*it(11)+0
#### Cost of phase [11]:eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B,C,D,E) -> [eval_encryptkeyintofile_bb3_in(V_ckp_length',V__quietmode',V__version_byte',B',C',D',E')] 
1*it(11)+0
#### Cost of chains of eval_encryptkeyintofile_bb3_in(V_ckp_length,V__quietmode,V__version_byte,B,C,D,E):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [B=2] 

* Chain [[11],10]: 1*it(11)+0
  with precondition: [B=2,V_ckp_length=C,V__quietmode=D,V__version_byte=E] 

* Chain [10]: 0
  with precondition: [B=2,C=V_ckp_length,D=V__quietmode,E=V__version_byte] 


#### Cost of chains of eval_encryptkeyintofile_36(V__quietmode,V__version_byte,V_62,B):
* Chain [12]: 0
  with precondition: [] 


#### Cost of chains of eval_encryptkeyintofile_27(V_ckp_length,V__quietmode,V__version_byte,B):
* Chain [13]: 0
  with precondition: [] 


#### Cost of chains of eval_encryptkeyintofile_22(V_ckp_length,V__quietmode,V__version_byte,B):
* Chain [14]: 0
  with precondition: [] 


#### Cost of chains of eval_encryptkeyintofile_bb6_in(V_ckp_length,V__quietmode,V__version_byte,B):
* Chain [15]: 0
  with precondition: [] 


#### Cost of chains of eval_encryptkeyintofile_12(V_ckp_length,V__quietmode,V__version_byte,B):
* Chain [17]: 1*s(2)+1
  with precondition: [] 

* Chain [16]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_encryptkeyintofile_7(V_ckp_length,V__quietmode,V__version_byte,B):
* Chain [19]: 1*aux(2)+0
  with precondition: [] 

* Chain [18]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B):
* Chain [21]: 1*s(6)+0
  with precondition: [] 

* Chain [20]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B): 
-------------------------------------
* Chain [21] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [20]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_encryptkeyintofile_start(V_ckp_length,V_keys_used,V__quietmode,V__version_byte,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 92 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 13 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 59 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 40 ms.
   - Equation cost structures 19 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 336 ms.

