Warning: Ignored call to eval_bits_fill_rectangle_stop/1 in equation eval_bits_fill_rectangle_bb30_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_bits_fill_rectangle_bb15_in/2]
1. non_recursive  : [eval_bits_fill_rectangle_bb30_in/1]
2. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb15_in/2]
3. non_recursive  : [eval_bits_fill_rectangle_NewDefault10_in/2]
4. recursive  : [eval_bits_fill_rectangle_bb22_in/2]
5. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb22_in/2]
6. non_recursive  : [eval_bits_fill_rectangle_NewDefault17_in/2]
7. recursive  : [eval_bits_fill_rectangle_184/4,eval_bits_fill_rectangle_185/4,eval_bits_fill_rectangle_bb29_in/4]
8. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb29_in/2]
9. non_recursive  : [eval_bits_fill_rectangle_NewDefault24_in/4]
10. recursive  : [eval_bits_fill_rectangle_148/3,eval_bits_fill_rectangle_149/3,eval_bits_fill_rectangle_bb25_in/3]
11. recursive  : [eval_bits_fill_rectangle_163/3,eval_bits_fill_rectangle_164/3,eval_bits_fill_rectangle_bb27_in/3]
12. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb25_in/2]
13. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb27_in/2]
14. non_recursive  : [eval_bits_fill_rectangle_NewDefault3_in/3]
15. recursive  : [eval_bits_fill_rectangle_bb7_in/2]
16. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb7_in/2]
17. non_recursive  : [eval_bits_fill_rectangle_NewDefault_in/2]
18. recursive  : [eval_bits_fill_rectangle_bb11_in/2]
19. recursive  : [eval_bits_fill_rectangle_bb13_in/2]
20. recursive  : [eval_bits_fill_rectangle_bb18_in/2]
21. recursive  : [eval_bits_fill_rectangle_bb20_in/2]
22. recursive  : [eval_bits_fill_rectangle_bb3_in/2]
23. recursive  : [eval_bits_fill_rectangle_bb5_in/2]
24. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb11_in/2]
25. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb13_in/2]
26. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb18_in/2]
27. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb20_in/2]
28. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb3_in/2]
29. non_recursive  : [loop_cont_eval_bits_fill_rectangle_bb5_in/2]
30. non_recursive  : [eval_bits_fill_rectangle_bb0_in/3]
31. non_recursive  : [eval_bits_fill_rectangle_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_bits_fill_rectangle_bb15_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_bits_fill_rectangle_NewDefault10_in/2
4. SCC is partially evaluated into eval_bits_fill_rectangle_bb22_in/2
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_bits_fill_rectangle_NewDefault17_in/2
7. SCC is partially evaluated into eval_bits_fill_rectangle_bb29_in/4
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_bits_fill_rectangle_NewDefault24_in/4
10. SCC is partially evaluated into eval_bits_fill_rectangle_bb25_in/3
11. SCC is partially evaluated into eval_bits_fill_rectangle_bb27_in/3
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_bits_fill_rectangle_NewDefault3_in/3
15. SCC is partially evaluated into eval_bits_fill_rectangle_bb7_in/2
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_bits_fill_rectangle_NewDefault_in/2
18. SCC is partially evaluated into eval_bits_fill_rectangle_bb11_in/2
19. SCC is partially evaluated into eval_bits_fill_rectangle_bb13_in/2
20. SCC is partially evaluated into eval_bits_fill_rectangle_bb18_in/2
21. SCC is partially evaluated into eval_bits_fill_rectangle_bb20_in/2
22. SCC is partially evaluated into eval_bits_fill_rectangle_bb3_in/2
23. SCC is partially evaluated into eval_bits_fill_rectangle_bb5_in/2
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_bits_fill_rectangle_bb0_in/3
31. SCC is partially evaluated into eval_bits_fill_rectangle_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_bits_fill_rectangle_bb15_in/2 
* CE 42 is refined into CE [56] 
* CE 41 is refined into CE [57] 
* CE 40 is refined into CE [58] 


#### Refined cost equations eval_bits_fill_rectangle_bb15_in/2 
* CE 56: eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) = 0
     [B=2,V_line_count9_0=1] 
* CE 57: eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) = 1+ eval_bits_fill_rectangle_bb15_in(C,D)
     [V_line_count9_0>=2,V_line_count9_0=C+1,D=2,B=2] 
* CE 58: eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) = 1+ eval_bits_fill_rectangle_bb15_in(C,D)
     [0>=V_line_count9_0,V_line_count9_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb15_in/2 
* CEs [57] --> Loop 44 
* CEs [58] --> Loop 45 
* CEs [56] --> Loop 46 

#### Loops of eval_bits_fill_rectangle_bb15_in/2 
* Loop 44: eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B)->  eval_bits_fill_rectangle_bb15_in(V_line_count9_0',B')
                  [V_line_count9_0>=2,V_line_count9_0=V_line_count9_0'+1,B'=2,B=2] 
* Loop 45: eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B)->  eval_bits_fill_rectangle_bb15_in(V_line_count9_0',B')
                  [0>=V_line_count9_0,V_line_count9_0=V_line_count9_0'+1,B'=2,B=2] 
* Loop 46: eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) [B=2,V_line_count9_0=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) 
* RF of phase [44]: [V_line_count9_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) 
* Partial RF of phase [44]:
  - RF of loop [44:1]:
    V_line_count9_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) 
* [[45]]...
* [[44],46]
* [46]


### Merging Chains  eval_bits_fill_rectangle_bb15_in/2 into  External patterns of execution 
* [[46]] --> 1 
* [[46,[44]]] --> 2 
* [[[45]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_NewDefault10_in/2 
* CE 23 is refined into CE [59,60,61] 


#### Refined cost equations eval_bits_fill_rectangle_NewDefault10_in/2 
* CE 59: eval_bits_fill_rectangle_NewDefault10_in(V_height,B) = 1+ eval_bits_fill_rectangle_bb15_in(C,D):1
     [D=2,C=1,V_height=1] 
* CE 60: eval_bits_fill_rectangle_NewDefault10_in(V_height,B) = 1+ eval_bits_fill_rectangle_bb15_in(V_height,C):2
     [V_height>=2,C=2] 
* CE 61: eval_bits_fill_rectangle_NewDefault10_in(V_height,B) = 1+ eval_bits_fill_rectangle_bb15_in(V_height,C):3
     [0>=V_height,C=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_NewDefault10_in/2 
* CEs [61] --> Loop 47 
* CEs [60] --> Loop 48 
* CEs [59] --> Loop 49 

#### Loops of eval_bits_fill_rectangle_NewDefault10_in/2 
* Loop 47: eval_bits_fill_rectangle_NewDefault10_in(V_height,B) [0>=V_height] 
* Loop 48: eval_bits_fill_rectangle_NewDefault10_in(V_height,B) [V_height>=2] 
* Loop 49: eval_bits_fill_rectangle_NewDefault10_in(V_height,B) [V_height=1] 

### Ranking functions of CR eval_bits_fill_rectangle_NewDefault10_in(V_height,B) 

#### Partial ranking functions of CR eval_bits_fill_rectangle_NewDefault10_in(V_height,B) 


### Resulting Chains:eval_bits_fill_rectangle_NewDefault10_in(V_height,B) 
* [49]
* [48]
* [47]...


### Merging Chains  eval_bits_fill_rectangle_NewDefault10_in/2 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 
* [[47]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb22_in/2 
* CE 52 is refined into CE [62] 
* CE 51 is refined into CE [63] 
* CE 50 is refined into CE [64] 


#### Refined cost equations eval_bits_fill_rectangle_bb22_in/2 
* CE 62: eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) = 0
     [B=2,V_line_count15_0=1] 
* CE 63: eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) = 1+ eval_bits_fill_rectangle_bb22_in(C,D)
     [V_line_count15_0>=2,V_line_count15_0=C+1,D=2,B=2] 
* CE 64: eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) = 1+ eval_bits_fill_rectangle_bb22_in(C,D)
     [0>=V_line_count15_0,V_line_count15_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb22_in/2 
* CEs [63] --> Loop 50 
* CEs [64] --> Loop 51 
* CEs [62] --> Loop 52 

#### Loops of eval_bits_fill_rectangle_bb22_in/2 
* Loop 50: eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B)->  eval_bits_fill_rectangle_bb22_in(V_line_count15_0',B')
                  [V_line_count15_0>=2,V_line_count15_0=V_line_count15_0'+1,B'=2,B=2] 
* Loop 51: eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B)->  eval_bits_fill_rectangle_bb22_in(V_line_count15_0',B')
                  [0>=V_line_count15_0,V_line_count15_0=V_line_count15_0'+1,B'=2,B=2] 
* Loop 52: eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) [B=2,V_line_count15_0=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) 
* RF of phase [50]: [V_line_count15_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) 
* Partial RF of phase [50]:
  - RF of loop [50:1]:
    V_line_count15_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) 
* [[51]]...
* [[50],52]
* [52]


### Merging Chains  eval_bits_fill_rectangle_bb22_in/2 into  External patterns of execution 
* [[52]] --> 1 
* [[52,[50]]] --> 2 
* [[[51]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_NewDefault17_in/2 
* CE 33 is refined into CE [65,66,67] 


#### Refined cost equations eval_bits_fill_rectangle_NewDefault17_in/2 
* CE 65: eval_bits_fill_rectangle_NewDefault17_in(V_height,B) = 1+ eval_bits_fill_rectangle_bb22_in(C,D):1
     [D=2,C=1,V_height=1] 
* CE 66: eval_bits_fill_rectangle_NewDefault17_in(V_height,B) = 1+ eval_bits_fill_rectangle_bb22_in(V_height,C):2
     [V_height>=2,C=2] 
* CE 67: eval_bits_fill_rectangle_NewDefault17_in(V_height,B) = 1+ eval_bits_fill_rectangle_bb22_in(V_height,C):3
     [0>=V_height,C=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_NewDefault17_in/2 
* CEs [67] --> Loop 53 
* CEs [66] --> Loop 54 
* CEs [65] --> Loop 55 

#### Loops of eval_bits_fill_rectangle_NewDefault17_in/2 
* Loop 53: eval_bits_fill_rectangle_NewDefault17_in(V_height,B) [0>=V_height] 
* Loop 54: eval_bits_fill_rectangle_NewDefault17_in(V_height,B) [V_height>=2] 
* Loop 55: eval_bits_fill_rectangle_NewDefault17_in(V_height,B) [V_height=1] 

### Ranking functions of CR eval_bits_fill_rectangle_NewDefault17_in(V_height,B) 

#### Partial ranking functions of CR eval_bits_fill_rectangle_NewDefault17_in(V_height,B) 


### Resulting Chains:eval_bits_fill_rectangle_NewDefault17_in(V_height,B) 
* [55]
* [54]
* [53]...


### Merging Chains  eval_bits_fill_rectangle_NewDefault17_in/2 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 
* [[53]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb29_in/4 
* CE 54 is refined into CE [68] 
* CE 55 is refined into CE [69] 
* CE 53 is refined into CE [70] 


#### Refined cost equations eval_bits_fill_rectangle_bb29_in/4 
* CE 68: eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) = 1+ eval_bits_fill_rectangle_bb29_in(V_201,V_202,C,D)
     [V_line_count21_0>=2,V_line_count21_0=C+1,D=2,B=2] 
* CE 69: eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) = 1+ eval_bits_fill_rectangle_bb29_in(V_201,V_202,C,D)
     [0>=V_line_count21_0,V_line_count21_0=C+1,D=2,B=2] 
* CE 70: eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) = 0
     [B=2,V_line_count21_0=1] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb29_in/4 
* CEs [70] --> Loop 56 
* CEs [68] --> Loop 57 
* CEs [69] --> Loop 58 

#### Loops of eval_bits_fill_rectangle_bb29_in/4 
* Loop 56: eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) [B=2,V_line_count21_0=1] 
* Loop 57: eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B)->  eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0',B')
                  [V_line_count21_0>=2,V_line_count21_0=V_line_count21_0'+1,B'=2,B=2] 
* Loop 58: eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B)->  eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0',B')
                  [0>=V_line_count21_0,V_line_count21_0=V_line_count21_0'+1,B'=2,B=2] 

### Ranking functions of CR eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) 
* RF of phase [57]: [V_line_count21_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) 
* Partial RF of phase [57]:
  - RF of loop [57:1]:
    V_line_count21_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) 
* [[58]]...
* [[57],56]
* [56]


### Merging Chains  eval_bits_fill_rectangle_bb29_in/4 into  External patterns of execution 
* [[56]] --> 1 
* [[56,[57]]] --> 2 
* [[[58]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_NewDefault24_in/4 
* CE 46 is refined into CE [71,72,73] 


#### Refined cost equations eval_bits_fill_rectangle_NewDefault24_in/4 
* CE 71: eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B) = 1+ eval_bits_fill_rectangle_bb29_in(V_pattern,V_158,C,D):1
     [D=2,C=1,V_height=1] 
* CE 72: eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B) = 1+ eval_bits_fill_rectangle_bb29_in(V_pattern,V_158,V_height,C):2
     [V_height>=2,C=2] 
* CE 73: eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B) = 1+ eval_bits_fill_rectangle_bb29_in(V_pattern,V_158,V_height,C):3
     [0>=V_height,C=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_NewDefault24_in/4 
* CEs [73] --> Loop 59 
* CEs [72] --> Loop 60 
* CEs [71] --> Loop 61 

#### Loops of eval_bits_fill_rectangle_NewDefault24_in/4 
* Loop 59: eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B) [0>=V_height] 
* Loop 60: eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B) [V_height>=2] 
* Loop 61: eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B) [V_height=1] 

### Ranking functions of CR eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B) 

#### Partial ranking functions of CR eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B) 


### Resulting Chains:eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B) 
* [61]
* [60]
* [59]...


### Merging Chains  eval_bits_fill_rectangle_NewDefault24_in/4 into  External patterns of execution 
* [[61]] --> 1 
* [[60]] --> 2 
* [[59]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb25_in/3 
* CE 44 is refined into CE [74] 
* CE 45 is refined into CE [75] 
* CE 43 is refined into CE [76] 


#### Refined cost equations eval_bits_fill_rectangle_bb25_in/3 
* CE 74: eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) = 1+ eval_bits_fill_rectangle_bb25_in(V_162,C,D)
     [V_line_count17_0>=2,V_line_count17_0=C+1,D=2,B=2] 
* CE 75: eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) = 1+ eval_bits_fill_rectangle_bb25_in(V_162,C,D)
     [0>=V_line_count17_0,V_line_count17_0=C+1,D=2,B=2] 
* CE 76: eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) = 0
     [B=2,V_line_count17_0=1] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb25_in/3 
* CEs [76] --> Loop 62 
* CEs [74] --> Loop 63 
* CEs [75] --> Loop 64 

#### Loops of eval_bits_fill_rectangle_bb25_in/3 
* Loop 62: eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) [B=2,V_line_count17_0=1] 
* Loop 63: eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B)->  eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0',B')
                  [V_line_count17_0>=2,V_line_count17_0=V_line_count17_0'+1,B'=2,B=2] 
* Loop 64: eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B)->  eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0',B')
                  [0>=V_line_count17_0,V_line_count17_0=V_line_count17_0'+1,B'=2,B=2] 

### Ranking functions of CR eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) 
* RF of phase [63]: [V_line_count17_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) 
* Partial RF of phase [63]:
  - RF of loop [63:1]:
    V_line_count17_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) 
* [[64]]...
* [[63],62]
* [62]


### Merging Chains  eval_bits_fill_rectangle_bb25_in/3 into  External patterns of execution 
* [[62]] --> 1 
* [[62,[63]]] --> 2 
* [[[64]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb27_in/3 
* CE 48 is refined into CE [77] 
* CE 49 is refined into CE [78] 
* CE 47 is refined into CE [79] 


#### Refined cost equations eval_bits_fill_rectangle_bb27_in/3 
* CE 77: eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) = 1+ eval_bits_fill_rectangle_bb27_in(V_181,C,D)
     [V_line_count19_0>=2,V_line_count19_0=C+1,D=2,B=2] 
* CE 78: eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) = 1+ eval_bits_fill_rectangle_bb27_in(V_181,C,D)
     [0>=V_line_count19_0,V_line_count19_0=C+1,D=2,B=2] 
* CE 79: eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) = 0
     [B=2,V_line_count19_0=1] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb27_in/3 
* CEs [79] --> Loop 65 
* CEs [77] --> Loop 66 
* CEs [78] --> Loop 67 

#### Loops of eval_bits_fill_rectangle_bb27_in/3 
* Loop 65: eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) [B=2,V_line_count19_0=1] 
* Loop 66: eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B)->  eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0',B')
                  [V_line_count19_0>=2,V_line_count19_0=V_line_count19_0'+1,B'=2,B=2] 
* Loop 67: eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B)->  eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0',B')
                  [0>=V_line_count19_0,V_line_count19_0=V_line_count19_0'+1,B'=2,B=2] 

### Ranking functions of CR eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) 
* RF of phase [66]: [V_line_count19_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) 
* Partial RF of phase [66]:
  - RF of loop [66:1]:
    V_line_count19_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) 
* [[67]]...
* [[66],65]
* [65]


### Merging Chains  eval_bits_fill_rectangle_bb27_in/3 into  External patterns of execution 
* [[65]] --> 1 
* [[65,[66]]] --> 2 
* [[[67]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_NewDefault3_in/3 
* CE 27 is refined into CE [80,81,82] 
* CE 28 is refined into CE [83,84,85] 
* CE 29 is refined into CE [86,87,88] 


#### Refined cost equations eval_bits_fill_rectangle_NewDefault3_in/3 
* CE 80: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb25_in(C,D,E):1
     [E=2,D=1,V_height=1] 
* CE 81: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb25_in(C,V_height,D):2
     [V_height>=2,D=2] 
* CE 82: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb25_in(C,V_height,D):3
     [0>=V_height,D=2] 
* CE 83: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault24_in(V_pattern,C,D,B):1
     [C=1,V_height=1] 
* CE 84: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,C,B):2
     [V_height>=2] 
* CE 85: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,C,B):3
     [0>=V_height] 
* CE 86: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb27_in(C,D,E):1
     [E=2,D=1,V_height=1] 
* CE 87: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb27_in(C,V_height,D):2
     [V_height>=2,D=2] 
* CE 88: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb27_in(C,V_height,D):3
     [0>=V_height,D=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_NewDefault3_in/3 
* CEs [82,85,88] --> Loop 68 
* CEs [81,84,87] --> Loop 69 
* CEs [80,83,86] --> Loop 70 

#### Loops of eval_bits_fill_rectangle_NewDefault3_in/3 
* Loop 68: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) [0>=V_height] 
* Loop 69: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) [V_height>=2] 
* Loop 70: eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) [V_height=1] 

### Ranking functions of CR eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) 

#### Partial ranking functions of CR eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) 


### Resulting Chains:eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B) 
* [70]
* [69]
* [68]...


### Merging Chains  eval_bits_fill_rectangle_NewDefault3_in/3 into  External patterns of execution 
* [[70]] --> 1 
* [[69]] --> 2 
* [[68]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb7_in/2 
* CE 39 is refined into CE [89] 
* CE 38 is refined into CE [90] 
* CE 37 is refined into CE [91] 


#### Refined cost equations eval_bits_fill_rectangle_bb7_in/2 
* CE 89: eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) = 0
     [B=2,V_line_count3_0=1] 
* CE 90: eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) = 1+ eval_bits_fill_rectangle_bb7_in(C,D)
     [V_line_count3_0>=2,V_line_count3_0=C+1,D=2,B=2] 
* CE 91: eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) = 1+ eval_bits_fill_rectangle_bb7_in(C,D)
     [0>=V_line_count3_0,V_line_count3_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb7_in/2 
* CEs [90] --> Loop 71 
* CEs [91] --> Loop 72 
* CEs [89] --> Loop 73 

#### Loops of eval_bits_fill_rectangle_bb7_in/2 
* Loop 71: eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B)->  eval_bits_fill_rectangle_bb7_in(V_line_count3_0',B')
                  [V_line_count3_0>=2,V_line_count3_0=V_line_count3_0'+1,B'=2,B=2] 
* Loop 72: eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B)->  eval_bits_fill_rectangle_bb7_in(V_line_count3_0',B')
                  [0>=V_line_count3_0,V_line_count3_0=V_line_count3_0'+1,B'=2,B=2] 
* Loop 73: eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) [B=2,V_line_count3_0=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) 
* RF of phase [71]: [V_line_count3_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) 
* Partial RF of phase [71]:
  - RF of loop [71:1]:
    V_line_count3_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) 
* [[72]]...
* [[71],73]
* [73]


### Merging Chains  eval_bits_fill_rectangle_bb7_in/2 into  External patterns of execution 
* [[73]] --> 1 
* [[73,[71]]] --> 2 
* [[[72]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_NewDefault_in/2 
* CE 16 is refined into CE [92,93,94] 


#### Refined cost equations eval_bits_fill_rectangle_NewDefault_in/2 
* CE 92: eval_bits_fill_rectangle_NewDefault_in(V_height,B) = 1+ eval_bits_fill_rectangle_bb7_in(C,D):1
     [D=2,C=1,V_height=1] 
* CE 93: eval_bits_fill_rectangle_NewDefault_in(V_height,B) = 1+ eval_bits_fill_rectangle_bb7_in(V_height,C):2
     [V_height>=2,C=2] 
* CE 94: eval_bits_fill_rectangle_NewDefault_in(V_height,B) = 1+ eval_bits_fill_rectangle_bb7_in(V_height,C):3
     [0>=V_height,C=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_NewDefault_in/2 
* CEs [94] --> Loop 74 
* CEs [93] --> Loop 75 
* CEs [92] --> Loop 76 

#### Loops of eval_bits_fill_rectangle_NewDefault_in/2 
* Loop 74: eval_bits_fill_rectangle_NewDefault_in(V_height,B) [0>=V_height] 
* Loop 75: eval_bits_fill_rectangle_NewDefault_in(V_height,B) [V_height>=2] 
* Loop 76: eval_bits_fill_rectangle_NewDefault_in(V_height,B) [V_height=1] 

### Ranking functions of CR eval_bits_fill_rectangle_NewDefault_in(V_height,B) 

#### Partial ranking functions of CR eval_bits_fill_rectangle_NewDefault_in(V_height,B) 


### Resulting Chains:eval_bits_fill_rectangle_NewDefault_in(V_height,B) 
* [76]
* [75]
* [74]...


### Merging Chains  eval_bits_fill_rectangle_NewDefault_in/2 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 
* [[74]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb11_in/2 
* CE 22 is refined into CE [95] 
* CE 21 is refined into CE [96] 
* CE 20 is refined into CE [97] 


#### Refined cost equations eval_bits_fill_rectangle_bb11_in/2 
* CE 95: eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) = 0
     [B=2,V_line_count5_0=1] 
* CE 96: eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) = 1+ eval_bits_fill_rectangle_bb11_in(C,D)
     [V_line_count5_0>=2,V_line_count5_0=C+1,D=2,B=2] 
* CE 97: eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) = 1+ eval_bits_fill_rectangle_bb11_in(C,D)
     [0>=V_line_count5_0,V_line_count5_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb11_in/2 
* CEs [96] --> Loop 77 
* CEs [97] --> Loop 78 
* CEs [95] --> Loop 79 

#### Loops of eval_bits_fill_rectangle_bb11_in/2 
* Loop 77: eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B)->  eval_bits_fill_rectangle_bb11_in(V_line_count5_0',B')
                  [V_line_count5_0>=2,V_line_count5_0=V_line_count5_0'+1,B'=2,B=2] 
* Loop 78: eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B)->  eval_bits_fill_rectangle_bb11_in(V_line_count5_0',B')
                  [0>=V_line_count5_0,V_line_count5_0=V_line_count5_0'+1,B'=2,B=2] 
* Loop 79: eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) [B=2,V_line_count5_0=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) 
* RF of phase [77]: [V_line_count5_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) 
* Partial RF of phase [77]:
  - RF of loop [77:1]:
    V_line_count5_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) 
* [[78]]...
* [[77],79]
* [79]


### Merging Chains  eval_bits_fill_rectangle_bb11_in/2 into  External patterns of execution 
* [[79]] --> 1 
* [[79,[77]]] --> 2 
* [[[78]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb13_in/2 
* CE 26 is refined into CE [98] 
* CE 25 is refined into CE [99] 
* CE 24 is refined into CE [100] 


#### Refined cost equations eval_bits_fill_rectangle_bb13_in/2 
* CE 98: eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) = 0
     [B=2,V_line_count7_0=1] 
* CE 99: eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) = 1+ eval_bits_fill_rectangle_bb13_in(C,D)
     [V_line_count7_0>=2,V_line_count7_0=C+1,D=2,B=2] 
* CE 100: eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) = 1+ eval_bits_fill_rectangle_bb13_in(C,D)
     [0>=V_line_count7_0,V_line_count7_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb13_in/2 
* CEs [99] --> Loop 80 
* CEs [100] --> Loop 81 
* CEs [98] --> Loop 82 

#### Loops of eval_bits_fill_rectangle_bb13_in/2 
* Loop 80: eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B)->  eval_bits_fill_rectangle_bb13_in(V_line_count7_0',B')
                  [V_line_count7_0>=2,V_line_count7_0=V_line_count7_0'+1,B'=2,B=2] 
* Loop 81: eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B)->  eval_bits_fill_rectangle_bb13_in(V_line_count7_0',B')
                  [0>=V_line_count7_0,V_line_count7_0=V_line_count7_0'+1,B'=2,B=2] 
* Loop 82: eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) [B=2,V_line_count7_0=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) 
* RF of phase [80]: [V_line_count7_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) 
* Partial RF of phase [80]:
  - RF of loop [80:1]:
    V_line_count7_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) 
* [[81]]...
* [[80],82]
* [82]


### Merging Chains  eval_bits_fill_rectangle_bb13_in/2 into  External patterns of execution 
* [[82]] --> 1 
* [[82,[80]]] --> 2 
* [[[81]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb18_in/2 
* CE 32 is refined into CE [101] 
* CE 31 is refined into CE [102] 
* CE 30 is refined into CE [103] 


#### Refined cost equations eval_bits_fill_rectangle_bb18_in/2 
* CE 101: eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) = 0
     [B=2,V_line_count11_0=1] 
* CE 102: eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) = 1+ eval_bits_fill_rectangle_bb18_in(C,D)
     [V_line_count11_0>=2,V_line_count11_0=C+1,D=2,B=2] 
* CE 103: eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) = 1+ eval_bits_fill_rectangle_bb18_in(C,D)
     [0>=V_line_count11_0,V_line_count11_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb18_in/2 
* CEs [102] --> Loop 83 
* CEs [103] --> Loop 84 
* CEs [101] --> Loop 85 

#### Loops of eval_bits_fill_rectangle_bb18_in/2 
* Loop 83: eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B)->  eval_bits_fill_rectangle_bb18_in(V_line_count11_0',B')
                  [V_line_count11_0>=2,V_line_count11_0=V_line_count11_0'+1,B'=2,B=2] 
* Loop 84: eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B)->  eval_bits_fill_rectangle_bb18_in(V_line_count11_0',B')
                  [0>=V_line_count11_0,V_line_count11_0=V_line_count11_0'+1,B'=2,B=2] 
* Loop 85: eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) [B=2,V_line_count11_0=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) 
* RF of phase [83]: [V_line_count11_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) 
* Partial RF of phase [83]:
  - RF of loop [83:1]:
    V_line_count11_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) 
* [[84]]...
* [[83],85]
* [85]


### Merging Chains  eval_bits_fill_rectangle_bb18_in/2 into  External patterns of execution 
* [[85]] --> 1 
* [[85,[83]]] --> 2 
* [[[84]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb20_in/2 
* CE 36 is refined into CE [104] 
* CE 35 is refined into CE [105] 
* CE 34 is refined into CE [106] 


#### Refined cost equations eval_bits_fill_rectangle_bb20_in/2 
* CE 104: eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) = 0
     [B=2,V_line_count13_0=1] 
* CE 105: eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) = 1+ eval_bits_fill_rectangle_bb20_in(C,D)
     [V_line_count13_0>=2,V_line_count13_0=C+1,D=2,B=2] 
* CE 106: eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) = 1+ eval_bits_fill_rectangle_bb20_in(C,D)
     [0>=V_line_count13_0,V_line_count13_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb20_in/2 
* CEs [105] --> Loop 86 
* CEs [106] --> Loop 87 
* CEs [104] --> Loop 88 

#### Loops of eval_bits_fill_rectangle_bb20_in/2 
* Loop 86: eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B)->  eval_bits_fill_rectangle_bb20_in(V_line_count13_0',B')
                  [V_line_count13_0>=2,V_line_count13_0=V_line_count13_0'+1,B'=2,B=2] 
* Loop 87: eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B)->  eval_bits_fill_rectangle_bb20_in(V_line_count13_0',B')
                  [0>=V_line_count13_0,V_line_count13_0=V_line_count13_0'+1,B'=2,B=2] 
* Loop 88: eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) [B=2,V_line_count13_0=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) 
* RF of phase [86]: [V_line_count13_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) 
* Partial RF of phase [86]:
  - RF of loop [86:1]:
    V_line_count13_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) 
* [[87]]...
* [[86],88]
* [88]


### Merging Chains  eval_bits_fill_rectangle_bb20_in/2 into  External patterns of execution 
* [[88]] --> 1 
* [[88,[86]]] --> 2 
* [[[87]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb3_in/2 
* CE 15 is refined into CE [107] 
* CE 14 is refined into CE [108] 
* CE 13 is refined into CE [109] 


#### Refined cost equations eval_bits_fill_rectangle_bb3_in/2 
* CE 107: eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) = 0
     [B=2,V_line_count_0=1] 
* CE 108: eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) = 1+ eval_bits_fill_rectangle_bb3_in(C,D)
     [V_line_count_0>=2,V_line_count_0=C+1,D=2,B=2] 
* CE 109: eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) = 1+ eval_bits_fill_rectangle_bb3_in(C,D)
     [0>=V_line_count_0,V_line_count_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb3_in/2 
* CEs [108] --> Loop 89 
* CEs [109] --> Loop 90 
* CEs [107] --> Loop 91 

#### Loops of eval_bits_fill_rectangle_bb3_in/2 
* Loop 89: eval_bits_fill_rectangle_bb3_in(V_line_count_0,B)->  eval_bits_fill_rectangle_bb3_in(V_line_count_0',B')
                  [V_line_count_0>=2,V_line_count_0=V_line_count_0'+1,B'=2,B=2] 
* Loop 90: eval_bits_fill_rectangle_bb3_in(V_line_count_0,B)->  eval_bits_fill_rectangle_bb3_in(V_line_count_0',B')
                  [0>=V_line_count_0,V_line_count_0=V_line_count_0'+1,B'=2,B=2] 
* Loop 91: eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) [B=2,V_line_count_0=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) 
* RF of phase [89]: [V_line_count_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) 
* Partial RF of phase [89]:
  - RF of loop [89:1]:
    V_line_count_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) 
* [[90]]...
* [[89],91]
* [91]


### Merging Chains  eval_bits_fill_rectangle_bb3_in/2 into  External patterns of execution 
* [[91]] --> 1 
* [[91,[89]]] --> 2 
* [[[90]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb5_in/2 
* CE 19 is refined into CE [110] 
* CE 18 is refined into CE [111] 
* CE 17 is refined into CE [112] 


#### Refined cost equations eval_bits_fill_rectangle_bb5_in/2 
* CE 110: eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) = 0
     [B=2,V_line_count1_0=1] 
* CE 111: eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) = 1+ eval_bits_fill_rectangle_bb5_in(C,D)
     [V_line_count1_0>=2,V_line_count1_0=C+1,D=2,B=2] 
* CE 112: eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) = 1+ eval_bits_fill_rectangle_bb5_in(C,D)
     [0>=V_line_count1_0,V_line_count1_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb5_in/2 
* CEs [111] --> Loop 92 
* CEs [112] --> Loop 93 
* CEs [110] --> Loop 94 

#### Loops of eval_bits_fill_rectangle_bb5_in/2 
* Loop 92: eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B)->  eval_bits_fill_rectangle_bb5_in(V_line_count1_0',B')
                  [V_line_count1_0>=2,V_line_count1_0=V_line_count1_0'+1,B'=2,B=2] 
* Loop 93: eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B)->  eval_bits_fill_rectangle_bb5_in(V_line_count1_0',B')
                  [0>=V_line_count1_0,V_line_count1_0=V_line_count1_0'+1,B'=2,B=2] 
* Loop 94: eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) [B=2,V_line_count1_0=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) 
* RF of phase [92]: [V_line_count1_0-1]

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) 
* Partial RF of phase [92]:
  - RF of loop [92:1]:
    V_line_count1_0-1


### Resulting Chains:eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) 
* [[93]]...
* [[92],94]
* [94]


### Merging Chains  eval_bits_fill_rectangle_bb5_in/2 into  External patterns of execution 
* [[94]] --> 1 
* [[94,[92]]] --> 2 
* [[[93]]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_bb0_in/3 
* CE 3 is refined into CE [113,114,115] 
* CE 4 is refined into CE [116,117,118] 
* CE 5 is refined into CE [119,120,121] 
* CE 6 is refined into CE [122,123,124] 
* CE 7 is refined into CE [125,126,127] 
* CE 8 is refined into CE [128,129,130] 
* CE 9 is refined into CE [131,132,133] 
* CE 10 is refined into CE [134,135,136] 
* CE 11 is refined into CE [137,138,139] 
* CE 12 is refined into CE [140,141,142] 


#### Refined cost equations eval_bits_fill_rectangle_bb0_in/3 
* CE 113: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb3_in(C,D):1
     [D=2,C=1,V_height=1] 
* CE 114: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb3_in(V_height,C):2
     [V_height>=2,C=2] 
* CE 115: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb3_in(V_height,C):3
     [0>=V_height,C=2] 
* CE 116: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault_in(C,B):1
     [C=1,V_height=1] 
* CE 117: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault_in(V_height,B):2
     [V_height>=2] 
* CE 118: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault_in(V_height,B):3
     [0>=V_height] 
* CE 119: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb5_in(C,D):1
     [D=2,C=1,V_height=1] 
* CE 120: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb5_in(V_height,C):2
     [V_height>=2,C=2] 
* CE 121: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb5_in(V_height,C):3
     [0>=V_height,C=2] 
* CE 122: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb11_in(C,D):1
     [D=2,C=1,V_height=1] 
* CE 123: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb11_in(V_height,C):2
     [V_height>=2,C=2] 
* CE 124: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb11_in(V_height,C):3
     [0>=V_height,C=2] 
* CE 125: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault10_in(C,B):1
     [C=1,V_height=1] 
* CE 126: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault10_in(V_height,B):2
     [V_height>=2] 
* CE 127: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault10_in(V_height,B):3
     [0>=V_height] 
* CE 128: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb13_in(C,D):1
     [D=2,C=1,V_height=1] 
* CE 129: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb13_in(V_height,C):2
     [V_height>=2,C=2] 
* CE 130: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb13_in(V_height,C):3
     [0>=V_height,C=2] 
* CE 131: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault3_in(V_pattern,C,B):1
     [C=1,V_height=1] 
* CE 132: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B):2
     [V_height>=2] 
* CE 133: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B):3
     [0>=V_height] 
* CE 134: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb18_in(C,D):1
     [D=2,C=1,V_height=1] 
* CE 135: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb18_in(V_height,C):2
     [V_height>=2,C=2] 
* CE 136: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb18_in(V_height,C):3
     [0>=V_height,C=2] 
* CE 137: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault17_in(C,B):1
     [C=1,V_height=1] 
* CE 138: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault17_in(V_height,B):2
     [V_height>=2] 
* CE 139: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 0+ eval_bits_fill_rectangle_NewDefault17_in(V_height,B):3
     [0>=V_height] 
* CE 140: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb20_in(C,D):1
     [D=2,C=1,V_height=1] 
* CE 141: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb20_in(V_height,C):2
     [V_height>=2,C=2] 
* CE 142: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) = 1+ eval_bits_fill_rectangle_bb20_in(V_height,C):3
     [0>=V_height,C=2] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_bb0_in/3 
* CEs [115,118,121,124,127,130,133,136,139,142] --> Loop 95 
* CEs [114,117,120,123,126,129,132,135,138,141] --> Loop 96 
* CEs [113,116,119,122,125,128,131,134,137,140] --> Loop 97 

#### Loops of eval_bits_fill_rectangle_bb0_in/3 
* Loop 95: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) [0>=V_height] 
* Loop 96: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) [V_height>=2] 
* Loop 97: eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) [V_height=1] 

### Ranking functions of CR eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) 

#### Partial ranking functions of CR eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) 


### Resulting Chains:eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B) 
* [97]
* [96]
* [95]...


### Merging Chains  eval_bits_fill_rectangle_bb0_in/3 into  External patterns of execution 
* [[97]] --> 1 
* [[96]] --> 2 
* [[95]] --> 3 


### Specialization of cost equations eval_bits_fill_rectangle_start/6 
* CE 2 is refined into CE [143,144,145] 


#### Refined cost equations eval_bits_fill_rectangle_start/6 
* CE 143: eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B) = 0+ eval_bits_fill_rectangle_bb0_in(V_pattern,C,B):1
     [C=1,V_height=1] 
* CE 144: eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B) = 0+ eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B):2
     [V_height>=2] 
* CE 145: eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B) = 0+ eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B):3
     [0>=V_height] 

### Cost equations --> "Loop" of eval_bits_fill_rectangle_start/6 
* CEs [145] --> Loop 98 
* CEs [144] --> Loop 99 
* CEs [143] --> Loop 100 

#### Loops of eval_bits_fill_rectangle_start/6 
* Loop 98: eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B) [0>=V_height] 
* Loop 99: eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B) [V_height>=2] 
* Loop 100: eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B) [V_height=1] 

### Ranking functions of CR eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B) 

#### Partial ranking functions of CR eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B) 


### Resulting Chains:eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B) 
* [100]
* [99]
* [98]...


### Merging Chains  eval_bits_fill_rectangle_start/6 into  External patterns of execution 
* [[100]] --> 1 
* [[99]] --> 2 
* [[98]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [45] 

 * loop 45:eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) -> [eval_bits_fill_rectangle_bb15_in(V_line_count9_0',B')] 
1
#### Cost of phase [45]:eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) -> [eval_bits_fill_rectangle_bb15_in(V_line_count9_0',B')] 
1*it(45)+0
#### Cost of loops [44] 

 * loop 44:eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) -> [eval_bits_fill_rectangle_bb15_in(V_line_count9_0',B')] 
1
#### Cost of phase [44]:eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B) -> [eval_bits_fill_rectangle_bb15_in(V_line_count9_0',B')] 
1*it(44)+0
  Such that:it(44) =< V_line_count9_0
it(44) =< V_line_count9_0-V_line_count9_0'

#### Cost of chains of eval_bits_fill_rectangle_bb15_in(V_line_count9_0,B):
* Chain [[45]]...: 1*it(45)+0
  with precondition: [0>=V_line_count9_0,B=2] 

* Chain [[44],46]: 1*it(44)+0
  Such that:it(44) =< V_line_count9_0

  with precondition: [B=2,V_line_count9_0>=2] 

* Chain [46]: 0
  with precondition: [V_line_count9_0=1,B=2] 


#### Cost of chains of eval_bits_fill_rectangle_NewDefault10_in(V_height,B):
* Chain [49]: 1
  with precondition: [V_height=1] 

* Chain [48]: 1*s(1)+1
  Such that:s(1) =< V_height

  with precondition: [V_height>=2] 

* Chain [47]...: 1*s(2)+1
  with precondition: [0>=V_height] 


#### Cost of loops [51] 

 * loop 51:eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) -> [eval_bits_fill_rectangle_bb22_in(V_line_count15_0',B')] 
1
#### Cost of phase [51]:eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) -> [eval_bits_fill_rectangle_bb22_in(V_line_count15_0',B')] 
1*it(51)+0
#### Cost of loops [50] 

 * loop 50:eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) -> [eval_bits_fill_rectangle_bb22_in(V_line_count15_0',B')] 
1
#### Cost of phase [50]:eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B) -> [eval_bits_fill_rectangle_bb22_in(V_line_count15_0',B')] 
1*it(50)+0
  Such that:it(50) =< V_line_count15_0
it(50) =< V_line_count15_0-V_line_count15_0'

#### Cost of chains of eval_bits_fill_rectangle_bb22_in(V_line_count15_0,B):
* Chain [[51]]...: 1*it(51)+0
  with precondition: [0>=V_line_count15_0,B=2] 

* Chain [[50],52]: 1*it(50)+0
  Such that:it(50) =< V_line_count15_0

  with precondition: [B=2,V_line_count15_0>=2] 

* Chain [52]: 0
  with precondition: [V_line_count15_0=1,B=2] 


#### Cost of chains of eval_bits_fill_rectangle_NewDefault17_in(V_height,B):
* Chain [55]: 1
  with precondition: [V_height=1] 

* Chain [54]: 1*s(3)+1
  Such that:s(3) =< V_height

  with precondition: [V_height>=2] 

* Chain [53]...: 1*s(4)+1
  with precondition: [0>=V_height] 


#### Cost of loops [58] 

 * loop 58:eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) -> [eval_bits_fill_rectangle_bb29_in(V_201',V_202',V_line_count21_0',B')] 
1
#### Cost of phase [58]:eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) -> [eval_bits_fill_rectangle_bb29_in(V_201',V_202',V_line_count21_0',B')] 
1*it(58)+0
#### Cost of loops [57] 

 * loop 57:eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) -> [eval_bits_fill_rectangle_bb29_in(V_201',V_202',V_line_count21_0',B')] 
1
#### Cost of phase [57]:eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B) -> [eval_bits_fill_rectangle_bb29_in(V_201',V_202',V_line_count21_0',B')] 
1*it(57)+0
  Such that:it(57) =< V_line_count21_0
it(57) =< V_line_count21_0-V_line_count21_0'

#### Cost of chains of eval_bits_fill_rectangle_bb29_in(V_201,V_202,V_line_count21_0,B):
* Chain [[58]]...: 1*it(58)+0
  with precondition: [0>=V_line_count21_0,B=2] 

* Chain [[57],56]: 1*it(57)+0
  Such that:it(57) =< V_line_count21_0

  with precondition: [B=2,V_line_count21_0>=2] 

* Chain [56]: 0
  with precondition: [V_line_count21_0=1,B=2] 


#### Cost of chains of eval_bits_fill_rectangle_NewDefault24_in(V_pattern,V_height,V_158,B):
* Chain [61]: 1
  with precondition: [V_height=1] 

* Chain [60]: 1*s(5)+1
  Such that:s(5) =< V_height

  with precondition: [V_height>=2] 

* Chain [59]...: 1*s(6)+1
  with precondition: [0>=V_height] 


#### Cost of loops [64] 

 * loop 64:eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) -> [eval_bits_fill_rectangle_bb25_in(V_162',V_line_count17_0',B')] 
1
#### Cost of phase [64]:eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) -> [eval_bits_fill_rectangle_bb25_in(V_162',V_line_count17_0',B')] 
1*it(64)+0
#### Cost of loops [63] 

 * loop 63:eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) -> [eval_bits_fill_rectangle_bb25_in(V_162',V_line_count17_0',B')] 
1
#### Cost of phase [63]:eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B) -> [eval_bits_fill_rectangle_bb25_in(V_162',V_line_count17_0',B')] 
1*it(63)+0
  Such that:it(63) =< V_line_count17_0
it(63) =< V_line_count17_0-V_line_count17_0'

#### Cost of chains of eval_bits_fill_rectangle_bb25_in(V_162,V_line_count17_0,B):
* Chain [[64]]...: 1*it(64)+0
  with precondition: [0>=V_line_count17_0,B=2] 

* Chain [[63],62]: 1*it(63)+0
  Such that:it(63) =< V_line_count17_0

  with precondition: [B=2,V_line_count17_0>=2] 

* Chain [62]: 0
  with precondition: [V_line_count17_0=1,B=2] 


#### Cost of loops [67] 

 * loop 67:eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) -> [eval_bits_fill_rectangle_bb27_in(V_181',V_line_count19_0',B')] 
1
#### Cost of phase [67]:eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) -> [eval_bits_fill_rectangle_bb27_in(V_181',V_line_count19_0',B')] 
1*it(67)+0
#### Cost of loops [66] 

 * loop 66:eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) -> [eval_bits_fill_rectangle_bb27_in(V_181',V_line_count19_0',B')] 
1
#### Cost of phase [66]:eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B) -> [eval_bits_fill_rectangle_bb27_in(V_181',V_line_count19_0',B')] 
1*it(66)+0
  Such that:it(66) =< V_line_count19_0
it(66) =< V_line_count19_0-V_line_count19_0'

#### Cost of chains of eval_bits_fill_rectangle_bb27_in(V_181,V_line_count19_0,B):
* Chain [[67]]...: 1*it(67)+0
  with precondition: [0>=V_line_count19_0,B=2] 

* Chain [[66],65]: 1*it(66)+0
  Such that:it(66) =< V_line_count19_0

  with precondition: [B=2,V_line_count19_0>=2] 

* Chain [65]: 0
  with precondition: [V_line_count19_0=1,B=2] 


#### Cost of chains of eval_bits_fill_rectangle_NewDefault3_in(V_pattern,V_height,B):
* Chain [70]: 1
  with precondition: [V_height=1] 

* Chain [69]: 3*s(7)+1
  Such that:aux(1) =< V_height
s(7) =< aux(1)

  with precondition: [V_height>=2] 

* Chain [68]...: 1*aux(2)+0
  with precondition: [0>=V_height] 


#### Cost of loops [72] 

 * loop 72:eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) -> [eval_bits_fill_rectangle_bb7_in(V_line_count3_0',B')] 
1
#### Cost of phase [72]:eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) -> [eval_bits_fill_rectangle_bb7_in(V_line_count3_0',B')] 
1*it(72)+0
#### Cost of loops [71] 

 * loop 71:eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) -> [eval_bits_fill_rectangle_bb7_in(V_line_count3_0',B')] 
1
#### Cost of phase [71]:eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B) -> [eval_bits_fill_rectangle_bb7_in(V_line_count3_0',B')] 
1*it(71)+0
  Such that:it(71) =< V_line_count3_0
it(71) =< V_line_count3_0-V_line_count3_0'

#### Cost of chains of eval_bits_fill_rectangle_bb7_in(V_line_count3_0,B):
* Chain [[72]]...: 1*it(72)+0
  with precondition: [0>=V_line_count3_0,B=2] 

* Chain [[71],73]: 1*it(71)+0
  Such that:it(71) =< V_line_count3_0

  with precondition: [B=2,V_line_count3_0>=2] 

* Chain [73]: 0
  with precondition: [V_line_count3_0=1,B=2] 


#### Cost of chains of eval_bits_fill_rectangle_NewDefault_in(V_height,B):
* Chain [76]: 1
  with precondition: [V_height=1] 

* Chain [75]: 1*s(13)+1
  Such that:s(13) =< V_height

  with precondition: [V_height>=2] 

* Chain [74]...: 1*s(14)+1
  with precondition: [0>=V_height] 


#### Cost of loops [78] 

 * loop 78:eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) -> [eval_bits_fill_rectangle_bb11_in(V_line_count5_0',B')] 
1
#### Cost of phase [78]:eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) -> [eval_bits_fill_rectangle_bb11_in(V_line_count5_0',B')] 
1*it(78)+0
#### Cost of loops [77] 

 * loop 77:eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) -> [eval_bits_fill_rectangle_bb11_in(V_line_count5_0',B')] 
1
#### Cost of phase [77]:eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B) -> [eval_bits_fill_rectangle_bb11_in(V_line_count5_0',B')] 
1*it(77)+0
  Such that:it(77) =< V_line_count5_0
it(77) =< V_line_count5_0-V_line_count5_0'

#### Cost of chains of eval_bits_fill_rectangle_bb11_in(V_line_count5_0,B):
* Chain [[78]]...: 1*it(78)+0
  with precondition: [0>=V_line_count5_0,B=2] 

* Chain [[77],79]: 1*it(77)+0
  Such that:it(77) =< V_line_count5_0

  with precondition: [B=2,V_line_count5_0>=2] 

* Chain [79]: 0
  with precondition: [V_line_count5_0=1,B=2] 


#### Cost of loops [81] 

 * loop 81:eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) -> [eval_bits_fill_rectangle_bb13_in(V_line_count7_0',B')] 
1
#### Cost of phase [81]:eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) -> [eval_bits_fill_rectangle_bb13_in(V_line_count7_0',B')] 
1*it(81)+0
#### Cost of loops [80] 

 * loop 80:eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) -> [eval_bits_fill_rectangle_bb13_in(V_line_count7_0',B')] 
1
#### Cost of phase [80]:eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B) -> [eval_bits_fill_rectangle_bb13_in(V_line_count7_0',B')] 
1*it(80)+0
  Such that:it(80) =< V_line_count7_0
it(80) =< V_line_count7_0-V_line_count7_0'

#### Cost of chains of eval_bits_fill_rectangle_bb13_in(V_line_count7_0,B):
* Chain [[81]]...: 1*it(81)+0
  with precondition: [0>=V_line_count7_0,B=2] 

* Chain [[80],82]: 1*it(80)+0
  Such that:it(80) =< V_line_count7_0

  with precondition: [B=2,V_line_count7_0>=2] 

* Chain [82]: 0
  with precondition: [V_line_count7_0=1,B=2] 


#### Cost of loops [84] 

 * loop 84:eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) -> [eval_bits_fill_rectangle_bb18_in(V_line_count11_0',B')] 
1
#### Cost of phase [84]:eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) -> [eval_bits_fill_rectangle_bb18_in(V_line_count11_0',B')] 
1*it(84)+0
#### Cost of loops [83] 

 * loop 83:eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) -> [eval_bits_fill_rectangle_bb18_in(V_line_count11_0',B')] 
1
#### Cost of phase [83]:eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B) -> [eval_bits_fill_rectangle_bb18_in(V_line_count11_0',B')] 
1*it(83)+0
  Such that:it(83) =< V_line_count11_0
it(83) =< V_line_count11_0-V_line_count11_0'

#### Cost of chains of eval_bits_fill_rectangle_bb18_in(V_line_count11_0,B):
* Chain [[84]]...: 1*it(84)+0
  with precondition: [0>=V_line_count11_0,B=2] 

* Chain [[83],85]: 1*it(83)+0
  Such that:it(83) =< V_line_count11_0

  with precondition: [B=2,V_line_count11_0>=2] 

* Chain [85]: 0
  with precondition: [V_line_count11_0=1,B=2] 


#### Cost of loops [87] 

 * loop 87:eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) -> [eval_bits_fill_rectangle_bb20_in(V_line_count13_0',B')] 
1
#### Cost of phase [87]:eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) -> [eval_bits_fill_rectangle_bb20_in(V_line_count13_0',B')] 
1*it(87)+0
#### Cost of loops [86] 

 * loop 86:eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) -> [eval_bits_fill_rectangle_bb20_in(V_line_count13_0',B')] 
1
#### Cost of phase [86]:eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B) -> [eval_bits_fill_rectangle_bb20_in(V_line_count13_0',B')] 
1*it(86)+0
  Such that:it(86) =< V_line_count13_0
it(86) =< V_line_count13_0-V_line_count13_0'

#### Cost of chains of eval_bits_fill_rectangle_bb20_in(V_line_count13_0,B):
* Chain [[87]]...: 1*it(87)+0
  with precondition: [0>=V_line_count13_0,B=2] 

* Chain [[86],88]: 1*it(86)+0
  Such that:it(86) =< V_line_count13_0

  with precondition: [B=2,V_line_count13_0>=2] 

* Chain [88]: 0
  with precondition: [V_line_count13_0=1,B=2] 


#### Cost of loops [90] 

 * loop 90:eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) -> [eval_bits_fill_rectangle_bb3_in(V_line_count_0',B')] 
1
#### Cost of phase [90]:eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) -> [eval_bits_fill_rectangle_bb3_in(V_line_count_0',B')] 
1*it(90)+0
#### Cost of loops [89] 

 * loop 89:eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) -> [eval_bits_fill_rectangle_bb3_in(V_line_count_0',B')] 
1
#### Cost of phase [89]:eval_bits_fill_rectangle_bb3_in(V_line_count_0,B) -> [eval_bits_fill_rectangle_bb3_in(V_line_count_0',B')] 
1*it(89)+0
  Such that:it(89) =< V_line_count_0
it(89) =< V_line_count_0-V_line_count_0'

#### Cost of chains of eval_bits_fill_rectangle_bb3_in(V_line_count_0,B):
* Chain [[90]]...: 1*it(90)+0
  with precondition: [0>=V_line_count_0,B=2] 

* Chain [[89],91]: 1*it(89)+0
  Such that:it(89) =< V_line_count_0

  with precondition: [B=2,V_line_count_0>=2] 

* Chain [91]: 0
  with precondition: [V_line_count_0=1,B=2] 


#### Cost of loops [93] 

 * loop 93:eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) -> [eval_bits_fill_rectangle_bb5_in(V_line_count1_0',B')] 
1
#### Cost of phase [93]:eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) -> [eval_bits_fill_rectangle_bb5_in(V_line_count1_0',B')] 
1*it(93)+0
#### Cost of loops [92] 

 * loop 92:eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) -> [eval_bits_fill_rectangle_bb5_in(V_line_count1_0',B')] 
1
#### Cost of phase [92]:eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B) -> [eval_bits_fill_rectangle_bb5_in(V_line_count1_0',B')] 
1*it(92)+0
  Such that:it(92) =< V_line_count1_0
it(92) =< V_line_count1_0-V_line_count1_0'

#### Cost of chains of eval_bits_fill_rectangle_bb5_in(V_line_count1_0,B):
* Chain [[93]]...: 1*it(93)+0
  with precondition: [0>=V_line_count1_0,B=2] 

* Chain [[92],94]: 1*it(92)+0
  Such that:it(92) =< V_line_count1_0

  with precondition: [B=2,V_line_count1_0>=2] 

* Chain [94]: 0
  with precondition: [V_line_count1_0=1,B=2] 


#### Cost of chains of eval_bits_fill_rectangle_bb0_in(V_pattern,V_height,B):
* Chain [97]: 1
  with precondition: [V_height=1] 

* Chain [96]: 12*s(15)+1
  Such that:aux(3) =< V_height
s(15) =< aux(3)

  with precondition: [V_height>=2] 

* Chain [95]...: 1*aux(4)+0
  with precondition: [0>=V_height] 


#### Cost of chains of eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B):
* Chain [100]: 1
  with precondition: [V_height=1] 

* Chain [99]: 12*s(37)+1
  Such that:s(36) =< V_height
s(37) =< s(36)

  with precondition: [V_height>=2] 

* Chain [98]...: 1*s(38)+0
  with precondition: [0>=V_height] 


Closed-form bounds of eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B): 
-------------------------------------
* Chain [100] with precondition: [V_height=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [99] with precondition: [V_height>=2] 
    - Upper bound: 12*V_height+1 
    - Complexity: n 
* Chain [98]... with precondition: [0>=V_height] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_bits_fill_rectangle_start(V_dest_bit,V_draster,V_pattern,V_width_bits,V_height,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 38 ms.
* Invariants computed in 74 ms.
   - Backward Invariants 28 ms.
   - Transitive Invariants 22 ms.
* Refinement performed in 142 ms.
* Termination proved in 21 ms.
* Upper bounds computed in 98 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 35 ms.
   - Chain cost structures 28 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 440 ms.

