Warning: Ignored call to eval_flagpr_stop/1 in equation eval_flagpr_bb33_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_flagpr_bb2_in/13]
1. recursive  : [eval_flagpr_bb5_in/13]
2. recursive  : [eval_flagpr_bb10_in/13]
3. recursive  : [eval_flagpr_bb14_in/13]
4. recursive  : [eval_flagpr_52/14,eval_flagpr_53/14,eval_flagpr_54/14,eval_flagpr_bb18_in/12]
5. recursive  : [eval_flagpr_61/14,eval_flagpr_62/14,eval_flagpr_63/14,eval_flagpr_bb20_in/12]
6. recursive  : [eval_flagpr_71/8,eval_flagpr_72/8,eval_flagpr_73/8,eval_flagpr_bb23_in/6]
7. non_recursive  : [eval_flagpr_bb33_in/1]
8. non_recursive  : [eval_flagpr_97/1]
9. non_recursive  : [eval_flagpr_96/2]
10. non_recursive  : [eval_flagpr_bb31_in/2]
11. non_recursive  : [eval_flagpr_95/2]
12. non_recursive  : [eval_flagpr_94/3]
13. non_recursive  : [eval_flagpr_93/3]
14. non_recursive  : [eval_flagpr_92/4]
15. non_recursive  : [eval_flagpr_bb29_in/3]
16. non_recursive  : [eval_flagpr_80/3]
17. non_recursive  : [eval_flagpr_79/3]
18. non_recursive  : [eval_flagpr_78/3]
19. recursive  : [eval_flagpr_87/6,eval_flagpr_88/6,eval_flagpr_89/6,eval_flagpr_bb27_in/5]
20. non_recursive  : [loop_cont_eval_flagpr_bb27_in/4]
21. non_recursive  : [loop_cont_eval_flagpr_bb23_in/4]
22. non_recursive  : [eval_flagpr_bb22_in/6]
23. non_recursive  : [loop_cont_eval_flagpr_bb18_in/7]
24. non_recursive  : [loop_cont_eval_flagpr_bb20_in/7]
25. non_recursive  : [eval_flagpr_43/7]
26. non_recursive  : [eval_flagpr_42/7]
27. non_recursive  : [eval_flagpr_bb17_in/7]
28. non_recursive  : [loop_cont_eval_flagpr_bb10_in/8]
29. non_recursive  : [loop_cont_eval_flagpr_bb14_in/8]
30. non_recursive  : [eval_flagpr_bb8_in/7]
31. non_recursive  : [loop_cont_eval_flagpr_bb2_in/8]
32. non_recursive  : [loop_cont_eval_flagpr_bb5_in/8]
33. non_recursive  : [eval_flagpr_1/7]
34. non_recursive  : [eval_flagpr_0/6]
35. non_recursive  : [eval_flagpr_bb0_in/6]
36. non_recursive  : [eval_flagpr_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_flagpr_bb2_in/13
1. SCC is partially evaluated into eval_flagpr_bb5_in/13
2. SCC is partially evaluated into eval_flagpr_bb10_in/13
3. SCC is partially evaluated into eval_flagpr_bb14_in/13
4. SCC is partially evaluated into eval_flagpr_bb18_in/12
5. SCC is partially evaluated into eval_flagpr_bb20_in/12
6. SCC is partially evaluated into eval_flagpr_bb23_in/6
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_flagpr_bb31_in/2
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_flagpr_93/3
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_flagpr_bb27_in/5
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into loop_cont_eval_flagpr_bb23_in/4
22. SCC is partially evaluated into eval_flagpr_bb22_in/6
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_flagpr_43/7
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into loop_cont_eval_flagpr_bb10_in/8
29. SCC is partially evaluated into loop_cont_eval_flagpr_bb14_in/8
30. SCC is partially evaluated into eval_flagpr_bb8_in/7
31. SCC is partially evaluated into loop_cont_eval_flagpr_bb2_in/8
32. SCC is partially evaluated into loop_cont_eval_flagpr_bb5_in/8
33. SCC is partially evaluated into eval_flagpr_1/7
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is partially evaluated into eval_flagpr_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_flagpr_bb2_in/13 
* CE 8 is refined into CE [45] 
* CE 6 is refined into CE [46] 
* CE 7 is refined into CE [47] 


#### Refined cost equations eval_flagpr_bb2_in/13 
* CE 45: eval_flagpr_bb2_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=3] 
* CE 46: eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) = 0
     [B=2] 
* CE 47: eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) = 1+ eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)
     [] 

### Cost equations --> "Loop" of eval_flagpr_bb2_in/13 
* CEs [47] --> Loop 39 
* CEs [45] --> Loop 40 
* CEs [46] --> Loop 41 

#### Loops of eval_flagpr_bb2_in/13 
* Loop 39: eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)->  eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)
                  [] 
* Loop 40: eval_flagpr_bb2_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=3] 
* Loop 41: eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) [B=2] 

### Ranking functions of CR eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 


### Resulting Chains:eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 
* [[39]]...
* [[39],41]
* [[39],40]
* [41]
* [40]


### Merging Chains  eval_flagpr_bb2_in/13 into  External patterns of execution 
* [[41],[41,[39]]] --> 1 
* [[40],[40,[39]]] --> 2 
* [[[39]]] --> 3 


### Specialization of cost equations eval_flagpr_bb5_in/13 
* CE 13 is refined into CE [48] 
* CE 11 is refined into CE [49] 
* CE 12 is refined into CE [50] 


#### Refined cost equations eval_flagpr_bb5_in/13 
* CE 48: eval_flagpr_bb5_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=3] 
* CE 49: eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) = 0
     [B=2] 
* CE 50: eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) = 1+ eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)
     [] 

### Cost equations --> "Loop" of eval_flagpr_bb5_in/13 
* CEs [50] --> Loop 42 
* CEs [48] --> Loop 43 
* CEs [49] --> Loop 44 

#### Loops of eval_flagpr_bb5_in/13 
* Loop 42: eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)->  eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)
                  [] 
* Loop 43: eval_flagpr_bb5_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=3] 
* Loop 44: eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) [B=2] 

### Ranking functions of CR eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 


### Resulting Chains:eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 
* [[42]]...
* [[42],44]
* [[42],43]
* [44]
* [43]


### Merging Chains  eval_flagpr_bb5_in/13 into  External patterns of execution 
* [[44],[44,[42]]] --> 1 
* [[43],[43,[42]]] --> 2 
* [[[42]]] --> 3 


### Specialization of cost equations eval_flagpr_bb10_in/13 
* CE 21 is refined into CE [51] 
* CE 19 is refined into CE [52] 
* CE 20 is refined into CE [53] 


#### Refined cost equations eval_flagpr_bb10_in/13 
* CE 51: eval_flagpr_bb10_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=8] 
* CE 52: eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) = 0
     [B=2] 
* CE 53: eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)
     [] 

### Cost equations --> "Loop" of eval_flagpr_bb10_in/13 
* CEs [53] --> Loop 45 
* CEs [51] --> Loop 46 
* CEs [52] --> Loop 47 

#### Loops of eval_flagpr_bb10_in/13 
* Loop 45: eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)->  eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)
                  [] 
* Loop 46: eval_flagpr_bb10_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=8] 
* Loop 47: eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) [B=2] 

### Ranking functions of CR eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 


### Resulting Chains:eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 
* [[45]]...
* [[45],47]
* [[45],46]
* [47]
* [46]


### Merging Chains  eval_flagpr_bb10_in/13 into  External patterns of execution 
* [[47],[47,[45]]] --> 1 
* [[46],[46,[45]]] --> 2 
* [[[45]]] --> 3 


### Specialization of cost equations eval_flagpr_bb14_in/13 
* CE 26 is refined into CE [54] 
* CE 24 is refined into CE [55] 
* CE 25 is refined into CE [56] 


#### Refined cost equations eval_flagpr_bb14_in/13 
* CE 54: eval_flagpr_bb14_in(A,B,C,D,E,F,G,A,B,C,D,E,F) = 0
     [G=8] 
* CE 55: eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) = 0
     [B=2] 
* CE 56: eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)
     [] 

### Cost equations --> "Loop" of eval_flagpr_bb14_in/13 
* CEs [56] --> Loop 48 
* CEs [54] --> Loop 49 
* CEs [55] --> Loop 50 

#### Loops of eval_flagpr_bb14_in/13 
* Loop 48: eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)->  eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H)
                  [] 
* Loop 49: eval_flagpr_bb14_in(A,B,C,D,E,F,G,A,B,C,D,E,F) [G=8] 
* Loop 50: eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) [B=2] 

### Ranking functions of CR eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 


### Resulting Chains:eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) 
* [[48]]...
* [[48],50]
* [[48],49]
* [50]
* [49]


### Merging Chains  eval_flagpr_bb14_in/13 into  External patterns of execution 
* [[50],[50,[48]]] --> 1 
* [[49],[49,[48]]] --> 2 
* [[[48]]] --> 3 


### Specialization of cost equations eval_flagpr_bb18_in/12 
* CE 32 is refined into CE [57] 
* CE 31 is refined into CE [58] 


#### Refined cost equations eval_flagpr_bb18_in/12 
* CE 57: eval_flagpr_bb18_in(A,B,C,D,E,F,G,A,B,C,D,E) = 0
     [0>=F,G=7] 
* CE 58: eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__01,B,C,D,E,F,G) = 1+ eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,H,I,C,D,E,F,G)
     [V__01>=1,V__01=H+1,I=7,B=7] 

### Cost equations --> "Loop" of eval_flagpr_bb18_in/12 
* CEs [58] --> Loop 51 
* CEs [57] --> Loop 52 

#### Loops of eval_flagpr_bb18_in/12 
* Loop 51: eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__01,B,C,D,E,F,G)->  eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__01',B',C,D,E,F,G)
                  [V__01>=1,V__01=V__01'+1,B'=7,B=7] 
* Loop 52: eval_flagpr_bb18_in(A,B,C,D,E,F,G,A,B,C,D,E) [0>=F,G=7] 

### Ranking functions of CR eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__01,B,C,D,E,F,G) 
* RF of phase [51]: [V__01]

#### Partial ranking functions of CR eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__01,B,C,D,E,F,G) 
* Partial RF of phase [51]:
  - RF of loop [51:1]:
    V__01


### Resulting Chains:eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__01,B,C,D,E,F,G) 
* [[51],52]
* [52]


### Merging Chains  eval_flagpr_bb18_in/12 into  External patterns of execution 
* [[52]] --> 1 
* [[52,[51]]] --> 2 


### Specialization of cost equations eval_flagpr_bb20_in/12 
* CE 35 is refined into CE [59] 
* CE 34 is refined into CE [60] 


#### Refined cost equations eval_flagpr_bb20_in/12 
* CE 59: eval_flagpr_bb20_in(A,B,C,D,E,F,G,A,B,C,D,E) = 0
     [0>=F,G=7] 
* CE 60: eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__12,B,C,D,E,F,G) = 1+ eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,H,I,C,D,E,F,G)
     [V__12>=1,V__12=H+1,I=7,B=7] 

### Cost equations --> "Loop" of eval_flagpr_bb20_in/12 
* CEs [60] --> Loop 53 
* CEs [59] --> Loop 54 

#### Loops of eval_flagpr_bb20_in/12 
* Loop 53: eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__12,B,C,D,E,F,G)->  eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__12',B',C,D,E,F,G)
                  [V__12>=1,V__12=V__12'+1,B'=7,B=7] 
* Loop 54: eval_flagpr_bb20_in(A,B,C,D,E,F,G,A,B,C,D,E) [0>=F,G=7] 

### Ranking functions of CR eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__12,B,C,D,E,F,G) 
* RF of phase [53]: [V__12]

#### Partial ranking functions of CR eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__12,B,C,D,E,F,G) 
* Partial RF of phase [53]:
  - RF of loop [53:1]:
    V__12


### Resulting Chains:eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__12,B,C,D,E,F,G) 
* [[53],54]
* [54]


### Merging Chains  eval_flagpr_bb20_in/12 into  External patterns of execution 
* [[54]] --> 1 
* [[54,[53]]] --> 2 


### Specialization of cost equations eval_flagpr_bb23_in/6 
* CE 38 is refined into CE [61] 
* CE 37 is refined into CE [62] 
* CE 36 is refined into CE [63] 


#### Refined cost equations eval_flagpr_bb23_in/6 
* CE 61: eval_flagpr_bb23_in(A,B,C,D,A,B) = 0
     [0>=C,D=6] 
* CE 62: eval_flagpr_bb23_in(A,B,C,D,A,B) = 0
     [0>=C,D=5] 
* CE 63: eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23,B,C,D) = 1+ eval_flagpr_bb23_in(V_preflag,V_sufflag,E,B,C,D)
     [V__23>=1,V__23=E+1] 

### Cost equations --> "Loop" of eval_flagpr_bb23_in/6 
* CEs [63] --> Loop 55 
* CEs [61] --> Loop 56 
* CEs [62] --> Loop 57 

#### Loops of eval_flagpr_bb23_in/6 
* Loop 55: eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23,B,C,D)->  eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23',B,C,D)
                  [V__23>=1,V__23=V__23'+1] 
* Loop 56: eval_flagpr_bb23_in(A,B,C,D,A,B) [0>=C,D=6] 
* Loop 57: eval_flagpr_bb23_in(A,B,C,D,A,B) [0>=C,D=5] 

### Ranking functions of CR eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23,B,C,D) 
* RF of phase [55]: [V__23]

#### Partial ranking functions of CR eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23,B,C,D) 
* Partial RF of phase [55]:
  - RF of loop [55:1]:
    V__23


### Resulting Chains:eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23,B,C,D) 
* [[55],57]
* [[55],56]
* [57]
* [56]


### Merging Chains  eval_flagpr_bb23_in/6 into  External patterns of execution 
* [[57]] --> 1 
* [[57,[55]]] --> 2 
* [[56]] --> 3 
* [[56,[55]]] --> 4 


### Specialization of cost equations eval_flagpr_bb31_in/2 
* CE 44 is refined into CE [64] 


#### Refined cost equations eval_flagpr_bb31_in/2 
* CE 64: eval_flagpr_bb31_in(V_sufflag,B) = 0
     [] 

### Cost equations --> "Loop" of eval_flagpr_bb31_in/2 
* CEs [64] --> Loop 58 

#### Loops of eval_flagpr_bb31_in/2 
* Loop 58: eval_flagpr_bb31_in(V_sufflag,B) [] 

### Ranking functions of CR eval_flagpr_bb31_in(V_sufflag,B) 

#### Partial ranking functions of CR eval_flagpr_bb31_in(V_sufflag,B) 


### Resulting Chains:eval_flagpr_bb31_in(V_sufflag,B) 
* [58]


### Merging Chains  eval_flagpr_bb31_in/2 into  External patterns of execution 
* [[58]] --> 1 


### Specialization of cost equations eval_flagpr_93/3 
* CE 41 is refined into CE [65] 


#### Refined cost equations eval_flagpr_93/3 
* CE 65: eval_flagpr_93(V_preflag,V_sufflag,B) = 0+ eval_flagpr_bb31_in(V_sufflag,B):1
     [] 

### Cost equations --> "Loop" of eval_flagpr_93/3 
* CEs [65] --> Loop 59 

#### Loops of eval_flagpr_93/3 
* Loop 59: eval_flagpr_93(V_preflag,V_sufflag,B) [] 

### Ranking functions of CR eval_flagpr_93(V_preflag,V_sufflag,B) 

#### Partial ranking functions of CR eval_flagpr_93(V_preflag,V_sufflag,B) 


### Resulting Chains:eval_flagpr_93(V_preflag,V_sufflag,B) 
* [59]


### Merging Chains  eval_flagpr_93/3 into  External patterns of execution 
* [[59]] --> 1 


### Specialization of cost equations eval_flagpr_bb27_in/5 
* CE 43 is refined into CE [66] 
* CE 42 is refined into CE [67] 


#### Refined cost equations eval_flagpr_bb27_in/5 
* CE 66: eval_flagpr_bb27_in(A,B,C,A,B) = 0
     [C=4] 
* CE 67: eval_flagpr_bb27_in(V_preflag,V_sufflag,B,C,D) = 1+ eval_flagpr_bb27_in(V_preflag,V_sufflag,E,C,D)
     [E=4,B=4] 

### Cost equations --> "Loop" of eval_flagpr_bb27_in/5 
* CEs [67] --> Loop 60 
* CEs [66] --> Loop 61 

#### Loops of eval_flagpr_bb27_in/5 
* Loop 60: eval_flagpr_bb27_in(V_preflag,V_sufflag,B,C,D)->  eval_flagpr_bb27_in(V_preflag,V_sufflag,B',C,D)
                  [B'=4,B=4] 
* Loop 61: eval_flagpr_bb27_in(A,B,C,A,B) [C=4] 

### Ranking functions of CR eval_flagpr_bb27_in(V_preflag,V_sufflag,B,C,D) 

#### Partial ranking functions of CR eval_flagpr_bb27_in(V_preflag,V_sufflag,B,C,D) 


### Resulting Chains:eval_flagpr_bb27_in(V_preflag,V_sufflag,B,C,D) 
* [[60]]...
* [[60],61]
* [61]


### Merging Chains  eval_flagpr_bb27_in/5 into  External patterns of execution 
* [[61],[61,[60]]] --> 1 
* [[[60]]] --> 2 


### Specialization of cost equations loop_cont_eval_flagpr_bb23_in/4 
* CE 40 is refined into CE [68,69] 
* CE 39 is refined into CE [70] 


#### Refined cost equations loop_cont_eval_flagpr_bb23_in/4 
* CE 68: loop_cont_eval_flagpr_bb23_in(E,A,B,C) = 1+ eval_flagpr_bb27_in(A,B,F,A,B):1+ eval_flagpr_93(A,B,C):1
     [F=4,E=6] 
* CE 69: loop_cont_eval_flagpr_bb23_in(E,A,B,C) = 1+ eval_flagpr_bb27_in(A,B,F,G,H):2
     [F=4,E=6] 
* CE 70: loop_cont_eval_flagpr_bb23_in(E,A,B,C) = 0+ eval_flagpr_93(A,B,C):1
     [E=5] 

### Cost equations --> "Loop" of loop_cont_eval_flagpr_bb23_in/4 
* CEs [68] --> Loop 62 
* CEs [70] --> Loop 63 
* CEs [69] --> Loop 64 

#### Loops of loop_cont_eval_flagpr_bb23_in/4 
* Loop 62: loop_cont_eval_flagpr_bb23_in(E,A,B,C) [E=6] 
* Loop 63: loop_cont_eval_flagpr_bb23_in(E,A,B,C) [E=5] 
* Loop 64: loop_cont_eval_flagpr_bb23_in(E,A,B,C) [E=6] 

### Ranking functions of CR loop_cont_eval_flagpr_bb23_in(E,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_flagpr_bb23_in(E,A,B,C) 


### Resulting Chains:loop_cont_eval_flagpr_bb23_in(E,A,B,C) 
* [64]...
* [63]
* [62]


### Merging Chains  loop_cont_eval_flagpr_bb23_in/4 into  External patterns of execution 
* [[63]] --> 1 
* [[62]] --> 2 
* [[64]] --> 3 


### Specialization of cost equations eval_flagpr_bb22_in/6 
* CE 33 is refined into CE [71,72,73,74,75,76] 


#### Refined cost equations eval_flagpr_bb22_in/6 
* CE 71: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb23_in(V_preflag,V_sufflag,C,D,V_preflag,V_sufflag):1+ loop_cont_eval_flagpr_bb23_in(E,V_preflag,V_sufflag,B):1
     [0>=C,V_preadd+V_sufadd+C=V_2,E=5,D=5] 
* CE 72: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb23_in(V_preflag,V_sufflag,C,D,V_preflag,V_sufflag):2+ loop_cont_eval_flagpr_bb23_in(E,V_preflag,V_sufflag,B):1
     [C>=1,V_preadd+V_sufadd+C=V_2,E=5,D=5] 
* CE 73: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb23_in(V_preflag,V_sufflag,C,D,V_preflag,V_sufflag):3+ loop_cont_eval_flagpr_bb23_in(E,V_preflag,V_sufflag,B):2
     [0>=C,V_preadd+V_sufadd+C=V_2,E=6,D=6] 
* CE 74: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb23_in(V_preflag,V_sufflag,C,D,V_preflag,V_sufflag):3+ loop_cont_eval_flagpr_bb23_in(E,V_preflag,V_sufflag,B):3
     [0>=C,V_preadd+V_sufadd+C=V_2,E=6,D=6] 
* CE 75: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb23_in(V_preflag,V_sufflag,C,D,V_preflag,V_sufflag):4+ loop_cont_eval_flagpr_bb23_in(E,V_preflag,V_sufflag,B):2
     [C>=1,V_preadd+V_sufadd+C=V_2,E=6,D=6] 
* CE 76: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb23_in(V_preflag,V_sufflag,C,D,V_preflag,V_sufflag):4+ loop_cont_eval_flagpr_bb23_in(E,V_preflag,V_sufflag,B):3
     [C>=1,V_preadd+V_sufadd+C=V_2,E=6,D=6] 

### Cost equations --> "Loop" of eval_flagpr_bb22_in/6 
* CEs [74] --> Loop 65 
* CEs [76] --> Loop 66 
* CEs [71,73] --> Loop 67 
* CEs [72,75] --> Loop 68 

#### Loops of eval_flagpr_bb22_in/6 
* Loop 65: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_preadd+V_sufadd>=V_2] 
* Loop 66: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_2>=V_preadd+V_sufadd+1] 
* Loop 67: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_preadd+V_sufadd>=V_2] 
* Loop 68: eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_2>=V_preadd+V_sufadd+1] 

### Ranking functions of CR eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) 

#### Partial ranking functions of CR eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) 


### Resulting Chains:eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B) 
* [68]
* [67]
* [66]...
* [65]...


### Merging Chains  eval_flagpr_bb22_in/6 into  External patterns of execution 
* [[68]] --> 1 
* [[67]] --> 2 
* [[66]] --> 3 
* [[65]] --> 4 


### Specialization of cost equations eval_flagpr_43/7 
* CE 29 is refined into CE [77,78,79,80,81,82,83,84] 
* CE 30 is refined into CE [85,86,87,88,89,90,91,92] 


#### Refined cost equations eval_flagpr_43/7 
* CE 77: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):1+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):1
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip,C=7] 
* CE 78: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):1+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):2
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip,C=7] 
* CE 79: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):1+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):3
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip,C=7] 
* CE 80: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):1+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):4
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip,C=7] 
* CE 81: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):2+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):1
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1,C=7] 
* CE 82: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):2+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):2
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1,C=7] 
* CE 83: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):2+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):3
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1,C=7] 
* CE 84: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):2+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):4
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1,C=7] 
* CE 85: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):1+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):1
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip,C=7] 
* CE 86: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):1+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):2
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip,C=7] 
* CE 87: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):1+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):3
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip,C=7] 
* CE 88: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):1+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):4
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip,C=7] 
* CE 89: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):2+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):1
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1,C=7] 
* CE 90: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):2+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):2
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1,C=7] 
* CE 91: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):2+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):3
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1,C=7] 
* CE 92: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V_prestrip,C,V_preflag,V_preadd,V_sufflag,V_sufadd,V_2):2+ eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):4
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1,C=7] 

### Cost equations --> "Loop" of eval_flagpr_43/7 
* CEs [84,92] --> Loop 69 
* CEs [83,91] --> Loop 70 
* CEs [80,88] --> Loop 71 
* CEs [79,87] --> Loop 72 
* CEs [82,90] --> Loop 73 
* CEs [81,89] --> Loop 74 
* CEs [78,86] --> Loop 75 
* CEs [77,85] --> Loop 76 

#### Loops of eval_flagpr_43/7 
* Loop 69: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_preadd+V_sufadd>=V_2,V_prestrip>=1] 
* Loop 70: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1] 
* Loop 71: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_preadd+V_sufadd>=V_2,0>=V_prestrip] 
* Loop 72: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip] 
* Loop 73: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_preadd+V_sufadd>=V_2,V_prestrip>=1] 
* Loop 74: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1] 
* Loop 75: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_preadd+V_sufadd>=V_2,0>=V_prestrip] 
* Loop 76: eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip] 

### Ranking functions of CR eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) 

#### Partial ranking functions of CR eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) 


### Resulting Chains:eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) 
* [76]
* [75]
* [74]
* [73]
* [72]...
* [71]...
* [70]...
* [69]...


### Merging Chains  eval_flagpr_43/7 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 
* [[74]] --> 3 
* [[73]] --> 4 
* [[72]] --> 5 
* [[71]] --> 6 
* [[70]] --> 7 
* [[69]] --> 8 


### Specialization of cost equations loop_cont_eval_flagpr_bb10_in/8 
* CE 23 is refined into CE [93,94,95,96,97,98,99,100] 
* CE 22 is refined into CE [101] 


#### Refined cost equations loop_cont_eval_flagpr_bb10_in/8 
* CE 93: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):1
     [F>=C+E+1,0>=B,H=8] 
* CE 94: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):2
     [C+E>=F,0>=B,H=8] 
* CE 95: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):3
     [F>=C+E+1,B>=1,H=8] 
* CE 96: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):4
     [C+E>=F,B>=1,H=8] 
* CE 97: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):5
     [F>=C+E+1,0>=B,H=8] 
* CE 98: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):6
     [C+E>=F,0>=B,H=8] 
* CE 99: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):7
     [F>=C+E+1,B>=1,H=8] 
* CE 100: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):8
     [C+E>=F,B>=1,H=8] 
* CE 101: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) = 0
     [H=2] 

### Cost equations --> "Loop" of loop_cont_eval_flagpr_bb10_in/8 
* CEs [96] --> Loop 77 
* CEs [95] --> Loop 78 
* CEs [94] --> Loop 79 
* CEs [93] --> Loop 80 
* CEs [101] --> Loop 81 
* CEs [100] --> Loop 82 
* CEs [99] --> Loop 83 
* CEs [98] --> Loop 84 
* CEs [97] --> Loop 85 

#### Loops of loop_cont_eval_flagpr_bb10_in/8 
* Loop 77: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) [C+E>=F,B>=1,H=8] 
* Loop 78: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) [F>=C+E+1,B>=1,H=8] 
* Loop 79: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) [C+E>=F,0>=B,H=8] 
* Loop 80: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) [F>=C+E+1,0>=B,H=8] 
* Loop 81: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) [H=2] 
* Loop 82: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) [C+E>=F,B>=1,H=8] 
* Loop 83: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) [F>=C+E+1,B>=1,H=8] 
* Loop 84: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) [C+E>=F,0>=B,H=8] 
* Loop 85: loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) [F>=C+E+1,0>=B,H=8] 

### Ranking functions of CR loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) 

#### Partial ranking functions of CR loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) 


### Resulting Chains:loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G) 
* [85]...
* [84]...
* [83]...
* [82]...
* [81]
* [80]
* [79]
* [78]
* [77]


### Merging Chains  loop_cont_eval_flagpr_bb10_in/8 into  External patterns of execution 
* [[81]] --> 1 
* [[80]] --> 2 
* [[79]] --> 3 
* [[78]] --> 4 
* [[77]] --> 5 
* [[85]] --> 6 
* [[84]] --> 7 
* [[83]] --> 8 
* [[82]] --> 9 


### Specialization of cost equations loop_cont_eval_flagpr_bb14_in/8 
* CE 28 is refined into CE [102,103,104,105,106,107,108,109] 
* CE 27 is refined into CE [110] 


#### Refined cost equations loop_cont_eval_flagpr_bb14_in/8 
* CE 102: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):1
     [F>=C+E+1,0>=B,H=8] 
* CE 103: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):2
     [C+E>=F,0>=B,H=8] 
* CE 104: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):3
     [F>=C+E+1,B>=1,H=8] 
* CE 105: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):4
     [C+E>=F,B>=1,H=8] 
* CE 106: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):5
     [F>=C+E+1,0>=B,H=8] 
* CE 107: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):6
     [C+E>=F,0>=B,H=8] 
* CE 108: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):7
     [F>=C+E+1,B>=1,H=8] 
* CE 109: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_43(A,B,C,D,E,F,G):8
     [C+E>=F,B>=1,H=8] 
* CE 110: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) = 0
     [H=2] 

### Cost equations --> "Loop" of loop_cont_eval_flagpr_bb14_in/8 
* CEs [105] --> Loop 86 
* CEs [104] --> Loop 87 
* CEs [103] --> Loop 88 
* CEs [102] --> Loop 89 
* CEs [110] --> Loop 90 
* CEs [109] --> Loop 91 
* CEs [108] --> Loop 92 
* CEs [107] --> Loop 93 
* CEs [106] --> Loop 94 

#### Loops of loop_cont_eval_flagpr_bb14_in/8 
* Loop 86: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) [C+E>=F,B>=1,H=8] 
* Loop 87: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) [F>=C+E+1,B>=1,H=8] 
* Loop 88: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) [C+E>=F,0>=B,H=8] 
* Loop 89: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) [F>=C+E+1,0>=B,H=8] 
* Loop 90: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) [H=2] 
* Loop 91: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) [C+E>=F,B>=1,H=8] 
* Loop 92: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) [F>=C+E+1,B>=1,H=8] 
* Loop 93: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) [C+E>=F,0>=B,H=8] 
* Loop 94: loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) [F>=C+E+1,0>=B,H=8] 

### Ranking functions of CR loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) 

#### Partial ranking functions of CR loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) 


### Resulting Chains:loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G) 
* [94]...
* [93]...
* [92]...
* [91]...
* [90]
* [89]
* [88]
* [87]
* [86]


### Merging Chains  loop_cont_eval_flagpr_bb14_in/8 into  External patterns of execution 
* [[90]] --> 1 
* [[89]] --> 2 
* [[88]] --> 3 
* [[87]] --> 4 
* [[86]] --> 5 
* [[94]] --> 6 
* [[93]] --> 7 
* [[92]] --> 8 
* [[91]] --> 9 


### Specialization of cost equations eval_flagpr_bb8_in/7 
* CE 16 is refined into CE [111,112,113,114,115,116,117,118,119,120] 
* CE 17 is refined into CE [121,122,123,124,125,126,127,128,129,130] 
* CE 18 is refined into CE [131,132,133,134,135,136,137,138] 


#### Refined cost equations eval_flagpr_bb8_in/7 
* CE 111: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,D,E,F,G,H,I):1+ loop_cont_eval_flagpr_bb10_in(J,D,E,F,G,H,I,B):1
     [J=2,C=2] 
* CE 112: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb10_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):2
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip,D=8,C=8] 
* CE 113: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb10_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):3
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip,D=8,C=8] 
* CE 114: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb10_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):4
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1,D=8,C=8] 
* CE 115: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb10_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):5
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1,D=8,C=8] 
* CE 116: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb10_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):6
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip,D=8,C=8] 
* CE 117: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb10_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):7
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip,D=8,C=8] 
* CE 118: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb10_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):8
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1,D=8,C=8] 
* CE 119: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb10_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):9
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1,D=8,C=8] 
* CE 120: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,D,E,F,G,H,I):3
     [] 
* CE 121: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,D,E,F,G,H,I):1+ loop_cont_eval_flagpr_bb14_in(J,D,E,F,G,H,I,B):1
     [J=2,C=2] 
* CE 122: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb14_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):2
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip,D=8,C=8] 
* CE 123: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb14_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):3
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip,D=8,C=8] 
* CE 124: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb14_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):4
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1,D=8,C=8] 
* CE 125: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb14_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):5
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1,D=8,C=8] 
* CE 126: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb14_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):6
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip,D=8,C=8] 
* CE 127: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb14_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):7
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip,D=8,C=8] 
* CE 128: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb14_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):8
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1,D=8,C=8] 
* CE 129: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2):2+ loop_cont_eval_flagpr_bb14_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):9
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1,D=8,C=8] 
* CE 130: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 1+ eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,C,D,E,F,G,H,I):3
     [] 
* CE 131: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 0+ eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):1
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip] 
* CE 132: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 0+ eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):2
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip] 
* CE 133: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 0+ eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):3
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1] 
* CE 134: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 0+ eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):4
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1] 
* CE 135: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 0+ eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):5
     [V_2>=V_preadd+V_sufadd+1,0>=V_prestrip] 
* CE 136: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 0+ eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):6
     [V_preadd+V_sufadd>=V_2,0>=V_prestrip] 
* CE 137: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 0+ eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):7
     [V_2>=V_preadd+V_sufadd+1,V_prestrip>=1] 
* CE 138: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) = 0+ eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):8
     [V_preadd+V_sufadd>=V_2,V_prestrip>=1] 

### Cost equations --> "Loop" of eval_flagpr_bb8_in/7 
* CEs [116,117,118,119,120,126,127,128,129,130,135,136,137,138] --> Loop 95 
* CEs [111,112,113,114,115,121,122,123,124,125,131,132,133,134] --> Loop 96 

#### Loops of eval_flagpr_bb8_in/7 
* Loop 95: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [] 
* Loop 96: eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) [] 

### Ranking functions of CR eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) 

#### Partial ranking functions of CR eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) 


### Resulting Chains:eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B) 
* [96]
* [95]...


### Merging Chains  eval_flagpr_bb8_in/7 into  External patterns of execution 
* [[96]] --> 1 
* [[95]] --> 2 


### Specialization of cost equations loop_cont_eval_flagpr_bb2_in/8 
* CE 10 is refined into CE [139,140] 
* CE 9 is refined into CE [141] 


#### Refined cost equations loop_cont_eval_flagpr_bb2_in/8 
* CE 139: loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_bb8_in(A,B,C,D,E,F,G):1
     [H=3] 
* CE 140: loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_bb8_in(A,B,C,D,E,F,G):2
     [H=3] 
* CE 141: loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G) = 0
     [H=2] 

### Cost equations --> "Loop" of loop_cont_eval_flagpr_bb2_in/8 
* CEs [139] --> Loop 97 
* CEs [141] --> Loop 98 
* CEs [140] --> Loop 99 

#### Loops of loop_cont_eval_flagpr_bb2_in/8 
* Loop 97: loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G) [H=3] 
* Loop 98: loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G) [H=2] 
* Loop 99: loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G) [H=3] 

### Ranking functions of CR loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G) 

#### Partial ranking functions of CR loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G) 


### Resulting Chains:loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G) 
* [99]...
* [98]
* [97]


### Merging Chains  loop_cont_eval_flagpr_bb2_in/8 into  External patterns of execution 
* [[98]] --> 1 
* [[97]] --> 2 
* [[99]] --> 3 


### Specialization of cost equations loop_cont_eval_flagpr_bb5_in/8 
* CE 15 is refined into CE [142,143] 
* CE 14 is refined into CE [144] 


#### Refined cost equations loop_cont_eval_flagpr_bb5_in/8 
* CE 142: loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_bb8_in(A,B,C,D,E,F,G):1
     [H=3] 
* CE 143: loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G) = 0+ eval_flagpr_bb8_in(A,B,C,D,E,F,G):2
     [H=3] 
* CE 144: loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G) = 0
     [H=2] 

### Cost equations --> "Loop" of loop_cont_eval_flagpr_bb5_in/8 
* CEs [142] --> Loop 100 
* CEs [144] --> Loop 101 
* CEs [143] --> Loop 102 

#### Loops of loop_cont_eval_flagpr_bb5_in/8 
* Loop 100: loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G) [H=3] 
* Loop 101: loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G) [H=2] 
* Loop 102: loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G) [H=3] 

### Ranking functions of CR loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G) 

#### Partial ranking functions of CR loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G) 


### Resulting Chains:loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G) 
* [102]...
* [101]
* [100]


### Merging Chains  loop_cont_eval_flagpr_bb5_in/8 into  External patterns of execution 
* [[101]] --> 1 
* [[100]] --> 2 
* [[102]] --> 3 


### Specialization of cost equations eval_flagpr_1/7 
* CE 3 is refined into CE [145,146,147,148] 
* CE 4 is refined into CE [149,150,151,152] 
* CE 5 is refined into CE [153,154] 


#### Refined cost equations eval_flagpr_1/7 
* CE 145: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 1+ eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,C,D,E,F,G,H,I):1+ loop_cont_eval_flagpr_bb2_in(J,D,E,F,G,H,I,B):1
     [J=2,C=2] 
* CE 146: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 1+ eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1):2+ loop_cont_eval_flagpr_bb2_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B):2
     [D=3,C=3] 
* CE 147: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 1+ eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1):2+ loop_cont_eval_flagpr_bb2_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B):3
     [D=3,C=3] 
* CE 148: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 1+ eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,C,D,E,F,G,H,I):3
     [] 
* CE 149: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 1+ eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,C,D,E,F,G,H,I):1+ loop_cont_eval_flagpr_bb5_in(J,D,E,F,G,H,I,B):1
     [J=2,C=2] 
* CE 150: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 1+ eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1):2+ loop_cont_eval_flagpr_bb5_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B):2
     [D=3,C=3] 
* CE 151: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 1+ eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,C,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1):2+ loop_cont_eval_flagpr_bb5_in(D,V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B):3
     [D=3,C=3] 
* CE 152: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 1+ eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,C,D,E,F,G,H,I):3
     [] 
* CE 153: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 0+ eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B):1
     [] 
* CE 154: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) = 0+ eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B):2
     [] 

### Cost equations --> "Loop" of eval_flagpr_1/7 
* CEs [147,148,151,152,154] --> Loop 103 
* CEs [145,146,149,150,153] --> Loop 104 

#### Loops of eval_flagpr_1/7 
* Loop 103: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) [] 
* Loop 104: eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) [] 

### Ranking functions of CR eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) 

#### Partial ranking functions of CR eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) 


### Resulting Chains:eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B) 
* [104]
* [103]...


### Merging Chains  eval_flagpr_1/7 into  External patterns of execution 
* [[104]] --> 1 
* [[103]] --> 2 


### Specialization of cost equations eval_flagpr_start/6 
* CE 2 is refined into CE [155,156] 


#### Refined cost equations eval_flagpr_start/6 
* CE 155: eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B) = 0+ eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,C,B):1
     [] 
* CE 156: eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B) = 0+ eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,C,B):2
     [] 

### Cost equations --> "Loop" of eval_flagpr_start/6 
* CEs [156] --> Loop 105 
* CEs [155] --> Loop 106 

#### Loops of eval_flagpr_start/6 
* Loop 105: eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B) [] 
* Loop 106: eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B) [] 

### Ranking functions of CR eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B) 

#### Partial ranking functions of CR eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B) 


### Resulting Chains:eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B) 
* [106]
* [105]...


### Merging Chains  eval_flagpr_start/6 into  External patterns of execution 
* [[106]] --> 1 
* [[105]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [39] 

 * loop 39:eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb2_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1
#### Cost of phase [39]:eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb2_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(39)+0
#### Cost of phase [39]:eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb2_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(39)+0
#### Cost of phase [39]:eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb2_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(39)+0
#### Cost of chains of eval_flagpr_bb2_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H):
* Chain [[39]]...: 1*it(39)+0
  with precondition: [] 

* Chain [[39],41]: 1*it(39)+0
  with precondition: [B=2] 

* Chain [[39],40]: 1*it(39)+0
  with precondition: [B=3,V_preflag=C,V_prestrip=D,V_preadd=E,V_sufflag=F,V_sufadd=G,V_2=H] 

* Chain [41]: 0
  with precondition: [B=2] 

* Chain [40]: 0
  with precondition: [B=3,C=V_preflag,D=V_prestrip,E=V_preadd,F=V_sufflag,G=V_sufadd,H=V_2] 


#### Cost of loops [42] 

 * loop 42:eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb5_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1
#### Cost of phase [42]:eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb5_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(42)+0
#### Cost of phase [42]:eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb5_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(42)+0
#### Cost of phase [42]:eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb5_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(42)+0
#### Cost of chains of eval_flagpr_bb5_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H):
* Chain [[42]]...: 1*it(42)+0
  with precondition: [] 

* Chain [[42],44]: 1*it(42)+0
  with precondition: [B=2] 

* Chain [[42],43]: 1*it(42)+0
  with precondition: [B=3,V_preflag=C,V_prestrip=D,V_preadd=E,V_sufflag=F,V_sufadd=G,V_2=H] 

* Chain [44]: 0
  with precondition: [B=2] 

* Chain [43]: 0
  with precondition: [B=3,C=V_preflag,D=V_prestrip,E=V_preadd,F=V_sufflag,G=V_sufadd,H=V_2] 


#### Cost of loops [45] 

 * loop 45:eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb10_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1
#### Cost of phase [45]:eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb10_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(45)+0
#### Cost of phase [45]:eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb10_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(45)+0
#### Cost of phase [45]:eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb10_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(45)+0
#### Cost of chains of eval_flagpr_bb10_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H):
* Chain [[45]]...: 1*it(45)+0
  with precondition: [] 

* Chain [[45],47]: 1*it(45)+0
  with precondition: [B=2] 

* Chain [[45],46]: 1*it(45)+0
  with precondition: [B=8,V_preflag=C,V_prestrip=D,V_preadd=E,V_sufflag=F,V_sufadd=G,V_2=H] 

* Chain [47]: 0
  with precondition: [B=2] 

* Chain [46]: 0
  with precondition: [B=8,C=V_preflag,D=V_prestrip,E=V_preadd,F=V_sufflag,G=V_sufadd,H=V_2] 


#### Cost of loops [48] 

 * loop 48:eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb14_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1
#### Cost of phase [48]:eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb14_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(48)+0
#### Cost of phase [48]:eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb14_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(48)+0
#### Cost of phase [48]:eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H) -> [eval_flagpr_bb14_in(V_preflag',V_prestrip',V_preadd',V_sufflag',V_sufadd',V_2',B',C',D',E',F',G',H')] 
1*it(48)+0
#### Cost of chains of eval_flagpr_bb14_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B,C,D,E,F,G,H):
* Chain [[48]]...: 1*it(48)+0
  with precondition: [] 

* Chain [[48],50]: 1*it(48)+0
  with precondition: [B=2] 

* Chain [[48],49]: 1*it(48)+0
  with precondition: [B=8,V_preflag=C,V_prestrip=D,V_preadd=E,V_sufflag=F,V_sufadd=G,V_2=H] 

* Chain [50]: 0
  with precondition: [B=2] 

* Chain [49]: 0
  with precondition: [B=8,C=V_preflag,D=V_prestrip,E=V_preadd,F=V_sufflag,G=V_sufadd,H=V_2] 


#### Cost of loops [51] 

 * loop 51:eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__01,B,C,D,E,F,G) -> [eval_flagpr_bb18_in(V_preflag',V_preadd',V_sufflag',V_sufadd',V_2',V__01',B',C',D',E',F',G')] 
1
#### Cost of phase [51]:eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__01,B,C,D,E,F,G) -> [eval_flagpr_bb18_in(V_preflag',V_preadd',V_sufflag',V_sufadd',V_2',V__01',B',C',D',E',F',G')] 
1*it(51)+0
  Such that:it(51) =< V__01
it(51) =< V__01-V__01'

#### Cost of chains of eval_flagpr_bb18_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__01,B,C,D,E,F,G):
* Chain [[51],52]: 1*it(51)+0
  Such that:it(51) =< V__01

  with precondition: [B=7,V_preflag=C,V_preadd=D,V_sufflag=E,V_sufadd=F,V_2=G,V__01>=1] 

* Chain [52]: 0
  with precondition: [B=7,C=V_preflag,D=V_preadd,E=V_sufflag,F=V_sufadd,G=V_2,0>=V__01] 


#### Cost of loops [53] 

 * loop 53:eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__12,B,C,D,E,F,G) -> [eval_flagpr_bb20_in(V_preflag',V_preadd',V_sufflag',V_sufadd',V_2',V__12',B',C',D',E',F',G')] 
1
#### Cost of phase [53]:eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__12,B,C,D,E,F,G) -> [eval_flagpr_bb20_in(V_preflag',V_preadd',V_sufflag',V_sufadd',V_2',V__12',B',C',D',E',F',G')] 
1*it(53)+0
  Such that:it(53) =< V__12
it(53) =< V__12-V__12'

#### Cost of chains of eval_flagpr_bb20_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,V__12,B,C,D,E,F,G):
* Chain [[53],54]: 1*it(53)+0
  Such that:it(53) =< V__12

  with precondition: [B=7,V_preflag=C,V_preadd=D,V_sufflag=E,V_sufadd=F,V_2=G,V__12>=1] 

* Chain [54]: 0
  with precondition: [B=7,C=V_preflag,D=V_preadd,E=V_sufflag,F=V_sufadd,G=V_2,0>=V__12] 


#### Cost of loops [55] 

 * loop 55:eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23,B,C,D) -> [eval_flagpr_bb23_in(V_preflag',V_sufflag',V__23',B',C',D')] 
1
#### Cost of phase [55]:eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23,B,C,D) -> [eval_flagpr_bb23_in(V_preflag',V_sufflag',V__23',B',C',D')] 
1*it(55)+0
  Such that:it(55) =< V__23
it(55) =< V__23-V__23'

#### Cost of phase [55]:eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23,B,C,D) -> [eval_flagpr_bb23_in(V_preflag',V_sufflag',V__23',B',C',D')] 
1*it(55)+0
  Such that:it(55) =< V__23
it(55) =< V__23-V__23'

#### Cost of chains of eval_flagpr_bb23_in(V_preflag,V_sufflag,V__23,B,C,D):
* Chain [[55],57]: 1*it(55)+0
  Such that:it(55) =< V__23

  with precondition: [B=5,V_preflag=C,V_sufflag=D,V__23>=1] 

* Chain [[55],56]: 1*it(55)+0
  Such that:it(55) =< V__23

  with precondition: [B=6,V_preflag=C,V_sufflag=D,V__23>=1] 

* Chain [57]: 0
  with precondition: [B=5,C=V_preflag,D=V_sufflag,0>=V__23] 

* Chain [56]: 0
  with precondition: [B=6,C=V_preflag,D=V_sufflag,0>=V__23] 


#### Cost of chains of eval_flagpr_bb31_in(V_sufflag,B):
* Chain [58]: 0
  with precondition: [] 


#### Cost of chains of eval_flagpr_93(V_preflag,V_sufflag,B):
* Chain [59]: 0
  with precondition: [] 


#### Cost of loops [60] 

 * loop 60:eval_flagpr_bb27_in(V_preflag,V_sufflag,B,C,D) -> [eval_flagpr_bb27_in(V_preflag',V_sufflag',B',C',D')] 
1
#### Cost of phase [60]:eval_flagpr_bb27_in(V_preflag,V_sufflag,B,C,D) -> [eval_flagpr_bb27_in(V_preflag',V_sufflag',B',C',D')] 
1*it(60)+0
#### Cost of phase [60]:eval_flagpr_bb27_in(V_preflag,V_sufflag,B,C,D) -> [eval_flagpr_bb27_in(V_preflag',V_sufflag',B',C',D')] 
1*it(60)+0
#### Cost of chains of eval_flagpr_bb27_in(V_preflag,V_sufflag,B,C,D):
* Chain [[60]]...: 1*it(60)+0
  with precondition: [B=4] 

* Chain [[60],61]: 1*it(60)+0
  with precondition: [B=4,V_preflag=C,V_sufflag=D] 

* Chain [61]: 0
  with precondition: [B=4,C=V_preflag,D=V_sufflag] 


#### Cost of chains of loop_cont_eval_flagpr_bb23_in(E,A,B,C):
* Chain [64]...: 1*s(10)+1
  with precondition: [E=6] 

* Chain [63]: 0
  with precondition: [E=5] 

* Chain [62]: 1*s(11)+1
  with precondition: [E=6] 


#### Cost of chains of eval_flagpr_bb22_in(V_preflag,V_preadd,V_sufflag,V_sufadd,V_2,B):
* Chain [68]: 2*s(12)+1*s(14)+2
  Such that:aux(10) =< -V_preadd-V_sufadd+V_2
s(12) =< aux(10)

  with precondition: [V_2>=V_preadd+V_sufadd+1] 

* Chain [67]: 1*aux(11)+0
  with precondition: [V_preadd+V_sufadd>=V_2] 

* Chain [66]...: 1*s(16)+1*s(17)+2
  Such that:s(16) =< -V_preadd-V_sufadd+V_2

  with precondition: [V_2>=V_preadd+V_sufadd+1] 

* Chain [65]...: 1*s(18)+2
  with precondition: [V_preadd+V_sufadd>=V_2] 


#### Cost of chains of eval_flagpr_43(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):
* Chain [76]: 4*s(20)+2*s(21)+3
  Such that:aux(12) =< -V_preadd-V_sufadd+V_2
s(20) =< aux(12)

  with precondition: [0>=V_prestrip,V_2>=V_preadd+V_sufadd+1] 

* Chain [75]: 1*aux(13)+0
  with precondition: [0>=V_prestrip,V_preadd+V_sufadd>=V_2] 

* Chain [74]: 2*s(27)+4*s(29)+2*s(30)+3
  Such that:aux(14) =< V_prestrip
aux(15) =< -V_preadd-V_sufadd+V_2
s(27) =< aux(14)
s(29) =< aux(15)

  with precondition: [V_prestrip>=1,V_2>=V_preadd+V_sufadd+1] 

* Chain [73]: 2*s(35)+2*s(36)+1
  Such that:aux(16) =< V_prestrip
s(35) =< aux(16)

  with precondition: [V_prestrip>=1,V_preadd+V_sufadd>=V_2] 

* Chain [72]...: 2*s(39)+2*s(40)+3
  Such that:aux(17) =< -V_preadd-V_sufadd+V_2
s(39) =< aux(17)

  with precondition: [0>=V_prestrip,V_2>=V_preadd+V_sufadd+1] 

* Chain [71]...: 1*aux(18)+0
  with precondition: [0>=V_prestrip,V_preadd+V_sufadd>=V_2] 

* Chain [70]...: 2*s(45)+2*s(46)+2*s(47)+3
  Such that:aux(19) =< V_prestrip
aux(20) =< -V_preadd-V_sufadd+V_2
s(45) =< aux(19)
s(46) =< aux(20)

  with precondition: [V_prestrip>=1,V_2>=V_preadd+V_sufadd+1] 

* Chain [69]...: 2*s(51)+2*s(52)+3
  Such that:aux(21) =< V_prestrip
s(51) =< aux(21)

  with precondition: [V_prestrip>=1,V_preadd+V_sufadd>=V_2] 


#### Cost of chains of loop_cont_eval_flagpr_bb10_in(H,A,B,C,D,E,F,G):
* Chain [85]...: 2*s(56)+2*s(57)+3
  Such that:s(55) =< -C-E+F
s(56) =< s(55)

  with precondition: [H=8,0>=B,F>=C+E+1] 

* Chain [84]...: 1*s(58)+0
  with precondition: [H=8,0>=B,C+E>=F] 

* Chain [83]...: 2*s(61)+2*s(62)+2*s(63)+3
  Such that:s(59) =< B
s(60) =< -C-E+F
s(61) =< s(59)
s(62) =< s(60)

  with precondition: [H=8,B>=1,F>=C+E+1] 

* Chain [82]...: 2*s(65)+2*s(66)+3
  Such that:s(64) =< B
s(65) =< s(64)

  with precondition: [H=8,B>=1,C+E>=F] 

* Chain [81]: 0
  with precondition: [H=2] 

* Chain [80]: 4*s(68)+2*s(69)+3
  Such that:s(67) =< -C-E+F
s(68) =< s(67)

  with precondition: [H=8,0>=B,F>=C+E+1] 

* Chain [79]: 1*s(70)+0
  with precondition: [H=8,0>=B,C+E>=F] 

* Chain [78]: 2*s(73)+4*s(74)+2*s(75)+3
  Such that:s(71) =< B
s(72) =< -C-E+F
s(73) =< s(71)
s(74) =< s(72)

  with precondition: [H=8,B>=1,F>=C+E+1] 

* Chain [77]: 2*s(77)+2*s(78)+1
  Such that:s(76) =< B
s(77) =< s(76)

  with precondition: [H=8,B>=1,C+E>=F] 


#### Cost of chains of loop_cont_eval_flagpr_bb14_in(H,A,B,C,D,E,F,G):
* Chain [94]...: 2*s(80)+2*s(81)+3
  Such that:s(79) =< -C-E+F
s(80) =< s(79)

  with precondition: [H=8,0>=B,F>=C+E+1] 

* Chain [93]...: 1*s(82)+0
  with precondition: [H=8,0>=B,C+E>=F] 

* Chain [92]...: 2*s(85)+2*s(86)+2*s(87)+3
  Such that:s(83) =< B
s(84) =< -C-E+F
s(85) =< s(83)
s(86) =< s(84)

  with precondition: [H=8,B>=1,F>=C+E+1] 

* Chain [91]...: 2*s(89)+2*s(90)+3
  Such that:s(88) =< B
s(89) =< s(88)

  with precondition: [H=8,B>=1,C+E>=F] 

* Chain [90]: 0
  with precondition: [H=2] 

* Chain [89]: 4*s(92)+2*s(93)+3
  Such that:s(91) =< -C-E+F
s(92) =< s(91)

  with precondition: [H=8,0>=B,F>=C+E+1] 

* Chain [88]: 1*s(94)+0
  with precondition: [H=8,0>=B,C+E>=F] 

* Chain [87]: 2*s(97)+4*s(98)+2*s(99)+3
  Such that:s(95) =< B
s(96) =< -C-E+F
s(97) =< s(95)
s(98) =< s(96)

  with precondition: [H=8,B>=1,F>=C+E+1] 

* Chain [86]: 2*s(101)+2*s(102)+1
  Such that:s(100) =< B
s(101) =< s(100)

  with precondition: [H=8,B>=1,C+E>=F] 


#### Cost of chains of eval_flagpr_bb8_in(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_2,B):
* Chain [96]: 31*s(103)+24*s(106)+12*s(113)+4
  Such that:aux(22) =< V_prestrip
aux(23) =< -V_preadd-V_sufadd+V_2
s(113) =< aux(22)
s(106) =< aux(23)

  with precondition: [] 

* Chain [95]...: 31*s(149)+12*s(151)+12*s(158)+4
  Such that:aux(24) =< V_prestrip
aux(25) =< -V_preadd-V_sufadd+V_2
s(158) =< aux(24)
s(151) =< aux(25)

  with precondition: [] 


#### Cost of chains of loop_cont_eval_flagpr_bb2_in(H,A,B,C,D,E,F,G):
* Chain [99]...: 12*s(197)+12*s(198)+31*s(199)+4
  Such that:s(195) =< B
s(196) =< -C-E+F
s(197) =< s(195)
s(198) =< s(196)

  with precondition: [H=3] 

* Chain [98]: 0
  with precondition: [H=2] 

* Chain [97]: 12*s(202)+24*s(203)+31*s(204)+4
  Such that:s(200) =< B
s(201) =< -C-E+F
s(202) =< s(200)
s(203) =< s(201)

  with precondition: [H=3] 


#### Cost of chains of loop_cont_eval_flagpr_bb5_in(H,A,B,C,D,E,F,G):
* Chain [102]...: 12*s(207)+12*s(208)+31*s(209)+4
  Such that:s(205) =< B
s(206) =< -C-E+F
s(207) =< s(205)
s(208) =< s(206)

  with precondition: [H=3] 

* Chain [101]: 0
  with precondition: [H=2] 

* Chain [100]: 12*s(212)+24*s(213)+31*s(214)+4
  Such that:s(210) =< B
s(211) =< -C-E+F
s(212) =< s(210)
s(213) =< s(211)

  with precondition: [H=3] 


#### Cost of chains of eval_flagpr_1(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,V_1,B):
* Chain [104]: 97*s(215)+36*s(219)+72*s(220)+5
  Such that:aux(26) =< V_prestrip
aux(27) =< -V_preadd-V_sufadd+V_1
s(219) =< aux(26)
s(220) =< aux(27)

  with precondition: [] 

* Chain [103]...: 97*s(234)+36*s(237)+36*s(238)+5
  Such that:aux(28) =< V_prestrip
aux(29) =< -V_preadd-V_sufadd+V_1
s(237) =< aux(28)
s(238) =< aux(29)

  with precondition: [] 


#### Cost of chains of eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B):
* Chain [106]: 36*s(255)+72*s(256)+97*s(257)+5
  Such that:s(253) =< V_prestrip
s(255) =< s(253)

  with precondition: [] 

* Chain [105]...: 36*s(260)+36*s(261)+97*s(262)+5
  Such that:s(258) =< V_prestrip
s(260) =< s(258)

  with precondition: [] 


Closed-form bounds of eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B): 
-------------------------------------
* Chain [106] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [105]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_flagpr_start(V_preflag,V_prestrip,V_preadd,V_sufflag,V_sufadd,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 87 ms.
* Invariants computed in 101 ms.
   - Backward Invariants 56 ms.
   - Transitive Invariants 20 ms.
* Refinement performed in 366 ms.
* Termination proved in 17 ms.
* Upper bounds computed in 251 ms.
   - Equation cost structures 172 ms.
   - Phase cost structures 28 ms.
   - Chain cost structures 49 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 932 ms.

