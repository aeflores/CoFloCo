Warning: Ignored call to eval_BZ2_indexIntoF_stop/1 in equation loop_cont_eval_BZ2_indexIntoF_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_BZ2_indexIntoF_bb1_in/3]
1. non_recursive  : [loop_cont_eval_BZ2_indexIntoF_bb1_in/2]
2. non_recursive  : [eval_BZ2_indexIntoF_bb0_in/1]
3. non_recursive  : [eval_BZ2_indexIntoF_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_BZ2_indexIntoF_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_BZ2_indexIntoF_bb0_in/1
3. SCC is partially evaluated into eval_BZ2_indexIntoF_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_BZ2_indexIntoF_bb1_in/3 
* CE 7 is refined into CE [10] 
* CE 8 is refined into CE [11] 
* CE 9 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 4 is refined into CE [14] 
* CE 6 is refined into CE [15] 


#### Refined cost equations eval_BZ2_indexIntoF_bb1_in/3 
* CE 10: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) = 1+ eval_BZ2_indexIntoF_bb1_in(C,C,D)
     [D=2,B=2] 
* CE 11: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) = 1+ eval_BZ2_indexIntoF_bb1_in(C,V_nb_0,D)
     [V_nb_0>=C,D=2,B=2] 
* CE 12: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) = 1+ eval_BZ2_indexIntoF_bb1_in(C,V_nb_0,D)
     [C>=V_nb_0+2,D=2,B=2] 
* CE 13: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) = 1+ eval_BZ2_indexIntoF_bb1_in(V_na_0,C,D)
     [V_na_0>=C+2,D=2,B=2] 
* CE 14: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) = 1+ eval_BZ2_indexIntoF_bb1_in(V_na_0,C,D)
     [C>=V_na_0,D=2,B=2] 
* CE 15: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_BZ2_indexIntoF_bb1_in/3 
* CEs [15] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_BZ2_indexIntoF_bb1_in/3 
* Loop 9: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) [B=2] 
* Loop 10: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B)->  eval_BZ2_indexIntoF_bb1_in(A',A',B')
                  [B'=2,B=2] 
* Loop 11: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B)->  eval_BZ2_indexIntoF_bb1_in(V_na_0',V_nb_0,B')
                  [V_nb_0>=V_na_0',B'=2,B=2] 
* Loop 12: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B)->  eval_BZ2_indexIntoF_bb1_in(V_na_0',V_nb_0,B')
                  [V_na_0'>=V_nb_0+2,B'=2,B=2] 
* Loop 13: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B)->  eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0',B')
                  [V_na_0>=V_nb_0'+2,B'=2,B=2] 
* Loop 14: eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B)->  eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0',B')
                  [V_nb_0'>=V_na_0,B'=2,B=2] 

### Ranking functions of CR eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) 

#### Partial ranking functions of CR eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) 


### Resulting Chains:eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) 
* [[10,11,12,13,14]]...
* [[10,11,12,13,14],9]
* [9]


### Merging Chains  eval_BZ2_indexIntoF_bb1_in/3 into  External patterns of execution 
* [[9],[9,[10,11,12,13,14]]] --> 1 
* [[[10,11,12,13,14]]] --> 2 


### Specialization of cost equations eval_BZ2_indexIntoF_bb0_in/1 
* CE 3 is refined into CE [16,17] 


#### Refined cost equations eval_BZ2_indexIntoF_bb0_in/1 
* CE 16: eval_BZ2_indexIntoF_bb0_in(B) = 1+ eval_BZ2_indexIntoF_bb1_in(C,D,E):1
     [E=2,D=0,C=256] 
* CE 17: eval_BZ2_indexIntoF_bb0_in(B) = 1+ eval_BZ2_indexIntoF_bb1_in(C,D,E):2
     [E=2,D=0,C=256] 

### Cost equations --> "Loop" of eval_BZ2_indexIntoF_bb0_in/1 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of eval_BZ2_indexIntoF_bb0_in/1 
* Loop 15: eval_BZ2_indexIntoF_bb0_in(B) [] 
* Loop 16: eval_BZ2_indexIntoF_bb0_in(B) [] 

### Ranking functions of CR eval_BZ2_indexIntoF_bb0_in(B) 

#### Partial ranking functions of CR eval_BZ2_indexIntoF_bb0_in(B) 


### Resulting Chains:eval_BZ2_indexIntoF_bb0_in(B) 
* [16]
* [15]...


### Merging Chains  eval_BZ2_indexIntoF_bb0_in/1 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_BZ2_indexIntoF_start/2 
* CE 2 is refined into CE [18,19] 


#### Refined cost equations eval_BZ2_indexIntoF_start/2 
* CE 18: eval_BZ2_indexIntoF_start(V_indx,B) = 0+ eval_BZ2_indexIntoF_bb0_in(B):1
     [] 
* CE 19: eval_BZ2_indexIntoF_start(V_indx,B) = 0+ eval_BZ2_indexIntoF_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_BZ2_indexIntoF_start/2 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 

#### Loops of eval_BZ2_indexIntoF_start/2 
* Loop 17: eval_BZ2_indexIntoF_start(V_indx,B) [] 
* Loop 18: eval_BZ2_indexIntoF_start(V_indx,B) [] 

### Ranking functions of CR eval_BZ2_indexIntoF_start(V_indx,B) 

#### Partial ranking functions of CR eval_BZ2_indexIntoF_start(V_indx,B) 


### Resulting Chains:eval_BZ2_indexIntoF_start(V_indx,B) 
* [18]
* [17]...


### Merging Chains  eval_BZ2_indexIntoF_start/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10,11,12,13,14] 

 * loop 10:eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) -> [eval_BZ2_indexIntoF_bb1_in(V_na_0',V_nb_0',B')] 
1
 * loop 11:eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) -> [eval_BZ2_indexIntoF_bb1_in(V_na_0',V_nb_0',B')] 
1
 * loop 12:eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) -> [eval_BZ2_indexIntoF_bb1_in(V_na_0',V_nb_0',B')] 
1
 * loop 13:eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) -> [eval_BZ2_indexIntoF_bb1_in(V_na_0',V_nb_0',B')] 
1
 * loop 14:eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) -> [eval_BZ2_indexIntoF_bb1_in(V_na_0',V_nb_0',B')] 
1
#### Cost of phase [10,11,12,13,14]:eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) -> [eval_BZ2_indexIntoF_bb1_in(V_na_0',V_nb_0',B')] 
5*it(10)+0
#### Cost of phase [10,11,12,13,14]:eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B) -> [eval_BZ2_indexIntoF_bb1_in(V_na_0',V_nb_0',B')] 
5*it(10)+0
#### Cost of chains of eval_BZ2_indexIntoF_bb1_in(V_na_0,V_nb_0,B):
* Chain [[10,11,12,13,14]]...: 5*it(10)+0
  with precondition: [B=2] 

* Chain [[10,11,12,13,14],9]: 5*it(10)+0
  with precondition: [B=2] 

* Chain [9]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_BZ2_indexIntoF_bb0_in(B):
* Chain [16]: 1*s(2)+1
  with precondition: [] 

* Chain [15]...: 5*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_BZ2_indexIntoF_start(V_indx,B):
* Chain [18]: 1*s(4)+1
  with precondition: [] 

* Chain [17]...: 5*s(5)+1
  with precondition: [] 


Closed-form bounds of eval_BZ2_indexIntoF_start(V_indx,B): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_BZ2_indexIntoF_start(V_indx,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 10 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 18 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 8 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 58 ms.

