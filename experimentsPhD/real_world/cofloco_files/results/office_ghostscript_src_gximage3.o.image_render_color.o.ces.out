WARNING: Excluded non-linear constraints:[A*C>=12+1]
WARNING: Excluded non-linear constraints:[A*C>=12+1]
WARNING: Excluded non-linear constraints:[A*C=<12]
WARNING: Excluded non-linear constraints:[A*C=<12]
Warning: Ignored call to eval_image_render_color_stop/1 in equation eval_image_render_color_bb90_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_image_render_color_171/1,eval_image_render_color_172/1,eval_image_render_color_228/1,eval_image_render_color_229/1,eval_image_render_color_297/1,eval_image_render_color_298/1,eval_image_render_color_341/1,eval_image_render_color_342/1,eval_image_render_color_391/1,eval_image_render_color_392/1,eval_image_render_color_413/1,eval_image_render_color_414/1,eval_image_render_color_423/1,eval_image_render_color_424/1,eval_image_render_color_427/1,eval_image_render_color_428/1,eval_image_render_color_NewDefault15_in/1,eval_image_render_color_NewDefault26_in/1,eval_image_render_color_NewDefault37_in/1,eval_image_render_color_NewDefault48_in/1,eval_image_render_color_NewDefault4_in/1,eval_image_render_color_bb13_in/1,eval_image_render_color_bb16_in/1,eval_image_render_color_bb22_in/1,eval_image_render_color_bb26_in/1,eval_image_render_color_bb27_in/1,eval_image_render_color_bb31_in/1,eval_image_render_color_bb32_in/1,eval_image_render_color_bb43_in/1,eval_image_render_color_bb47_in/1,eval_image_render_color_bb48_in/1,eval_image_render_color_bb52_in/1,eval_image_render_color_bb53_in/1,eval_image_render_color_bb55_in/1,eval_image_render_color_bb59_in/1,eval_image_render_color_bb63_in/1,eval_image_render_color_bb67_in/1,eval_image_render_color_bb68_in/1,eval_image_render_color_bb69_in/1,eval_image_render_color_bb77_in/1,eval_image_render_color_bb80_in/1,eval_image_render_color_bb83_in/1,eval_image_render_color_bb85_in/1,eval_image_render_color_bb87_in/1,eval_image_render_color_bb88_in/1,eval_image_render_color_bb9_in/1]
1. non_recursive  : [eval_image_render_color_bb90_in/1]
2. non_recursive  : [eval_image_render_color_438/1]
3. non_recursive  : [eval_image_render_color_437/1]
4. non_recursive  : [loop_cont_eval_image_render_color_bb9_in/2]
5. non_recursive  : [eval_image_render_color_bb8_in/1]
6. non_recursive  : [eval_image_render_color_bb6_in/1]
7. non_recursive  : [eval_image_render_color_NewDefault_in/1]
8. non_recursive  : [eval_image_render_color_36/1]
9. non_recursive  : [eval_image_render_color_35/1]
10. non_recursive  : [eval_image_render_color_bb2_in/2]
11. non_recursive  : [eval_image_render_color_8/1]
12. non_recursive  : [eval_image_render_color_7/1]
13. non_recursive  : [eval_image_render_color_bb0_in/1]
14. non_recursive  : [eval_image_render_color_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_image_render_color_bb9_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_image_render_color_bb9_in/2
5. SCC is partially evaluated into eval_image_render_color_bb8_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_image_render_color_36/1
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_image_render_color_bb2_in/2
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_image_render_color_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_image_render_color_bb9_in/1 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations eval_image_render_color_bb9_in/1 
* CE 12: eval_image_render_color_bb9_in(B) = 0
     [B=3] 
* CE 13: eval_image_render_color_bb9_in(B) = 0
     [B=2] 
* CE 14: eval_image_render_color_bb9_in(B) = 1+ eval_image_render_color_bb9_in(B)
     [] 

### Cost equations --> "Loop" of eval_image_render_color_bb9_in/1 
* CEs [14] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_image_render_color_bb9_in/1 
* Loop 10: eval_image_render_color_bb9_in(B)->  eval_image_render_color_bb9_in(B)
                  [] 
* Loop 11: eval_image_render_color_bb9_in(B) [B=3] 
* Loop 12: eval_image_render_color_bb9_in(B) [B=2] 

### Ranking functions of CR eval_image_render_color_bb9_in(B) 

#### Partial ranking functions of CR eval_image_render_color_bb9_in(B) 


### Resulting Chains:eval_image_render_color_bb9_in(B) 
* [[10]]...
* [[10],12]
* [[10],11]
* [12]
* [11]


### Merging Chains  eval_image_render_color_bb9_in/1 into  External patterns of execution 
* [[12],[12,[10]]] --> 1 
* [[11],[11,[10]]] --> 2 
* [[[10]]] --> 3 


### Specialization of cost equations loop_cont_eval_image_render_color_bb9_in/2 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


#### Refined cost equations loop_cont_eval_image_render_color_bb9_in/2 
* CE 15: loop_cont_eval_image_render_color_bb9_in(B,A) = 0
     [B=3] 
* CE 16: loop_cont_eval_image_render_color_bb9_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_image_render_color_bb9_in/2 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of loop_cont_eval_image_render_color_bb9_in/2 
* Loop 13: loop_cont_eval_image_render_color_bb9_in(B,A) [B=3] 
* Loop 14: loop_cont_eval_image_render_color_bb9_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_image_render_color_bb9_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_image_render_color_bb9_in(B,A) 


### Resulting Chains:loop_cont_eval_image_render_color_bb9_in(B,A) 
* [14]
* [13]


### Merging Chains  loop_cont_eval_image_render_color_bb9_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_image_render_color_bb8_in/1 
* CE 6 is refined into CE [17,18,19] 


#### Refined cost equations eval_image_render_color_bb8_in/1 
* CE 17: eval_image_render_color_bb8_in(B) = 1+ eval_image_render_color_bb9_in(C):1+ loop_cont_eval_image_render_color_bb9_in(D,B):1
     [D=2,C=2] 
* CE 18: eval_image_render_color_bb8_in(B) = 1+ eval_image_render_color_bb9_in(C):2+ loop_cont_eval_image_render_color_bb9_in(D,B):2
     [D=3,C=3] 
* CE 19: eval_image_render_color_bb8_in(B) = 1+ eval_image_render_color_bb9_in(C):3
     [] 

### Cost equations --> "Loop" of eval_image_render_color_bb8_in/1 
* CEs [19] --> Loop 15 
* CEs [17,18] --> Loop 16 

#### Loops of eval_image_render_color_bb8_in/1 
* Loop 15: eval_image_render_color_bb8_in(B) [] 
* Loop 16: eval_image_render_color_bb8_in(B) [] 

### Ranking functions of CR eval_image_render_color_bb8_in(B) 

#### Partial ranking functions of CR eval_image_render_color_bb8_in(B) 


### Resulting Chains:eval_image_render_color_bb8_in(B) 
* [16]
* [15]...


### Merging Chains  eval_image_render_color_bb8_in/1 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_image_render_color_36/1 
* CE 5 is refined into CE [20,21] 


#### Refined cost equations eval_image_render_color_36/1 
* CE 20: eval_image_render_color_36(B) = 0+ eval_image_render_color_bb8_in(B):1
     [] 
* CE 21: eval_image_render_color_36(B) = 0+ eval_image_render_color_bb8_in(B):2
     [] 

### Cost equations --> "Loop" of eval_image_render_color_36/1 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of eval_image_render_color_36/1 
* Loop 17: eval_image_render_color_36(B) [] 
* Loop 18: eval_image_render_color_36(B) [] 

### Ranking functions of CR eval_image_render_color_36(B) 

#### Partial ranking functions of CR eval_image_render_color_36(B) 


### Resulting Chains:eval_image_render_color_36(B) 
* [18]
* [17]...


### Merging Chains  eval_image_render_color_36/1 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_image_render_color_bb2_in/2 
* CE 3 is refined into CE [22] 
* CE 4 is refined into CE [23,24] 


#### Refined cost equations eval_image_render_color_bb2_in/2 
* CE 22: eval_image_render_color_bb2_in(V_29,B) = 0
     [] 
* CE 23: eval_image_render_color_bb2_in(V_29,B) = 0+ eval_image_render_color_36(B):1
     [] 
* CE 24: eval_image_render_color_bb2_in(V_29,B) = 0+ eval_image_render_color_36(B):2
     [] 

### Cost equations --> "Loop" of eval_image_render_color_bb2_in/2 
* CEs [24] --> Loop 19 
* CEs [22,23] --> Loop 20 

#### Loops of eval_image_render_color_bb2_in/2 
* Loop 19: eval_image_render_color_bb2_in(V_29,B) [] 
* Loop 20: eval_image_render_color_bb2_in(V_29,B) [] 

### Ranking functions of CR eval_image_render_color_bb2_in(V_29,B) 

#### Partial ranking functions of CR eval_image_render_color_bb2_in(V_29,B) 


### Resulting Chains:eval_image_render_color_bb2_in(V_29,B) 
* [20]
* [19]...


### Merging Chains  eval_image_render_color_bb2_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_image_render_color_start/4 
* CE 2 is refined into CE [25,26] 


#### Refined cost equations eval_image_render_color_start/4 
* CE 25: eval_image_render_color_start(V_data_x,V_w,V_h,B) = 0+ eval_image_render_color_bb2_in(C,B):1
     [] 
* CE 26: eval_image_render_color_start(V_data_x,V_w,V_h,B) = 0+ eval_image_render_color_bb2_in(C,B):2
     [] 

### Cost equations --> "Loop" of eval_image_render_color_start/4 
* CEs [26] --> Loop 21 
* CEs [25] --> Loop 22 

#### Loops of eval_image_render_color_start/4 
* Loop 21: eval_image_render_color_start(V_data_x,V_w,V_h,B) [] 
* Loop 22: eval_image_render_color_start(V_data_x,V_w,V_h,B) [] 

### Ranking functions of CR eval_image_render_color_start(V_data_x,V_w,V_h,B) 

#### Partial ranking functions of CR eval_image_render_color_start(V_data_x,V_w,V_h,B) 


### Resulting Chains:eval_image_render_color_start(V_data_x,V_w,V_h,B) 
* [22]
* [21]...


### Merging Chains  eval_image_render_color_start/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_image_render_color_bb9_in(B) -> [eval_image_render_color_bb9_in(B')] 
1
#### Cost of phase [10]:eval_image_render_color_bb9_in(B) -> [eval_image_render_color_bb9_in(B')] 
1*it(10)+0
#### Cost of phase [10]:eval_image_render_color_bb9_in(B) -> [eval_image_render_color_bb9_in(B')] 
1*it(10)+0
#### Cost of phase [10]:eval_image_render_color_bb9_in(B) -> [eval_image_render_color_bb9_in(B')] 
1*it(10)+0
#### Cost of chains of eval_image_render_color_bb9_in(B):
* Chain [[10]]...: 1*it(10)+0
  with precondition: [] 

* Chain [[10],12]: 1*it(10)+0
  with precondition: [B=2] 

* Chain [[10],11]: 1*it(10)+0
  with precondition: [B=3] 

* Chain [12]: 0
  with precondition: [B=2] 

* Chain [11]: 0
  with precondition: [B=3] 


#### Cost of chains of loop_cont_eval_image_render_color_bb9_in(B,A):
* Chain [14]: 0
  with precondition: [B=2] 

* Chain [13]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_image_render_color_bb8_in(B):
* Chain [16]: 1*aux(3)+0
  with precondition: [] 

* Chain [15]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_image_render_color_36(B):
* Chain [18]: 1*s(6)+0
  with precondition: [] 

* Chain [17]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_image_render_color_bb2_in(V_29,B):
* Chain [20]: 1*aux(4)+0
  with precondition: [] 

* Chain [19]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_image_render_color_start(V_data_x,V_w,V_h,B):
* Chain [22]: 1*s(10)+0
  with precondition: [] 

* Chain [21]...: 1*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_image_render_color_start(V_data_x,V_w,V_h,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_image_render_color_start(V_data_x,V_w,V_h,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 2 ms.
   - Backward Invariants 1 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 9 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 7 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 1 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 68 ms.

