Warning: Ignored call to eval_s_handle_write_exception_stop/1 in equation eval_s_handle_write_exception_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_s_handle_write_exception_bb15_in/1]
1. non_recursive  : [eval_s_handle_write_exception_48/1]
2. non_recursive  : [eval_s_handle_write_exception_47/2]
3. non_recursive  : [eval_s_handle_write_exception_NewDefault_in/1]
4. recursive  : [eval_s_handle_write_exception_bb2_in/4]
5. non_recursive  : [eval_s_handle_write_exception_43/1]
6. non_recursive  : [eval_s_handle_write_exception_42/1]
7. non_recursive  : [eval_s_handle_write_exception_41/1]
8. non_recursive  : [eval_s_handle_write_exception_bb13_in/1]
9. non_recursive  : [eval_s_handle_write_exception_33/1]
10. non_recursive  : [eval_s_handle_write_exception_32/1]
11. non_recursive  : [eval_s_handle_write_exception_bb12_in/1]
12. non_recursive  : [eval_s_handle_write_exception_23/1]
13. non_recursive  : [eval_s_handle_write_exception_22/2]
14. non_recursive  : [eval_s_handle_write_exception_bb10_in/2]
15. non_recursive  : [eval_s_handle_write_exception_19/2]
16. non_recursive  : [eval_s_handle_write_exception_18/3]
17. non_recursive  : [eval_s_handle_write_exception_bb7_in/1]
18. non_recursive  : [eval_s_handle_write_exception_3/1]
19. non_recursive  : [eval_s_handle_write_exception_2/1]
20. non_recursive  : [loop_cont_eval_s_handle_write_exception_bb2_in/4]
21. non_recursive  : [eval_s_handle_write_exception_bb0_in/2]
22. non_recursive  : [eval_s_handle_write_exception_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_s_handle_write_exception_bb2_in/4
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_s_handle_write_exception_bb10_in/2
15. SCC is partially evaluated into eval_s_handle_write_exception_19/2
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_s_handle_write_exception_3/1
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into loop_cont_eval_s_handle_write_exception_bb2_in/4
21. SCC is partially evaluated into eval_s_handle_write_exception_bb0_in/2
22. SCC is partially evaluated into eval_s_handle_write_exception_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_s_handle_write_exception_bb2_in/4 
* CE 9 is refined into CE [18] 
* CE 8 is refined into CE [19] 
* CE 7 is refined into CE [20] 
* CE 6 is refined into CE [21] 
* CE 5 is refined into CE [22] 


#### Refined cost equations eval_s_handle_write_exception_bb2_in/4 
* CE 18: eval_s_handle_write_exception_bb2_in(A,B,A,C) = 0
     [B=5] 
* CE 19: eval_s_handle_write_exception_bb2_in(A,B,A,C) = 0
     [A+6=C,B=4] 
* CE 20: eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) = 0
     [B=3] 
* CE 21: eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) = 0
     [B=2] 
* CE 22: eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) = 1+ eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D)
     [] 

### Cost equations --> "Loop" of eval_s_handle_write_exception_bb2_in/4 
* CEs [22] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

#### Loops of eval_s_handle_write_exception_bb2_in/4 
* Loop 15: eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D)->  eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D)
                  [] 
* Loop 16: eval_s_handle_write_exception_bb2_in(A,B,A,C) [B=5] 
* Loop 17: eval_s_handle_write_exception_bb2_in(A,B,A,C) [A+6=C,B=4] 
* Loop 18: eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) [B=3] 
* Loop 19: eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) [B=2] 

### Ranking functions of CR eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) 

#### Partial ranking functions of CR eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) 


### Resulting Chains:eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) 
* [[15]]...
* [[15],19]
* [[15],18]
* [[15],17]
* [[15],16]
* [19]
* [18]
* [17]
* [16]


### Merging Chains  eval_s_handle_write_exception_bb2_in/4 into  External patterns of execution 
* [[19],[19,[15]]] --> 1 
* [[18],[18,[15]]] --> 2 
* [[17],[17,[15]]] --> 3 
* [[16],[16,[15]]] --> 4 
* [[[15]]] --> 5 


### Specialization of cost equations eval_s_handle_write_exception_bb10_in/2 
* CE 17 is refined into CE [23] 


#### Refined cost equations eval_s_handle_write_exception_bb10_in/2 
* CE 23: eval_s_handle_write_exception_bb10_in(V_nstate,B) = 0
     [] 

### Cost equations --> "Loop" of eval_s_handle_write_exception_bb10_in/2 
* CEs [23] --> Loop 20 

#### Loops of eval_s_handle_write_exception_bb10_in/2 
* Loop 20: eval_s_handle_write_exception_bb10_in(V_nstate,B) [] 

### Ranking functions of CR eval_s_handle_write_exception_bb10_in(V_nstate,B) 

#### Partial ranking functions of CR eval_s_handle_write_exception_bb10_in(V_nstate,B) 


### Resulting Chains:eval_s_handle_write_exception_bb10_in(V_nstate,B) 
* [20]


### Merging Chains  eval_s_handle_write_exception_bb10_in/2 into  External patterns of execution 
* [[20]] --> 1 


### Specialization of cost equations eval_s_handle_write_exception_19/2 
* CE 15 is refined into CE [24] 
* CE 16 is refined into CE [25] 


#### Refined cost equations eval_s_handle_write_exception_19/2 
* CE 24: eval_s_handle_write_exception_19(V_nstate,B) = 0
     [] 
* CE 25: eval_s_handle_write_exception_19(V_nstate,B) = 0+ eval_s_handle_write_exception_bb10_in(V_nstate,B):1
     [] 

### Cost equations --> "Loop" of eval_s_handle_write_exception_19/2 
* CEs [24,25] --> Loop 21 

#### Loops of eval_s_handle_write_exception_19/2 
* Loop 21: eval_s_handle_write_exception_19(V_nstate,B) [] 

### Ranking functions of CR eval_s_handle_write_exception_19(V_nstate,B) 

#### Partial ranking functions of CR eval_s_handle_write_exception_19(V_nstate,B) 


### Resulting Chains:eval_s_handle_write_exception_19(V_nstate,B) 
* [21]


### Merging Chains  eval_s_handle_write_exception_19/2 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations eval_s_handle_write_exception_3/1 
* CE 14 is refined into CE [26] 


#### Refined cost equations eval_s_handle_write_exception_3/1 
* CE 26: eval_s_handle_write_exception_3(B) = 0
     [] 

### Cost equations --> "Loop" of eval_s_handle_write_exception_3/1 
* CEs [26] --> Loop 22 

#### Loops of eval_s_handle_write_exception_3/1 
* Loop 22: eval_s_handle_write_exception_3(B) [] 

### Ranking functions of CR eval_s_handle_write_exception_3(B) 

#### Partial ranking functions of CR eval_s_handle_write_exception_3(B) 


### Resulting Chains:eval_s_handle_write_exception_3(B) 
* [22]


### Merging Chains  eval_s_handle_write_exception_3/1 into  External patterns of execution 
* [[22]] --> 1 


### Specialization of cost equations loop_cont_eval_s_handle_write_exception_bb2_in/4 
* CE 13 is refined into CE [27] 
* CE 12 is refined into CE [28] 
* CE 11 is refined into CE [29] 
* CE 10 is refined into CE [30] 


#### Refined cost equations loop_cont_eval_s_handle_write_exception_bb2_in/4 
* CE 27: loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) = 0+ eval_s_handle_write_exception_bb10_in(A,C):1
     [D=5] 
* CE 28: loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) = 0+ eval_s_handle_write_exception_19(A,C):1
     [D=4] 
* CE 29: loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) = 0
     [D=3] 
* CE 30: loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) = 0+ eval_s_handle_write_exception_3(C):1
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_s_handle_write_exception_bb2_in/4 
* CEs [27] --> Loop 23 
* CEs [28] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [30] --> Loop 26 

#### Loops of loop_cont_eval_s_handle_write_exception_bb2_in/4 
* Loop 23: loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) [D=5] 
* Loop 24: loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) [D=4] 
* Loop 25: loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) [D=3] 
* Loop 26: loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) [D=2] 

### Ranking functions of CR loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) 


### Resulting Chains:loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C) 
* [26]
* [25]
* [24]
* [23]


### Merging Chains  loop_cont_eval_s_handle_write_exception_bb2_in/4 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 
* [[24]] --> 3 
* [[23]] --> 4 


### Specialization of cost equations eval_s_handle_write_exception_bb0_in/2 
* CE 3 is refined into CE [31,32,33,34,35] 
* CE 4 is refined into CE [36] 


#### Refined cost equations eval_s_handle_write_exception_bb0_in/2 
* CE 31: eval_s_handle_write_exception_bb0_in(V_nstate,B) = 1+ eval_s_handle_write_exception_bb2_in(V_nstate,C,D,E):1+ loop_cont_eval_s_handle_write_exception_bb2_in(F,D,E,B):1
     [F=2,C=2] 
* CE 32: eval_s_handle_write_exception_bb0_in(V_nstate,B) = 1+ eval_s_handle_write_exception_bb2_in(V_nstate,C,D,E):2+ loop_cont_eval_s_handle_write_exception_bb2_in(F,D,E,B):2
     [F=3,C=3] 
* CE 33: eval_s_handle_write_exception_bb0_in(V_nstate,B) = 1+ eval_s_handle_write_exception_bb2_in(V_nstate,C,V_nstate,D):3+ loop_cont_eval_s_handle_write_exception_bb2_in(E,V_nstate,F,B):3
     [V_nstate+6=F,V_nstate+6=D,E=4,C=4] 
* CE 34: eval_s_handle_write_exception_bb0_in(V_nstate,B) = 1+ eval_s_handle_write_exception_bb2_in(V_nstate,C,V_nstate,D):4+ loop_cont_eval_s_handle_write_exception_bb2_in(E,V_nstate,D,B):4
     [E=5,C=5] 
* CE 35: eval_s_handle_write_exception_bb0_in(V_nstate,B) = 1+ eval_s_handle_write_exception_bb2_in(V_nstate,C,D,E):5
     [] 
* CE 36: eval_s_handle_write_exception_bb0_in(V_nstate,B) = 0
     [] 

### Cost equations --> "Loop" of eval_s_handle_write_exception_bb0_in/2 
* CEs [31,32,33,34,36] --> Loop 27 
* CEs [35] --> Loop 28 

#### Loops of eval_s_handle_write_exception_bb0_in/2 
* Loop 27: eval_s_handle_write_exception_bb0_in(V_nstate,B) [] 
* Loop 28: eval_s_handle_write_exception_bb0_in(V_nstate,B) [] 

### Ranking functions of CR eval_s_handle_write_exception_bb0_in(V_nstate,B) 

#### Partial ranking functions of CR eval_s_handle_write_exception_bb0_in(V_nstate,B) 


### Resulting Chains:eval_s_handle_write_exception_bb0_in(V_nstate,B) 
* [28]...
* [27]


### Merging Chains  eval_s_handle_write_exception_bb0_in/2 into  External patterns of execution 
* [[27]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_s_handle_write_exception_start/3 
* CE 2 is refined into CE [37,38] 


#### Refined cost equations eval_s_handle_write_exception_start/3 
* CE 37: eval_s_handle_write_exception_start(V_status,V_nstate,B) = 0+ eval_s_handle_write_exception_bb0_in(V_nstate,B):1
     [] 
* CE 38: eval_s_handle_write_exception_start(V_status,V_nstate,B) = 0+ eval_s_handle_write_exception_bb0_in(V_nstate,B):2
     [] 

### Cost equations --> "Loop" of eval_s_handle_write_exception_start/3 
* CEs [38] --> Loop 29 
* CEs [37] --> Loop 30 

#### Loops of eval_s_handle_write_exception_start/3 
* Loop 29: eval_s_handle_write_exception_start(V_status,V_nstate,B) [] 
* Loop 30: eval_s_handle_write_exception_start(V_status,V_nstate,B) [] 

### Ranking functions of CR eval_s_handle_write_exception_start(V_status,V_nstate,B) 

#### Partial ranking functions of CR eval_s_handle_write_exception_start(V_status,V_nstate,B) 


### Resulting Chains:eval_s_handle_write_exception_start(V_status,V_nstate,B) 
* [30]
* [29]...


### Merging Chains  eval_s_handle_write_exception_start/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) -> [eval_s_handle_write_exception_bb2_in(V_nstate',B',C',D')] 
1
#### Cost of phase [15]:eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) -> [eval_s_handle_write_exception_bb2_in(V_nstate',B',C',D')] 
1*it(15)+0
#### Cost of phase [15]:eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) -> [eval_s_handle_write_exception_bb2_in(V_nstate',B',C',D')] 
1*it(15)+0
#### Cost of phase [15]:eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) -> [eval_s_handle_write_exception_bb2_in(V_nstate',B',C',D')] 
1*it(15)+0
#### Cost of phase [15]:eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) -> [eval_s_handle_write_exception_bb2_in(V_nstate',B',C',D')] 
1*it(15)+0
#### Cost of phase [15]:eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D) -> [eval_s_handle_write_exception_bb2_in(V_nstate',B',C',D')] 
1*it(15)+0
#### Cost of chains of eval_s_handle_write_exception_bb2_in(V_nstate,B,C,D):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [] 

* Chain [[15],19]: 1*it(15)+0
  with precondition: [B=2] 

* Chain [[15],18]: 1*it(15)+0
  with precondition: [B=3] 

* Chain [[15],17]: 1*it(15)+0
  with precondition: [B=4,V_nstate=C,V_nstate+6=D] 

* Chain [[15],16]: 1*it(15)+0
  with precondition: [B=5,V_nstate=C] 

* Chain [19]: 0
  with precondition: [B=2] 

* Chain [18]: 0
  with precondition: [B=3] 

* Chain [17]: 0
  with precondition: [B=4,V_nstate=C,V_nstate+6=D] 

* Chain [16]: 0
  with precondition: [B=5,C=V_nstate] 


#### Cost of chains of eval_s_handle_write_exception_bb10_in(V_nstate,B):
* Chain [20]: 0
  with precondition: [] 


#### Cost of chains of eval_s_handle_write_exception_19(V_nstate,B):
* Chain [21]: 0
  with precondition: [] 


#### Cost of chains of eval_s_handle_write_exception_3(B):
* Chain [22]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_s_handle_write_exception_bb2_in(D,A,B,C):
* Chain [26]: 0
  with precondition: [D=2] 

* Chain [25]: 0
  with precondition: [D=3] 

* Chain [24]: 0
  with precondition: [D=4] 

* Chain [23]: 0
  with precondition: [D=5] 


#### Cost of chains of eval_s_handle_write_exception_bb0_in(V_nstate,B):
* Chain [28]...: 1*s(5)+1
  with precondition: [] 

* Chain [27]: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_s_handle_write_exception_start(V_status,V_nstate,B):
* Chain [30]: 1*s(10)+0
  with precondition: [] 

* Chain [29]...: 1*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_s_handle_write_exception_start(V_status,V_nstate,B): 
-------------------------------------
* Chain [30] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_s_handle_write_exception_start(V_status,V_nstate,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 23 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 15 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 77 ms.

