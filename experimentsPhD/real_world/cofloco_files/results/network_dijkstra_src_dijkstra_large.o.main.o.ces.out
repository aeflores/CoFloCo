WARNING: Excluded non-linear constraints:[C=4* (A*A)+8*A+4]
WARNING: Excluded non-linear constraints:[C=4* (A*A)+8*A+4]
Warning: Ignored call to eval_main_stop/1 in equation eval_main_3/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_8/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_82/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_main_3/1]
1. non_recursive  : [eval_main_2/2]
2. non_recursive  : [eval_main_1/2]
3. non_recursive  : [eval_main_0/2]
4. non_recursive  : [eval_main_8/1]
5. non_recursive  : [eval_main_7/2]
6. non_recursive  : [eval_main_6/2]
7. recursive  : [eval_main_47/6,eval_main_48/6,eval_main_bb6_in/6]
8. recursive  : [eval_main_bb5_in/6,loop_cont_eval_main_bb6_in/7]
9. recursive  : [eval_main_68/12,eval_main_69/12,eval_main_bb12_in/12]
10. recursive  : [eval_main_73/8,eval_main_74/8,eval_main_75/8,eval_main_76/8,eval_main_77/8,eval_main_bb10_in/5,loop_cont_eval_main_bb12_in/9]
11. non_recursive  : [eval_main_82/1]
12. non_recursive  : [eval_main_81/2]
13. non_recursive  : [eval_main_80/2]
14. non_recursive  : [loop_cont_eval_main_bb10_in/3]
15. non_recursive  : [loop_cont_eval_main_bb5_in/5]
16. non_recursive  : [eval_main_41/2]
17. non_recursive  : [eval_main_40/3]
18. non_recursive  : [eval_main_35/2]
19. non_recursive  : [eval_main_34/3]
20. non_recursive  : [eval_main_26/2]
21. non_recursive  : [eval_main_25/3]
22. non_recursive  : [eval_main_22/2]
23. non_recursive  : [eval_main_21/3]
24. non_recursive  : [eval_main_15/2]
25. non_recursive  : [eval_main_14/3]
26. non_recursive  : [eval_main_13/2]
27. non_recursive  : [eval_main_12/2]
28. non_recursive  : [eval_main_11/2]
29. non_recursive  : [eval_main_10/2]
30. non_recursive  : [eval_main_9/2]
31. non_recursive  : [eval_main_5/2]
32. non_recursive  : [eval_main_4/2]
33. non_recursive  : [eval_main_bb0_in/2]
34. non_recursive  : [eval_main_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_main_bb6_in/6
8. SCC is partially evaluated into eval_main_bb5_in/6
9. SCC is partially evaluated into eval_main_bb12_in/12
10. SCC is partially evaluated into eval_main_bb10_in/5
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into loop_cont_eval_main_bb5_in/5
16. SCC is partially evaluated into eval_main_41/2
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into eval_main_5/2
32. SCC is completely evaluated into other SCCs
33. SCC is partially evaluated into eval_main_bb0_in/2
34. SCC is partially evaluated into eval_main_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main_bb6_in/6 
* CE 14 is refined into CE [25] 
* CE 13 is refined into CE [26] 


#### Refined cost equations eval_main_bb6_in/6 
* CE 25: eval_main_bb6_in(A,B,C,D,A,E) = 0
     [C>=A,C>=0,E=B+1,D=2] 
* CE 26: eval_main_bb6_in(V__NUM_NODES,V_i_0,V_j_0,B,C,D) = 1+ eval_main_bb6_in(E,V_i_0,F,G,C,D)
     [V__NUM_NODES>=V_j_0+1,V_j_0>=0,V_j_0+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_main_bb6_in/6 
* CEs [26] --> Loop 22 
* CEs [25] --> Loop 23 

#### Loops of eval_main_bb6_in/6 
* Loop 22: eval_main_bb6_in(V__NUM_NODES,V_i_0,V_j_0,B,C,D)->  eval_main_bb6_in(V__NUM_NODES',V_i_0,V_j_0',B',C,D)
                  [V__NUM_NODES>=V_j_0+1,V_j_0>=0,V_j_0+1=V_j_0',B'=2,B=2] 
* Loop 23: eval_main_bb6_in(A,B,C,D,A,E) [C>=A,C>=0,B+1=E,D=2] 

### Ranking functions of CR eval_main_bb6_in(V__NUM_NODES,V_i_0,V_j_0,B,C,D) 

#### Partial ranking functions of CR eval_main_bb6_in(V__NUM_NODES,V_i_0,V_j_0,B,C,D) 


### Resulting Chains:eval_main_bb6_in(V__NUM_NODES,V_i_0,V_j_0,B,C,D) 
* [[22]]...
* [[22],23]
* [23]


### Merging Chains  eval_main_bb6_in/6 into  External patterns of execution 
* [[23]] --> 1 
* [[23,[22]]] --> 2 
* [[[22]]] --> 3 


### Specialization of cost equations eval_main_bb5_in/6 
* CE 10 is refined into CE [27] 
* CE 11 is refined into CE [28] 
* CE 9 is refined into CE [29] 
* CE 8 is refined into CE [30,31,32] 


#### Refined cost equations eval_main_bb5_in/6 
* CE 27: eval_main_bb5_in(A,B,C,A,D,E) = 0
     [2*D+1>=A,B>=A,A>=2*D,A>=1,E=0,C=4] 
* CE 28: eval_main_bb5_in(A,B,C,A,D,E) = 0
     [2*D>=A,B>=A,A+1>=2*D,0>=A+1,E=0,C=4] 
* CE 29: eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) = 0
     [V_i_0>=0,E=0,D=0,C=0,B=4,V__NUM_NODES=0] 
* CE 30: eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) = 2+ eval_main_bb6_in(V__NUM_NODES,F,G,H,V__NUM_NODES,I):1+ eval_main_bb5_in(V__NUM_NODES,I,B,C,D,E)
     [V__NUM_NODES>=I,0>=V__NUM_NODES,I=F+1,I=V_i_0+1,H=2,G=0] 
* CE 31: eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) = 2+ eval_main_bb6_in(V__NUM_NODES,F,G,H,I,J):2+ eval_main_bb5_in(I,J,B,C,D,E)
     [V__NUM_NODES>=J,V__NUM_NODES>=1,J=F+1,J=V_i_0+1,H=2,G=0] 
* CE 32: eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) = 2+ eval_main_bb6_in(V__NUM_NODES,V_i_0,F,G,H,I):3
     [V__NUM_NODES>=V_i_0+1,V__NUM_NODES>=1,G=2,F=0] 

### Cost equations --> "Loop" of eval_main_bb5_in/6 
* CEs [32] --> Loop 24 
* CEs [31] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [27] --> Loop 27 
* CEs [28] --> Loop 28 
* CEs [29] --> Loop 29 

#### Loops of eval_main_bb5_in/6 
* Loop 24: eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) [V__NUM_NODES>=V_i_0+1,V__NUM_NODES>=1] 
* Loop 25: eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E)->  eval_main_bb5_in(V__NUM_NODES',V_i_0',B,C,D,E)
                  [V__NUM_NODES>=V_i_0+1,V__NUM_NODES>=1,V_i_0+1=V_i_0'] 
* Loop 26: eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E)->  eval_main_bb5_in(V__NUM_NODES,V_i_0',B,C,D,E)
                  [V__NUM_NODES>=V_i_0+1,0>=V__NUM_NODES,V_i_0+1=V_i_0'] 
* Loop 27: eval_main_bb5_in(A,B,C,A,D,E) [2*D+1>=A,B>=A,A>=2*D,A>=1,E=0,C=4] 
* Loop 28: eval_main_bb5_in(A,B,C,A,D,E) [2*D>=A,B>=A,A+1>=2*D,0>=A+1,E=0,C=4] 
* Loop 29: eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) [V_i_0>=0,E=0,D=0,C=0,B=4,V__NUM_NODES=0] 

### Ranking functions of CR eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) 

#### Partial ranking functions of CR eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) 


### Resulting Chains:eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) 
* [[25]]...
* [[25],29]
* [[25],28]
* [[25],27]
* [[25],24]...
* [29]
* [28]
* [24]...


### Merging Chains  eval_main_bb5_in/6 into  External patterns of execution 
* [[29]] --> 1 
* [[29,[25]]] --> 2 
* [[28]] --> 3 
* [[28,[25]]] --> 4 
* [[27,[25]]] --> 5 
* [[24],[24,[25]]] --> 6 
* [[[25]]] --> 7 


### Specialization of cost equations eval_main_bb12_in/12 
* CE 24 is refined into CE [33] 
* CE 23 is refined into CE [34] 


#### Refined cost equations eval_main_bb12_in/12 
* CE 33: eval_main_bb12_in(A,B,C,D,E,F,A,B,C,D,E,G) = 0
     [A>=C+1,E>=0,F=3] 
* CE 34: eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0,B,C,D,E,F,G,H) = 1+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,I,J,C,D,E,F,G,H)
     [V__NUM_NODES>=V_i_1+1,V_loop_wrap1_0>=0,V_loop_wrap1_0+1=I,J=3,B=3] 

### Cost equations --> "Loop" of eval_main_bb12_in/12 
* CEs [34] --> Loop 30 
* CEs [33] --> Loop 31 

#### Loops of eval_main_bb12_in/12 
* Loop 30: eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0,B,C,D,E,F,G,H)->  eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0',B',C,D,E,F,G,H)
                  [V__NUM_NODES>=V_i_1+1,V_loop_wrap1_0>=0,V_loop_wrap1_0+1=V_loop_wrap1_0',B'=3,B=3] 
* Loop 31: eval_main_bb12_in(A,B,C,D,E,F,A,B,C,D,E,G) [A>=C+1,E>=0,F=3] 

### Ranking functions of CR eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0,B,C,D,E,F,G,H) 


### Resulting Chains:eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0,B,C,D,E,F,G,H) 
* [[30]]...
* [[30],31]
* [31]


### Merging Chains  eval_main_bb12_in/12 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[30]]] --> 2 
* [[[30]]] --> 3 


### Specialization of cost equations eval_main_bb10_in/5 
* CE 22 is refined into CE [35] 
* CE 18 is refined into CE [36,37,38] 
* CE 17 is refined into CE [39,40,41] 
* CE 16 is refined into CE [42,43,44] 
* CE 15 is refined into CE [45,46,47] 
* CE 21 is refined into CE [48,49,50] 
* CE 20 is refined into CE [51,52,53] 
* CE 19 is refined into CE [54,55,56] 


#### Refined cost equations eval_main_bb10_in/5 
* CE 35: eval_main_bb10_in(A,B,C,D,A) = 0
     [C>=A,D=5] 
* CE 36: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,V__NUM_NODES,V_j_1,V_i_1,D,G,H):1+ eval_main_bb10_in(V__NUM_NODES,I,J,K,C)
     [V__NUM_NODES>=D+1,V__NUM_NODES>=V_i_1+1,D>=0,V_j_1>=1,V__NUM_NODES>=2,V_i_1+1=J,D+1=I,K=5,G=0,F=3,E=0,B=5] 
* CE 37: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,V__NUM_NODES,V_j_1,V_i_1,D,G,H):2+ eval_main_bb10_in(V__NUM_NODES,I,J,K,C)
     [V__NUM_NODES>=D+1,V__NUM_NODES>=V_i_1+1,G>=1,D>=0,V_j_1>=1,V__NUM_NODES>=2,V_i_1+1=J,D+1=I,K=5,F=3,E=0,B=5] 
* CE 38: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,G,H,I,J,K,L):3
     [V__NUM_NODES>=D+1,V__NUM_NODES>=V_i_1+1,D>=0,V__NUM_NODES>=2,V_j_1>=1,M=J+1,N=I+1,O=5,F=3,E=0,B=5] 
* CE 39: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,V__NUM_NODES,V_j_1,V_i_1,D,G,H):1+ eval_main_bb10_in(V__NUM_NODES,I,J,K,C)
     [V__NUM_NODES+D>=1,V__NUM_NODES>=V_i_1+1,V__NUM_NODES>=2,0>=D,0>=V_j_1+1,V_i_1+1=J,D+1=I,K=5,G=0,F=3,E=0,B=5] 
* CE 40: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,V__NUM_NODES,V_j_1,V_i_1,D,G,H):2+ eval_main_bb10_in(V__NUM_NODES,I,J,K,C)
     [V__NUM_NODES+D>=1,V__NUM_NODES>=V_i_1+1,G>=1,V__NUM_NODES>=2,0>=D,0>=V_j_1+1,V_i_1+1=J,D+1=I,K=5,F=3,E=0,B=5] 
* CE 41: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,G,H,I,J,K,L):3
     [V__NUM_NODES+D>=1,V__NUM_NODES>=V_i_1+1,V__NUM_NODES>=2,0>=D,0>=V_j_1+1,M=J+1,N=I+1,O=5,F=3,E=0,B=5] 
* CE 42: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,V__NUM_NODES,V_j_1,V_i_1,D,G,H):1+ eval_main_bb10_in(V__NUM_NODES,I,J,K,C)
     [V__NUM_NODES>=V_i_1+1,0>=V__NUM_NODES+D+1,D>=0,V_j_1>=1,0>=V__NUM_NODES+2,V_i_1+1=J,D+1=I,K=5,G=0,F=3,E=0,B=5] 
* CE 43: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,V__NUM_NODES,V_j_1,V_i_1,D,G,H):2+ eval_main_bb10_in(V__NUM_NODES,I,J,K,C)
     [V__NUM_NODES>=V_i_1+1,0>=V__NUM_NODES+D+1,G>=1,D>=0,V_j_1>=1,0>=V__NUM_NODES+2,V_i_1+1=J,D+1=I,K=5,F=3,E=0,B=5] 
* CE 44: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,G,H,I,J,K,L):3
     [V__NUM_NODES>=V_i_1+1,0>=V__NUM_NODES+D+1,D>=0,V_j_1>=1,0>=V__NUM_NODES+2,M=J+1,N=I+1,O=5,F=3,E=0,B=5] 
* CE 45: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,V__NUM_NODES,V_j_1,V_i_1,D,G,H):1+ eval_main_bb10_in(V__NUM_NODES,I,J,K,C)
     [V__NUM_NODES>=V_i_1+1,D>=V__NUM_NODES+1,0>=D,0>=V_j_1+1,0>=V__NUM_NODES+2,V_i_1+1=J,D+1=I,K=5,G=0,F=3,E=0,B=5] 
* CE 46: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,V__NUM_NODES,V_j_1,V_i_1,D,G,H):2+ eval_main_bb10_in(V__NUM_NODES,I,J,K,C)
     [V__NUM_NODES>=V_i_1+1,D>=V__NUM_NODES+1,G>=1,0>=D,0>=V_j_1+1,0>=V__NUM_NODES+2,V_i_1+1=J,D+1=I,K=5,F=3,E=0,B=5] 
* CE 47: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,D,E,F,G,H,I,J,K,L):3
     [V__NUM_NODES>=V_i_1+1,D>=V__NUM_NODES+1,0>=D,0>=V__NUM_NODES+2,0>=V_j_1+1,M=J+1,N=I+1,O=5,F=3,E=0,B=5] 
* CE 48: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,D,V_i_1,E,F,G,V__NUM_NODES,H,V_i_1,I,J,K):1+ eval_main_bb10_in(V__NUM_NODES,L,M,N,C)
     [V__NUM_NODES>=V_i_1+1,V_i_1+1=M,N=5,L=1,J=0,I=0,H=0,G=3,F=0,E=0,D=0,B=5,V_j_1=0] 
* CE 49: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,D,V_i_1,E,F,G,V__NUM_NODES,H,V_i_1,I,J,K):2+ eval_main_bb10_in(V__NUM_NODES,L,M,N,C)
     [V__NUM_NODES>=V_i_1+1,J>=1,V_i_1+1=M,N=5,L=1,I=0,H=0,G=3,F=0,E=0,D=0,B=5,V_j_1=0] 
* CE 50: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(V__NUM_NODES,D,V_i_1,E,F,G,H,I,J,K,L,M):3
     [V__NUM_NODES>=V_i_1+1,N=K+1,O=J+1,P=5,G=3,F=0,E=0,D=0,B=5,V_j_1=0] 
* CE 51: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(D,V_j_1,V_i_1,E,F,G,H,V_j_1,V_i_1,I,J,K):1+ eval_main_bb10_in(L,M,N,O,C)
     [0>=V_i_1,V_i_1+1=N,O=5,M=1,L=1,J=0,I=0,H=1,G=3,F=0,E=0,D=1,B=5,V__NUM_NODES=1] 
* CE 52: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(D,V_j_1,V_i_1,E,F,G,H,V_j_1,V_i_1,I,J,K):2+ eval_main_bb10_in(L,M,N,O,C)
     [J>=1,0>=V_i_1,V_i_1+1=N,O=5,M=1,L=1,I=0,H=1,G=3,F=0,E=0,D=1,B=5,V__NUM_NODES=1] 
* CE 53: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(D,V_j_1,V_i_1,E,F,G,H,I,J,K,L,M):3
     [0>=V_i_1,N=K+1,O=J+1,P=5,G=3,F=0,E=0,D=1,B=5,V__NUM_NODES=1] 
* CE 54: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(D,V_j_1,V_i_1,E,F,G,H,V_j_1,V_i_1,I,J,K):1+ eval_main_bb10_in(L,M,N,O,C)
     [0>=V_i_1+2,V_i_1+1=N,O=5,M=1,L+1=0,J=0,I=0,H+1=0,G=3,F=0,E=0,D+1=0,B=5,V__NUM_NODES+1=0] 
* CE 55: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(D,V_j_1,V_i_1,E,F,G,H,V_j_1,V_i_1,I,J,K):2+ eval_main_bb10_in(L,M,N,O,C)
     [J>=1,0>=V_i_1+2,V_i_1+1=N,O=5,M=1,L+1=0,I=0,H+1=0,G=3,F=0,E=0,D+1=0,B=5,V__NUM_NODES+1=0] 
* CE 56: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) = 2+ eval_main_bb12_in(D,V_j_1,V_i_1,E,F,G,H,I,J,K,L,M):3
     [0>=V_i_1+2,N=K+1,O=J+1,P=5,G=3,F=0,E=0,D+1=0,B=5,V__NUM_NODES+1=0] 

### Cost equations --> "Loop" of eval_main_bb10_in/5 
* CEs [38] --> Loop 32 
* CEs [41] --> Loop 33 
* CEs [44] --> Loop 34 
* CEs [47] --> Loop 35 
* CEs [50] --> Loop 36 
* CEs [53] --> Loop 37 
* CEs [56] --> Loop 38 
* CEs [36,37] --> Loop 39 
* CEs [39,40] --> Loop 40 
* CEs [42,43] --> Loop 41 
* CEs [45,46] --> Loop 42 
* CEs [48,49] --> Loop 43 
* CEs [51,52] --> Loop 44 
* CEs [54,55] --> Loop 45 
* CEs [35] --> Loop 46 

#### Loops of eval_main_bb10_in/5 
* Loop 32: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) [V__NUM_NODES>=V_i_1+1,V_j_1>=1,V__NUM_NODES>=2,B=5] 
* Loop 33: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) [V__NUM_NODES>=V_i_1+1,V__NUM_NODES>=2,0>=V_j_1+1,B=5] 
* Loop 34: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) [V__NUM_NODES>=V_i_1+1,V_j_1>=1,0>=V__NUM_NODES+2,B=5] 
* Loop 35: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) [V__NUM_NODES>=V_i_1+1,0>=V_j_1+1,0>=V__NUM_NODES+2,B=5] 
* Loop 36: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) [V__NUM_NODES>=V_i_1+1,B=5,V_j_1=0] 
* Loop 37: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) [0>=V_i_1,B=5,V__NUM_NODES=1] 
* Loop 38: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) [0>=V_i_1+2,B=5,V__NUM_NODES+1=0] 
* Loop 39: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C)->  eval_main_bb10_in(V__NUM_NODES,V_j_1',V_i_1',B',C)
                  [V__NUM_NODES>=V_j_1',V__NUM_NODES>=V_i_1+1,V_j_1'>=1,V_j_1>=1,V__NUM_NODES>=2,V_i_1+1=V_i_1',B'=5,B=5] 
* Loop 40: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C)->  eval_main_bb10_in(V__NUM_NODES,V_j_1',V_i_1',B',C)
                  [V__NUM_NODES+V_j_1'>=2,V__NUM_NODES>=V_i_1+1,V__NUM_NODES>=2,1>=V_j_1',0>=V_j_1+1,V_i_1+1=V_i_1',B'=5,B=5] 
* Loop 41: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C)->  eval_main_bb10_in(V__NUM_NODES,V_j_1',V_i_1',B',C)
                  [V__NUM_NODES>=V_i_1+1,0>=V__NUM_NODES+V_j_1',V_j_1'>=1,V_j_1>=1,0>=V__NUM_NODES+2,V_i_1+1=V_i_1',B'=5,B=5] 
* Loop 42: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C)->  eval_main_bb10_in(V__NUM_NODES,V_j_1',V_i_1',B',C)
                  [V__NUM_NODES>=V_i_1+1,V_j_1'>=V__NUM_NODES+2,1>=V_j_1',0>=V_j_1+1,0>=V__NUM_NODES+2,V_i_1+1=V_i_1',B'=5,B=5] 
* Loop 43: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C)->  eval_main_bb10_in(V__NUM_NODES,V_j_1',V_i_1',B',C)
                  [V__NUM_NODES>=V_i_1+1,V_i_1+1=V_i_1',B'=5,V_j_1'=1,B=5,V_j_1=0] 
* Loop 44: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C)->  eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C)
                  [0>=V_i_1,V_i_1+1=V_i_1',B'=5,V_j_1'=1,V__NUM_NODES'=1,B=5,V__NUM_NODES=1] 
* Loop 45: eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C)->  eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C)
                  [0>=V_i_1+2,V_i_1+1=V_i_1',B'=5,V_j_1'=1,V__NUM_NODES'+1=0,B=5,V__NUM_NODES+1=0] 
* Loop 46: eval_main_bb10_in(A,B,C,D,A) [C>=A,D=5] 

### Ranking functions of CR eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) 
* RF of phase [39]: [V__NUM_NODES-V_i_1]
* RF of phase [40]: [V__NUM_NODES-V_i_1]
* RF of phase [41]: [V__NUM_NODES-V_i_1,-V_i_1-2]
* RF of phase [42]: [V__NUM_NODES-V_i_1,-V_i_1-2]
* RF of phase [44]: [-V_i_1+1]
* RF of phase [45]: [-V_i_1-1]

#### Partial ranking functions of CR eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) 
* Partial RF of phase [39]:
  - RF of loop [39:1]:
    V__NUM_NODES-V_i_1
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    V__NUM_NODES-V_i_1
* Partial RF of phase [41]:
  - RF of loop [41:1]:
    V__NUM_NODES-V_i_1
    -V_i_1-2
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    V__NUM_NODES-V_i_1
    -V_i_1-2
* Partial RF of phase [44]:
  - RF of loop [44:1]:
    -V_i_1+1
* Partial RF of phase [45]:
  - RF of loop [45:1]:
    -V_i_1-1


### Resulting Chains:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) 
* [[45],46]
* [[45],38]...
* [[44],46]
* [[44],37]...
* [[42],[41],46]
* [[42],[41],34]...
* [[42],46]
* [[42],43,[41],46]
* [[42],43,[41],34]...
* [[42],43,46]
* [[42],43,34]...
* [[42],36]...
* [[42],35]...
* [[42],34]...
* [[41],46]
* [[41],34]...
* [[40],[39],46]
* [[40],[39],32]...
* [[40],46]
* [[40],43,[39],46]
* [[40],43,[39],32]...
* [[40],43,46]
* [[40],43,32]...
* [[40],36]...
* [[40],33]...
* [[40],32]...
* [[39],46]
* [[39],32]...
* [46]
* [43,[45],46]
* [43,[45],38]...
* [43,[44],46]
* [43,[44],37]...
* [43,[41],46]
* [43,[41],34]...
* [43,[39],46]
* [43,[39],32]...
* [43,46]
* [43,38]...
* [43,37]...
* [43,34]...
* [43,32]...
* [38]...
* [37]...
* [36]...
* [35]...
* [34]...
* [33]...
* [32]...


### Merging Chains  eval_main_bb10_in/5 into  External patterns of execution 
* [[46,[45],43],[46,[45]]] --> 1 
* [[46,[44],43],[46,[44]]] --> 2 
* [[46,43]] --> 3 
* [[46,[41],43]] --> 4 
* [[46,[39],43]] --> 5 
* [[46,43,[42]],[46,[41],43,[42]],[46,[42]],[46,[41],[42]]] --> 6 
* [[46,[41]]] --> 7 
* [[46,43,[40]],[46,[39],43,[40]],[46,[40]],[46,[39],[40]]] --> 8 
* [[46,[39]]] --> 9 
* [[46]] --> 10 
* [[38,43]] --> 11 
* [[38,[45],43]] --> 12 
* [[38]] --> 13 
* [[38,[45]]] --> 14 
* [[37,43]] --> 15 
* [[37,[44],43]] --> 16 
* [[37]] --> 17 
* [[37,[44]]] --> 18 
* [[34,43]] --> 19 
* [[34,[41],43]] --> 20 
* [[32,43]] --> 21 
* [[32,[39],43]] --> 22 
* [[36]] --> 23 
* [[35]] --> 24 
* [[34,[42]],[36,[42]]] --> 25 
* [[34,43,[42]],[34,[41],[42]]] --> 26 
* [[34,[41],43,[42]]] --> 27 
* [[34]] --> 28 
* [[34,[41]]] --> 29 
* [[35,[42]]] --> 30 
* [[33]] --> 31 
* [[32,[40]],[36,[40]]] --> 32 
* [[32,43,[40]],[32,[39],[40]]] --> 33 
* [[32,[39],43,[40]]] --> 34 
* [[33,[40]]] --> 35 
* [[32]] --> 36 
* [[32,[39]]] --> 37 


### Specialization of cost equations loop_cont_eval_main_bb5_in/5 
* CE 12 is refined into CE [57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93] 


#### Refined cost equations loop_cont_eval_main_bb5_in/5 
* CE 57: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,B,C,L,M):1
     [0>=C+2,M+1=0,L=5,K+1=0,A+1=0,J=4] 
* CE 58: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,B,C,L,M):2
     [0>=C,M=1,L=5,K=1,A=1,J=4] 
* CE 59: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,L,C,M,N):3
     [C+1=N,C+1=K,C+1=A,M=5,L=0,B=0,J=4] 
* CE 60: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,K,C,L,A):4
     [A>=C+2,0>=A+2,L=5,K=0,B=0,J=4] 
* CE 61: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,K,C,L,A):5
     [A>=C+2,A>=2,L=5,K=0,B=0,J=4] 
* CE 62: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,A):6
     [A>=C+1,0>=A+2,0>=B+1,K=5,J=4] 
* CE 63: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,A):7
     [A>=C+1,B>=1,0>=A+2,K=5,J=4] 
* CE 64: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,A):8
     [A>=C+1,A>=2,0>=B+1,K=5,J=4] 
* CE 65: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,A):9
     [A>=C+1,A>=2,B>=1,K=5,J=4] 
* CE 66: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,A):10
     [C>=A,K=5,J=4] 
* CE 67: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,L,C,M,N):11
     [0>=C+3,M=5,L=0,K+1=0,B=0,A+1=0,J=4] 
* CE 68: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,L,C,M,N):12
     [0>=C+4,M=5,L=0,K+1=0,B=0,A+1=0,J=4] 
* CE 69: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,B,C,L,M):13
     [0>=C+2,L=5,K+1=0,A+1=0,J=4] 
* CE 70: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,B,C,L,M):14
     [0>=C+3,L=5,K+1=0,A+1=0,J=4] 
* CE 71: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,L,C,M,N):15
     [0>=C+1,M=5,L=0,K=1,B=0,A=1,J=4] 
* CE 72: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,L,C,M,N):16
     [0>=C+2,M=5,L=0,K=1,B=0,A=1,J=4] 
* CE 73: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,B,C,L,M):17
     [0>=C,L=5,K=1,A=1,J=4] 
* CE 74: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(K,B,C,L,M):18
     [0>=C+1,L=5,K=1,A=1,J=4] 
* CE 75: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,K,C,L,M):19
     [A>=C+2,0>=A+2,L=5,K=0,B=0,J=4] 
* CE 76: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,K,C,L,M):20
     [A>=C+3,0>=A+2,L=5,K=0,B=0,J=4] 
* CE 77: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,K,C,L,M):21
     [A>=C+2,A>=2,L=5,K=0,B=0,J=4] 
* CE 78: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,K,C,L,M):22
     [A>=C+3,A>=2,L=5,K=0,B=0,J=4] 
* CE 79: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,K,C,L,M):23
     [A>=C+1,L=5,K=0,B=0,J=4] 
* CE 80: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):24
     [A>=C+1,0>=B+1,0>=A+2,K=5,J=4] 
* CE 81: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):25
     [A>=C+2,0>=B+1,0>=A+2,K=5,J=4] 
* CE 82: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):26
     [A>=C+3,0>=B+1,0>=A+2,K=5,J=4] 
* CE 83: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):27
     [A>=C+4,0>=B+1,0>=A+2,K=5,J=4] 
* CE 84: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):28
     [A>=C+1,B>=1,0>=A+2,K=5,J=4] 
* CE 85: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):29
     [A>=C+2,B>=1,0>=A+2,K=5,J=4] 
* CE 86: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):30
     [A>=C+2,0>=B+1,0>=A+3,K=5,J=4] 
* CE 87: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):31
     [A>=C+1,A>=2,0>=B+1,K=5,J=4] 
* CE 88: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):32
     [A>=C+2,A>=2,0>=B+1,K=5,J=4] 
* CE 89: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):33
     [A>=C+3,A>=2,0>=B+1,K=5,J=4] 
* CE 90: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):34
     [A>=C+4,A>=2,0>=B+1,K=5,J=4] 
* CE 91: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):35
     [A>=C+2,A>=3,0>=B+1,K=5,J=4] 
* CE 92: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):36
     [A>=C+1,B>=1,A>=2,K=5,J=4] 
* CE 93: loop_cont_eval_main_bb5_in(J,A,B,C,D) = 1+ eval_main_bb10_in(A,B,C,K,L):37
     [A>=C+2,B>=1,A>=2,K=5,J=4] 

### Cost equations --> "Loop" of loop_cont_eval_main_bb5_in/5 
* CEs [92,93] --> Loop 47 
* CEs [87,88,89,90,91] --> Loop 48 
* CEs [84,85] --> Loop 49 
* CEs [80,81,82,83,86] --> Loop 50 
* CEs [77,78] --> Loop 51 
* CEs [75,76,79] --> Loop 52 
* CEs [71,72,73,74] --> Loop 53 
* CEs [67,68,69,70] --> Loop 54 
* CEs [66] --> Loop 55 
* CEs [65] --> Loop 56 
* CEs [64] --> Loop 57 
* CEs [63] --> Loop 58 
* CEs [62] --> Loop 59 
* CEs [61] --> Loop 60 
* CEs [60] --> Loop 61 
* CEs [59] --> Loop 62 
* CEs [58] --> Loop 63 
* CEs [57] --> Loop 64 

#### Loops of loop_cont_eval_main_bb5_in/5 
* Loop 47: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+1,B>=1,A>=2,J=4] 
* Loop 48: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+1,A>=2,0>=B+1,J=4] 
* Loop 49: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+1,B>=1,0>=A+2,J=4] 
* Loop 50: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+1,0>=B+1,0>=A+2,J=4] 
* Loop 51: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+2,A>=2,B=0,J=4] 
* Loop 52: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+1,B=0,J=4] 
* Loop 53: loop_cont_eval_main_bb5_in(J,A,B,C,D) [0>=C,A=1,J=4] 
* Loop 54: loop_cont_eval_main_bb5_in(J,A,B,C,D) [0>=C+2,A+1=0,J=4] 
* Loop 55: loop_cont_eval_main_bb5_in(J,A,B,C,D) [C>=A,J=4] 
* Loop 56: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+1,B>=1,A>=2,J=4] 
* Loop 57: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+1,A>=2,0>=B+1,J=4] 
* Loop 58: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+1,B>=1,0>=A+2,J=4] 
* Loop 59: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+1,0>=B+1,0>=A+2,J=4] 
* Loop 60: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+2,A>=2,B=0,J=4] 
* Loop 61: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A>=C+2,0>=A+2,B=0,J=4] 
* Loop 62: loop_cont_eval_main_bb5_in(J,A,B,C,D) [A=C+1,B=0,J=4] 
* Loop 63: loop_cont_eval_main_bb5_in(J,A,B,C,D) [0>=C,A=1,J=4] 
* Loop 64: loop_cont_eval_main_bb5_in(J,A,B,C,D) [0>=C+2,A+1=0,J=4] 

### Ranking functions of CR loop_cont_eval_main_bb5_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_main_bb5_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_main_bb5_in(J,A,B,C,D) 
* [64]
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]
* [55]
* [54]...
* [53]...
* [52]...
* [51]...
* [50]...
* [49]...
* [48]...
* [47]...


### Merging Chains  loop_cont_eval_main_bb5_in/5 into  External patterns of execution 
* [[64]] --> 1 
* [[63]] --> 2 
* [[62]] --> 3 
* [[61]] --> 4 
* [[60]] --> 5 
* [[59]] --> 6 
* [[58]] --> 7 
* [[57]] --> 8 
* [[56]] --> 9 
* [[55]] --> 10 
* [[54]] --> 11 
* [[53]] --> 12 
* [[51]] --> 13 
* [[52]] --> 14 
* [[50]] --> 15 
* [[49]] --> 16 
* [[48]] --> 17 
* [[47]] --> 18 


### Specialization of cost equations eval_main_41/2 
* CE 7 is refined into CE [94,95,96,97,98,99,100,101,102,103,104,105] 


#### Refined cost equations eval_main_41/2 
* CE 94: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(C,D,E,F,G,H):1+ loop_cont_eval_main_bb5_in(I,J,K,L,B):10
     [L=0,K=0,J=0,I=4,H=0,G=0,F=0,E=4,D=0,C=0,V__NUM_NODES=0] 
* CE 95: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):2+ loop_cont_eval_main_bb5_in(H,I,J,K,B):10
     [V__NUM_NODES>=1,K=0,J=0,I=0,H=4,G=0,F=0,E=0,D=4,C=0] 
* CE 96: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,V__NUM_NODES,E,F):3+ loop_cont_eval_main_bb5_in(G,V__NUM_NODES,E,H,B):10
     [2*E>=V__NUM_NODES,V__NUM_NODES+1>=2*E,0>=V__NUM_NODES+1,H=0,G=4,F=0,D=4,C=0] 
* CE 97: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):4+ loop_cont_eval_main_bb5_in(H,E,F,I,B):10
     [2*F>=E,E+1>=2*F,V__NUM_NODES>=1,0>=E+1,I=0,H=4,G=0,D=4,C=0] 
* CE 98: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):5+ loop_cont_eval_main_bb5_in(H,I,F,J,B):2
     [F>=0,V__NUM_NODES>=1,1>=2*F,J=0,I=1,H=4,G=0,E=1,D=4,C=0] 
* CE 99: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):5+ loop_cont_eval_main_bb5_in(H,I,J,K,B):3
     [V__NUM_NODES>=1,K=0,J=0,I=1,H=4,G=0,F=0,E=1,D=4,C=0] 
* CE 100: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):5+ loop_cont_eval_main_bb5_in(H,E,F,I,B):9
     [2*F+1>=E,E>=2*F,F>=1,V__NUM_NODES>=1,I=0,H=4,G=0,D=4,C=0] 
* CE 101: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):5+ loop_cont_eval_main_bb5_in(H,I,F,J,B):12
     [F>=0,V__NUM_NODES>=1,1>=2*F,J=0,I=1,H=4,G=0,E=1,D=4,C=0] 
* CE 102: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):5+ loop_cont_eval_main_bb5_in(H,I,J,K,B):14
     [V__NUM_NODES>=1,K=0,J=0,I=1,H=4,G=0,F=0,E=1,D=4,C=0] 
* CE 103: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):5+ loop_cont_eval_main_bb5_in(H,E,F,I,B):18
     [2*F+1>=E,E>=2*F,F>=1,V__NUM_NODES>=1,I=0,H=4,G=0,D=4,C=0] 
* CE 104: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):6
     [V__NUM_NODES>=1,C=0] 
* CE 105: eval_main_41(V__NUM_NODES,B) = 1+ eval_main_bb5_in(V__NUM_NODES,C,D,E,F,G):7
     [V__NUM_NODES>=1,C=0] 

### Cost equations --> "Loop" of eval_main_41/2 
* CEs [101,102,103,104,105] --> Loop 65 
* CEs [95,97,98,99,100] --> Loop 66 
* CEs [96] --> Loop 67 
* CEs [94] --> Loop 68 

#### Loops of eval_main_41/2 
* Loop 65: eval_main_41(V__NUM_NODES,B) [V__NUM_NODES>=1] 
* Loop 66: eval_main_41(V__NUM_NODES,B) [V__NUM_NODES>=1] 
* Loop 67: eval_main_41(V__NUM_NODES,B) [0>=V__NUM_NODES+1] 
* Loop 68: eval_main_41(V__NUM_NODES,B) [V__NUM_NODES=0] 

### Ranking functions of CR eval_main_41(V__NUM_NODES,B) 

#### Partial ranking functions of CR eval_main_41(V__NUM_NODES,B) 


### Resulting Chains:eval_main_41(V__NUM_NODES,B) 
* [68]
* [67]
* [66]
* [65]...


### Merging Chains  eval_main_41/2 into  External patterns of execution 
* [[68]] --> 1 
* [[67]] --> 2 
* [[66]] --> 3 
* [[65]] --> 4 


### Specialization of cost equations eval_main_5/2 
* CE 5 is refined into CE [106] 
* CE 6 is refined into CE [107,108,109,110] 


#### Refined cost equations eval_main_5/2 
* CE 106: eval_main_5(V__NUM_NODES,B) = 0
     [] 
* CE 107: eval_main_5(V__NUM_NODES,B) = 0+ eval_main_41(C,B):1
     [C=0,V__NUM_NODES=0] 
* CE 108: eval_main_5(V__NUM_NODES,B) = 0+ eval_main_41(V__NUM_NODES,B):2
     [0>=V__NUM_NODES+1] 
* CE 109: eval_main_5(V__NUM_NODES,B) = 0+ eval_main_41(V__NUM_NODES,B):3
     [V__NUM_NODES>=1] 
* CE 110: eval_main_5(V__NUM_NODES,B) = 0+ eval_main_41(V__NUM_NODES,B):4
     [V__NUM_NODES>=1] 

### Cost equations --> "Loop" of eval_main_5/2 
* CEs [110] --> Loop 69 
* CEs [106,107,108,109] --> Loop 70 

#### Loops of eval_main_5/2 
* Loop 69: eval_main_5(V__NUM_NODES,B) [V__NUM_NODES>=1] 
* Loop 70: eval_main_5(V__NUM_NODES,B) [] 

### Ranking functions of CR eval_main_5(V__NUM_NODES,B) 

#### Partial ranking functions of CR eval_main_5(V__NUM_NODES,B) 


### Resulting Chains:eval_main_5(V__NUM_NODES,B) 
* [70]
* [69]...


### Merging Chains  eval_main_5/2 into  External patterns of execution 
* [[70]] --> 1 
* [[69]] --> 2 


### Specialization of cost equations eval_main_bb0_in/2 
* CE 3 is refined into CE [111] 
* CE 4 is refined into CE [112,113] 


#### Refined cost equations eval_main_bb0_in/2 
* CE 111: eval_main_bb0_in(V__NUM_NODES,B) = 0
     [] 
* CE 112: eval_main_bb0_in(V__NUM_NODES,B) = 0+ eval_main_5(V__NUM_NODES,B):1
     [] 
* CE 113: eval_main_bb0_in(V__NUM_NODES,B) = 0+ eval_main_5(V__NUM_NODES,B):2
     [V__NUM_NODES>=1] 

### Cost equations --> "Loop" of eval_main_bb0_in/2 
* CEs [113] --> Loop 71 
* CEs [111,112] --> Loop 72 

#### Loops of eval_main_bb0_in/2 
* Loop 71: eval_main_bb0_in(V__NUM_NODES,B) [V__NUM_NODES>=1] 
* Loop 72: eval_main_bb0_in(V__NUM_NODES,B) [] 

### Ranking functions of CR eval_main_bb0_in(V__NUM_NODES,B) 

#### Partial ranking functions of CR eval_main_bb0_in(V__NUM_NODES,B) 


### Resulting Chains:eval_main_bb0_in(V__NUM_NODES,B) 
* [72]
* [71]...


### Merging Chains  eval_main_bb0_in/2 into  External patterns of execution 
* [[72]] --> 1 
* [[71]] --> 2 


### Specialization of cost equations eval_main_start/3 
* CE 2 is refined into CE [114,115] 


#### Refined cost equations eval_main_start/3 
* CE 114: eval_main_start(V_argc,V__NUM_NODES,B) = 0+ eval_main_bb0_in(V__NUM_NODES,B):1
     [] 
* CE 115: eval_main_start(V_argc,V__NUM_NODES,B) = 0+ eval_main_bb0_in(V__NUM_NODES,B):2
     [V__NUM_NODES>=1] 

### Cost equations --> "Loop" of eval_main_start/3 
* CEs [115] --> Loop 73 
* CEs [114] --> Loop 74 

#### Loops of eval_main_start/3 
* Loop 73: eval_main_start(V_argc,V__NUM_NODES,B) [V__NUM_NODES>=1] 
* Loop 74: eval_main_start(V_argc,V__NUM_NODES,B) [] 

### Ranking functions of CR eval_main_start(V_argc,V__NUM_NODES,B) 

#### Partial ranking functions of CR eval_main_start(V_argc,V__NUM_NODES,B) 


### Resulting Chains:eval_main_start(V_argc,V__NUM_NODES,B) 
* [74]
* [73]...


### Merging Chains  eval_main_start/3 into  External patterns of execution 
* [[74]] --> 1 
* [[73]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [22] 

 * loop 22:eval_main_bb6_in(V__NUM_NODES,V_i_0,V_j_0,B,C,D) -> [eval_main_bb6_in(V__NUM_NODES',V_i_0',V_j_0',B',C',D')] 
1
#### Cost of phase [22]:eval_main_bb6_in(V__NUM_NODES,V_i_0,V_j_0,B,C,D) -> [eval_main_bb6_in(V__NUM_NODES',V_i_0',V_j_0',B',C',D')] 
1*it(22)+0
#### Cost of phase [22]:eval_main_bb6_in(V__NUM_NODES,V_i_0,V_j_0,B,C,D) -> [eval_main_bb6_in(V__NUM_NODES',V_i_0',V_j_0',B',C',D')] 
1*it(22)+0
#### Cost of chains of eval_main_bb6_in(V__NUM_NODES,V_i_0,V_j_0,B,C,D):
* Chain [[22]]...: 1*it(22)+0
  with precondition: [V__NUM_NODES>=V_j_0+1,V_j_0>=0,B=2] 

* Chain [[22],23]: 1*it(22)+0
  with precondition: [B=2,V_i_0+1=D,V_j_0>=0,V__NUM_NODES>=V_j_0+1] 

* Chain [23]: 0
  with precondition: [B=2,D=V_i_0+1,V__NUM_NODES=C,V_j_0>=0,V_j_0>=V__NUM_NODES] 


#### Cost of loops [25] 

 * loop 25:eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) -> [eval_main_bb5_in(V__NUM_NODES',V_i_0',B',C',D',E')] 
1*s(2)+2
#### Cost of phase [25]:eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) -> [eval_main_bb5_in(V__NUM_NODES',V_i_0',B',C',D',E')] 
3*it(25)+0
#### Cost of phase [25]:eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) -> [eval_main_bb5_in(V__NUM_NODES',V_i_0',B',C',D',E')] 
3*it(25)+0
#### Cost of phase [25]:eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) -> [eval_main_bb5_in(V__NUM_NODES',V_i_0',B',C',D',E')] 
3*it(25)+0
#### Cost of phase [25]:eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) -> [eval_main_bb5_in(V__NUM_NODES',V_i_0',B',C',D',E')] 
3*it(25)+0
#### Cost of phase [25]:eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E) -> [eval_main_bb5_in(V__NUM_NODES',V_i_0',B',C',D',E')] 
3*it(25)+0
#### Cost of chains of eval_main_bb5_in(V__NUM_NODES,V_i_0,B,C,D,E):
* Chain [[25]]...: 3*it(25)+0
  with precondition: [V__NUM_NODES>=V_i_0+1,V__NUM_NODES>=1] 

* Chain [[25],29]: 3*it(25)+0
  with precondition: [B=4,C=0,D=0,E=0,V_i_0>=0,V__NUM_NODES>=V_i_0+1] 

* Chain [[25],28]: 3*it(25)+0
  with precondition: [B=4,E=0,0>=C+1,V_i_0>=0,C+1>=2*D,V__NUM_NODES>=V_i_0+1,2*D>=C] 

* Chain [[25],27]: 3*it(25)+0
  with precondition: [B=4,E=0,V_i_0>=0,C>=1,C>=2*D,V__NUM_NODES>=V_i_0+1,2*D+1>=C] 

* Chain [[25],24]...: 4*it(25)+2
  with precondition: [V_i_0>=0,V__NUM_NODES>=V_i_0+1] 

* Chain [29]: 0
  with precondition: [V__NUM_NODES=0,B=4,C=0,D=0,E=0,V_i_0>=0] 

* Chain [28]: 0
  with precondition: [B=4,E=0,V__NUM_NODES=C,0>=V__NUM_NODES+1,V_i_0>=0,V__NUM_NODES+1>=2*D,2*D>=V__NUM_NODES] 

* Chain [24]...: 1*s(4)+2
  with precondition: [V_i_0>=0,V__NUM_NODES>=V_i_0+1] 


#### Cost of loops [30] 

 * loop 30:eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0,B,C,D,E,F,G,H) -> [eval_main_bb12_in(V__NUM_NODES',V_j_1',V_i_1',V_75',V_loop_wrap1_0',B',C',D',E',F',G',H')] 
1
#### Cost of phase [30]:eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0,B,C,D,E,F,G,H) -> [eval_main_bb12_in(V__NUM_NODES',V_j_1',V_i_1',V_75',V_loop_wrap1_0',B',C',D',E',F',G',H')] 
1*it(30)+0
#### Cost of phase [30]:eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0,B,C,D,E,F,G,H) -> [eval_main_bb12_in(V__NUM_NODES',V_j_1',V_i_1',V_75',V_loop_wrap1_0',B',C',D',E',F',G',H')] 
1*it(30)+0
#### Cost of chains of eval_main_bb12_in(V__NUM_NODES,V_j_1,V_i_1,V_75,V_loop_wrap1_0,B,C,D,E,F,G,H):
* Chain [[30]]...: 1*it(30)+0
  with precondition: [V__NUM_NODES>=V_i_1+1,V_loop_wrap1_0>=0,B=3] 

* Chain [[30],31]: 1*it(30)+0
  with precondition: [B=3,V__NUM_NODES=C,V_j_1=D,V_i_1=E,V_75=F,V_loop_wrap1_0>=0,V__NUM_NODES>=V_i_1+1,G>=V_loop_wrap1_0+1] 

* Chain [31]: 0
  with precondition: [B=3,D=V_j_1,F=V_75,V__NUM_NODES=C,V_i_1=E,V_loop_wrap1_0=G,V_loop_wrap1_0>=0,V__NUM_NODES>=V_i_1+1] 


#### Cost of loops [45] 

 * loop 45:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(8)+0
#### Cost of phase [45]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(9)+0
#### Cost of phase [45]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(9)+0
#### Cost of loops [44] 

 * loop 44:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(12)+0
#### Cost of phase [44]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(13)+0
#### Cost of phase [44]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(13)+0
#### Cost of loops [41] 

 * loop 41:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(16)+0
#### Cost of phase [41]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(17)+0
#### Cost of loops [42] 

 * loop 42:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(19)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of phase [41]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(17)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of phase [42]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(20)+0
#### Cost of loops [39] 

 * loop 39:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(26)+0
#### Cost of phase [39]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(27)+0
#### Cost of loops [40] 

 * loop 40:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(29)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of phase [39]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(27)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of phase [40]:eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C) -> [eval_main_bb10_in(V__NUM_NODES',V_j_1',V_i_1',B',C')] 
1*s(30)+0
#### Cost of chains of eval_main_bb10_in(V__NUM_NODES,V_j_1,V_i_1,B,C):
* Chain [[45],46]: 1*s(9)+0
  with precondition: [V__NUM_NODES+1=0,B=5,C+1=0,0>=V_i_1+2] 

* Chain [[45],38]...: 2*s(9)+2
  with precondition: [V__NUM_NODES+1=0,B=5,0>=V_i_1+3] 

* Chain [[44],46]: 1*s(13)+0
  with precondition: [V__NUM_NODES=1,B=5,C=1,0>=V_i_1] 

* Chain [[44],37]...: 2*s(13)+2
  with precondition: [V__NUM_NODES=1,B=5,0>=V_i_1+1] 

* Chain [[42],[41],46]: 2*s(17)+0
  with precondition: [B=5,V__NUM_NODES=C,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+2] 

* Chain [[42],[41],34]...: 3*s(17)+2
  with precondition: [B=5,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+3] 

* Chain [[42],46]: 1*s(20)+0
  with precondition: [B=5,V__NUM_NODES=C,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+1] 

* Chain [[42],43,[41],46]: 3*aux(6)+0
  with precondition: [B=5,V__NUM_NODES=C,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+3] 

* Chain [[42],43,[41],34]...: 4*aux(6)+2
  with precondition: [B=5,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+4] 

* Chain [[42],43,46]: 2*aux(6)+0
  with precondition: [B=5,V__NUM_NODES=C,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+2] 

* Chain [[42],43,34]...: 3*aux(6)+2
  with precondition: [B=5,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+3] 

* Chain [[42],36]...: 2*s(20)+2
  with precondition: [B=5,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+2] 

* Chain [[42],35]...: 2*s(20)+2
  with precondition: [B=5,0>=V__NUM_NODES+3,0>=V_j_1+1,V__NUM_NODES>=V_i_1+2] 

* Chain [[42],34]...: 2*s(20)+2
  with precondition: [B=5,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+2] 

* Chain [[41],46]: 1*s(17)+0
  with precondition: [B=5,V__NUM_NODES=C,0>=V__NUM_NODES+2,V_j_1>=1,V__NUM_NODES>=V_i_1+1] 

* Chain [[41],34]...: 2*s(17)+2
  with precondition: [B=5,0>=V__NUM_NODES+2,V_j_1>=1,V__NUM_NODES>=V_i_1+2] 

* Chain [[40],[39],46]: 2*s(27)+0
  with precondition: [B=5,V__NUM_NODES=C,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+2] 

* Chain [[40],[39],32]...: 3*s(27)+2
  with precondition: [B=5,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+3] 

* Chain [[40],46]: 1*s(30)+0
  with precondition: [B=5,V__NUM_NODES=C,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+1] 

* Chain [[40],43,[39],46]: 3*aux(6)+0
  with precondition: [B=5,V__NUM_NODES=C,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+3] 

* Chain [[40],43,[39],32]...: 4*aux(6)+2
  with precondition: [B=5,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+4] 

* Chain [[40],43,46]: 2*aux(6)+0
  with precondition: [B=5,V__NUM_NODES=C,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+2] 

* Chain [[40],43,32]...: 3*aux(6)+2
  with precondition: [B=5,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+3] 

* Chain [[40],36]...: 2*s(23)+2
  with precondition: [B=5,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+2] 

* Chain [[40],33]...: 2*s(30)+2
  with precondition: [B=5,0>=V_j_1+1,V__NUM_NODES>=3,V__NUM_NODES>=V_i_1+2] 

* Chain [[40],32]...: 2*s(30)+2
  with precondition: [B=5,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+2] 

* Chain [[39],46]: 1*s(27)+0
  with precondition: [B=5,V__NUM_NODES=C,V__NUM_NODES>=2,V_j_1>=1,V__NUM_NODES>=V_i_1+1] 

* Chain [[39],32]...: 2*s(27)+2
  with precondition: [B=5,V__NUM_NODES>=2,V_j_1>=1,V__NUM_NODES>=V_i_1+2] 

* Chain [46]: 0
  with precondition: [B=5,V__NUM_NODES=C,V_i_1>=V__NUM_NODES] 

* Chain [43,[45],46]: 2*aux(6)+0
  with precondition: [V__NUM_NODES+1=0,V_j_1=0,B=5,C+1=0,0>=V_i_1+3] 

* Chain [43,[45],38]...: 3*aux(6)+2
  with precondition: [V__NUM_NODES+1=0,V_j_1=0,B=5,0>=V_i_1+4] 

* Chain [43,[44],46]: 2*aux(6)+0
  with precondition: [V__NUM_NODES=1,V_j_1=0,B=5,C=1,0>=V_i_1+1] 

* Chain [43,[44],37]...: 3*aux(6)+2
  with precondition: [V__NUM_NODES=1,V_j_1=0,B=5,0>=V_i_1+2] 

* Chain [43,[41],46]: 2*aux(6)+0
  with precondition: [V_j_1=0,B=5,V__NUM_NODES=C,0>=V__NUM_NODES+2,V__NUM_NODES>=V_i_1+2] 

* Chain [43,[41],34]...: 3*aux(6)+2
  with precondition: [V_j_1=0,B=5,0>=V__NUM_NODES+2,V__NUM_NODES>=V_i_1+3] 

* Chain [43,[39],46]: 2*aux(6)+0
  with precondition: [V_j_1=0,B=5,V__NUM_NODES=C,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+2] 

* Chain [43,[39],32]...: 3*aux(6)+2
  with precondition: [V_j_1=0,B=5,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+3] 

* Chain [43,46]: 1*aux(6)+0
  with precondition: [V_j_1=0,B=5,V__NUM_NODES=V_i_1+1,V__NUM_NODES=C] 

* Chain [43,38]...: 2*aux(6)+2
  with precondition: [V__NUM_NODES+1=0,V_j_1=0,B=5,0>=V_i_1+3] 

* Chain [43,37]...: 2*aux(6)+2
  with precondition: [V__NUM_NODES=1,V_j_1=0,B=5,0>=V_i_1+1] 

* Chain [43,34]...: 2*aux(6)+2
  with precondition: [V_j_1=0,B=5,0>=V__NUM_NODES+2,V__NUM_NODES>=V_i_1+2] 

* Chain [43,32]...: 2*aux(6)+2
  with precondition: [V_j_1=0,B=5,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+2] 

* Chain [38]...: 1*s(10)+2
  with precondition: [V__NUM_NODES+1=0,B=5,0>=V_i_1+2] 

* Chain [37]...: 1*s(14)+2
  with precondition: [V__NUM_NODES=1,B=5,0>=V_i_1] 

* Chain [36]...: 1*s(23)+2
  with precondition: [V_j_1=0,B=5,V__NUM_NODES>=V_i_1+1] 

* Chain [35]...: 1*s(24)+2
  with precondition: [B=5,0>=V__NUM_NODES+2,0>=V_j_1+1,V__NUM_NODES>=V_i_1+1] 

* Chain [34]...: 1*s(21)+2
  with precondition: [B=5,0>=V__NUM_NODES+2,V_j_1>=1,V__NUM_NODES>=V_i_1+1] 

* Chain [33]...: 1*s(32)+2
  with precondition: [B=5,0>=V_j_1+1,V__NUM_NODES>=2,V__NUM_NODES>=V_i_1+1] 

* Chain [32]...: 1*s(31)+2
  with precondition: [B=5,V__NUM_NODES>=2,V_j_1>=1,V__NUM_NODES>=V_i_1+1] 


#### Cost of chains of loop_cont_eval_main_bb5_in(J,A,B,C,D):
* Chain [64]: 1*s(53)+1
  with precondition: [J=4,A+1=0,0>=C+2] 

* Chain [63]: 1*s(54)+1
  with precondition: [J=4,A=1,0>=C] 

* Chain [62]: 1*s(55)+1
  with precondition: [J=4,B=0,C+1=A] 

* Chain [61]: 2*s(56)+1
  with precondition: [J=4,B=0,0>=A+2,A>=C+2] 

* Chain [60]: 2*s(57)+1
  with precondition: [J=4,B=0,A>=2,A>=C+2] 

* Chain [59]: 1*s(58)+1
  with precondition: [J=4,0>=A+2,0>=B+1,A>=C+1] 

* Chain [58]: 1*s(59)+1
  with precondition: [J=4,0>=A+2,B>=1,A>=C+1] 

* Chain [57]: 1*s(60)+1
  with precondition: [J=4,0>=B+1,A>=2,A>=C+1] 

* Chain [56]: 1*s(61)+1
  with precondition: [J=4,A>=2,B>=1,A>=C+1] 

* Chain [55]: 1
  with precondition: [J=4,C>=A] 

* Chain [54]...: 1*aux(17)+0
  with precondition: [J=4,A+1=0,0>=C+2] 

* Chain [53]...: 1*aux(18)+0
  with precondition: [J=4,A=1,0>=C] 

* Chain [52]...: 1*aux(19)+0
  with precondition: [J=4,B=0,A>=C+1] 

* Chain [51]...: 1*aux(20)+0
  with precondition: [J=4,B=0,A>=2,A>=C+2] 

* Chain [50]...: 1*aux(21)+0
  with precondition: [J=4,0>=A+2,0>=B+1,A>=C+1] 

* Chain [49]...: 1*aux(22)+0
  with precondition: [J=4,0>=A+2,B>=1,A>=C+1] 

* Chain [48]...: 1*aux(23)+0
  with precondition: [J=4,0>=B+1,A>=2,A>=C+1] 

* Chain [47]...: 1*aux(24)+0
  with precondition: [J=4,A>=2,B>=1,A>=C+1] 


#### Cost of chains of eval_main_41(V__NUM_NODES,B):
* Chain [68]: 2
  with precondition: [V__NUM_NODES=0] 

* Chain [67]: 2
  with precondition: [0>=V__NUM_NODES+1] 

* Chain [66]: 1*aux(25)+0
  with precondition: [V__NUM_NODES>=1] 

* Chain [65]...: 1*aux(26)+0
  with precondition: [V__NUM_NODES>=1] 


#### Cost of chains of eval_main_5(V__NUM_NODES,B):
* Chain [70]: 1*aux(27)+0
  with precondition: [] 

* Chain [69]...: 1*s(106)+0
  with precondition: [V__NUM_NODES>=1] 


#### Cost of chains of eval_main_bb0_in(V__NUM_NODES,B):
* Chain [72]: 1*aux(28)+0
  with precondition: [] 

* Chain [71]...: 1*s(108)+0
  with precondition: [V__NUM_NODES>=1] 


#### Cost of chains of eval_main_start(V_argc,V__NUM_NODES,B):
* Chain [74]: 1*s(109)+0
  with precondition: [] 

* Chain [73]...: 1*s(110)+0
  with precondition: [V__NUM_NODES>=1] 


Closed-form bounds of eval_main_start(V_argc,V__NUM_NODES,B): 
-------------------------------------
* Chain [74] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [73]... with precondition: [V__NUM_NODES>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_main_start(V_argc,V__NUM_NODES,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 246 ms.
* Invariants computed in 824 ms.
   - Backward Invariants 432 ms.
   - Transitive Invariants 73 ms.
* Refinement performed in 967 ms.
* Termination proved in 66 ms.
* Upper bounds computed in 710 ms.
   - Equation cost structures 256 ms.
   - Phase cost structures 144 ms.
   - Chain cost structures 274 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 3084 ms.

