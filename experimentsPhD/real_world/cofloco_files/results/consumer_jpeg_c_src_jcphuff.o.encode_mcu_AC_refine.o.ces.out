Warning: Ignored call to eval_encode_mcu_AC_refine_stop/1 in equation eval_encode_mcu_AC_refine_bb24_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_encode_mcu_AC_refine_bb4_in/9]
1. recursive  : [eval_encode_mcu_AC_refine_36/15,eval_encode_mcu_AC_refine_37/15,eval_encode_mcu_AC_refine_38/16,eval_encode_mcu_AC_refine_39/16,eval_encode_mcu_AC_refine_40/17,eval_encode_mcu_AC_refine_41/17,eval_encode_mcu_AC_refine_bb10_in/15]
2. recursive  : [eval_encode_mcu_AC_refine_48/8,eval_encode_mcu_AC_refine_49/8,eval_encode_mcu_AC_refine_52/10,eval_encode_mcu_AC_refine_53/10,eval_encode_mcu_AC_refine_59/11,eval_encode_mcu_AC_refine_60/11,eval_encode_mcu_AC_refine_61/11,eval_encode_mcu_AC_refine_bb15_in/8,eval_encode_mcu_AC_refine_bb7_in/6,loop_cont_eval_encode_mcu_AC_refine_bb10_in/9]
3. non_recursive  : [eval_encode_mcu_AC_refine_bb24_in/1]
4. non_recursive  : [eval_encode_mcu_AC_refine_bb23_in/1]
5. non_recursive  : [eval_encode_mcu_AC_refine_bb20_in/1]
6. non_recursive  : [eval_encode_mcu_AC_refine_75/1]
7. non_recursive  : [eval_encode_mcu_AC_refine_74/1]
8. non_recursive  : [eval_encode_mcu_AC_refine_bb19_in/1]
9. non_recursive  : [loop_cont_eval_encode_mcu_AC_refine_bb7_in/2]
10. non_recursive  : [loop_cont_eval_encode_mcu_AC_refine_bb4_in/7]
11. non_recursive  : [eval_encode_mcu_AC_refine_bb3_in/2]
12. non_recursive  : [eval_encode_mcu_AC_refine_11/2]
13. non_recursive  : [eval_encode_mcu_AC_refine_10/3]
14. non_recursive  : [eval_encode_mcu_AC_refine_bb0_in/1]
15. non_recursive  : [eval_encode_mcu_AC_refine_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb4_in/9
1. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb10_in/15
2. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb7_in/6
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb20_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into loop_cont_eval_encode_mcu_AC_refine_bb7_in/2
10. SCC is partially evaluated into loop_cont_eval_encode_mcu_AC_refine_bb4_in/7
11. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb3_in/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_encode_mcu_AC_refine_bb0_in/1
15. SCC is partially evaluated into eval_encode_mcu_AC_refine_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_encode_mcu_AC_refine_bb4_in/9 
* CE 7 is refined into CE [22] 
* CE 5 is refined into CE [23] 
* CE 6 is refined into CE [24] 


#### Refined cost equations eval_encode_mcu_AC_refine_bb4_in/9 
* CE 22: eval_encode_mcu_AC_refine_bb4_in(A,B,C,D,A,B,E,F,G) = 0
     [C>=A+1,G=0,E=0,D=6] 
* CE 23: eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G) = 1+ eval_encode_mcu_AC_refine_bb4_in(V_4,V_k_0,H,B,C,D,E,F,G)
     [V_4>=V_k_0,V_k_0+1=H] 
* CE 24: eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G) = 1+ eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,H,B,C,D,E,F,G)
     [V_4>=V_k_0,V_k_0+1=H] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb4_in/9 
* CEs [23] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [22] --> Loop 22 

#### Loops of eval_encode_mcu_AC_refine_bb4_in/9 
* Loop 20: eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G)->  eval_encode_mcu_AC_refine_bb4_in(V_4,V_k_0,A',B,C,D,E,F,G)
                  [V_4>=V_k_0,V_k_0+1=A'] 
* Loop 21: eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G)->  eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0',B,C,D,E,F,G)
                  [V_4>=V_k_0,V_k_0+1=V_k_0'] 
* Loop 22: eval_encode_mcu_AC_refine_bb4_in(A,B,C,D,A,B,E,F,G) [C>=A+1,G=0,E=0,D=6] 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G) 
* RF of phase [20,21]: [V_4-V_k_0+1]

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G) 
* Partial RF of phase [20,21]:
  - RF of loop [20:1,21:1]:
    V_4-V_k_0+1


### Resulting Chains:eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G) 
* [[20,21],22]
* [22]


### Merging Chains  eval_encode_mcu_AC_refine_bb4_in/9 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[20,21]]] --> 2 


### Specialization of cost equations eval_encode_mcu_AC_refine_bb10_in/15 
* CE 20 is refined into CE [25] 
* CE 19 is refined into CE [26] 
* CE 18 is refined into CE [27] 
* CE 17 is refined into CE [28] 
* CE 16 is refined into CE [29] 


#### Refined cost equations eval_encode_mcu_AC_refine_bb10_in/15 
* CE 25: eval_encode_mcu_AC_refine_bb10_in(A,B,C,D,E,C,E,F,A,B,C,D,E,C,E) = 0
     [A>=D,D>=B+1,F=3] 
* CE 26: eval_encode_mcu_AC_refine_bb10_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) = 0
     [E>=G,A>=D,15>=G,H=3] 
* CE 27: eval_encode_mcu_AC_refine_bb10_in(A,B,C,D,E,C,E,F,A,B,C,D,E,G,E) = 0
     [A>=D,D>=B+1,C+1=G,F=2] 
* CE 28: eval_encode_mcu_AC_refine_bb10_in(A,B,C,D,E,F,G,H,A,B,C,D,E,I,G) = 0
     [E>=G,A>=D,15>=G,I=F+1,H=2] 
* CE 29: eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1,V_r_1,B,C,D,E,F,G,H,I) = 1+ eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,J,K,B,C,D,E,F,G,H,I)
     [V_r_0>=V_r_1,V_EOB_0>=V_k_1,V_4>=V_k_1,B>=2,V_r_1>=16,3>=B,V_r_1=K+16,J=0] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb10_in/15 
* CEs [29] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [25] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [27] --> Loop 27 

#### Loops of eval_encode_mcu_AC_refine_bb10_in/15 
* Loop 23: eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1,V_r_1,B,C,D,E,F,G,H,I)->  eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1',V_r_1',B,C,D,E,F,G,H,I)
                  [V_r_0>=V_r_1,V_EOB_0>=V_k_1,V_4>=V_k_1,B>=2,V_r_1>=16,3>=B,V_r_1=V_r_1'+16,V_BR_1'=0] 
* Loop 24: eval_encode_mcu_AC_refine_bb10_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,G) [E>=G,A>=D,15>=G,H=3] 
* Loop 25: eval_encode_mcu_AC_refine_bb10_in(A,B,C,D,E,C,E,F,A,B,C,D,E,C,E) [A>=D,D>=B+1,F=3] 
* Loop 26: eval_encode_mcu_AC_refine_bb10_in(A,B,C,D,E,F,G,H,A,B,C,D,E,I,G) [E>=G,A>=D,15>=G,F+1=I,H=2] 
* Loop 27: eval_encode_mcu_AC_refine_bb10_in(A,B,C,D,E,C,E,F,A,B,C,D,E,G,E) [A>=D,D>=B+1,C+1=G,F=2] 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1,V_r_1,B,C,D,E,F,G,H,I) 
* RF of phase [23]: [V_r_1-15]

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1,V_r_1,B,C,D,E,F,G,H,I) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V_r_1-15


### Resulting Chains:eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1,V_r_1,B,C,D,E,F,G,H,I) 
* [[23],26]
* [[23],24]
* [27]
* [26]
* [25]
* [24]


### Merging Chains  eval_encode_mcu_AC_refine_bb10_in/15 into  External patterns of execution 
* [[26,[23]]] --> 1 
* [[26]] --> 2 
* [[27]] --> 3 
* [[24,[23]]] --> 4 
* [[24]] --> 5 
* [[25]] --> 6 


### Specialization of cost equations eval_encode_mcu_AC_refine_bb7_in/6 
* CE 13 is refined into CE [30] 
* CE 12 is refined into CE [31] 
* CE 11 is refined into CE [32] 
* CE 9 is refined into CE [33,34,35] 
* CE 10 is refined into CE [36,37,38] 


#### Refined cost equations eval_encode_mcu_AC_refine_bb7_in/6 
* CE 30: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) = 0
     [V_k_1>=V_4+1,B=5] 
* CE 31: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) = 0
     [V_k_1>=V_4+1,B=4] 
* CE 32: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) = 1+ eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,C,D,B)
     [V_4>=V_k_1,V_k_1+1=C,D=V_r_0+1] 
* CE 33: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) = 2+ eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_0,V_r_0,C,V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,D,E):4+ eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,F,G,H,B)
     [V_r_0>=E+16,V_EOB_0>=V_k_1,V_4>=V_k_1,E>=0,15>=E,V_k_1+1=G,H=0,F=0,D=0,C=3] 
* CE 34: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) = 2+ eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_0,V_r_0,C,V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_0,V_r_0):5+ eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,D,E,F,B)
     [V_4>=V_k_1,15>=V_r_0,V_k_1+1=E,F=0,D=0,C=3] 
* CE 35: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) = 2+ eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_0,V_r_0,C,V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_0,V_r_0):6+ eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,D,E,F,B)
     [V_4>=V_k_1,V_k_1>=V_EOB_0+1,V_k_1+1=E,F=0,D=0,C=3] 
* CE 36: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) = 2+ eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_0,V_r_0,C,V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,D,E):1+ eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,F,G,E,B)
     [V_r_0>=E+16,V_EOB_0>=V_k_1,V_4>=V_k_1,E>=0,15>=E,V_k_1+1=G,F=1,D=1,C=2] 
* CE 37: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) = 2+ eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_0,V_r_0,C,V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,D,V_r_0):2+ eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,E,F,V_r_0,B)
     [V_4>=V_k_1,15>=V_r_0,V_k_1+1=F,V_BR_0+1=E,V_BR_0+1=D,C=2] 
* CE 38: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) = 2+ eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_0,V_r_0,C,V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,D,V_r_0):3+ eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,E,F,V_r_0,B)
     [V_4>=V_k_1,V_k_1>=V_EOB_0+1,V_k_1+1=F,V_BR_0+1=E,V_BR_0+1=D,C=2] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb7_in/6 
* CEs [32] --> Loop 28 
* CEs [38] --> Loop 29 
* CEs [37] --> Loop 30 
* CEs [36] --> Loop 31 
* CEs [35] --> Loop 32 
* CEs [33] --> Loop 33 
* CEs [34] --> Loop 34 
* CEs [30] --> Loop 35 
* CEs [31] --> Loop 36 

#### Loops of eval_encode_mcu_AC_refine_bb7_in/6 
* Loop 28: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1',V_r_0',B)
                  [V_4>=V_k_1,V_r_0+1=V_r_0',V_k_1+1=V_k_1'] 
* Loop 29: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0',V_k_1',V_r_0,B)
                  [V_4>=V_k_1,V_k_1>=V_EOB_0+1,V_k_1+1=V_k_1',V_BR_0+1=V_BR_0'] 
* Loop 30: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0',V_k_1',V_r_0,B)
                  [V_4>=V_k_1,15>=V_r_0,V_k_1+1=V_k_1',V_BR_0+1=V_BR_0'] 
* Loop 31: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0',V_k_1',V_r_0',B)
                  [V_r_0>=V_r_0'+16,V_EOB_0>=V_k_1,V_4>=V_k_1,V_r_0'>=0,15>=V_r_0',V_k_1+1=V_k_1',V_BR_0'=1] 
* Loop 32: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0',V_k_1',V_r_0',B)
                  [V_4>=V_k_1,V_k_1>=V_EOB_0+1,V_k_1+1=V_k_1',V_r_0'=0,V_BR_0'=0] 
* Loop 33: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0',V_k_1',V_r_0',B)
                  [V_EOB_0>=V_k_1,V_4>=V_k_1,V_r_0>=16,V_k_1+1=V_k_1',V_r_0'=0,V_BR_0'=0] 
* Loop 34: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B)->  eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0',V_k_1',V_r_0',B)
                  [V_4>=V_k_1,15>=V_r_0,V_k_1+1=V_k_1',V_r_0'=0,V_BR_0'=0] 
* Loop 35: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) [V_k_1>=V_4+1,B=5] 
* Loop 36: eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) [V_k_1>=V_4+1,B=4] 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) 
* RF of phase [28,29,30,31,32,33,34]: [V_4-V_k_1+1]

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) 
* Partial RF of phase [28,29,30,31,32,33,34]:
  - RF of loop [28:1,29:1,30:1,31:1,32:1,33:1,34:1]:
    V_4-V_k_1+1
  - RF of loop [31:1,33:1]:
    V_EOB_0-V_k_1+1
    V_r_0/16-15/16 depends on loops [28:1,32:1,34:1] 


### Resulting Chains:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) 
* [[28,29,30,31,32,33,34],36]
* [[28,29,30,31,32,33,34],35]
* [36]
* [35]


### Merging Chains  eval_encode_mcu_AC_refine_bb7_in/6 into  External patterns of execution 
* [[36]] --> 1 
* [[36,[28,29,30,31,32,33,34]]] --> 2 
* [[35]] --> 3 
* [[35,[28,29,30,31,32,33,34]]] --> 4 


### Specialization of cost equations eval_encode_mcu_AC_refine_bb20_in/1 
* CE 21 is refined into CE [39] 


#### Refined cost equations eval_encode_mcu_AC_refine_bb20_in/1 
* CE 39: eval_encode_mcu_AC_refine_bb20_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb20_in/1 
* CEs [39] --> Loop 37 

#### Loops of eval_encode_mcu_AC_refine_bb20_in/1 
* Loop 37: eval_encode_mcu_AC_refine_bb20_in(B) [] 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb20_in(B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb20_in(B) 


### Resulting Chains:eval_encode_mcu_AC_refine_bb20_in(B) 
* [37]


### Merging Chains  eval_encode_mcu_AC_refine_bb20_in/1 into  External patterns of execution 
* [[37]] --> 1 


### Specialization of cost equations loop_cont_eval_encode_mcu_AC_refine_bb7_in/2 
* CE 15 is refined into CE [40] 
* CE 14 is refined into CE [41] 


#### Refined cost equations loop_cont_eval_encode_mcu_AC_refine_bb7_in/2 
* CE 40: loop_cont_eval_encode_mcu_AC_refine_bb7_in(D,A) = 0+ eval_encode_mcu_AC_refine_bb20_in(A):1
     [D=5] 
* CE 41: loop_cont_eval_encode_mcu_AC_refine_bb7_in(D,A) = 0+ eval_encode_mcu_AC_refine_bb20_in(A):1
     [D=4] 

### Cost equations --> "Loop" of loop_cont_eval_encode_mcu_AC_refine_bb7_in/2 
* CEs [40] --> Loop 38 
* CEs [41] --> Loop 39 

#### Loops of loop_cont_eval_encode_mcu_AC_refine_bb7_in/2 
* Loop 38: loop_cont_eval_encode_mcu_AC_refine_bb7_in(D,A) [D=5] 
* Loop 39: loop_cont_eval_encode_mcu_AC_refine_bb7_in(D,A) [D=4] 

### Ranking functions of CR loop_cont_eval_encode_mcu_AC_refine_bb7_in(D,A) 

#### Partial ranking functions of CR loop_cont_eval_encode_mcu_AC_refine_bb7_in(D,A) 


### Resulting Chains:loop_cont_eval_encode_mcu_AC_refine_bb7_in(D,A) 
* [39]
* [38]


### Merging Chains  loop_cont_eval_encode_mcu_AC_refine_bb7_in/2 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations loop_cont_eval_encode_mcu_AC_refine_bb4_in/7 
* CE 8 is refined into CE [42,43,44,45] 


#### Refined cost equations loop_cont_eval_encode_mcu_AC_refine_bb4_in/7 
* CE 42: loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F) = 1+ eval_encode_mcu_AC_refine_bb7_in(A,B,C,D,E,K):1+ loop_cont_eval_encode_mcu_AC_refine_bb7_in(L,F):1
     [D>=A+1,L=4,K=4,J=6] 
* CE 43: loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F) = 1+ eval_encode_mcu_AC_refine_bb7_in(A,B,C,D,E,K):2+ loop_cont_eval_encode_mcu_AC_refine_bb7_in(L,F):1
     [A>=D,L=4,K=4,J=6] 
* CE 44: loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F) = 1+ eval_encode_mcu_AC_refine_bb7_in(A,B,C,D,E,K):3+ loop_cont_eval_encode_mcu_AC_refine_bb7_in(L,F):2
     [D>=A+1,L=5,K=5,J=6] 
* CE 45: loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F) = 1+ eval_encode_mcu_AC_refine_bb7_in(A,B,C,D,E,K):4+ loop_cont_eval_encode_mcu_AC_refine_bb7_in(L,F):2
     [A>=D,L=5,K=5,J=6] 

### Cost equations --> "Loop" of loop_cont_eval_encode_mcu_AC_refine_bb4_in/7 
* CEs [43,45] --> Loop 40 
* CEs [42,44] --> Loop 41 

#### Loops of loop_cont_eval_encode_mcu_AC_refine_bb4_in/7 
* Loop 40: loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F) [A>=D,J=6] 
* Loop 41: loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F) [D>=A+1,J=6] 

### Ranking functions of CR loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F) 

#### Partial ranking functions of CR loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F) 


### Resulting Chains:loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F) 
* [41]
* [40]


### Merging Chains  loop_cont_eval_encode_mcu_AC_refine_bb4_in/7 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations eval_encode_mcu_AC_refine_bb3_in/2 
* CE 4 is refined into CE [46,47,48,49] 


#### Refined cost equations eval_encode_mcu_AC_refine_bb3_in/2 
* CE 46: eval_encode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_refine_bb4_in(V_4,C,D,E,V_4,F,G,H,I):1+ loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,V_4,K,L,H,M,B):1
     [H>=V_4+1,D>=V_4+1,M=0,L=0,K=0,J=6,I=0,G=0,F=0,E=6,C=0] 
* CE 47: eval_encode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_refine_bb4_in(V_4,C,D,E,V_4,F,G,H,I):1+ loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,V_4,K,L,H,M,B):2
     [V_4>=H,D>=V_4+1,M=0,L=0,K=0,J=6,I=0,G=0,F=0,E=6,C=0] 
* CE 48: eval_encode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_refine_bb4_in(V_4,C,D,E,V_4,F,G,H,I):2+ loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,V_4,F,K,H,L,B):1
     [H>=V_4+1,V_4>=D,L=0,K=0,J=6,I=0,G=0,E=6,C=0] 
* CE 49: eval_encode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_encode_mcu_AC_refine_bb4_in(V_4,C,D,E,V_4,F,G,H,I):2+ loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,V_4,F,K,H,L,B):2
     [V_4>=H,V_4>=D,L=0,K=0,J=6,I=0,G=0,E=6,C=0] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb3_in/2 
* CEs [46,47,48,49] --> Loop 42 

#### Loops of eval_encode_mcu_AC_refine_bb3_in/2 
* Loop 42: eval_encode_mcu_AC_refine_bb3_in(V_4,B) [] 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb3_in(V_4,B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb3_in(V_4,B) 


### Resulting Chains:eval_encode_mcu_AC_refine_bb3_in(V_4,B) 
* [42]


### Merging Chains  eval_encode_mcu_AC_refine_bb3_in/2 into  External patterns of execution 
* [[42]] --> 1 


### Specialization of cost equations eval_encode_mcu_AC_refine_bb0_in/1 
* CE 3 is refined into CE [50] 


#### Refined cost equations eval_encode_mcu_AC_refine_bb0_in/1 
* CE 50: eval_encode_mcu_AC_refine_bb0_in(B) = 0+ eval_encode_mcu_AC_refine_bb3_in(C,B):1
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_bb0_in/1 
* CEs [50] --> Loop 43 

#### Loops of eval_encode_mcu_AC_refine_bb0_in/1 
* Loop 43: eval_encode_mcu_AC_refine_bb0_in(B) [] 

### Ranking functions of CR eval_encode_mcu_AC_refine_bb0_in(B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_bb0_in(B) 


### Resulting Chains:eval_encode_mcu_AC_refine_bb0_in(B) 
* [43]


### Merging Chains  eval_encode_mcu_AC_refine_bb0_in/1 into  External patterns of execution 
* [[43]] --> 1 


### Specialization of cost equations eval_encode_mcu_AC_refine_start/1 
* CE 2 is refined into CE [51] 


#### Refined cost equations eval_encode_mcu_AC_refine_start/1 
* CE 51: eval_encode_mcu_AC_refine_start(B) = 0+ eval_encode_mcu_AC_refine_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_encode_mcu_AC_refine_start/1 
* CEs [51] --> Loop 44 

#### Loops of eval_encode_mcu_AC_refine_start/1 
* Loop 44: eval_encode_mcu_AC_refine_start(B) [] 

### Ranking functions of CR eval_encode_mcu_AC_refine_start(B) 

#### Partial ranking functions of CR eval_encode_mcu_AC_refine_start(B) 


### Resulting Chains:eval_encode_mcu_AC_refine_start(B) 
* [44]


### Merging Chains  eval_encode_mcu_AC_refine_start/1 into  External patterns of execution 
* [[44]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [20,21] 

 * loop 20:eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G) -> [eval_encode_mcu_AC_refine_bb4_in(V_4',V_EOB_0',V_k_0',B',C',D',E',F',G')] 
1
 * loop 21:eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G) -> [eval_encode_mcu_AC_refine_bb4_in(V_4',V_EOB_0',V_k_0',B',C',D',E',F',G')] 
1
#### Cost of phase [20,21]:eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G) -> [eval_encode_mcu_AC_refine_bb4_in(V_4',V_EOB_0',V_k_0',B',C',D',E',F',G')] 
2*it(20)+0
  Such that:aux(1) =< V_4-V_k_0+1
aux(2) =< V_4-V_k_0-V_4'+V_k_0'
it(20) =< aux(1)
it(20) =< aux(2)

#### Cost of chains of eval_encode_mcu_AC_refine_bb4_in(V_4,V_EOB_0,V_k_0,B,C,D,E,F,G):
* Chain [[20,21],22]: 2*it(20)+0
  Such that:aux(3) =< V_4-V_k_0+1
it(20) =< aux(3)

  with precondition: [B=6,E=0,G=0,V_4=C,V_4>=V_k_0] 

* Chain [22]: 0
  with precondition: [B=6,E=0,G=0,D=V_EOB_0,V_4=C,V_k_0>=V_4+1] 


#### Cost of loops [23] 

 * loop 23:eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1,V_r_1,B,C,D,E,F,G,H,I) -> [eval_encode_mcu_AC_refine_bb10_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',V_BR_1',V_r_1',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [23]:eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1,V_r_1,B,C,D,E,F,G,H,I) -> [eval_encode_mcu_AC_refine_bb10_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',V_BR_1',V_r_1',B',C',D',E',F',G',H',I')] 
1*it(23)+0
  Such that:it(23) =< V_r_1
it(23) =< V_r_1-V_r_1'

#### Cost of phase [23]:eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1,V_r_1,B,C,D,E,F,G,H,I) -> [eval_encode_mcu_AC_refine_bb10_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',V_BR_1',V_r_1',B',C',D',E',F',G',H',I')] 
1*it(23)+0
  Such that:it(23) =< V_r_1
it(23) =< V_r_1-V_r_1'

#### Cost of chains of eval_encode_mcu_AC_refine_bb10_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,V_BR_1,V_r_1,B,C,D,E,F,G,H,I):
* Chain [[23],26]: 1*it(23)+0
  Such that:it(23) =< V_r_1-I

  with precondition: [B=2,H=1,V_4=C,V_EOB_0=D,V_BR_0=E,V_k_1=F,V_r_0=G,15>=I,I>=0,V_4>=V_k_1,V_EOB_0>=V_k_1,V_r_0>=V_r_1,V_r_1>=I+16] 

* Chain [[23],24]: 1*it(23)+0
  Such that:it(23) =< V_r_1-I

  with precondition: [B=3,H=0,V_4=C,V_EOB_0=D,V_BR_0=E,V_k_1=F,V_r_0=G,15>=I,I>=0,V_4>=V_k_1,V_EOB_0>=V_k_1,V_r_0>=V_r_1,V_r_1>=I+16] 

* Chain [27]: 0
  with precondition: [B=2,V_BR_1=V_BR_0,V_r_1=V_r_0,V_4=C,V_EOB_0=D,V_BR_1=E,V_k_1=F,V_r_1=G,V_BR_1+1=H,V_r_1=I,V_k_1>=V_EOB_0+1,V_4>=V_k_1] 

* Chain [26]: 0
  with precondition: [B=2,D=V_EOB_0,E=V_BR_0,H=V_BR_1+1,V_4=C,V_k_1=F,V_r_0=G,V_r_1=I,15>=V_r_1,V_4>=V_k_1,V_r_0>=V_r_1] 

* Chain [25]: 0
  with precondition: [B=3,V_BR_1=V_BR_0,V_r_1=V_r_0,V_4=C,V_EOB_0=D,V_BR_1=E,V_k_1=F,V_r_1=G,V_BR_1=H,V_r_1=I,V_k_1>=V_EOB_0+1,V_4>=V_k_1] 

* Chain [24]: 0
  with precondition: [B=3,D=V_EOB_0,E=V_BR_0,H=V_BR_1,V_4=C,V_k_1=F,V_r_0=G,V_r_1=I,15>=V_r_1,V_4>=V_k_1,V_r_0>=V_r_1] 


#### Cost of loops [28,29,30,31,32,33,34] 

 * loop 28:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb7_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',B')] 
1
 * loop 29:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb7_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',B')] 
2
 * loop 30:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb7_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',B')] 
2
 * loop 31:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb7_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_r_0-V_r_0'

 * loop 32:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb7_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',B')] 
2
 * loop 33:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb7_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',B')] 
1*s(4)+2
  Such that:s(4) =< V_r_0

 * loop 34:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb7_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',B')] 
2
#### Cost of phase [28,29,30,31,32,33,34]:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb7_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',B')] 
5*it(28)+2*it(31)+4*it(32)+2*it(33)+1*s(5)+1*s(6)+0
  Such that:it(31) =< V_EOB_0-V_k_1+1
aux(6) =< V_r_0/16
aux(17) =< V_4-V_k_1+1
aux(18) =< V_4-V_k_1-V_4'+V_k_1'
aux(19) =< V_EOB_0-V_k_1-V_EOB_0'+V_k_1'
aux(20) =< V_r_0
aux(4) =< aux(17)
it(28) =< aux(17)
it(31) =< aux(17)
it(32) =< aux(17)
it(33) =< aux(17)
aux(4) =< aux(18)
it(28) =< aux(18)
it(31) =< aux(18)
it(32) =< aux(18)
it(33) =< aux(18)
it(31) =< aux(19)
it(32) =< aux(19)
it(33) =< aux(19)
aux(10) =< max([aux(20),0,0])+it(28)
s(5) =< it(28)+aux(20)
s(6) =< it(28)+aux(20)
it(33) =< it(28)+aux(20)
it(31) =< aux(4)+aux(4)+it(28)* (1/16)+aux(6)
it(33) =< aux(4)+aux(4)+it(28)* (1/16)+aux(6)
aux(15) =< aux(10)
s(5) =< it(31)*aux(10)
s(6) =< it(33)*aux(15)

#### Cost of phase [28,29,30,31,32,33,34]:eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B) -> [eval_encode_mcu_AC_refine_bb7_in(V_4',V_EOB_0',V_BR_0',V_k_1',V_r_0',B')] 
5*it(28)+2*it(31)+4*it(32)+2*it(33)+1*s(5)+1*s(6)+0
  Such that:it(31) =< V_EOB_0-V_k_1+1
aux(6) =< V_r_0/16
aux(17) =< V_4-V_k_1+1
aux(18) =< V_4-V_k_1-V_4'+V_k_1'
aux(19) =< V_EOB_0-V_k_1-V_EOB_0'+V_k_1'
aux(20) =< V_r_0
aux(4) =< aux(17)
it(28) =< aux(17)
it(31) =< aux(17)
it(32) =< aux(17)
it(33) =< aux(17)
aux(4) =< aux(18)
it(28) =< aux(18)
it(31) =< aux(18)
it(32) =< aux(18)
it(33) =< aux(18)
it(31) =< aux(19)
it(32) =< aux(19)
it(33) =< aux(19)
aux(10) =< max([aux(20),0,0])+it(28)
s(5) =< it(28)+aux(20)
s(6) =< it(28)+aux(20)
it(33) =< it(28)+aux(20)
it(31) =< aux(4)+aux(4)+it(28)* (1/16)+aux(6)
it(33) =< aux(4)+aux(4)+it(28)* (1/16)+aux(6)
aux(15) =< aux(10)
s(5) =< it(31)*aux(10)
s(6) =< it(33)*aux(15)

#### Cost of chains of eval_encode_mcu_AC_refine_bb7_in(V_4,V_EOB_0,V_BR_0,V_k_1,V_r_0,B):
* Chain [[28,29,30,31,32,33,34],36]: 9*it(28)+2*it(31)+2*it(33)+1*s(5)+1*s(6)+0
  Such that:it(31) =< V_EOB_0-V_k_1+1
aux(20) =< V_r_0
aux(6) =< V_r_0/16
aux(21) =< V_4-V_k_1+1
it(28) =< aux(21)
it(31) =< aux(21)
it(33) =< aux(21)
aux(10) =< max([aux(20),0,0])+it(28)
s(5) =< it(28)+aux(20)
s(6) =< it(28)+aux(20)
it(33) =< it(28)+aux(20)
it(31) =< aux(21)+aux(21)+it(28)* (1/16)+aux(6)
it(33) =< aux(21)+aux(21)+it(28)* (1/16)+aux(6)
aux(15) =< aux(10)
s(5) =< it(31)*aux(10)
s(6) =< it(33)*aux(15)

  with precondition: [B=4,V_4>=V_k_1] 

* Chain [[28,29,30,31,32,33,34],35]: 9*it(28)+2*it(31)+2*it(33)+1*s(5)+1*s(6)+0
  Such that:it(31) =< V_EOB_0-V_k_1+1
aux(20) =< V_r_0
aux(6) =< V_r_0/16
aux(22) =< V_4-V_k_1+1
it(28) =< aux(22)
it(31) =< aux(22)
it(33) =< aux(22)
aux(10) =< max([aux(20),0,0])+it(28)
s(5) =< it(28)+aux(20)
s(6) =< it(28)+aux(20)
it(33) =< it(28)+aux(20)
it(31) =< aux(22)+aux(22)+it(28)* (1/16)+aux(6)
it(33) =< aux(22)+aux(22)+it(28)* (1/16)+aux(6)
aux(15) =< aux(10)
s(5) =< it(31)*aux(10)
s(6) =< it(33)*aux(15)

  with precondition: [B=5,V_4>=V_k_1] 

* Chain [36]: 0
  with precondition: [B=4,V_k_1>=V_4+1] 

* Chain [35]: 0
  with precondition: [B=5,V_k_1>=V_4+1] 


#### Cost of chains of eval_encode_mcu_AC_refine_bb20_in(B):
* Chain [37]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_encode_mcu_AC_refine_bb7_in(D,A):
* Chain [39]: 0
  with precondition: [D=4] 

* Chain [38]: 0
  with precondition: [D=5] 


#### Cost of chains of loop_cont_eval_encode_mcu_AC_refine_bb4_in(J,A,B,C,D,E,F):
* Chain [41]: 1
  with precondition: [J=6,D>=A+1] 

* Chain [40]: 4*s(7)+18*s(11)+4*s(12)+2*s(14)+2*s(15)+1
  Such that:aux(23) =< A-D+1
aux(24) =< B-D+1
aux(25) =< E
aux(26) =< E/16
s(7) =< aux(24)
s(11) =< aux(23)
s(7) =< aux(23)
s(12) =< aux(23)
s(13) =< max([aux(25),0,0])+s(11)
s(14) =< s(11)+aux(25)
s(15) =< s(11)+aux(25)
s(12) =< s(11)+aux(25)
s(7) =< aux(23)+aux(23)+s(11)* (1/16)+aux(26)
s(12) =< aux(23)+aux(23)+s(11)* (1/16)+aux(26)
s(16) =< s(13)
s(14) =< s(7)*s(13)
s(15) =< s(12)*s(16)

  with precondition: [J=6,A>=D] 


#### Cost of chains of eval_encode_mcu_AC_refine_bb3_in(V_4,B):
* Chain [42]: 1*aux(29)+0
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_AC_refine_bb0_in(B):
* Chain [43]: 1*s(53)+0
  with precondition: [] 


#### Cost of chains of eval_encode_mcu_AC_refine_start(B):
* Chain [44]: 1*s(54)+0
  with precondition: [] 


Closed-form bounds of eval_encode_mcu_AC_refine_start(B): 
-------------------------------------
* Chain [44] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_encode_mcu_AC_refine_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 72 ms.
* Invariants computed in 86 ms.
   - Backward Invariants 45 ms.
   - Transitive Invariants 18 ms.
* Refinement performed in 154 ms.
* Termination proved in 20 ms.
* Upper bounds computed in 154 ms.
   - Equation cost structures 49 ms.
   - Phase cost structures 91 ms.
   - Chain cost structures 28 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 559 ms.

