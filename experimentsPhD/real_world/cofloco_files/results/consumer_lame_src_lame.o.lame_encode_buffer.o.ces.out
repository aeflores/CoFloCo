Warning: Ignored call to eval_lame_encode_buffer_stop/1 in equation eval_lame_encode_buffer_104/1 
Warning: Ignored call to eval_lame_encode_buffer_stop/1 in equation eval_lame_encode_buffer_106/1 
Warning: Ignored call to eval_lame_encode_buffer_stop/1 in equation eval_lame_encode_buffer_108/1 
Warning: Ignored call to eval_lame_encode_buffer_stop/1 in equation eval_lame_encode_buffer_bb29_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_lame_encode_buffer_108/1]
1. non_recursive  : [eval_lame_encode_buffer_107/4]
2. recursive  : [eval_lame_encode_buffer_47/18,eval_lame_encode_buffer_48/19,eval_lame_encode_buffer_51/18,eval_lame_encode_buffer_52/19,eval_lame_encode_buffer_bb13_in/17,eval_lame_encode_buffer_bb17_in/22]
3. recursive  : [eval_lame_encode_buffer_bb24_in/22]
4. recursive  : [eval_lame_encode_buffer_bb22_in/16,loop_cont_eval_lame_encode_buffer_bb24_in/17]
5. recursive  : [eval_lame_encode_buffer_73/13,eval_lame_encode_buffer_74/13,eval_lame_encode_buffer_bb11_in/9,loop_cont_eval_lame_encode_buffer_bb13_in/14,loop_cont_eval_lame_encode_buffer_bb22_in/10]
6. non_recursive  : [eval_lame_encode_buffer_104/1]
7. non_recursive  : [eval_lame_encode_buffer_103/4]
8. non_recursive  : [eval_lame_encode_buffer_106/1]
9. non_recursive  : [eval_lame_encode_buffer_105/4]
10. non_recursive  : [eval_lame_encode_buffer_bb29_in/1]
11. non_recursive  : [loop_cont_eval_lame_encode_buffer_bb11_in/5]
12. non_recursive  : [eval_lame_encode_buffer_bb10_in/6]
13. recursive  : [eval_lame_encode_buffer_bb8_in/12]
14. non_recursive  : [loop_cont_eval_lame_encode_buffer_bb8_in/7]
15. non_recursive  : [eval_lame_encode_buffer_bb5_in/6]
16. non_recursive  : [eval_lame_encode_buffer_bb3_in/6]
17. non_recursive  : [eval_lame_encode_buffer_10/6]
18. non_recursive  : [eval_lame_encode_buffer_9/6]
19. non_recursive  : [eval_lame_encode_buffer_bb0_in/6]
20. non_recursive  : [eval_lame_encode_buffer_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_lame_encode_buffer_bb13_in/17
3. SCC is partially evaluated into eval_lame_encode_buffer_bb24_in/22
4. SCC is partially evaluated into eval_lame_encode_buffer_bb22_in/16
5. SCC is partially evaluated into eval_lame_encode_buffer_bb11_in/9
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into loop_cont_eval_lame_encode_buffer_bb11_in/5
12. SCC is partially evaluated into eval_lame_encode_buffer_bb10_in/6
13. SCC is partially evaluated into eval_lame_encode_buffer_bb8_in/12
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_lame_encode_buffer_bb5_in/6
16. SCC is partially evaluated into eval_lame_encode_buffer_bb3_in/6
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_lame_encode_buffer_bb0_in/6
20. SCC is partially evaluated into eval_lame_encode_buffer_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_lame_encode_buffer_bb13_in/17 
* CE 25 is refined into CE [30] 
* CE 24 is refined into CE [31] 
* CE 23 is refined into CE [32] 
* CE 22 is refined into CE [33] 


#### Refined cost equations eval_lame_encode_buffer_bb13_in/17 
* CE 30: eval_lame_encode_buffer_bb13_in(A,B,C,D,E,F,G,H,B,C,I,J,K,L,M,N,O) = 0
     [F>=0,E>=1,I=D+G,H=5] 
* CE 31: eval_lame_encode_buffer_bb13_in(A,B,C,D,E,F,G,H,A,B,I,J,K,L,M,N,O) = 0
     [F>=0,E>=1,D+G=J,C+G=I,H=4] 
* CE 32: eval_lame_encode_buffer_bb13_in(A,B,C,D,E,F,G,H,A,B,I,J,E,F,G,K,L) = 0
     [F>=0,E>=1,D+G=L,D+G=J,C+G=I,H=3] 
* CE 33: eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K) = 1+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,L,M,B,C,D,E,F,G,H,I,J,K)
     [B>=3,V_ch_0>=0,V__01>=1,5>=B,V_ch_0+1=L] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_bb13_in/17 
* CEs [33] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [31] --> Loop 26 
* CEs [32] --> Loop 27 

#### Loops of eval_lame_encode_buffer_bb13_in/17 
* Loop 24: eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K)->  eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0',V_n_out_0',B,C,D,E,F,G,H,I,J,K)
                  [B>=3,V_ch_0>=0,V__01>=1,5>=B,V_ch_0+1=V_ch_0'] 
* Loop 25: eval_lame_encode_buffer_bb13_in(A,B,C,D,E,F,G,H,B,C,I,J,K,L,M,N,O) [F>=0,E>=1,D+G=I,H=5] 
* Loop 26: eval_lame_encode_buffer_bb13_in(A,B,C,D,E,F,G,H,A,B,I,J,K,L,M,N,O) [F>=0,E>=1,D+G=J,C+G=I,H=4] 
* Loop 27: eval_lame_encode_buffer_bb13_in(A,B,C,D,E,F,G,H,A,B,I,J,E,F,G,K,L) [F>=0,E>=1,D+G=L,D+G=J,C+G=I,H=3] 

### Ranking functions of CR eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K) 

#### Partial ranking functions of CR eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K) 


### Resulting Chains:eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K) 
* [[24]]...
* [[24],27]
* [[24],26]
* [[24],25]
* [27]
* [26]
* [25]


### Merging Chains  eval_lame_encode_buffer_bb13_in/17 into  External patterns of execution 
* [[27]] --> 1 
* [[27,[24]]] --> 2 
* [[26],[26,[24]]] --> 3 
* [[25],[25,[24]]] --> 4 
* [[[24]]] --> 5 


### Specialization of cost equations eval_lame_encode_buffer_bb24_in/22 
* CE 29 is refined into CE [34] 
* CE 28 is refined into CE [35] 


#### Refined cost equations eval_lame_encode_buffer_bb24_in/22 
* CE 34: eval_lame_encode_buffer_bb24_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,M) = 0
     [K>=D,K>=0,M=J+1,L=2] 
* CE 35: eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,V_i_1,B,C,D,E,F,G,H,I,J,K,L) = 1+ eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,M,N,C,D,E,F,G,H,I,J,K,L)
     [V__mf_size>=V_i_1+1,V_i_1>=0,V_i_1+1=M,N=2,B=2] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_bb24_in/22 
* CEs [35] --> Loop 28 
* CEs [34] --> Loop 29 

#### Loops of eval_lame_encode_buffer_bb24_in/22 
* Loop 28: eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,V_i_1,B,C,D,E,F,G,H,I,J,K,L)->  eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,V_i_1',B',C,D,E,F,G,H,I,J,K,L)
                  [V__mf_size>=V_i_1+1,V_i_1>=0,V_i_1+1=V_i_1',B'=2,B=2] 
* Loop 29: eval_lame_encode_buffer_bb24_in(A,B,C,D,E,F,G,H,I,J,K,L,A,B,C,D,E,F,G,H,I,M) [K>=D,K>=0,J+1=M,L=2] 

### Ranking functions of CR eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,V_i_1,B,C,D,E,F,G,H,I,J,K,L) 
* RF of phase [28]: [V__mf_size-V_i_1]

#### Partial ranking functions of CR eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,V_i_1,B,C,D,E,F,G,H,I,J,K,L) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V__mf_size-V_i_1


### Resulting Chains:eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,V_i_1,B,C,D,E,F,G,H,I,J,K,L) 
* [[28],29]
* [29]


### Merging Chains  eval_lame_encode_buffer_bb24_in/22 into  External patterns of execution 
* [[29]] --> 1 
* [[29,[28]]] --> 2 


### Specialization of cost equations eval_lame_encode_buffer_bb22_in/16 
* CE 27 is refined into CE [36] 
* CE 26 is refined into CE [37,38] 


#### Refined cost equations eval_lame_encode_buffer_bb22_in/16 
* CE 36: eval_lame_encode_buffer_bb22_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,H) = 0
     [K=4] 
* CE 37: eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) = 2+ eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,H,I,J,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,K):1+ eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,K,L,C,D,E,F,G)
     [0>=V__mf_size,K=H+1,K=V_ch_1+1,L=4,J=2,I=0,B=4] 
* CE 38: eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) = 2+ eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,H,I,J,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,K):2+ eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,K,L,C,D,E,F,G)
     [V__mf_size>=1,K=H+1,K=V_ch_1+1,L=4,J=2,I=0,B=4] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_bb22_in/16 
* CEs [38] --> Loop 30 
* CEs [37] --> Loop 31 
* CEs [36] --> Loop 32 

#### Loops of eval_lame_encode_buffer_bb22_in/16 
* Loop 30: eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G)->  eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1',B',C,D,E,F,G)
                  [V__mf_size>=1,V_ch_1+1=V_ch_1',B'=4,B=4] 
* Loop 31: eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G)->  eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1',B',C,D,E,F,G)
                  [0>=V__mf_size,V_ch_1+1=V_ch_1',B'=4,B=4] 
* Loop 32: eval_lame_encode_buffer_bb22_in(A,B,C,D,E,F,G,H,I,J,K,A,B,C,D,H) [K=4] 

### Ranking functions of CR eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) 


### Resulting Chains:eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) 
* [[31]]...
* [[31],32]
* [[30]]...
* [[30],32]
* [32]


### Merging Chains  eval_lame_encode_buffer_bb22_in/16 into  External patterns of execution 
* [[32],[32,[30]],[32,[31]]] --> 1 
* [[[31]]] --> 2 
* [[[30]]] --> 3 


### Specialization of cost equations eval_lame_encode_buffer_bb11_in/9 
* CE 18 is refined into CE [39] 
* CE 16 is refined into CE [40,41,42] 
* CE 17 is refined into CE [43] 
* CE 13 is refined into CE [44,45] 
* CE 14 is refined into CE [46,47] 
* CE 15 is refined into CE [48,49,50,51,52,53,54] 


#### Refined cost equations eval_lame_encode_buffer_bb11_in/9 
* CE 39: eval_lame_encode_buffer_bb11_in(A,B,C,D,E,F,B,C,D) = 0
     [0>=E,F=8] 
* CE 40: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 1+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,I,J,K,V__mf_size):1
     [V__01>=1,J=0,I=0,H=3,G=0,F=0,B=7] 
* CE 41: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 1+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,I,J,V__01,K,L,M,N):2
     [K>=1,V__01>=1,V__mf_size+I=V__mf_samples_to_encode+N,V__mf_size+I=V__mf_samples_to_encode+J,I=V__mf_samples_to_encode+L,H=3,G=0,F=0,B=7] 
* CE 42: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 1+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,I,J,K,L,M,N,O,P,Q):5
     [V__01>=1,H=3,G=0,F=0,B=7] 
* CE 43: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 0
     [0>=V__01,B=7] 
* CE 44: eval_lame_encode_buffer_bb11_in(A,B,C,D,E,F,B,C,G) = 1+ eval_lame_encode_buffer_bb13_in(A,B,C,D,E,H,I,J,B,C,G,K,L,M,N,O,P):4
     [E>=1,J=5,I=0,H=0,F=5] 
* CE 45: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 1+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,C,D,E,I,J,K,L,M,N):5
     [V__01>=1,H=5,G=0,F=0,B=5] 
* CE 46: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 2+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,I,J,K,L,M,N,O):3+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,I,P,K,B,C,D,E)
     [V__01>=1,V__mf_size+I=V__mf_samples_to_encode+P,V__mf_size+I=V__mf_samples_to_encode+J,H=4,G=0,F=0] 
* CE 47: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 2+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,I,J,K,L,M,N,O,P,Q):5
     [V__01>=1,H=4,G=0,F=0] 
* CE 48: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 3+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,I,J,K,V__mf_size):1+ eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,L,M,V__01,N,O,K,V__mf_size,P,Q,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,L,M,K):1+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,L,M,K,B,C,D,E)
     [V__01>=1,Q=4,P=0,O=0,N=0,J=0,I=0,H=3,G=0,F=0] 
* CE 49: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 3+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,I,J,K,V__mf_size):1+ eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,L,M,V__01,N,O,K,V__mf_size,P,Q,R,S,T,U,V):2
     [V__01>=1,0>=M,Q=4,P=0,O=0,N=0,J=0,I=0,H=3,G=0,F=0] 
* CE 50: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 3+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,I,J,K,V__mf_size):1+ eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,L,M,V__01,N,O,K,V__mf_size,P,Q,R,S,T,U,V):3
     [M>=1,V__01>=1,Q=4,P=0,O=0,N=0,J=0,I=0,H=3,G=0,F=0] 
* CE 51: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 3+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,I,J,V__01,K,L,M,N):2+ eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,O,P,V__01,K,Q,M,R,S,T,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,O,P,M):1+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,O,P,M,B,C,D,E)
     [K>=1,V__01>=1,V__mf_size+I=V__mf_samples_to_encode+R,V__mf_size+I=V__mf_samples_to_encode+N,V__mf_size+I=V__mf_samples_to_encode+J,I=V__mf_samples_to_encode+Q,I=V__mf_samples_to_encode+L,T=4,S=0,H=3,G=0,F=0] 
* CE 52: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 3+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,I,J,V__01,K,L,M,N):2+ eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,O,P,V__01,K,Q,M,R,S,T,U,V,W,X,Y):2
     [K>=1,V__01>=1,0>=P,V__mf_size+I=V__mf_samples_to_encode+R,V__mf_size+I=V__mf_samples_to_encode+N,V__mf_size+I=V__mf_samples_to_encode+J,I=V__mf_samples_to_encode+Q,I=V__mf_samples_to_encode+L,T=4,S=0,H=3,G=0,F=0] 
* CE 53: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 3+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,I,J,V__01,K,L,M,N):2+ eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,O,P,V__01,K,Q,M,R,S,T,U,V,W,X,Y):3
     [P>=1,K>=1,V__01>=1,V__mf_size+I=V__mf_samples_to_encode+R,V__mf_size+I=V__mf_samples_to_encode+N,V__mf_size+I=V__mf_samples_to_encode+J,I=V__mf_samples_to_encode+Q,I=V__mf_samples_to_encode+L,T=4,S=0,H=3,G=0,F=0] 
* CE 54: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) = 3+ eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,F,G,H,I,J,K,L,M,N,O,P,Q):5
     [V__01>=1,R=4,S=0,H=3,G=0,F=0] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_bb11_in/9 
* CEs [42] --> Loop 33 
* CEs [45,47,49,50,52,53,54] --> Loop 34 
* CEs [46,48,51] --> Loop 35 
* CEs [39] --> Loop 36 
* CEs [40,41] --> Loop 37 
* CEs [43] --> Loop 38 
* CEs [44] --> Loop 39 

#### Loops of eval_lame_encode_buffer_bb11_in/9 
* Loop 33: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) [V__01>=1,B=7] 
* Loop 34: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) [V__01>=1] 
* Loop 35: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E)->  eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode',V__mf_size',V__01',B,C,D,E)
                  [V__01>=1] 
* Loop 36: eval_lame_encode_buffer_bb11_in(A,B,C,D,E,F,B,C,D) [0>=E,F=8] 
* Loop 37: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) [V__01>=1,B=7] 
* Loop 38: eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) [0>=V__01,B=7] 
* Loop 39: eval_lame_encode_buffer_bb11_in(A,B,C,D,E,F,B,C,G) [E>=1,F=5] 

### Ranking functions of CR eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) 

#### Partial ranking functions of CR eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) 


### Resulting Chains:eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) 
* [[35]]...
* [[35],39]
* [[35],38]
* [[35],37]
* [[35],36]
* [[35],34]...
* [[35],33]...
* [39]
* [38]
* [37]
* [36]
* [34]...
* [33]...


### Merging Chains  eval_lame_encode_buffer_bb11_in/9 into  External patterns of execution 
* [[39],[39,[35]]] --> 1 
* [[38]] --> 2 
* [[37],[37,[35]],[38,[35]]] --> 3 
* [[36]] --> 4 
* [[36,[35]]] --> 5 
* [[33],[33,[35]]] --> 6 
* [[34],[[35]],[34,[35]]] --> 7 


### Specialization of cost equations loop_cont_eval_lame_encode_buffer_bb11_in/5 
* CE 20 is refined into CE [55] 
* CE 19 is refined into CE [56] 
* CE 21 is refined into CE [57] 


#### Refined cost equations loop_cont_eval_lame_encode_buffer_bb11_in/5 
* CE 55: loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D) = 0
     [E=8] 
* CE 56: loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D) = 0
     [E=7] 
* CE 57: loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D) = 0
     [E=5] 

### Cost equations --> "Loop" of loop_cont_eval_lame_encode_buffer_bb11_in/5 
* CEs [55] --> Loop 40 
* CEs [56] --> Loop 41 
* CEs [57] --> Loop 42 

#### Loops of loop_cont_eval_lame_encode_buffer_bb11_in/5 
* Loop 40: loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D) [E=8] 
* Loop 41: loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D) [E=7] 
* Loop 42: loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D) [E=5] 

### Ranking functions of CR loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D) 


### Resulting Chains:loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D) 
* [42]
* [41]
* [40]


### Merging Chains  loop_cont_eval_lame_encode_buffer_bb11_in/5 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 
* [[40]] --> 3 


### Specialization of cost equations eval_lame_encode_buffer_bb10_in/6 
* CE 12 is refined into CE [58,59,60,61,62,63,64] 


#### Refined cost equations eval_lame_encode_buffer_bb10_in/6 
* CE 58: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_nsamples,C,V__lame_encode_buffer_frame_buffered,D,E):1+ loop_cont_eval_lame_encode_buffer_bb11_in(F,V__lame_encode_buffer_frame_buffered,D,E,B):1
     [V_nsamples>=1,F=5,C=5] 
* CE 59: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_nsamples,C,D,E,F):2+ loop_cont_eval_lame_encode_buffer_bb11_in(G,D,E,F,B):2
     [0>=V_nsamples,G=7,C=7] 
* CE 60: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_nsamples,C,D,E,F):3+ loop_cont_eval_lame_encode_buffer_bb11_in(G,D,E,F,B):2
     [V_nsamples>=1,G=7,C=7] 
* CE 61: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_nsamples,C,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size):4+ loop_cont_eval_lame_encode_buffer_bb11_in(D,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):3
     [0>=V_nsamples,D=8,C=8] 
* CE 62: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_nsamples,C,V__lame_encode_buffer_frame_buffered,D,E):5+ loop_cont_eval_lame_encode_buffer_bb11_in(F,V__lame_encode_buffer_frame_buffered,D,E,B):3
     [V_nsamples>=1,F=8,C=8] 
* CE 63: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_nsamples,C,D,E,F):6
     [V_nsamples>=1,G=7,C=7] 
* CE 64: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_nsamples,C,D,E,F):7
     [V_nsamples>=1] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_bb10_in/6 
* CEs [63,64] --> Loop 43 
* CEs [58,60,62] --> Loop 44 
* CEs [59,61] --> Loop 45 

#### Loops of eval_lame_encode_buffer_bb10_in/6 
* Loop 43: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [V_nsamples>=1] 
* Loop 44: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [V_nsamples>=1] 
* Loop 45: eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [0>=V_nsamples] 

### Ranking functions of CR eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 

#### Partial ranking functions of CR eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 


### Resulting Chains:eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 
* [45]
* [44]
* [43]...


### Merging Chains  eval_lame_encode_buffer_bb10_in/6 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 
* [[43]] --> 3 


### Specialization of cost equations eval_lame_encode_buffer_bb8_in/12 
* CE 11 is refined into CE [65] 
* CE 10 is refined into CE [66] 


#### Refined cost equations eval_lame_encode_buffer_bb8_in/12 
* CE 65: eval_lame_encode_buffer_bb8_in(A,B,C,D,E,F,G,A,B,C,D,E) = 0
     [F>=A,F>=0,G=6] 
* CE 66: eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_i_0,B,C,D,E,F,G) = 1+ eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,H,I,J,K,L,C,D,E,F,G)
     [V_nsamples>=V_i_0+1,V_i_0>=0,V_i_0+1=K,L=6,B=6] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_bb8_in/12 
* CEs [66] --> Loop 46 
* CEs [65] --> Loop 47 

#### Loops of eval_lame_encode_buffer_bb8_in/12 
* Loop 46: eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_i_0,B,C,D,E,F,G)->  eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V_i_0',B',C,D,E,F,G)
                  [V_nsamples>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=6,B=6] 
* Loop 47: eval_lame_encode_buffer_bb8_in(A,B,C,D,E,F,G,A,B,C,D,E) [F>=A,F>=0,G=6] 

### Ranking functions of CR eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_i_0,B,C,D,E,F,G) 
* RF of phase [46]: [V_nsamples-V_i_0]

#### Partial ranking functions of CR eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_i_0,B,C,D,E,F,G) 
* Partial RF of phase [46]:
  - RF of loop [46:1]:
    V_nsamples-V_i_0


### Resulting Chains:eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_i_0,B,C,D,E,F,G) 
* [[46],47]
* [47]


### Merging Chains  eval_lame_encode_buffer_bb8_in/12 into  External patterns of execution 
* [[47]] --> 1 
* [[47,[46]]] --> 2 


### Specialization of cost equations eval_lame_encode_buffer_bb5_in/6 
* CE 8 is refined into CE [67,68,69] 
* CE 9 is refined into CE [70,71,72] 


#### Refined cost equations eval_lame_encode_buffer_bb5_in/6 
* CE 67: eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,C,D,V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size):1+ eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):1
     [0>=V_nsamples,D=6,C=0] 
* CE 68: eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,C,D,V_nsamples,V_mp3buf_size,E,F,G):2+ eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,E,F,G,B):2
     [V_nsamples>=1,D=6,C=0] 
* CE 69: eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 1+ eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,C,D,V_nsamples,V_mp3buf_size,E,F,G):2+ eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,E,F,G,B):3
     [V_nsamples>=1,D=6,C=0] 
* CE 70: eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):1
     [0>=V_nsamples] 
* CE 71: eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):2
     [V_nsamples>=1] 
* CE 72: eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):3
     [V_nsamples>=1] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_bb5_in/6 
* CEs [69,72] --> Loop 48 
* CEs [68,71] --> Loop 49 
* CEs [67,70] --> Loop 50 

#### Loops of eval_lame_encode_buffer_bb5_in/6 
* Loop 48: eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [V_nsamples>=1] 
* Loop 49: eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [V_nsamples>=1] 
* Loop 50: eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [0>=V_nsamples] 

### Ranking functions of CR eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 

#### Partial ranking functions of CR eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 


### Resulting Chains:eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 
* [50]
* [49]
* [48]...


### Merging Chains  eval_lame_encode_buffer_bb5_in/6 into  External patterns of execution 
* [[50]] --> 1 
* [[49]] --> 2 
* [[48]] --> 3 


### Specialization of cost equations eval_lame_encode_buffer_bb3_in/6 
* CE 6 is refined into CE [73,74,75] 
* CE 7 is refined into CE [76,77,78] 


#### Refined cost equations eval_lame_encode_buffer_bb3_in/6 
* CE 73: eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,C,V__mf_samples_to_encode,V__mf_size,B):1
     [0>=V_nsamples,C=0] 
* CE 74: eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,C,V__mf_samples_to_encode,V__mf_size,B):2
     [V_nsamples>=1,C=0] 
* CE 75: eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,C,V__mf_samples_to_encode,V__mf_size,B):3
     [V_nsamples>=1,C=0] 
* CE 76: eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):1
     [0>=V_nsamples] 
* CE 77: eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):2
     [V_nsamples>=1] 
* CE 78: eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):3
     [V_nsamples>=1] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_bb3_in/6 
* CEs [75,78] --> Loop 51 
* CEs [74,77] --> Loop 52 
* CEs [73,76] --> Loop 53 

#### Loops of eval_lame_encode_buffer_bb3_in/6 
* Loop 51: eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [V_nsamples>=1] 
* Loop 52: eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [V_nsamples>=1] 
* Loop 53: eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [0>=V_nsamples] 

### Ranking functions of CR eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 

#### Partial ranking functions of CR eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 


### Resulting Chains:eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 
* [53]
* [52]
* [51]...


### Merging Chains  eval_lame_encode_buffer_bb3_in/6 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 
* [[51]] --> 3 


### Specialization of cost equations eval_lame_encode_buffer_bb0_in/6 
* CE 3 is refined into CE [79,80,81] 
* CE 4 is refined into CE [82,83,84] 
* CE 5 is refined into CE [85] 


#### Refined cost equations eval_lame_encode_buffer_bb0_in/6 
* CE 79: eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):1
     [0>=V_nsamples] 
* CE 80: eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):2
     [V_nsamples>=1] 
* CE 81: eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):3
     [V_nsamples>=1] 
* CE 82: eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,C,D,E,B):1
     [0>=V_nsamples,E=752,D=1088,C=1] 
* CE 83: eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,C,D,E,B):2
     [V_nsamples>=1,E=752,D=1088,C=1] 
* CE 84: eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,C,D,E,B):3
     [V_nsamples>=1,E=752,D=1088,C=1] 
* CE 85: eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0
     [] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_bb0_in/6 
* CEs [79,80,82,83,85] --> Loop 54 
* CEs [81,84] --> Loop 55 

#### Loops of eval_lame_encode_buffer_bb0_in/6 
* Loop 54: eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [] 
* Loop 55: eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [V_nsamples>=1] 

### Ranking functions of CR eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 

#### Partial ranking functions of CR eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 


### Resulting Chains:eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 
* [55]...
* [54]


### Merging Chains  eval_lame_encode_buffer_bb0_in/6 into  External patterns of execution 
* [[54]] --> 1 
* [[55]] --> 2 


### Specialization of cost equations eval_lame_encode_buffer_start/6 
* CE 2 is refined into CE [86,87] 


#### Refined cost equations eval_lame_encode_buffer_start/6 
* CE 86: eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):1
     [] 
* CE 87: eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) = 0+ eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):2
     [V_nsamples>=1] 

### Cost equations --> "Loop" of eval_lame_encode_buffer_start/6 
* CEs [87] --> Loop 56 
* CEs [86] --> Loop 57 

#### Loops of eval_lame_encode_buffer_start/6 
* Loop 56: eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [V_nsamples>=1] 
* Loop 57: eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) [] 

### Ranking functions of CR eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 

#### Partial ranking functions of CR eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 


### Resulting Chains:eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B) 
* [57]
* [56]...


### Merging Chains  eval_lame_encode_buffer_start/6 into  External patterns of execution 
* [[57]] --> 1 
* [[56]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [24] 

 * loop 24:eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K) -> [eval_lame_encode_buffer_bb13_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',B',C',D',E',F',G',H',I',J',K')] 
1
#### Cost of phase [24]:eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K) -> [eval_lame_encode_buffer_bb13_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',B',C',D',E',F',G',H',I',J',K')] 
1*it(24)+0
#### Cost of phase [24]:eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K) -> [eval_lame_encode_buffer_bb13_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',B',C',D',E',F',G',H',I',J',K')] 
1*it(24)+0
#### Cost of phase [24]:eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K) -> [eval_lame_encode_buffer_bb13_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',B',C',D',E',F',G',H',I',J',K')] 
1*it(24)+0
#### Cost of phase [24]:eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K) -> [eval_lame_encode_buffer_bb13_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',B',C',D',E',F',G',H',I',J',K')] 
1*it(24)+0
#### Cost of chains of eval_lame_encode_buffer_bb13_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,B,C,D,E,F,G,H,I,J,K):
* Chain [[24]]...: 1*it(24)+0
  with precondition: [V__01>=1,V_ch_0>=0,B>=3,5>=B] 

* Chain [[24],27]: 1*it(24)+0
  with precondition: [B=3,V_mp3buf_size=C,V__lame_encode_buffer_frame_buffered=D,V__01=G,V__mf_samples_to_encode+I=E,V__mf_samples_to_encode+F=V__mf_size+E,V__mf_samples_to_encode+K=V__mf_size+E,V__01>=1,V_ch_0>=0,H>=V_ch_0+1] 

* Chain [[24],26]: 1*it(24)+0
  with precondition: [B=4,V_mp3buf_size=C,V__lame_encode_buffer_frame_buffered=D,V__mf_samples_to_encode+F=V__mf_size+E,V__01>=1,V_ch_0>=0] 

* Chain [[24],25]: 1*it(24)+0
  with precondition: [B=5,V__lame_encode_buffer_frame_buffered=C,V__mf_samples_to_encode=D,V__01>=1,V_ch_0>=0] 

* Chain [27]: 0
  with precondition: [B=3,C=V_mp3buf_size,D=V__lame_encode_buffer_frame_buffered,V__01=G,V_ch_0=H,V_n_out_0=I,V__mf_samples_to_encode+V_n_out_0=E,V__mf_size+V_n_out_0=F,V__mf_size+V_n_out_0=K,V__01>=1,V_ch_0>=0] 

* Chain [26]: 0
  with precondition: [B=4,C=V_mp3buf_size,D=V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode+V_n_out_0=E,V__mf_size+V_n_out_0=F,V__01>=1,V_ch_0>=0] 

* Chain [25]: 0
  with precondition: [B=5,C=V__lame_encode_buffer_frame_buffered,D=V__mf_samples_to_encode,E=V__mf_size+V_n_out_0,V__01>=1,V_ch_0>=0] 


#### Cost of loops [28] 

 * loop 28:eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,V_i_1,B,C,D,E,F,G,H,I,J,K,L) -> [eval_lame_encode_buffer_bb24_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',V_79',V_88',V_ch_1',V_i_1',B',C',D',E',F',G',H',I',J',K',L')] 
1
#### Cost of phase [28]:eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,V_i_1,B,C,D,E,F,G,H,I,J,K,L) -> [eval_lame_encode_buffer_bb24_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',V_79',V_88',V_ch_1',V_i_1',B',C',D',E',F',G',H',I',J',K',L')] 
1*it(28)+0
  Such that:it(28) =< V__mf_size-V_i_1
it(28) =< V__mf_size-V_i_1-V__mf_size'+V_i_1'

#### Cost of chains of eval_lame_encode_buffer_bb24_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,V_i_1,B,C,D,E,F,G,H,I,J,K,L):
* Chain [[28],29]: 1*it(28)+0
  Such that:it(28) =< -V_i_1+F

  with precondition: [B=2,V_mp3buf_size=C,V__lame_encode_buffer_frame_buffered=D,V__mf_samples_to_encode=E,V__mf_size=F,V__01=G,V_ch_0=H,V_n_out_0=I,V_79=J,V_88=K,V_ch_1+1=L,V_i_1>=0,V__mf_size>=V_i_1+1] 

* Chain [29]: 0
  with precondition: [B=2,C=V_mp3buf_size,D=V__lame_encode_buffer_frame_buffered,E=V__mf_samples_to_encode,G=V__01,H=V_ch_0,I=V_n_out_0,J=V_79,K=V_88,L=V_ch_1+1,V__mf_size=F,V_i_1>=0,V_i_1>=V__mf_size] 


#### Cost of loops [31] 

 * loop 31:eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) -> [eval_lame_encode_buffer_bb22_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',V_79',V_88',V_ch_1',B',C',D',E',F',G')] 
2
#### Cost of phase [31]:eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) -> [eval_lame_encode_buffer_bb22_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',V_79',V_88',V_ch_1',B',C',D',E',F',G')] 
2*it(31)+0
#### Cost of phase [31]:eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) -> [eval_lame_encode_buffer_bb22_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',V_79',V_88',V_ch_1',B',C',D',E',F',G')] 
2*it(31)+0
#### Cost of loops [30] 

 * loop 30:eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) -> [eval_lame_encode_buffer_bb22_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',V_79',V_88',V_ch_1',B',C',D',E',F',G')] 
1*s(4)+2
  Such that:s(4) =< V__mf_size'

#### Cost of phase [30]:eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) -> [eval_lame_encode_buffer_bb22_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',V_79',V_88',V_ch_1',B',C',D',E',F',G')] 
2*it(30)+1*s(5)+0
#### Cost of phase [30]:eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G) -> [eval_lame_encode_buffer_bb22_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',V_ch_0',V_n_out_0',V_79',V_88',V_ch_1',B',C',D',E',F',G')] 
2*it(30)+1*s(5)+0
#### Cost of chains of eval_lame_encode_buffer_bb22_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,V_ch_0,V_n_out_0,V_79,V_88,V_ch_1,B,C,D,E,F,G):
* Chain [[31]]...: 2*it(31)+0
  with precondition: [0>=V__mf_size,B=4] 

* Chain [[31],32]: 2*it(31)+0
  with precondition: [B=4,V_mp3buf_size=C,V__lame_encode_buffer_frame_buffered=D,V__mf_samples_to_encode=E,V__mf_size=F,V_79=G,0>=V__mf_size,V_ch_1>=0] 

* Chain [[30]]...: 3*it(30)+0
  with precondition: [V__mf_size>=1,B=4] 

* Chain [[30],32]: 3*it(30)+0
  with precondition: [B=4,V_mp3buf_size=C,V__lame_encode_buffer_frame_buffered=D,V__mf_samples_to_encode=E,V__mf_size=F,V_79=G,V__mf_size>=1,V_ch_1>=0] 

* Chain [32]: 0
  with precondition: [B=4,C=V_mp3buf_size,D=V__lame_encode_buffer_frame_buffered,E=V__mf_samples_to_encode,F=V__mf_size,G=V_79,V_ch_1>=0] 


#### Cost of loops [35] 

 * loop 35:eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) -> [eval_lame_encode_buffer_bb11_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',B',C',D',E')] 
1*s(12)+0
#### Cost of phase [35]:eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) -> [eval_lame_encode_buffer_bb11_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',B',C',D',E')] 
1*s(13)+0
#### Cost of phase [35]:eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) -> [eval_lame_encode_buffer_bb11_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',B',C',D',E')] 
1*s(13)+0
#### Cost of phase [35]:eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) -> [eval_lame_encode_buffer_bb11_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',B',C',D',E')] 
1*s(13)+0
#### Cost of phase [35]:eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) -> [eval_lame_encode_buffer_bb11_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',B',C',D',E')] 
1*s(13)+0
#### Cost of phase [35]:eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) -> [eval_lame_encode_buffer_bb11_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',B',C',D',E')] 
1*s(13)+0
#### Cost of phase [35]:eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) -> [eval_lame_encode_buffer_bb11_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',B',C',D',E')] 
1*s(13)+0
#### Cost of phase [35]:eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E) -> [eval_lame_encode_buffer_bb11_in(V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V__01',B',C',D',E')] 
1*s(13)+0
#### Cost of chains of eval_lame_encode_buffer_bb11_in(V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V__01,B,C,D,E):
* Chain [[35]]...: 1*s(13)+0
  with precondition: [V__01>=1] 

* Chain [[35],39]: 2*s(13)+1
  with precondition: [B=5,V__lame_encode_buffer_frame_buffered=C,V__01>=1] 

* Chain [[35],38]: 1*s(13)+0
  with precondition: [B=7,V__01>=1] 

* Chain [[35],37]: 2*aux(6)+0
  with precondition: [B=7,V__01>=1] 

* Chain [[35],36]: 1*s(13)+0
  with precondition: [B=8,V__lame_encode_buffer_frame_buffered=C,V__01>=1] 

* Chain [[35],34]...: 2*aux(7)+0
  with precondition: [V__01>=1] 

* Chain [[35],33]...: 2*s(13)+1
  with precondition: [B=7,V__01>=1] 

* Chain [39]: 1*s(14)+1
  with precondition: [B=5,C=V__lame_encode_buffer_frame_buffered,D=V__mf_samples_to_encode,V__01>=1] 

* Chain [38]: 0
  with precondition: [B=7,0>=V__01] 

* Chain [37]: 1*aux(6)+0
  with precondition: [B=7,V__01>=1] 

* Chain [36]: 0
  with precondition: [B=8,C=V__lame_encode_buffer_frame_buffered,D=V__mf_samples_to_encode,E=V__mf_size,0>=V__01] 

* Chain [34]...: 1*aux(7)+0
  with precondition: [V__01>=1] 

* Chain [33]...: 1*s(25)+1
  with precondition: [B=7,V__01>=1] 


#### Cost of chains of loop_cont_eval_lame_encode_buffer_bb11_in(E,A,B,C,D):
* Chain [42]: 0
  with precondition: [E=5] 

* Chain [41]: 0
  with precondition: [E=7] 

* Chain [40]: 0
  with precondition: [E=8] 


#### Cost of chains of eval_lame_encode_buffer_bb10_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):
* Chain [45]: 1
  with precondition: [0>=V_nsamples] 

* Chain [44]: 1*aux(12)+0
  with precondition: [V_nsamples>=1] 

* Chain [43]...: 1*aux(13)+0
  with precondition: [V_nsamples>=1] 


#### Cost of loops [46] 

 * loop 46:eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_i_0,B,C,D,E,F,G) -> [eval_lame_encode_buffer_bb8_in(V_nsamples',V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V_i_0',B',C',D',E',F',G')] 
1
#### Cost of phase [46]:eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_i_0,B,C,D,E,F,G) -> [eval_lame_encode_buffer_bb8_in(V_nsamples',V_mp3buf_size',V__lame_encode_buffer_frame_buffered',V__mf_samples_to_encode',V__mf_size',V_i_0',B',C',D',E',F',G')] 
1*it(46)+0
  Such that:it(46) =< V_nsamples-V_i_0
it(46) =< V_nsamples-V_i_0-V_nsamples'+V_i_0'

#### Cost of chains of eval_lame_encode_buffer_bb8_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,V_i_0,B,C,D,E,F,G):
* Chain [[46],47]: 1*it(46)+0
  Such that:it(46) =< V_nsamples-V_i_0

  with precondition: [B=6,V_nsamples=C,V_mp3buf_size=D,V_i_0>=0,V_nsamples>=V_i_0+1] 

* Chain [47]: 0
  with precondition: [B=6,D=V_mp3buf_size,E=V__lame_encode_buffer_frame_buffered,F=V__mf_samples_to_encode,G=V__mf_size,V_nsamples=C,V_i_0>=0,V_i_0>=V_nsamples] 


#### Cost of chains of eval_lame_encode_buffer_bb5_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):
* Chain [50]: 2
  with precondition: [0>=V_nsamples] 

* Chain [49]: 1*s(41)+2*s(42)+1
  Such that:s(41) =< V_nsamples

  with precondition: [V_nsamples>=1] 

* Chain [48]...: 1*s(44)+2*s(45)+1
  Such that:s(44) =< V_nsamples

  with precondition: [V_nsamples>=1] 


#### Cost of chains of eval_lame_encode_buffer_bb3_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):
* Chain [53]: 2
  with precondition: [0>=V_nsamples] 

* Chain [52]: 2*s(47)+4*s(48)+1
  Such that:aux(14) =< V_nsamples
s(47) =< aux(14)

  with precondition: [V_nsamples>=1] 

* Chain [51]...: 2*s(51)+4*s(52)+1
  Such that:aux(15) =< V_nsamples
s(51) =< aux(15)

  with precondition: [V_nsamples>=1] 


#### Cost of chains of eval_lame_encode_buffer_bb0_in(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):
* Chain [55]...: 4*s(56)+8*s(57)+1
  Such that:aux(16) =< V_nsamples
s(56) =< aux(16)

  with precondition: [V_nsamples>=1] 

* Chain [54]: 4*s(62)+8*s(63)+2
  Such that:aux(17) =< V_nsamples
s(62) =< aux(17)

  with precondition: [] 


#### Cost of chains of eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B):
* Chain [57]: 4*s(68)+8*s(69)+2
  Such that:s(67) =< V_nsamples
s(68) =< s(67)

  with precondition: [] 

* Chain [56]...: 4*s(71)+8*s(72)+1
  Such that:s(70) =< V_nsamples
s(71) =< s(70)

  with precondition: [V_nsamples>=1] 


Closed-form bounds of eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B): 
-------------------------------------
* Chain [57] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [56]... with precondition: [V_nsamples>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_lame_encode_buffer_start(V_nsamples,V_mp3buf_size,V__lame_encode_buffer_frame_buffered,V__mf_samples_to_encode,V__mf_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 327 ms.
* Invariants computed in 373 ms.
   - Backward Invariants 196 ms.
   - Transitive Invariants 82 ms.
* Refinement performed in 823 ms.
* Termination proved in 65 ms.
* Upper bounds computed in 586 ms.
   - Equation cost structures 238 ms.
   - Phase cost structures 197 ms.
   - Chain cost structures 197 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 2517 ms.

