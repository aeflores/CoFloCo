Warning: Ignored call to eval_refs_check_space_stop/1 in equation eval_refs_check_space_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_refs_check_space_bb1_in/2]
1. non_recursive  : [eval_refs_check_space_bb4_in/1]
2. non_recursive  : [loop_cont_eval_refs_check_space_bb1_in/2]
3. non_recursive  : [eval_refs_check_space_bb0_in/2]
4. non_recursive  : [eval_refs_check_space_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_refs_check_space_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_refs_check_space_bb0_in/2
4. SCC is partially evaluated into eval_refs_check_space_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_refs_check_space_bb1_in/2 
* CE 5 is refined into CE [9] 
* CE 4 is refined into CE [10] 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


#### Refined cost equations eval_refs_check_space_bb1_in/2 
* CE 9: eval_refs_check_space_bb1_in(V__02,B) = 0
     [V__02>=1,B=2] 
* CE 10: eval_refs_check_space_bb1_in(V__02,B) = 0
     [0>=V__02+1,B=2] 
* CE 11: eval_refs_check_space_bb1_in(V__02,B) = 0
     [B=2,V__02=0] 
* CE 12: eval_refs_check_space_bb1_in(V__02,B) = 1+ eval_refs_check_space_bb1_in(C,D)
     [V__02>=1,V__02=C+1,D=2,B=2] 
* CE 13: eval_refs_check_space_bb1_in(V__02,B) = 1+ eval_refs_check_space_bb1_in(C,D)
     [0>=V__02+1,V__02=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_refs_check_space_bb1_in/2 
* CEs [12] --> Loop 8 
* CEs [13] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [11] --> Loop 12 

#### Loops of eval_refs_check_space_bb1_in/2 
* Loop 8: eval_refs_check_space_bb1_in(V__02,B)->  eval_refs_check_space_bb1_in(V__02',B')
                  [V__02>=1,V__02=V__02'+1,B'=2,B=2] 
* Loop 9: eval_refs_check_space_bb1_in(V__02,B)->  eval_refs_check_space_bb1_in(V__02',B')
                  [0>=V__02+1,V__02=V__02'+1,B'=2,B=2] 
* Loop 10: eval_refs_check_space_bb1_in(V__02,B) [V__02>=1,B=2] 
* Loop 11: eval_refs_check_space_bb1_in(V__02,B) [0>=V__02+1,B=2] 
* Loop 12: eval_refs_check_space_bb1_in(V__02,B) [B=2,V__02=0] 

### Ranking functions of CR eval_refs_check_space_bb1_in(V__02,B) 
* RF of phase [8]: [V__02]

#### Partial ranking functions of CR eval_refs_check_space_bb1_in(V__02,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V__02


### Resulting Chains:eval_refs_check_space_bb1_in(V__02,B) 
* [[9]]...
* [[9],11]
* [[8],12]
* [[8],10]
* [12]
* [11]
* [10]


### Merging Chains  eval_refs_check_space_bb1_in/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11],[11,[9]]] --> 2 
* [[10],[10,[8]],[12,[8]]] --> 3 
* [[[9]]] --> 4 


### Specialization of cost equations eval_refs_check_space_bb0_in/2 
* CE 3 is refined into CE [14,15,16,17] 


#### Refined cost equations eval_refs_check_space_bb0_in/2 
* CE 14: eval_refs_check_space_bb0_in(V_size,B) = 1+ eval_refs_check_space_bb1_in(C,D):1
     [D=2,C=0,V_size=0] 
* CE 15: eval_refs_check_space_bb0_in(V_size,B) = 1+ eval_refs_check_space_bb1_in(V_size,C):2
     [0>=V_size+1,C=2] 
* CE 16: eval_refs_check_space_bb0_in(V_size,B) = 1+ eval_refs_check_space_bb1_in(V_size,C):3
     [V_size>=1,C=2] 
* CE 17: eval_refs_check_space_bb0_in(V_size,B) = 1+ eval_refs_check_space_bb1_in(V_size,C):4
     [0>=V_size+1,C=2] 

### Cost equations --> "Loop" of eval_refs_check_space_bb0_in/2 
* CEs [17] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [14] --> Loop 16 

#### Loops of eval_refs_check_space_bb0_in/2 
* Loop 13: eval_refs_check_space_bb0_in(V_size,B) [0>=V_size+1] 
* Loop 14: eval_refs_check_space_bb0_in(V_size,B) [V_size>=1] 
* Loop 15: eval_refs_check_space_bb0_in(V_size,B) [0>=V_size+1] 
* Loop 16: eval_refs_check_space_bb0_in(V_size,B) [V_size=0] 

### Ranking functions of CR eval_refs_check_space_bb0_in(V_size,B) 

#### Partial ranking functions of CR eval_refs_check_space_bb0_in(V_size,B) 


### Resulting Chains:eval_refs_check_space_bb0_in(V_size,B) 
* [16]
* [15]
* [14]
* [13]...


### Merging Chains  eval_refs_check_space_bb0_in/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[14]] --> 3 
* [[13]] --> 4 


### Specialization of cost equations eval_refs_check_space_start/3 
* CE 2 is refined into CE [18,19,20,21] 


#### Refined cost equations eval_refs_check_space_start/3 
* CE 18: eval_refs_check_space_start(V_size,V_space,B) = 0+ eval_refs_check_space_bb0_in(C,B):1
     [C=0,V_size=0] 
* CE 19: eval_refs_check_space_start(V_size,V_space,B) = 0+ eval_refs_check_space_bb0_in(V_size,B):2
     [0>=V_size+1] 
* CE 20: eval_refs_check_space_start(V_size,V_space,B) = 0+ eval_refs_check_space_bb0_in(V_size,B):3
     [V_size>=1] 
* CE 21: eval_refs_check_space_start(V_size,V_space,B) = 0+ eval_refs_check_space_bb0_in(V_size,B):4
     [0>=V_size+1] 

### Cost equations --> "Loop" of eval_refs_check_space_start/3 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [18] --> Loop 20 

#### Loops of eval_refs_check_space_start/3 
* Loop 17: eval_refs_check_space_start(V_size,V_space,B) [0>=V_size+1] 
* Loop 18: eval_refs_check_space_start(V_size,V_space,B) [V_size>=1] 
* Loop 19: eval_refs_check_space_start(V_size,V_space,B) [0>=V_size+1] 
* Loop 20: eval_refs_check_space_start(V_size,V_space,B) [V_size=0] 

### Ranking functions of CR eval_refs_check_space_start(V_size,V_space,B) 

#### Partial ranking functions of CR eval_refs_check_space_start(V_size,V_space,B) 


### Resulting Chains:eval_refs_check_space_start(V_size,V_space,B) 
* [20]
* [19]
* [18]
* [17]...


### Merging Chains  eval_refs_check_space_start/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 
* [[17]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_refs_check_space_bb1_in(V__02,B) -> [eval_refs_check_space_bb1_in(V__02',B')] 
1
#### Cost of phase [9]:eval_refs_check_space_bb1_in(V__02,B) -> [eval_refs_check_space_bb1_in(V__02',B')] 
1*it(9)+0
#### Cost of phase [9]:eval_refs_check_space_bb1_in(V__02,B) -> [eval_refs_check_space_bb1_in(V__02',B')] 
1*it(9)+0
#### Cost of loops [8] 

 * loop 8:eval_refs_check_space_bb1_in(V__02,B) -> [eval_refs_check_space_bb1_in(V__02',B')] 
1
#### Cost of phase [8]:eval_refs_check_space_bb1_in(V__02,B) -> [eval_refs_check_space_bb1_in(V__02',B')] 
1*it(8)+0
  Such that:it(8) =< V__02
it(8) =< V__02-V__02'

#### Cost of phase [8]:eval_refs_check_space_bb1_in(V__02,B) -> [eval_refs_check_space_bb1_in(V__02',B')] 
1*it(8)+0
  Such that:it(8) =< V__02
it(8) =< V__02-V__02'

#### Cost of chains of eval_refs_check_space_bb1_in(V__02,B):
* Chain [[9]]...: 1*it(9)+0
  with precondition: [0>=V__02+1,B=2] 

* Chain [[9],11]: 1*it(9)+0
  with precondition: [B=2,0>=V__02+1] 

* Chain [[8],12]: 1*it(8)+0
  Such that:it(8) =< V__02

  with precondition: [B=2,V__02>=1] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< V__02

  with precondition: [B=2,V__02>=2] 

* Chain [12]: 0
  with precondition: [V__02=0,B=2] 

* Chain [11]: 0
  with precondition: [B=2,0>=V__02+1] 

* Chain [10]: 0
  with precondition: [B=2,V__02>=1] 


#### Cost of chains of eval_refs_check_space_bb0_in(V_size,B):
* Chain [16]: 1
  with precondition: [V_size=0] 

* Chain [15]: 1*s(4)+1
  with precondition: [0>=V_size+1] 

* Chain [14]: 2*s(6)+1
  Such that:s(5) =< V_size
s(6) =< s(5)

  with precondition: [V_size>=1] 

* Chain [13]...: 1*s(7)+1
  with precondition: [0>=V_size+1] 


#### Cost of chains of eval_refs_check_space_start(V_size,V_space,B):
* Chain [20]: 1
  with precondition: [V_size=0] 

* Chain [19]: 1*s(8)+1
  with precondition: [0>=V_size+1] 

* Chain [18]: 2*s(10)+1
  Such that:s(9) =< V_size
s(10) =< s(9)

  with precondition: [V_size>=1] 

* Chain [17]...: 1*s(11)+1
  with precondition: [0>=V_size+1] 


Closed-form bounds of eval_refs_check_space_start(V_size,V_space,B): 
-------------------------------------
* Chain [20] with precondition: [V_size=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [19] with precondition: [0>=V_size+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18] with precondition: [V_size>=1] 
    - Upper bound: 2*V_size+1 
    - Complexity: n 
* Chain [17]... with precondition: [0>=V_size+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_refs_check_space_start(V_size,V_space,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 34 ms.
   - Backward Invariants 18 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 53 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 48 ms.
   - Equation cost structures 18 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 16 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 188 ms.

