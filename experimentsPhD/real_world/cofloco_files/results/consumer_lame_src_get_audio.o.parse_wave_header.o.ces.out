WARNING: Excluded non-linear constraints:[C*D=0]
WARNING: Excluded non-linear constraints:[C*D=0,A-E*F>=0,A-E*F+1=<E]
WARNING: Excluded non-linear constraints:[C*D=0,A-E*F>=0,A-E*F+1=< -E]
WARNING: Excluded non-linear constraints:[C*D=0,-A+E*F>=0,-A+E*F+1=<E]
WARNING: Excluded non-linear constraints:[C*D=0,-A+E*F>=0,-A+E*F+1=< -E]
WARNING: Excluded non-linear constraints:[C*D>=0+1,C*D-8*E>=0,C*D-8*E+1=<8]
WARNING: Excluded non-linear constraints:[C*D>=0+1,C*D-8*E>=0,C*D-8*E+1=<8,A-E*F>=0,A-E*F+1=<E]
WARNING: Excluded non-linear constraints:[C*D>=0+1,C*D-8*E>=0,C*D-8*E+1=<8,A-E*F>=0,A-E*F+1=< -E]
WARNING: Excluded non-linear constraints:[C*D>=0+1,C*D-8*E>=0,C*D-8*E+1=<8,-A+E*F>=0,-A+E*F+1=<E]
WARNING: Excluded non-linear constraints:[C*D>=0+1,C*D-8*E>=0,C*D-8*E+1=<8,-A+E*F>=0,-A+E*F+1=< -E]
WARNING: Excluded non-linear constraints:[C*D+1=<0,-C*D+8*E>=0,-C*D+8*E+1=<8]
WARNING: Excluded non-linear constraints:[C*D+1=<0,-C*D+8*E>=0,-C*D+8*E+1=<8,A-E*F>=0,A-E*F+1=<E]
WARNING: Excluded non-linear constraints:[C*D+1=<0,-C*D+8*E>=0,-C*D+8*E+1=<8,A-E*F>=0,A-E*F+1=< -E]
WARNING: Excluded non-linear constraints:[C*D+1=<0,-C*D+8*E>=0,-C*D+8*E+1=<8,-A+E*F>=0,-A+E*F+1=<E]
WARNING: Excluded non-linear constraints:[C*D+1=<0,-C*D+8*E>=0,-C*D+8*E+1=<8,-A+E*F>=0,-A+E*F+1=< -E]
Warning: Ignored call to eval_parse_wave_header_stop/1 in equation eval_parse_wave_header_bb12_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_parse_wave_header_bb12_in/1]
1. recursive  : [eval_parse_wave_header_10/10,eval_parse_wave_header_12/11,eval_parse_wave_header_13/11,eval_parse_wave_header_16/12,eval_parse_wave_header_17/12,eval_parse_wave_header_20/13,eval_parse_wave_header_21/13,eval_parse_wave_header_24/14,eval_parse_wave_header_25/14,eval_parse_wave_header_28/15,eval_parse_wave_header_29/15,eval_parse_wave_header_32/16,eval_parse_wave_header_33/16,eval_parse_wave_header_37/17,eval_parse_wave_header_38/17,eval_parse_wave_header_39/9,eval_parse_wave_header_4/9,eval_parse_wave_header_40/10,eval_parse_wave_header_41/11,eval_parse_wave_header_42/11,eval_parse_wave_header_5/9,eval_parse_wave_header_9/9,eval_parse_wave_header_NewDefault_in/9,eval_parse_wave_header_bb2_in/9,eval_parse_wave_header_bb9_in/12]
2. non_recursive  : [eval_parse_wave_header_46/2]
3. non_recursive  : [eval_parse_wave_header_45/5]
4. non_recursive  : [eval_parse_wave_header_bb10_in/5]
5. non_recursive  : [eval_parse_wave_header_7/4]
6. non_recursive  : [eval_parse_wave_header_6/4]
7. non_recursive  : [loop_cont_eval_parse_wave_header_bb2_in/6]
8. non_recursive  : [eval_parse_wave_header_3/4]
9. non_recursive  : [eval_parse_wave_header_2/4]
10. non_recursive  : [eval_parse_wave_header_1/4]
11. non_recursive  : [eval_parse_wave_header_0/4]
12. non_recursive  : [eval_parse_wave_header_bb0_in/4]
13. non_recursive  : [eval_parse_wave_header_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_parse_wave_header_bb2_in/9
2. SCC is partially evaluated into eval_parse_wave_header_46/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_parse_wave_header_bb10_in/5
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_parse_wave_header_bb2_in/6
8. SCC is partially evaluated into eval_parse_wave_header_3/4
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_parse_wave_header_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_parse_wave_header_bb2_in/9 
* CE 8 is refined into CE [17] 
* CE 5 is refined into CE [18] 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 


#### Refined cost equations eval_parse_wave_header_bb2_in/9 
* CE 17: eval_parse_wave_header_bb2_in(A,B,C,D,E,A,B,C,F) = 0
     [D>=20,F=0,E=4] 
* CE 18: eval_parse_wave_header_bb2_in(A,B,C,D,E,A,B,C,F) = 0
     [D>=0,19>=D,E=3] 
* CE 19: eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) = 0
     [V_loop_sanity_0>=0,19>=V_loop_sanity_0,B=2] 
* CE 20: eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) = 1+ eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,G,B,C,D,E,F)
     [V_loop_sanity_0>=0,19>=V_loop_sanity_0,V_loop_sanity_0+1=G] 

### Cost equations --> "Loop" of eval_parse_wave_header_bb2_in/9 
* CEs [20] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 

#### Loops of eval_parse_wave_header_bb2_in/9 
* Loop 14: eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F)->  eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0',B,C,D,E,F)
                  [V_loop_sanity_0>=0,19>=V_loop_sanity_0,V_loop_sanity_0+1=V_loop_sanity_0'] 
* Loop 15: eval_parse_wave_header_bb2_in(A,B,C,D,E,A,B,C,F) [D>=20,F=0,E=4] 
* Loop 16: eval_parse_wave_header_bb2_in(A,B,C,D,E,A,B,C,F) [D>=0,19>=D,E=3] 
* Loop 17: eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) [V_loop_sanity_0>=0,19>=V_loop_sanity_0,B=2] 

### Ranking functions of CR eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) 
* RF of phase [14]: [-V_loop_sanity_0+20]

#### Partial ranking functions of CR eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    -V_loop_sanity_0+20


### Resulting Chains:eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) 
* [[14],17]
* [[14],16]
* [[14],15]
* [17]
* [16]


### Merging Chains  eval_parse_wave_header_bb2_in/9 into  External patterns of execution 
* [[17],[17,[14]]] --> 1 
* [[16],[16,[14]]] --> 2 
* [[15,[14]]] --> 3 


### Specialization of cost equations eval_parse_wave_header_46/2 
* CE 15 is refined into CE [21] 
* CE 16 is refined into CE [22] 
* CE 14 is refined into CE [23] 


#### Refined cost equations eval_parse_wave_header_46/2 
* CE 21: eval_parse_wave_header_46(V_data_length_0,B) = 0
     [V_data_length_0>=1] 
* CE 22: eval_parse_wave_header_46(V_data_length_0,B) = 0
     [0>=V_data_length_0+1] 
* CE 23: eval_parse_wave_header_46(V_data_length_0,B) = 0
     [V_data_length_0=0] 

### Cost equations --> "Loop" of eval_parse_wave_header_46/2 
* CEs [21] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [23] --> Loop 20 

#### Loops of eval_parse_wave_header_46/2 
* Loop 18: eval_parse_wave_header_46(V_data_length_0,B) [V_data_length_0>=1] 
* Loop 19: eval_parse_wave_header_46(V_data_length_0,B) [0>=V_data_length_0+1] 
* Loop 20: eval_parse_wave_header_46(V_data_length_0,B) [V_data_length_0=0] 

### Ranking functions of CR eval_parse_wave_header_46(V_data_length_0,B) 

#### Partial ranking functions of CR eval_parse_wave_header_46(V_data_length_0,B) 


### Resulting Chains:eval_parse_wave_header_46(V_data_length_0,B) 
* [20]
* [19]
* [18]


### Merging Chains  eval_parse_wave_header_46/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


### Specialization of cost equations eval_parse_wave_header_bb10_in/5 
* CE 12 is refined into CE [24,25,26] 
* CE 13 is refined into CE [27] 


#### Refined cost equations eval_parse_wave_header_bb10_in/5 
* CE 24: eval_parse_wave_header_bb10_in(V__num_samples,V__samp_freq,V__num_channels,V_data_length_0,B) = 0+ eval_parse_wave_header_46(C,B):1
     [C=0,V_data_length_0=0] 
* CE 25: eval_parse_wave_header_bb10_in(V__num_samples,V__samp_freq,V__num_channels,V_data_length_0,B) = 0+ eval_parse_wave_header_46(V_data_length_0,B):2
     [0>=V_data_length_0+1] 
* CE 26: eval_parse_wave_header_bb10_in(V__num_samples,V__samp_freq,V__num_channels,V_data_length_0,B) = 0+ eval_parse_wave_header_46(V_data_length_0,B):3
     [V_data_length_0>=1] 
* CE 27: eval_parse_wave_header_bb10_in(V__num_samples,V__samp_freq,V__num_channels,V_data_length_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_parse_wave_header_bb10_in/5 
* CEs [24,25,26,27] --> Loop 21 

#### Loops of eval_parse_wave_header_bb10_in/5 
* Loop 21: eval_parse_wave_header_bb10_in(V__num_samples,V__samp_freq,V__num_channels,V_data_length_0,B) [] 

### Ranking functions of CR eval_parse_wave_header_bb10_in(V__num_samples,V__samp_freq,V__num_channels,V_data_length_0,B) 

#### Partial ranking functions of CR eval_parse_wave_header_bb10_in(V__num_samples,V__samp_freq,V__num_channels,V_data_length_0,B) 


### Resulting Chains:eval_parse_wave_header_bb10_in(V__num_samples,V__samp_freq,V__num_channels,V_data_length_0,B) 
* [21]


### Merging Chains  eval_parse_wave_header_bb10_in/5 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations loop_cont_eval_parse_wave_header_bb2_in/6 
* CE 11 is refined into CE [28] 
* CE 10 is refined into CE [29] 
* CE 9 is refined into CE [30] 


#### Refined cost equations loop_cont_eval_parse_wave_header_bb2_in/6 
* CE 28: loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E) = 0+ eval_parse_wave_header_bb10_in(A,B,C,D,E):1
     [F=4] 
* CE 29: loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E) = 0+ eval_parse_wave_header_bb10_in(A,B,C,G,E):1
     [F=3] 
* CE 30: loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E) = 0
     [F=2] 

### Cost equations --> "Loop" of loop_cont_eval_parse_wave_header_bb2_in/6 
* CEs [28] --> Loop 22 
* CEs [29] --> Loop 23 
* CEs [30] --> Loop 24 

#### Loops of loop_cont_eval_parse_wave_header_bb2_in/6 
* Loop 22: loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E) [F=4] 
* Loop 23: loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E) [F=3] 
* Loop 24: loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E) [F=2] 

### Ranking functions of CR loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E) 

#### Partial ranking functions of CR loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E) 


### Resulting Chains:loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E) 
* [24]
* [23]
* [22]


### Merging Chains  loop_cont_eval_parse_wave_header_bb2_in/6 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations eval_parse_wave_header_3/4 
* CE 3 is refined into CE [31] 
* CE 4 is refined into CE [32,33,34] 


#### Refined cost equations eval_parse_wave_header_3/4 
* CE 31: eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B) = 0
     [] 
* CE 32: eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B) = 1+ eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,C,D,E,F,G,H):1+ loop_cont_eval_parse_wave_header_bb2_in(I,E,F,G,H,B):1
     [I=2,D=2,C=0] 
* CE 33: eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B) = 1+ eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,C,D,V__num_samples,V__samp_freq,V__num_channels,E):2+ loop_cont_eval_parse_wave_header_bb2_in(F,V__num_samples,V__samp_freq,V__num_channels,E,B):2
     [F=3,D=3,C=0] 
* CE 34: eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B) = 1+ eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,C,D,V__num_samples,V__samp_freq,V__num_channels,E):3+ loop_cont_eval_parse_wave_header_bb2_in(F,V__num_samples,V__samp_freq,V__num_channels,G,B):3
     [G=0,F=4,E=0,D=4,C=0] 

### Cost equations --> "Loop" of eval_parse_wave_header_3/4 
* CEs [31,32,33,34] --> Loop 25 

#### Loops of eval_parse_wave_header_3/4 
* Loop 25: eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B) [] 

### Ranking functions of CR eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B) 

#### Partial ranking functions of CR eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B) 


### Resulting Chains:eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B) 
* [25]


### Merging Chains  eval_parse_wave_header_3/4 into  External patterns of execution 
* [[25]] --> 1 


### Specialization of cost equations eval_parse_wave_header_start/4 
* CE 2 is refined into CE [35] 


#### Refined cost equations eval_parse_wave_header_start/4 
* CE 35: eval_parse_wave_header_start(V__num_samples,V__samp_freq,V__num_channels,B) = 0+ eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B):1
     [] 

### Cost equations --> "Loop" of eval_parse_wave_header_start/4 
* CEs [35] --> Loop 26 

#### Loops of eval_parse_wave_header_start/4 
* Loop 26: eval_parse_wave_header_start(V__num_samples,V__samp_freq,V__num_channels,B) [] 

### Ranking functions of CR eval_parse_wave_header_start(V__num_samples,V__samp_freq,V__num_channels,B) 

#### Partial ranking functions of CR eval_parse_wave_header_start(V__num_samples,V__samp_freq,V__num_channels,B) 


### Resulting Chains:eval_parse_wave_header_start(V__num_samples,V__samp_freq,V__num_channels,B) 
* [26]


### Merging Chains  eval_parse_wave_header_start/4 into  External patterns of execution 
* [[26]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) -> [eval_parse_wave_header_bb2_in(V__num_samples',V__samp_freq',V__num_channels',V_loop_sanity_0',B',C',D',E',F')] 
1
#### Cost of phase [14]:eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) -> [eval_parse_wave_header_bb2_in(V__num_samples',V__samp_freq',V__num_channels',V_loop_sanity_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< -V_loop_sanity_0+20
it(14) =< -V_loop_sanity_0+V_loop_sanity_0'

#### Cost of phase [14]:eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) -> [eval_parse_wave_header_bb2_in(V__num_samples',V__samp_freq',V__num_channels',V_loop_sanity_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< -V_loop_sanity_0+20
it(14) =< -V_loop_sanity_0+V_loop_sanity_0'

#### Cost of phase [14]:eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F) -> [eval_parse_wave_header_bb2_in(V__num_samples',V__samp_freq',V__num_channels',V_loop_sanity_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< -V_loop_sanity_0+20
it(14) =< -V_loop_sanity_0+V_loop_sanity_0'

#### Cost of chains of eval_parse_wave_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_loop_sanity_0,B,C,D,E,F):
* Chain [[14],17]: 1*it(14)+0
  Such that:it(14) =< -V_loop_sanity_0+19

  with precondition: [B=2,18>=V_loop_sanity_0,V_loop_sanity_0>=0] 

* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< -V_loop_sanity_0+19

  with precondition: [B=3,V__num_samples=C,V__samp_freq=D,V__num_channels=E,18>=V_loop_sanity_0,V_loop_sanity_0>=0] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< -V_loop_sanity_0+20

  with precondition: [B=4,F=0,V__num_samples=C,V__samp_freq=D,V__num_channels=E,19>=V_loop_sanity_0,V_loop_sanity_0>=0] 

* Chain [17]: 0
  with precondition: [B=2,19>=V_loop_sanity_0,V_loop_sanity_0>=0] 

* Chain [16]: 0
  with precondition: [B=3,C=V__num_samples,D=V__samp_freq,E=V__num_channels,19>=V_loop_sanity_0,V_loop_sanity_0>=0] 


#### Cost of chains of eval_parse_wave_header_46(V_data_length_0,B):
* Chain [20]: 0
  with precondition: [V_data_length_0=0] 

* Chain [19]: 0
  with precondition: [0>=V_data_length_0+1] 

* Chain [18]: 0
  with precondition: [V_data_length_0>=1] 


#### Cost of chains of eval_parse_wave_header_bb10_in(V__num_samples,V__samp_freq,V__num_channels,V_data_length_0,B):
* Chain [21]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_parse_wave_header_bb2_in(F,A,B,C,D,E):
* Chain [24]: 0
  with precondition: [F=2] 

* Chain [23]: 0
  with precondition: [F=3] 

* Chain [22]: 0
  with precondition: [F=4] 


#### Cost of chains of eval_parse_wave_header_3(V__num_samples,V__samp_freq,V__num_channels,B):
* Chain [25]: 59
  with precondition: [] 


#### Cost of chains of eval_parse_wave_header_start(V__num_samples,V__samp_freq,V__num_channels,B):
* Chain [26]: 59
  with precondition: [] 


Closed-form bounds of eval_parse_wave_header_start(V__num_samples,V__samp_freq,V__num_channels,B): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: 59 
    - Complexity: constant 

### Maximum cost of eval_parse_wave_header_start(V__num_samples,V__samp_freq,V__num_channels,B): 59 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 239 ms.
* Invariants computed in 52 ms.
   - Backward Invariants 33 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 118 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 80 ms.
   - Equation cost structures 34 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 34 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 707 ms.

