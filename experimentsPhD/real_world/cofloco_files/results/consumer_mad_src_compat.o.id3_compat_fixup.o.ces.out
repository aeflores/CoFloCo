Warning: Ignored call to eval_id3_compat_fixup_stop/1 in equation eval_id3_compat_fixup_77/1 
Warning: Ignored call to eval_id3_compat_fixup_stop/1 in equation eval_id3_compat_fixup_79/1 
Warning: Ignored call to eval_id3_compat_fixup_stop/1 in equation eval_id3_compat_fixup_bb29_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_id3_compat_fixup_10/3,eval_id3_compat_fixup_11/3,eval_id3_compat_fixup_12/3,eval_id3_compat_fixup_13/3,eval_id3_compat_fixup_14/3,eval_id3_compat_fixup_15/3,eval_id3_compat_fixup_16/3,eval_id3_compat_fixup_17/3,eval_id3_compat_fixup_18/3,eval_id3_compat_fixup_19/3,eval_id3_compat_fixup_20/3,eval_id3_compat_fixup_25/3,eval_id3_compat_fixup_26/4,eval_id3_compat_fixup_3/3,eval_id3_compat_fixup_30/6,eval_id3_compat_fixup_31/6,eval_id3_compat_fixup_32/6,eval_id3_compat_fixup_33/6,eval_id3_compat_fixup_34/6,eval_id3_compat_fixup_35/6,eval_id3_compat_fixup_36/6,eval_id3_compat_fixup_37/6,eval_id3_compat_fixup_38/6,eval_id3_compat_fixup_4/3,eval_id3_compat_fixup_48/6,eval_id3_compat_fixup_49/6,eval_id3_compat_fixup_5/3,eval_id3_compat_fixup_50/6,eval_id3_compat_fixup_51/6,eval_id3_compat_fixup_6/3,eval_id3_compat_fixup_7/3,eval_id3_compat_fixup_74/6,eval_id3_compat_fixup_75/6,eval_id3_compat_fixup_8/3,eval_id3_compat_fixup_9/3,eval_id3_compat_fixup_bb15_in/6,eval_id3_compat_fixup_bb18_in/6,eval_id3_compat_fixup_bb1_in/2,eval_id3_compat_fixup_bb20_in/6,eval_id3_compat_fixup_bb9_in/3]
1. non_recursive  : [eval_id3_compat_fixup_77/1]
2. non_recursive  : [eval_id3_compat_fixup_76/1]
3. non_recursive  : [eval_id3_compat_fixup_79/1]
4. non_recursive  : [eval_id3_compat_fixup_78/1]
5. non_recursive  : [eval_id3_compat_fixup_bb29_in/1]
6. non_recursive  : [eval_id3_compat_fixup_92/1]
7. non_recursive  : [eval_id3_compat_fixup_91/1]
8. non_recursive  : [eval_id3_compat_fixup_bb28_in/1]
9. non_recursive  : [eval_id3_compat_fixup_90/1]
10. non_recursive  : [eval_id3_compat_fixup_89/1]
11. non_recursive  : [eval_id3_compat_fixup_88/1]
12. non_recursive  : [eval_id3_compat_fixup_87/1]
13. non_recursive  : [eval_id3_compat_fixup_86/1]
14. non_recursive  : [eval_id3_compat_fixup_85/1]
15. non_recursive  : [eval_id3_compat_fixup_83/1]
16. non_recursive  : [eval_id3_compat_fixup_82/1]
17. non_recursive  : [loop_cont_eval_id3_compat_fixup_bb1_in/2]
18. non_recursive  : [eval_id3_compat_fixup_1/1]
19. non_recursive  : [eval_id3_compat_fixup_0/1]
20. non_recursive  : [eval_id3_compat_fixup_bb0_in/1]
21. non_recursive  : [eval_id3_compat_fixup_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_id3_compat_fixup_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_id3_compat_fixup_90/1
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_id3_compat_fixup_88/1
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_id3_compat_fixup_86/1
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_id3_compat_fixup_83/1
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into loop_cont_eval_id3_compat_fixup_bb1_in/2
18. SCC is partially evaluated into eval_id3_compat_fixup_1/1
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_id3_compat_fixup_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_id3_compat_fixup_bb1_in/2 
* CE 4 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 6 is refined into CE [23] 
* CE 5 is refined into CE [24] 


#### Refined cost equations eval_id3_compat_fixup_bb1_in/2 
* CE 20: eval_id3_compat_fixup_bb1_in(V_index_0,B) = 0
     [V_index_0>=0,B=5] 
* CE 21: eval_id3_compat_fixup_bb1_in(V_index_0,B) = 0
     [V_index_0>=0,B=4] 
* CE 22: eval_id3_compat_fixup_bb1_in(V_index_0,B) = 0
     [V_index_0>=0,B=3] 
* CE 23: eval_id3_compat_fixup_bb1_in(V_index_0,B) = 0
     [V_index_0>=0,B=2] 
* CE 24: eval_id3_compat_fixup_bb1_in(V_index_0,B) = 1+ eval_id3_compat_fixup_bb1_in(C,B)
     [V_index_0>=0,V_index_0+1=C] 

### Cost equations --> "Loop" of eval_id3_compat_fixup_bb1_in/2 
* CEs [24] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [23] --> Loop 20 

#### Loops of eval_id3_compat_fixup_bb1_in/2 
* Loop 16: eval_id3_compat_fixup_bb1_in(V_index_0,B)->  eval_id3_compat_fixup_bb1_in(V_index_0',B)
                  [V_index_0>=0,V_index_0+1=V_index_0'] 
* Loop 17: eval_id3_compat_fixup_bb1_in(V_index_0,B) [V_index_0>=0,B=5] 
* Loop 18: eval_id3_compat_fixup_bb1_in(V_index_0,B) [V_index_0>=0,B=4] 
* Loop 19: eval_id3_compat_fixup_bb1_in(V_index_0,B) [V_index_0>=0,B=3] 
* Loop 20: eval_id3_compat_fixup_bb1_in(V_index_0,B) [V_index_0>=0,B=2] 

### Ranking functions of CR eval_id3_compat_fixup_bb1_in(V_index_0,B) 

#### Partial ranking functions of CR eval_id3_compat_fixup_bb1_in(V_index_0,B) 


### Resulting Chains:eval_id3_compat_fixup_bb1_in(V_index_0,B) 
* [[16]]...
* [[16],20]
* [[16],19]
* [[16],18]
* [[16],17]
* [20]
* [19]
* [18]
* [17]


### Merging Chains  eval_id3_compat_fixup_bb1_in/2 into  External patterns of execution 
* [[20],[20,[16]]] --> 1 
* [[19],[19,[16]]] --> 2 
* [[18],[18,[16]]] --> 3 
* [[17],[17,[16]]] --> 4 
* [[[16]]] --> 5 


### Specialization of cost equations eval_id3_compat_fixup_90/1 
* CE 19 is refined into CE [25] 


#### Refined cost equations eval_id3_compat_fixup_90/1 
* CE 25: eval_id3_compat_fixup_90(B) = 0
     [] 

### Cost equations --> "Loop" of eval_id3_compat_fixup_90/1 
* CEs [25] --> Loop 21 

#### Loops of eval_id3_compat_fixup_90/1 
* Loop 21: eval_id3_compat_fixup_90(B) [] 

### Ranking functions of CR eval_id3_compat_fixup_90(B) 

#### Partial ranking functions of CR eval_id3_compat_fixup_90(B) 


### Resulting Chains:eval_id3_compat_fixup_90(B) 
* [21]


### Merging Chains  eval_id3_compat_fixup_90/1 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations eval_id3_compat_fixup_88/1 
* CE 17 is refined into CE [26] 
* CE 18 is refined into CE [27] 


#### Refined cost equations eval_id3_compat_fixup_88/1 
* CE 26: eval_id3_compat_fixup_88(B) = 0
     [] 
* CE 27: eval_id3_compat_fixup_88(B) = 0+ eval_id3_compat_fixup_90(B):1
     [] 

### Cost equations --> "Loop" of eval_id3_compat_fixup_88/1 
* CEs [26,27] --> Loop 22 

#### Loops of eval_id3_compat_fixup_88/1 
* Loop 22: eval_id3_compat_fixup_88(B) [] 

### Ranking functions of CR eval_id3_compat_fixup_88(B) 

#### Partial ranking functions of CR eval_id3_compat_fixup_88(B) 


### Resulting Chains:eval_id3_compat_fixup_88(B) 
* [22]


### Merging Chains  eval_id3_compat_fixup_88/1 into  External patterns of execution 
* [[22]] --> 1 


### Specialization of cost equations eval_id3_compat_fixup_86/1 
* CE 15 is refined into CE [28] 
* CE 16 is refined into CE [29] 


#### Refined cost equations eval_id3_compat_fixup_86/1 
* CE 28: eval_id3_compat_fixup_86(B) = 0
     [] 
* CE 29: eval_id3_compat_fixup_86(B) = 0+ eval_id3_compat_fixup_88(B):1
     [] 

### Cost equations --> "Loop" of eval_id3_compat_fixup_86/1 
* CEs [28,29] --> Loop 23 

#### Loops of eval_id3_compat_fixup_86/1 
* Loop 23: eval_id3_compat_fixup_86(B) [] 

### Ranking functions of CR eval_id3_compat_fixup_86(B) 

#### Partial ranking functions of CR eval_id3_compat_fixup_86(B) 


### Resulting Chains:eval_id3_compat_fixup_86(B) 
* [23]


### Merging Chains  eval_id3_compat_fixup_86/1 into  External patterns of execution 
* [[23]] --> 1 


### Specialization of cost equations eval_id3_compat_fixup_83/1 
* CE 13 is refined into CE [30] 
* CE 14 is refined into CE [31] 


#### Refined cost equations eval_id3_compat_fixup_83/1 
* CE 30: eval_id3_compat_fixup_83(B) = 0
     [] 
* CE 31: eval_id3_compat_fixup_83(B) = 0+ eval_id3_compat_fixup_86(B):1
     [] 

### Cost equations --> "Loop" of eval_id3_compat_fixup_83/1 
* CEs [30,31] --> Loop 24 

#### Loops of eval_id3_compat_fixup_83/1 
* Loop 24: eval_id3_compat_fixup_83(B) [] 

### Ranking functions of CR eval_id3_compat_fixup_83(B) 

#### Partial ranking functions of CR eval_id3_compat_fixup_83(B) 


### Resulting Chains:eval_id3_compat_fixup_83(B) 
* [24]


### Merging Chains  eval_id3_compat_fixup_83/1 into  External patterns of execution 
* [[24]] --> 1 


### Specialization of cost equations loop_cont_eval_id3_compat_fixup_bb1_in/2 
* CE 12 is refined into CE [32] 
* CE 11 is refined into CE [33] 
* CE 10 is refined into CE [34] 
* CE 9 is refined into CE [35] 


#### Refined cost equations loop_cont_eval_id3_compat_fixup_bb1_in/2 
* CE 32: loop_cont_eval_id3_compat_fixup_bb1_in(B,A) = 0
     [B=5] 
* CE 33: loop_cont_eval_id3_compat_fixup_bb1_in(B,A) = 0
     [B=4] 
* CE 34: loop_cont_eval_id3_compat_fixup_bb1_in(B,A) = 0+ eval_id3_compat_fixup_83(A):1
     [B=3] 
* CE 35: loop_cont_eval_id3_compat_fixup_bb1_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_id3_compat_fixup_bb1_in/2 
* CEs [32] --> Loop 25 
* CEs [33] --> Loop 26 
* CEs [34] --> Loop 27 
* CEs [35] --> Loop 28 

#### Loops of loop_cont_eval_id3_compat_fixup_bb1_in/2 
* Loop 25: loop_cont_eval_id3_compat_fixup_bb1_in(B,A) [B=5] 
* Loop 26: loop_cont_eval_id3_compat_fixup_bb1_in(B,A) [B=4] 
* Loop 27: loop_cont_eval_id3_compat_fixup_bb1_in(B,A) [B=3] 
* Loop 28: loop_cont_eval_id3_compat_fixup_bb1_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_id3_compat_fixup_bb1_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_id3_compat_fixup_bb1_in(B,A) 


### Resulting Chains:loop_cont_eval_id3_compat_fixup_bb1_in(B,A) 
* [28]
* [27]
* [26]
* [25]


### Merging Chains  loop_cont_eval_id3_compat_fixup_bb1_in/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[26]] --> 3 
* [[25]] --> 4 


### Specialization of cost equations eval_id3_compat_fixup_1/1 
* CE 3 is refined into CE [36,37,38,39,40] 


#### Refined cost equations eval_id3_compat_fixup_1/1 
* CE 36: eval_id3_compat_fixup_1(B) = 1+ eval_id3_compat_fixup_bb1_in(C,D):1+ loop_cont_eval_id3_compat_fixup_bb1_in(E,B):1
     [E=2,D=2,C=0] 
* CE 37: eval_id3_compat_fixup_1(B) = 1+ eval_id3_compat_fixup_bb1_in(C,D):2+ loop_cont_eval_id3_compat_fixup_bb1_in(E,B):2
     [E=3,D=3,C=0] 
* CE 38: eval_id3_compat_fixup_1(B) = 1+ eval_id3_compat_fixup_bb1_in(C,D):3+ loop_cont_eval_id3_compat_fixup_bb1_in(E,B):3
     [E=4,D=4,C=0] 
* CE 39: eval_id3_compat_fixup_1(B) = 1+ eval_id3_compat_fixup_bb1_in(C,D):4+ loop_cont_eval_id3_compat_fixup_bb1_in(E,B):4
     [E=5,D=5,C=0] 
* CE 40: eval_id3_compat_fixup_1(B) = 1+ eval_id3_compat_fixup_bb1_in(C,D):5
     [C=0] 

### Cost equations --> "Loop" of eval_id3_compat_fixup_1/1 
* CEs [40] --> Loop 29 
* CEs [36,37,38,39] --> Loop 30 

#### Loops of eval_id3_compat_fixup_1/1 
* Loop 29: eval_id3_compat_fixup_1(B) [] 
* Loop 30: eval_id3_compat_fixup_1(B) [] 

### Ranking functions of CR eval_id3_compat_fixup_1(B) 

#### Partial ranking functions of CR eval_id3_compat_fixup_1(B) 


### Resulting Chains:eval_id3_compat_fixup_1(B) 
* [30]
* [29]...


### Merging Chains  eval_id3_compat_fixup_1/1 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_id3_compat_fixup_start/1 
* CE 2 is refined into CE [41,42] 


#### Refined cost equations eval_id3_compat_fixup_start/1 
* CE 41: eval_id3_compat_fixup_start(B) = 0+ eval_id3_compat_fixup_1(B):1
     [] 
* CE 42: eval_id3_compat_fixup_start(B) = 0+ eval_id3_compat_fixup_1(B):2
     [] 

### Cost equations --> "Loop" of eval_id3_compat_fixup_start/1 
* CEs [42] --> Loop 31 
* CEs [41] --> Loop 32 

#### Loops of eval_id3_compat_fixup_start/1 
* Loop 31: eval_id3_compat_fixup_start(B) [] 
* Loop 32: eval_id3_compat_fixup_start(B) [] 

### Ranking functions of CR eval_id3_compat_fixup_start(B) 

#### Partial ranking functions of CR eval_id3_compat_fixup_start(B) 


### Resulting Chains:eval_id3_compat_fixup_start(B) 
* [32]
* [31]...


### Merging Chains  eval_id3_compat_fixup_start/1 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [16] 

 * loop 16:eval_id3_compat_fixup_bb1_in(V_index_0,B) -> [eval_id3_compat_fixup_bb1_in(V_index_0',B')] 
1
#### Cost of phase [16]:eval_id3_compat_fixup_bb1_in(V_index_0,B) -> [eval_id3_compat_fixup_bb1_in(V_index_0',B')] 
1*it(16)+0
#### Cost of phase [16]:eval_id3_compat_fixup_bb1_in(V_index_0,B) -> [eval_id3_compat_fixup_bb1_in(V_index_0',B')] 
1*it(16)+0
#### Cost of phase [16]:eval_id3_compat_fixup_bb1_in(V_index_0,B) -> [eval_id3_compat_fixup_bb1_in(V_index_0',B')] 
1*it(16)+0
#### Cost of phase [16]:eval_id3_compat_fixup_bb1_in(V_index_0,B) -> [eval_id3_compat_fixup_bb1_in(V_index_0',B')] 
1*it(16)+0
#### Cost of phase [16]:eval_id3_compat_fixup_bb1_in(V_index_0,B) -> [eval_id3_compat_fixup_bb1_in(V_index_0',B')] 
1*it(16)+0
#### Cost of chains of eval_id3_compat_fixup_bb1_in(V_index_0,B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [V_index_0>=0] 

* Chain [[16],20]: 1*it(16)+0
  with precondition: [B=2,V_index_0>=0] 

* Chain [[16],19]: 1*it(16)+0
  with precondition: [B=3,V_index_0>=0] 

* Chain [[16],18]: 1*it(16)+0
  with precondition: [B=4,V_index_0>=0] 

* Chain [[16],17]: 1*it(16)+0
  with precondition: [B=5,V_index_0>=0] 

* Chain [20]: 0
  with precondition: [B=2,V_index_0>=0] 

* Chain [19]: 0
  with precondition: [B=3,V_index_0>=0] 

* Chain [18]: 0
  with precondition: [B=4,V_index_0>=0] 

* Chain [17]: 0
  with precondition: [B=5,V_index_0>=0] 


#### Cost of chains of eval_id3_compat_fixup_90(B):
* Chain [21]: 0
  with precondition: [] 


#### Cost of chains of eval_id3_compat_fixup_88(B):
* Chain [22]: 0
  with precondition: [] 


#### Cost of chains of eval_id3_compat_fixup_86(B):
* Chain [23]: 0
  with precondition: [] 


#### Cost of chains of eval_id3_compat_fixup_83(B):
* Chain [24]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_id3_compat_fixup_bb1_in(B,A):
* Chain [28]: 0
  with precondition: [B=2] 

* Chain [27]: 0
  with precondition: [B=3] 

* Chain [26]: 0
  with precondition: [B=4] 

* Chain [25]: 0
  with precondition: [B=5] 


#### Cost of chains of eval_id3_compat_fixup_1(B):
* Chain [30]: 1*aux(5)+0
  with precondition: [] 

* Chain [29]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_id3_compat_fixup_start(B):
* Chain [32]: 1*s(10)+0
  with precondition: [] 

* Chain [31]...: 1*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_id3_compat_fixup_start(B): 
-------------------------------------
* Chain [32] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_id3_compat_fixup_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 39 ms.
* Invariants computed in 10 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 19 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 124 ms.

