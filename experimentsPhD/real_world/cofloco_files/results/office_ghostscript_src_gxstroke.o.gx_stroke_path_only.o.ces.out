Warning: Ignored call to eval_gx_stroke_path_only_stop/1 in equation eval_gx_stroke_path_only_bb155_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_gx_stroke_path_only_bb155_in/1]
1. non_recursive  : [eval_gx_stroke_path_only_361/1]
2. non_recursive  : [eval_gx_stroke_path_only_360/1]
3. non_recursive  : [eval_gx_stroke_path_only_bb153_in/1]
4. recursive  : [eval_gx_stroke_path_only_bb112_in/1]
5. recursive  : [eval_gx_stroke_path_only_312/1,eval_gx_stroke_path_only_313/1,eval_gx_stroke_path_only__critedge7_in/1,eval_gx_stroke_path_only_bb116_in/1,eval_gx_stroke_path_only_bb119_in/1,eval_gx_stroke_path_only_bb120_in/1,eval_gx_stroke_path_only_bb123_in/1,eval_gx_stroke_path_only_bb124_in/1,eval_gx_stroke_path_only_bb128_in/1,eval_gx_stroke_path_only_bb130_in/1,eval_gx_stroke_path_only_bb82_in/1,loop_cont_eval_gx_stroke_path_only_bb112_in/2]
6. recursive  : [eval_gx_stroke_path_only_198/1,eval_gx_stroke_path_only_199/1,eval_gx_stroke_path_only_210/1,eval_gx_stroke_path_only_211/1,eval_gx_stroke_path_only_212/1,eval_gx_stroke_path_only_246/1,eval_gx_stroke_path_only_247/1,eval_gx_stroke_path_only_251/1,eval_gx_stroke_path_only_252/1,eval_gx_stroke_path_only_253/1,eval_gx_stroke_path_only_265/1,eval_gx_stroke_path_only_266/1,eval_gx_stroke_path_only_274/1,eval_gx_stroke_path_only_275/1,eval_gx_stroke_path_only_276/1,eval_gx_stroke_path_only_277/1,eval_gx_stroke_path_only_278/1,eval_gx_stroke_path_only_279/1,eval_gx_stroke_path_only_280/1,eval_gx_stroke_path_only_281/1,eval_gx_stroke_path_only_282/1,eval_gx_stroke_path_only_bb100_in/1,eval_gx_stroke_path_only_bb105_in/1,eval_gx_stroke_path_only_bb107_in/1,eval_gx_stroke_path_only_bb110_in/1,eval_gx_stroke_path_only_bb79_in/1,eval_gx_stroke_path_only_bb89_in/1,eval_gx_stroke_path_only_bb91_in/1,eval_gx_stroke_path_only_bb93_in/1,eval_gx_stroke_path_only_bb94_in/1,eval_gx_stroke_path_only_bb96_in/1,eval_gx_stroke_path_only_bb99_in/1,loop_cont_eval_gx_stroke_path_only_bb82_in/2]
7. recursive  : [eval_gx_stroke_path_only_340/1,eval_gx_stroke_path_only_341/1,eval_gx_stroke_path_only_349/1,eval_gx_stroke_path_only_350/1,eval_gx_stroke_path_only_351/1,eval_gx_stroke_path_only_352/1,eval_gx_stroke_path_only_353/1,eval_gx_stroke_path_only__critedge_in/1,eval_gx_stroke_path_only_bb137_in/1,eval_gx_stroke_path_only_bb138_in/1,eval_gx_stroke_path_only_bb139_in/1,eval_gx_stroke_path_only_bb144_in/1,eval_gx_stroke_path_only_bb146_in/1,eval_gx_stroke_path_only_bb148_in/1,eval_gx_stroke_path_only_bb77_in/1,loop_cont_eval_gx_stroke_path_only_bb79_in/2]
8. non_recursive  : [eval_gx_stroke_path_only_357/1]
9. non_recursive  : [eval_gx_stroke_path_only_356/1]
10. non_recursive  : [eval_gx_stroke_path_only_bb151_in/1]
11. non_recursive  : [eval_gx_stroke_path_only_355/1]
12. non_recursive  : [eval_gx_stroke_path_only_354/1]
13. non_recursive  : [eval_gx_stroke_path_only_bb149_in/1]
14. non_recursive  : [loop_cont_eval_gx_stroke_path_only_bb77_in/2]
15. non_recursive  : [eval_gx_stroke_path_only_bb76_in/1]
16. non_recursive  : [eval_gx_stroke_path_only_172/1]
17. non_recursive  : [eval_gx_stroke_path_only_171/1]
18. non_recursive  : [eval_gx_stroke_path_only_bb74_in/1]
19. non_recursive  : [eval_gx_stroke_path_only_170/1]
20. non_recursive  : [eval_gx_stroke_path_only_169/1]
21. non_recursive  : [eval_gx_stroke_path_only_bb72_in/1]
22. non_recursive  : [eval_gx_stroke_path_only_168/1]
23. non_recursive  : [eval_gx_stroke_path_only_167/3]
24. non_recursive  : [eval_gx_stroke_path_only_bb69_in/1]
25. non_recursive  : [eval_gx_stroke_path_only_161/1]
26. non_recursive  : [eval_gx_stroke_path_only_160/1]
27. non_recursive  : [eval_gx_stroke_path_only_159/1]
28. non_recursive  : [eval_gx_stroke_path_only_bb68_in/1]
29. non_recursive  : [eval_gx_stroke_path_only_158/1]
30. non_recursive  : [eval_gx_stroke_path_only_157/1]
31. non_recursive  : [eval_gx_stroke_path_only_bb64_in/1]
32. non_recursive  : [eval_gx_stroke_path_only_NewDefault_in/1]
33. non_recursive  : [eval_gx_stroke_path_only_bb61_in/1]
34. non_recursive  : [eval_gx_stroke_path_only_bb59_in/1]
35. non_recursive  : [eval_gx_stroke_path_only_bb57_in/1]
36. non_recursive  : [eval_gx_stroke_path_only_bb54_in/1]
37. non_recursive  : [eval_gx_stroke_path_only_bb52_in/1]
38. non_recursive  : [eval_gx_stroke_path_only_144/1]
39. non_recursive  : [eval_gx_stroke_path_only_143/1]
40. non_recursive  : [eval_gx_stroke_path_only_140/1]
41. non_recursive  : [eval_gx_stroke_path_only_139/1]
42. non_recursive  : [eval_gx_stroke_path_only_bb48_in/1]
43. non_recursive  : [eval_gx_stroke_path_only_bb38_in/1]
44. non_recursive  : [eval_gx_stroke_path_only_bb36_in/1]
45. non_recursive  : [eval_gx_stroke_path_only_bb34_in/1]
46. non_recursive  : [eval_gx_stroke_path_only_85/1]
47. non_recursive  : [eval_gx_stroke_path_only_84/1]
48. non_recursive  : [eval_gx_stroke_path_only_bb46_in/1]
49. non_recursive  : [eval_gx_stroke_path_only_bb44_in/1]
50. non_recursive  : [eval_gx_stroke_path_only_bb42_in/1]
51. non_recursive  : [eval_gx_stroke_path_only_bb31_in/1]
52. non_recursive  : [eval_gx_stroke_path_only_bb27_in/1]
53. non_recursive  : [eval_gx_stroke_path_only_69/1]
54. non_recursive  : [eval_gx_stroke_path_only_68/1]
55. non_recursive  : [eval_gx_stroke_path_only_71/1]
56. non_recursive  : [eval_gx_stroke_path_only_70/1]
57. non_recursive  : [eval_gx_stroke_path_only_bb24_in/1]
58. non_recursive  : [eval_gx_stroke_path_only_bb23_in/1]
59. non_recursive  : [eval_gx_stroke_path_only_bb21_in/1]
60. non_recursive  : [eval_gx_stroke_path_only_bb19_in/1]
61. non_recursive  : [eval_gx_stroke_path_only_bb17_in/1]
62. non_recursive  : [eval_gx_stroke_path_only_17/1]
63. non_recursive  : [eval_gx_stroke_path_only_16/1]
64. non_recursive  : [eval_gx_stroke_path_only_15/1]
65. non_recursive  : [eval_gx_stroke_path_only_bb13_in/1]
66. non_recursive  : [eval_gx_stroke_path_only_bb3_in/1]
67. non_recursive  : [eval_gx_stroke_path_only_bb9_in/1]
68. non_recursive  : [eval_gx_stroke_path_only_bb0_in/1]
69. non_recursive  : [eval_gx_stroke_path_only_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_gx_stroke_path_only_bb153_in/1
4. SCC is partially evaluated into eval_gx_stroke_path_only_bb112_in/1
5. SCC is partially evaluated into eval_gx_stroke_path_only_bb82_in/1
6. SCC is partially evaluated into eval_gx_stroke_path_only_bb79_in/1
7. SCC is partially evaluated into eval_gx_stroke_path_only_bb77_in/1
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_gx_stroke_path_only_bb151_in/1
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_gx_stroke_path_only_bb149_in/1
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_gx_stroke_path_only_bb76_in/1
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_gx_stroke_path_only_bb74_in/1
19. SCC is partially evaluated into eval_gx_stroke_path_only_170/1
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_gx_stroke_path_only_bb72_in/1
22. SCC is partially evaluated into eval_gx_stroke_path_only_168/1
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_gx_stroke_path_only_bb69_in/1
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into eval_gx_stroke_path_only_bb64_in/1
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is partially evaluated into eval_gx_stroke_path_only_bb54_in/1
37. SCC is completely evaluated into other SCCs
38. SCC is completely evaluated into other SCCs
39. SCC is completely evaluated into other SCCs
40. SCC is completely evaluated into other SCCs
41. SCC is completely evaluated into other SCCs
42. SCC is partially evaluated into eval_gx_stroke_path_only_bb48_in/1
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is completely evaluated into other SCCs
46. SCC is completely evaluated into other SCCs
47. SCC is completely evaluated into other SCCs
48. SCC is completely evaluated into other SCCs
49. SCC is completely evaluated into other SCCs
50. SCC is completely evaluated into other SCCs
51. SCC is partially evaluated into eval_gx_stroke_path_only_bb31_in/1
52. SCC is partially evaluated into eval_gx_stroke_path_only_bb27_in/1
53. SCC is completely evaluated into other SCCs
54. SCC is completely evaluated into other SCCs
55. SCC is completely evaluated into other SCCs
56. SCC is completely evaluated into other SCCs
57. SCC is partially evaluated into eval_gx_stroke_path_only_bb24_in/1
58. SCC is completely evaluated into other SCCs
59. SCC is completely evaluated into other SCCs
60. SCC is completely evaluated into other SCCs
61. SCC is completely evaluated into other SCCs
62. SCC is partially evaluated into eval_gx_stroke_path_only_17/1
63. SCC is completely evaluated into other SCCs
64. SCC is completely evaluated into other SCCs
65. SCC is completely evaluated into other SCCs
66. SCC is completely evaluated into other SCCs
67. SCC is completely evaluated into other SCCs
68. SCC is partially evaluated into eval_gx_stroke_path_only_bb0_in/1
69. SCC is partially evaluated into eval_gx_stroke_path_only_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gx_stroke_path_only_bb153_in/1 
* CE 23 is refined into CE [50] 


#### Refined cost equations eval_gx_stroke_path_only_bb153_in/1 
* CE 50: eval_gx_stroke_path_only_bb153_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb153_in/1 
* CEs [50] --> Loop 33 

#### Loops of eval_gx_stroke_path_only_bb153_in/1 
* Loop 33: eval_gx_stroke_path_only_bb153_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb153_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb153_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb153_in(B) 
* [33]


### Merging Chains  eval_gx_stroke_path_only_bb153_in/1 into  External patterns of execution 
* [[33]] --> 1 


### Specialization of cost equations eval_gx_stroke_path_only_bb112_in/1 
* CE 49 is refined into CE [51] 
* CE 47 is refined into CE [52] 
* CE 48 is refined into CE [53] 


#### Refined cost equations eval_gx_stroke_path_only_bb112_in/1 
* CE 51: eval_gx_stroke_path_only_bb112_in(B) = 0
     [B=3] 
* CE 52: eval_gx_stroke_path_only_bb112_in(B) = 0
     [B=2] 
* CE 53: eval_gx_stroke_path_only_bb112_in(B) = 1+ eval_gx_stroke_path_only_bb112_in(B)
     [B>=2,3>=B] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb112_in/1 
* CEs [53] --> Loop 34 
* CEs [51] --> Loop 35 
* CEs [52] --> Loop 36 

#### Loops of eval_gx_stroke_path_only_bb112_in/1 
* Loop 34: eval_gx_stroke_path_only_bb112_in(B)->  eval_gx_stroke_path_only_bb112_in(B)
                  [B>=2,3>=B] 
* Loop 35: eval_gx_stroke_path_only_bb112_in(B) [B=3] 
* Loop 36: eval_gx_stroke_path_only_bb112_in(B) [B=2] 

### Ranking functions of CR eval_gx_stroke_path_only_bb112_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb112_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb112_in(B) 
* [[34]]...
* [[34],36]
* [[34],35]
* [36]
* [35]


### Merging Chains  eval_gx_stroke_path_only_bb112_in/1 into  External patterns of execution 
* [[36],[36,[34]]] --> 1 
* [[35],[35,[34]]] --> 2 
* [[[34]]] --> 3 


### Specialization of cost equations eval_gx_stroke_path_only_bb82_in/1 
* CE 46 is refined into CE [54] 
* CE 45 is refined into CE [55] 
* CE 44 is refined into CE [56] 
* CE 43 is refined into CE [57] 
* CE 41 is refined into CE [58,59] 
* CE 40 is refined into CE [60,61] 
* CE 42 is refined into CE [62,63] 


#### Refined cost equations eval_gx_stroke_path_only_bb82_in/1 
* CE 54: eval_gx_stroke_path_only_bb82_in(B) = 0
     [B=8] 
* CE 55: eval_gx_stroke_path_only_bb82_in(B) = 0
     [B=7] 
* CE 56: eval_gx_stroke_path_only_bb82_in(B) = 0
     [B=6] 
* CE 57: eval_gx_stroke_path_only_bb82_in(B) = 0
     [B=5] 
* CE 58: eval_gx_stroke_path_only_bb82_in(B) = 1+ eval_gx_stroke_path_only_bb112_in(C):2
     [C=3,B=4] 
* CE 59: eval_gx_stroke_path_only_bb82_in(B) = 1+ eval_gx_stroke_path_only_bb112_in(C):3
     [C=3,B=4] 
* CE 60: eval_gx_stroke_path_only_bb82_in(B) = 2+ eval_gx_stroke_path_only_bb112_in(C):2+ eval_gx_stroke_path_only_bb82_in(B)
     [B>=4,8>=B,C=3] 
* CE 61: eval_gx_stroke_path_only_bb82_in(B) = 2+ eval_gx_stroke_path_only_bb112_in(C):3
     [B>=4,8>=B,C=3] 
* CE 62: eval_gx_stroke_path_only_bb82_in(B) = 2+ eval_gx_stroke_path_only_bb112_in(C):1+ eval_gx_stroke_path_only_bb82_in(B)
     [B>=4,8>=B,C=2] 
* CE 63: eval_gx_stroke_path_only_bb82_in(B) = 2+ eval_gx_stroke_path_only_bb112_in(C):3
     [B>=4,8>=B,C=2] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb82_in/1 
* CEs [59,61,63] --> Loop 37 
* CEs [60,62] --> Loop 38 
* CEs [54] --> Loop 39 
* CEs [55] --> Loop 40 
* CEs [56] --> Loop 41 
* CEs [57] --> Loop 42 
* CEs [58] --> Loop 43 

#### Loops of eval_gx_stroke_path_only_bb82_in/1 
* Loop 37: eval_gx_stroke_path_only_bb82_in(B) [B>=4,8>=B] 
* Loop 38: eval_gx_stroke_path_only_bb82_in(B)->  eval_gx_stroke_path_only_bb82_in(B)
                  [B>=4,8>=B] 
* Loop 39: eval_gx_stroke_path_only_bb82_in(B) [B=8] 
* Loop 40: eval_gx_stroke_path_only_bb82_in(B) [B=7] 
* Loop 41: eval_gx_stroke_path_only_bb82_in(B) [B=6] 
* Loop 42: eval_gx_stroke_path_only_bb82_in(B) [B=5] 
* Loop 43: eval_gx_stroke_path_only_bb82_in(B) [B=4] 

### Ranking functions of CR eval_gx_stroke_path_only_bb82_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb82_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb82_in(B) 
* [[38]]...
* [[38],43]
* [[38],42]
* [[38],41]
* [[38],40]
* [[38],39]
* [[38],37]...
* [43]
* [42]
* [41]
* [40]
* [39]
* [37]...


### Merging Chains  eval_gx_stroke_path_only_bb82_in/1 into  External patterns of execution 
* [[43],[43,[38]]] --> 1 
* [[42],[42,[38]]] --> 2 
* [[41],[41,[38]]] --> 3 
* [[40],[40,[38]]] --> 4 
* [[39],[39,[38]]] --> 5 
* [[37],[37,[38]]] --> 6 
* [[[38]]] --> 7 


### Specialization of cost equations eval_gx_stroke_path_only_bb79_in/1 
* CE 35 is refined into CE [64,65,66] 
* CE 36 is refined into CE [67,68,69] 
* CE 37 is refined into CE [70,71,72] 
* CE 31 is refined into CE [73,74,75] 
* CE 38 is refined into CE [76] 
* CE 30 is refined into CE [77,78,79] 
* CE 32 is refined into CE [80,81,82] 
* CE 33 is refined into CE [83,84,85] 
* CE 34 is refined into CE [86,87,88] 


#### Refined cost equations eval_gx_stroke_path_only_bb79_in/1 
* CE 64: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):2
     [C=5,B=9] 
* CE 65: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):6
     [C=5,B=9] 
* CE 66: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):7
     [C=5,B=9] 
* CE 67: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):3
     [C=6,B=9] 
* CE 68: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):6
     [C=6,B=9] 
* CE 69: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):7
     [C=6,B=9] 
* CE 70: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):4
     [C=7,B=9] 
* CE 71: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):6
     [C=7,B=9] 
* CE 72: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):7
     [C=7,B=9] 
* CE 73: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):1
     [C=4,B=4] 
* CE 74: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):6
     [C=4,B=4] 
* CE 75: eval_gx_stroke_path_only_bb79_in(B) = 1+ eval_gx_stroke_path_only_bb82_in(C):7
     [C=4,B=4] 
* CE 76: eval_gx_stroke_path_only_bb79_in(B) = 0
     [B=4] 
* CE 77: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):5+ eval_gx_stroke_path_only_bb79_in(B)
     [B>=4,9>=B,C=8] 
* CE 78: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):6
     [B>=4,9>=B,C=8] 
* CE 79: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):7
     [B>=4,9>=B,C=8] 
* CE 80: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):2+ eval_gx_stroke_path_only_bb79_in(B)
     [B>=4,9>=B,C=5] 
* CE 81: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):6
     [B>=4,9>=B,C=5] 
* CE 82: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):7
     [B>=4,9>=B,C=5] 
* CE 83: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):3+ eval_gx_stroke_path_only_bb79_in(B)
     [B>=4,9>=B,C=6] 
* CE 84: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):6
     [B>=4,9>=B,C=6] 
* CE 85: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):7
     [B>=4,9>=B,C=6] 
* CE 86: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):4+ eval_gx_stroke_path_only_bb79_in(B)
     [B>=4,9>=B,C=7] 
* CE 87: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):6
     [B>=4,9>=B,C=7] 
* CE 88: eval_gx_stroke_path_only_bb79_in(B) = 2+ eval_gx_stroke_path_only_bb82_in(C):7
     [B>=4,9>=B,C=7] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb79_in/1 
* CEs [65,66,68,69,71,72] --> Loop 44 
* CEs [74,75,78,79,81,82,84,85,87,88] --> Loop 45 
* CEs [77,80,83,86] --> Loop 46 
* CEs [64,67,70] --> Loop 47 
* CEs [73,76] --> Loop 48 

#### Loops of eval_gx_stroke_path_only_bb79_in/1 
* Loop 44: eval_gx_stroke_path_only_bb79_in(B) [B=9] 
* Loop 45: eval_gx_stroke_path_only_bb79_in(B) [B>=4,9>=B] 
* Loop 46: eval_gx_stroke_path_only_bb79_in(B)->  eval_gx_stroke_path_only_bb79_in(B)
                  [B>=4,9>=B] 
* Loop 47: eval_gx_stroke_path_only_bb79_in(B) [B=9] 
* Loop 48: eval_gx_stroke_path_only_bb79_in(B) [B=4] 

### Ranking functions of CR eval_gx_stroke_path_only_bb79_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb79_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb79_in(B) 
* [[46]]...
* [[46],48]
* [[46],47]
* [[46],45]...
* [[46],44]...
* [48]
* [47]
* [45]...
* [44]...


### Merging Chains  eval_gx_stroke_path_only_bb79_in/1 into  External patterns of execution 
* [[48],[48,[46]]] --> 1 
* [[47],[47,[46]]] --> 2 
* [[44],[44,[46]]] --> 3 
* [[45],[45,[46]]] --> 4 
* [[[46]]] --> 5 


### Specialization of cost equations eval_gx_stroke_path_only_bb77_in/1 
* CE 25 is refined into CE [89,90,91] 
* CE 27 is refined into CE [92,93,94,95] 
* CE 28 is refined into CE [96] 
* CE 26 is refined into CE [97,98,99] 


#### Refined cost equations eval_gx_stroke_path_only_bb77_in/1 
* CE 89: eval_gx_stroke_path_only_bb77_in(B) = 1+ eval_gx_stroke_path_only_bb79_in(C):1
     [C=4,B=9] 
* CE 90: eval_gx_stroke_path_only_bb77_in(B) = 1+ eval_gx_stroke_path_only_bb79_in(C):4
     [C=4,B=9] 
* CE 91: eval_gx_stroke_path_only_bb77_in(B) = 1+ eval_gx_stroke_path_only_bb79_in(C):5
     [C=4,B=9] 
* CE 92: eval_gx_stroke_path_only_bb77_in(B) = 1+ eval_gx_stroke_path_only_bb79_in(C):2
     [C=9,B=9] 
* CE 93: eval_gx_stroke_path_only_bb77_in(B) = 1+ eval_gx_stroke_path_only_bb79_in(C):3
     [C=9,B=9] 
* CE 94: eval_gx_stroke_path_only_bb77_in(B) = 1+ eval_gx_stroke_path_only_bb79_in(C):4
     [C=9,B=9] 
* CE 95: eval_gx_stroke_path_only_bb77_in(B) = 1+ eval_gx_stroke_path_only_bb79_in(C):5
     [C=9,B=9] 
* CE 96: eval_gx_stroke_path_only_bb77_in(B) = 0
     [B=9] 
* CE 97: eval_gx_stroke_path_only_bb77_in(B) = 2+ eval_gx_stroke_path_only_bb79_in(C):1+ eval_gx_stroke_path_only_bb77_in(D)
     [D=9,C=4,B=9] 
* CE 98: eval_gx_stroke_path_only_bb77_in(B) = 2+ eval_gx_stroke_path_only_bb79_in(C):4
     [D=9,C=4,B=9] 
* CE 99: eval_gx_stroke_path_only_bb77_in(B) = 2+ eval_gx_stroke_path_only_bb79_in(C):5
     [D=9,C=4,B=9] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb77_in/1 
* CEs [90,91,93,94,95,98,99] --> Loop 49 
* CEs [97] --> Loop 50 
* CEs [89,92,96] --> Loop 51 

#### Loops of eval_gx_stroke_path_only_bb77_in/1 
* Loop 49: eval_gx_stroke_path_only_bb77_in(B) [B=9] 
* Loop 50: eval_gx_stroke_path_only_bb77_in(B)->  eval_gx_stroke_path_only_bb77_in(B')
                  [B'=9,B=9] 
* Loop 51: eval_gx_stroke_path_only_bb77_in(B) [B=9] 

### Ranking functions of CR eval_gx_stroke_path_only_bb77_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb77_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb77_in(B) 
* [[50]]...
* [[50],51]
* [[50],49]...
* [51]
* [49]...


### Merging Chains  eval_gx_stroke_path_only_bb77_in/1 into  External patterns of execution 
* [[51],[51,[50]]] --> 1 
* [[49],[[50]],[49,[50]]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb151_in/1 
* CE 39 is refined into CE [100] 


#### Refined cost equations eval_gx_stroke_path_only_bb151_in/1 
* CE 100: eval_gx_stroke_path_only_bb151_in(B) = 0+ eval_gx_stroke_path_only_bb153_in(B):1
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb151_in/1 
* CEs [100] --> Loop 52 

#### Loops of eval_gx_stroke_path_only_bb151_in/1 
* Loop 52: eval_gx_stroke_path_only_bb151_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb151_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb151_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb151_in(B) 
* [52]


### Merging Chains  eval_gx_stroke_path_only_bb151_in/1 into  External patterns of execution 
* [[52]] --> 1 


### Specialization of cost equations eval_gx_stroke_path_only_bb149_in/1 
* CE 29 is refined into CE [101] 


#### Refined cost equations eval_gx_stroke_path_only_bb149_in/1 
* CE 101: eval_gx_stroke_path_only_bb149_in(B) = 0+ eval_gx_stroke_path_only_bb151_in(B):1
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb149_in/1 
* CEs [101] --> Loop 53 

#### Loops of eval_gx_stroke_path_only_bb149_in/1 
* Loop 53: eval_gx_stroke_path_only_bb149_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb149_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb149_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb149_in(B) 
* [53]


### Merging Chains  eval_gx_stroke_path_only_bb149_in/1 into  External patterns of execution 
* [[53]] --> 1 


### Specialization of cost equations eval_gx_stroke_path_only_bb76_in/1 
* CE 24 is refined into CE [102,103] 


#### Refined cost equations eval_gx_stroke_path_only_bb76_in/1 
* CE 102: eval_gx_stroke_path_only_bb76_in(B) = 1+ eval_gx_stroke_path_only_bb77_in(C):1+ eval_gx_stroke_path_only_bb149_in(B):1
     [C=9] 
* CE 103: eval_gx_stroke_path_only_bb76_in(B) = 1+ eval_gx_stroke_path_only_bb77_in(C):2
     [C=9] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb76_in/1 
* CEs [103] --> Loop 54 
* CEs [102] --> Loop 55 

#### Loops of eval_gx_stroke_path_only_bb76_in/1 
* Loop 54: eval_gx_stroke_path_only_bb76_in(B) [] 
* Loop 55: eval_gx_stroke_path_only_bb76_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb76_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb76_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb76_in(B) 
* [55]
* [54]...


### Merging Chains  eval_gx_stroke_path_only_bb76_in/1 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb74_in/1 
* CE 22 is refined into CE [104,105] 


#### Refined cost equations eval_gx_stroke_path_only_bb74_in/1 
* CE 104: eval_gx_stroke_path_only_bb74_in(B) = 0+ eval_gx_stroke_path_only_bb76_in(B):1
     [] 
* CE 105: eval_gx_stroke_path_only_bb74_in(B) = 0+ eval_gx_stroke_path_only_bb76_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb74_in/1 
* CEs [105] --> Loop 56 
* CEs [104] --> Loop 57 

#### Loops of eval_gx_stroke_path_only_bb74_in/1 
* Loop 56: eval_gx_stroke_path_only_bb74_in(B) [] 
* Loop 57: eval_gx_stroke_path_only_bb74_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb74_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb74_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb74_in(B) 
* [57]
* [56]...


### Merging Chains  eval_gx_stroke_path_only_bb74_in/1 into  External patterns of execution 
* [[57]] --> 1 
* [[56]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_170/1 
* CE 20 is refined into CE [106] 
* CE 21 is refined into CE [107,108] 


#### Refined cost equations eval_gx_stroke_path_only_170/1 
* CE 106: eval_gx_stroke_path_only_170(B) = 0+ eval_gx_stroke_path_only_bb153_in(B):1
     [] 
* CE 107: eval_gx_stroke_path_only_170(B) = 0+ eval_gx_stroke_path_only_bb74_in(B):1
     [] 
* CE 108: eval_gx_stroke_path_only_170(B) = 0+ eval_gx_stroke_path_only_bb74_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_170/1 
* CEs [108] --> Loop 58 
* CEs [106,107] --> Loop 59 

#### Loops of eval_gx_stroke_path_only_170/1 
* Loop 58: eval_gx_stroke_path_only_170(B) [] 
* Loop 59: eval_gx_stroke_path_only_170(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_170(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_170(B) 


### Resulting Chains:eval_gx_stroke_path_only_170(B) 
* [59]
* [58]...


### Merging Chains  eval_gx_stroke_path_only_170/1 into  External patterns of execution 
* [[59]] --> 1 
* [[58]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb72_in/1 
* CE 18 is refined into CE [109,110] 
* CE 19 is refined into CE [111,112] 


#### Refined cost equations eval_gx_stroke_path_only_bb72_in/1 
* CE 109: eval_gx_stroke_path_only_bb72_in(B) = 0+ eval_gx_stroke_path_only_170(B):1
     [] 
* CE 110: eval_gx_stroke_path_only_bb72_in(B) = 0+ eval_gx_stroke_path_only_170(B):2
     [] 
* CE 111: eval_gx_stroke_path_only_bb72_in(B) = 0+ eval_gx_stroke_path_only_bb74_in(B):1
     [] 
* CE 112: eval_gx_stroke_path_only_bb72_in(B) = 0+ eval_gx_stroke_path_only_bb74_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb72_in/1 
* CEs [110,112] --> Loop 60 
* CEs [109,111] --> Loop 61 

#### Loops of eval_gx_stroke_path_only_bb72_in/1 
* Loop 60: eval_gx_stroke_path_only_bb72_in(B) [] 
* Loop 61: eval_gx_stroke_path_only_bb72_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb72_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb72_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb72_in(B) 
* [61]
* [60]...


### Merging Chains  eval_gx_stroke_path_only_bb72_in/1 into  External patterns of execution 
* [[61]] --> 1 
* [[60]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_168/1 
* CE 16 is refined into CE [113] 
* CE 17 is refined into CE [114,115] 


#### Refined cost equations eval_gx_stroke_path_only_168/1 
* CE 113: eval_gx_stroke_path_only_168(B) = 0
     [] 
* CE 114: eval_gx_stroke_path_only_168(B) = 0+ eval_gx_stroke_path_only_bb72_in(B):1
     [] 
* CE 115: eval_gx_stroke_path_only_168(B) = 0+ eval_gx_stroke_path_only_bb72_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_168/1 
* CEs [115] --> Loop 62 
* CEs [113,114] --> Loop 63 

#### Loops of eval_gx_stroke_path_only_168/1 
* Loop 62: eval_gx_stroke_path_only_168(B) [] 
* Loop 63: eval_gx_stroke_path_only_168(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_168(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_168(B) 


### Resulting Chains:eval_gx_stroke_path_only_168(B) 
* [63]
* [62]...


### Merging Chains  eval_gx_stroke_path_only_168/1 into  External patterns of execution 
* [[63]] --> 1 
* [[62]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb69_in/1 
* CE 13 is refined into CE [116,117] 
* CE 14 is refined into CE [118,119] 
* CE 15 is refined into CE [120] 


#### Refined cost equations eval_gx_stroke_path_only_bb69_in/1 
* CE 116: eval_gx_stroke_path_only_bb69_in(B) = 0+ eval_gx_stroke_path_only_168(B):1
     [] 
* CE 117: eval_gx_stroke_path_only_bb69_in(B) = 0+ eval_gx_stroke_path_only_168(B):2
     [] 
* CE 118: eval_gx_stroke_path_only_bb69_in(B) = 0+ eval_gx_stroke_path_only_bb72_in(B):1
     [] 
* CE 119: eval_gx_stroke_path_only_bb69_in(B) = 0+ eval_gx_stroke_path_only_bb72_in(B):2
     [] 
* CE 120: eval_gx_stroke_path_only_bb69_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb69_in/1 
* CEs [116,118,120] --> Loop 64 
* CEs [117,119] --> Loop 65 

#### Loops of eval_gx_stroke_path_only_bb69_in/1 
* Loop 64: eval_gx_stroke_path_only_bb69_in(B) [] 
* Loop 65: eval_gx_stroke_path_only_bb69_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb69_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb69_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb69_in(B) 
* [65]...
* [64]


### Merging Chains  eval_gx_stroke_path_only_bb69_in/1 into  External patterns of execution 
* [[64]] --> 1 
* [[65]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb64_in/1 
* CE 10 is refined into CE [121,122] 


#### Refined cost equations eval_gx_stroke_path_only_bb64_in/1 
* CE 121: eval_gx_stroke_path_only_bb64_in(B) = 0+ eval_gx_stroke_path_only_bb69_in(B):1
     [] 
* CE 122: eval_gx_stroke_path_only_bb64_in(B) = 0+ eval_gx_stroke_path_only_bb69_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb64_in/1 
* CEs [122] --> Loop 66 
* CEs [121] --> Loop 67 

#### Loops of eval_gx_stroke_path_only_bb64_in/1 
* Loop 66: eval_gx_stroke_path_only_bb64_in(B) [] 
* Loop 67: eval_gx_stroke_path_only_bb64_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb64_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb64_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb64_in(B) 
* [67]
* [66]...


### Merging Chains  eval_gx_stroke_path_only_bb64_in/1 into  External patterns of execution 
* [[67]] --> 1 
* [[66]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb54_in/1 
* CE 8 is refined into CE [123,124] 


#### Refined cost equations eval_gx_stroke_path_only_bb54_in/1 
* CE 123: eval_gx_stroke_path_only_bb54_in(B) = 0+ eval_gx_stroke_path_only_bb64_in(B):1
     [] 
* CE 124: eval_gx_stroke_path_only_bb54_in(B) = 0+ eval_gx_stroke_path_only_bb64_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb54_in/1 
* CEs [124] --> Loop 68 
* CEs [123] --> Loop 69 

#### Loops of eval_gx_stroke_path_only_bb54_in/1 
* Loop 68: eval_gx_stroke_path_only_bb54_in(B) [] 
* Loop 69: eval_gx_stroke_path_only_bb54_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb54_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb54_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb54_in(B) 
* [69]
* [68]...


### Merging Chains  eval_gx_stroke_path_only_bb54_in/1 into  External patterns of execution 
* [[69]] --> 1 
* [[68]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb48_in/1 
* CE 11 is refined into CE [125] 
* CE 12 is refined into CE [126,127] 


#### Refined cost equations eval_gx_stroke_path_only_bb48_in/1 
* CE 125: eval_gx_stroke_path_only_bb48_in(B) = 0
     [] 
* CE 126: eval_gx_stroke_path_only_bb48_in(B) = 0+ eval_gx_stroke_path_only_bb54_in(B):1
     [] 
* CE 127: eval_gx_stroke_path_only_bb48_in(B) = 0+ eval_gx_stroke_path_only_bb54_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb48_in/1 
* CEs [127] --> Loop 70 
* CEs [125,126] --> Loop 71 

#### Loops of eval_gx_stroke_path_only_bb48_in/1 
* Loop 70: eval_gx_stroke_path_only_bb48_in(B) [] 
* Loop 71: eval_gx_stroke_path_only_bb48_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb48_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb48_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb48_in(B) 
* [71]
* [70]...


### Merging Chains  eval_gx_stroke_path_only_bb48_in/1 into  External patterns of execution 
* [[71]] --> 1 
* [[70]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb31_in/1 
* CE 9 is refined into CE [128,129] 


#### Refined cost equations eval_gx_stroke_path_only_bb31_in/1 
* CE 128: eval_gx_stroke_path_only_bb31_in(B) = 0+ eval_gx_stroke_path_only_bb48_in(B):1
     [] 
* CE 129: eval_gx_stroke_path_only_bb31_in(B) = 0+ eval_gx_stroke_path_only_bb48_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb31_in/1 
* CEs [129] --> Loop 72 
* CEs [128] --> Loop 73 

#### Loops of eval_gx_stroke_path_only_bb31_in/1 
* Loop 72: eval_gx_stroke_path_only_bb31_in(B) [] 
* Loop 73: eval_gx_stroke_path_only_bb31_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb31_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb31_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb31_in(B) 
* [73]
* [72]...


### Merging Chains  eval_gx_stroke_path_only_bb31_in/1 into  External patterns of execution 
* [[73]] --> 1 
* [[72]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb27_in/1 
* CE 6 is refined into CE [130,131] 
* CE 7 is refined into CE [132,133] 


#### Refined cost equations eval_gx_stroke_path_only_bb27_in/1 
* CE 130: eval_gx_stroke_path_only_bb27_in(B) = 0+ eval_gx_stroke_path_only_bb54_in(B):1
     [] 
* CE 131: eval_gx_stroke_path_only_bb27_in(B) = 0+ eval_gx_stroke_path_only_bb54_in(B):2
     [] 
* CE 132: eval_gx_stroke_path_only_bb27_in(B) = 0+ eval_gx_stroke_path_only_bb31_in(B):1
     [] 
* CE 133: eval_gx_stroke_path_only_bb27_in(B) = 0+ eval_gx_stroke_path_only_bb31_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb27_in/1 
* CEs [131,133] --> Loop 74 
* CEs [130,132] --> Loop 75 

#### Loops of eval_gx_stroke_path_only_bb27_in/1 
* Loop 74: eval_gx_stroke_path_only_bb27_in(B) [] 
* Loop 75: eval_gx_stroke_path_only_bb27_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb27_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb27_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb27_in(B) 
* [75]
* [74]...


### Merging Chains  eval_gx_stroke_path_only_bb27_in/1 into  External patterns of execution 
* [[75]] --> 1 
* [[74]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb24_in/1 
* CE 5 is refined into CE [134,135] 


#### Refined cost equations eval_gx_stroke_path_only_bb24_in/1 
* CE 134: eval_gx_stroke_path_only_bb24_in(B) = 0+ eval_gx_stroke_path_only_bb27_in(B):1
     [] 
* CE 135: eval_gx_stroke_path_only_bb24_in(B) = 0+ eval_gx_stroke_path_only_bb27_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb24_in/1 
* CEs [135] --> Loop 76 
* CEs [134] --> Loop 77 

#### Loops of eval_gx_stroke_path_only_bb24_in/1 
* Loop 76: eval_gx_stroke_path_only_bb24_in(B) [] 
* Loop 77: eval_gx_stroke_path_only_bb24_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb24_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb24_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb24_in(B) 
* [77]
* [76]...


### Merging Chains  eval_gx_stroke_path_only_bb24_in/1 into  External patterns of execution 
* [[77]] --> 1 
* [[76]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_17/1 
* CE 4 is refined into CE [136,137] 


#### Refined cost equations eval_gx_stroke_path_only_17/1 
* CE 136: eval_gx_stroke_path_only_17(B) = 0+ eval_gx_stroke_path_only_bb24_in(B):1
     [] 
* CE 137: eval_gx_stroke_path_only_17(B) = 0+ eval_gx_stroke_path_only_bb24_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_17/1 
* CEs [137] --> Loop 78 
* CEs [136] --> Loop 79 

#### Loops of eval_gx_stroke_path_only_17/1 
* Loop 78: eval_gx_stroke_path_only_17(B) [] 
* Loop 79: eval_gx_stroke_path_only_17(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_17(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_17(B) 


### Resulting Chains:eval_gx_stroke_path_only_17(B) 
* [79]
* [78]...


### Merging Chains  eval_gx_stroke_path_only_17/1 into  External patterns of execution 
* [[79]] --> 1 
* [[78]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_bb0_in/1 
* CE 3 is refined into CE [138,139] 


#### Refined cost equations eval_gx_stroke_path_only_bb0_in/1 
* CE 138: eval_gx_stroke_path_only_bb0_in(B) = 0+ eval_gx_stroke_path_only_17(B):1
     [] 
* CE 139: eval_gx_stroke_path_only_bb0_in(B) = 0+ eval_gx_stroke_path_only_17(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_bb0_in/1 
* CEs [139] --> Loop 80 
* CEs [138] --> Loop 81 

#### Loops of eval_gx_stroke_path_only_bb0_in/1 
* Loop 80: eval_gx_stroke_path_only_bb0_in(B) [] 
* Loop 81: eval_gx_stroke_path_only_bb0_in(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_bb0_in(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_bb0_in(B) 


### Resulting Chains:eval_gx_stroke_path_only_bb0_in(B) 
* [81]
* [80]...


### Merging Chains  eval_gx_stroke_path_only_bb0_in/1 into  External patterns of execution 
* [[81]] --> 1 
* [[80]] --> 2 


### Specialization of cost equations eval_gx_stroke_path_only_start/1 
* CE 2 is refined into CE [140,141] 


#### Refined cost equations eval_gx_stroke_path_only_start/1 
* CE 140: eval_gx_stroke_path_only_start(B) = 0+ eval_gx_stroke_path_only_bb0_in(B):1
     [] 
* CE 141: eval_gx_stroke_path_only_start(B) = 0+ eval_gx_stroke_path_only_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_gx_stroke_path_only_start/1 
* CEs [141] --> Loop 82 
* CEs [140] --> Loop 83 

#### Loops of eval_gx_stroke_path_only_start/1 
* Loop 82: eval_gx_stroke_path_only_start(B) [] 
* Loop 83: eval_gx_stroke_path_only_start(B) [] 

### Ranking functions of CR eval_gx_stroke_path_only_start(B) 

#### Partial ranking functions of CR eval_gx_stroke_path_only_start(B) 


### Resulting Chains:eval_gx_stroke_path_only_start(B) 
* [83]
* [82]...


### Merging Chains  eval_gx_stroke_path_only_start/1 into  External patterns of execution 
* [[83]] --> 1 
* [[82]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of eval_gx_stroke_path_only_bb153_in(B):
* Chain [33]: 0
  with precondition: [] 


#### Cost of loops [34] 

 * loop 34:eval_gx_stroke_path_only_bb112_in(B) -> [eval_gx_stroke_path_only_bb112_in(B')] 
1
#### Cost of phase [34]:eval_gx_stroke_path_only_bb112_in(B) -> [eval_gx_stroke_path_only_bb112_in(B')] 
1*it(34)+0
#### Cost of phase [34]:eval_gx_stroke_path_only_bb112_in(B) -> [eval_gx_stroke_path_only_bb112_in(B')] 
1*it(34)+0
#### Cost of phase [34]:eval_gx_stroke_path_only_bb112_in(B) -> [eval_gx_stroke_path_only_bb112_in(B')] 
1*it(34)+0
#### Cost of chains of eval_gx_stroke_path_only_bb112_in(B):
* Chain [[34]]...: 1*it(34)+0
  with precondition: [B>=2,3>=B] 

* Chain [[34],36]: 1*it(34)+0
  with precondition: [B=2] 

* Chain [[34],35]: 1*it(34)+0
  with precondition: [B=3] 

* Chain [36]: 0
  with precondition: [B=2] 

* Chain [35]: 0
  with precondition: [B=3] 


#### Cost of loops [38] 

 * loop 38:eval_gx_stroke_path_only_bb82_in(B) -> [eval_gx_stroke_path_only_bb82_in(B')] 
1*s(5)+0
#### Cost of phase [38]:eval_gx_stroke_path_only_bb82_in(B) -> [eval_gx_stroke_path_only_bb82_in(B')] 
1*s(6)+0
#### Cost of phase [38]:eval_gx_stroke_path_only_bb82_in(B) -> [eval_gx_stroke_path_only_bb82_in(B')] 
1*s(6)+0
#### Cost of phase [38]:eval_gx_stroke_path_only_bb82_in(B) -> [eval_gx_stroke_path_only_bb82_in(B')] 
1*s(6)+0
#### Cost of phase [38]:eval_gx_stroke_path_only_bb82_in(B) -> [eval_gx_stroke_path_only_bb82_in(B')] 
1*s(6)+0
#### Cost of phase [38]:eval_gx_stroke_path_only_bb82_in(B) -> [eval_gx_stroke_path_only_bb82_in(B')] 
1*s(6)+0
#### Cost of phase [38]:eval_gx_stroke_path_only_bb82_in(B) -> [eval_gx_stroke_path_only_bb82_in(B')] 
1*s(6)+0
#### Cost of phase [38]:eval_gx_stroke_path_only_bb82_in(B) -> [eval_gx_stroke_path_only_bb82_in(B')] 
1*s(6)+0
#### Cost of chains of eval_gx_stroke_path_only_bb82_in(B):
* Chain [[38]]...: 1*s(6)+0
  with precondition: [B>=4,8>=B] 

* Chain [[38],43]: 2*s(6)+1
  with precondition: [B=4] 

* Chain [[38],42]: 1*s(6)+0
  with precondition: [B=5] 

* Chain [[38],41]: 1*s(6)+0
  with precondition: [B=6] 

* Chain [[38],40]: 1*s(6)+0
  with precondition: [B=7] 

* Chain [[38],39]: 1*s(6)+0
  with precondition: [B=8] 

* Chain [[38],37]...: 2*aux(4)+0
  with precondition: [8>=B,B>=4] 

* Chain [43]: 1*s(7)+1
  with precondition: [B=4] 

* Chain [42]: 0
  with precondition: [B=5] 

* Chain [41]: 0
  with precondition: [B=6] 

* Chain [40]: 0
  with precondition: [B=7] 

* Chain [39]: 0
  with precondition: [B=8] 

* Chain [37]...: 1*aux(4)+0
  with precondition: [8>=B,B>=4] 


#### Cost of loops [46] 

 * loop 46:eval_gx_stroke_path_only_bb79_in(B) -> [eval_gx_stroke_path_only_bb79_in(B')] 
1*s(23)+0
#### Cost of phase [46]:eval_gx_stroke_path_only_bb79_in(B) -> [eval_gx_stroke_path_only_bb79_in(B')] 
1*s(24)+0
#### Cost of phase [46]:eval_gx_stroke_path_only_bb79_in(B) -> [eval_gx_stroke_path_only_bb79_in(B')] 
1*s(24)+0
#### Cost of phase [46]:eval_gx_stroke_path_only_bb79_in(B) -> [eval_gx_stroke_path_only_bb79_in(B')] 
1*s(24)+0
#### Cost of phase [46]:eval_gx_stroke_path_only_bb79_in(B) -> [eval_gx_stroke_path_only_bb79_in(B')] 
1*s(24)+0
#### Cost of phase [46]:eval_gx_stroke_path_only_bb79_in(B) -> [eval_gx_stroke_path_only_bb79_in(B')] 
1*s(24)+0
#### Cost of chains of eval_gx_stroke_path_only_bb79_in(B):
* Chain [[46]]...: 1*s(24)+0
  with precondition: [B>=4,9>=B] 

* Chain [[46],48]: 2*aux(12)+0
  with precondition: [B=4] 

* Chain [[46],47]: 2*aux(13)+0
  with precondition: [B=9] 

* Chain [[46],45]...: 2*aux(14)+0
  with precondition: [9>=B,B>=4] 

* Chain [[46],44]...: 2*aux(15)+0
  with precondition: [B=9] 

* Chain [48]: 1*aux(12)+0
  with precondition: [B=4] 

* Chain [47]: 1*aux(13)+0
  with precondition: [B=9] 

* Chain [45]...: 1*aux(14)+0
  with precondition: [9>=B,B>=4] 

* Chain [44]...: 1*aux(15)+0
  with precondition: [B=9] 


#### Cost of loops [50] 

 * loop 50:eval_gx_stroke_path_only_bb77_in(B) -> [eval_gx_stroke_path_only_bb77_in(B')] 
1*s(54)+2
#### Cost of phase [50]:eval_gx_stroke_path_only_bb77_in(B) -> [eval_gx_stroke_path_only_bb77_in(B')] 
3*it(50)+0
#### Cost of phase [50]:eval_gx_stroke_path_only_bb77_in(B) -> [eval_gx_stroke_path_only_bb77_in(B')] 
3*it(50)+0
#### Cost of phase [50]:eval_gx_stroke_path_only_bb77_in(B) -> [eval_gx_stroke_path_only_bb77_in(B')] 
3*it(50)+0
#### Cost of chains of eval_gx_stroke_path_only_bb77_in(B):
* Chain [[50]]...: 3*it(50)+0
  with precondition: [B=9] 

* Chain [[50],51]: 4*aux(20)+0
  with precondition: [B=9] 

* Chain [[50],49]...: 4*aux(21)+0
  with precondition: [B=9] 

* Chain [51]: 1*aux(20)+0
  with precondition: [B=9] 

* Chain [49]...: 1*aux(21)+0
  with precondition: [B=9] 


#### Cost of chains of eval_gx_stroke_path_only_bb151_in(B):
* Chain [52]: 0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb149_in(B):
* Chain [53]: 0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb76_in(B):
* Chain [55]: 1*s(70)+1
  with precondition: [] 

* Chain [54]...: 1*s(71)+1
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb74_in(B):
* Chain [57]: 1*s(72)+1
  with precondition: [] 

* Chain [56]...: 1*s(73)+1
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_170(B):
* Chain [59]: 1*aux(24)+0
  with precondition: [] 

* Chain [58]...: 1*s(75)+1
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb72_in(B):
* Chain [61]: 1*aux(25)+0
  with precondition: [] 

* Chain [60]...: 1*aux(26)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_168(B):
* Chain [63]: 1*aux(27)+0
  with precondition: [] 

* Chain [62]...: 1*s(81)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb69_in(B):
* Chain [65]...: 1*aux(28)+0
  with precondition: [] 

* Chain [64]: 1*aux(29)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb64_in(B):
* Chain [67]: 1*s(86)+0
  with precondition: [] 

* Chain [66]...: 1*s(87)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb54_in(B):
* Chain [69]: 1*s(88)+0
  with precondition: [] 

* Chain [68]...: 1*s(89)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb48_in(B):
* Chain [71]: 1*aux(30)+0
  with precondition: [] 

* Chain [70]...: 1*s(91)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb31_in(B):
* Chain [73]: 1*s(92)+0
  with precondition: [] 

* Chain [72]...: 1*s(93)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb27_in(B):
* Chain [75]: 1*aux(31)+0
  with precondition: [] 

* Chain [74]...: 1*aux(32)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb24_in(B):
* Chain [77]: 1*s(98)+0
  with precondition: [] 

* Chain [76]...: 1*s(99)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_17(B):
* Chain [79]: 1*s(100)+0
  with precondition: [] 

* Chain [78]...: 1*s(101)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_bb0_in(B):
* Chain [81]: 1*s(102)+0
  with precondition: [] 

* Chain [80]...: 1*s(103)+0
  with precondition: [] 


#### Cost of chains of eval_gx_stroke_path_only_start(B):
* Chain [83]: 1*s(104)+0
  with precondition: [] 

* Chain [82]...: 1*s(105)+0
  with precondition: [] 


Closed-form bounds of eval_gx_stroke_path_only_start(B): 
-------------------------------------
* Chain [83] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [82]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gx_stroke_path_only_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 43 ms.
* Invariants computed in 24 ms.
   - Backward Invariants 15 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 53 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 45 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 230 ms.

