Warning: Ignored call to eval_putRGBcontig8bittile_stop/1 in equation loop_cont_eval_putRGBcontig8bittile_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_putRGBcontig8bittile_bb2_in/9]
1. recursive  : [eval_putRGBcontig8bittile_NewDefault_in/5,eval_putRGBcontig8bittile_bb10_in/5,eval_putRGBcontig8bittile_bb11_in/5,eval_putRGBcontig8bittile_bb12_in/5,eval_putRGBcontig8bittile_bb13_in/5,eval_putRGBcontig8bittile_bb1_in/3,eval_putRGBcontig8bittile_bb7_in/5,eval_putRGBcontig8bittile_bb8_in/5,eval_putRGBcontig8bittile_bb9_in/5,loop_cont_eval_putRGBcontig8bittile_bb2_in/6]
2. non_recursive  : [loop_cont_eval_putRGBcontig8bittile_bb1_in/2]
3. non_recursive  : [eval_putRGBcontig8bittile_bb0_in/3]
4. non_recursive  : [eval_putRGBcontig8bittile_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_putRGBcontig8bittile_bb2_in/9
1. SCC is partially evaluated into eval_putRGBcontig8bittile_bb1_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_putRGBcontig8bittile_bb0_in/3
4. SCC is partially evaluated into eval_putRGBcontig8bittile_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_putRGBcontig8bittile_bb2_in/9 
* CE 21 is refined into CE [22] 
* CE 20 is refined into CE [23] 
* CE 19 is refined into CE [24] 
* CE 18 is refined into CE [25] 
* CE 17 is refined into CE [26] 
* CE 16 is refined into CE [27] 
* CE 15 is refined into CE [28] 
* CE 14 is refined into CE [29] 
* CE 13 is refined into CE [30] 


#### Refined cost equations eval_putRGBcontig8bittile_bb2_in/9 
* CE 22: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,7>=D,C+1=F,C+1=B,E=9] 
* CE 23: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,7>=D,C+1=F,C+1=B,E=8] 
* CE 24: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,7>=D,C+1=F,C+1=B,E=7] 
* CE 25: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,7>=D,C+1=F,C+1=B,E=6] 
* CE 26: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,7>=D,C+1=F,C+1=B,E=5] 
* CE 27: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,7>=D,C+1=F,C+1=B,E=4] 
* CE 28: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,7>=D,C+1=F,C+1=B,E=3] 
* CE 29: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,F,C,D) = 0
     [A>=D,C>=0,7>=D,C+1=F,C+1=B,E=2] 
* CE 30: eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) = 1+ eval_putRGBcontig8bittile_bb2_in(V_w,G,V_12,H,B,C,D,E,F)
     [V_w>=V__x_0,B>=2,V__x_0>=8,V_12>=0,9>=B,V__x_0=H+8,V_12+1=G,V_12+1=V__011] 

### Cost equations --> "Loop" of eval_putRGBcontig8bittile_bb2_in/9 
* CEs [30] --> Loop 14 
* CEs [22] --> Loop 15 
* CEs [23] --> Loop 16 
* CEs [24] --> Loop 17 
* CEs [25] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [27] --> Loop 20 
* CEs [28] --> Loop 21 
* CEs [29] --> Loop 22 

#### Loops of eval_putRGBcontig8bittile_bb2_in/9 
* Loop 14: eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F)->  eval_putRGBcontig8bittile_bb2_in(V_w,V__011',V_12,V__x_0',B,C,D,E,F)
                  [V_w>=V__x_0,B>=2,V__x_0>=8,V_12>=0,9>=B,V__x_0=V__x_0'+8,V_12+1=V__011',V_12+1=V__011] 
* Loop 15: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,7>=D,B=F+1,B=C+1,E=9] 
* Loop 16: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,7>=D,B=F+1,B=C+1,E=8] 
* Loop 17: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,7>=D,B=F+1,B=C+1,E=7] 
* Loop 18: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,7>=D,B=F+1,B=C+1,E=6] 
* Loop 19: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,7>=D,B=F+1,B=C+1,E=5] 
* Loop 20: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,7>=D,B=F+1,B=C+1,E=4] 
* Loop 21: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,7>=D,B=F+1,B=C+1,E=3] 
* Loop 22: eval_putRGBcontig8bittile_bb2_in(A,B,C,D,E,A,B,F,D) [A>=D,B>=1,7>=D,B=F+1,B=C+1,E=2] 

### Ranking functions of CR eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) 
* RF of phase [14]: [V__x_0/8-7/8]

#### Partial ranking functions of CR eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V__x_0/8-7/8


### Resulting Chains:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) 
* [[14],22]
* [[14],21]
* [[14],20]
* [[14],19]
* [[14],18]
* [[14],17]
* [[14],16]
* [[14],15]
* [22]
* [21]
* [20]
* [19]
* [18]
* [17]
* [16]
* [15]


### Merging Chains  eval_putRGBcontig8bittile_bb2_in/9 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[14]]] --> 2 
* [[21]] --> 3 
* [[21,[14]]] --> 4 
* [[20]] --> 5 
* [[20,[14]]] --> 6 
* [[19]] --> 7 
* [[19,[14]]] --> 8 
* [[18]] --> 9 
* [[18,[14]]] --> 10 
* [[17]] --> 11 
* [[17,[14]]] --> 12 
* [[16]] --> 13 
* [[16,[14]]] --> 14 
* [[15]] --> 15 
* [[15,[14]]] --> 16 


### Specialization of cost equations eval_putRGBcontig8bittile_bb1_in/3 
* CE 12 is refined into CE [31] 
* CE 4 is refined into CE [32,33] 
* CE 5 is refined into CE [34,35] 
* CE 6 is refined into CE [36,37] 
* CE 7 is refined into CE [38,39] 
* CE 8 is refined into CE [40,41] 
* CE 9 is refined into CE [42,43] 
* CE 10 is refined into CE [44,45] 
* CE 11 is refined into CE [46,47] 


#### Refined cost equations eval_putRGBcontig8bittile_bb1_in/3 
* CE 31: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 0
     [0>=V__011,B=10] 
* CE 32: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):15+ eval_putRGBcontig8bittile_bb1_in(V_w,D,G)
     [D>=0,7>=V_w,D+1=F,D+1=C,D+1=V__011,G=10,E=9,B=10] 
* CE 33: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):16+ eval_putRGBcontig8bittile_bb1_in(V_w,D,H)
     [V_w>=G+8,G>=0,D>=0,7>=G,D+1=F,D+1=C,D+1=V__011,H=10,E=9,B=10] 
* CE 34: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):3+ eval_putRGBcontig8bittile_bb1_in(V_w,D,G)
     [D>=0,7>=V_w,D+1=F,D+1=C,D+1=V__011,G=10,E=3,B=10] 
* CE 35: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):4+ eval_putRGBcontig8bittile_bb1_in(V_w,D,H)
     [V_w>=G+8,G>=0,D>=0,7>=G,D+1=F,D+1=C,D+1=V__011,H=10,E=3,B=10] 
* CE 36: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):1+ eval_putRGBcontig8bittile_bb1_in(V_w,D,G)
     [D>=0,7>=V_w,D+1=F,D+1=C,D+1=V__011,G=10,E=2,B=10] 
* CE 37: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):2+ eval_putRGBcontig8bittile_bb1_in(V_w,D,H)
     [V_w>=G+8,G>=0,D>=0,7>=G,D+1=F,D+1=C,D+1=V__011,H=10,E=2,B=10] 
* CE 38: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):5+ eval_putRGBcontig8bittile_bb1_in(V_w,D,G)
     [D>=0,7>=V_w,D+1=F,D+1=C,D+1=V__011,G=10,E=4,B=10] 
* CE 39: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):6+ eval_putRGBcontig8bittile_bb1_in(V_w,D,H)
     [V_w>=G+8,G>=0,D>=0,7>=G,D+1=F,D+1=C,D+1=V__011,H=10,E=4,B=10] 
* CE 40: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):7+ eval_putRGBcontig8bittile_bb1_in(V_w,D,G)
     [D>=0,7>=V_w,D+1=F,D+1=C,D+1=V__011,G=10,E=5,B=10] 
* CE 41: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):8+ eval_putRGBcontig8bittile_bb1_in(V_w,D,H)
     [V_w>=G+8,G>=0,D>=0,7>=G,D+1=F,D+1=C,D+1=V__011,H=10,E=5,B=10] 
* CE 42: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):9+ eval_putRGBcontig8bittile_bb1_in(V_w,D,G)
     [D>=0,7>=V_w,D+1=F,D+1=C,D+1=V__011,G=10,E=6,B=10] 
* CE 43: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):10+ eval_putRGBcontig8bittile_bb1_in(V_w,D,H)
     [V_w>=G+8,G>=0,D>=0,7>=G,D+1=F,D+1=C,D+1=V__011,H=10,E=6,B=10] 
* CE 44: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):11+ eval_putRGBcontig8bittile_bb1_in(V_w,D,G)
     [D>=0,7>=V_w,D+1=F,D+1=C,D+1=V__011,G=10,E=7,B=10] 
* CE 45: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):12+ eval_putRGBcontig8bittile_bb1_in(V_w,D,H)
     [V_w>=G+8,G>=0,D>=0,7>=G,D+1=F,D+1=C,D+1=V__011,H=10,E=7,B=10] 
* CE 46: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,V_w):13+ eval_putRGBcontig8bittile_bb1_in(V_w,D,G)
     [D>=0,7>=V_w,D+1=F,D+1=C,D+1=V__011,G=10,E=8,B=10] 
* CE 47: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) = 2+ eval_putRGBcontig8bittile_bb2_in(V_w,C,D,V_w,E,V_w,F,D,G):14+ eval_putRGBcontig8bittile_bb1_in(V_w,D,H)
     [V_w>=G+8,G>=0,D>=0,7>=G,D+1=F,D+1=C,D+1=V__011,H=10,E=8,B=10] 

### Cost equations --> "Loop" of eval_putRGBcontig8bittile_bb1_in/3 
* CEs [33,35,37,39,41,43,45,47] --> Loop 23 
* CEs [32,34,36,38,40,42,44,46] --> Loop 24 
* CEs [31] --> Loop 25 

#### Loops of eval_putRGBcontig8bittile_bb1_in/3 
* Loop 23: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B)->  eval_putRGBcontig8bittile_bb1_in(V_w,V__011',B')
                  [V__011>=1,V_w>=8,V__011=V__011'+1,B'=10,B=10] 
* Loop 24: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B)->  eval_putRGBcontig8bittile_bb1_in(V_w,V__011',B')
                  [V__011>=1,7>=V_w,V__011=V__011'+1,B'=10,B=10] 
* Loop 25: eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) [0>=V__011,B=10] 

### Ranking functions of CR eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) 
* RF of phase [23]: [V__011]
* RF of phase [24]: [V__011]

#### Partial ranking functions of CR eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V__011
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V__011


### Resulting Chains:eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) 
* [[24],25]
* [[23],25]
* [25]


### Merging Chains  eval_putRGBcontig8bittile_bb1_in/3 into  External patterns of execution 
* [[25,[24]]] --> 1 
* [[25]] --> 2 
* [[25,[23]]] --> 3 


### Specialization of cost equations eval_putRGBcontig8bittile_bb0_in/3 
* CE 3 is refined into CE [48,49,50] 


#### Refined cost equations eval_putRGBcontig8bittile_bb0_in/3 
* CE 48: eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B) = 1+ eval_putRGBcontig8bittile_bb1_in(V_w,V_h,C):1
     [V_h>=1,7>=V_w,C=10] 
* CE 49: eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B) = 1+ eval_putRGBcontig8bittile_bb1_in(V_w,V_h,C):2
     [0>=V_h,C=10] 
* CE 50: eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B) = 1+ eval_putRGBcontig8bittile_bb1_in(V_w,V_h,C):3
     [V_h>=1,V_w>=8,C=10] 

### Cost equations --> "Loop" of eval_putRGBcontig8bittile_bb0_in/3 
* CEs [50] --> Loop 26 
* CEs [49] --> Loop 27 
* CEs [48] --> Loop 28 

#### Loops of eval_putRGBcontig8bittile_bb0_in/3 
* Loop 26: eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B) [V_h>=1,V_w>=8] 
* Loop 27: eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B) [0>=V_h] 
* Loop 28: eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B) [V_h>=1,7>=V_w] 

### Ranking functions of CR eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B) 

#### Partial ranking functions of CR eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B) 


### Resulting Chains:eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B) 
* [28]
* [27]
* [26]


### Merging Chains  eval_putRGBcontig8bittile_bb0_in/3 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[26]] --> 3 


### Specialization of cost equations eval_putRGBcontig8bittile_start/7 
* CE 2 is refined into CE [51,52,53] 


#### Refined cost equations eval_putRGBcontig8bittile_start/7 
* CE 51: eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B):1
     [V_h>=1,7>=V_w] 
* CE 52: eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B):2
     [0>=V_h] 
* CE 53: eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) = 0+ eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B):3
     [V_h>=1,V_w>=8] 

### Cost equations --> "Loop" of eval_putRGBcontig8bittile_start/7 
* CEs [53] --> Loop 29 
* CEs [52] --> Loop 30 
* CEs [51] --> Loop 31 

#### Loops of eval_putRGBcontig8bittile_start/7 
* Loop 29: eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,V_w>=8] 
* Loop 30: eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [0>=V_h] 
* Loop 31: eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) [V_h>=1,7>=V_w] 

### Ranking functions of CR eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 

#### Partial ranking functions of CR eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 


### Resulting Chains:eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B) 
* [31]
* [30]
* [29]


### Merging Chains  eval_putRGBcontig8bittile_start/7 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 
* [[29]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) -> [eval_putRGBcontig8bittile_bb2_in(V_w',V__011',V_12',V__x_0',B',C',D',E',F')] 
1
#### Cost of phase [14]:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) -> [eval_putRGBcontig8bittile_bb2_in(V_w',V__011',V_12',V__x_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< V__x_0/8
it(14) =< V__x_0/8-V__x_0'/8

#### Cost of phase [14]:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) -> [eval_putRGBcontig8bittile_bb2_in(V_w',V__011',V_12',V__x_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< V__x_0/8
it(14) =< V__x_0/8-V__x_0'/8

#### Cost of phase [14]:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) -> [eval_putRGBcontig8bittile_bb2_in(V_w',V__011',V_12',V__x_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< V__x_0/8
it(14) =< V__x_0/8-V__x_0'/8

#### Cost of phase [14]:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) -> [eval_putRGBcontig8bittile_bb2_in(V_w',V__011',V_12',V__x_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< V__x_0/8
it(14) =< V__x_0/8-V__x_0'/8

#### Cost of phase [14]:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) -> [eval_putRGBcontig8bittile_bb2_in(V_w',V__011',V_12',V__x_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< V__x_0/8
it(14) =< V__x_0/8-V__x_0'/8

#### Cost of phase [14]:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) -> [eval_putRGBcontig8bittile_bb2_in(V_w',V__011',V_12',V__x_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< V__x_0/8
it(14) =< V__x_0/8-V__x_0'/8

#### Cost of phase [14]:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) -> [eval_putRGBcontig8bittile_bb2_in(V_w',V__011',V_12',V__x_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< V__x_0/8
it(14) =< V__x_0/8-V__x_0'/8

#### Cost of phase [14]:eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F) -> [eval_putRGBcontig8bittile_bb2_in(V_w',V__011',V_12',V__x_0',B',C',D',E',F')] 
1*it(14)+0
  Such that:it(14) =< V__x_0/8
it(14) =< V__x_0/8-V__x_0'/8

#### Cost of chains of eval_putRGBcontig8bittile_bb2_in(V_w,V__011,V_12,V__x_0,B,C,D,E,F):
* Chain [[14],22]: 1*it(14)+0
  Such that:it(14) =< V__x_0/8-F/8

  with precondition: [B=2,V__011=V_12+1,V_w=C,V__011=D,V__011=E+1,7>=F,V__011>=1,F>=0,V_w>=V__x_0,V__x_0>=F+8] 

* Chain [[14],21]: 1*it(14)+0
  Such that:it(14) =< V__x_0/8-F/8

  with precondition: [B=3,V__011=V_12+1,V_w=C,V__011=D,V__011=E+1,7>=F,V__011>=1,F>=0,V_w>=V__x_0,V__x_0>=F+8] 

* Chain [[14],20]: 1*it(14)+0
  Such that:it(14) =< V__x_0/8-F/8

  with precondition: [B=4,V__011=V_12+1,V_w=C,V__011=D,V__011=E+1,7>=F,V__011>=1,F>=0,V_w>=V__x_0,V__x_0>=F+8] 

* Chain [[14],19]: 1*it(14)+0
  Such that:it(14) =< V__x_0/8-F/8

  with precondition: [B=5,V__011=V_12+1,V_w=C,V__011=D,V__011=E+1,7>=F,V__011>=1,F>=0,V_w>=V__x_0,V__x_0>=F+8] 

* Chain [[14],18]: 1*it(14)+0
  Such that:it(14) =< V__x_0/8-F/8

  with precondition: [B=6,V__011=V_12+1,V_w=C,V__011=D,V__011=E+1,7>=F,V__011>=1,F>=0,V_w>=V__x_0,V__x_0>=F+8] 

* Chain [[14],17]: 1*it(14)+0
  Such that:it(14) =< V__x_0/8-F/8

  with precondition: [B=7,V__011=V_12+1,V_w=C,V__011=D,V__011=E+1,7>=F,V__011>=1,F>=0,V_w>=V__x_0,V__x_0>=F+8] 

* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< V__x_0/8-F/8

  with precondition: [B=8,V__011=V_12+1,V_w=C,V__011=D,V__011=E+1,7>=F,V__011>=1,F>=0,V_w>=V__x_0,V__x_0>=F+8] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V__x_0/8-F/8

  with precondition: [B=9,V__011=V_12+1,V_w=C,V__011=D,V__011=E+1,7>=F,V__011>=1,F>=0,V_w>=V__x_0,V__x_0>=F+8] 

* Chain [22]: 0
  with precondition: [B=2,V_12+1=V__011,V_w=C,V_12+1=D,V_12=E,V__x_0=F,7>=V__x_0,V_12>=0,V_w>=V__x_0] 

* Chain [21]: 0
  with precondition: [B=3,V_12+1=V__011,V_w=C,V_12+1=D,V_12=E,V__x_0=F,7>=V__x_0,V_12>=0,V_w>=V__x_0] 

* Chain [20]: 0
  with precondition: [B=4,V_12+1=V__011,V_w=C,V_12+1=D,V_12=E,V__x_0=F,7>=V__x_0,V_12>=0,V_w>=V__x_0] 

* Chain [19]: 0
  with precondition: [B=5,V_12+1=V__011,V_w=C,V_12+1=D,V_12=E,V__x_0=F,7>=V__x_0,V_12>=0,V_w>=V__x_0] 

* Chain [18]: 0
  with precondition: [B=6,V_12+1=V__011,V_w=C,V_12+1=D,V_12=E,V__x_0=F,7>=V__x_0,V_12>=0,V_w>=V__x_0] 

* Chain [17]: 0
  with precondition: [B=7,V_12+1=V__011,V_w=C,V_12+1=D,V_12=E,V__x_0=F,7>=V__x_0,V_12>=0,V_w>=V__x_0] 

* Chain [16]: 0
  with precondition: [B=8,V_12+1=V__011,V_w=C,V_12+1=D,V_12=E,V__x_0=F,7>=V__x_0,V_12>=0,V_w>=V__x_0] 

* Chain [15]: 0
  with precondition: [B=9,V_12+1=V__011,V_w=C,V_12+1=D,V_12=E,V__x_0=F,7>=V__x_0,V_12>=0,V_w>=V__x_0] 


#### Cost of loops [24] 

 * loop 24:eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) -> [eval_putRGBcontig8bittile_bb1_in(V_w',V__011',B')] 
2
#### Cost of phase [24]:eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) -> [eval_putRGBcontig8bittile_bb1_in(V_w',V__011',B')] 
2*it(24)+0
  Such that:it(24) =< V__011
it(24) =< V__011-V__011'

#### Cost of loops [23] 

 * loop 23:eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) -> [eval_putRGBcontig8bittile_bb1_in(V_w',V__011',B')] 
8*s(10)+2
  Such that:s(9) =< V_w'/8
s(10) =< s(9)

#### Cost of phase [23]:eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B) -> [eval_putRGBcontig8bittile_bb1_in(V_w',V__011',B')] 
2*it(23)+8*s(11)+0
  Such that:aux(2) =< V_w/8
it(23) =< V__011
it(23) =< V__011-V__011'
s(12) =< it(23)*aux(2)
s(11) =< s(12)

#### Cost of chains of eval_putRGBcontig8bittile_bb1_in(V_w,V__011,B):
* Chain [[24],25]: 2*it(24)+0
  Such that:it(24) =< V__011

  with precondition: [B=10,7>=V_w,V__011>=1] 

* Chain [[23],25]: 2*it(23)+8*s(11)+0
  Such that:aux(2) =< V_w/8
it(23) =< V__011
s(12) =< it(23)*aux(2)
s(11) =< s(12)

  with precondition: [B=10,V_w>=8,V__011>=1] 

* Chain [25]: 0
  with precondition: [B=10,0>=V__011] 


#### Cost of chains of eval_putRGBcontig8bittile_bb0_in(V_w,V_h,B):
* Chain [28]: 2*s(13)+1
  Such that:s(13) =< V_h

  with precondition: [7>=V_w,V_h>=1] 

* Chain [27]: 1
  with precondition: [0>=V_h] 

* Chain [26]: 2*s(15)+8*s(17)+1
  Such that:s(14) =< V_w/8
s(15) =< V_h
s(16) =< s(15)*s(14)
s(17) =< s(16)

  with precondition: [V_w>=8,V_h>=1] 


#### Cost of chains of eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B):
* Chain [31]: 2*s(18)+1
  Such that:s(18) =< V_h

  with precondition: [7>=V_w,V_h>=1] 

* Chain [30]: 1
  with precondition: [0>=V_h] 

* Chain [29]: 2*s(20)+8*s(22)+1
  Such that:s(19) =< V_w/8
s(20) =< V_h
s(21) =< s(20)*s(19)
s(22) =< s(21)

  with precondition: [V_w>=8,V_h>=1] 


Closed-form bounds of eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): 
-------------------------------------
* Chain [31] with precondition: [7>=V_w,V_h>=1] 
    - Upper bound: 2*V_h+1 
    - Complexity: n 
* Chain [30] with precondition: [0>=V_h] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [29] with precondition: [V_w>=8,V_h>=1] 
    - Upper bound: 2*V_h+1+V_w/8* (8*V_h) 
    - Complexity: n^2 

### Maximum cost of eval_putRGBcontig8bittile_start(V_x,V_y,V_w,V_h,V_fromskew,V_toskew,B): nat(V_h)*8*nat(V_w/8)+nat(V_h)*2+1 
Asymptotic class: n^2 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 204 ms.
* Invariants computed in 258 ms.
   - Backward Invariants 188 ms.
   - Transitive Invariants 19 ms.
* Refinement performed in 569 ms.
* Termination proved in 21 ms.
* Upper bounds computed in 367 ms.
   - Equation cost structures 129 ms.
   - Phase cost structures 128 ms.
   - Chain cost structures 167 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 1595 ms.

