Warning: Ignored call to eval_zbind_stop/1 in equation eval_zbind_bb44_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_zbind_117/7,eval_zbind_118/7,eval_zbind_119/7,eval_zbind_120/7,eval_zbind_29/7,eval_zbind_30/7,eval_zbind_31/8,eval_zbind_32/8,eval_zbind_49/8,eval_zbind_50/8,eval_zbind_80/6,eval_zbind_81/6,eval_zbind_82/6,eval_zbind_83/6,eval_zbind_86/6,eval_zbind_87/6,eval_zbind_88/6,eval_zbind_89/6,eval_zbind_96/6,eval_zbind_97/7,eval_zbind_98/7,eval_zbind_NewDefault3_in/6,eval_zbind_bb13_in/8,eval_zbind_bb15_in/8,eval_zbind_bb19_in/8,eval_zbind_bb20_in/6,eval_zbind_bb23_in/6,eval_zbind_bb29_in/6,eval_zbind_bb34_in/7,eval_zbind_bb36_in/7,eval_zbind_bb39_in/7,eval_zbind_bb7_in/6]
1. recursive  : [eval_zbind_130/5,eval_zbind_131/5,eval_zbind_bb6_in/3,loop_cont_eval_zbind_bb7_in/6]
2. non_recursive  : [eval_zbind_bb44_in/1]
3. non_recursive  : [eval_zbind_85/1]
4. non_recursive  : [eval_zbind_84/2]
5. non_recursive  : [loop_cont_eval_zbind_bb6_in/3]
6. non_recursive  : [eval_zbind_13/1]
7. non_recursive  : [eval_zbind_12/1]
8. non_recursive  : [eval_zbind_bb3_in/1]
9. non_recursive  : [eval_zbind_6/1]
10. non_recursive  : [eval_zbind_5/1]
11. non_recursive  : [eval_zbind_8/1]
12. non_recursive  : [eval_zbind_7/1]
13. non_recursive  : [eval_zbind_135/1]
14. non_recursive  : [eval_zbind_134/1]
15. non_recursive  : [eval_zbind_NewDefault_in/1]
16. non_recursive  : [eval_zbind_bb0_in/1]
17. non_recursive  : [eval_zbind_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_zbind_bb7_in/6
1. SCC is partially evaluated into eval_zbind_bb6_in/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_zbind_bb6_in/3
6. SCC is partially evaluated into eval_zbind_13/1
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_zbind_bb3_in/1
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_zbind_bb0_in/1
17. SCC is partially evaluated into eval_zbind_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_zbind_bb7_in/6 
* CE 21 is refined into CE [22] 
* CE 20 is refined into CE [23] 
* CE 19 is refined into CE [24] 
* CE 17 is refined into CE [25] 
* CE 18 is refined into CE [26] 


#### Refined cost equations eval_zbind_bb7_in/6 
* CE 22: eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) = 0
     [V_depth_1>=V_depth_0,V_depth_1=C+1,B=4] 
* CE 23: eval_zbind_bb7_in(A,B,C,A,B,D) = 0
     [B>=A,B=D+1,C=3] 
* CE 24: eval_zbind_bb7_in(A,B,C,B,D,E) = 0
     [B>=A,C=2] 
* CE 25: eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) = 1+ eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E)
     [V_depth_1>=V_depth_0,B>=2,4>=B] 
* CE 26: eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) = 1+ eval_zbind_bb7_in(V_depth_0,F,B,C,D,E)
     [V_depth_1>=V_depth_0,B>=2,4>=B,V_depth_1+1=F] 

### Cost equations --> "Loop" of eval_zbind_bb7_in/6 
* CEs [25] --> Loop 17 
* CEs [26] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [24] --> Loop 21 

#### Loops of eval_zbind_bb7_in/6 
* Loop 17: eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E)->  eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E)
                  [V_depth_1>=V_depth_0,B>=2,4>=B] 
* Loop 18: eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E)->  eval_zbind_bb7_in(V_depth_0,V_depth_1',B,C,D,E)
                  [V_depth_1>=V_depth_0,B>=2,4>=B,V_depth_1+1=V_depth_1'] 
* Loop 19: eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) [V_depth_1>=V_depth_0,V_depth_1=C+1,B=4] 
* Loop 20: eval_zbind_bb7_in(A,B,C,A,B,D) [B>=A,B=D+1,C=3] 
* Loop 21: eval_zbind_bb7_in(A,B,C,B,D,E) [B>=A,C=2] 

### Ranking functions of CR eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) 

#### Partial ranking functions of CR eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) 


### Resulting Chains:eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) 
* [[17,18]]...
* [[17,18],21]
* [[17,18],20]
* [[17,18],19]
* [21]
* [20]
* [19]


### Merging Chains  eval_zbind_bb7_in/6 into  External patterns of execution 
* [[21],[21,[17,18]]] --> 1 
* [[20],[20,[17,18]]] --> 2 
* [[19],[19,[17,18]]] --> 3 
* [[[17,18]]] --> 4 


### Specialization of cost equations eval_zbind_bb6_in/3 
* CE 10 is refined into CE [27,28] 
* CE 11 is refined into CE [29,30] 
* CE 14 is refined into CE [31] 
* CE 8 is refined into CE [32,33] 
* CE 12 is refined into CE [34,35] 
* CE 9 is refined into CE [36,37] 
* CE 13 is refined into CE [38,39] 


#### Refined cost equations eval_zbind_bb6_in/3 
* CE 27: eval_zbind_bb6_in(V_depth_0,B,C) = 1+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,C,E,F):1
     [C>=V_depth_0,V_depth_0>=1,D=2,B=2] 
* CE 28: eval_zbind_bb6_in(V_depth_0,B,C) = 1+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,C,E,F):4
     [V_depth_0>=1,D=2,B=2] 
* CE 29: eval_zbind_bb6_in(V_depth_0,B,C) = 1+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,C,E,F):1
     [C>=V_depth_0,0>=V_depth_0+1,D=2,B=2] 
* CE 30: eval_zbind_bb6_in(V_depth_0,B,C) = 1+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,C,E,F):4
     [0>=V_depth_0+1,D=2,B=2] 
* CE 31: eval_zbind_bb6_in(V_depth_0,B,C) = 0
     [B=5,V_depth_0=0] 
* CE 32: eval_zbind_bb6_in(V_depth_0,B,C) = 2+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,E,F,G):3+ eval_zbind_bb6_in(E,B,C)
     [E+1>=V_depth_0,V_depth_0>=1,D=4] 
* CE 33: eval_zbind_bb6_in(V_depth_0,B,C) = 2+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,E,F,G):4
     [V_depth_0>=1,D=4] 
* CE 34: eval_zbind_bb6_in(V_depth_0,B,C) = 2+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,V_depth_0,E,F):2+ eval_zbind_bb6_in(F,B,C)
     [F+1>=V_depth_0,V_depth_0>=1,F+1=E,D=3] 
* CE 35: eval_zbind_bb6_in(V_depth_0,B,C) = 2+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,E,F,G):4
     [V_depth_0>=1,D=3] 
* CE 36: eval_zbind_bb6_in(V_depth_0,B,C) = 2+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,E,F,G):3+ eval_zbind_bb6_in(E,B,C)
     [E+1>=V_depth_0,0>=V_depth_0+1,D=4] 
* CE 37: eval_zbind_bb6_in(V_depth_0,B,C) = 2+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,E,F,G):4
     [0>=V_depth_0+1,D=4] 
* CE 38: eval_zbind_bb6_in(V_depth_0,B,C) = 2+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,V_depth_0,E,F):2+ eval_zbind_bb6_in(F,B,C)
     [F+1>=V_depth_0,0>=V_depth_0+1,F+1=E,D=3] 
* CE 39: eval_zbind_bb6_in(V_depth_0,B,C) = 2+ eval_zbind_bb7_in(V_depth_0,V_depth_0,D,E,F,G):4
     [0>=V_depth_0+1,D=3] 

### Cost equations --> "Loop" of eval_zbind_bb6_in/3 
* CEs [28,33,35] --> Loop 22 
* CEs [30,37,39] --> Loop 23 
* CEs [32,34] --> Loop 24 
* CEs [36,38] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [31] --> Loop 28 

#### Loops of eval_zbind_bb6_in/3 
* Loop 22: eval_zbind_bb6_in(V_depth_0,B,C) [V_depth_0>=1] 
* Loop 23: eval_zbind_bb6_in(V_depth_0,B,C) [0>=V_depth_0+1] 
* Loop 24: eval_zbind_bb6_in(V_depth_0,B,C)->  eval_zbind_bb6_in(V_depth_0',B,C)
                  [V_depth_0'+1>=V_depth_0,V_depth_0>=1] 
* Loop 25: eval_zbind_bb6_in(V_depth_0,B,C)->  eval_zbind_bb6_in(V_depth_0',B,C)
                  [V_depth_0'+1>=V_depth_0,0>=V_depth_0+1] 
* Loop 26: eval_zbind_bb6_in(V_depth_0,B,C) [C>=V_depth_0,V_depth_0>=1,B=2] 
* Loop 27: eval_zbind_bb6_in(V_depth_0,B,C) [C>=V_depth_0,0>=V_depth_0+1,B=2] 
* Loop 28: eval_zbind_bb6_in(V_depth_0,B,C) [B=5,V_depth_0=0] 

### Ranking functions of CR eval_zbind_bb6_in(V_depth_0,B,C) 

#### Partial ranking functions of CR eval_zbind_bb6_in(V_depth_0,B,C) 


### Resulting Chains:eval_zbind_bb6_in(V_depth_0,B,C) 
* [[24]]...
* [[24],28]
* [[24],26]
* [[24],22]...
* [26]
* [22]...


### Merging Chains  eval_zbind_bb6_in/3 into  External patterns of execution 
* [[26],[26,[24]]] --> 1 
* [[28,[24]]] --> 2 
* [[22],[[24]],[22,[24]]] --> 3 


### Specialization of cost equations loop_cont_eval_zbind_bb6_in/3 
* CE 15 is refined into CE [40] 
* CE 16 is refined into CE [41] 


#### Refined cost equations loop_cont_eval_zbind_bb6_in/3 
* CE 40: loop_cont_eval_zbind_bb6_in(D,A,B) = 0
     [D=5] 
* CE 41: loop_cont_eval_zbind_bb6_in(D,A,B) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_zbind_bb6_in/3 
* CEs [40] --> Loop 29 
* CEs [41] --> Loop 30 

#### Loops of loop_cont_eval_zbind_bb6_in/3 
* Loop 29: loop_cont_eval_zbind_bb6_in(D,A,B) [D=5] 
* Loop 30: loop_cont_eval_zbind_bb6_in(D,A,B) [D=2] 

### Ranking functions of CR loop_cont_eval_zbind_bb6_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_zbind_bb6_in(D,A,B) 


### Resulting Chains:loop_cont_eval_zbind_bb6_in(D,A,B) 
* [30]
* [29]


### Merging Chains  loop_cont_eval_zbind_bb6_in/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_zbind_13/1 
* CE 7 is refined into CE [42,43,44] 


#### Refined cost equations eval_zbind_13/1 
* CE 42: eval_zbind_13(B) = 1+ eval_zbind_bb6_in(C,D,E):1+ loop_cont_eval_zbind_bb6_in(F,E,B):1
     [E>=1,F=2,D=2,C=1] 
* CE 43: eval_zbind_13(B) = 1+ eval_zbind_bb6_in(C,D,E):2+ loop_cont_eval_zbind_bb6_in(F,E,B):2
     [F=5,D=5,C=1] 
* CE 44: eval_zbind_13(B) = 1+ eval_zbind_bb6_in(C,D,E):3
     [C=1] 

### Cost equations --> "Loop" of eval_zbind_13/1 
* CEs [44] --> Loop 31 
* CEs [42,43] --> Loop 32 

#### Loops of eval_zbind_13/1 
* Loop 31: eval_zbind_13(B) [] 
* Loop 32: eval_zbind_13(B) [] 

### Ranking functions of CR eval_zbind_13(B) 

#### Partial ranking functions of CR eval_zbind_13(B) 


### Resulting Chains:eval_zbind_13(B) 
* [32]
* [31]...


### Merging Chains  eval_zbind_13/1 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations eval_zbind_bb3_in/1 
* CE 5 is refined into CE [45] 
* CE 6 is refined into CE [46,47] 


#### Refined cost equations eval_zbind_bb3_in/1 
* CE 45: eval_zbind_bb3_in(B) = 0
     [] 
* CE 46: eval_zbind_bb3_in(B) = 0+ eval_zbind_13(B):1
     [] 
* CE 47: eval_zbind_bb3_in(B) = 0+ eval_zbind_13(B):2
     [] 

### Cost equations --> "Loop" of eval_zbind_bb3_in/1 
* CEs [47] --> Loop 33 
* CEs [45,46] --> Loop 34 

#### Loops of eval_zbind_bb3_in/1 
* Loop 33: eval_zbind_bb3_in(B) [] 
* Loop 34: eval_zbind_bb3_in(B) [] 

### Ranking functions of CR eval_zbind_bb3_in(B) 

#### Partial ranking functions of CR eval_zbind_bb3_in(B) 


### Resulting Chains:eval_zbind_bb3_in(B) 
* [34]
* [33]...


### Merging Chains  eval_zbind_bb3_in/1 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_zbind_bb0_in/1 
* CE 3 is refined into CE [48,49] 
* CE 4 is refined into CE [50] 


#### Refined cost equations eval_zbind_bb0_in/1 
* CE 48: eval_zbind_bb0_in(B) = 0+ eval_zbind_bb3_in(B):1
     [] 
* CE 49: eval_zbind_bb0_in(B) = 0+ eval_zbind_bb3_in(B):2
     [] 
* CE 50: eval_zbind_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_zbind_bb0_in/1 
* CEs [48,50] --> Loop 35 
* CEs [49] --> Loop 36 

#### Loops of eval_zbind_bb0_in/1 
* Loop 35: eval_zbind_bb0_in(B) [] 
* Loop 36: eval_zbind_bb0_in(B) [] 

### Ranking functions of CR eval_zbind_bb0_in(B) 

#### Partial ranking functions of CR eval_zbind_bb0_in(B) 


### Resulting Chains:eval_zbind_bb0_in(B) 
* [36]...
* [35]


### Merging Chains  eval_zbind_bb0_in/1 into  External patterns of execution 
* [[35]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations eval_zbind_start/1 
* CE 2 is refined into CE [51,52] 


#### Refined cost equations eval_zbind_start/1 
* CE 51: eval_zbind_start(B) = 0+ eval_zbind_bb0_in(B):1
     [] 
* CE 52: eval_zbind_start(B) = 0+ eval_zbind_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_zbind_start/1 
* CEs [52] --> Loop 37 
* CEs [51] --> Loop 38 

#### Loops of eval_zbind_start/1 
* Loop 37: eval_zbind_start(B) [] 
* Loop 38: eval_zbind_start(B) [] 

### Ranking functions of CR eval_zbind_start(B) 

#### Partial ranking functions of CR eval_zbind_start(B) 


### Resulting Chains:eval_zbind_start(B) 
* [38]
* [37]...


### Merging Chains  eval_zbind_start/1 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [17,18] 

 * loop 17:eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) -> [eval_zbind_bb7_in(V_depth_0',V_depth_1',B',C',D',E')] 
1
 * loop 18:eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) -> [eval_zbind_bb7_in(V_depth_0',V_depth_1',B',C',D',E')] 
1
#### Cost of phase [17,18]:eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) -> [eval_zbind_bb7_in(V_depth_0',V_depth_1',B',C',D',E')] 
2*it(17)+0
#### Cost of phase [17,18]:eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) -> [eval_zbind_bb7_in(V_depth_0',V_depth_1',B',C',D',E')] 
2*it(17)+0
#### Cost of phase [17,18]:eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) -> [eval_zbind_bb7_in(V_depth_0',V_depth_1',B',C',D',E')] 
2*it(17)+0
#### Cost of phase [17,18]:eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E) -> [eval_zbind_bb7_in(V_depth_0',V_depth_1',B',C',D',E')] 
2*it(17)+0
#### Cost of chains of eval_zbind_bb7_in(V_depth_0,V_depth_1,B,C,D,E):
* Chain [[17,18]]...: 2*it(17)+0
  with precondition: [V_depth_1>=V_depth_0,B>=2,4>=B] 

* Chain [[17,18],21]: 2*it(17)+0
  with precondition: [B=2,V_depth_1>=V_depth_0,C>=V_depth_1] 

* Chain [[17,18],20]: 2*it(17)+0
  with precondition: [B=3,V_depth_0=C,D=E+1,V_depth_1>=V_depth_0,D>=V_depth_1] 

* Chain [[17,18],19]: 2*it(17)+0
  with precondition: [B=4,V_depth_1>=V_depth_0,C+1>=V_depth_1] 

* Chain [21]: 0
  with precondition: [B=2,V_depth_1=C,V_depth_1>=V_depth_0] 

* Chain [20]: 0
  with precondition: [B=3,V_depth_0=C,V_depth_1=D,V_depth_1=E+1,V_depth_1>=V_depth_0] 

* Chain [19]: 0
  with precondition: [B=4,V_depth_1=C+1,V_depth_1>=V_depth_0] 


#### Cost of loops [24] 

 * loop 24:eval_zbind_bb6_in(V_depth_0,B,C) -> [eval_zbind_bb6_in(V_depth_0',B',C')] 
1*s(6)+0
#### Cost of phase [24]:eval_zbind_bb6_in(V_depth_0,B,C) -> [eval_zbind_bb6_in(V_depth_0',B',C')] 
1*s(7)+0
#### Cost of phase [24]:eval_zbind_bb6_in(V_depth_0,B,C) -> [eval_zbind_bb6_in(V_depth_0',B',C')] 
1*s(7)+0
#### Cost of phase [24]:eval_zbind_bb6_in(V_depth_0,B,C) -> [eval_zbind_bb6_in(V_depth_0',B',C')] 
1*s(7)+0
#### Cost of phase [24]:eval_zbind_bb6_in(V_depth_0,B,C) -> [eval_zbind_bb6_in(V_depth_0',B',C')] 
1*s(7)+0
#### Cost of chains of eval_zbind_bb6_in(V_depth_0,B,C):
* Chain [[24]]...: 1*s(7)+0
  with precondition: [V_depth_0>=1] 

* Chain [[24],28]: 1*s(7)+0
  with precondition: [B=5,V_depth_0>=1] 

* Chain [[24],26]: 2*s(7)+1
  with precondition: [B=2,V_depth_0>=1,C>=1] 

* Chain [[24],22]...: 2*aux(5)+0
  with precondition: [V_depth_0>=1] 

* Chain [26]: 1*s(8)+1
  with precondition: [B=2,V_depth_0>=1,C>=V_depth_0] 

* Chain [22]...: 1*aux(5)+0
  with precondition: [V_depth_0>=1] 


#### Cost of chains of loop_cont_eval_zbind_bb6_in(D,A,B):
* Chain [30]: 0
  with precondition: [D=2] 

* Chain [29]: 0
  with precondition: [D=5] 


#### Cost of chains of eval_zbind_13(B):
* Chain [32]: 1*aux(8)+0
  with precondition: [] 

* Chain [31]...: 1*s(19)+1
  with precondition: [] 


#### Cost of chains of eval_zbind_bb3_in(B):
* Chain [34]: 1*aux(9)+0
  with precondition: [] 

* Chain [33]...: 1*s(21)+1
  with precondition: [] 


#### Cost of chains of eval_zbind_bb0_in(B):
* Chain [36]...: 1*s(22)+1
  with precondition: [] 

* Chain [35]: 1*aux(10)+0
  with precondition: [] 


#### Cost of chains of eval_zbind_start(B):
* Chain [38]: 1*s(24)+0
  with precondition: [] 

* Chain [37]...: 1*s(25)+1
  with precondition: [] 


Closed-form bounds of eval_zbind_start(B): 
-------------------------------------
* Chain [38] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [37]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_zbind_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 65 ms.
* Invariants computed in 33 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 58 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 33 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 254 ms.

