Warning: Ignored call to eval_self_destruct_stop/1 in equation eval_self_destruct_6/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_self_destruct_0/2,eval_self_destruct_1/2,eval_self_destruct_bb1_in/2]
1. non_recursive  : [eval_self_destruct_6/1]
2. non_recursive  : [eval_self_destruct_5/1]
3. non_recursive  : [eval_self_destruct_4/1]
4. non_recursive  : [eval_self_destruct_3/1]
5. non_recursive  : [loop_cont_eval_self_destruct_bb1_in/2]
6. non_recursive  : [eval_self_destruct_bb0_in/1]
7. non_recursive  : [eval_self_destruct_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_self_destruct_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_self_destruct_bb0_in/1
7. SCC is partially evaluated into eval_self_destruct_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_self_destruct_bb1_in/2 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 


#### Refined cost equations eval_self_destruct_bb1_in/2 
* CE 6: eval_self_destruct_bb1_in(V_pool_0,B) = 0
     [0>=V_pool_0+1,B=2] 
* CE 7: eval_self_destruct_bb1_in(V_pool_0,B) = 1+ eval_self_destruct_bb1_in(C,D)
     [V_pool_0>=0,1>=V_pool_0,V_pool_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_self_destruct_bb1_in/2 
* CEs [7] --> Loop 5 
* CEs [6] --> Loop 6 

#### Loops of eval_self_destruct_bb1_in/2 
* Loop 5: eval_self_destruct_bb1_in(V_pool_0,B)->  eval_self_destruct_bb1_in(V_pool_0',B')
                  [V_pool_0>=0,1>=V_pool_0,V_pool_0=V_pool_0'+1,B'=2,B=2] 
* Loop 6: eval_self_destruct_bb1_in(V_pool_0,B) [0>=V_pool_0+1,B=2] 

### Ranking functions of CR eval_self_destruct_bb1_in(V_pool_0,B) 
* RF of phase [5]: [V_pool_0+1]

#### Partial ranking functions of CR eval_self_destruct_bb1_in(V_pool_0,B) 
* Partial RF of phase [5]:
  - RF of loop [5:1]:
    V_pool_0+1


### Resulting Chains:eval_self_destruct_bb1_in(V_pool_0,B) 
* [[5],6]


### Merging Chains  eval_self_destruct_bb1_in/2 into  External patterns of execution 
* [[6,[5]]] --> 1 


### Specialization of cost equations eval_self_destruct_bb0_in/1 
* CE 3 is refined into CE [8] 


#### Refined cost equations eval_self_destruct_bb0_in/1 
* CE 8: eval_self_destruct_bb0_in(B) = 1+ eval_self_destruct_bb1_in(C,D):1
     [D=2,C=1] 

### Cost equations --> "Loop" of eval_self_destruct_bb0_in/1 
* CEs [8] --> Loop 7 

#### Loops of eval_self_destruct_bb0_in/1 
* Loop 7: eval_self_destruct_bb0_in(B) [] 

### Ranking functions of CR eval_self_destruct_bb0_in(B) 

#### Partial ranking functions of CR eval_self_destruct_bb0_in(B) 


### Resulting Chains:eval_self_destruct_bb0_in(B) 
* [7]


### Merging Chains  eval_self_destruct_bb0_in/1 into  External patterns of execution 
* [[7]] --> 1 


### Specialization of cost equations eval_self_destruct_start/1 
* CE 2 is refined into CE [9] 


#### Refined cost equations eval_self_destruct_start/1 
* CE 9: eval_self_destruct_start(B) = 0+ eval_self_destruct_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_self_destruct_start/1 
* CEs [9] --> Loop 8 

#### Loops of eval_self_destruct_start/1 
* Loop 8: eval_self_destruct_start(B) [] 

### Ranking functions of CR eval_self_destruct_start(B) 

#### Partial ranking functions of CR eval_self_destruct_start(B) 


### Resulting Chains:eval_self_destruct_start(B) 
* [8]


### Merging Chains  eval_self_destruct_start/1 into  External patterns of execution 
* [[8]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [5] 

 * loop 5:eval_self_destruct_bb1_in(V_pool_0,B) -> [eval_self_destruct_bb1_in(V_pool_0',B')] 
1
#### Cost of phase [5]:eval_self_destruct_bb1_in(V_pool_0,B) -> [eval_self_destruct_bb1_in(V_pool_0',B')] 
1*it(5)+0
  Such that:it(5) =< V_pool_0+1
it(5) =< V_pool_0-V_pool_0'

#### Cost of chains of eval_self_destruct_bb1_in(V_pool_0,B):
* Chain [[5],6]: 1*it(5)+0
  Such that:it(5) =< V_pool_0+1

  with precondition: [B=2,1>=V_pool_0,V_pool_0>=0] 


#### Cost of chains of eval_self_destruct_bb0_in(B):
* Chain [7]: 1*s(1)+1
  Such that:s(1) =< 2

  with precondition: [] 


#### Cost of chains of eval_self_destruct_start(B):
* Chain [8]: 1*s(2)+1
  Such that:s(2) =< 2

  with precondition: [] 


Closed-form bounds of eval_self_destruct_start(B): 
-------------------------------------
* Chain [8] with precondition: [] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of eval_self_destruct_start(B): 3 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 12 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 20 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 18 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 102 ms.

