Warning: Ignored call to eval_name_scan_sub_stop/1 in equation eval_name_scan_sub_bb14_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_name_scan_sub_bb14_in/1]
1. recursive  : [eval_name_scan_sub_bb2_in/1,eval_name_scan_sub_bb4_in/1]
2. recursive  : [eval_name_scan_sub_bb9_in/1]
3. non_recursive  : [loop_cont_eval_name_scan_sub_bb9_in/2]
4. non_recursive  : [eval_name_scan_sub_26/1]
5. non_recursive  : [eval_name_scan_sub_25/1]
6. non_recursive  : [loop_cont_eval_name_scan_sub_bb2_in/2]
7. non_recursive  : [eval_name_scan_sub_bb0_in/2]
8. non_recursive  : [eval_name_scan_sub_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_name_scan_sub_bb2_in/1
2. SCC is partially evaluated into eval_name_scan_sub_bb9_in/1
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_name_scan_sub_26/1
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_name_scan_sub_bb2_in/2
7. SCC is partially evaluated into eval_name_scan_sub_bb0_in/2
8. SCC is partially evaluated into eval_name_scan_sub_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_name_scan_sub_bb2_in/1 
* CE 10 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 9 is refined into CE [20] 


#### Refined cost equations eval_name_scan_sub_bb2_in/1 
* CE 18: eval_name_scan_sub_bb2_in(B) = 0
     [B=3] 
* CE 19: eval_name_scan_sub_bb2_in(B) = 0
     [B=2] 
* CE 20: eval_name_scan_sub_bb2_in(B) = 1+ eval_name_scan_sub_bb2_in(B)
     [] 

### Cost equations --> "Loop" of eval_name_scan_sub_bb2_in/1 
* CEs [20] --> Loop 13 
* CEs [18] --> Loop 14 
* CEs [19] --> Loop 15 

#### Loops of eval_name_scan_sub_bb2_in/1 
* Loop 13: eval_name_scan_sub_bb2_in(B)->  eval_name_scan_sub_bb2_in(B)
                  [] 
* Loop 14: eval_name_scan_sub_bb2_in(B) [B=3] 
* Loop 15: eval_name_scan_sub_bb2_in(B) [B=2] 

### Ranking functions of CR eval_name_scan_sub_bb2_in(B) 

#### Partial ranking functions of CR eval_name_scan_sub_bb2_in(B) 


### Resulting Chains:eval_name_scan_sub_bb2_in(B) 
* [[13]]...
* [[13],15]
* [[13],14]
* [15]
* [14]


### Merging Chains  eval_name_scan_sub_bb2_in/1 into  External patterns of execution 
* [[15],[15,[13]]] --> 1 
* [[14],[14,[13]]] --> 2 
* [[[13]]] --> 3 


### Specialization of cost equations eval_name_scan_sub_bb9_in/1 
* CE 17 is refined into CE [21] 
* CE 16 is refined into CE [22] 


#### Refined cost equations eval_name_scan_sub_bb9_in/1 
* CE 21: eval_name_scan_sub_bb9_in(B) = 0
     [B=2] 
* CE 22: eval_name_scan_sub_bb9_in(B) = 1+ eval_name_scan_sub_bb9_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_name_scan_sub_bb9_in/1 
* CEs [22] --> Loop 16 
* CEs [21] --> Loop 17 

#### Loops of eval_name_scan_sub_bb9_in/1 
* Loop 16: eval_name_scan_sub_bb9_in(B)->  eval_name_scan_sub_bb9_in(B')
                  [B'=2,B=2] 
* Loop 17: eval_name_scan_sub_bb9_in(B) [B=2] 

### Ranking functions of CR eval_name_scan_sub_bb9_in(B) 

#### Partial ranking functions of CR eval_name_scan_sub_bb9_in(B) 


### Resulting Chains:eval_name_scan_sub_bb9_in(B) 
* [[16]]...
* [[16],17]
* [17]


### Merging Chains  eval_name_scan_sub_bb9_in/1 into  External patterns of execution 
* [[17],[17,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations eval_name_scan_sub_26/1 
* CE 14 is refined into CE [23,24] 
* CE 15 is refined into CE [25] 


#### Refined cost equations eval_name_scan_sub_26/1 
* CE 23: eval_name_scan_sub_26(B) = 1+ eval_name_scan_sub_bb9_in(C):1
     [C=2] 
* CE 24: eval_name_scan_sub_26(B) = 1+ eval_name_scan_sub_bb9_in(C):2
     [C=2] 
* CE 25: eval_name_scan_sub_26(B) = 0
     [] 

### Cost equations --> "Loop" of eval_name_scan_sub_26/1 
* CEs [23,25] --> Loop 18 
* CEs [24] --> Loop 19 

#### Loops of eval_name_scan_sub_26/1 
* Loop 18: eval_name_scan_sub_26(B) [] 
* Loop 19: eval_name_scan_sub_26(B) [] 

### Ranking functions of CR eval_name_scan_sub_26(B) 

#### Partial ranking functions of CR eval_name_scan_sub_26(B) 


### Resulting Chains:eval_name_scan_sub_26(B) 
* [19]...
* [18]


### Merging Chains  eval_name_scan_sub_26/1 into  External patterns of execution 
* [[18]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations loop_cont_eval_name_scan_sub_bb2_in/2 
* CE 13 is refined into CE [26,27] 
* CE 12 is refined into CE [28] 


#### Refined cost equations loop_cont_eval_name_scan_sub_bb2_in/2 
* CE 26: loop_cont_eval_name_scan_sub_bb2_in(B,A) = 0+ eval_name_scan_sub_26(A):1
     [B=3] 
* CE 27: loop_cont_eval_name_scan_sub_bb2_in(B,A) = 0+ eval_name_scan_sub_26(A):2
     [B=3] 
* CE 28: loop_cont_eval_name_scan_sub_bb2_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_name_scan_sub_bb2_in/2 
* CEs [26] --> Loop 20 
* CEs [28] --> Loop 21 
* CEs [27] --> Loop 22 

#### Loops of loop_cont_eval_name_scan_sub_bb2_in/2 
* Loop 20: loop_cont_eval_name_scan_sub_bb2_in(B,A) [B=3] 
* Loop 21: loop_cont_eval_name_scan_sub_bb2_in(B,A) [B=2] 
* Loop 22: loop_cont_eval_name_scan_sub_bb2_in(B,A) [B=3] 

### Ranking functions of CR loop_cont_eval_name_scan_sub_bb2_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_name_scan_sub_bb2_in(B,A) 


### Resulting Chains:loop_cont_eval_name_scan_sub_bb2_in(B,A) 
* [22]...
* [21]
* [20]


### Merging Chains  loop_cont_eval_name_scan_sub_bb2_in/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations eval_name_scan_sub_bb0_in/2 
* CE 4 is refined into CE [29] 
* CE 6 is refined into CE [30,31,32,33] 
* CE 3 is refined into CE [34] 
* CE 5 is refined into CE [35,36,37,38] 
* CE 7 is refined into CE [39] 
* CE 8 is refined into CE [40,41,42,43] 


#### Refined cost equations eval_name_scan_sub_bb0_in/2 
* CE 29: eval_name_scan_sub_bb0_in(V_free_empty,B) = 0
     [V_free_empty>=1] 
* CE 30: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):1+ loop_cont_eval_name_scan_sub_bb2_in(D,B):1
     [V_free_empty>=1,D=2,C=2] 
* CE 31: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):2+ loop_cont_eval_name_scan_sub_bb2_in(D,B):2
     [V_free_empty>=1,D=3,C=3] 
* CE 32: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):2+ loop_cont_eval_name_scan_sub_bb2_in(D,B):3
     [V_free_empty>=1,D=3,C=3] 
* CE 33: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):3
     [V_free_empty>=1] 
* CE 34: eval_name_scan_sub_bb0_in(V_free_empty,B) = 0
     [0>=V_free_empty+1] 
* CE 35: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):1+ loop_cont_eval_name_scan_sub_bb2_in(D,B):1
     [0>=V_free_empty+1,D=2,C=2] 
* CE 36: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):2+ loop_cont_eval_name_scan_sub_bb2_in(D,B):2
     [0>=V_free_empty+1,D=3,C=3] 
* CE 37: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):2+ loop_cont_eval_name_scan_sub_bb2_in(D,B):3
     [0>=V_free_empty+1,D=3,C=3] 
* CE 38: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):3
     [0>=V_free_empty+1] 
* CE 39: eval_name_scan_sub_bb0_in(V_free_empty,B) = 0
     [V_free_empty=0] 
* CE 40: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):1+ loop_cont_eval_name_scan_sub_bb2_in(D,B):1
     [D=2,C=2,V_free_empty=0] 
* CE 41: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):2+ loop_cont_eval_name_scan_sub_bb2_in(D,B):2
     [D=3,C=3,V_free_empty=0] 
* CE 42: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):2+ loop_cont_eval_name_scan_sub_bb2_in(D,B):3
     [D=3,C=3,V_free_empty=0] 
* CE 43: eval_name_scan_sub_bb0_in(V_free_empty,B) = 1+ eval_name_scan_sub_bb2_in(C):3
     [V_free_empty=0] 

### Cost equations --> "Loop" of eval_name_scan_sub_bb0_in/2 
* CEs [32,33] --> Loop 23 
* CEs [37,38] --> Loop 24 
* CEs [42,43] --> Loop 25 
* CEs [29,30,31] --> Loop 26 
* CEs [34,35,36] --> Loop 27 
* CEs [39,40,41] --> Loop 28 

#### Loops of eval_name_scan_sub_bb0_in/2 
* Loop 23: eval_name_scan_sub_bb0_in(V_free_empty,B) [V_free_empty>=1] 
* Loop 24: eval_name_scan_sub_bb0_in(V_free_empty,B) [0>=V_free_empty+1] 
* Loop 25: eval_name_scan_sub_bb0_in(V_free_empty,B) [V_free_empty=0] 
* Loop 26: eval_name_scan_sub_bb0_in(V_free_empty,B) [V_free_empty>=1] 
* Loop 27: eval_name_scan_sub_bb0_in(V_free_empty,B) [0>=V_free_empty+1] 
* Loop 28: eval_name_scan_sub_bb0_in(V_free_empty,B) [V_free_empty=0] 

### Ranking functions of CR eval_name_scan_sub_bb0_in(V_free_empty,B) 

#### Partial ranking functions of CR eval_name_scan_sub_bb0_in(V_free_empty,B) 


### Resulting Chains:eval_name_scan_sub_bb0_in(V_free_empty,B) 
* [28]
* [27]
* [26]
* [25]...
* [24]...
* [23]...


### Merging Chains  eval_name_scan_sub_bb0_in/2 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 
* [[26]] --> 3 
* [[25]] --> 4 
* [[24]] --> 5 
* [[23]] --> 6 


### Specialization of cost equations eval_name_scan_sub_start/3 
* CE 2 is refined into CE [44,45,46,47,48,49] 


#### Refined cost equations eval_name_scan_sub_start/3 
* CE 44: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) = 0+ eval_name_scan_sub_bb0_in(C,B):1
     [C=0,V_free_empty=0] 
* CE 45: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) = 0+ eval_name_scan_sub_bb0_in(V_free_empty,B):2
     [0>=V_free_empty+1] 
* CE 46: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) = 0+ eval_name_scan_sub_bb0_in(V_free_empty,B):3
     [V_free_empty>=1] 
* CE 47: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) = 0+ eval_name_scan_sub_bb0_in(C,B):4
     [C=0,V_free_empty=0] 
* CE 48: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) = 0+ eval_name_scan_sub_bb0_in(V_free_empty,B):5
     [0>=V_free_empty+1] 
* CE 49: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) = 0+ eval_name_scan_sub_bb0_in(V_free_empty,B):6
     [V_free_empty>=1] 

### Cost equations --> "Loop" of eval_name_scan_sub_start/3 
* CEs [49] --> Loop 29 
* CEs [48] --> Loop 30 
* CEs [47] --> Loop 31 
* CEs [46] --> Loop 32 
* CEs [45] --> Loop 33 
* CEs [44] --> Loop 34 

#### Loops of eval_name_scan_sub_start/3 
* Loop 29: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) [V_free_empty>=1] 
* Loop 30: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) [0>=V_free_empty+1] 
* Loop 31: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) [V_free_empty=0] 
* Loop 32: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) [V_free_empty>=1] 
* Loop 33: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) [0>=V_free_empty+1] 
* Loop 34: eval_name_scan_sub_start(V_sub_index,V_free_empty,B) [V_free_empty=0] 

### Ranking functions of CR eval_name_scan_sub_start(V_sub_index,V_free_empty,B) 

#### Partial ranking functions of CR eval_name_scan_sub_start(V_sub_index,V_free_empty,B) 


### Resulting Chains:eval_name_scan_sub_start(V_sub_index,V_free_empty,B) 
* [34]
* [33]
* [32]
* [31]...
* [30]...
* [29]...


### Merging Chains  eval_name_scan_sub_start/3 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 
* [[32]] --> 3 
* [[31]] --> 4 
* [[30]] --> 5 
* [[29]] --> 6 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_name_scan_sub_bb2_in(B) -> [eval_name_scan_sub_bb2_in(B')] 
1
#### Cost of phase [13]:eval_name_scan_sub_bb2_in(B) -> [eval_name_scan_sub_bb2_in(B')] 
1*it(13)+0
#### Cost of phase [13]:eval_name_scan_sub_bb2_in(B) -> [eval_name_scan_sub_bb2_in(B')] 
1*it(13)+0
#### Cost of phase [13]:eval_name_scan_sub_bb2_in(B) -> [eval_name_scan_sub_bb2_in(B')] 
1*it(13)+0
#### Cost of chains of eval_name_scan_sub_bb2_in(B):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [] 

* Chain [[13],15]: 1*it(13)+0
  with precondition: [B=2] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=3] 

* Chain [15]: 0
  with precondition: [B=2] 

* Chain [14]: 0
  with precondition: [B=3] 


#### Cost of loops [16] 

 * loop 16:eval_name_scan_sub_bb9_in(B) -> [eval_name_scan_sub_bb9_in(B')] 
1
#### Cost of phase [16]:eval_name_scan_sub_bb9_in(B) -> [eval_name_scan_sub_bb9_in(B')] 
1*it(16)+0
#### Cost of phase [16]:eval_name_scan_sub_bb9_in(B) -> [eval_name_scan_sub_bb9_in(B')] 
1*it(16)+0
#### Cost of chains of eval_name_scan_sub_bb9_in(B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [B=2] 

* Chain [[16],17]: 1*it(16)+0
  with precondition: [B=2] 

* Chain [17]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_name_scan_sub_26(B):
* Chain [19]...: 1*s(4)+1
  with precondition: [] 

* Chain [18]: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_name_scan_sub_bb2_in(B,A):
* Chain [22]...: 1*s(6)+1
  with precondition: [B=3] 

* Chain [21]: 0
  with precondition: [B=2] 

* Chain [20]: 1*s(7)+0
  with precondition: [B=3] 


#### Cost of chains of eval_name_scan_sub_bb0_in(V_free_empty,B):
* Chain [28]: 1*aux(5)+0
  with precondition: [V_free_empty=0] 

* Chain [27]: 1*aux(6)+0
  with precondition: [0>=V_free_empty+1] 

* Chain [26]: 1*aux(7)+0
  with precondition: [V_free_empty>=1] 

* Chain [25]...: 1*aux(8)+0
  with precondition: [V_free_empty=0] 

* Chain [24]...: 1*aux(9)+0
  with precondition: [0>=V_free_empty+1] 

* Chain [23]...: 1*aux(10)+0
  with precondition: [V_free_empty>=1] 


#### Cost of chains of eval_name_scan_sub_start(V_sub_index,V_free_empty,B):
* Chain [34]: 1*s(26)+0
  with precondition: [V_free_empty=0] 

* Chain [33]: 1*s(27)+0
  with precondition: [0>=V_free_empty+1] 

* Chain [32]: 1*s(28)+0
  with precondition: [V_free_empty>=1] 

* Chain [31]...: 1*s(29)+0
  with precondition: [V_free_empty=0] 

* Chain [30]...: 1*s(30)+0
  with precondition: [0>=V_free_empty+1] 

* Chain [29]...: 1*s(31)+0
  with precondition: [V_free_empty>=1] 


Closed-form bounds of eval_name_scan_sub_start(V_sub_index,V_free_empty,B): 
-------------------------------------
* Chain [34] with precondition: [V_free_empty=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33] with precondition: [0>=V_free_empty+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [32] with precondition: [V_free_empty>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31]... with precondition: [V_free_empty=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [30]... with precondition: [0>=V_free_empty+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29]... with precondition: [V_free_empty>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_name_scan_sub_start(V_sub_index,V_free_empty,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 26 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 16 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 69 ms.

