Warning: Ignored call to eval_ReadBytes_stop/1 in equation loop_cont_eval_ReadBytes_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ReadBytes_0/2,eval_ReadBytes_1/3,eval_ReadBytes_6/4,eval_ReadBytes_7/4,eval_ReadBytes_bb1_in/2]
1. non_recursive  : [loop_cont_eval_ReadBytes_bb1_in/2]
2. non_recursive  : [eval_ReadBytes_bb0_in/2]
3. non_recursive  : [eval_ReadBytes_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ReadBytes_bb1_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_ReadBytes_bb0_in/2
3. SCC is partially evaluated into eval_ReadBytes_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ReadBytes_bb1_in/2 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11] 


#### Refined cost equations eval_ReadBytes_bb1_in/2 
* CE 8: eval_ReadBytes_bb1_in(V__01,B) = 0
     [V__01>=1,B=2] 
* CE 9: eval_ReadBytes_bb1_in(V__01,B) = 0
     [0>=V__01,B=2] 
* CE 10: eval_ReadBytes_bb1_in(V__01,B) = 1+ eval_ReadBytes_bb1_in(C,D)
     [V__01>=1,V__01=C+1,D=2,B=2] 
* CE 11: eval_ReadBytes_bb1_in(V__01,B) = 1+ eval_ReadBytes_bb1_in(C,D)
     [0>=V__01,V__01=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_ReadBytes_bb1_in/2 
* CEs [10] --> Loop 7 
* CEs [11] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 

#### Loops of eval_ReadBytes_bb1_in/2 
* Loop 7: eval_ReadBytes_bb1_in(V__01,B)->  eval_ReadBytes_bb1_in(V__01',B')
                  [V__01>=1,V__01=V__01'+1,B'=2,B=2] 
* Loop 8: eval_ReadBytes_bb1_in(V__01,B)->  eval_ReadBytes_bb1_in(V__01',B')
                  [0>=V__01,V__01=V__01'+1,B'=2,B=2] 
* Loop 9: eval_ReadBytes_bb1_in(V__01,B) [V__01>=1,B=2] 
* Loop 10: eval_ReadBytes_bb1_in(V__01,B) [0>=V__01,B=2] 

### Ranking functions of CR eval_ReadBytes_bb1_in(V__01,B) 
* RF of phase [7]: [V__01]

#### Partial ranking functions of CR eval_ReadBytes_bb1_in(V__01,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__01


### Resulting Chains:eval_ReadBytes_bb1_in(V__01,B) 
* [[8]]...
* [[8],10]
* [[7],[8]]...
* [[7],[8],10]
* [[7],10]
* [[7],9]
* [10]
* [9]


### Merging Chains  eval_ReadBytes_bb1_in/2 into  External patterns of execution 
* [[10],[10,[8]]] --> 1 
* [[9],[9,[7]],[10,[7]],[10,[8],[7]]] --> 2 
* [[[8],[7]]] --> 3 
* [[[8]]] --> 4 


### Specialization of cost equations eval_ReadBytes_bb0_in/2 
* CE 3 is refined into CE [12,13,14,15] 


#### Refined cost equations eval_ReadBytes_bb0_in/2 
* CE 12: eval_ReadBytes_bb0_in(V_n,B) = 1+ eval_ReadBytes_bb1_in(V_n,C):1
     [0>=V_n,C=2] 
* CE 13: eval_ReadBytes_bb0_in(V_n,B) = 1+ eval_ReadBytes_bb1_in(V_n,C):2
     [V_n>=1,C=2] 
* CE 14: eval_ReadBytes_bb0_in(V_n,B) = 1+ eval_ReadBytes_bb1_in(V_n,C):3
     [V_n>=1,C=2] 
* CE 15: eval_ReadBytes_bb0_in(V_n,B) = 1+ eval_ReadBytes_bb1_in(V_n,C):4
     [0>=V_n,C=2] 

### Cost equations --> "Loop" of eval_ReadBytes_bb0_in/2 
* CEs [14] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [12] --> Loop 14 

#### Loops of eval_ReadBytes_bb0_in/2 
* Loop 11: eval_ReadBytes_bb0_in(V_n,B) [V_n>=1] 
* Loop 12: eval_ReadBytes_bb0_in(V_n,B) [0>=V_n] 
* Loop 13: eval_ReadBytes_bb0_in(V_n,B) [V_n>=1] 
* Loop 14: eval_ReadBytes_bb0_in(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_ReadBytes_bb0_in(V_n,B) 

#### Partial ranking functions of CR eval_ReadBytes_bb0_in(V_n,B) 


### Resulting Chains:eval_ReadBytes_bb0_in(V_n,B) 
* [14]
* [13]
* [12]...
* [11]...


### Merging Chains  eval_ReadBytes_bb0_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 
* [[12]] --> 3 
* [[11]] --> 4 


### Specialization of cost equations eval_ReadBytes_start/2 
* CE 2 is refined into CE [16,17,18,19] 


#### Refined cost equations eval_ReadBytes_start/2 
* CE 16: eval_ReadBytes_start(V_n,B) = 0+ eval_ReadBytes_bb0_in(V_n,B):1
     [0>=V_n] 
* CE 17: eval_ReadBytes_start(V_n,B) = 0+ eval_ReadBytes_bb0_in(V_n,B):2
     [V_n>=1] 
* CE 18: eval_ReadBytes_start(V_n,B) = 0+ eval_ReadBytes_bb0_in(V_n,B):3
     [0>=V_n] 
* CE 19: eval_ReadBytes_start(V_n,B) = 0+ eval_ReadBytes_bb0_in(V_n,B):4
     [V_n>=1] 

### Cost equations --> "Loop" of eval_ReadBytes_start/2 
* CEs [19] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [16] --> Loop 18 

#### Loops of eval_ReadBytes_start/2 
* Loop 15: eval_ReadBytes_start(V_n,B) [V_n>=1] 
* Loop 16: eval_ReadBytes_start(V_n,B) [0>=V_n] 
* Loop 17: eval_ReadBytes_start(V_n,B) [V_n>=1] 
* Loop 18: eval_ReadBytes_start(V_n,B) [0>=V_n] 

### Ranking functions of CR eval_ReadBytes_start(V_n,B) 

#### Partial ranking functions of CR eval_ReadBytes_start(V_n,B) 


### Resulting Chains:eval_ReadBytes_start(V_n,B) 
* [18]
* [17]
* [16]...
* [15]...


### Merging Chains  eval_ReadBytes_start/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16]] --> 3 
* [[15]] --> 4 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_ReadBytes_bb1_in(V__01,B) -> [eval_ReadBytes_bb1_in(V__01',B')] 
1
#### Cost of phase [8]:eval_ReadBytes_bb1_in(V__01,B) -> [eval_ReadBytes_bb1_in(V__01',B')] 
1*it(8)+0
#### Cost of phase [8]:eval_ReadBytes_bb1_in(V__01,B) -> [eval_ReadBytes_bb1_in(V__01',B')] 
1*it(8)+0
#### Cost of loops [7] 

 * loop 7:eval_ReadBytes_bb1_in(V__01,B) -> [eval_ReadBytes_bb1_in(V__01',B')] 
1
#### Cost of phase [7]:eval_ReadBytes_bb1_in(V__01,B) -> [eval_ReadBytes_bb1_in(V__01',B')] 
1*it(7)+0
  Such that:it(7) =< V__01
it(7) =< V__01-V__01'

#### Cost of phase [7]:eval_ReadBytes_bb1_in(V__01,B) -> [eval_ReadBytes_bb1_in(V__01',B')] 
1*it(7)+0
  Such that:it(7) =< V__01
it(7) =< V__01-V__01'

#### Cost of phase [7]:eval_ReadBytes_bb1_in(V__01,B) -> [eval_ReadBytes_bb1_in(V__01',B')] 
1*it(7)+0
  Such that:it(7) =< V__01
it(7) =< V__01-V__01'

#### Cost of phase [7]:eval_ReadBytes_bb1_in(V__01,B) -> [eval_ReadBytes_bb1_in(V__01',B')] 
1*it(7)+0
  Such that:it(7) =< V__01
it(7) =< V__01-V__01'

#### Cost of chains of eval_ReadBytes_bb1_in(V__01,B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [0>=V__01,B=2] 

* Chain [[8],10]: 1*it(8)+0
  with precondition: [B=2,0>=V__01] 

* Chain [[7],[8]]...: 1*it(7)+1*it(8)+0
  Such that:it(7) =< V__01

  with precondition: [B=2,V__01>=1] 

* Chain [[7],[8],10]: 1*it(7)+1*it(8)+0
  Such that:it(7) =< V__01

  with precondition: [B=2,V__01>=1] 

* Chain [[7],10]: 1*it(7)+0
  Such that:it(7) =< V__01

  with precondition: [B=2,V__01>=1] 

* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< V__01

  with precondition: [B=2,V__01>=2] 

* Chain [10]: 0
  with precondition: [B=2,0>=V__01] 

* Chain [9]: 0
  with precondition: [B=2,V__01>=1] 


#### Cost of chains of eval_ReadBytes_bb0_in(V_n,B):
* Chain [14]: 1*s(6)+1
  with precondition: [0>=V_n] 

* Chain [13]: 3*s(8)+1*s(9)+1
  Such that:s(7) =< V_n
s(8) =< s(7)

  with precondition: [V_n>=1] 

* Chain [12]...: 1*s(10)+1
  with precondition: [0>=V_n] 

* Chain [11]...: 1*s(11)+1*s(12)+1
  Such that:s(11) =< V_n

  with precondition: [V_n>=1] 


#### Cost of chains of eval_ReadBytes_start(V_n,B):
* Chain [18]: 1*s(13)+1
  with precondition: [0>=V_n] 

* Chain [17]: 3*s(15)+1*s(16)+1
  Such that:s(14) =< V_n
s(15) =< s(14)

  with precondition: [V_n>=1] 

* Chain [16]...: 1*s(17)+1
  with precondition: [0>=V_n] 

* Chain [15]...: 1*s(18)+1*s(19)+1
  Such that:s(18) =< V_n

  with precondition: [V_n>=1] 


Closed-form bounds of eval_ReadBytes_start(V_n,B): 
-------------------------------------
* Chain [18] with precondition: [0>=V_n] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17] with precondition: [V_n>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16]... with precondition: [0>=V_n] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [V_n>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_ReadBytes_start(V_n,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 19 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 15 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 18 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 92 ms.

