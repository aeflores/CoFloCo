Warning: Ignored call to eval_main1_stop/1 in equation loop_cont_eval_main1_bb1_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_main1_2/4,eval_main1_3/4,eval_main1_7/7,eval_main1_8/7,eval_main1_bb1_in/3]
1. non_recursive  : [loop_cont_eval_main1_bb1_in/2]
2. non_recursive  : [eval_main1_bb0_in/2]
3. non_recursive  : [eval_main1_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_main1_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_main1_bb0_in/2
3. SCC is partially evaluated into eval_main1_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main1_bb1_in/3 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 


#### Refined cost equations eval_main1_bb1_in/3 
* CE 8: eval_main1_bb1_in(V_errors_0,V__0,B) = 0
     [V_errors_0>=1,1>=V__0,B=2] 
* CE 9: eval_main1_bb1_in(V_errors_0,V__0,B) = 0
     [1>=V__0,0>=V_errors_0+1,B=2] 
* CE 10: eval_main1_bb1_in(V_errors_0,V__0,B) = 0
     [1>=V__0,B=2,V_errors_0=0] 
* CE 11: eval_main1_bb1_in(V_errors_0,V__0,B) = 1+ eval_main1_bb1_in(C,D,E)
     [V__0>=2,V__0=D+1,E=2,B=2] 

### Cost equations --> "Loop" of eval_main1_bb1_in/3 
* CEs [11] --> Loop 7 
* CEs [8] --> Loop 8 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_main1_bb1_in/3 
* Loop 7: eval_main1_bb1_in(V_errors_0,V__0,B)->  eval_main1_bb1_in(V_errors_0',V__0',B')
                  [V__0>=2,V__0=V__0'+1,B'=2,B=2] 
* Loop 8: eval_main1_bb1_in(V_errors_0,V__0,B) [V_errors_0>=1,1>=V__0,B=2] 
* Loop 9: eval_main1_bb1_in(V_errors_0,V__0,B) [1>=V__0,0>=V_errors_0+1,B=2] 
* Loop 10: eval_main1_bb1_in(V_errors_0,V__0,B) [1>=V__0,B=2,V_errors_0=0] 

### Ranking functions of CR eval_main1_bb1_in(V_errors_0,V__0,B) 
* RF of phase [7]: [V__0-1]

#### Partial ranking functions of CR eval_main1_bb1_in(V_errors_0,V__0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V__0-1


### Resulting Chains:eval_main1_bb1_in(V_errors_0,V__0,B) 
* [[7],10]
* [[7],9]
* [[7],8]
* [10]


### Merging Chains  eval_main1_bb1_in/3 into  External patterns of execution 
* [[10]] --> 1 
* [[8,[7]],[9,[7]],[10,[7]]] --> 2 


### Specialization of cost equations eval_main1_bb0_in/2 
* CE 3 is refined into CE [12,13] 


#### Refined cost equations eval_main1_bb0_in/2 
* CE 12: eval_main1_bb0_in(V_argc,B) = 1+ eval_main1_bb1_in(C,V_argc,D):1
     [1>=V_argc,D=2,C=0] 
* CE 13: eval_main1_bb0_in(V_argc,B) = 1+ eval_main1_bb1_in(C,V_argc,D):2
     [V_argc>=2,D=2,C=0] 

### Cost equations --> "Loop" of eval_main1_bb0_in/2 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_main1_bb0_in/2 
* Loop 11: eval_main1_bb0_in(V_argc,B) [V_argc>=2] 
* Loop 12: eval_main1_bb0_in(V_argc,B) [1>=V_argc] 

### Ranking functions of CR eval_main1_bb0_in(V_argc,B) 

#### Partial ranking functions of CR eval_main1_bb0_in(V_argc,B) 


### Resulting Chains:eval_main1_bb0_in(V_argc,B) 
* [12]
* [11]


### Merging Chains  eval_main1_bb0_in/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_main1_start/3 
* CE 2 is refined into CE [14,15] 


#### Refined cost equations eval_main1_start/3 
* CE 14: eval_main1_start(V_argc,V_print,B) = 0+ eval_main1_bb0_in(V_argc,B):1
     [1>=V_argc] 
* CE 15: eval_main1_start(V_argc,V_print,B) = 0+ eval_main1_bb0_in(V_argc,B):2
     [V_argc>=2] 

### Cost equations --> "Loop" of eval_main1_start/3 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_main1_start/3 
* Loop 13: eval_main1_start(V_argc,V_print,B) [V_argc>=2] 
* Loop 14: eval_main1_start(V_argc,V_print,B) [1>=V_argc] 

### Ranking functions of CR eval_main1_start(V_argc,V_print,B) 

#### Partial ranking functions of CR eval_main1_start(V_argc,V_print,B) 


### Resulting Chains:eval_main1_start(V_argc,V_print,B) 
* [14]
* [13]


### Merging Chains  eval_main1_start/3 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_main1_bb1_in(V_errors_0,V__0,B) -> [eval_main1_bb1_in(V_errors_0',V__0',B')] 
1
#### Cost of phase [7]:eval_main1_bb1_in(V_errors_0,V__0,B) -> [eval_main1_bb1_in(V_errors_0',V__0',B')] 
1*it(7)+0
  Such that:it(7) =< V__0
it(7) =< V__0-V__0'

#### Cost of phase [7]:eval_main1_bb1_in(V_errors_0,V__0,B) -> [eval_main1_bb1_in(V_errors_0',V__0',B')] 
1*it(7)+0
  Such that:it(7) =< V__0
it(7) =< V__0-V__0'

#### Cost of phase [7]:eval_main1_bb1_in(V_errors_0,V__0,B) -> [eval_main1_bb1_in(V_errors_0',V__0',B')] 
1*it(7)+0
  Such that:it(7) =< V__0
it(7) =< V__0-V__0'

#### Cost of chains of eval_main1_bb1_in(V_errors_0,V__0,B):
* Chain [[7],10]: 1*it(7)+0
  Such that:it(7) =< V__0

  with precondition: [B=2,V__0>=2] 

* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< V__0

  with precondition: [B=2,V__0>=2] 

* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V__0

  with precondition: [B=2,V__0>=2] 

* Chain [10]: 0
  with precondition: [V_errors_0=0,B=2,1>=V__0] 


#### Cost of chains of eval_main1_bb0_in(V_argc,B):
* Chain [12]: 1
  with precondition: [1>=V_argc] 

* Chain [11]: 3*s(5)+1
  Such that:s(4) =< V_argc
s(5) =< s(4)

  with precondition: [V_argc>=2] 


#### Cost of chains of eval_main1_start(V_argc,V_print,B):
* Chain [14]: 1
  with precondition: [1>=V_argc] 

* Chain [13]: 3*s(7)+1
  Such that:s(6) =< V_argc
s(7) =< s(6)

  with precondition: [V_argc>=2] 


Closed-form bounds of eval_main1_start(V_argc,V_print,B): 
-------------------------------------
* Chain [14] with precondition: [1>=V_argc] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [13] with precondition: [V_argc>=2] 
    - Upper bound: 3*V_argc+1 
    - Complexity: n 

### Maximum cost of eval_main1_start(V_argc,V_print,B): nat(V_argc)*3+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 27 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 39 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 38 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 169 ms.

