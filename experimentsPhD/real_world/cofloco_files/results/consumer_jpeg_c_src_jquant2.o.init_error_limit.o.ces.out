Warning: Ignored call to eval_init_error_limit_stop/1 in equation loop_cont_eval_init_error_limit_bb5_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_init_error_limit_bb1_in/3]
1. recursive  : [eval_init_error_limit_bb3_in/3]
2. recursive  : [eval_init_error_limit_bb5_in/2]
3. non_recursive  : [loop_cont_eval_init_error_limit_bb5_in/2]
4. non_recursive  : [loop_cont_eval_init_error_limit_bb3_in/3]
5. non_recursive  : [loop_cont_eval_init_error_limit_bb1_in/3]
6. non_recursive  : [eval_init_error_limit_1/1]
7. non_recursive  : [eval_init_error_limit_0/1]
8. non_recursive  : [eval_init_error_limit_bb0_in/1]
9. non_recursive  : [eval_init_error_limit_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_init_error_limit_bb1_in/3
1. SCC is partially evaluated into eval_init_error_limit_bb3_in/3
2. SCC is partially evaluated into eval_init_error_limit_bb5_in/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_init_error_limit_bb3_in/3
5. SCC is partially evaluated into loop_cont_eval_init_error_limit_bb1_in/3
6. SCC is partially evaluated into eval_init_error_limit_1/1
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_init_error_limit_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_init_error_limit_bb1_in/3 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


#### Refined cost equations eval_init_error_limit_bb1_in/3 
* CE 12: eval_init_error_limit_bb1_in(A,B,A) = 0
     [A>=16,B=4] 
* CE 13: eval_init_error_limit_bb1_in(V_in_0,B,C) = 1+ eval_init_error_limit_bb1_in(D,B,C)
     [V_in_0>=0,15>=V_in_0,V_in_0+1=D] 

### Cost equations --> "Loop" of eval_init_error_limit_bb1_in/3 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_init_error_limit_bb1_in/3 
* Loop 11: eval_init_error_limit_bb1_in(V_in_0,B,C)->  eval_init_error_limit_bb1_in(V_in_0',B,C)
                  [V_in_0>=0,15>=V_in_0,V_in_0+1=V_in_0'] 
* Loop 12: eval_init_error_limit_bb1_in(A,B,A) [A>=16,B=4] 

### Ranking functions of CR eval_init_error_limit_bb1_in(V_in_0,B,C) 
* RF of phase [11]: [-V_in_0+16]

#### Partial ranking functions of CR eval_init_error_limit_bb1_in(V_in_0,B,C) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V_in_0+16


### Resulting Chains:eval_init_error_limit_bb1_in(V_in_0,B,C) 
* [[11],12]


### Merging Chains  eval_init_error_limit_bb1_in/3 into  External patterns of execution 
* [[12,[11]]] --> 1 


### Specialization of cost equations eval_init_error_limit_bb3_in/3 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations eval_init_error_limit_bb3_in/3 
* CE 14: eval_init_error_limit_bb3_in(A,B,A) = 0
     [A>=48,B=3] 
* CE 15: eval_init_error_limit_bb3_in(V_in_1,B,C) = 1+ eval_init_error_limit_bb3_in(D,B,C)
     [47>=V_in_1,V_in_1+1=D] 

### Cost equations --> "Loop" of eval_init_error_limit_bb3_in/3 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_init_error_limit_bb3_in/3 
* Loop 13: eval_init_error_limit_bb3_in(V_in_1,B,C)->  eval_init_error_limit_bb3_in(V_in_1',B,C)
                  [47>=V_in_1,V_in_1+1=V_in_1'] 
* Loop 14: eval_init_error_limit_bb3_in(A,B,A) [A>=48,B=3] 

### Ranking functions of CR eval_init_error_limit_bb3_in(V_in_1,B,C) 
* RF of phase [13]: [-V_in_1+48]

#### Partial ranking functions of CR eval_init_error_limit_bb3_in(V_in_1,B,C) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    -V_in_1+48


### Resulting Chains:eval_init_error_limit_bb3_in(V_in_1,B,C) 
* [[13],14]
* [14]


### Merging Chains  eval_init_error_limit_bb3_in/3 into  External patterns of execution 
* [[14,[13]]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_init_error_limit_bb5_in/2 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 


#### Refined cost equations eval_init_error_limit_bb5_in/2 
* CE 16: eval_init_error_limit_bb5_in(V_in_2,B) = 0
     [V_in_2>=256,B=2] 
* CE 17: eval_init_error_limit_bb5_in(V_in_2,B) = 1+ eval_init_error_limit_bb5_in(C,D)
     [255>=V_in_2,V_in_2+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_init_error_limit_bb5_in/2 
* CEs [17] --> Loop 15 
* CEs [16] --> Loop 16 

#### Loops of eval_init_error_limit_bb5_in/2 
* Loop 15: eval_init_error_limit_bb5_in(V_in_2,B)->  eval_init_error_limit_bb5_in(V_in_2',B')
                  [255>=V_in_2,V_in_2+1=V_in_2',B'=2,B=2] 
* Loop 16: eval_init_error_limit_bb5_in(V_in_2,B) [V_in_2>=256,B=2] 

### Ranking functions of CR eval_init_error_limit_bb5_in(V_in_2,B) 
* RF of phase [15]: [-V_in_2+256]

#### Partial ranking functions of CR eval_init_error_limit_bb5_in(V_in_2,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -V_in_2+256


### Resulting Chains:eval_init_error_limit_bb5_in(V_in_2,B) 
* [[15],16]
* [16]


### Merging Chains  eval_init_error_limit_bb5_in/2 into  External patterns of execution 
* [[16,[15]]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations loop_cont_eval_init_error_limit_bb3_in/3 
* CE 9 is refined into CE [18,19] 


#### Refined cost equations loop_cont_eval_init_error_limit_bb3_in/3 
* CE 18: loop_cont_eval_init_error_limit_bb3_in(E,A,B) = 1+ eval_init_error_limit_bb5_in(A,F):1
     [255>=A,F=2,E=3] 
* CE 19: loop_cont_eval_init_error_limit_bb3_in(E,A,B) = 1+ eval_init_error_limit_bb5_in(A,F):2
     [A>=256,F=2,E=3] 

### Cost equations --> "Loop" of loop_cont_eval_init_error_limit_bb3_in/3 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 

#### Loops of loop_cont_eval_init_error_limit_bb3_in/3 
* Loop 17: loop_cont_eval_init_error_limit_bb3_in(E,A,B) [A>=256,E=3] 
* Loop 18: loop_cont_eval_init_error_limit_bb3_in(E,A,B) [255>=A,E=3] 

### Ranking functions of CR loop_cont_eval_init_error_limit_bb3_in(E,A,B) 

#### Partial ranking functions of CR loop_cont_eval_init_error_limit_bb3_in(E,A,B) 


### Resulting Chains:loop_cont_eval_init_error_limit_bb3_in(E,A,B) 
* [18]
* [17]


### Merging Chains  loop_cont_eval_init_error_limit_bb3_in/3 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations loop_cont_eval_init_error_limit_bb1_in/3 
* CE 6 is refined into CE [20,21,22] 


#### Refined cost equations loop_cont_eval_init_error_limit_bb1_in/3 
* CE 20: loop_cont_eval_init_error_limit_bb1_in(F,A,B) = 1+ eval_init_error_limit_bb3_in(A,G,H):1+ loop_cont_eval_init_error_limit_bb3_in(I,J,B):1
     [47>=A,J=48,I=3,H=48,G=3,F=4] 
* CE 21: loop_cont_eval_init_error_limit_bb1_in(F,A,B) = 1+ eval_init_error_limit_bb3_in(A,G,A):2+ loop_cont_eval_init_error_limit_bb3_in(H,A,B):1
     [A>=48,255>=A,H=3,G=3,F=4] 
* CE 22: loop_cont_eval_init_error_limit_bb1_in(F,A,B) = 1+ eval_init_error_limit_bb3_in(A,G,A):2+ loop_cont_eval_init_error_limit_bb3_in(H,A,B):2
     [A>=256,H=3,G=3,F=4] 

### Cost equations --> "Loop" of loop_cont_eval_init_error_limit_bb1_in/3 
* CEs [22] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 

#### Loops of loop_cont_eval_init_error_limit_bb1_in/3 
* Loop 19: loop_cont_eval_init_error_limit_bb1_in(F,A,B) [A>=256,F=4] 
* Loop 20: loop_cont_eval_init_error_limit_bb1_in(F,A,B) [47>=A,F=4] 
* Loop 21: loop_cont_eval_init_error_limit_bb1_in(F,A,B) [A>=48,255>=A,F=4] 

### Ranking functions of CR loop_cont_eval_init_error_limit_bb1_in(F,A,B) 

#### Partial ranking functions of CR loop_cont_eval_init_error_limit_bb1_in(F,A,B) 


### Resulting Chains:loop_cont_eval_init_error_limit_bb1_in(F,A,B) 
* [21]
* [20]
* [19]


### Merging Chains  loop_cont_eval_init_error_limit_bb1_in/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 
* [[19]] --> 3 


### Specialization of cost equations eval_init_error_limit_1/1 
* CE 3 is refined into CE [23] 


#### Refined cost equations eval_init_error_limit_1/1 
* CE 23: eval_init_error_limit_1(B) = 1+ eval_init_error_limit_bb1_in(C,D,E):1+ loop_cont_eval_init_error_limit_bb1_in(F,G,B):2
     [G=16,F=4,E=16,D=4,C=0] 

### Cost equations --> "Loop" of eval_init_error_limit_1/1 
* CEs [23] --> Loop 22 

#### Loops of eval_init_error_limit_1/1 
* Loop 22: eval_init_error_limit_1(B) [] 

### Ranking functions of CR eval_init_error_limit_1(B) 

#### Partial ranking functions of CR eval_init_error_limit_1(B) 


### Resulting Chains:eval_init_error_limit_1(B) 
* [22]


### Merging Chains  eval_init_error_limit_1/1 into  External patterns of execution 
* [[22]] --> 1 


### Specialization of cost equations eval_init_error_limit_start/1 
* CE 2 is refined into CE [24] 


#### Refined cost equations eval_init_error_limit_start/1 
* CE 24: eval_init_error_limit_start(B) = 0+ eval_init_error_limit_1(B):1
     [] 

### Cost equations --> "Loop" of eval_init_error_limit_start/1 
* CEs [24] --> Loop 23 

#### Loops of eval_init_error_limit_start/1 
* Loop 23: eval_init_error_limit_start(B) [] 

### Ranking functions of CR eval_init_error_limit_start(B) 

#### Partial ranking functions of CR eval_init_error_limit_start(B) 


### Resulting Chains:eval_init_error_limit_start(B) 
* [23]


### Merging Chains  eval_init_error_limit_start/1 into  External patterns of execution 
* [[23]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_init_error_limit_bb1_in(V_in_0,B,C) -> [eval_init_error_limit_bb1_in(V_in_0',B',C')] 
1
#### Cost of phase [11]:eval_init_error_limit_bb1_in(V_in_0,B,C) -> [eval_init_error_limit_bb1_in(V_in_0',B',C')] 
1*it(11)+0
  Such that:it(11) =< -V_in_0+16
it(11) =< -V_in_0+V_in_0'

#### Cost of chains of eval_init_error_limit_bb1_in(V_in_0,B,C):
* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< -V_in_0+16

  with precondition: [B=4,C=16,15>=V_in_0,V_in_0>=0] 


#### Cost of loops [13] 

 * loop 13:eval_init_error_limit_bb3_in(V_in_1,B,C) -> [eval_init_error_limit_bb3_in(V_in_1',B',C')] 
1
#### Cost of phase [13]:eval_init_error_limit_bb3_in(V_in_1,B,C) -> [eval_init_error_limit_bb3_in(V_in_1',B',C')] 
1*it(13)+0
  Such that:it(13) =< -V_in_1+48
it(13) =< -V_in_1+V_in_1'

#### Cost of chains of eval_init_error_limit_bb3_in(V_in_1,B,C):
* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< -V_in_1+48

  with precondition: [B=3,C=48,47>=V_in_1] 

* Chain [14]: 0
  with precondition: [B=3,V_in_1=C,V_in_1>=48] 


#### Cost of loops [15] 

 * loop 15:eval_init_error_limit_bb5_in(V_in_2,B) -> [eval_init_error_limit_bb5_in(V_in_2',B')] 
1
#### Cost of phase [15]:eval_init_error_limit_bb5_in(V_in_2,B) -> [eval_init_error_limit_bb5_in(V_in_2',B')] 
1*it(15)+0
  Such that:it(15) =< -V_in_2+256
it(15) =< -V_in_2+V_in_2'

#### Cost of chains of eval_init_error_limit_bb5_in(V_in_2,B):
* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -V_in_2+256

  with precondition: [B=2,255>=V_in_2] 

* Chain [16]: 0
  with precondition: [B=2,V_in_2>=256] 


#### Cost of chains of loop_cont_eval_init_error_limit_bb3_in(E,A,B):
* Chain [18]: 1*s(1)+1
  Such that:s(1) =< -A+256

  with precondition: [E=3,255>=A] 

* Chain [17]: 1
  with precondition: [E=3,A>=256] 


#### Cost of chains of loop_cont_eval_init_error_limit_bb1_in(F,A,B):
* Chain [21]: 1*s(2)+2
  Such that:s(2) =< -A+256

  with precondition: [F=4,255>=A,A>=48] 

* Chain [20]: 1*s(3)+1*s(4)+2
  Such that:s(4) =< 208
s(3) =< -A+48

  with precondition: [F=4,47>=A] 

* Chain [19]: 2
  with precondition: [F=4,A>=256] 


#### Cost of chains of eval_init_error_limit_1(B):
* Chain [22]: 1*s(5)+1*s(6)+1*s(7)+3
  Such that:s(5) =< 16
s(7) =< 32
s(6) =< 208

  with precondition: [] 


#### Cost of chains of eval_init_error_limit_start(B):
* Chain [23]: 1*s(8)+1*s(9)+1*s(10)+3
  Such that:s(8) =< 16
s(9) =< 32
s(10) =< 208

  with precondition: [] 


Closed-form bounds of eval_init_error_limit_start(B): 
-------------------------------------
* Chain [23] with precondition: [] 
    - Upper bound: 259 
    - Complexity: constant 

### Maximum cost of eval_init_error_limit_start(B): 259 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 27 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 19 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 84 ms.

