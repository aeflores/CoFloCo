Warning: Ignored call to eval_dict_put_stop/1 in equation eval_dict_put_bb32_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_dict_put_11/4,eval_dict_put_12/4,eval_dict_put_25/4,eval_dict_put_26/4,eval_dict_put_50/4,eval_dict_put_51/4,eval_dict_put_7/3,eval_dict_put_8/4,eval_dict_put_bb15_in/4,eval_dict_put_bb2_in/3,eval_dict_put_bb9_in/4]
1. non_recursive  : [eval_dict_put_bb32_in/1]
2. non_recursive  : [eval_dict_put_104/1]
3. non_recursive  : [eval_dict_put_103/2]
4. non_recursive  : [eval_dict_put_bb31_in/2]
5. non_recursive  : [eval_dict_put_102/2]
6. non_recursive  : [eval_dict_put_101/2]
7. non_recursive  : [eval_dict_put_bb29_in/2]
8. non_recursive  : [eval_dict_put_bb28_in/2]
9. non_recursive  : [eval_dict_put_91/2]
10. non_recursive  : [eval_dict_put_90/2]
11. non_recursive  : [eval_dict_put_bb26_in/2]
12. non_recursive  : [eval_dict_put_89/2]
13. non_recursive  : [eval_dict_put_88/2]
14. non_recursive  : [eval_dict_put_bb22_in/2]
15. non_recursive  : [eval_dict_put_81/2]
16. non_recursive  : [eval_dict_put_80/2]
17. non_recursive  : [eval_dict_put_bb20_in/2]
18. non_recursive  : [eval_dict_put_bb14_in/2]
19. non_recursive  : [eval_dict_put_43/2]
20. non_recursive  : [eval_dict_put_42/2]
21. non_recursive  : [eval_dict_put_68/2]
22. non_recursive  : [eval_dict_put_67/2]
23. non_recursive  : [eval_dict_put_bb19_in/2]
24. non_recursive  : [eval_dict_put_66/2]
25. non_recursive  : [eval_dict_put_65/2]
26. non_recursive  : [eval_dict_put_NewDefault_in/1]
27. non_recursive  : [loop_cont_eval_dict_put_bb2_in/3]
28. non_recursive  : [eval_dict_put_bb0_in/2]
29. non_recursive  : [eval_dict_put_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_dict_put_bb2_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_dict_put_bb29_in/2
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_dict_put_91/2
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_dict_put_89/2
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_dict_put_bb22_in/2
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_dict_put_bb20_in/2
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into loop_cont_eval_dict_put_bb2_in/3
28. SCC is partially evaluated into eval_dict_put_bb0_in/2
29. SCC is partially evaluated into eval_dict_put_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_dict_put_bb2_in/3 
* CE 5 is refined into CE [28] 
* CE 6 is refined into CE [29] 
* CE 8 is refined into CE [30] 
* CE 9 is refined into CE [31] 
* CE 11 is refined into CE [32] 
* CE 12 is refined into CE [33] 
* CE 7 is refined into CE [34] 
* CE 10 is refined into CE [35] 


#### Refined cost equations eval_dict_put_bb2_in/3 
* CE 28: eval_dict_put_bb2_in(A,B,A) = 0
     [B=8] 
* CE 29: eval_dict_put_bb2_in(A,B,A) = 0
     [B=7] 
* CE 30: eval_dict_put_bb2_in(A,B,A) = 0
     [B=6] 
* CE 31: eval_dict_put_bb2_in(A,B,A) = 0
     [B=5] 
* CE 32: eval_dict_put_bb2_in(A,B,A) = 0
     [B=4] 
* CE 33: eval_dict_put_bb2_in(V__dict_auto_expand,B,C) = 0
     [B=3] 
* CE 34: eval_dict_put_bb2_in(V__dict_auto_expand,B,C) = 0
     [B=2] 
* CE 35: eval_dict_put_bb2_in(V__dict_auto_expand,B,C) = 1+ eval_dict_put_bb2_in(V__dict_auto_expand,B,C)
     [] 

### Cost equations --> "Loop" of eval_dict_put_bb2_in/3 
* CEs [35] --> Loop 23 
* CEs [28] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [31] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [33] --> Loop 29 
* CEs [34] --> Loop 30 

#### Loops of eval_dict_put_bb2_in/3 
* Loop 23: eval_dict_put_bb2_in(V__dict_auto_expand,B,C)->  eval_dict_put_bb2_in(V__dict_auto_expand,B,C)
                  [] 
* Loop 24: eval_dict_put_bb2_in(A,B,A) [B=8] 
* Loop 25: eval_dict_put_bb2_in(A,B,A) [B=7] 
* Loop 26: eval_dict_put_bb2_in(A,B,A) [B=6] 
* Loop 27: eval_dict_put_bb2_in(A,B,A) [B=5] 
* Loop 28: eval_dict_put_bb2_in(A,B,A) [B=4] 
* Loop 29: eval_dict_put_bb2_in(V__dict_auto_expand,B,C) [B=3] 
* Loop 30: eval_dict_put_bb2_in(V__dict_auto_expand,B,C) [B=2] 

### Ranking functions of CR eval_dict_put_bb2_in(V__dict_auto_expand,B,C) 

#### Partial ranking functions of CR eval_dict_put_bb2_in(V__dict_auto_expand,B,C) 


### Resulting Chains:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) 
* [[23]]...
* [[23],30]
* [[23],29]
* [[23],28]
* [[23],27]
* [[23],26]
* [[23],25]
* [[23],24]
* [30]
* [29]
* [28]
* [27]
* [26]
* [25]
* [24]


### Merging Chains  eval_dict_put_bb2_in/3 into  External patterns of execution 
* [[30],[30,[23]]] --> 1 
* [[29],[29,[23]]] --> 2 
* [[28],[28,[23]]] --> 3 
* [[27],[27,[23]]] --> 4 
* [[26],[26,[23]]] --> 5 
* [[25],[25,[23]]] --> 6 
* [[24],[24,[23]]] --> 7 
* [[[23]]] --> 8 


### Specialization of cost equations eval_dict_put_bb29_in/2 
* CE 20 is refined into CE [36] 


#### Refined cost equations eval_dict_put_bb29_in/2 
* CE 36: eval_dict_put_bb29_in(V__dict_auto_expand,B) = 0
     [] 

### Cost equations --> "Loop" of eval_dict_put_bb29_in/2 
* CEs [36] --> Loop 31 

#### Loops of eval_dict_put_bb29_in/2 
* Loop 31: eval_dict_put_bb29_in(V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_dict_put_bb29_in(V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_dict_put_bb29_in(V__dict_auto_expand,B) 


### Resulting Chains:eval_dict_put_bb29_in(V__dict_auto_expand,B) 
* [31]


### Merging Chains  eval_dict_put_bb29_in/2 into  External patterns of execution 
* [[31]] --> 1 


### Specialization of cost equations eval_dict_put_91/2 
* CE 25 is refined into CE [37] 


#### Refined cost equations eval_dict_put_91/2 
* CE 37: eval_dict_put_91(V__dict_auto_expand,B) = 0+ eval_dict_put_bb29_in(C,B):1
     [] 

### Cost equations --> "Loop" of eval_dict_put_91/2 
* CEs [37] --> Loop 32 

#### Loops of eval_dict_put_91/2 
* Loop 32: eval_dict_put_91(V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_dict_put_91(V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_dict_put_91(V__dict_auto_expand,B) 


### Resulting Chains:eval_dict_put_91(V__dict_auto_expand,B) 
* [32]


### Merging Chains  eval_dict_put_91/2 into  External patterns of execution 
* [[32]] --> 1 


### Specialization of cost equations eval_dict_put_89/2 
* CE 26 is refined into CE [38] 
* CE 27 is refined into CE [39] 


#### Refined cost equations eval_dict_put_89/2 
* CE 38: eval_dict_put_89(V__dict_auto_expand,B) = 0+ eval_dict_put_91(V__dict_auto_expand,B):1
     [] 
* CE 39: eval_dict_put_89(V__dict_auto_expand,B) = 0+ eval_dict_put_bb29_in(C,B):1
     [] 

### Cost equations --> "Loop" of eval_dict_put_89/2 
* CEs [38,39] --> Loop 33 

#### Loops of eval_dict_put_89/2 
* Loop 33: eval_dict_put_89(V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_dict_put_89(V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_dict_put_89(V__dict_auto_expand,B) 


### Resulting Chains:eval_dict_put_89(V__dict_auto_expand,B) 
* [33]


### Merging Chains  eval_dict_put_89/2 into  External patterns of execution 
* [[33]] --> 1 


### Specialization of cost equations eval_dict_put_bb22_in/2 
* CE 22 is refined into CE [40] 
* CE 23 is refined into CE [41] 
* CE 24 is refined into CE [42] 


#### Refined cost equations eval_dict_put_bb22_in/2 
* CE 40: eval_dict_put_bb22_in(V__dict_auto_expand,B) = 0+ eval_dict_put_91(C,B):1
     [] 
* CE 41: eval_dict_put_bb22_in(V__dict_auto_expand,B) = 0+ eval_dict_put_89(C,B):1
     [] 
* CE 42: eval_dict_put_bb22_in(V__dict_auto_expand,B) = 0+ eval_dict_put_bb29_in(C,B):1
     [] 

### Cost equations --> "Loop" of eval_dict_put_bb22_in/2 
* CEs [40,41,42] --> Loop 34 

#### Loops of eval_dict_put_bb22_in/2 
* Loop 34: eval_dict_put_bb22_in(V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_dict_put_bb22_in(V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_dict_put_bb22_in(V__dict_auto_expand,B) 


### Resulting Chains:eval_dict_put_bb22_in(V__dict_auto_expand,B) 
* [34]


### Merging Chains  eval_dict_put_bb22_in/2 into  External patterns of execution 
* [[34]] --> 1 


### Specialization of cost equations eval_dict_put_bb20_in/2 
* CE 21 is refined into CE [43] 


#### Refined cost equations eval_dict_put_bb20_in/2 
* CE 43: eval_dict_put_bb20_in(V__dict_auto_expand,B) = 0+ eval_dict_put_bb22_in(V__dict_auto_expand,B):1
     [] 

### Cost equations --> "Loop" of eval_dict_put_bb20_in/2 
* CEs [43] --> Loop 35 

#### Loops of eval_dict_put_bb20_in/2 
* Loop 35: eval_dict_put_bb20_in(V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_dict_put_bb20_in(V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_dict_put_bb20_in(V__dict_auto_expand,B) 


### Resulting Chains:eval_dict_put_bb20_in(V__dict_auto_expand,B) 
* [35]


### Merging Chains  eval_dict_put_bb20_in/2 into  External patterns of execution 
* [[35]] --> 1 


### Specialization of cost equations loop_cont_eval_dict_put_bb2_in/3 
* CE 19 is refined into CE [44] 
* CE 18 is refined into CE [45] 
* CE 17 is refined into CE [46] 
* CE 16 is refined into CE [47] 
* CE 15 is refined into CE [48] 
* CE 14 is refined into CE [49] 
* CE 13 is refined into CE [50] 


#### Refined cost equations loop_cont_eval_dict_put_bb2_in/3 
* CE 44: loop_cont_eval_dict_put_bb2_in(C,A,B) = 0+ eval_dict_put_bb20_in(D,B):1
     [C=8] 
* CE 45: loop_cont_eval_dict_put_bb2_in(C,A,B) = 0+ eval_dict_put_bb20_in(D,B):1
     [C=7] 
* CE 46: loop_cont_eval_dict_put_bb2_in(C,A,B) = 0+ eval_dict_put_bb20_in(D,B):1
     [C=6] 
* CE 47: loop_cont_eval_dict_put_bb2_in(C,A,B) = 0+ eval_dict_put_bb20_in(D,B):1
     [C=5] 
* CE 48: loop_cont_eval_dict_put_bb2_in(C,A,B) = 0+ eval_dict_put_bb29_in(A,B):1
     [C=4] 
* CE 49: loop_cont_eval_dict_put_bb2_in(C,A,B) = 0
     [C=3] 
* CE 50: loop_cont_eval_dict_put_bb2_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_dict_put_bb2_in/3 
* CEs [44] --> Loop 36 
* CEs [45] --> Loop 37 
* CEs [46] --> Loop 38 
* CEs [47] --> Loop 39 
* CEs [48] --> Loop 40 
* CEs [49] --> Loop 41 
* CEs [50] --> Loop 42 

#### Loops of loop_cont_eval_dict_put_bb2_in/3 
* Loop 36: loop_cont_eval_dict_put_bb2_in(C,A,B) [C=8] 
* Loop 37: loop_cont_eval_dict_put_bb2_in(C,A,B) [C=7] 
* Loop 38: loop_cont_eval_dict_put_bb2_in(C,A,B) [C=6] 
* Loop 39: loop_cont_eval_dict_put_bb2_in(C,A,B) [C=5] 
* Loop 40: loop_cont_eval_dict_put_bb2_in(C,A,B) [C=4] 
* Loop 41: loop_cont_eval_dict_put_bb2_in(C,A,B) [C=3] 
* Loop 42: loop_cont_eval_dict_put_bb2_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_dict_put_bb2_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_dict_put_bb2_in(C,A,B) 


### Resulting Chains:loop_cont_eval_dict_put_bb2_in(C,A,B) 
* [42]
* [41]
* [40]
* [39]
* [38]
* [37]
* [36]


### Merging Chains  loop_cont_eval_dict_put_bb2_in/3 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 
* [[40]] --> 3 
* [[39]] --> 4 
* [[38]] --> 5 
* [[37]] --> 6 
* [[36]] --> 7 


### Specialization of cost equations eval_dict_put_bb0_in/2 
* CE 3 is refined into CE [51] 
* CE 4 is refined into CE [52,53,54,55,56,57,58,59] 


#### Refined cost equations eval_dict_put_bb0_in/2 
* CE 51: eval_dict_put_bb0_in(V__dict_auto_expand,B) = 0
     [] 
* CE 52: eval_dict_put_bb0_in(V__dict_auto_expand,B) = 1+ eval_dict_put_bb2_in(V__dict_auto_expand,C,D):1+ loop_cont_eval_dict_put_bb2_in(E,D,B):1
     [E=2,C=2] 
* CE 53: eval_dict_put_bb0_in(V__dict_auto_expand,B) = 1+ eval_dict_put_bb2_in(V__dict_auto_expand,C,D):2+ loop_cont_eval_dict_put_bb2_in(E,D,B):2
     [E=3,C=3] 
* CE 54: eval_dict_put_bb0_in(V__dict_auto_expand,B) = 1+ eval_dict_put_bb2_in(V__dict_auto_expand,C,V__dict_auto_expand):3+ loop_cont_eval_dict_put_bb2_in(D,V__dict_auto_expand,B):3
     [D=4,C=4] 
* CE 55: eval_dict_put_bb0_in(V__dict_auto_expand,B) = 1+ eval_dict_put_bb2_in(V__dict_auto_expand,C,V__dict_auto_expand):4+ loop_cont_eval_dict_put_bb2_in(D,V__dict_auto_expand,B):4
     [D=5,C=5] 
* CE 56: eval_dict_put_bb0_in(V__dict_auto_expand,B) = 1+ eval_dict_put_bb2_in(V__dict_auto_expand,C,V__dict_auto_expand):5+ loop_cont_eval_dict_put_bb2_in(D,V__dict_auto_expand,B):5
     [D=6,C=6] 
* CE 57: eval_dict_put_bb0_in(V__dict_auto_expand,B) = 1+ eval_dict_put_bb2_in(V__dict_auto_expand,C,V__dict_auto_expand):6+ loop_cont_eval_dict_put_bb2_in(D,V__dict_auto_expand,B):6
     [D=7,C=7] 
* CE 58: eval_dict_put_bb0_in(V__dict_auto_expand,B) = 1+ eval_dict_put_bb2_in(V__dict_auto_expand,C,V__dict_auto_expand):7+ loop_cont_eval_dict_put_bb2_in(D,V__dict_auto_expand,B):7
     [D=8,C=8] 
* CE 59: eval_dict_put_bb0_in(V__dict_auto_expand,B) = 1+ eval_dict_put_bb2_in(V__dict_auto_expand,C,D):8
     [] 

### Cost equations --> "Loop" of eval_dict_put_bb0_in/2 
* CEs [59] --> Loop 43 
* CEs [51,52,53,54,55,56,57,58] --> Loop 44 

#### Loops of eval_dict_put_bb0_in/2 
* Loop 43: eval_dict_put_bb0_in(V__dict_auto_expand,B) [] 
* Loop 44: eval_dict_put_bb0_in(V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_dict_put_bb0_in(V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_dict_put_bb0_in(V__dict_auto_expand,B) 


### Resulting Chains:eval_dict_put_bb0_in(V__dict_auto_expand,B) 
* [44]
* [43]...


### Merging Chains  eval_dict_put_bb0_in/2 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations eval_dict_put_start/2 
* CE 2 is refined into CE [60,61] 


#### Refined cost equations eval_dict_put_start/2 
* CE 60: eval_dict_put_start(V__dict_auto_expand,B) = 0+ eval_dict_put_bb0_in(V__dict_auto_expand,B):1
     [] 
* CE 61: eval_dict_put_start(V__dict_auto_expand,B) = 0+ eval_dict_put_bb0_in(V__dict_auto_expand,B):2
     [] 

### Cost equations --> "Loop" of eval_dict_put_start/2 
* CEs [61] --> Loop 45 
* CEs [60] --> Loop 46 

#### Loops of eval_dict_put_start/2 
* Loop 45: eval_dict_put_start(V__dict_auto_expand,B) [] 
* Loop 46: eval_dict_put_start(V__dict_auto_expand,B) [] 

### Ranking functions of CR eval_dict_put_start(V__dict_auto_expand,B) 

#### Partial ranking functions of CR eval_dict_put_start(V__dict_auto_expand,B) 


### Resulting Chains:eval_dict_put_start(V__dict_auto_expand,B) 
* [46]
* [45]...


### Merging Chains  eval_dict_put_start/2 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [23] 

 * loop 23:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) -> [eval_dict_put_bb2_in(V__dict_auto_expand',B',C')] 
1
#### Cost of phase [23]:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) -> [eval_dict_put_bb2_in(V__dict_auto_expand',B',C')] 
1*it(23)+0
#### Cost of phase [23]:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) -> [eval_dict_put_bb2_in(V__dict_auto_expand',B',C')] 
1*it(23)+0
#### Cost of phase [23]:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) -> [eval_dict_put_bb2_in(V__dict_auto_expand',B',C')] 
1*it(23)+0
#### Cost of phase [23]:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) -> [eval_dict_put_bb2_in(V__dict_auto_expand',B',C')] 
1*it(23)+0
#### Cost of phase [23]:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) -> [eval_dict_put_bb2_in(V__dict_auto_expand',B',C')] 
1*it(23)+0
#### Cost of phase [23]:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) -> [eval_dict_put_bb2_in(V__dict_auto_expand',B',C')] 
1*it(23)+0
#### Cost of phase [23]:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) -> [eval_dict_put_bb2_in(V__dict_auto_expand',B',C')] 
1*it(23)+0
#### Cost of phase [23]:eval_dict_put_bb2_in(V__dict_auto_expand,B,C) -> [eval_dict_put_bb2_in(V__dict_auto_expand',B',C')] 
1*it(23)+0
#### Cost of chains of eval_dict_put_bb2_in(V__dict_auto_expand,B,C):
* Chain [[23]]...: 1*it(23)+0
  with precondition: [] 

* Chain [[23],30]: 1*it(23)+0
  with precondition: [B=2] 

* Chain [[23],29]: 1*it(23)+0
  with precondition: [B=3] 

* Chain [[23],28]: 1*it(23)+0
  with precondition: [B=4,V__dict_auto_expand=C] 

* Chain [[23],27]: 1*it(23)+0
  with precondition: [B=5,V__dict_auto_expand=C] 

* Chain [[23],26]: 1*it(23)+0
  with precondition: [B=6,V__dict_auto_expand=C] 

* Chain [[23],25]: 1*it(23)+0
  with precondition: [B=7,V__dict_auto_expand=C] 

* Chain [[23],24]: 1*it(23)+0
  with precondition: [B=8,V__dict_auto_expand=C] 

* Chain [30]: 0
  with precondition: [B=2] 

* Chain [29]: 0
  with precondition: [B=3] 

* Chain [28]: 0
  with precondition: [B=4,C=V__dict_auto_expand] 

* Chain [27]: 0
  with precondition: [B=5,C=V__dict_auto_expand] 

* Chain [26]: 0
  with precondition: [B=6,C=V__dict_auto_expand] 

* Chain [25]: 0
  with precondition: [B=7,C=V__dict_auto_expand] 

* Chain [24]: 0
  with precondition: [B=8,C=V__dict_auto_expand] 


#### Cost of chains of eval_dict_put_bb29_in(V__dict_auto_expand,B):
* Chain [31]: 0
  with precondition: [] 


#### Cost of chains of eval_dict_put_91(V__dict_auto_expand,B):
* Chain [32]: 0
  with precondition: [] 


#### Cost of chains of eval_dict_put_89(V__dict_auto_expand,B):
* Chain [33]: 0
  with precondition: [] 


#### Cost of chains of eval_dict_put_bb22_in(V__dict_auto_expand,B):
* Chain [34]: 0
  with precondition: [] 


#### Cost of chains of eval_dict_put_bb20_in(V__dict_auto_expand,B):
* Chain [35]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_dict_put_bb2_in(C,A,B):
* Chain [42]: 0
  with precondition: [C=2] 

* Chain [41]: 0
  with precondition: [C=3] 

* Chain [40]: 0
  with precondition: [C=4] 

* Chain [39]: 0
  with precondition: [C=5] 

* Chain [38]: 0
  with precondition: [C=6] 

* Chain [37]: 0
  with precondition: [C=7] 

* Chain [36]: 0
  with precondition: [C=8] 


#### Cost of chains of eval_dict_put_bb0_in(V__dict_auto_expand,B):
* Chain [44]: 1*aux(8)+0
  with precondition: [] 

* Chain [43]...: 1*s(15)+1
  with precondition: [] 


#### Cost of chains of eval_dict_put_start(V__dict_auto_expand,B):
* Chain [46]: 1*s(16)+0
  with precondition: [] 

* Chain [45]...: 1*s(17)+1
  with precondition: [] 


Closed-form bounds of eval_dict_put_start(V__dict_auto_expand,B): 
-------------------------------------
* Chain [46] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_dict_put_start(V__dict_auto_expand,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 31 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 31 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 22 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 139 ms.

