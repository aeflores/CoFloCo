Warning: Ignored call to eval_rsa_public_encrypt_stop/1 in equation eval_rsa_public_encrypt_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_rsa_public_encrypt_bb1_in/8]
1. recursive  : [eval_rsa_public_encrypt_18/6,eval_rsa_public_encrypt_19/6,eval_rsa_public_encrypt_bb5_in/6]
2. non_recursive  : [eval_rsa_public_encrypt_bb9_in/1]
3. non_recursive  : [eval_rsa_public_encrypt_34/1]
4. non_recursive  : [eval_rsa_public_encrypt_33/2]
5. non_recursive  : [eval_rsa_public_encrypt_32/2]
6. non_recursive  : [eval_rsa_public_encrypt_31/2]
7. non_recursive  : [eval_rsa_public_encrypt_30/3]
8. non_recursive  : [eval_rsa_public_encrypt_26/2]
9. non_recursive  : [eval_rsa_public_encrypt_25/3]
10. non_recursive  : [loop_cont_eval_rsa_public_encrypt_bb5_in/4]
11. non_recursive  : [loop_cont_eval_rsa_public_encrypt_bb1_in/5]
12. non_recursive  : [eval_rsa_public_encrypt_1/3]
13. non_recursive  : [eval_rsa_public_encrypt_0/3]
14. non_recursive  : [eval_rsa_public_encrypt_bb0_in/3]
15. non_recursive  : [eval_rsa_public_encrypt_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_rsa_public_encrypt_bb1_in/8
1. SCC is partially evaluated into eval_rsa_public_encrypt_bb5_in/6
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into loop_cont_eval_rsa_public_encrypt_bb1_in/5
12. SCC is partially evaluated into eval_rsa_public_encrypt_1/3
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_rsa_public_encrypt_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_rsa_public_encrypt_bb1_in/8 
* CE 6 is refined into CE [14] 
* CE 5 is refined into CE [15] 
* CE 4 is refined into CE [16] 


#### Refined cost equations eval_rsa_public_encrypt_bb1_in/8 
* CE 14: eval_rsa_public_encrypt_bb1_in(A,B,C,D,E,A,F,G) = 0
     [0>=D,A+G+2=C,E=4] 
* CE 15: eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E) = 0
     [0>=V_i_0,B=3] 
* CE 16: eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,F,V_5,G,B,C,D,E)
     [V_i_0>=1,V_i_0=G+1] 

### Cost equations --> "Loop" of eval_rsa_public_encrypt_bb1_in/8 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_rsa_public_encrypt_bb1_in/8 
* Loop 13: eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E)->  eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision',V_5,V_i_0',B,C,D,E)
                  [V_i_0>=1,V_i_0=V_i_0'+1] 
* Loop 14: eval_rsa_public_encrypt_bb1_in(A,B,C,D,E,A,F,G) [0>=D,A+G+2=C,E=4] 
* Loop 15: eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E) [0>=V_i_0,B=3] 

### Ranking functions of CR eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E) 
* RF of phase [13]: [V_i_0]

#### Partial ranking functions of CR eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_i_0


### Resulting Chains:eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E) 
* [[13],15]
* [[13],14]
* [15]
* [14]


### Merging Chains  eval_rsa_public_encrypt_bb1_in/8 into  External patterns of execution 
* [[15]] --> 1 
* [[15,[13]]] --> 2 
* [[14]] --> 3 
* [[14,[13]]] --> 4 


### Specialization of cost equations eval_rsa_public_encrypt_bb5_in/6 
* CE 13 is refined into CE [17] 
* CE 11 is refined into CE [18] 
* CE 12 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 10 is refined into CE [21] 


#### Refined cost equations eval_rsa_public_encrypt_bb5_in/6 
* CE 17: eval_rsa_public_encrypt_bb5_in(A,B,C,D,E,A) = 0
     [D=2,C=0] 
* CE 18: eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) = 1+ eval_rsa_public_encrypt_bb5_in(V_bytes,E,F,G,C,D)
     [V_i_1>=1,V_i_1=F+1,G=2,B=2] 
* CE 19: eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) = 1+ eval_rsa_public_encrypt_bb5_in(V_bytes,E,F,G,C,D)
     [0>=V_i_1+1,V_i_1=F+1,G=2,B=2] 
* CE 20: eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) = 1+ eval_rsa_public_encrypt_bb5_in(V_bytes,E,V_i_1,F,C,D)
     [V_i_1>=1,F=2,B=2] 
* CE 21: eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) = 1+ eval_rsa_public_encrypt_bb5_in(V_bytes,E,V_i_1,F,C,D)
     [0>=V_i_1+1,F=2,B=2] 

### Cost equations --> "Loop" of eval_rsa_public_encrypt_bb5_in/6 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [17] --> Loop 20 

#### Loops of eval_rsa_public_encrypt_bb5_in/6 
* Loop 16: eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D)->  eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision',V_i_1',B',C,D)
                  [V_i_1>=1,V_i_1=V_i_1'+1,B'=2,B=2] 
* Loop 17: eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D)->  eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision',V_i_1',B',C,D)
                  [0>=V_i_1+1,V_i_1=V_i_1'+1,B'=2,B=2] 
* Loop 18: eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D)->  eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision',V_i_1,B',C,D)
                  [V_i_1>=1,B'=2,B=2] 
* Loop 19: eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D)->  eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision',V_i_1,B',C,D)
                  [0>=V_i_1+1,B'=2,B=2] 
* Loop 20: eval_rsa_public_encrypt_bb5_in(A,B,C,D,E,A) [D=2,C=0] 

### Ranking functions of CR eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) 

#### Partial ranking functions of CR eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) 
* Partial RF of phase [16,18]:
  - RF of loop [16:1]:
    V_i_1


### Resulting Chains:eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) 
* [[17,19]]...
* [[16,18]]...
* [[16,18],20]
* [20]


### Merging Chains  eval_rsa_public_encrypt_bb5_in/6 into  External patterns of execution 
* [[20]] --> 1 
* [[20,[16,18]]] --> 2 
* [[[17,19]]] --> 3 
* [[[16,18]]] --> 4 


### Specialization of cost equations loop_cont_eval_rsa_public_encrypt_bb1_in/5 
* CE 8 is refined into CE [22,23,24,25] 
* CE 7 is refined into CE [26] 


#### Refined cost equations loop_cont_eval_rsa_public_encrypt_bb1_in/5 
* CE 22: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) = 1+ eval_rsa_public_encrypt_bb5_in(A,B,G,H,I,A):1
     [H=2,G=0,C=0,F=4] 
* CE 23: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) = 1+ eval_rsa_public_encrypt_bb5_in(A,B,C,G,H,A):2
     [C>=1,G=2,F=4] 
* CE 24: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) = 1+ eval_rsa_public_encrypt_bb5_in(A,B,C,G,H,I):3
     [0>=C+1,G=2,F=4] 
* CE 25: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) = 1+ eval_rsa_public_encrypt_bb5_in(A,B,C,G,H,I):4
     [C>=1,G=2,F=4] 
* CE 26: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) = 0
     [F=3] 

### Cost equations --> "Loop" of loop_cont_eval_rsa_public_encrypt_bb1_in/5 
* CEs [23] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [24] --> Loop 25 

#### Loops of loop_cont_eval_rsa_public_encrypt_bb1_in/5 
* Loop 21: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) [C>=1,F=4] 
* Loop 22: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) [C=0,F=4] 
* Loop 23: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) [F=3] 
* Loop 24: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) [C>=1,F=4] 
* Loop 25: loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) [0>=C+1,F=4] 

### Ranking functions of CR loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) 


### Resulting Chains:loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D) 
* [25]...
* [24]...
* [23]
* [22]
* [21]


### Merging Chains  loop_cont_eval_rsa_public_encrypt_bb1_in/5 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 
* [[21]] --> 3 
* [[25]] --> 4 
* [[24]] --> 5 


### Specialization of cost equations eval_rsa_public_encrypt_1/3 
* CE 3 is refined into CE [27,28,29,30,31,32,33,34,35,36] 


#### Refined cost equations eval_rsa_public_encrypt_1/3 
* CE 27: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,F,G,H):1+ loop_cont_eval_rsa_public_encrypt_bb1_in(I,F,G,H,B):1
     [0>=D,I=3,E=3] 
* CE 28: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,F,G,H):2+ loop_cont_eval_rsa_public_encrypt_bb1_in(I,F,G,H,B):1
     [D>=1,I=3,E=3] 
* CE 29: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,V_bytes,F,G):3+ loop_cont_eval_rsa_public_encrypt_bb1_in(H,V_bytes,F,I,B):2
     [0>=D,V_bytes+2=C,I=0,H=4,G=0,E=4] 
* CE 30: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,V_bytes,F,G):3+ loop_cont_eval_rsa_public_encrypt_bb1_in(H,V_bytes,F,G,B):3
     [G>=1,0>=D,V_bytes+G+2=C,H=4,E=4] 
* CE 31: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,V_bytes,F,G):3+ loop_cont_eval_rsa_public_encrypt_bb1_in(H,V_bytes,F,G,B):4
     [0>=G+1,0>=D,V_bytes+G+2=C,H=4,E=4] 
* CE 32: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,V_bytes,F,G):3+ loop_cont_eval_rsa_public_encrypt_bb1_in(H,V_bytes,F,G,B):5
     [G>=1,0>=D,V_bytes+G+2=C,H=4,E=4] 
* CE 33: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,V_bytes,F,G):4+ loop_cont_eval_rsa_public_encrypt_bb1_in(H,V_bytes,F,I,B):2
     [D>=1,V_bytes+2=C,I=0,H=4,G=0,E=4] 
* CE 34: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,V_bytes,F,G):4+ loop_cont_eval_rsa_public_encrypt_bb1_in(H,V_bytes,F,G,B):3
     [G>=1,D>=1,V_bytes+G+2=C,H=4,E=4] 
* CE 35: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,V_bytes,F,G):4+ loop_cont_eval_rsa_public_encrypt_bb1_in(H,V_bytes,F,G,B):4
     [D>=1,0>=G+1,V_bytes+G+2=C,H=4,E=4] 
* CE 36: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) = 1+ eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,C,D,E,V_bytes,F,G):4+ loop_cont_eval_rsa_public_encrypt_bb1_in(H,V_bytes,F,G,B):5
     [G>=1,D>=1,V_bytes+G+2=C,H=4,E=4] 

### Cost equations --> "Loop" of eval_rsa_public_encrypt_1/3 
* CEs [31,32,35,36] --> Loop 26 
* CEs [27,28,29,30,33,34] --> Loop 27 

#### Loops of eval_rsa_public_encrypt_1/3 
* Loop 26: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) [] 
* Loop 27: eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) [] 

### Ranking functions of CR eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) 

#### Partial ranking functions of CR eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) 


### Resulting Chains:eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B) 
* [27]
* [26]...


### Merging Chains  eval_rsa_public_encrypt_1/3 into  External patterns of execution 
* [[27]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations eval_rsa_public_encrypt_start/3 
* CE 2 is refined into CE [37,38] 


#### Refined cost equations eval_rsa_public_encrypt_start/3 
* CE 37: eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B) = 0+ eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B):1
     [] 
* CE 38: eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B) = 0+ eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B):2
     [] 

### Cost equations --> "Loop" of eval_rsa_public_encrypt_start/3 
* CEs [38] --> Loop 28 
* CEs [37] --> Loop 29 

#### Loops of eval_rsa_public_encrypt_start/3 
* Loop 28: eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B) [] 
* Loop 29: eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B) [] 

### Ranking functions of CR eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B) 

#### Partial ranking functions of CR eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B) 


### Resulting Chains:eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B) 
* [29]
* [28]...


### Merging Chains  eval_rsa_public_encrypt_start/3 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E) -> [eval_rsa_public_encrypt_bb1_in(V_bytes',V__global_precision',V_5',V_i_0',B',C',D',E')] 
1
#### Cost of phase [13]:eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E) -> [eval_rsa_public_encrypt_bb1_in(V_bytes',V__global_precision',V_5',V_i_0',B',C',D',E')] 
1*it(13)+0
  Such that:it(13) =< V_i_0
it(13) =< V_i_0-V_i_0'

#### Cost of phase [13]:eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E) -> [eval_rsa_public_encrypt_bb1_in(V_bytes',V__global_precision',V_5',V_i_0',B',C',D',E')] 
1*it(13)+0
  Such that:it(13) =< V_i_0
it(13) =< V_i_0-V_i_0'

#### Cost of chains of eval_rsa_public_encrypt_bb1_in(V_bytes,V__global_precision,V_5,V_i_0,B,C,D,E):
* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< V_i_0

  with precondition: [B=3,V_i_0>=1] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V_i_0

  with precondition: [B=4,V_bytes=C,V_bytes+E+2=V_5,V_i_0>=1] 

* Chain [15]: 0
  with precondition: [B=3,0>=V_i_0] 

* Chain [14]: 0
  with precondition: [B=4,V_bytes=C,V_bytes+E+2=V_5,0>=V_i_0] 


#### Cost of loops [17,19] 

 * loop 17:eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) -> [eval_rsa_public_encrypt_bb5_in(V_bytes',V__global_precision',V_i_1',B',C',D')] 
1
 * loop 19:eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) -> [eval_rsa_public_encrypt_bb5_in(V_bytes',V__global_precision',V_i_1',B',C',D')] 
1
#### Cost of phase [17,19]:eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) -> [eval_rsa_public_encrypt_bb5_in(V_bytes',V__global_precision',V_i_1',B',C',D')] 
2*it(17)+0
#### Cost of loops [16,18] 

 * loop 16:eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) -> [eval_rsa_public_encrypt_bb5_in(V_bytes',V__global_precision',V_i_1',B',C',D')] 
1
 * loop 18:eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) -> [eval_rsa_public_encrypt_bb5_in(V_bytes',V__global_precision',V_i_1',B',C',D')] 
1
#### Cost of phase [16,18]:eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) -> [eval_rsa_public_encrypt_bb5_in(V_bytes',V__global_precision',V_i_1',B',C',D')] 
1*it(16)+1*it(18)+0
  Such that:it(16) =< V_i_1
it(16) =< V_i_1-V_i_1'

#### Cost of phase [16,18]:eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D) -> [eval_rsa_public_encrypt_bb5_in(V_bytes',V__global_precision',V_i_1',B',C',D')] 
1*it(16)+1*it(18)+0
  Such that:it(16) =< V_i_1
it(16) =< V_i_1-V_i_1'

#### Cost of chains of eval_rsa_public_encrypt_bb5_in(V_bytes,V__global_precision,V_i_1,B,C,D):
* Chain [[17,19]]...: 2*it(17)+0
  with precondition: [0>=V_i_1+1,B=2] 

* Chain [[16,18]]...: 1*it(16)+1*it(18)+0
  Such that:it(16) =< V_i_1

  with precondition: [V_i_1>=1,B=2] 

* Chain [[16,18],20]: 1*it(16)+1*it(18)+0
  Such that:it(16) =< V_i_1

  with precondition: [B=2,V_bytes=D,V_i_1>=1] 

* Chain [20]: 0
  with precondition: [V_i_1=0,B=2,D=V_bytes] 


#### Cost of chains of loop_cont_eval_rsa_public_encrypt_bb1_in(F,A,B,C,D):
* Chain [25]...: 2*s(1)+1
  with precondition: [F=4,0>=C+1] 

* Chain [24]...: 1*s(2)+1*s(3)+1
  Such that:s(2) =< C

  with precondition: [F=4,C>=1] 

* Chain [23]: 0
  with precondition: [F=3] 

* Chain [22]: 1
  with precondition: [F=4,C=0] 

* Chain [21]: 1*s(4)+1*s(5)+1
  Such that:s(4) =< C

  with precondition: [F=4,C>=1] 


#### Cost of chains of eval_rsa_public_encrypt_1(V_bytes,V__global_precision,B):
* Chain [27]: 1*aux(1)+0
  with precondition: [] 

* Chain [26]...: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B):
* Chain [29]: 1*s(21)+0
  with precondition: [] 

* Chain [28]...: 1*s(22)+0
  with precondition: [] 


Closed-form bounds of eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B): 
-------------------------------------
* Chain [29] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [28]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_rsa_public_encrypt_start(V_bytes,V__global_precision,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 23 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 12 ms.
   - Transitive Invariants 7 ms.
* Refinement performed in 68 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 38 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 189 ms.

