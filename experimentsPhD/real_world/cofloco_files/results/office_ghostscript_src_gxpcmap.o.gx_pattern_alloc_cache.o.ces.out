Warning: Ignored call to eval_gx_pattern_alloc_cache_stop/1 in equation eval_gx_pattern_alloc_cache_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_gx_pattern_alloc_cache_bb5_in/1]
1. non_recursive  : [eval_gx_pattern_alloc_cache_5/1]
2. non_recursive  : [eval_gx_pattern_alloc_cache_4/1]
3. non_recursive  : [eval_gx_pattern_alloc_cache_3/1]
4. recursive  : [eval_gx_pattern_alloc_cache_bb3_in/3]
5. non_recursive  : [loop_cont_eval_gx_pattern_alloc_cache_bb3_in/2]
6. non_recursive  : [eval_gx_pattern_alloc_cache_2/2]
7. non_recursive  : [eval_gx_pattern_alloc_cache_1/2]
8. non_recursive  : [eval_gx_pattern_alloc_cache_0/2]
9. non_recursive  : [eval_gx_pattern_alloc_cache_bb0_in/2]
10. non_recursive  : [eval_gx_pattern_alloc_cache_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_gx_pattern_alloc_cache_bb3_in/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_gx_pattern_alloc_cache_2/2
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_gx_pattern_alloc_cache_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gx_pattern_alloc_cache_bb3_in/3 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_gx_pattern_alloc_cache_bb3_in/3 
* CE 7: eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B) = 0
     [V_i_0>=V_num_tiles,V_i_0>=0,B=2] 
* CE 8: eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B) = 1+ eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,C,D)
     [V_num_tiles>=V_i_0+1,V_i_0>=0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_gx_pattern_alloc_cache_bb3_in/3 
* CEs [8] --> Loop 5 
* CEs [7] --> Loop 6 

#### Loops of eval_gx_pattern_alloc_cache_bb3_in/3 
* Loop 5: eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B)->  eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0',B')
                  [V_num_tiles>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 6: eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B) [V_i_0>=V_num_tiles,V_i_0>=0,B=2] 

### Ranking functions of CR eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B) 
* RF of phase [5]: [V_num_tiles-V_i_0]

#### Partial ranking functions of CR eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B) 
* Partial RF of phase [5]:
  - RF of loop [5:1]:
    V_num_tiles-V_i_0


### Resulting Chains:eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B) 
* [[5],6]
* [6]


### Merging Chains  eval_gx_pattern_alloc_cache_bb3_in/3 into  External patterns of execution 
* [[6]] --> 1 
* [[6,[5]]] --> 2 


### Specialization of cost equations eval_gx_pattern_alloc_cache_2/2 
* CE 3 is refined into CE [9] 
* CE 4 is refined into CE [10,11] 


#### Refined cost equations eval_gx_pattern_alloc_cache_2/2 
* CE 9: eval_gx_pattern_alloc_cache_2(V_num_tiles,B) = 0
     [] 
* CE 10: eval_gx_pattern_alloc_cache_2(V_num_tiles,B) = 1+ eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,C,D):1
     [0>=V_num_tiles,D=2,C=0] 
* CE 11: eval_gx_pattern_alloc_cache_2(V_num_tiles,B) = 1+ eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,C,D):2
     [V_num_tiles>=1,D=2,C=0] 

### Cost equations --> "Loop" of eval_gx_pattern_alloc_cache_2/2 
* CEs [9,10,11] --> Loop 7 

#### Loops of eval_gx_pattern_alloc_cache_2/2 
* Loop 7: eval_gx_pattern_alloc_cache_2(V_num_tiles,B) [] 

### Ranking functions of CR eval_gx_pattern_alloc_cache_2(V_num_tiles,B) 

#### Partial ranking functions of CR eval_gx_pattern_alloc_cache_2(V_num_tiles,B) 


### Resulting Chains:eval_gx_pattern_alloc_cache_2(V_num_tiles,B) 
* [7]


### Merging Chains  eval_gx_pattern_alloc_cache_2/2 into  External patterns of execution 
* [[7]] --> 1 


### Specialization of cost equations eval_gx_pattern_alloc_cache_start/3 
* CE 2 is refined into CE [12] 


#### Refined cost equations eval_gx_pattern_alloc_cache_start/3 
* CE 12: eval_gx_pattern_alloc_cache_start(V_num_tiles,V_max_bits,B) = 0+ eval_gx_pattern_alloc_cache_2(V_num_tiles,B):1
     [] 

### Cost equations --> "Loop" of eval_gx_pattern_alloc_cache_start/3 
* CEs [12] --> Loop 8 

#### Loops of eval_gx_pattern_alloc_cache_start/3 
* Loop 8: eval_gx_pattern_alloc_cache_start(V_num_tiles,V_max_bits,B) [] 

### Ranking functions of CR eval_gx_pattern_alloc_cache_start(V_num_tiles,V_max_bits,B) 

#### Partial ranking functions of CR eval_gx_pattern_alloc_cache_start(V_num_tiles,V_max_bits,B) 


### Resulting Chains:eval_gx_pattern_alloc_cache_start(V_num_tiles,V_max_bits,B) 
* [8]


### Merging Chains  eval_gx_pattern_alloc_cache_start/3 into  External patterns of execution 
* [[8]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [5] 

 * loop 5:eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B) -> [eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles',V_i_0',B')] 
1
#### Cost of phase [5]:eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B) -> [eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles',V_i_0',B')] 
1*it(5)+0
  Such that:it(5) =< V_num_tiles-V_i_0
it(5) =< V_num_tiles-V_i_0-V_num_tiles'+V_i_0'

#### Cost of chains of eval_gx_pattern_alloc_cache_bb3_in(V_num_tiles,V_i_0,B):
* Chain [[5],6]: 1*it(5)+0
  Such that:it(5) =< V_num_tiles-V_i_0

  with precondition: [B=2,V_i_0>=0,V_num_tiles>=V_i_0+1] 

* Chain [6]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V_num_tiles] 


#### Cost of chains of eval_gx_pattern_alloc_cache_2(V_num_tiles,B):
* Chain [7]: 1*s(1)+1
  Such that:s(1) =< V_num_tiles

  with precondition: [] 


#### Cost of chains of eval_gx_pattern_alloc_cache_start(V_num_tiles,V_max_bits,B):
* Chain [8]: 1*s(2)+1
  Such that:s(2) =< V_num_tiles

  with precondition: [] 


Closed-form bounds of eval_gx_pattern_alloc_cache_start(V_num_tiles,V_max_bits,B): 
-------------------------------------
* Chain [8] with precondition: [] 
    - Upper bound: nat(V_num_tiles)+1 
    - Complexity: n 

### Maximum cost of eval_gx_pattern_alloc_cache_start(V_num_tiles,V_max_bits,B): nat(V_num_tiles)+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 4 ms.
* Invariants computed in 5 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 10 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 8 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 38 ms.

