Warning: Ignored call to eval_load_interlaced_image_stop/1 in equation eval_load_interlaced_image_42/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_load_interlaced_image_12/4,eval_load_interlaced_image_13/4,eval_load_interlaced_image_bb5_in/4]
1. recursive  : [eval_load_interlaced_image_10/2,eval_load_interlaced_image_7/2,eval_load_interlaced_image_8/2,eval_load_interlaced_image_9/2,eval_load_interlaced_image_bb1_in/2,eval_load_interlaced_image_bb4_in/2,loop_cont_eval_load_interlaced_image_bb5_in/3]
2. non_recursive  : [eval_load_interlaced_image_42/1]
3. non_recursive  : [eval_load_interlaced_image_41/1]
4. non_recursive  : [eval_load_interlaced_image_bb10_in/1]
5. non_recursive  : [loop_cont_eval_load_interlaced_image_bb1_in/2]
6. non_recursive  : [eval_load_interlaced_image_bb0_in/1]
7. non_recursive  : [eval_load_interlaced_image_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_load_interlaced_image_bb5_in/4
1. SCC is partially evaluated into eval_load_interlaced_image_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_load_interlaced_image_bb0_in/1
7. SCC is partially evaluated into eval_load_interlaced_image_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_load_interlaced_image_bb5_in/4 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_load_interlaced_image_bb5_in/4 
* CE 8: eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C) = 0
     [0>=V_col_0,C=V_row_0+1,B=2] 
* CE 9: eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C) = 1+ eval_load_interlaced_image_bb5_in(V_row_0,D,E,C)
     [V_col_0>=1,V_col_0=D+1,E=2,B=2] 

### Cost equations --> "Loop" of eval_load_interlaced_image_bb5_in/4 
* CEs [9] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_load_interlaced_image_bb5_in/4 
* Loop 7: eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C)->  eval_load_interlaced_image_bb5_in(V_row_0,V_col_0',B',C)
                  [V_col_0>=1,V_col_0=V_col_0'+1,B'=2,B=2] 
* Loop 8: eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C) [0>=V_col_0,V_row_0+1=C,B=2] 

### Ranking functions of CR eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C) 
* RF of phase [7]: [V_col_0]

#### Partial ranking functions of CR eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_col_0


### Resulting Chains:eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C) 
* [[7],8]
* [8]


### Merging Chains  eval_load_interlaced_image_bb5_in/4 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[7]]] --> 2 


### Specialization of cost equations eval_load_interlaced_image_bb1_in/2 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11,12] 


#### Refined cost equations eval_load_interlaced_image_bb1_in/2 
* CE 10: eval_load_interlaced_image_bb1_in(V_row_0,B) = 0
     [B=3] 
* CE 11: eval_load_interlaced_image_bb1_in(V_row_0,B) = 2+ eval_load_interlaced_image_bb5_in(C,D,E,F):1+ eval_load_interlaced_image_bb1_in(F,G)
     [0>=D,F=C+1,F=V_row_0+1,G=3,E=2,B=3] 
* CE 12: eval_load_interlaced_image_bb1_in(V_row_0,B) = 2+ eval_load_interlaced_image_bb5_in(C,D,E,F):2+ eval_load_interlaced_image_bb1_in(F,G)
     [D>=1,F=C+1,F=V_row_0+1,G=3,E=2,B=3] 

### Cost equations --> "Loop" of eval_load_interlaced_image_bb1_in/2 
* CEs [11,12] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_load_interlaced_image_bb1_in/2 
* Loop 9: eval_load_interlaced_image_bb1_in(V_row_0,B)->  eval_load_interlaced_image_bb1_in(V_row_0',B')
                  [V_row_0+1=V_row_0',B'=3,B=3] 
* Loop 10: eval_load_interlaced_image_bb1_in(V_row_0,B) [B=3] 

### Ranking functions of CR eval_load_interlaced_image_bb1_in(V_row_0,B) 

#### Partial ranking functions of CR eval_load_interlaced_image_bb1_in(V_row_0,B) 


### Resulting Chains:eval_load_interlaced_image_bb1_in(V_row_0,B) 
* [[9]]...
* [[9],10]
* [10]


### Merging Chains  eval_load_interlaced_image_bb1_in/2 into  External patterns of execution 
* [[10],[10,[9]]] --> 1 
* [[[9]]] --> 2 


### Specialization of cost equations eval_load_interlaced_image_bb0_in/1 
* CE 3 is refined into CE [13,14] 


#### Refined cost equations eval_load_interlaced_image_bb0_in/1 
* CE 13: eval_load_interlaced_image_bb0_in(B) = 1+ eval_load_interlaced_image_bb1_in(C,D):1
     [D=3,C=0] 
* CE 14: eval_load_interlaced_image_bb0_in(B) = 1+ eval_load_interlaced_image_bb1_in(C,D):2
     [D=3,C=0] 

### Cost equations --> "Loop" of eval_load_interlaced_image_bb0_in/1 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_load_interlaced_image_bb0_in/1 
* Loop 11: eval_load_interlaced_image_bb0_in(B) [] 
* Loop 12: eval_load_interlaced_image_bb0_in(B) [] 

### Ranking functions of CR eval_load_interlaced_image_bb0_in(B) 

#### Partial ranking functions of CR eval_load_interlaced_image_bb0_in(B) 


### Resulting Chains:eval_load_interlaced_image_bb0_in(B) 
* [12]
* [11]...


### Merging Chains  eval_load_interlaced_image_bb0_in/1 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_load_interlaced_image_start/1 
* CE 2 is refined into CE [15,16] 


#### Refined cost equations eval_load_interlaced_image_start/1 
* CE 15: eval_load_interlaced_image_start(B) = 0+ eval_load_interlaced_image_bb0_in(B):1
     [] 
* CE 16: eval_load_interlaced_image_start(B) = 0+ eval_load_interlaced_image_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_load_interlaced_image_start/1 
* CEs [16] --> Loop 13 
* CEs [15] --> Loop 14 

#### Loops of eval_load_interlaced_image_start/1 
* Loop 13: eval_load_interlaced_image_start(B) [] 
* Loop 14: eval_load_interlaced_image_start(B) [] 

### Ranking functions of CR eval_load_interlaced_image_start(B) 

#### Partial ranking functions of CR eval_load_interlaced_image_start(B) 


### Resulting Chains:eval_load_interlaced_image_start(B) 
* [14]
* [13]...


### Merging Chains  eval_load_interlaced_image_start/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C) -> [eval_load_interlaced_image_bb5_in(V_row_0',V_col_0',B',C')] 
1
#### Cost of phase [7]:eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C) -> [eval_load_interlaced_image_bb5_in(V_row_0',V_col_0',B',C')] 
1*it(7)+0
  Such that:it(7) =< V_col_0
it(7) =< V_col_0-V_col_0'

#### Cost of chains of eval_load_interlaced_image_bb5_in(V_row_0,V_col_0,B,C):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< V_col_0

  with precondition: [B=2,V_row_0+1=C,V_col_0>=1] 

* Chain [8]: 0
  with precondition: [B=2,C=V_row_0+1,0>=V_col_0] 


#### Cost of loops [9] 

 * loop 9:eval_load_interlaced_image_bb1_in(V_row_0,B) -> [eval_load_interlaced_image_bb1_in(V_row_0',B')] 
1*s(2)+0
#### Cost of phase [9]:eval_load_interlaced_image_bb1_in(V_row_0,B) -> [eval_load_interlaced_image_bb1_in(V_row_0',B')] 
1*s(3)+0
#### Cost of phase [9]:eval_load_interlaced_image_bb1_in(V_row_0,B) -> [eval_load_interlaced_image_bb1_in(V_row_0',B')] 
1*s(3)+0
#### Cost of chains of eval_load_interlaced_image_bb1_in(V_row_0,B):
* Chain [[9]]...: 1*s(3)+0
  with precondition: [B=3] 

* Chain [[9],10]: 1*s(3)+0
  with precondition: [B=3,V_row_0>=0] 

* Chain [10]: 0
  with precondition: [B=3,V_row_0>=0] 


#### Cost of chains of eval_load_interlaced_image_bb0_in(B):
* Chain [12]: 1*s(5)+1
  with precondition: [] 

* Chain [11]...: 1*s(6)+1
  with precondition: [] 


#### Cost of chains of eval_load_interlaced_image_start(B):
* Chain [14]: 1*s(7)+1
  with precondition: [] 

* Chain [13]...: 1*s(8)+1
  with precondition: [] 


Closed-form bounds of eval_load_interlaced_image_start(B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [13]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_load_interlaced_image_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 14 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 81 ms.

