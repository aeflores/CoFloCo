Warning: Ignored call to eval_emit_bits_stop/1 in equation eval_emit_bits_bb12_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_emit_bits_bb12_in/1]
1. recursive  : [eval_emit_bits_29/2,eval_emit_bits_30/2,eval_emit_bits_37/2,eval_emit_bits_38/2,eval_emit_bits_bb10_in/2,eval_emit_bits_bb4_in/2,eval_emit_bits_bb7_in/2]
2. non_recursive  : [loop_cont_eval_emit_bits_bb4_in/2]
3. non_recursive  : [eval_emit_bits_bb2_in/3]
4. non_recursive  : [eval_emit_bits_5/3]
5. non_recursive  : [eval_emit_bits_4/3]
6. non_recursive  : [eval_emit_bits_bb0_in/2]
7. non_recursive  : [eval_emit_bits_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_emit_bits_bb4_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_emit_bits_bb2_in/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_emit_bits_bb0_in/2
7. SCC is partially evaluated into eval_emit_bits_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_emit_bits_bb4_in/2 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 


#### Refined cost equations eval_emit_bits_bb4_in/2 
* CE 8: eval_emit_bits_bb4_in(V_put_bits_0,B) = 0
     [7>=V_put_bits_0,B=2] 
* CE 9: eval_emit_bits_bb4_in(V_put_bits_0,B) = 1+ eval_emit_bits_bb4_in(C,D)
     [V_put_bits_0>=8,V_put_bits_0=C+8,D=2,B=2] 

### Cost equations --> "Loop" of eval_emit_bits_bb4_in/2 
* CEs [9] --> Loop 6 
* CEs [8] --> Loop 7 

#### Loops of eval_emit_bits_bb4_in/2 
* Loop 6: eval_emit_bits_bb4_in(V_put_bits_0,B)->  eval_emit_bits_bb4_in(V_put_bits_0',B')
                  [V_put_bits_0>=8,V_put_bits_0=V_put_bits_0'+8,B'=2,B=2] 
* Loop 7: eval_emit_bits_bb4_in(V_put_bits_0,B) [7>=V_put_bits_0,B=2] 

### Ranking functions of CR eval_emit_bits_bb4_in(V_put_bits_0,B) 
* RF of phase [6]: [V_put_bits_0-7]

#### Partial ranking functions of CR eval_emit_bits_bb4_in(V_put_bits_0,B) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_put_bits_0-7


### Resulting Chains:eval_emit_bits_bb4_in(V_put_bits_0,B) 
* [[6],7]
* [7]


### Merging Chains  eval_emit_bits_bb4_in/2 into  External patterns of execution 
* [[7]] --> 1 
* [[7,[6]]] --> 2 


### Specialization of cost equations eval_emit_bits_bb2_in/3 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11,12] 


#### Refined cost equations eval_emit_bits_bb2_in/3 
* CE 10: eval_emit_bits_bb2_in(V_size,V_2,B) = 0
     [] 
* CE 11: eval_emit_bits_bb2_in(V_size,V_2,B) = 1+ eval_emit_bits_bb4_in(C,D):1
     [7>=C,C=V_size+V_2,D=2] 
* CE 12: eval_emit_bits_bb2_in(V_size,V_2,B) = 1+ eval_emit_bits_bb4_in(C,D):2
     [C>=8,C=V_size+V_2,D=2] 

### Cost equations --> "Loop" of eval_emit_bits_bb2_in/3 
* CEs [10,11,12] --> Loop 8 

#### Loops of eval_emit_bits_bb2_in/3 
* Loop 8: eval_emit_bits_bb2_in(V_size,V_2,B) [] 

### Ranking functions of CR eval_emit_bits_bb2_in(V_size,V_2,B) 

#### Partial ranking functions of CR eval_emit_bits_bb2_in(V_size,V_2,B) 


### Resulting Chains:eval_emit_bits_bb2_in(V_size,V_2,B) 
* [8]


### Merging Chains  eval_emit_bits_bb2_in/3 into  External patterns of execution 
* [[8]] --> 1 


### Specialization of cost equations eval_emit_bits_bb0_in/2 
* CE 3 is refined into CE [13] 


#### Refined cost equations eval_emit_bits_bb0_in/2 
* CE 13: eval_emit_bits_bb0_in(V_size,B) = 0+ eval_emit_bits_bb2_in(V_size,C,B):1
     [] 

### Cost equations --> "Loop" of eval_emit_bits_bb0_in/2 
* CEs [13] --> Loop 9 

#### Loops of eval_emit_bits_bb0_in/2 
* Loop 9: eval_emit_bits_bb0_in(V_size,B) [] 

### Ranking functions of CR eval_emit_bits_bb0_in(V_size,B) 

#### Partial ranking functions of CR eval_emit_bits_bb0_in(V_size,B) 


### Resulting Chains:eval_emit_bits_bb0_in(V_size,B) 
* [9]


### Merging Chains  eval_emit_bits_bb0_in/2 into  External patterns of execution 
* [[9]] --> 1 


### Specialization of cost equations eval_emit_bits_start/3 
* CE 2 is refined into CE [14] 


#### Refined cost equations eval_emit_bits_start/3 
* CE 14: eval_emit_bits_start(V_code,V_size,B) = 0+ eval_emit_bits_bb0_in(V_size,B):1
     [] 

### Cost equations --> "Loop" of eval_emit_bits_start/3 
* CEs [14] --> Loop 10 

#### Loops of eval_emit_bits_start/3 
* Loop 10: eval_emit_bits_start(V_code,V_size,B) [] 

### Ranking functions of CR eval_emit_bits_start(V_code,V_size,B) 

#### Partial ranking functions of CR eval_emit_bits_start(V_code,V_size,B) 


### Resulting Chains:eval_emit_bits_start(V_code,V_size,B) 
* [10]


### Merging Chains  eval_emit_bits_start/3 into  External patterns of execution 
* [[10]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_emit_bits_bb4_in(V_put_bits_0,B) -> [eval_emit_bits_bb4_in(V_put_bits_0',B')] 
1
#### Cost of phase [6]:eval_emit_bits_bb4_in(V_put_bits_0,B) -> [eval_emit_bits_bb4_in(V_put_bits_0',B')] 
1*it(6)+0
  Such that:it(6) =< V_put_bits_0
it(6) =< V_put_bits_0-V_put_bits_0'

#### Cost of chains of eval_emit_bits_bb4_in(V_put_bits_0,B):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< V_put_bits_0

  with precondition: [B=2,V_put_bits_0>=8] 

* Chain [7]: 0
  with precondition: [B=2,7>=V_put_bits_0] 


#### Cost of chains of eval_emit_bits_bb2_in(V_size,V_2,B):
* Chain [8]: 1*s(1)+1
  Such that:s(1) =< V_size+V_2

  with precondition: [] 


#### Cost of chains of eval_emit_bits_bb0_in(V_size,B):
* Chain [9]: 1*s(2)+1
  with precondition: [] 


#### Cost of chains of eval_emit_bits_start(V_code,V_size,B):
* Chain [10]: 1*s(3)+1
  with precondition: [] 


Closed-form bounds of eval_emit_bits_start(V_code,V_size,B): 
-------------------------------------
* Chain [10] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_emit_bits_start(V_code,V_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 22 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 25 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 20 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 120 ms.

