Warning: Ignored call to eval_dynamic_grow_stop/1 in equation eval_dynamic_grow_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_dynamic_grow_11/3,eval_dynamic_grow_12/4,eval_dynamic_grow_bb3_in/3]
1. non_recursive  : [eval_dynamic_grow_bb5_in/1]
2. non_recursive  : [loop_cont_eval_dynamic_grow_bb3_in/2]
3. non_recursive  : [eval_dynamic_grow_bb2_in/3]
4. non_recursive  : [eval_dynamic_grow_bb0_in/2]
5. non_recursive  : [eval_dynamic_grow_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_dynamic_grow_bb3_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_dynamic_grow_bb2_in/3
4. SCC is partially evaluated into eval_dynamic_grow_bb0_in/2
5. SCC is partially evaluated into eval_dynamic_grow_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_dynamic_grow_bb3_in/3 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_dynamic_grow_bb3_in/3 
* CE 9: eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B) = 1+ eval_dynamic_grow_bb3_in(V_7,C,D)
     [V_new_size_0>=V_7+1,D=2,B=2] 
* CE 10: eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_dynamic_grow_bb3_in/3 
* CEs [10] --> Loop 6 
* CEs [9] --> Loop 7 

#### Loops of eval_dynamic_grow_bb3_in/3 
* Loop 6: eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B) [B=2] 
* Loop 7: eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B)->  eval_dynamic_grow_bb3_in(V_7,V_new_size_0',B')
                  [V_new_size_0>=V_7+1,B'=2,B=2] 

### Ranking functions of CR eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B) 

#### Partial ranking functions of CR eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B) 


### Resulting Chains:eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B) 
* [[7]]...
* [[7],6]
* [6]


### Merging Chains  eval_dynamic_grow_bb3_in/3 into  External patterns of execution 
* [[6],[6,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_dynamic_grow_bb2_in/3 
* CE 5 is refined into CE [11] 
* CE 6 is refined into CE [12,13] 


#### Refined cost equations eval_dynamic_grow_bb2_in/3 
* CE 11: eval_dynamic_grow_bb2_in(V_7,V_13,B) = 0
     [] 
* CE 12: eval_dynamic_grow_bb2_in(V_7,V_13,B) = 1+ eval_dynamic_grow_bb3_in(V_7,V_13,C):1
     [C=2] 
* CE 13: eval_dynamic_grow_bb2_in(V_7,V_13,B) = 1+ eval_dynamic_grow_bb3_in(V_7,V_13,C):2
     [V_13>=V_7+1,C=2] 

### Cost equations --> "Loop" of eval_dynamic_grow_bb2_in/3 
* CEs [13] --> Loop 8 
* CEs [11,12] --> Loop 9 

#### Loops of eval_dynamic_grow_bb2_in/3 
* Loop 8: eval_dynamic_grow_bb2_in(V_7,V_13,B) [V_13>=V_7+1] 
* Loop 9: eval_dynamic_grow_bb2_in(V_7,V_13,B) [] 

### Ranking functions of CR eval_dynamic_grow_bb2_in(V_7,V_13,B) 

#### Partial ranking functions of CR eval_dynamic_grow_bb2_in(V_7,V_13,B) 


### Resulting Chains:eval_dynamic_grow_bb2_in(V_7,V_13,B) 
* [9]
* [8]...


### Merging Chains  eval_dynamic_grow_bb2_in/3 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations eval_dynamic_grow_bb0_in/2 
* CE 3 is refined into CE [14,15] 
* CE 4 is refined into CE [16,17] 


#### Refined cost equations eval_dynamic_grow_bb0_in/2 
* CE 14: eval_dynamic_grow_bb0_in(V_max_size,B) = 0+ eval_dynamic_grow_bb2_in(C,D,B):1
     [] 
* CE 15: eval_dynamic_grow_bb0_in(V_max_size,B) = 0+ eval_dynamic_grow_bb2_in(C,D,B):2
     [D>=C+1] 
* CE 16: eval_dynamic_grow_bb0_in(V_max_size,B) = 0+ eval_dynamic_grow_bb2_in(C,V_max_size,B):1
     [] 
* CE 17: eval_dynamic_grow_bb0_in(V_max_size,B) = 0+ eval_dynamic_grow_bb2_in(C,V_max_size,B):2
     [V_max_size>=C+1] 

### Cost equations --> "Loop" of eval_dynamic_grow_bb0_in/2 
* CEs [15,17] --> Loop 10 
* CEs [14,16] --> Loop 11 

#### Loops of eval_dynamic_grow_bb0_in/2 
* Loop 10: eval_dynamic_grow_bb0_in(V_max_size,B) [] 
* Loop 11: eval_dynamic_grow_bb0_in(V_max_size,B) [] 

### Ranking functions of CR eval_dynamic_grow_bb0_in(V_max_size,B) 

#### Partial ranking functions of CR eval_dynamic_grow_bb0_in(V_max_size,B) 


### Resulting Chains:eval_dynamic_grow_bb0_in(V_max_size,B) 
* [11]
* [10]...


### Merging Chains  eval_dynamic_grow_bb0_in/2 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_dynamic_grow_start/2 
* CE 2 is refined into CE [18,19] 


#### Refined cost equations eval_dynamic_grow_start/2 
* CE 18: eval_dynamic_grow_start(V_max_size,B) = 0+ eval_dynamic_grow_bb0_in(V_max_size,B):1
     [] 
* CE 19: eval_dynamic_grow_start(V_max_size,B) = 0+ eval_dynamic_grow_bb0_in(V_max_size,B):2
     [] 

### Cost equations --> "Loop" of eval_dynamic_grow_start/2 
* CEs [19] --> Loop 12 
* CEs [18] --> Loop 13 

#### Loops of eval_dynamic_grow_start/2 
* Loop 12: eval_dynamic_grow_start(V_max_size,B) [] 
* Loop 13: eval_dynamic_grow_start(V_max_size,B) [] 

### Ranking functions of CR eval_dynamic_grow_start(V_max_size,B) 

#### Partial ranking functions of CR eval_dynamic_grow_start(V_max_size,B) 


### Resulting Chains:eval_dynamic_grow_start(V_max_size,B) 
* [13]
* [12]...


### Merging Chains  eval_dynamic_grow_start/2 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B) -> [eval_dynamic_grow_bb3_in(V_7',V_new_size_0',B')] 
1
#### Cost of phase [7]:eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B) -> [eval_dynamic_grow_bb3_in(V_7',V_new_size_0',B')] 
1*it(7)+0
#### Cost of phase [7]:eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B) -> [eval_dynamic_grow_bb3_in(V_7',V_new_size_0',B')] 
1*it(7)+0
#### Cost of chains of eval_dynamic_grow_bb3_in(V_7,V_new_size_0,B):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [V_new_size_0>=V_7+1,B=2] 

* Chain [[7],6]: 1*it(7)+0
  with precondition: [B=2,V_new_size_0>=V_7+1] 

* Chain [6]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_dynamic_grow_bb2_in(V_7,V_13,B):
* Chain [9]: 1*aux(2)+0
  with precondition: [] 

* Chain [8]...: 1*s(3)+1
  with precondition: [V_13>=V_7+1] 


#### Cost of chains of eval_dynamic_grow_bb0_in(V_max_size,B):
* Chain [11]: 1*aux(3)+0
  with precondition: [] 

* Chain [10]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_dynamic_grow_start(V_max_size,B):
* Chain [13]: 1*s(8)+0
  with precondition: [] 

* Chain [12]...: 1*s(9)+0
  with precondition: [] 


Closed-form bounds of eval_dynamic_grow_start(V_max_size,B): 
-------------------------------------
* Chain [13] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [12]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_dynamic_grow_start(V_max_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 10 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 8 ms.
   - Equation cost structures 2 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 40 ms.

