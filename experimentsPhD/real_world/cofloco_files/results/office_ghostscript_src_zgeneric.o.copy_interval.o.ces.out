Warning: Ignored call to eval_copy_interval_stop/1 in equation eval_copy_interval_bb23_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_copy_interval_bb23_in/1]
1. non_recursive  : [eval_copy_interval_69/1]
2. non_recursive  : [eval_copy_interval_68/1]
3. non_recursive  : [eval_copy_interval_bb22_in/1]
4. non_recursive  : [eval_copy_interval_25/1]
5. non_recursive  : [eval_copy_interval_24/3]
6. non_recursive  : [eval_copy_interval_NewDefault_in/1]
7. non_recursive  : [eval_copy_interval_56/1]
8. non_recursive  : [eval_copy_interval_55/2]
9. non_recursive  : [eval_copy_interval_bb15_in/2]
10. recursive  : [eval_copy_interval_bb17_in/2]
11. recursive  : [eval_copy_interval_bb20_in/2]
12. recursive  : [eval_copy_interval_30/3,eval_copy_interval_31/3,eval_copy_interval_36/3,eval_copy_interval_37/3,eval_copy_interval_38/3,eval_copy_interval_39/3,eval_copy_interval_bb12_in/3,eval_copy_interval_bb9_in/3]
13. non_recursive  : [loop_cont_eval_copy_interval_bb17_in/2]
14. non_recursive  : [loop_cont_eval_copy_interval_bb20_in/2]
15. non_recursive  : [loop_cont_eval_copy_interval_bb9_in/2]
16. non_recursive  : [eval_copy_interval_bb3_in/3]
17. non_recursive  : [eval_copy_interval_bb0_in/2]
18. non_recursive  : [eval_copy_interval_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_copy_interval_bb17_in/2
11. SCC is partially evaluated into eval_copy_interval_bb20_in/2
12. SCC is partially evaluated into eval_copy_interval_bb9_in/3
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_copy_interval_bb3_in/3
17. SCC is partially evaluated into eval_copy_interval_bb0_in/2
18. SCC is partially evaluated into eval_copy_interval_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_copy_interval_bb17_in/2 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 
* CE 11 is refined into CE [19] 


#### Refined cost equations eval_copy_interval_bb17_in/2 
* CE 17: eval_copy_interval_bb17_in(V_i_0,B) = 0
     [B=2,V_i_0=0] 
* CE 18: eval_copy_interval_bb17_in(V_i_0,B) = 1+ eval_copy_interval_bb17_in(C,D)
     [V_i_0>=1,V_i_0=C+1,D=2,B=2] 
* CE 19: eval_copy_interval_bb17_in(V_i_0,B) = 1+ eval_copy_interval_bb17_in(C,D)
     [0>=V_i_0+1,V_i_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_copy_interval_bb17_in/2 
* CEs [18] --> Loop 12 
* CEs [19] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of eval_copy_interval_bb17_in/2 
* Loop 12: eval_copy_interval_bb17_in(V_i_0,B)->  eval_copy_interval_bb17_in(V_i_0',B')
                  [V_i_0>=1,V_i_0=V_i_0'+1,B'=2,B=2] 
* Loop 13: eval_copy_interval_bb17_in(V_i_0,B)->  eval_copy_interval_bb17_in(V_i_0',B')
                  [0>=V_i_0+1,V_i_0=V_i_0'+1,B'=2,B=2] 
* Loop 14: eval_copy_interval_bb17_in(V_i_0,B) [B=2,V_i_0=0] 

### Ranking functions of CR eval_copy_interval_bb17_in(V_i_0,B) 
* RF of phase [12]: [V_i_0]

#### Partial ranking functions of CR eval_copy_interval_bb17_in(V_i_0,B) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_i_0


### Resulting Chains:eval_copy_interval_bb17_in(V_i_0,B) 
* [[13]]...
* [[12],14]
* [14]


### Merging Chains  eval_copy_interval_bb17_in/2 into  External patterns of execution 
* [[14]] --> 1 
* [[14,[12]]] --> 2 
* [[[13]]] --> 3 


### Specialization of cost equations eval_copy_interval_bb20_in/2 
* CE 16 is refined into CE [20] 
* CE 15 is refined into CE [21] 
* CE 14 is refined into CE [22] 


#### Refined cost equations eval_copy_interval_bb20_in/2 
* CE 20: eval_copy_interval_bb20_in(V_i_1,B) = 0
     [B=2,V_i_1=0] 
* CE 21: eval_copy_interval_bb20_in(V_i_1,B) = 1+ eval_copy_interval_bb20_in(C,D)
     [V_i_1>=1,V_i_1=C+1,D=2,B=2] 
* CE 22: eval_copy_interval_bb20_in(V_i_1,B) = 1+ eval_copy_interval_bb20_in(C,D)
     [0>=V_i_1+1,V_i_1=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_copy_interval_bb20_in/2 
* CEs [21] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of eval_copy_interval_bb20_in/2 
* Loop 15: eval_copy_interval_bb20_in(V_i_1,B)->  eval_copy_interval_bb20_in(V_i_1',B')
                  [V_i_1>=1,V_i_1=V_i_1'+1,B'=2,B=2] 
* Loop 16: eval_copy_interval_bb20_in(V_i_1,B)->  eval_copy_interval_bb20_in(V_i_1',B')
                  [0>=V_i_1+1,V_i_1=V_i_1'+1,B'=2,B=2] 
* Loop 17: eval_copy_interval_bb20_in(V_i_1,B) [B=2,V_i_1=0] 

### Ranking functions of CR eval_copy_interval_bb20_in(V_i_1,B) 
* RF of phase [15]: [V_i_1]

#### Partial ranking functions of CR eval_copy_interval_bb20_in(V_i_1,B) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_i_1


### Resulting Chains:eval_copy_interval_bb20_in(V_i_1,B) 
* [[16]]...
* [[15],17]
* [17]


### Merging Chains  eval_copy_interval_bb20_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[17,[15]]] --> 2 
* [[[16]]] --> 3 


### Specialization of cost equations eval_copy_interval_bb9_in/3 
* CE 10 is refined into CE [23] 
* CE 9 is refined into CE [24] 


#### Refined cost equations eval_copy_interval_bb9_in/3 
* CE 23: eval_copy_interval_bb9_in(V_9,V_i1_0,B) = 0
     [V_i1_0>=V_9,V_i1_0>=0,B=2] 
* CE 24: eval_copy_interval_bb9_in(V_9,V_i1_0,B) = 1+ eval_copy_interval_bb9_in(V_9,C,D)
     [V_9>=V_i1_0+1,V_i1_0>=0,V_i1_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_copy_interval_bb9_in/3 
* CEs [24] --> Loop 18 
* CEs [23] --> Loop 19 

#### Loops of eval_copy_interval_bb9_in/3 
* Loop 18: eval_copy_interval_bb9_in(V_9,V_i1_0,B)->  eval_copy_interval_bb9_in(V_9,V_i1_0',B')
                  [V_9>=V_i1_0+1,V_i1_0>=0,V_i1_0+1=V_i1_0',B'=2,B=2] 
* Loop 19: eval_copy_interval_bb9_in(V_9,V_i1_0,B) [V_i1_0>=V_9,V_i1_0>=0,B=2] 

### Ranking functions of CR eval_copy_interval_bb9_in(V_9,V_i1_0,B) 
* RF of phase [18]: [V_9-V_i1_0]

#### Partial ranking functions of CR eval_copy_interval_bb9_in(V_9,V_i1_0,B) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_9-V_i1_0


### Resulting Chains:eval_copy_interval_bb9_in(V_9,V_i1_0,B) 
* [[18],19]
* [19]


### Merging Chains  eval_copy_interval_bb9_in/3 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[18]]] --> 2 


### Specialization of cost equations eval_copy_interval_bb3_in/3 
* CE 5 is refined into CE [25] 
* CE 6 is refined into CE [26,27] 
* CE 7 is refined into CE [28,29,30] 
* CE 8 is refined into CE [31,32,33] 


#### Refined cost equations eval_copy_interval_bb3_in/3 
* CE 25: eval_copy_interval_bb3_in(V_index,V_9,B) = 0
     [] 
* CE 26: eval_copy_interval_bb3_in(V_index,V_9,B) = 1+ eval_copy_interval_bb9_in(V_9,C,D):1
     [0>=V_9,D=2,C=0] 
* CE 27: eval_copy_interval_bb3_in(V_index,V_9,B) = 1+ eval_copy_interval_bb9_in(V_9,C,D):2
     [V_9>=1,D=2,C=0] 
* CE 28: eval_copy_interval_bb3_in(V_index,V_9,B) = 1+ eval_copy_interval_bb17_in(C,D):1
     [D=2,C=0,V_9=0] 
* CE 29: eval_copy_interval_bb3_in(V_index,V_9,B) = 1+ eval_copy_interval_bb17_in(V_9,C):2
     [V_9>=1,C=2] 
* CE 30: eval_copy_interval_bb3_in(V_index,V_9,B) = 1+ eval_copy_interval_bb17_in(V_9,C):3
     [0>=V_9+1,C=2] 
* CE 31: eval_copy_interval_bb3_in(V_index,V_9,B) = 1+ eval_copy_interval_bb20_in(C,D):1
     [D=2,C=0,V_9=0] 
* CE 32: eval_copy_interval_bb3_in(V_index,V_9,B) = 1+ eval_copy_interval_bb20_in(V_9,C):2
     [V_9>=1,C=2] 
* CE 33: eval_copy_interval_bb3_in(V_index,V_9,B) = 1+ eval_copy_interval_bb20_in(V_9,C):3
     [0>=V_9+1,C=2] 

### Cost equations --> "Loop" of eval_copy_interval_bb3_in/3 
* CEs [30,33] --> Loop 20 
* CEs [25,26,27,28,29,31,32] --> Loop 21 

#### Loops of eval_copy_interval_bb3_in/3 
* Loop 20: eval_copy_interval_bb3_in(V_index,V_9,B) [0>=V_9+1] 
* Loop 21: eval_copy_interval_bb3_in(V_index,V_9,B) [] 

### Ranking functions of CR eval_copy_interval_bb3_in(V_index,V_9,B) 

#### Partial ranking functions of CR eval_copy_interval_bb3_in(V_index,V_9,B) 


### Resulting Chains:eval_copy_interval_bb3_in(V_index,V_9,B) 
* [21]
* [20]...


### Merging Chains  eval_copy_interval_bb3_in/3 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_copy_interval_bb0_in/2 
* CE 3 is refined into CE [34,35] 
* CE 4 is refined into CE [36] 


#### Refined cost equations eval_copy_interval_bb0_in/2 
* CE 34: eval_copy_interval_bb0_in(V_index,B) = 0+ eval_copy_interval_bb3_in(V_index,C,B):1
     [] 
* CE 35: eval_copy_interval_bb0_in(V_index,B) = 0+ eval_copy_interval_bb3_in(V_index,C,B):2
     [0>=C+1] 
* CE 36: eval_copy_interval_bb0_in(V_index,B) = 0
     [] 

### Cost equations --> "Loop" of eval_copy_interval_bb0_in/2 
* CEs [34,36] --> Loop 22 
* CEs [35] --> Loop 23 

#### Loops of eval_copy_interval_bb0_in/2 
* Loop 22: eval_copy_interval_bb0_in(V_index,B) [] 
* Loop 23: eval_copy_interval_bb0_in(V_index,B) [] 

### Ranking functions of CR eval_copy_interval_bb0_in(V_index,B) 

#### Partial ranking functions of CR eval_copy_interval_bb0_in(V_index,B) 


### Resulting Chains:eval_copy_interval_bb0_in(V_index,B) 
* [23]...
* [22]


### Merging Chains  eval_copy_interval_bb0_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_copy_interval_start/2 
* CE 2 is refined into CE [37,38] 


#### Refined cost equations eval_copy_interval_start/2 
* CE 37: eval_copy_interval_start(V_index,B) = 0+ eval_copy_interval_bb0_in(V_index,B):1
     [] 
* CE 38: eval_copy_interval_start(V_index,B) = 0+ eval_copy_interval_bb0_in(V_index,B):2
     [] 

### Cost equations --> "Loop" of eval_copy_interval_start/2 
* CEs [38] --> Loop 24 
* CEs [37] --> Loop 25 

#### Loops of eval_copy_interval_start/2 
* Loop 24: eval_copy_interval_start(V_index,B) [] 
* Loop 25: eval_copy_interval_start(V_index,B) [] 

### Ranking functions of CR eval_copy_interval_start(V_index,B) 

#### Partial ranking functions of CR eval_copy_interval_start(V_index,B) 


### Resulting Chains:eval_copy_interval_start(V_index,B) 
* [25]
* [24]...


### Merging Chains  eval_copy_interval_start/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [13] 

 * loop 13:eval_copy_interval_bb17_in(V_i_0,B) -> [eval_copy_interval_bb17_in(V_i_0',B')] 
1
#### Cost of phase [13]:eval_copy_interval_bb17_in(V_i_0,B) -> [eval_copy_interval_bb17_in(V_i_0',B')] 
1*it(13)+0
#### Cost of loops [12] 

 * loop 12:eval_copy_interval_bb17_in(V_i_0,B) -> [eval_copy_interval_bb17_in(V_i_0',B')] 
1
#### Cost of phase [12]:eval_copy_interval_bb17_in(V_i_0,B) -> [eval_copy_interval_bb17_in(V_i_0',B')] 
1*it(12)+0
  Such that:it(12) =< V_i_0
it(12) =< V_i_0-V_i_0'

#### Cost of chains of eval_copy_interval_bb17_in(V_i_0,B):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [0>=V_i_0+1,B=2] 

* Chain [[12],14]: 1*it(12)+0
  Such that:it(12) =< V_i_0

  with precondition: [B=2,V_i_0>=1] 

* Chain [14]: 0
  with precondition: [V_i_0=0,B=2] 


#### Cost of loops [16] 

 * loop 16:eval_copy_interval_bb20_in(V_i_1,B) -> [eval_copy_interval_bb20_in(V_i_1',B')] 
1
#### Cost of phase [16]:eval_copy_interval_bb20_in(V_i_1,B) -> [eval_copy_interval_bb20_in(V_i_1',B')] 
1*it(16)+0
#### Cost of loops [15] 

 * loop 15:eval_copy_interval_bb20_in(V_i_1,B) -> [eval_copy_interval_bb20_in(V_i_1',B')] 
1
#### Cost of phase [15]:eval_copy_interval_bb20_in(V_i_1,B) -> [eval_copy_interval_bb20_in(V_i_1',B')] 
1*it(15)+0
  Such that:it(15) =< V_i_1
it(15) =< V_i_1-V_i_1'

#### Cost of chains of eval_copy_interval_bb20_in(V_i_1,B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [0>=V_i_1+1,B=2] 

* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< V_i_1

  with precondition: [B=2,V_i_1>=1] 

* Chain [17]: 0
  with precondition: [V_i_1=0,B=2] 


#### Cost of loops [18] 

 * loop 18:eval_copy_interval_bb9_in(V_9,V_i1_0,B) -> [eval_copy_interval_bb9_in(V_9',V_i1_0',B')] 
1
#### Cost of phase [18]:eval_copy_interval_bb9_in(V_9,V_i1_0,B) -> [eval_copy_interval_bb9_in(V_9',V_i1_0',B')] 
1*it(18)+0
  Such that:it(18) =< V_9-V_i1_0
it(18) =< V_9-V_i1_0-V_9'+V_i1_0'

#### Cost of chains of eval_copy_interval_bb9_in(V_9,V_i1_0,B):
* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< V_9-V_i1_0

  with precondition: [B=2,V_i1_0>=0,V_9>=V_i1_0+1] 

* Chain [19]: 0
  with precondition: [B=2,V_i1_0>=0,V_i1_0>=V_9] 


#### Cost of chains of eval_copy_interval_bb3_in(V_index,V_9,B):
* Chain [21]: 3*s(1)+1
  Such that:aux(1) =< V_9
s(1) =< aux(1)

  with precondition: [] 

* Chain [20]...: 1*aux(2)+0
  with precondition: [0>=V_9+1] 


#### Cost of chains of eval_copy_interval_bb0_in(V_index,B):
* Chain [23]...: 1*s(6)+0
  with precondition: [] 

* Chain [22]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_copy_interval_start(V_index,B):
* Chain [25]: 1*s(9)+0
  with precondition: [] 

* Chain [24]...: 1*s(10)+0
  with precondition: [] 


Closed-form bounds of eval_copy_interval_start(V_index,B): 
-------------------------------------
* Chain [25] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_copy_interval_start(V_index,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 14 ms.
* Invariants computed in 17 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 29 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 23 ms.
   - Equation cost structures 9 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 113 ms.

