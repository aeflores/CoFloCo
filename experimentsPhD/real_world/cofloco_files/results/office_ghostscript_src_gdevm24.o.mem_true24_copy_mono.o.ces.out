Warning: Ignored call to eval_mem_true24_copy_mono_stop/1 in equation eval_mem_true24_copy_mono_bb59_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_mem_true24_copy_mono_bb14_in/7,eval_mem_true24_copy_mono_bb18_in/7,eval_mem_true24_copy_mono_bb20_in/7]
1. recursive  : [eval_mem_true24_copy_mono_bb12_in/3,loop_cont_eval_mem_true24_copy_mono_bb14_in/4]
2. recursive  : [eval_mem_true24_copy_mono_bb29_in/12,eval_mem_true24_copy_mono_bb31_in/12]
3. recursive  : [eval_mem_true24_copy_mono_bb33_in/14,eval_mem_true24_copy_mono_bb37_in/14,eval_mem_true24_copy_mono_bb39_in/14,eval_mem_true24_copy_mono_bb41_in/14,eval_mem_true24_copy_mono_bb43_in/14,eval_mem_true24_copy_mono_bb46_in/14,eval_mem_true24_copy_mono_bb48_in/14,eval_mem_true24_copy_mono_bb50_in/14,eval_mem_true24_copy_mono_bb52_in/14]
4. recursive  : [eval_mem_true24_copy_mono_bb55_in/14,eval_mem_true24_copy_mono_bb57_in/14]
5. recursive  : [eval_mem_true24_copy_mono_bb27_in/4,eval_mem_true24_copy_mono_bb58_in/7,loop_cont_eval_mem_true24_copy_mono_bb29_in/8,loop_cont_eval_mem_true24_copy_mono_bb33_in/9,loop_cont_eval_mem_true24_copy_mono_bb55_in/8]
6. non_recursive  : [eval_mem_true24_copy_mono_bb59_in/1]
7. non_recursive  : [loop_cont_eval_mem_true24_copy_mono_bb27_in/2]
8. non_recursive  : [eval_mem_true24_copy_mono_bb26_in/4]
9. non_recursive  : [loop_cont_eval_mem_true24_copy_mono_bb12_in/2]
10. non_recursive  : [eval_mem_true24_copy_mono_bb9_in/3]
11. non_recursive  : [eval_mem_true24_copy_mono_bb7_in/4]
12. non_recursive  : [eval_mem_true24_copy_mono_bb5_in/5]
13. non_recursive  : [eval_mem_true24_copy_mono_bb3_in/5]
14. non_recursive  : [eval_mem_true24_copy_mono_bb0_in/5]
15. non_recursive  : [eval_mem_true24_copy_mono_start/10]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_mem_true24_copy_mono_bb14_in/7
1. SCC is partially evaluated into eval_mem_true24_copy_mono_bb12_in/3
2. SCC is partially evaluated into eval_mem_true24_copy_mono_bb29_in/12
3. SCC is partially evaluated into eval_mem_true24_copy_mono_bb33_in/14
4. SCC is partially evaluated into eval_mem_true24_copy_mono_bb55_in/14
5. SCC is partially evaluated into eval_mem_true24_copy_mono_bb27_in/4
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_mem_true24_copy_mono_bb26_in/4
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_mem_true24_copy_mono_bb9_in/3
11. SCC is partially evaluated into eval_mem_true24_copy_mono_bb7_in/4
12. SCC is partially evaluated into eval_mem_true24_copy_mono_bb5_in/5
13. SCC is partially evaluated into eval_mem_true24_copy_mono_bb3_in/5
14. SCC is partially evaluated into eval_mem_true24_copy_mono_bb0_in/5
15. SCC is partially evaluated into eval_mem_true24_copy_mono_start/10

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mem_true24_copy_mono_bb14_in/7 
* CE 17 is refined into CE [30] 
* CE 16 is refined into CE [31] 


#### Refined cost equations eval_mem_true24_copy_mono_bb14_in/7 
* CE 30: eval_mem_true24_copy_mono_bb14_in(V__2,V__3,V_57,V_count_0,B,C,D) = 1+ eval_mem_true24_copy_mono_bb14_in(V__2,E,V_57,F,G,C,D)
     [V__2>=V_count_0,V_count_0>=2,V_57>=0,V_count_0=F+1,V_57+1=E,V_57+1=V__3,G=5,B=5] 
* CE 31: eval_mem_true24_copy_mono_bb14_in(A,B,C,D,E,A,C) = 0
     [A>=D,C>=0,1>=D,C+1=B,E=5] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb14_in/7 
* CEs [31] --> Loop 21 
* CEs [30] --> Loop 22 

#### Loops of eval_mem_true24_copy_mono_bb14_in/7 
* Loop 21: eval_mem_true24_copy_mono_bb14_in(A,B,C,D,E,A,C) [A>=D,C>=0,1>=D,C+1=B,E=5] 
* Loop 22: eval_mem_true24_copy_mono_bb14_in(V__2,V__3,V_57,V_count_0,B,C,D)->  eval_mem_true24_copy_mono_bb14_in(V__2,V__3',V_57,V_count_0',B',C,D)
                  [V__2>=V_count_0,V_count_0>=2,V_57>=0,V_count_0=V_count_0'+1,V_57+1=V__3',V_57+1=V__3,B'=5,B=5] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb14_in(V__2,V__3,V_57,V_count_0,B,C,D) 
* RF of phase [22]: [V_count_0-1]

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb14_in(V__2,V__3,V_57,V_count_0,B,C,D) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    V_count_0-1


### Resulting Chains:eval_mem_true24_copy_mono_bb14_in(V__2,V__3,V_57,V_count_0,B,C,D) 
* [[22],21]
* [21]


### Merging Chains  eval_mem_true24_copy_mono_bb14_in/7 into  External patterns of execution 
* [[21]] --> 1 
* [[21,[22]]] --> 2 


### Specialization of cost equations eval_mem_true24_copy_mono_bb12_in/3 
* CE 14 is refined into CE [32] 
* CE 13 is refined into CE [33,34] 


#### Refined cost equations eval_mem_true24_copy_mono_bb12_in/3 
* CE 32: eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) = 0
     [0>=V__3,B=6] 
* CE 33: eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) = 2+ eval_mem_true24_copy_mono_bb14_in(V__2,C,D,V__2,E,V__2,D):1+ eval_mem_true24_copy_mono_bb12_in(V__2,D,F)
     [D>=0,1>=V__2,D+1=C,D+1=V__3,F=6,E=5,B=6] 
* CE 34: eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) = 2+ eval_mem_true24_copy_mono_bb14_in(V__2,C,D,V__2,E,V__2,D):2+ eval_mem_true24_copy_mono_bb12_in(V__2,D,F)
     [V__2>=2,D>=0,D+1=C,D+1=V__3,F=6,E=5,B=6] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb12_in/3 
* CEs [34] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [32] --> Loop 25 

#### Loops of eval_mem_true24_copy_mono_bb12_in/3 
* Loop 23: eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B)->  eval_mem_true24_copy_mono_bb12_in(V__2,V__3',B')
                  [V__3>=1,V__2>=2,V__3=V__3'+1,B'=6,B=6] 
* Loop 24: eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B)->  eval_mem_true24_copy_mono_bb12_in(V__2,V__3',B')
                  [V__3>=1,1>=V__2,V__3=V__3'+1,B'=6,B=6] 
* Loop 25: eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) [0>=V__3,B=6] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) 
* RF of phase [23]: [V__3]
* RF of phase [24]: [V__3]

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V__3
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V__3


### Resulting Chains:eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) 
* [[24],25]
* [[23],25]
* [25]


### Merging Chains  eval_mem_true24_copy_mono_bb12_in/3 into  External patterns of execution 
* [[25,[24]]] --> 1 
* [[25]] --> 2 
* [[25,[23]]] --> 3 


### Specialization of cost equations eval_mem_true24_copy_mono_bb29_in/12 
* CE 24 is refined into CE [35] 
* CE 23 is refined into CE [36] 


#### Refined cost equations eval_mem_true24_copy_mono_bb29_in/12 
* CE 35: eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,V_99,V_105,B,C,D,E,F,G,H) = 1+ eval_mem_true24_copy_mono_bb29_in(I,V_first_count_0,J,V_99,V_105,K,C,D,E,F,G,H)
     [V_99>=0,V_first_count_0+V_105=I,V_first_count_0+V_105=V__2,V_99+1=J,V_99+1=V__4,K=2,B=2] 
* CE 36: eval_mem_true24_copy_mono_bb29_in(A,B,C,D,E,F,G,B,H,D,E,E) = 0
     [D>=0,B+E=G,B+E=A,D+1=H,D+1=C,F=2] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb29_in/12 
* CEs [36] --> Loop 26 
* CEs [35] --> Loop 27 

#### Loops of eval_mem_true24_copy_mono_bb29_in/12 
* Loop 26: eval_mem_true24_copy_mono_bb29_in(A,B,C,D,E,F,G,B,H,D,E,E) [D>=0,B+E=G,B+E=A,D+1=H,D+1=C,F=2] 
* Loop 27: eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,V_99,V_105,B,C,D,E,F,G,H)->  eval_mem_true24_copy_mono_bb29_in(V__2',V_first_count_0,V__4',V_99,V_105,B',C,D,E,F,G,H)
                  [V_99>=0,V_first_count_0+V_105=V__2',V_first_count_0+V_105=V__2,V_99+1=V__4',V_99+1=V__4,B'=2,B=2] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,V_99,V_105,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,V_99,V_105,B,C,D,E,F,G,H) 


### Resulting Chains:eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,V_99,V_105,B,C,D,E,F,G,H) 
* [[27]]...
* [[27],26]
* [26]


### Merging Chains  eval_mem_true24_copy_mono_bb29_in/12 into  External patterns of execution 
* [[26],[26,[27]]] --> 1 
* [[[27]]] --> 2 


### Specialization of cost equations eval_mem_true24_copy_mono_bb33_in/14 
* CE 27 is refined into CE [37] 
* CE 26 is refined into CE [38] 
* CE 25 is refined into CE [39] 


#### Refined cost equations eval_mem_true24_copy_mono_bb33_in/14 
* CE 37: eval_mem_true24_copy_mono_bb33_in(A,B,C,D,E,F,G,A,B,C,D,E,F,H) = 0
     [7>=F,G=4] 
* CE 38: eval_mem_true24_copy_mono_bb33_in(A,B,C,D,E,F,G,A,B,C,D,E,F,F) = 0
     [7>=F,G=3] 
* CE 39: eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,B,C,D,E,F,G,H,I) = 1+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,J,B,C,D,E,F,G,H,I)
     [B>=3,V_count7_0>=8,4>=B,V_count7_0=J+8] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb33_in/14 
* CEs [39] --> Loop 28 
* CEs [37] --> Loop 29 
* CEs [38] --> Loop 30 

#### Loops of eval_mem_true24_copy_mono_bb33_in/14 
* Loop 28: eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,B,C,D,E,F,G,H,I)->  eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0',B,C,D,E,F,G,H,I)
                  [B>=3,V_count7_0>=8,4>=B,V_count7_0=V_count7_0'+8] 
* Loop 29: eval_mem_true24_copy_mono_bb33_in(A,B,C,D,E,F,G,A,B,C,D,E,F,H) [7>=F,G=4] 
* Loop 30: eval_mem_true24_copy_mono_bb33_in(A,B,C,D,E,F,G,A,B,C,D,E,F,F) [7>=F,G=3] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,B,C,D,E,F,G,H,I) 
* RF of phase [28]: [V_count7_0-7]

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,B,C,D,E,F,G,H,I) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V_count7_0-7


### Resulting Chains:eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,B,C,D,E,F,G,H,I) 
* [[28],30]
* [[28],29]
* [30]
* [29]


### Merging Chains  eval_mem_true24_copy_mono_bb33_in/14 into  External patterns of execution 
* [[30]] --> 1 
* [[30,[28]]] --> 2 
* [[29]] --> 3 
* [[29,[28]]] --> 4 


### Specialization of cost equations eval_mem_true24_copy_mono_bb55_in/14 
* CE 29 is refined into CE [40] 
* CE 28 is refined into CE [41] 


#### Refined cost equations eval_mem_true24_copy_mono_bb55_in/14 
* CE 40: eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,V_count7_1,B,C,D,E,F,G,H) = 1+ eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,I,J,C,D,E,F,G,H)
     [V_count7_1>=2,V_count7_1=I+1,J=4,B=4] 
* CE 41: eval_mem_true24_copy_mono_bb55_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F) = 0
     [1>=G,H=4] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb55_in/14 
* CEs [41] --> Loop 31 
* CEs [40] --> Loop 32 

#### Loops of eval_mem_true24_copy_mono_bb55_in/14 
* Loop 31: eval_mem_true24_copy_mono_bb55_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F) [1>=G,H=4] 
* Loop 32: eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,V_count7_1,B,C,D,E,F,G,H)->  eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,V_count7_1',B',C,D,E,F,G,H)
                  [V_count7_1>=2,V_count7_1=V_count7_1'+1,B'=4,B=4] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,V_count7_1,B,C,D,E,F,G,H) 
* RF of phase [32]: [V_count7_1-1]

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,V_count7_1,B,C,D,E,F,G,H) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    V_count7_1-1


### Resulting Chains:eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,V_count7_1,B,C,D,E,F,G,H) 
* [[32],31]
* [31]


### Merging Chains  eval_mem_true24_copy_mono_bb55_in/14 into  External patterns of execution 
* [[31]] --> 1 
* [[31,[32]]] --> 2 


### Specialization of cost equations eval_mem_true24_copy_mono_bb27_in/4 
* CE 22 is refined into CE [42] 
* CE 18 is refined into CE [43,44,45] 
* CE 19 is refined into CE [46,47] 
* CE 20 is refined into CE [48,49,50,51,52] 
* CE 21 is refined into CE [53,54,55,56] 


#### Refined cost equations eval_mem_true24_copy_mono_bb27_in/4 
* CE 42: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 0
     [0>=V__4,B=6] 
* CE 43: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 3+ eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,C,D,E,V__2,V_first_count_0,V__4,F,G,H):1+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,I,J,K,L,V__2,V_first_count_0,V__4,M,N,O,P):3+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,Q,R)
     [V_first_count_0+7>=V__2,V__4>=1,V__2=V_first_count_0+O,V__2=V_first_count_0+N,V__2=V_first_count_0+K,V__2=V_first_count_0+J,V__2=V_first_count_0+H,V__2=V_first_count_0+G,V__2=V_first_count_0+D,V__4=Q+1,V__4=M+1,V__4=I+1,V__4=F+1,V__4=C+1,R=6,L=4,E=2,B=6] 
* CE 44: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 3+ eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,C,D,E,V__2,V_first_count_0,V__4,F,G,H):1+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,I,J,K,L,V__2,V_first_count_0,V__4,M,N,O,P):4+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,Q,R)
     [V__2>=V_first_count_0+O+8,O>=0,V__4>=1,7>=O,V__2=V_first_count_0+N,V__2=V_first_count_0+K,V__2=V_first_count_0+J,V__2=V_first_count_0+H,V__2=V_first_count_0+G,V__2=V_first_count_0+D,V__4=Q+1,V__4=M+1,V__4=I+1,V__4=F+1,V__4=C+1,R=6,L=4,E=2,B=6] 
* CE 45: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 3+ eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,C,D,E,F,G,H,I,J,K,L):2
     [D>=0,V__2=V_first_count_0+E,D+1=C,D+1=V__4,M=6,N=4,F=2,B=6] 
* CE 46: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 2+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,C,D,E,F,V__2,V_first_count_0,V__4,G,H,I,J):3+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,K,L)
     [V_first_count_0+7>=V__2,V__4>=1,V__2=V_first_count_0+I,V__2=V_first_count_0+H,V__2=V_first_count_0+E,V__2=V_first_count_0+D,V__4=K+1,V__4=G+1,V__4=C+1,L=6,F=4,B=6] 
* CE 47: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 2+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,C,D,E,F,V__2,V_first_count_0,V__4,G,H,I,J):4+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,K,L)
     [V__2>=V_first_count_0+I+8,I>=0,V__4>=1,7>=I,V__2=V_first_count_0+H,V__2=V_first_count_0+E,V__2=V_first_count_0+D,V__4=K+1,V__4=G+1,V__4=C+1,L=6,F=4,B=6] 
* CE 48: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 4+ eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,C,D,E,V__2,V_first_count_0,V__4,F,G,H):1+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,I,J,K,L,V__2,V_first_count_0,V__4,M,N,O,P):1+ eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,Q,R,S,T,U,V__2,V_first_count_0,V__4,V,W,X):1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,Y,Z)
     [V_first_count_0+1>=V__2,V__4>=1,V__2=V_first_count_0+X,V__2=V_first_count_0+W,V__2=V_first_count_0+T,V__2=V_first_count_0+S,V__2=V_first_count_0+R,V__2=V_first_count_0+P,V__2=V_first_count_0+O,V__2=V_first_count_0+N,V__2=V_first_count_0+K,V__2=V_first_count_0+J,V__2=V_first_count_0+H,V__2=V_first_count_0+G,V__2=V_first_count_0+D,V__4=Y+1,V__4=V+1,V__4=Q+1,V__4=M+1,V__4=I+1,V__4=F+1,V__4=C+1,Z=6,U=4,L=3,E=2,B=6] 
* CE 49: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 4+ eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,C,D,E,V__2,V_first_count_0,V__4,F,G,H):1+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,I,J,K,L,V__2,V_first_count_0,V__4,M,N,O,P):1+ eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,Q,R,S,T,U,V__2,V_first_count_0,V__4,V,W,X):2+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,Y,Z)
     [V__2>=V_first_count_0+2,V_first_count_0+7>=V__2,V__4>=1,V__2=V_first_count_0+X,V__2=V_first_count_0+W,V__2=V_first_count_0+T,V__2=V_first_count_0+S,V__2=V_first_count_0+R,V__2=V_first_count_0+P,V__2=V_first_count_0+O,V__2=V_first_count_0+N,V__2=V_first_count_0+K,V__2=V_first_count_0+J,V__2=V_first_count_0+H,V__2=V_first_count_0+G,V__2=V_first_count_0+D,V__4=Y+1,V__4=V+1,V__4=Q+1,V__4=M+1,V__4=I+1,V__4=F+1,V__4=C+1,Z=6,U=4,L=3,E=2,B=6] 
* CE 50: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 4+ eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,C,D,E,V__2,V_first_count_0,V__4,F,G,H):1+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,I,J,K,L,V__2,V_first_count_0,V__4,M,N,O,O):2+ eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,P,Q,O,O,R,V__2,V_first_count_0,V__4,S,T,O):1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,U,V)
     [V__2>=V_first_count_0+O+8,O>=0,V__4>=1,1>=O,V__2=V_first_count_0+T,V__2=V_first_count_0+Q,V__2=V_first_count_0+N,V__2=V_first_count_0+K,V__2=V_first_count_0+J,V__2=V_first_count_0+H,V__2=V_first_count_0+G,V__2=V_first_count_0+D,V__4=U+1,V__4=S+1,V__4=P+1,V__4=M+1,V__4=I+1,V__4=F+1,V__4=C+1,V=6,R=4,L=3,E=2,B=6] 
* CE 51: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 4+ eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,C,D,E,V__2,V_first_count_0,V__4,F,G,H):1+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,I,J,K,L,V__2,V_first_count_0,V__4,M,N,O,O):2+ eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,P,Q,O,O,R,V__2,V_first_count_0,V__4,S,T,O):2+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,U,V)
     [V__2>=V_first_count_0+O+8,O>=2,V__4>=1,7>=O,V__2=V_first_count_0+T,V__2=V_first_count_0+Q,V__2=V_first_count_0+N,V__2=V_first_count_0+K,V__2=V_first_count_0+J,V__2=V_first_count_0+H,V__2=V_first_count_0+G,V__2=V_first_count_0+D,V__4=U+1,V__4=S+1,V__4=P+1,V__4=M+1,V__4=I+1,V__4=F+1,V__4=C+1,V=6,R=4,L=3,E=2,B=6] 
* CE 52: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 4+ eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,C,D,E,F,G,H,I,J,K,L):2
     [D>=0,V__2=V_first_count_0+E,D+1=C,D+1=V__4,M=6,N=4,O=3,F=2,B=6] 
* CE 53: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 3+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,C,D,E,F,V__2,V_first_count_0,V__4,G,H,I,J):1+ eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,K,L,M,N,O,V__2,V_first_count_0,V__4,P,Q,R):1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,S,T)
     [V_first_count_0+1>=V__2,V__4>=1,V__2=V_first_count_0+R,V__2=V_first_count_0+Q,V__2=V_first_count_0+N,V__2=V_first_count_0+M,V__2=V_first_count_0+L,V__2=V_first_count_0+J,V__2=V_first_count_0+I,V__2=V_first_count_0+H,V__2=V_first_count_0+E,V__2=V_first_count_0+D,V__4=S+1,V__4=P+1,V__4=K+1,V__4=G+1,V__4=C+1,T=6,O=4,F=3,B=6] 
* CE 54: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 3+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,C,D,E,F,V__2,V_first_count_0,V__4,G,H,I,J):1+ eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,K,L,M,N,O,V__2,V_first_count_0,V__4,P,Q,R):2+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,S,T)
     [V__2>=V_first_count_0+2,V_first_count_0+7>=V__2,V__4>=1,V__2=V_first_count_0+R,V__2=V_first_count_0+Q,V__2=V_first_count_0+N,V__2=V_first_count_0+M,V__2=V_first_count_0+L,V__2=V_first_count_0+J,V__2=V_first_count_0+I,V__2=V_first_count_0+H,V__2=V_first_count_0+E,V__2=V_first_count_0+D,V__4=S+1,V__4=P+1,V__4=K+1,V__4=G+1,V__4=C+1,T=6,O=4,F=3,B=6] 
* CE 55: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 3+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,C,D,E,F,V__2,V_first_count_0,V__4,G,H,I,I):2+ eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,J,K,I,I,L,V__2,V_first_count_0,V__4,M,N,I):1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,O,P)
     [V__2>=V_first_count_0+I+8,I>=0,V__4>=1,1>=I,V__2=V_first_count_0+N,V__2=V_first_count_0+K,V__2=V_first_count_0+H,V__2=V_first_count_0+E,V__2=V_first_count_0+D,V__4=O+1,V__4=M+1,V__4=J+1,V__4=G+1,V__4=C+1,P=6,L=4,F=3,B=6] 
* CE 56: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) = 3+ eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,C,D,E,F,V__2,V_first_count_0,V__4,G,H,I,I):2+ eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,J,K,I,I,L,V__2,V_first_count_0,V__4,M,N,I):2+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,O,P)
     [V__2>=V_first_count_0+I+8,I>=2,V__4>=1,7>=I,V__2=V_first_count_0+N,V__2=V_first_count_0+K,V__2=V_first_count_0+H,V__2=V_first_count_0+E,V__2=V_first_count_0+D,V__4=O+1,V__4=M+1,V__4=J+1,V__4=G+1,V__4=C+1,P=6,L=4,F=3,B=6] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb27_in/4 
* CEs [44,47,50,51,55,56] --> Loop 33 
* CEs [43,46,48,49,53,54] --> Loop 34 
* CEs [45,52] --> Loop 35 
* CEs [42] --> Loop 36 

#### Loops of eval_mem_true24_copy_mono_bb27_in/4 
* Loop 33: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B)->  eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4',B')
                  [V__2>=V_first_count_0+8,V__4>=1,V__4=V__4'+1,B'=6,B=6] 
* Loop 34: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B)->  eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4',B')
                  [V_first_count_0+7>=V__2,V__4>=1,V__4=V__4'+1,B'=6,B=6] 
* Loop 35: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) [V__4>=1,B=6] 
* Loop 36: eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) [0>=V__4,B=6] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) 
* RF of phase [33]: [V__4]
* RF of phase [34]: [V__4]

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    V__4
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    V__4


### Resulting Chains:eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) 
* [[34],36]
* [[34],35]...
* [[33],36]
* [[33],35]...
* [36]
* [35]...


### Merging Chains  eval_mem_true24_copy_mono_bb27_in/4 into  External patterns of execution 
* [[36]] --> 1 
* [[36,[34]]] --> 2 
* [[36,[33]]] --> 3 
* [[35]] --> 4 
* [[35,[34]]] --> 5 
* [[35,[33]]] --> 6 


### Specialization of cost equations eval_mem_true24_copy_mono_bb26_in/4 
* CE 15 is refined into CE [57,58,59,60,61,62] 


#### Refined cost equations eval_mem_true24_copy_mono_bb26_in/4 
* CE 57: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) = 1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__212,C):1
     [0>=V__212,C=6] 
* CE 58: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) = 1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__212,C):2
     [V_first_count_0+7>=V__2,V__212>=1,C=6] 
* CE 59: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) = 1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__212,C):3
     [V__2>=V_first_count_0+8,V__212>=1,C=6] 
* CE 60: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) = 1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__212,C):4
     [V__212>=1,C=6] 
* CE 61: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) = 1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__212,C):5
     [V_first_count_0+7>=V__2,V__212>=2,C=6] 
* CE 62: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) = 1+ eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__212,C):6
     [V__2>=V_first_count_0+8,V__212>=2,C=6] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb26_in/4 
* CEs [60,61,62] --> Loop 37 
* CEs [59] --> Loop 38 
* CEs [58] --> Loop 39 
* CEs [57] --> Loop 40 

#### Loops of eval_mem_true24_copy_mono_bb26_in/4 
* Loop 37: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) [V__212>=1] 
* Loop 38: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) [V__2>=V_first_count_0+8,V__212>=1] 
* Loop 39: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) [V_first_count_0+7>=V__2,V__212>=1] 
* Loop 40: eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) [0>=V__212] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) 

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) 


### Resulting Chains:eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B) 
* [40]
* [39]
* [38]
* [37]...


### Merging Chains  eval_mem_true24_copy_mono_bb26_in/4 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 
* [[38]] --> 3 
* [[37]] --> 4 


### Specialization of cost equations eval_mem_true24_copy_mono_bb9_in/3 
* CE 10 is refined into CE [63] 
* CE 11 is refined into CE [64,65,66] 
* CE 12 is refined into CE [67,68,69,70] 


#### Refined cost equations eval_mem_true24_copy_mono_bb9_in/3 
* CE 63: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) = 0
     [] 
* CE 64: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) = 1+ eval_mem_true24_copy_mono_bb12_in(V__2,V__212,C):1
     [V__212>=1,1>=V__2,C=6] 
* CE 65: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) = 1+ eval_mem_true24_copy_mono_bb12_in(V__2,V__212,C):2
     [0>=V__212,C=6] 
* CE 66: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) = 1+ eval_mem_true24_copy_mono_bb12_in(V__2,V__212,C):3
     [V__212>=1,V__2>=2,C=6] 
* CE 67: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) = 0+ eval_mem_true24_copy_mono_bb26_in(V__2,V__212,C,B):1
     [0>=V__212] 
* CE 68: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) = 0+ eval_mem_true24_copy_mono_bb26_in(V__2,V__212,C,B):2
     [C+7>=V__2,V__212>=1] 
* CE 69: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) = 0+ eval_mem_true24_copy_mono_bb26_in(V__2,V__212,C,B):3
     [V__2>=C+8,V__212>=1] 
* CE 70: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) = 0+ eval_mem_true24_copy_mono_bb26_in(V__2,V__212,C,B):4
     [V__212>=1] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb9_in/3 
* CEs [70] --> Loop 41 
* CEs [63,64,65,66,67,68,69] --> Loop 42 

#### Loops of eval_mem_true24_copy_mono_bb9_in/3 
* Loop 41: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) [V__212>=1] 
* Loop 42: eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) [] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) 

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) 


### Resulting Chains:eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B) 
* [42]
* [41]...


### Merging Chains  eval_mem_true24_copy_mono_bb9_in/3 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_mem_true24_copy_mono_bb7_in/4 
* CE 9 is refined into CE [71,72] 


#### Refined cost equations eval_mem_true24_copy_mono_bb7_in/4 
* CE 71: eval_mem_true24_copy_mono_bb7_in(V__111,V__17,V__2,B) = 0+ eval_mem_true24_copy_mono_bb9_in(V__2,C,B):1
     [] 
* CE 72: eval_mem_true24_copy_mono_bb7_in(V__111,V__17,V__2,B) = 0+ eval_mem_true24_copy_mono_bb9_in(V__2,C,B):2
     [C>=1] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb7_in/4 
* CEs [72] --> Loop 43 
* CEs [71] --> Loop 44 

#### Loops of eval_mem_true24_copy_mono_bb7_in/4 
* Loop 43: eval_mem_true24_copy_mono_bb7_in(V__111,V__17,V__2,B) [] 
* Loop 44: eval_mem_true24_copy_mono_bb7_in(V__111,V__17,V__2,B) [] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb7_in(V__111,V__17,V__2,B) 

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb7_in(V__111,V__17,V__2,B) 


### Resulting Chains:eval_mem_true24_copy_mono_bb7_in(V__111,V__17,V__2,B) 
* [44]
* [43]...


### Merging Chains  eval_mem_true24_copy_mono_bb7_in/4 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations eval_mem_true24_copy_mono_bb5_in/5 
* CE 8 is refined into CE [73,74] 


#### Refined cost equations eval_mem_true24_copy_mono_bb5_in/5 
* CE 73: eval_mem_true24_copy_mono_bb5_in(V__111,V__19,V__17,V__15,B) = 0+ eval_mem_true24_copy_mono_bb7_in(V__111,V__17,C,B):1
     [] 
* CE 74: eval_mem_true24_copy_mono_bb5_in(V__111,V__19,V__17,V__15,B) = 0+ eval_mem_true24_copy_mono_bb7_in(V__111,V__17,C,B):2
     [] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb5_in/5 
* CEs [74] --> Loop 45 
* CEs [73] --> Loop 46 

#### Loops of eval_mem_true24_copy_mono_bb5_in/5 
* Loop 45: eval_mem_true24_copy_mono_bb5_in(V__111,V__19,V__17,V__15,B) [] 
* Loop 46: eval_mem_true24_copy_mono_bb5_in(V__111,V__19,V__17,V__15,B) [] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb5_in(V__111,V__19,V__17,V__15,B) 

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb5_in(V__111,V__19,V__17,V__15,B) 


### Resulting Chains:eval_mem_true24_copy_mono_bb5_in(V__111,V__19,V__17,V__15,B) 
* [46]
* [45]...


### Merging Chains  eval_mem_true24_copy_mono_bb5_in/5 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


### Specialization of cost equations eval_mem_true24_copy_mono_bb3_in/5 
* CE 6 is refined into CE [75,76] 
* CE 7 is refined into CE [77,78] 


#### Refined cost equations eval_mem_true24_copy_mono_bb3_in/5 
* CE 75: eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B) = 0+ eval_mem_true24_copy_mono_bb5_in(C,V__08,D,V__04,B):1
     [C=V_y+V_h,D=0] 
* CE 76: eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B) = 0+ eval_mem_true24_copy_mono_bb5_in(C,V__08,D,V__04,B):2
     [C=V_y+V_h,D=0] 
* CE 77: eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B) = 0+ eval_mem_true24_copy_mono_bb5_in(V_h,V__08,V_y,V__04,B):1
     [] 
* CE 78: eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B) = 0+ eval_mem_true24_copy_mono_bb5_in(V_h,V__08,V_y,V__04,B):2
     [] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb3_in/5 
* CEs [76,78] --> Loop 47 
* CEs [75,77] --> Loop 48 

#### Loops of eval_mem_true24_copy_mono_bb3_in/5 
* Loop 47: eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B) [] 
* Loop 48: eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B) [] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B) 

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B) 


### Resulting Chains:eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B) 
* [48]
* [47]...


### Merging Chains  eval_mem_true24_copy_mono_bb3_in/5 into  External patterns of execution 
* [[48]] --> 1 
* [[47]] --> 2 


### Specialization of cost equations eval_mem_true24_copy_mono_bb0_in/5 
* CE 3 is refined into CE [79,80] 
* CE 4 is refined into CE [81,82] 
* CE 5 is refined into CE [83,84] 


#### Refined cost equations eval_mem_true24_copy_mono_bb0_in/5 
* CE 79: eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_copy_mono_bb3_in(V_y,V_h,C,D,B):1
     [C=V_x+V_w,D=0] 
* CE 80: eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_copy_mono_bb3_in(V_y,V_h,C,D,B):2
     [C=V_x+V_w,D=0] 
* CE 81: eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V_w,V_x,B):1
     [] 
* CE 82: eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V_w,V_x,B):2
     [] 
* CE 83: eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_copy_mono_bb5_in(V_h,V_w,V_y,V_x,B):1
     [] 
* CE 84: eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_mem_true24_copy_mono_bb5_in(V_h,V_w,V_y,V_x,B):2
     [] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_bb0_in/5 
* CEs [80,82,84] --> Loop 49 
* CEs [79,81,83] --> Loop 50 

#### Loops of eval_mem_true24_copy_mono_bb0_in/5 
* Loop 49: eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) [] 
* Loop 50: eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) [] 

### Ranking functions of CR eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) 

#### Partial ranking functions of CR eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) 


### Resulting Chains:eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B) 
* [50]
* [49]...


### Merging Chains  eval_mem_true24_copy_mono_bb0_in/5 into  External patterns of execution 
* [[50]] --> 1 
* [[49]] --> 2 


### Specialization of cost equations eval_mem_true24_copy_mono_start/10 
* CE 2 is refined into CE [85,86] 


#### Refined cost equations eval_mem_true24_copy_mono_start/10 
* CE 85: eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B) = 0+ eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B):1
     [] 
* CE 86: eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B) = 0+ eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B):2
     [] 

### Cost equations --> "Loop" of eval_mem_true24_copy_mono_start/10 
* CEs [86] --> Loop 51 
* CEs [85] --> Loop 52 

#### Loops of eval_mem_true24_copy_mono_start/10 
* Loop 51: eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B) [] 
* Loop 52: eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B) [] 

### Ranking functions of CR eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B) 

#### Partial ranking functions of CR eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B) 


### Resulting Chains:eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B) 
* [52]
* [51]...


### Merging Chains  eval_mem_true24_copy_mono_start/10 into  External patterns of execution 
* [[52]] --> 1 
* [[51]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [22] 

 * loop 22:eval_mem_true24_copy_mono_bb14_in(V__2,V__3,V_57,V_count_0,B,C,D) -> [eval_mem_true24_copy_mono_bb14_in(V__2',V__3',V_57',V_count_0',B',C',D')] 
1
#### Cost of phase [22]:eval_mem_true24_copy_mono_bb14_in(V__2,V__3,V_57,V_count_0,B,C,D) -> [eval_mem_true24_copy_mono_bb14_in(V__2',V__3',V_57',V_count_0',B',C',D')] 
1*it(22)+0
  Such that:it(22) =< V_count_0
it(22) =< V_count_0-V_count_0'

#### Cost of chains of eval_mem_true24_copy_mono_bb14_in(V__2,V__3,V_57,V_count_0,B,C,D):
* Chain [[22],21]: 1*it(22)+0
  Such that:it(22) =< V_count_0

  with precondition: [B=5,V__3=V_57+1,V__2=C,V__3=D+1,V__3>=1,V_count_0>=2,V__2>=V_count_0] 

* Chain [21]: 0
  with precondition: [B=5,V__3=V_57+1,V__2=C,V__3=D+1,1>=V_count_0,V__3>=1,V__2>=V_count_0] 


#### Cost of loops [24] 

 * loop 24:eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) -> [eval_mem_true24_copy_mono_bb12_in(V__2',V__3',B')] 
2
#### Cost of phase [24]:eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) -> [eval_mem_true24_copy_mono_bb12_in(V__2',V__3',B')] 
2*it(24)+0
  Such that:it(24) =< V__3
it(24) =< V__3-V__3'

#### Cost of loops [23] 

 * loop 23:eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) -> [eval_mem_true24_copy_mono_bb12_in(V__2',V__3',B')] 
1*s(2)+2
  Such that:s(2) =< V__2'

#### Cost of phase [23]:eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B) -> [eval_mem_true24_copy_mono_bb12_in(V__2',V__3',B')] 
2*it(23)+1*s(3)+0
  Such that:aux(1) =< V__2
it(23) =< V__3
it(23) =< V__3-V__3'
s(3) =< it(23)*aux(1)

#### Cost of chains of eval_mem_true24_copy_mono_bb12_in(V__2,V__3,B):
* Chain [[24],25]: 2*it(24)+0
  Such that:it(24) =< V__3

  with precondition: [B=6,1>=V__2,V__3>=1] 

* Chain [[23],25]: 2*it(23)+1*s(3)+0
  Such that:aux(1) =< V__2
it(23) =< V__3
s(3) =< it(23)*aux(1)

  with precondition: [B=6,V__2>=2,V__3>=1] 

* Chain [25]: 0
  with precondition: [B=6,0>=V__3] 


#### Cost of loops [27] 

 * loop 27:eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,V_99,V_105,B,C,D,E,F,G,H) -> [eval_mem_true24_copy_mono_bb29_in(V__2',V_first_count_0',V__4',V_99',V_105',B',C',D',E',F',G',H')] 
1
#### Cost of phase [27]:eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,V_99,V_105,B,C,D,E,F,G,H) -> [eval_mem_true24_copy_mono_bb29_in(V__2',V_first_count_0',V__4',V_99',V_105',B',C',D',E',F',G',H')] 
1*it(27)+0
#### Cost of phase [27]:eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,V_99,V_105,B,C,D,E,F,G,H) -> [eval_mem_true24_copy_mono_bb29_in(V__2',V_first_count_0',V__4',V_99',V_105',B',C',D',E',F',G',H')] 
1*it(27)+0
#### Cost of chains of eval_mem_true24_copy_mono_bb29_in(V__2,V_first_count_0,V__4,V_99,V_105,B,C,D,E,F,G,H):
* Chain [[27]]...: 1*it(27)+0
  with precondition: [V__2=V_105+V_first_count_0,V_99>=0,V__4=V_99+1,B=2] 

* Chain [[27],26]: 1*it(27)+0
  with precondition: [B=2,F+1=V__4,F=V_99,V__2=C,V_first_count_0=D,F+1=E,V__2=V_105+V_first_count_0,V__2=V_first_count_0+G,V__2=V_first_count_0+H,F>=0] 

* Chain [26]: 0
  with precondition: [B=2,V__4=V_99+1,V_first_count_0=D,V__4=E,V__4=F+1,V_105=G,V_105=H,V_105+V_first_count_0=V__2,V_105+V_first_count_0=C,V__4>=1] 


#### Cost of loops [28] 

 * loop 28:eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,B,C,D,E,F,G,H,I) -> [eval_mem_true24_copy_mono_bb33_in(V__2',V_first_count_0',V__4',V_99',V_105',V_count7_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [28]:eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,B,C,D,E,F,G,H,I) -> [eval_mem_true24_copy_mono_bb33_in(V__2',V_first_count_0',V__4',V_99',V_105',V_count7_0',B',C',D',E',F',G',H',I')] 
1*it(28)+0
  Such that:it(28) =< V_count7_0
it(28) =< V_count7_0-V_count7_0'

#### Cost of phase [28]:eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,B,C,D,E,F,G,H,I) -> [eval_mem_true24_copy_mono_bb33_in(V__2',V_first_count_0',V__4',V_99',V_105',V_count7_0',B',C',D',E',F',G',H',I')] 
1*it(28)+0
  Such that:it(28) =< V_count7_0
it(28) =< V_count7_0-V_count7_0'

#### Cost of chains of eval_mem_true24_copy_mono_bb33_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,B,C,D,E,F,G,H,I):
* Chain [[28],30]: 1*it(28)+0
  Such that:it(28) =< V_count7_0-H

  with precondition: [B=3,V__2=C,V_first_count_0=D,V__4=E,V_99=F,V_105=G,H=I,7>=H,H>=0,V_count7_0>=H+8] 

* Chain [[28],29]: 1*it(28)+0
  Such that:it(28) =< V_count7_0-H

  with precondition: [B=4,V__2=C,V_first_count_0=D,V__4=E,V_99=F,V_105=G,7>=H,H>=0,V_count7_0>=H+8] 

* Chain [30]: 0
  with precondition: [B=3,C=V__2,D=V_first_count_0,E=V__4,F=V_99,G=V_105,V_count7_0=H,V_count7_0=I,7>=V_count7_0] 

* Chain [29]: 0
  with precondition: [B=4,C=V__2,D=V_first_count_0,E=V__4,F=V_99,G=V_105,V_count7_0=H,7>=V_count7_0] 


#### Cost of loops [32] 

 * loop 32:eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,V_count7_1,B,C,D,E,F,G,H) -> [eval_mem_true24_copy_mono_bb55_in(V__2',V_first_count_0',V__4',V_99',V_105',V_count7_0',V_count7_1',B',C',D',E',F',G',H')] 
1
#### Cost of phase [32]:eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,V_count7_1,B,C,D,E,F,G,H) -> [eval_mem_true24_copy_mono_bb55_in(V__2',V_first_count_0',V__4',V_99',V_105',V_count7_0',V_count7_1',B',C',D',E',F',G',H')] 
1*it(32)+0
  Such that:it(32) =< V_count7_1
it(32) =< V_count7_1-V_count7_1'

#### Cost of chains of eval_mem_true24_copy_mono_bb55_in(V__2,V_first_count_0,V__4,V_99,V_105,V_count7_0,V_count7_1,B,C,D,E,F,G,H):
* Chain [[32],31]: 1*it(32)+0
  Such that:it(32) =< V_count7_1

  with precondition: [B=4,V__2=C,V_first_count_0=D,V__4=E,V_99=F,V_105=G,V_count7_0=H,V_count7_1>=2] 

* Chain [31]: 0
  with precondition: [B=4,C=V__2,D=V_first_count_0,E=V__4,F=V_99,G=V_105,H=V_count7_0,1>=V_count7_1] 


#### Cost of loops [34] 

 * loop 34:eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) -> [eval_mem_true24_copy_mono_bb27_in(V__2',V_first_count_0',V__4',B')] 
3*s(12)+2*s(11)+4
  Such that:s(10) =< V__2-V_first_count_0'
s(11) =< s(10)

#### Cost of phase [34]:eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) -> [eval_mem_true24_copy_mono_bb27_in(V__2',V_first_count_0',V__4',B')] 
4*it(34)+3*s(13)+2*s(14)+0
  Such that:it(34) =< V__4
it(34) =< V__4-V__4'
s(15) =< 7*V__4
s(15) =< 7*V__4-7*V__4'
s(14) =< s(15)

#### Cost of phase [34]:eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) -> [eval_mem_true24_copy_mono_bb27_in(V__2',V_first_count_0',V__4',B')] 
4*it(34)+3*s(13)+2*s(14)+0
  Such that:it(34) =< V__4
it(34) =< V__4-V__4'
s(15) =< 7*V__4
s(15) =< 7*V__4-7*V__4'
s(14) =< s(15)

#### Cost of loops [33] 

 * loop 33:eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) -> [eval_mem_true24_copy_mono_bb27_in(V__2',V_first_count_0',V__4',B')] 
3*s(33)+6*s(32)+2*s(31)+4
  Such that:s(29) =< 7
s(30) =< V__2-V_first_count_0'
s(31) =< s(29)
s(32) =< s(30)

#### Cost of phase [33]:eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) -> [eval_mem_true24_copy_mono_bb27_in(V__2',V_first_count_0',V__4',B')] 
4*it(33)+3*s(34)+6*s(35)+2*s(36)+0
  Such that:aux(8) =< V__2-V_first_count_0
aux(9) =< V__4
aux(10) =< V__4-V__4'
aux(7) =< aux(9)
it(33) =< aux(9)
aux(7) =< aux(10)
it(33) =< aux(10)
s(37) =< it(33)*aux(8)
s(38) =< aux(7)*7
s(36) =< s(38)
s(35) =< s(37)

#### Cost of phase [33]:eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B) -> [eval_mem_true24_copy_mono_bb27_in(V__2',V_first_count_0',V__4',B')] 
4*it(33)+3*s(34)+6*s(35)+2*s(36)+0
  Such that:aux(8) =< V__2-V_first_count_0
aux(9) =< V__4
aux(10) =< V__4-V__4'
aux(7) =< aux(9)
it(33) =< aux(9)
aux(7) =< aux(10)
it(33) =< aux(10)
s(37) =< it(33)*aux(8)
s(38) =< aux(7)*7
s(36) =< s(38)
s(35) =< s(37)

#### Cost of chains of eval_mem_true24_copy_mono_bb27_in(V__2,V_first_count_0,V__4,B):
* Chain [[34],36]: 4*it(34)+3*s(13)+2*s(14)+0
  Such that:it(34) =< V__4
s(15) =< 7*V__4
s(14) =< s(15)

  with precondition: [B=6,V__4>=1,V_first_count_0+7>=V__2] 

* Chain [[34],35]...: 4*aux(4)+4*it(34)+2*s(14)+0
  Such that:it(34) =< V__4
s(15) =< 7*V__4
s(14) =< s(15)

  with precondition: [B=6,V__4>=2,V_first_count_0+7>=V__2] 

* Chain [[33],36]: 4*it(33)+3*s(34)+6*s(35)+2*s(36)+0
  Such that:aux(8) =< V__2-V_first_count_0
aux(11) =< V__4
it(33) =< aux(11)
s(37) =< it(33)*aux(8)
s(38) =< aux(11)*7
s(36) =< s(38)
s(35) =< s(37)

  with precondition: [B=6,V__4>=1,V__2>=V_first_count_0+8] 

* Chain [[33],35]...: 4*aux(4)+4*it(33)+6*s(35)+2*s(36)+0
  Such that:aux(8) =< V__2-V_first_count_0
aux(12) =< V__4
it(33) =< aux(12)
s(37) =< it(33)*aux(8)
s(38) =< aux(12)*7
s(36) =< s(38)
s(35) =< s(37)

  with precondition: [B=6,V__4>=2,V__2>=V_first_count_0+8] 

* Chain [36]: 0
  with precondition: [B=6,0>=V__4] 

* Chain [35]...: 1*aux(4)+0
  with precondition: [B=6,V__4>=1] 


#### Cost of chains of eval_mem_true24_copy_mono_bb26_in(V__2,V__212,V_first_count_0,B):
* Chain [40]: 1
  with precondition: [0>=V__212] 

* Chain [39]: 4*s(39)+2*s(41)+3*s(42)+1
  Such that:s(39) =< V__212
s(40) =< 7*V__212
s(41) =< s(40)

  with precondition: [V__212>=1,V_first_count_0+7>=V__2] 

* Chain [38]: 4*s(45)+2*s(48)+6*s(49)+3*s(50)+1
  Such that:s(43) =< V__2-V_first_count_0
s(44) =< V__212
s(45) =< s(44)
s(46) =< s(45)*s(43)
s(47) =< s(44)*7
s(48) =< s(47)
s(49) =< s(46)

  with precondition: [V__212>=1,V__2>=V_first_count_0+8] 

* Chain [37]...: 9*s(51)+8*s(52)+2*s(54)+2*s(61)+6*s(62)+1
  Such that:s(56) =< V__2-V_first_count_0
s(53) =< 7*V__212
aux(13) =< V__212
s(52) =< aux(13)
s(59) =< s(52)*s(56)
s(60) =< aux(13)*7
s(61) =< s(60)
s(62) =< s(59)
s(54) =< s(53)

  with precondition: [V__212>=1] 


#### Cost of chains of eval_mem_true24_copy_mono_bb9_in(V__2,V__212,B):
* Chain [42]: 12*s(64)+1*s(67)+2*s(70)+12*s(71)+2*s(77)+1
  Such that:s(65) =< V__2
s(69) =< 7*V__212
aux(14) =< V__212
s(64) =< aux(14)
s(67) =< s(64)*s(65)
s(70) =< s(69)
s(76) =< aux(14)*7
s(77) =< s(76)

  with precondition: [] 

* Chain [41]...: 8*s(83)+2*s(86)+6*s(87)+2*s(88)+9*s(89)+1
  Such that:s(82) =< V__212
s(81) =< 7*V__212
s(83) =< s(82)
s(85) =< s(82)*7
s(86) =< s(85)
s(88) =< s(81)

  with precondition: [V__212>=1] 


#### Cost of chains of eval_mem_true24_copy_mono_bb7_in(V__111,V__17,V__2,B):
* Chain [44]: 12*s(93)+1*s(94)+2*s(95)+2*s(97)+12*s(98)+1
  with precondition: [] 

* Chain [43]...: 8*s(101)+2*s(103)+2*s(104)+15*s(105)+1
  with precondition: [] 


#### Cost of chains of eval_mem_true24_copy_mono_bb5_in(V__111,V__19,V__17,V__15,B):
* Chain [46]: 29*s(107)+1
  with precondition: [] 

* Chain [45]...: 27*s(112)+1
  with precondition: [] 


#### Cost of chains of eval_mem_true24_copy_mono_bb3_in(V_y,V_h,V__08,V__04,B):
* Chain [48]: 1*aux(15)+0
  with precondition: [] 

* Chain [47]...: 1*aux(16)+0
  with precondition: [] 


#### Cost of chains of eval_mem_true24_copy_mono_bb0_in(V_x,V_y,V_w,V_h,B):
* Chain [50]: 1*aux(17)+0
  with precondition: [] 

* Chain [49]...: 1*aux(18)+0
  with precondition: [] 


#### Cost of chains of eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B):
* Chain [52]: 1*s(126)+0
  with precondition: [] 

* Chain [51]...: 1*s(127)+0
  with precondition: [] 


Closed-form bounds of eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B): 
-------------------------------------
* Chain [52] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [51]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mem_true24_copy_mono_start(V_sourcex,V_sraster,V_id,V_x,V_y,V_w,V_h,V_zero,V_one,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 303 ms.
* Invariants computed in 278 ms.
   - Backward Invariants 143 ms.
   - Transitive Invariants 61 ms.
* Refinement performed in 793 ms.
* Termination proved in 64 ms.
* Upper bounds computed in 593 ms.
   - Equation cost structures 307 ms.
   - Phase cost structures 322 ms.
   - Chain cost structures 144 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 2327 ms.

