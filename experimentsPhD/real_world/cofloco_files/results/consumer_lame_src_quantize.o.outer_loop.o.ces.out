Warning: Ignored call to eval_outer_loop_stop/1 in equation eval_outer_loop_23/1 
Warning: Ignored call to eval_outer_loop_stop/1 in equation eval_outer_loop_67/1 
Warning: Ignored call to eval_outer_loop_stop/1 in equation eval_outer_loop_79/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_outer_loop_5/10,eval_outer_loop_6/10,eval_outer_loop_7/10,eval_outer_loop_8/10,eval_outer_loop_bb4_in/10]
1. recursive  : [eval_outer_loop_14/6,eval_outer_loop_15/6,eval_outer_loop_2/4,eval_outer_loop_27/5,eval_outer_loop_28/5,eval_outer_loop_29/5,eval_outer_loop_3/4,eval_outer_loop_30/5,eval_outer_loop_34/5,eval_outer_loop_35/5,eval_outer_loop_37/7,eval_outer_loop_38/7,eval_outer_loop_39/6,eval_outer_loop_40/6,eval_outer_loop_41/6,eval_outer_loop_42/6,eval_outer_loop_47/8,eval_outer_loop_48/8,eval_outer_loop_49/9,eval_outer_loop_52/9,eval_outer_loop_53/10,eval_outer_loop_54/9,eval_outer_loop_55/10,eval_outer_loop_63/9,eval_outer_loop_64/9,eval_outer_loop_bb14_in/5,eval_outer_loop_bb16_in/6,eval_outer_loop_bb18_in/6,eval_outer_loop_bb1_in/4,eval_outer_loop_bb20_in/7,eval_outer_loop_bb22_in/8,eval_outer_loop_bb27_in/12,eval_outer_loop_bb29_in/10,eval_outer_loop_bb30_in/9,eval_outer_loop_bb7_in/4,loop_cont_eval_outer_loop_bb4_in/7]
2. non_recursive  : [eval_outer_loop_23/1]
3. non_recursive  : [eval_outer_loop_22/1]
4. non_recursive  : [eval_outer_loop_79/1]
5. non_recursive  : [eval_outer_loop_78/1]
6. non_recursive  : [eval_outer_loop_67/1]
7. non_recursive  : [eval_outer_loop_66/1]
8. non_recursive  : [loop_cont_eval_outer_loop_bb1_in/2]
9. non_recursive  : [eval_outer_loop_bb0_in/2]
10. non_recursive  : [eval_outer_loop_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_outer_loop_bb4_in/10
1. SCC is partially evaluated into eval_outer_loop_bb1_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_outer_loop_67/1
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_outer_loop_bb1_in/2
9. SCC is partially evaluated into eval_outer_loop_bb0_in/2
10. SCC is partially evaluated into eval_outer_loop_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_outer_loop_bb4_in/10 
* CE 24 is refined into CE [26] 
* CE 23 is refined into CE [27] 


#### Refined cost equations eval_outer_loop_bb4_in/10 
* CE 26: eval_outer_loop_bb4_in(A,B,C,D,E,A,B,C,D,F) = 0
     [D>=576,E=2] 
* CE 27: eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,V_i_0,B,C,D,E,F,G) = 1+ eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,H,I,C,D,E,F,G)
     [V_i_0>=0,575>=V_i_0,V_i_0+1=H,I=2,B=2] 

### Cost equations --> "Loop" of eval_outer_loop_bb4_in/10 
* CEs [27] --> Loop 17 
* CEs [26] --> Loop 18 

#### Loops of eval_outer_loop_bb4_in/10 
* Loop 17: eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,V_i_0,B,C,D,E,F,G)->  eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,V_i_0',B',C,D,E,F,G)
                  [V_i_0>=0,575>=V_i_0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 18: eval_outer_loop_bb4_in(A,B,C,D,E,A,B,C,D,F) [D>=576,E=2] 

### Ranking functions of CR eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,V_i_0,B,C,D,E,F,G) 
* RF of phase [17]: [-V_i_0+576]

#### Partial ranking functions of CR eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,V_i_0,B,C,D,E,F,G) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    -V_i_0+576


### Resulting Chains:eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,V_i_0,B,C,D,E,F,G) 
* [[17],18]


### Merging Chains  eval_outer_loop_bb4_in/10 into  External patterns of execution 
* [[18,[17]]] --> 1 


### Specialization of cost equations eval_outer_loop_bb1_in/4 
* CE 16 is refined into CE [28] 
* CE 18 is refined into CE [29] 
* CE 17 is refined into CE [30] 
* CE 19 is refined into CE [31] 
* CE 20 is refined into CE [32] 
* CE 6 is refined into CE [33] 
* CE 7 is refined into CE [34] 
* CE 12 is refined into CE [35] 
* CE 14 is refined into CE [36] 
* CE 13 is refined into CE [37] 
* CE 15 is refined into CE [38] 
* CE 4 is refined into CE [39] 
* CE 8 is refined into CE [40] 
* CE 10 is refined into CE [41] 
* CE 5 is refined into CE [42] 
* CE 9 is refined into CE [43] 
* CE 11 is refined into CE [44] 


#### Refined cost equations eval_outer_loop_bb1_in/4 
* CE 28: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 1+ eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,C,D,V_targ_bits,V_notdone_0,V_best_over_0,E,F):1
     [V_notdone_0>=1,E=576,D=2,C=0,B=4] 
* CE 29: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 0
     [V_notdone_0>=1,B=4] 
* CE 30: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 1+ eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,C,D,V_targ_bits,V_notdone_0,V_best_over_0,E,F):1
     [0>=V_notdone_0+1,E=576,D=2,C=0,B=4] 
* CE 31: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 0
     [0>=V_notdone_0+1,B=4] 
* CE 32: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 0
     [B=3,V_notdone_0=0] 
* CE 33: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 1+ eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,C,B)
     [V_notdone_0>=1] 
* CE 34: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 1+ eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,C,B)
     [0>=V_notdone_0+1] 
* CE 35: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 2+ eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,C,D,V_targ_bits,V_notdone_0,V_best_over_0,E,F):1+ eval_outer_loop_bb1_in(V_targ_bits,G,H,B)
     [V_notdone_0>=1,G=1,E=576,D=2,C=0] 
* CE 36: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 1+ eval_outer_loop_bb1_in(V_targ_bits,C,D,B)
     [V_notdone_0>=1,C=1] 
* CE 37: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 2+ eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,C,D,V_targ_bits,V_notdone_0,V_best_over_0,E,F):1+ eval_outer_loop_bb1_in(V_targ_bits,G,H,B)
     [0>=V_notdone_0+1,G=1,E=576,D=2,C=0] 
* CE 38: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 1+ eval_outer_loop_bb1_in(V_targ_bits,C,D,B)
     [0>=V_notdone_0+1,C=1] 
* CE 39: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 2+ eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,C,D,V_targ_bits,V_notdone_0,V_best_over_0,E,F):1+ eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,G,B)
     [V_notdone_0>=1,E=576,D=2,C=0] 
* CE 40: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 2+ eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,C,D,V_targ_bits,V_notdone_0,V_best_over_0,E,F):1+ eval_outer_loop_bb1_in(V_targ_bits,G,H,B)
     [V_notdone_0>=1,G=0,E=576,D=2,C=0] 
* CE 41: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 1+ eval_outer_loop_bb1_in(V_targ_bits,C,D,B)
     [V_notdone_0>=1,C=0] 
* CE 42: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 2+ eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,C,D,V_targ_bits,V_notdone_0,V_best_over_0,E,F):1+ eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,G,B)
     [0>=V_notdone_0+1,E=576,D=2,C=0] 
* CE 43: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 2+ eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,C,D,V_targ_bits,V_notdone_0,V_best_over_0,E,F):1+ eval_outer_loop_bb1_in(V_targ_bits,G,H,B)
     [0>=V_notdone_0+1,G=0,E=576,D=2,C=0] 
* CE 44: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) = 1+ eval_outer_loop_bb1_in(V_targ_bits,C,D,B)
     [0>=V_notdone_0+1,C=0] 

### Cost equations --> "Loop" of eval_outer_loop_bb1_in/4 
* CEs [33,39] --> Loop 19 
* CEs [34,42] --> Loop 20 
* CEs [35,36] --> Loop 21 
* CEs [37,38] --> Loop 22 
* CEs [40,41] --> Loop 23 
* CEs [43,44] --> Loop 24 
* CEs [28,29] --> Loop 25 
* CEs [30,31] --> Loop 26 
* CEs [32] --> Loop 27 

#### Loops of eval_outer_loop_bb1_in/4 
* Loop 19: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B)->  eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0',B)
                  [V_notdone_0>=1] 
* Loop 20: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B)->  eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0',B)
                  [0>=V_notdone_0+1] 
* Loop 21: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B)->  eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0',V_best_over_0',B)
                  [V_notdone_0>=1,V_notdone_0'=1] 
* Loop 22: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B)->  eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0',V_best_over_0',B)
                  [0>=V_notdone_0+1,V_notdone_0'=1] 
* Loop 23: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B)->  eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0',V_best_over_0',B)
                  [V_notdone_0>=1,V_notdone_0'=0] 
* Loop 24: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B)->  eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0',V_best_over_0',B)
                  [0>=V_notdone_0+1,V_notdone_0'=0] 
* Loop 25: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) [V_notdone_0>=1,B=4] 
* Loop 26: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) [0>=V_notdone_0+1,B=4] 
* Loop 27: eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) [B=3,V_notdone_0=0] 

### Ranking functions of CR eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) 

#### Partial ranking functions of CR eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) 


### Resulting Chains:eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) 
* [[19,21]]...
* [[19,21],25]
* [[19,21],23,27]
* [25]
* [23,27]


### Merging Chains  eval_outer_loop_bb1_in/4 into  External patterns of execution 
* [[27,23],[27,23,[19,21]]] --> 1 
* [[25],[25,[19,21]]] --> 2 
* [[[19,21]]] --> 3 


### Specialization of cost equations eval_outer_loop_67/1 
* CE 25 is refined into CE [45] 


#### Refined cost equations eval_outer_loop_67/1 
* CE 45: eval_outer_loop_67(B) = 0
     [] 

### Cost equations --> "Loop" of eval_outer_loop_67/1 
* CEs [45] --> Loop 28 

#### Loops of eval_outer_loop_67/1 
* Loop 28: eval_outer_loop_67(B) [] 

### Ranking functions of CR eval_outer_loop_67(B) 

#### Partial ranking functions of CR eval_outer_loop_67(B) 


### Resulting Chains:eval_outer_loop_67(B) 
* [28]


### Merging Chains  eval_outer_loop_67/1 into  External patterns of execution 
* [[28]] --> 1 


### Specialization of cost equations loop_cont_eval_outer_loop_bb1_in/2 
* CE 22 is refined into CE [46] 
* CE 21 is refined into CE [47] 


#### Refined cost equations loop_cont_eval_outer_loop_bb1_in/2 
* CE 46: loop_cont_eval_outer_loop_bb1_in(C,A) = 0
     [C=4] 
* CE 47: loop_cont_eval_outer_loop_bb1_in(C,A) = 0+ eval_outer_loop_67(A):1
     [C=3] 

### Cost equations --> "Loop" of loop_cont_eval_outer_loop_bb1_in/2 
* CEs [46] --> Loop 29 
* CEs [47] --> Loop 30 

#### Loops of loop_cont_eval_outer_loop_bb1_in/2 
* Loop 29: loop_cont_eval_outer_loop_bb1_in(C,A) [C=4] 
* Loop 30: loop_cont_eval_outer_loop_bb1_in(C,A) [C=3] 

### Ranking functions of CR loop_cont_eval_outer_loop_bb1_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_outer_loop_bb1_in(C,A) 


### Resulting Chains:loop_cont_eval_outer_loop_bb1_in(C,A) 
* [30]
* [29]


### Merging Chains  loop_cont_eval_outer_loop_bb1_in/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_outer_loop_bb0_in/2 
* CE 3 is refined into CE [48,49,50] 


#### Refined cost equations eval_outer_loop_bb0_in/2 
* CE 48: eval_outer_loop_bb0_in(V_targ_bits,B) = 1+ eval_outer_loop_bb1_in(V_targ_bits,C,D,E):1+ loop_cont_eval_outer_loop_bb1_in(F,B):1
     [F=3,E=3,D=100,C=1] 
* CE 49: eval_outer_loop_bb0_in(V_targ_bits,B) = 1+ eval_outer_loop_bb1_in(V_targ_bits,C,D,E):2+ loop_cont_eval_outer_loop_bb1_in(F,B):2
     [F=4,E=4,D=100,C=1] 
* CE 50: eval_outer_loop_bb0_in(V_targ_bits,B) = 1+ eval_outer_loop_bb1_in(V_targ_bits,C,D,E):3
     [D=100,C=1] 

### Cost equations --> "Loop" of eval_outer_loop_bb0_in/2 
* CEs [50] --> Loop 31 
* CEs [48,49] --> Loop 32 

#### Loops of eval_outer_loop_bb0_in/2 
* Loop 31: eval_outer_loop_bb0_in(V_targ_bits,B) [] 
* Loop 32: eval_outer_loop_bb0_in(V_targ_bits,B) [] 

### Ranking functions of CR eval_outer_loop_bb0_in(V_targ_bits,B) 

#### Partial ranking functions of CR eval_outer_loop_bb0_in(V_targ_bits,B) 


### Resulting Chains:eval_outer_loop_bb0_in(V_targ_bits,B) 
* [32]
* [31]...


### Merging Chains  eval_outer_loop_bb0_in/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


### Specialization of cost equations eval_outer_loop_start/3 
* CE 2 is refined into CE [51,52] 


#### Refined cost equations eval_outer_loop_start/3 
* CE 51: eval_outer_loop_start(V_targ_bits,V_ch,B) = 0+ eval_outer_loop_bb0_in(V_targ_bits,B):1
     [] 
* CE 52: eval_outer_loop_start(V_targ_bits,V_ch,B) = 0+ eval_outer_loop_bb0_in(V_targ_bits,B):2
     [] 

### Cost equations --> "Loop" of eval_outer_loop_start/3 
* CEs [52] --> Loop 33 
* CEs [51] --> Loop 34 

#### Loops of eval_outer_loop_start/3 
* Loop 33: eval_outer_loop_start(V_targ_bits,V_ch,B) [] 
* Loop 34: eval_outer_loop_start(V_targ_bits,V_ch,B) [] 

### Ranking functions of CR eval_outer_loop_start(V_targ_bits,V_ch,B) 

#### Partial ranking functions of CR eval_outer_loop_start(V_targ_bits,V_ch,B) 


### Resulting Chains:eval_outer_loop_start(V_targ_bits,V_ch,B) 
* [34]
* [33]...


### Merging Chains  eval_outer_loop_start/3 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,V_i_0,B,C,D,E,F,G) -> [eval_outer_loop_bb4_in(V_targ_bits',V_notdone_0',V_best_over_0',V_i_0',B',C',D',E',F',G')] 
1
#### Cost of phase [17]:eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,V_i_0,B,C,D,E,F,G) -> [eval_outer_loop_bb4_in(V_targ_bits',V_notdone_0',V_best_over_0',V_i_0',B',C',D',E',F',G')] 
1*it(17)+0
  Such that:it(17) =< -V_i_0+576
it(17) =< -V_i_0+V_i_0'

#### Cost of chains of eval_outer_loop_bb4_in(V_targ_bits,V_notdone_0,V_best_over_0,V_i_0,B,C,D,E,F,G):
* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< -V_i_0+576

  with precondition: [B=2,F=576,V_targ_bits=C,V_notdone_0=D,V_best_over_0=E,575>=V_i_0,V_i_0>=0] 


#### Cost of loops [19,21] 

 * loop 19:eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) -> [eval_outer_loop_bb1_in(V_targ_bits',V_notdone_0',V_best_over_0',B')] 
578
 * loop 21:eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) -> [eval_outer_loop_bb1_in(V_targ_bits',V_notdone_0',V_best_over_0',B')] 
578
#### Cost of phase [19,21]:eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) -> [eval_outer_loop_bb1_in(V_targ_bits',V_notdone_0',V_best_over_0',B')] 
1156*it(19)+0
#### Cost of phase [19,21]:eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) -> [eval_outer_loop_bb1_in(V_targ_bits',V_notdone_0',V_best_over_0',B')] 
1156*it(19)+0
#### Cost of phase [19,21]:eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B) -> [eval_outer_loop_bb1_in(V_targ_bits',V_notdone_0',V_best_over_0',B')] 
1156*it(19)+0
#### Cost of chains of eval_outer_loop_bb1_in(V_targ_bits,V_notdone_0,V_best_over_0,B):
* Chain [[19,21]]...: 1156*it(19)+0
  with precondition: [V_notdone_0>=1] 

* Chain [[19,21],25]: 1156*it(19)+577
  with precondition: [V_notdone_0=1,B=4] 

* Chain [[19,21],23,27]: 1156*it(19)+578
  with precondition: [V_notdone_0=1,B=3] 

* Chain [25]: 577
  with precondition: [V_notdone_0=1,B=4] 

* Chain [23,27]: 578
  with precondition: [V_notdone_0=1,B=3] 


#### Cost of chains of eval_outer_loop_67(B):
* Chain [28]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_outer_loop_bb1_in(C,A):
* Chain [30]: 0
  with precondition: [C=3] 

* Chain [29]: 0
  with precondition: [C=4] 


#### Cost of chains of eval_outer_loop_bb0_in(V_targ_bits,B):
* Chain [32]: 1*aux(3)+0
  with precondition: [] 

* Chain [31]...: 1156*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_outer_loop_start(V_targ_bits,V_ch,B):
* Chain [34]: 1*s(10)+0
  with precondition: [] 

* Chain [33]...: 1156*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_outer_loop_start(V_targ_bits,V_ch,B): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_outer_loop_start(V_targ_bits,V_ch,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 270 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 73 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 26 ms.
   - Equation cost structures 8 ms.
   - Phase cost structures 11 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 469 ms.

