Warning: Ignored call to eval_TIFFYCbCrToRGBInit_stop/1 in equation loop_cont_eval_TIFFYCbCrToRGBInit_bb4_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_TIFFYCbCrToRGBInit_bb1_in/2]
1. recursive  : [eval_TIFFYCbCrToRGBInit_bb4_in/2]
2. non_recursive  : [loop_cont_eval_TIFFYCbCrToRGBInit_bb4_in/2]
3. non_recursive  : [eval_TIFFYCbCrToRGBInit_11/1]
4. non_recursive  : [eval_TIFFYCbCrToRGBInit_10/1]
5. non_recursive  : [eval_TIFFYCbCrToRGBInit_9/1]
6. non_recursive  : [eval_TIFFYCbCrToRGBInit_8/1]
7. non_recursive  : [loop_cont_eval_TIFFYCbCrToRGBInit_bb1_in/2]
8. non_recursive  : [eval_TIFFYCbCrToRGBInit_1/1]
9. non_recursive  : [eval_TIFFYCbCrToRGBInit_0/1]
10. non_recursive  : [eval_TIFFYCbCrToRGBInit_bb0_in/1]
11. non_recursive  : [eval_TIFFYCbCrToRGBInit_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_TIFFYCbCrToRGBInit_bb1_in/2
1. SCC is partially evaluated into eval_TIFFYCbCrToRGBInit_bb4_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_TIFFYCbCrToRGBInit_11/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_TIFFYCbCrToRGBInit_1/1
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_TIFFYCbCrToRGBInit_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_TIFFYCbCrToRGBInit_bb1_in/2 
* CE 5 is refined into CE [9] 
* CE 4 is refined into CE [10] 


#### Refined cost equations eval_TIFFYCbCrToRGBInit_bb1_in/2 
* CE 9: eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B) = 0
     [V_i_0>=256,B=3] 
* CE 10: eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B) = 1+ eval_TIFFYCbCrToRGBInit_bb1_in(C,D)
     [V_i_0>=0,255>=V_i_0,V_i_0+1=C,D=3,B=3] 

### Cost equations --> "Loop" of eval_TIFFYCbCrToRGBInit_bb1_in/2 
* CEs [10] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_TIFFYCbCrToRGBInit_bb1_in/2 
* Loop 8: eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B)->  eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0',B')
                  [V_i_0>=0,255>=V_i_0,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 9: eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B) [V_i_0>=256,B=3] 

### Ranking functions of CR eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B) 
* RF of phase [8]: [-V_i_0+256]

#### Partial ranking functions of CR eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    -V_i_0+256


### Resulting Chains:eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B) 
* [[8],9]


### Merging Chains  eval_TIFFYCbCrToRGBInit_bb1_in/2 into  External patterns of execution 
* [[9,[8]]] --> 1 


### Specialization of cost equations eval_TIFFYCbCrToRGBInit_bb4_in/2 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 


#### Refined cost equations eval_TIFFYCbCrToRGBInit_bb4_in/2 
* CE 11: eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B) = 0
     [V_i_1>=256,B=2] 
* CE 12: eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B) = 1+ eval_TIFFYCbCrToRGBInit_bb4_in(C,D)
     [V_i_1>=0,255>=V_i_1,V_i_1+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_TIFFYCbCrToRGBInit_bb4_in/2 
* CEs [12] --> Loop 10 
* CEs [11] --> Loop 11 

#### Loops of eval_TIFFYCbCrToRGBInit_bb4_in/2 
* Loop 10: eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B)->  eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1',B')
                  [V_i_1>=0,255>=V_i_1,V_i_1+1=V_i_1',B'=2,B=2] 
* Loop 11: eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B) [V_i_1>=256,B=2] 

### Ranking functions of CR eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B) 
* RF of phase [10]: [-V_i_1+256]

#### Partial ranking functions of CR eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -V_i_1+256


### Resulting Chains:eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B) 
* [[10],11]


### Merging Chains  eval_TIFFYCbCrToRGBInit_bb4_in/2 into  External patterns of execution 
* [[11,[10]]] --> 1 


### Specialization of cost equations eval_TIFFYCbCrToRGBInit_11/1 
* CE 6 is refined into CE [13] 


#### Refined cost equations eval_TIFFYCbCrToRGBInit_11/1 
* CE 13: eval_TIFFYCbCrToRGBInit_11(B) = 1+ eval_TIFFYCbCrToRGBInit_bb4_in(C,D):1
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_TIFFYCbCrToRGBInit_11/1 
* CEs [13] --> Loop 12 

#### Loops of eval_TIFFYCbCrToRGBInit_11/1 
* Loop 12: eval_TIFFYCbCrToRGBInit_11(B) [] 

### Ranking functions of CR eval_TIFFYCbCrToRGBInit_11(B) 

#### Partial ranking functions of CR eval_TIFFYCbCrToRGBInit_11(B) 


### Resulting Chains:eval_TIFFYCbCrToRGBInit_11(B) 
* [12]


### Merging Chains  eval_TIFFYCbCrToRGBInit_11/1 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations eval_TIFFYCbCrToRGBInit_1/1 
* CE 3 is refined into CE [14] 


#### Refined cost equations eval_TIFFYCbCrToRGBInit_1/1 
* CE 14: eval_TIFFYCbCrToRGBInit_1(B) = 1+ eval_TIFFYCbCrToRGBInit_bb1_in(C,D):1+ eval_TIFFYCbCrToRGBInit_11(B):1
     [D=3,C=0] 

### Cost equations --> "Loop" of eval_TIFFYCbCrToRGBInit_1/1 
* CEs [14] --> Loop 13 

#### Loops of eval_TIFFYCbCrToRGBInit_1/1 
* Loop 13: eval_TIFFYCbCrToRGBInit_1(B) [] 

### Ranking functions of CR eval_TIFFYCbCrToRGBInit_1(B) 

#### Partial ranking functions of CR eval_TIFFYCbCrToRGBInit_1(B) 


### Resulting Chains:eval_TIFFYCbCrToRGBInit_1(B) 
* [13]


### Merging Chains  eval_TIFFYCbCrToRGBInit_1/1 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_TIFFYCbCrToRGBInit_start/1 
* CE 2 is refined into CE [15] 


#### Refined cost equations eval_TIFFYCbCrToRGBInit_start/1 
* CE 15: eval_TIFFYCbCrToRGBInit_start(B) = 0+ eval_TIFFYCbCrToRGBInit_1(B):1
     [] 

### Cost equations --> "Loop" of eval_TIFFYCbCrToRGBInit_start/1 
* CEs [15] --> Loop 14 

#### Loops of eval_TIFFYCbCrToRGBInit_start/1 
* Loop 14: eval_TIFFYCbCrToRGBInit_start(B) [] 

### Ranking functions of CR eval_TIFFYCbCrToRGBInit_start(B) 

#### Partial ranking functions of CR eval_TIFFYCbCrToRGBInit_start(B) 


### Resulting Chains:eval_TIFFYCbCrToRGBInit_start(B) 
* [14]


### Merging Chains  eval_TIFFYCbCrToRGBInit_start/1 into  External patterns of execution 
* [[14]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B) -> [eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0',B')] 
1
#### Cost of phase [8]:eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B) -> [eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0',B')] 
1*it(8)+0
  Such that:it(8) =< -V_i_0+256
it(8) =< -V_i_0+V_i_0'

#### Cost of chains of eval_TIFFYCbCrToRGBInit_bb1_in(V_i_0,B):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -V_i_0+256

  with precondition: [B=3,255>=V_i_0,V_i_0>=0] 


#### Cost of loops [10] 

 * loop 10:eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B) -> [eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1',B')] 
1
#### Cost of phase [10]:eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B) -> [eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1',B')] 
1*it(10)+0
  Such that:it(10) =< -V_i_1+256
it(10) =< -V_i_1+V_i_1'

#### Cost of chains of eval_TIFFYCbCrToRGBInit_bb4_in(V_i_1,B):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -V_i_1+256

  with precondition: [B=2,255>=V_i_1,V_i_1>=0] 


#### Cost of chains of eval_TIFFYCbCrToRGBInit_11(B):
* Chain [12]: 1*s(1)+1
  Such that:s(1) =< 256

  with precondition: [] 


#### Cost of chains of eval_TIFFYCbCrToRGBInit_1(B):
* Chain [13]: 2*s(2)+2
  Such that:aux(1) =< 256
s(2) =< aux(1)

  with precondition: [] 


#### Cost of chains of eval_TIFFYCbCrToRGBInit_start(B):
* Chain [14]: 2*s(5)+2
  Such that:s(4) =< 256
s(5) =< s(4)

  with precondition: [] 


Closed-form bounds of eval_TIFFYCbCrToRGBInit_start(B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: 514 
    - Complexity: constant 

### Maximum cost of eval_TIFFYCbCrToRGBInit_start(B): 514 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 26 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 36 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 32 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 12 ms.
   - Chain cost structures 12 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 155 ms.

