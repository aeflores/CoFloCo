Warning: Ignored call to eval_s_A85D_process_stop/1 in equation eval_s_A85D_process_bb22_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_s_A85D_process_bb1_in/5]
1. non_recursive  : [eval_s_A85D_process_bb22_in/1]
2. non_recursive  : [eval_s_A85D_process_65/1]
3. non_recursive  : [eval_s_A85D_process_64/3]
4. non_recursive  : [eval_s_A85D_process_bb19_in/3]
5. non_recursive  : [eval_s_A85D_process_55/3]
6. non_recursive  : [eval_s_A85D_process_54/3]
7. non_recursive  : [loop_cont_eval_s_A85D_process_bb1_in/4]
8. non_recursive  : [eval_s_A85D_process_bb0_in/1]
9. non_recursive  : [eval_s_A85D_process_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_s_A85D_process_bb1_in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_s_A85D_process_bb19_in/3
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into loop_cont_eval_s_A85D_process_bb1_in/4
8. SCC is partially evaluated into eval_s_A85D_process_bb0_in/1
9. SCC is partially evaluated into eval_s_A85D_process_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_s_A85D_process_bb1_in/5 
* CE 8 is refined into CE [12] 
* CE 4 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 5 is refined into CE [16] 


#### Refined cost equations eval_s_A85D_process_bb1_in/5 
* CE 12: eval_s_A85D_process_bb1_in(A,B,C,A,B) = 0
     [C=3] 
* CE 13: eval_s_A85D_process_bb1_in(A,B,C,A,B) = 0
     [C=2] 
* CE 14: eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) = 1+ eval_s_A85D_process_bb1_in(E,F,B,C,D)
     [F=V_ccount_0+1] 
* CE 15: eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) = 1+ eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D)
     [] 
* CE 16: eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) = 1+ eval_s_A85D_process_bb1_in(E,F,B,C,D)
     [F=0,E=0] 

### Cost equations --> "Loop" of eval_s_A85D_process_bb1_in/5 
* CEs [14] --> Loop 11 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [12] --> Loop 14 
* CEs [13] --> Loop 15 

#### Loops of eval_s_A85D_process_bb1_in/5 
* Loop 11: eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D)->  eval_s_A85D_process_bb1_in(V_word_0',V_ccount_0',B,C,D)
                  [V_ccount_0+1=V_ccount_0'] 
* Loop 12: eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D)->  eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D)
                  [] 
* Loop 13: eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D)->  eval_s_A85D_process_bb1_in(V_word_0',V_ccount_0',B,C,D)
                  [V_ccount_0'=0,V_word_0'=0] 
* Loop 14: eval_s_A85D_process_bb1_in(A,B,C,A,B) [C=3] 
* Loop 15: eval_s_A85D_process_bb1_in(A,B,C,A,B) [C=2] 

### Ranking functions of CR eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) 

#### Partial ranking functions of CR eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) 


### Resulting Chains:eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) 
* [[11,12,13]]...
* [[11,12,13],15]
* [[11,12,13],14]
* [15]
* [14]


### Merging Chains  eval_s_A85D_process_bb1_in/5 into  External patterns of execution 
* [[15],[15,[11,12,13]]] --> 1 
* [[14],[14,[11,12,13]]] --> 2 
* [[[11,12,13]]] --> 3 


### Specialization of cost equations eval_s_A85D_process_bb19_in/3 
* CE 11 is refined into CE [17] 


#### Refined cost equations eval_s_A85D_process_bb19_in/3 
* CE 17: eval_s_A85D_process_bb19_in(V_word_0,V_ccount_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_s_A85D_process_bb19_in/3 
* CEs [17] --> Loop 16 

#### Loops of eval_s_A85D_process_bb19_in/3 
* Loop 16: eval_s_A85D_process_bb19_in(V_word_0,V_ccount_0,B) [] 

### Ranking functions of CR eval_s_A85D_process_bb19_in(V_word_0,V_ccount_0,B) 

#### Partial ranking functions of CR eval_s_A85D_process_bb19_in(V_word_0,V_ccount_0,B) 


### Resulting Chains:eval_s_A85D_process_bb19_in(V_word_0,V_ccount_0,B) 
* [16]


### Merging Chains  eval_s_A85D_process_bb19_in/3 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations loop_cont_eval_s_A85D_process_bb1_in/4 
* CE 10 is refined into CE [18] 
* CE 9 is refined into CE [19] 


#### Refined cost equations loop_cont_eval_s_A85D_process_bb1_in/4 
* CE 18: loop_cont_eval_s_A85D_process_bb1_in(D,A,B,C) = 0+ eval_s_A85D_process_bb19_in(A,B,C):1
     [D=3] 
* CE 19: loop_cont_eval_s_A85D_process_bb1_in(D,A,B,C) = 0+ eval_s_A85D_process_bb19_in(A,B,C):1
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_s_A85D_process_bb1_in/4 
* CEs [18] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of loop_cont_eval_s_A85D_process_bb1_in/4 
* Loop 17: loop_cont_eval_s_A85D_process_bb1_in(D,A,B,C) [D=3] 
* Loop 18: loop_cont_eval_s_A85D_process_bb1_in(D,A,B,C) [D=2] 

### Ranking functions of CR loop_cont_eval_s_A85D_process_bb1_in(D,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_s_A85D_process_bb1_in(D,A,B,C) 


### Resulting Chains:loop_cont_eval_s_A85D_process_bb1_in(D,A,B,C) 
* [18]
* [17]


### Merging Chains  loop_cont_eval_s_A85D_process_bb1_in/4 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_s_A85D_process_bb0_in/1 
* CE 3 is refined into CE [20,21,22] 


#### Refined cost equations eval_s_A85D_process_bb0_in/1 
* CE 20: eval_s_A85D_process_bb0_in(B) = 1+ eval_s_A85D_process_bb1_in(C,D,E,F,G):1+ loop_cont_eval_s_A85D_process_bb1_in(H,F,G,B):1
     [H=2,E=2] 
* CE 21: eval_s_A85D_process_bb0_in(B) = 1+ eval_s_A85D_process_bb1_in(C,D,E,F,G):2+ loop_cont_eval_s_A85D_process_bb1_in(H,F,G,B):2
     [H=3,E=3] 
* CE 22: eval_s_A85D_process_bb0_in(B) = 1+ eval_s_A85D_process_bb1_in(C,D,E,F,G):3
     [] 

### Cost equations --> "Loop" of eval_s_A85D_process_bb0_in/1 
* CEs [22] --> Loop 19 
* CEs [20,21] --> Loop 20 

#### Loops of eval_s_A85D_process_bb0_in/1 
* Loop 19: eval_s_A85D_process_bb0_in(B) [] 
* Loop 20: eval_s_A85D_process_bb0_in(B) [] 

### Ranking functions of CR eval_s_A85D_process_bb0_in(B) 

#### Partial ranking functions of CR eval_s_A85D_process_bb0_in(B) 


### Resulting Chains:eval_s_A85D_process_bb0_in(B) 
* [20]
* [19]...


### Merging Chains  eval_s_A85D_process_bb0_in/1 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_s_A85D_process_start/2 
* CE 2 is refined into CE [23,24] 


#### Refined cost equations eval_s_A85D_process_start/2 
* CE 23: eval_s_A85D_process_start(V_last,B) = 0+ eval_s_A85D_process_bb0_in(B):1
     [] 
* CE 24: eval_s_A85D_process_start(V_last,B) = 0+ eval_s_A85D_process_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_s_A85D_process_start/2 
* CEs [24] --> Loop 21 
* CEs [23] --> Loop 22 

#### Loops of eval_s_A85D_process_start/2 
* Loop 21: eval_s_A85D_process_start(V_last,B) [] 
* Loop 22: eval_s_A85D_process_start(V_last,B) [] 

### Ranking functions of CR eval_s_A85D_process_start(V_last,B) 

#### Partial ranking functions of CR eval_s_A85D_process_start(V_last,B) 


### Resulting Chains:eval_s_A85D_process_start(V_last,B) 
* [22]
* [21]...


### Merging Chains  eval_s_A85D_process_start/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11,12,13] 

 * loop 11:eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) -> [eval_s_A85D_process_bb1_in(V_word_0',V_ccount_0',B',C',D')] 
1
 * loop 12:eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) -> [eval_s_A85D_process_bb1_in(V_word_0',V_ccount_0',B',C',D')] 
1
 * loop 13:eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) -> [eval_s_A85D_process_bb1_in(V_word_0',V_ccount_0',B',C',D')] 
1
#### Cost of phase [11,12,13]:eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) -> [eval_s_A85D_process_bb1_in(V_word_0',V_ccount_0',B',C',D')] 
3*it(11)+0
#### Cost of phase [11,12,13]:eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) -> [eval_s_A85D_process_bb1_in(V_word_0',V_ccount_0',B',C',D')] 
3*it(11)+0
#### Cost of phase [11,12,13]:eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D) -> [eval_s_A85D_process_bb1_in(V_word_0',V_ccount_0',B',C',D')] 
3*it(11)+0
#### Cost of chains of eval_s_A85D_process_bb1_in(V_word_0,V_ccount_0,B,C,D):
* Chain [[11,12,13]]...: 3*it(11)+0
  with precondition: [] 

* Chain [[11,12,13],15]: 3*it(11)+0
  with precondition: [B=2] 

* Chain [[11,12,13],14]: 3*it(11)+0
  with precondition: [B=3] 

* Chain [15]: 0
  with precondition: [B=2,C=V_word_0,D=V_ccount_0] 

* Chain [14]: 0
  with precondition: [B=3,C=V_word_0,D=V_ccount_0] 


#### Cost of chains of eval_s_A85D_process_bb19_in(V_word_0,V_ccount_0,B):
* Chain [16]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_s_A85D_process_bb1_in(D,A,B,C):
* Chain [18]: 0
  with precondition: [D=2] 

* Chain [17]: 0
  with precondition: [D=3] 


#### Cost of chains of eval_s_A85D_process_bb0_in(B):
* Chain [20]: 1*aux(3)+0
  with precondition: [] 

* Chain [19]...: 3*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_s_A85D_process_start(V_last,B):
* Chain [22]: 1*s(6)+0
  with precondition: [] 

* Chain [21]...: 3*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_s_A85D_process_start(V_last,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_s_A85D_process_start(V_last,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 8 ms.
* Invariants computed in 10 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 21 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 6 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 69 ms.

