Warning: Ignored call to eval_cmd_put_segment_stop/1 in equation eval_cmd_put_segment_bb36_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_cmd_put_segment_bb21_in/6]
1. recursive  : [eval_cmd_put_segment_bb13_in/2,eval_cmd_put_segment_bb18_in/3,eval_cmd_put_segment_bb27_in/3,eval_cmd_put_segment_bb28_in/4,loop_cont_eval_cmd_put_segment_bb21_in/4]
2. non_recursive  : [eval_cmd_put_segment_bb36_in/1]
3. non_recursive  : [eval_cmd_put_segment_143/1]
4. non_recursive  : [eval_cmd_put_segment_142/2]
5. non_recursive  : [eval_cmd_put_segment_136/2]
6. non_recursive  : [eval_cmd_put_segment_135/2]
7. non_recursive  : [eval_cmd_put_segment_bb33_in/1]
8. non_recursive  : [eval_cmd_put_segment_122/1]
9. non_recursive  : [eval_cmd_put_segment_121/1]
10. non_recursive  : [loop_cont_eval_cmd_put_segment_bb13_in/2]
11. non_recursive  : [eval_cmd_put_segment_bb12_in/2]
12. non_recursive  : [eval_cmd_put_segment_NewDefault_in/2]
13. non_recursive  : [eval_cmd_put_segment_bb7_in/2]
14. non_recursive  : [eval_cmd_put_segment_bb0_in/1]
15. non_recursive  : [eval_cmd_put_segment_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cmd_put_segment_bb21_in/6
1. SCC is partially evaluated into eval_cmd_put_segment_bb13_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_cmd_put_segment_136/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_cmd_put_segment_122/1
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into loop_cont_eval_cmd_put_segment_bb13_in/2
11. SCC is partially evaluated into eval_cmd_put_segment_bb12_in/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_cmd_put_segment_bb0_in/1
15. SCC is partially evaluated into eval_cmd_put_segment_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cmd_put_segment_bb21_in/6 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


#### Refined cost equations eval_cmd_put_segment_bb21_in/6 
* CE 18: eval_cmd_put_segment_bb21_in(A,B,C,D,E,B) = 0
     [B>=0,1>=C,B+1=E,B+1=A,D=2] 
* CE 19: eval_cmd_put_segment_bb21_in(V_i_3,V_76,V_b_0,B,C,D) = 1+ eval_cmd_put_segment_bb21_in(E,V_76,F,G,C,D)
     [V_b_0>=2,V_76>=0,7>=V_b_0,V_b_0=F+1,V_76+1=E,V_76+1=V_i_3,G=2,B=2] 

### Cost equations --> "Loop" of eval_cmd_put_segment_bb21_in/6 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 

#### Loops of eval_cmd_put_segment_bb21_in/6 
* Loop 14: eval_cmd_put_segment_bb21_in(V_i_3,V_76,V_b_0,B,C,D)->  eval_cmd_put_segment_bb21_in(V_i_3',V_76,V_b_0',B',C,D)
                  [V_b_0>=2,V_76>=0,7>=V_b_0,V_b_0=V_b_0'+1,V_76+1=V_i_3',V_76+1=V_i_3,B'=2,B=2] 
* Loop 15: eval_cmd_put_segment_bb21_in(A,B,C,D,E,B) [B>=0,1>=C,B+1=E,B+1=A,D=2] 

### Ranking functions of CR eval_cmd_put_segment_bb21_in(V_i_3,V_76,V_b_0,B,C,D) 
* RF of phase [14]: [V_b_0-1]

#### Partial ranking functions of CR eval_cmd_put_segment_bb21_in(V_i_3,V_76,V_b_0,B,C,D) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_b_0-1


### Resulting Chains:eval_cmd_put_segment_bb21_in(V_i_3,V_76,V_b_0,B,C,D) 
* [[14],15]


### Merging Chains  eval_cmd_put_segment_bb21_in/6 into  External patterns of execution 
* [[15,[14]]] --> 1 


### Specialization of cost equations eval_cmd_put_segment_bb13_in/2 
* CE 10 is refined into CE [20] 
* CE 9 is refined into CE [21] 
* CE 6 is refined into CE [22] 
* CE 7 is refined into CE [23] 
* CE 8 is refined into CE [24] 


#### Refined cost equations eval_cmd_put_segment_bb13_in/2 
* CE 20: eval_cmd_put_segment_bb13_in(V_i_3,B) = 0
     [0>=V_i_3,B=4] 
* CE 21: eval_cmd_put_segment_bb13_in(V_i_3,B) = 0
     [0>=V_i_3,B=3] 
* CE 22: eval_cmd_put_segment_bb13_in(V_i_3,B) = 1+ eval_cmd_put_segment_bb13_in(C,B)
     [V_i_3>=1,V_i_3=C+1] 
* CE 23: eval_cmd_put_segment_bb13_in(V_i_3,B) = 2+ eval_cmd_put_segment_bb21_in(C,D,E,F,G,D):1+ eval_cmd_put_segment_bb13_in(D,B)
     [D>=0,D+1=G,D+1=C,D+1=V_i_3,F=2,E=7] 
* CE 24: eval_cmd_put_segment_bb13_in(V_i_3,B) = 1+ eval_cmd_put_segment_bb13_in(C,B)
     [C+1>=0,C+2=V_i_3] 

### Cost equations --> "Loop" of eval_cmd_put_segment_bb13_in/2 
* CEs [22,23] --> Loop 16 
* CEs [24] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

#### Loops of eval_cmd_put_segment_bb13_in/2 
* Loop 16: eval_cmd_put_segment_bb13_in(V_i_3,B)->  eval_cmd_put_segment_bb13_in(V_i_3',B)
                  [V_i_3>=1,V_i_3=V_i_3'+1] 
* Loop 17: eval_cmd_put_segment_bb13_in(V_i_3,B)->  eval_cmd_put_segment_bb13_in(V_i_3',B)
                  [V_i_3>=1,V_i_3=V_i_3'+2] 
* Loop 18: eval_cmd_put_segment_bb13_in(V_i_3,B) [0>=V_i_3,B=4] 
* Loop 19: eval_cmd_put_segment_bb13_in(V_i_3,B) [0>=V_i_3,B=3] 

### Ranking functions of CR eval_cmd_put_segment_bb13_in(V_i_3,B) 
* RF of phase [16,17]: [V_i_3]

#### Partial ranking functions of CR eval_cmd_put_segment_bb13_in(V_i_3,B) 
* Partial RF of phase [16,17]:
  - RF of loop [16:1]:
    V_i_3
  - RF of loop [17:1]:
    V_i_3/2


### Resulting Chains:eval_cmd_put_segment_bb13_in(V_i_3,B) 
* [[16,17],19]
* [[16,17],18]
* [19]
* [18]


### Merging Chains  eval_cmd_put_segment_bb13_in/2 into  External patterns of execution 
* [[19]] --> 1 
* [[19,[16,17]]] --> 2 
* [[18]] --> 3 
* [[18,[16,17]]] --> 4 


### Specialization of cost equations eval_cmd_put_segment_136/2 
* CE 17 is refined into CE [25] 


#### Refined cost equations eval_cmd_put_segment_136/2 
* CE 25: eval_cmd_put_segment_136(V_177,B) = 0
     [] 

### Cost equations --> "Loop" of eval_cmd_put_segment_136/2 
* CEs [25] --> Loop 20 

#### Loops of eval_cmd_put_segment_136/2 
* Loop 20: eval_cmd_put_segment_136(V_177,B) [] 

### Ranking functions of CR eval_cmd_put_segment_136(V_177,B) 

#### Partial ranking functions of CR eval_cmd_put_segment_136(V_177,B) 


### Resulting Chains:eval_cmd_put_segment_136(V_177,B) 
* [20]


### Merging Chains  eval_cmd_put_segment_136/2 into  External patterns of execution 
* [[20]] --> 1 


### Specialization of cost equations eval_cmd_put_segment_122/1 
* CE 15 is refined into CE [26] 
* CE 16 is refined into CE [27] 


#### Refined cost equations eval_cmd_put_segment_122/1 
* CE 26: eval_cmd_put_segment_122(B) = 0
     [] 
* CE 27: eval_cmd_put_segment_122(B) = 0+ eval_cmd_put_segment_136(C,B):1
     [] 

### Cost equations --> "Loop" of eval_cmd_put_segment_122/1 
* CEs [26,27] --> Loop 21 

#### Loops of eval_cmd_put_segment_122/1 
* Loop 21: eval_cmd_put_segment_122(B) [] 

### Ranking functions of CR eval_cmd_put_segment_122(B) 

#### Partial ranking functions of CR eval_cmd_put_segment_122(B) 


### Resulting Chains:eval_cmd_put_segment_122(B) 
* [21]


### Merging Chains  eval_cmd_put_segment_122/1 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations loop_cont_eval_cmd_put_segment_bb13_in/2 
* CE 12 is refined into CE [28] 
* CE 11 is refined into CE [29] 


#### Refined cost equations loop_cont_eval_cmd_put_segment_bb13_in/2 
* CE 28: loop_cont_eval_cmd_put_segment_bb13_in(C,A) = 0+ eval_cmd_put_segment_136(D,A):1
     [C=4] 
* CE 29: loop_cont_eval_cmd_put_segment_bb13_in(C,A) = 0+ eval_cmd_put_segment_122(A):1
     [C=3] 

### Cost equations --> "Loop" of loop_cont_eval_cmd_put_segment_bb13_in/2 
* CEs [28] --> Loop 22 
* CEs [29] --> Loop 23 

#### Loops of loop_cont_eval_cmd_put_segment_bb13_in/2 
* Loop 22: loop_cont_eval_cmd_put_segment_bb13_in(C,A) [C=4] 
* Loop 23: loop_cont_eval_cmd_put_segment_bb13_in(C,A) [C=3] 

### Ranking functions of CR loop_cont_eval_cmd_put_segment_bb13_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_cmd_put_segment_bb13_in(C,A) 


### Resulting Chains:loop_cont_eval_cmd_put_segment_bb13_in(C,A) 
* [23]
* [22]


### Merging Chains  loop_cont_eval_cmd_put_segment_bb13_in/2 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_cmd_put_segment_bb12_in/2 
* CE 5 is refined into CE [30,31,32,33] 


#### Refined cost equations eval_cmd_put_segment_bb12_in/2 
* CE 30: eval_cmd_put_segment_bb12_in(V_i_2,B) = 1+ eval_cmd_put_segment_bb13_in(V_i_2,C):1+ loop_cont_eval_cmd_put_segment_bb13_in(D,B):1
     [0>=V_i_2,D=3,C=3] 
* CE 31: eval_cmd_put_segment_bb12_in(V_i_2,B) = 1+ eval_cmd_put_segment_bb13_in(V_i_2,C):2+ loop_cont_eval_cmd_put_segment_bb13_in(D,B):1
     [V_i_2>=1,D=3,C=3] 
* CE 32: eval_cmd_put_segment_bb12_in(V_i_2,B) = 1+ eval_cmd_put_segment_bb13_in(V_i_2,C):3+ loop_cont_eval_cmd_put_segment_bb13_in(D,B):2
     [0>=V_i_2,D=4,C=4] 
* CE 33: eval_cmd_put_segment_bb12_in(V_i_2,B) = 1+ eval_cmd_put_segment_bb13_in(V_i_2,C):4+ loop_cont_eval_cmd_put_segment_bb13_in(D,B):2
     [V_i_2>=1,D=4,C=4] 

### Cost equations --> "Loop" of eval_cmd_put_segment_bb12_in/2 
* CEs [31,33] --> Loop 24 
* CEs [30,32] --> Loop 25 

#### Loops of eval_cmd_put_segment_bb12_in/2 
* Loop 24: eval_cmd_put_segment_bb12_in(V_i_2,B) [V_i_2>=1] 
* Loop 25: eval_cmd_put_segment_bb12_in(V_i_2,B) [0>=V_i_2] 

### Ranking functions of CR eval_cmd_put_segment_bb12_in(V_i_2,B) 

#### Partial ranking functions of CR eval_cmd_put_segment_bb12_in(V_i_2,B) 


### Resulting Chains:eval_cmd_put_segment_bb12_in(V_i_2,B) 
* [25]
* [24]


### Merging Chains  eval_cmd_put_segment_bb12_in/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


### Specialization of cost equations eval_cmd_put_segment_bb0_in/1 
* CE 3 is refined into CE [34,35] 
* CE 4 is refined into CE [36] 


#### Refined cost equations eval_cmd_put_segment_bb0_in/1 
* CE 34: eval_cmd_put_segment_bb0_in(B) = 0+ eval_cmd_put_segment_bb12_in(C,B):1
     [0>=C] 
* CE 35: eval_cmd_put_segment_bb0_in(B) = 0+ eval_cmd_put_segment_bb12_in(C,B):2
     [C>=1] 
* CE 36: eval_cmd_put_segment_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_cmd_put_segment_bb0_in/1 
* CEs [34,35,36] --> Loop 26 

#### Loops of eval_cmd_put_segment_bb0_in/1 
* Loop 26: eval_cmd_put_segment_bb0_in(B) [] 

### Ranking functions of CR eval_cmd_put_segment_bb0_in(B) 

#### Partial ranking functions of CR eval_cmd_put_segment_bb0_in(B) 


### Resulting Chains:eval_cmd_put_segment_bb0_in(B) 
* [26]


### Merging Chains  eval_cmd_put_segment_bb0_in/1 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations eval_cmd_put_segment_start/3 
* CE 2 is refined into CE [37] 


#### Refined cost equations eval_cmd_put_segment_start/3 
* CE 37: eval_cmd_put_segment_start(V_op,V_notes,B) = 0+ eval_cmd_put_segment_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_cmd_put_segment_start/3 
* CEs [37] --> Loop 27 

#### Loops of eval_cmd_put_segment_start/3 
* Loop 27: eval_cmd_put_segment_start(V_op,V_notes,B) [] 

### Ranking functions of CR eval_cmd_put_segment_start(V_op,V_notes,B) 

#### Partial ranking functions of CR eval_cmd_put_segment_start(V_op,V_notes,B) 


### Resulting Chains:eval_cmd_put_segment_start(V_op,V_notes,B) 
* [27]


### Merging Chains  eval_cmd_put_segment_start/3 into  External patterns of execution 
* [[27]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_cmd_put_segment_bb21_in(V_i_3,V_76,V_b_0,B,C,D) -> [eval_cmd_put_segment_bb21_in(V_i_3',V_76',V_b_0',B',C',D')] 
1
#### Cost of phase [14]:eval_cmd_put_segment_bb21_in(V_i_3,V_76,V_b_0,B,C,D) -> [eval_cmd_put_segment_bb21_in(V_i_3',V_76',V_b_0',B',C',D')] 
1*it(14)+0
  Such that:it(14) =< V_b_0
it(14) =< V_b_0-V_b_0'

#### Cost of chains of eval_cmd_put_segment_bb21_in(V_i_3,V_76,V_b_0,B,C,D):
* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V_b_0

  with precondition: [B=2,V_i_3=V_76+1,V_i_3=C,V_i_3=D+1,7>=V_b_0,V_i_3>=1,V_b_0>=2] 


#### Cost of loops [16,17] 

 * loop 16:eval_cmd_put_segment_bb13_in(V_i_3,B) -> [eval_cmd_put_segment_bb13_in(V_i_3',B')] 
9
 * loop 17:eval_cmd_put_segment_bb13_in(V_i_3,B) -> [eval_cmd_put_segment_bb13_in(V_i_3',B')] 
1
#### Cost of phase [16,17]:eval_cmd_put_segment_bb13_in(V_i_3,B) -> [eval_cmd_put_segment_bb13_in(V_i_3',B')] 
9*it(16)+1*it(17)+0
  Such that:it(17) =< V_i_3/2
it(17) =< V_i_3/2-V_i_3'/2
aux(1) =< V_i_3
aux(2) =< V_i_3-V_i_3'
it(16) =< aux(1)
it(17) =< aux(1)
it(16) =< aux(2)
it(17) =< aux(2)

#### Cost of phase [16,17]:eval_cmd_put_segment_bb13_in(V_i_3,B) -> [eval_cmd_put_segment_bb13_in(V_i_3',B')] 
9*it(16)+1*it(17)+0
  Such that:it(17) =< V_i_3/2
it(17) =< V_i_3/2-V_i_3'/2
aux(1) =< V_i_3
aux(2) =< V_i_3-V_i_3'
it(16) =< aux(1)
it(17) =< aux(1)
it(16) =< aux(2)
it(17) =< aux(2)

#### Cost of chains of eval_cmd_put_segment_bb13_in(V_i_3,B):
* Chain [[16,17],19]: 9*it(16)+1*it(17)+0
  Such that:aux(1) =< V_i_3
aux(2) =< V_i_3+1
it(17) =< V_i_3/2
it(16) =< aux(1)
it(17) =< aux(1)
it(16) =< aux(2)
it(17) =< aux(2)

  with precondition: [B=3,V_i_3>=1] 

* Chain [[16,17],18]: 9*it(16)+1*it(17)+0
  Such that:aux(1) =< V_i_3
aux(2) =< V_i_3+1
it(17) =< V_i_3/2
it(16) =< aux(1)
it(17) =< aux(1)
it(16) =< aux(2)
it(17) =< aux(2)

  with precondition: [B=4,V_i_3>=1] 

* Chain [19]: 0
  with precondition: [B=3,0>=V_i_3] 

* Chain [18]: 0
  with precondition: [B=4,0>=V_i_3] 


#### Cost of chains of eval_cmd_put_segment_136(V_177,B):
* Chain [20]: 0
  with precondition: [] 


#### Cost of chains of eval_cmd_put_segment_122(B):
* Chain [21]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_cmd_put_segment_bb13_in(C,A):
* Chain [23]: 0
  with precondition: [C=3] 

* Chain [22]: 0
  with precondition: [C=4] 


#### Cost of chains of eval_cmd_put_segment_bb12_in(V_i_2,B):
* Chain [25]: 1
  with precondition: [0>=V_i_2] 

* Chain [24]: 2*s(4)+18*s(5)+1
  Such that:aux(3) =< V_i_2
aux(4) =< V_i_2+1
aux(5) =< V_i_2/2
s(4) =< aux(5)
s(5) =< aux(3)
s(4) =< aux(3)
s(5) =< aux(4)
s(4) =< aux(4)

  with precondition: [V_i_2>=1] 


#### Cost of chains of eval_cmd_put_segment_bb0_in(B):
* Chain [26]: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_cmd_put_segment_start(V_op,V_notes,B):
* Chain [27]: 1*s(15)+0
  with precondition: [] 


Closed-form bounds of eval_cmd_put_segment_start(V_op,V_notes,B): 
-------------------------------------
* Chain [27] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_cmd_put_segment_start(V_op,V_notes,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 17 ms.
* Invariants computed in 19 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 31 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 27 ms.
   - Equation cost structures 10 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 118 ms.

