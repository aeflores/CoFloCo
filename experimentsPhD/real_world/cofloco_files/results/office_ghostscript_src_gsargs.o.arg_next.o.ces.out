Warning: Ignored call to eval_arg_next_stop/1 in equation eval_arg_next_bb40_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_arg_next_22/1,eval_arg_next_23/1,eval_arg_next_bb12_in/1,eval_arg_next_bb8_in/1]
1. recursive  : [eval_arg_next_39/4,eval_arg_next_40/4,eval_arg_next_41/4,eval_arg_next_55/5,eval_arg_next_56/5,eval_arg_next_bb18_in/4,eval_arg_next_bb20_in/4,eval_arg_next_bb23_in/5,eval_arg_next_bb27_in/5]
2. recursive  : [eval_arg_next_29/1,eval_arg_next_30/1,eval_arg_next_35/1,eval_arg_next_36/1,eval_arg_next_59/3,eval_arg_next_60/3,eval_arg_next_61/3,eval_arg_next_79/1,eval_arg_next_80/1,eval_arg_next_81/1,eval_arg_next_82/1,eval_arg_next_83/1,eval_arg_next_84/1,eval_arg_next_85/1,eval_arg_next_86/1,eval_arg_next_87/1,eval_arg_next_bb16_in/1,eval_arg_next_bb1_in/1,eval_arg_next_bb31_in/3,eval_arg_next_bb33_in/1,eval_arg_next_bb37_in/1,eval_arg_next_bb39_in/1,eval_arg_next_bb7_in/1,loop_cont_eval_arg_next_bb18_in/4,loop_cont_eval_arg_next_bb8_in/2]
3. non_recursive  : [eval_arg_next_bb40_in/1]
4. non_recursive  : [loop_cont_eval_arg_next_bb1_in/2]
5. non_recursive  : [eval_arg_next_1/1]
6. non_recursive  : [eval_arg_next_0/1]
7. non_recursive  : [eval_arg_next_bb0_in/1]
8. non_recursive  : [eval_arg_next_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_arg_next_bb8_in/1
1. SCC is partially evaluated into eval_arg_next_bb18_in/4
2. SCC is partially evaluated into eval_arg_next_bb1_in/1
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_arg_next_1/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_arg_next_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_arg_next_bb8_in/1 
* CE 15 is refined into CE [29] 
* CE 12 is refined into CE [30] 
* CE 13 is refined into CE [31] 
* CE 14 is refined into CE [32] 


#### Refined cost equations eval_arg_next_bb8_in/1 
* CE 29: eval_arg_next_bb8_in(B) = 1+ eval_arg_next_bb8_in(B)
     [B>=4,6>=B] 
* CE 30: eval_arg_next_bb8_in(B) = 0
     [B=6] 
* CE 31: eval_arg_next_bb8_in(B) = 0
     [B=5] 
* CE 32: eval_arg_next_bb8_in(B) = 0
     [B=4] 

### Cost equations --> "Loop" of eval_arg_next_bb8_in/1 
* CEs [30] --> Loop 21 
* CEs [31] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [29] --> Loop 24 

#### Loops of eval_arg_next_bb8_in/1 
* Loop 21: eval_arg_next_bb8_in(B) [B=6] 
* Loop 22: eval_arg_next_bb8_in(B) [B=5] 
* Loop 23: eval_arg_next_bb8_in(B) [B=4] 
* Loop 24: eval_arg_next_bb8_in(B)->  eval_arg_next_bb8_in(B)
                  [B>=4,6>=B] 

### Ranking functions of CR eval_arg_next_bb8_in(B) 

#### Partial ranking functions of CR eval_arg_next_bb8_in(B) 


### Resulting Chains:eval_arg_next_bb8_in(B) 
* [[24]]...
* [[24],23]
* [[24],22]
* [[24],21]
* [23]
* [22]
* [21]


### Merging Chains  eval_arg_next_bb8_in/1 into  External patterns of execution 
* [[23],[23,[24]]] --> 1 
* [[22],[22,[24]]] --> 2 
* [[21],[21,[24]]] --> 3 
* [[[24]]] --> 4 


### Specialization of cost equations eval_arg_next_bb18_in/4 
* CE 18 is refined into CE [33] 
* CE 17 is refined into CE [34] 
* CE 16 is discarded (unfeasible) 
* CE 28 is refined into CE [35] 
* CE 26 is refined into CE [36] 
* CE 25 is discarded (unfeasible) 
* CE 24 is refined into CE [37] 
* CE 27 is refined into CE [38] 
* CE 20 is refined into CE [39] 
* CE 21 is discarded (unfeasible) 
* CE 23 is refined into CE [40] 
* CE 22 is discarded (unfeasible) 
* CE 19 is refined into CE [41] 


#### Refined cost equations eval_arg_next_bb18_in/4 
* CE 33: eval_arg_next_bb18_in(A,B,A,A) = 0
     [A>=0,1>=A,B=3] 
* CE 34: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) = 0
     [D=0,C=1,B=3,V_in_quote_0=1] 
* CE 35: eval_arg_next_bb18_in(A,B,A,A) = 0
     [A>=0,1>=A,B=2] 
* CE 36: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) = 0
     [D=0,C=1,B=2,V_in_quote_0=1] 
* CE 37: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) = 0
     [D=1,C=0,B=3,V_in_quote_0=0] 
* CE 38: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) = 0
     [D=1,C=0,B=2,V_in_quote_0=0] 
* CE 39: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) = 1+ eval_arg_next_bb18_in(V_in_quote_0,B,C,D)
     [B>=2,V_in_quote_0>=0,3>=B,1>=V_in_quote_0] 
* CE 40: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) = 1+ eval_arg_next_bb18_in(E,B,C,D)
     [B>=2,3>=B,E=0,V_in_quote_0=1] 
* CE 41: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) = 1+ eval_arg_next_bb18_in(E,B,C,D)
     [B>=2,3>=B,E=1,V_in_quote_0=0] 

### Cost equations --> "Loop" of eval_arg_next_bb18_in/4 
* CEs [39] --> Loop 25 
* CEs [40] --> Loop 26 
* CEs [41] --> Loop 27 
* CEs [33] --> Loop 28 
* CEs [35] --> Loop 29 
* CEs [34] --> Loop 30 
* CEs [36] --> Loop 31 
* CEs [37] --> Loop 32 
* CEs [38] --> Loop 33 

#### Loops of eval_arg_next_bb18_in/4 
* Loop 25: eval_arg_next_bb18_in(V_in_quote_0,B,C,D)->  eval_arg_next_bb18_in(V_in_quote_0,B,C,D)
                  [B>=2,V_in_quote_0>=0,3>=B,1>=V_in_quote_0] 
* Loop 26: eval_arg_next_bb18_in(V_in_quote_0,B,C,D)->  eval_arg_next_bb18_in(V_in_quote_0',B,C,D)
                  [B>=2,3>=B,V_in_quote_0'=0,V_in_quote_0=1] 
* Loop 27: eval_arg_next_bb18_in(V_in_quote_0,B,C,D)->  eval_arg_next_bb18_in(V_in_quote_0',B,C,D)
                  [B>=2,3>=B,V_in_quote_0'=1,V_in_quote_0=0] 
* Loop 28: eval_arg_next_bb18_in(A,B,A,A) [A>=0,1>=A,B=3] 
* Loop 29: eval_arg_next_bb18_in(A,B,A,A) [A>=0,1>=A,B=2] 
* Loop 30: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) [D=0,C=1,B=3,V_in_quote_0=1] 
* Loop 31: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) [D=0,C=1,B=2,V_in_quote_0=1] 
* Loop 32: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) [D=1,C=0,B=3,V_in_quote_0=0] 
* Loop 33: eval_arg_next_bb18_in(V_in_quote_0,B,C,D) [D=1,C=0,B=2,V_in_quote_0=0] 

### Ranking functions of CR eval_arg_next_bb18_in(V_in_quote_0,B,C,D) 

#### Partial ranking functions of CR eval_arg_next_bb18_in(V_in_quote_0,B,C,D) 
* Partial RF of phase [25,26,27]:
  - RF of loop [26:1]:
    V_in_quote_0 depends on loops [27:1] 
  - RF of loop [27:1]:
    -V_in_quote_0+1 depends on loops [26:1] 


### Resulting Chains:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) 
* [[25,26,27]]...
* [[25,26,27],33]
* [[25,26,27],32]
* [[25,26,27],31]
* [[25,26,27],30]
* [[25,26,27],29]
* [[25,26,27],28]
* [33]
* [32]
* [29]
* [28]


### Merging Chains  eval_arg_next_bb18_in/4 into  External patterns of execution 
* [[33],[33,[25,26,27]]] --> 1 
* [[32],[32,[25,26,27]]] --> 2 
* [[31,[25,26,27]]] --> 3 
* [[29],[29,[25,26,27]]] --> 4 
* [[30,[25,26,27]]] --> 5 
* [[28],[28,[25,26,27]]] --> 6 
* [[[25,26,27]]] --> 7 


### Specialization of cost equations eval_arg_next_bb1_in/1 
* CE 6 is refined into CE [42,43,44,45,46] 
* CE 7 is refined into CE [47,48,49,50,51] 
* CE 11 is refined into CE [52] 
* CE 4 is refined into CE [53,54] 
* CE 5 is refined into CE [55,56] 
* CE 8 is refined into CE [57,58,59,60,61] 
* CE 9 is refined into CE [62,63,64,65,66] 
* CE 10 is refined into CE [67] 


#### Refined cost equations eval_arg_next_bb1_in/1 
* CE 42: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):1
     [G=1,F=0,E=2,D=0,C=6,B=7] 
* CE 43: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):3
     [G=0,F=1,E=2,D=0,C=6,B=7] 
* CE 44: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,F):4
     [F>=0,1>=F,E=2,D=0,C=6,B=7] 
* CE 45: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):7
     [E=2,D=0,C=6,B=7] 
* CE 46: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):4
     [D=2,E=0,C=6,B=7] 
* CE 47: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):2
     [G=1,F=0,E=3,D=0,C=6,B=7] 
* CE 48: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):5
     [G=0,F=1,E=3,D=0,C=6,B=7] 
* CE 49: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,F):6
     [F>=0,1>=F,E=3,D=0,C=6,B=7] 
* CE 50: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):7
     [E=3,D=0,C=6,B=7] 
* CE 51: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):4
     [D=3,E=0,C=6,B=7] 
* CE 52: eval_arg_next_bb1_in(B) = 0
     [B=7] 
* CE 53: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):2+ eval_arg_next_bb1_in(D)
     [D=7,C=5,B=7] 
* CE 54: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):4
     [D=7,C=5,B=7] 
* CE 55: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):1+ eval_arg_next_bb1_in(D)
     [D=7,C=4,B=7] 
* CE 56: eval_arg_next_bb1_in(B) = 2+ eval_arg_next_bb8_in(C):4
     [D=7,C=4,B=7] 
* CE 57: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):1+ eval_arg_next_bb1_in(H)
     [H=7,G=1,F=0,E=2,D=0,C=6,B=7] 
* CE 58: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):3+ eval_arg_next_bb1_in(H)
     [H=7,G=0,F=1,E=2,D=0,C=6,B=7] 
* CE 59: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,F):4+ eval_arg_next_bb1_in(G)
     [F>=0,1>=F,G=7,E=2,D=0,C=6,B=7] 
* CE 60: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):7
     [H=7,E=2,D=0,C=6,B=7] 
* CE 61: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):4
     [D=7,E=2,F=0,C=6,B=7] 
* CE 62: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):2+ eval_arg_next_bb1_in(H)
     [H=7,G=1,F=0,E=3,D=0,C=6,B=7] 
* CE 63: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):5+ eval_arg_next_bb1_in(H)
     [H=7,G=0,F=1,E=3,D=0,C=6,B=7] 
* CE 64: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,F):6+ eval_arg_next_bb1_in(G)
     [F>=0,1>=F,G=7,E=3,D=0,C=6,B=7] 
* CE 65: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):3+ eval_arg_next_bb18_in(D,E,F,G):7
     [H=7,E=3,D=0,C=6,B=7] 
* CE 66: eval_arg_next_bb1_in(B) = 3+ eval_arg_next_bb8_in(C):4
     [D=7,E=3,F=0,C=6,B=7] 
* CE 67: eval_arg_next_bb1_in(B) = 1+ eval_arg_next_bb1_in(C)
     [C=7,B=7] 

### Cost equations --> "Loop" of eval_arg_next_bb1_in/1 
* CEs [53,55,57,58,59,62,63,64,67] --> Loop 34 
* CEs [45,46,50,51,54,56,60,61,65,66] --> Loop 35 
* CEs [42,43,44,47,48,49,52] --> Loop 36 

#### Loops of eval_arg_next_bb1_in/1 
* Loop 34: eval_arg_next_bb1_in(B)->  eval_arg_next_bb1_in(B')
                  [B'=7,B=7] 
* Loop 35: eval_arg_next_bb1_in(B) [B=7] 
* Loop 36: eval_arg_next_bb1_in(B) [B=7] 

### Ranking functions of CR eval_arg_next_bb1_in(B) 

#### Partial ranking functions of CR eval_arg_next_bb1_in(B) 


### Resulting Chains:eval_arg_next_bb1_in(B) 
* [[34]]...
* [[34],36]
* [[34],35]...
* [36]
* [35]...


### Merging Chains  eval_arg_next_bb1_in/1 into  External patterns of execution 
* [[36],[36,[34]]] --> 1 
* [[35],[[34]],[35,[34]]] --> 2 


### Specialization of cost equations eval_arg_next_1/1 
* CE 3 is refined into CE [68,69] 


#### Refined cost equations eval_arg_next_1/1 
* CE 68: eval_arg_next_1(B) = 1+ eval_arg_next_bb1_in(C):1
     [C=7] 
* CE 69: eval_arg_next_1(B) = 1+ eval_arg_next_bb1_in(C):2
     [C=7] 

### Cost equations --> "Loop" of eval_arg_next_1/1 
* CEs [69] --> Loop 37 
* CEs [68] --> Loop 38 

#### Loops of eval_arg_next_1/1 
* Loop 37: eval_arg_next_1(B) [] 
* Loop 38: eval_arg_next_1(B) [] 

### Ranking functions of CR eval_arg_next_1(B) 

#### Partial ranking functions of CR eval_arg_next_1(B) 


### Resulting Chains:eval_arg_next_1(B) 
* [38]
* [37]...


### Merging Chains  eval_arg_next_1/1 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_arg_next_start/1 
* CE 2 is refined into CE [70,71] 


#### Refined cost equations eval_arg_next_start/1 
* CE 70: eval_arg_next_start(B) = 0+ eval_arg_next_1(B):1
     [] 
* CE 71: eval_arg_next_start(B) = 0+ eval_arg_next_1(B):2
     [] 

### Cost equations --> "Loop" of eval_arg_next_start/1 
* CEs [71] --> Loop 39 
* CEs [70] --> Loop 40 

#### Loops of eval_arg_next_start/1 
* Loop 39: eval_arg_next_start(B) [] 
* Loop 40: eval_arg_next_start(B) [] 

### Ranking functions of CR eval_arg_next_start(B) 

#### Partial ranking functions of CR eval_arg_next_start(B) 


### Resulting Chains:eval_arg_next_start(B) 
* [40]
* [39]...


### Merging Chains  eval_arg_next_start/1 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [24] 

 * loop 24:eval_arg_next_bb8_in(B) -> [eval_arg_next_bb8_in(B')] 
1
#### Cost of phase [24]:eval_arg_next_bb8_in(B) -> [eval_arg_next_bb8_in(B')] 
1*it(24)+0
#### Cost of phase [24]:eval_arg_next_bb8_in(B) -> [eval_arg_next_bb8_in(B')] 
1*it(24)+0
#### Cost of phase [24]:eval_arg_next_bb8_in(B) -> [eval_arg_next_bb8_in(B')] 
1*it(24)+0
#### Cost of phase [24]:eval_arg_next_bb8_in(B) -> [eval_arg_next_bb8_in(B')] 
1*it(24)+0
#### Cost of chains of eval_arg_next_bb8_in(B):
* Chain [[24]]...: 1*it(24)+0
  with precondition: [B>=4,6>=B] 

* Chain [[24],23]: 1*it(24)+0
  with precondition: [B=4] 

* Chain [[24],22]: 1*it(24)+0
  with precondition: [B=5] 

* Chain [[24],21]: 1*it(24)+0
  with precondition: [B=6] 

* Chain [23]: 0
  with precondition: [B=4] 

* Chain [22]: 0
  with precondition: [B=5] 

* Chain [21]: 0
  with precondition: [B=6] 


#### Cost of loops [25,26,27] 

 * loop 25:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
1
 * loop 26:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
1
 * loop 27:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
1
#### Cost of phase [25,26,27]:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
3*it(25)+0
#### Cost of phase [25,26,27]:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
3*it(25)+0
#### Cost of phase [25,26,27]:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
3*it(25)+0
#### Cost of phase [25,26,27]:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
3*it(25)+0
#### Cost of phase [25,26,27]:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
3*it(25)+0
#### Cost of phase [25,26,27]:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
3*it(25)+0
#### Cost of phase [25,26,27]:eval_arg_next_bb18_in(V_in_quote_0,B,C,D) -> [eval_arg_next_bb18_in(V_in_quote_0',B',C',D')] 
3*it(25)+0
#### Cost of chains of eval_arg_next_bb18_in(V_in_quote_0,B,C,D):
* Chain [[25,26,27]]...: 3*it(25)+0
  with precondition: [V_in_quote_0>=0,1>=V_in_quote_0,B>=2,3>=B] 

* Chain [[25,26,27],33]: 3*it(25)+0
  with precondition: [B=2,C=0,D=1,1>=V_in_quote_0,V_in_quote_0>=0] 

* Chain [[25,26,27],32]: 3*it(25)+0
  with precondition: [B=3,C=0,D=1,1>=V_in_quote_0,V_in_quote_0>=0] 

* Chain [[25,26,27],31]: 3*it(25)+0
  with precondition: [B=2,C=1,D=0,1>=V_in_quote_0,V_in_quote_0>=0] 

* Chain [[25,26,27],30]: 3*it(25)+0
  with precondition: [B=3,C=1,D=0,1>=V_in_quote_0,V_in_quote_0>=0] 

* Chain [[25,26,27],29]: 3*it(25)+0
  with precondition: [B=2,D=C,1>=V_in_quote_0,1>=D,V_in_quote_0>=0,D>=0] 

* Chain [[25,26,27],28]: 3*it(25)+0
  with precondition: [B=3,D=C,1>=V_in_quote_0,1>=D,V_in_quote_0>=0,D>=0] 

* Chain [33]: 0
  with precondition: [V_in_quote_0=0,B=2,C=0,D=1] 

* Chain [32]: 0
  with precondition: [V_in_quote_0=0,B=3,C=0,D=1] 

* Chain [29]: 0
  with precondition: [B=2,V_in_quote_0=C,V_in_quote_0=D,1>=V_in_quote_0,V_in_quote_0>=0] 

* Chain [28]: 0
  with precondition: [B=3,V_in_quote_0=C,V_in_quote_0=D,1>=V_in_quote_0,V_in_quote_0>=0] 


#### Cost of loops [34] 

 * loop 34:eval_arg_next_bb1_in(B) -> [eval_arg_next_bb1_in(B')] 
1*s(22)+0
#### Cost of phase [34]:eval_arg_next_bb1_in(B) -> [eval_arg_next_bb1_in(B')] 
1*s(23)+0
#### Cost of phase [34]:eval_arg_next_bb1_in(B) -> [eval_arg_next_bb1_in(B')] 
1*s(23)+0
#### Cost of phase [34]:eval_arg_next_bb1_in(B) -> [eval_arg_next_bb1_in(B')] 
1*s(23)+0
#### Cost of chains of eval_arg_next_bb1_in(B):
* Chain [[34]]...: 1*s(23)+0
  with precondition: [B=7] 

* Chain [[34],36]: 2*aux(13)+0
  with precondition: [B=7] 

* Chain [[34],35]...: 2*aux(14)+0
  with precondition: [B=7] 

* Chain [36]: 1*aux(13)+0
  with precondition: [B=7] 

* Chain [35]...: 1*aux(14)+0
  with precondition: [B=7] 


#### Cost of chains of eval_arg_next_1(B):
* Chain [38]: 1*s(55)+1
  with precondition: [] 

* Chain [37]...: 1*s(56)+1
  with precondition: [] 


#### Cost of chains of eval_arg_next_start(B):
* Chain [40]: 1*s(57)+1
  with precondition: [] 

* Chain [39]...: 1*s(58)+1
  with precondition: [] 


Closed-form bounds of eval_arg_next_start(B): 
-------------------------------------
* Chain [40] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [39]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_arg_next_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 200 ms.
* Invariants computed in 124 ms.
   - Backward Invariants 83 ms.
   - Transitive Invariants 11 ms.
* Refinement performed in 216 ms.
* Termination proved in 17 ms.
* Upper bounds computed in 151 ms.
   - Equation cost structures 52 ms.
   - Phase cost structures 41 ms.
   - Chain cost structures 64 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 845 ms.

