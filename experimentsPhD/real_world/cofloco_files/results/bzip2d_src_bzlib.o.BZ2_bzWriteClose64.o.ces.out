Warning: Ignored call to eval_BZ2_bzWriteClose64_stop/1 in equation eval_BZ2_bzWriteClose64_bb59_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_BZ2_bzWriteClose64_24/1,eval_BZ2_bzWriteClose64_25/2,eval_BZ2_bzWriteClose64_32/3,eval_BZ2_bzWriteClose64_33/3,eval_BZ2_bzWriteClose64_35/3,eval_BZ2_bzWriteClose64_36/3,eval_BZ2_bzWriteClose64_bb22_in/1,eval_BZ2_bzWriteClose64_bb30_in/2]
1. non_recursive  : [eval_BZ2_bzWriteClose64_bb59_in/1]
2. non_recursive  : [eval_BZ2_bzWriteClose64_bb40_in/1]
3. non_recursive  : [eval_BZ2_bzWriteClose64_72/1]
4. non_recursive  : [eval_BZ2_bzWriteClose64_71/1]
5. non_recursive  : [eval_BZ2_bzWriteClose64_70/1]
6. non_recursive  : [eval_BZ2_bzWriteClose64_bb54_in/1]
7. non_recursive  : [eval_BZ2_bzWriteClose64_bb52_in/1]
8. non_recursive  : [eval_BZ2_bzWriteClose64_bb50_in/1]
9. non_recursive  : [eval_BZ2_bzWriteClose64_bb48_in/1]
10. non_recursive  : [eval_BZ2_bzWriteClose64_bb46_in/1]
11. non_recursive  : [eval_BZ2_bzWriteClose64_bb44_in/1]
12. non_recursive  : [eval_BZ2_bzWriteClose64_bb42_in/1]
13. non_recursive  : [eval_BZ2_bzWriteClose64_49/1]
14. non_recursive  : [eval_BZ2_bzWriteClose64_48/1]
15. non_recursive  : [eval_BZ2_bzWriteClose64_47/1]
16. non_recursive  : [eval_BZ2_bzWriteClose64_46/1]
17. non_recursive  : [eval_BZ2_bzWriteClose64_45/1]
18. non_recursive  : [eval_BZ2_bzWriteClose64_bb35_in/1]
19. non_recursive  : [eval_BZ2_bzWriteClose64_bb28_in/1]
20. non_recursive  : [eval_BZ2_bzWriteClose64_bb26_in/1]
21. non_recursive  : [eval_BZ2_bzWriteClose64_bb33_in/1]
22. non_recursive  : [loop_cont_eval_BZ2_bzWriteClose64_bb22_in/2]
23. non_recursive  : [eval_BZ2_bzWriteClose64_bb19_in/1]
24. non_recursive  : [eval_BZ2_bzWriteClose64_bb17_in/1]
25. non_recursive  : [eval_BZ2_bzWriteClose64_bb15_in/1]
26. non_recursive  : [eval_BZ2_bzWriteClose64_bb13_in/1]
27. non_recursive  : [eval_BZ2_bzWriteClose64_bb9_in/1]
28. non_recursive  : [eval_BZ2_bzWriteClose64_7/1]
29. non_recursive  : [eval_BZ2_bzWriteClose64_6/1]
30. non_recursive  : [eval_BZ2_bzWriteClose64_bb3_in/1]
31. non_recursive  : [eval_BZ2_bzWriteClose64_bb57_in/1]
32. non_recursive  : [eval_BZ2_bzWriteClose64_bb0_in/1]
33. non_recursive  : [eval_BZ2_bzWriteClose64_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_BZ2_bzWriteClose64_bb22_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_BZ2_bzWriteClose64_49/1
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_BZ2_bzWriteClose64_46/1
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_BZ2_bzWriteClose64_bb35_in/1
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into loop_cont_eval_BZ2_bzWriteClose64_bb22_in/2
23. SCC is partially evaluated into eval_BZ2_bzWriteClose64_bb19_in/1
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_BZ2_bzWriteClose64_7/1
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is partially evaluated into eval_BZ2_bzWriteClose64_bb0_in/1
33. SCC is partially evaluated into eval_BZ2_bzWriteClose64_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_BZ2_bzWriteClose64_bb22_in/1 
* CE 11 is refined into CE [22] 
* CE 12 is refined into CE [23] 
* CE 13 is refined into CE [24] 
* CE 10 is refined into CE [25] 


#### Refined cost equations eval_BZ2_bzWriteClose64_bb22_in/1 
* CE 22: eval_BZ2_bzWriteClose64_bb22_in(B) = 0
     [B=4] 
* CE 23: eval_BZ2_bzWriteClose64_bb22_in(B) = 0
     [B=3] 
* CE 24: eval_BZ2_bzWriteClose64_bb22_in(B) = 0
     [B=2] 
* CE 25: eval_BZ2_bzWriteClose64_bb22_in(B) = 1+ eval_BZ2_bzWriteClose64_bb22_in(B)
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzWriteClose64_bb22_in/1 
* CEs [25] --> Loop 15 
* CEs [22] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 

#### Loops of eval_BZ2_bzWriteClose64_bb22_in/1 
* Loop 15: eval_BZ2_bzWriteClose64_bb22_in(B)->  eval_BZ2_bzWriteClose64_bb22_in(B)
                  [] 
* Loop 16: eval_BZ2_bzWriteClose64_bb22_in(B) [B=4] 
* Loop 17: eval_BZ2_bzWriteClose64_bb22_in(B) [B=3] 
* Loop 18: eval_BZ2_bzWriteClose64_bb22_in(B) [B=2] 

### Ranking functions of CR eval_BZ2_bzWriteClose64_bb22_in(B) 

#### Partial ranking functions of CR eval_BZ2_bzWriteClose64_bb22_in(B) 


### Resulting Chains:eval_BZ2_bzWriteClose64_bb22_in(B) 
* [[15]]...
* [[15],18]
* [[15],17]
* [[15],16]
* [18]
* [17]
* [16]


### Merging Chains  eval_BZ2_bzWriteClose64_bb22_in/1 into  External patterns of execution 
* [[18],[18,[15]]] --> 1 
* [[17],[17,[15]]] --> 2 
* [[16],[16,[15]]] --> 3 
* [[[15]]] --> 4 


### Specialization of cost equations eval_BZ2_bzWriteClose64_49/1 
* CE 21 is refined into CE [26] 


#### Refined cost equations eval_BZ2_bzWriteClose64_49/1 
* CE 26: eval_BZ2_bzWriteClose64_49(B) = 0
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzWriteClose64_49/1 
* CEs [26] --> Loop 19 

#### Loops of eval_BZ2_bzWriteClose64_49/1 
* Loop 19: eval_BZ2_bzWriteClose64_49(B) [] 

### Ranking functions of CR eval_BZ2_bzWriteClose64_49(B) 

#### Partial ranking functions of CR eval_BZ2_bzWriteClose64_49(B) 


### Resulting Chains:eval_BZ2_bzWriteClose64_49(B) 
* [19]


### Merging Chains  eval_BZ2_bzWriteClose64_49/1 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations eval_BZ2_bzWriteClose64_46/1 
* CE 19 is refined into CE [27] 
* CE 20 is refined into CE [28] 


#### Refined cost equations eval_BZ2_bzWriteClose64_46/1 
* CE 27: eval_BZ2_bzWriteClose64_46(B) = 0
     [] 
* CE 28: eval_BZ2_bzWriteClose64_46(B) = 0+ eval_BZ2_bzWriteClose64_49(B):1
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzWriteClose64_46/1 
* CEs [27,28] --> Loop 20 

#### Loops of eval_BZ2_bzWriteClose64_46/1 
* Loop 20: eval_BZ2_bzWriteClose64_46(B) [] 

### Ranking functions of CR eval_BZ2_bzWriteClose64_46(B) 

#### Partial ranking functions of CR eval_BZ2_bzWriteClose64_46(B) 


### Resulting Chains:eval_BZ2_bzWriteClose64_46(B) 
* [20]


### Merging Chains  eval_BZ2_bzWriteClose64_46/1 into  External patterns of execution 
* [[20]] --> 1 


### Specialization of cost equations eval_BZ2_bzWriteClose64_bb35_in/1 
* CE 17 is refined into CE [29] 
* CE 18 is refined into CE [30] 


#### Refined cost equations eval_BZ2_bzWriteClose64_bb35_in/1 
* CE 29: eval_BZ2_bzWriteClose64_bb35_in(B) = 0
     [] 
* CE 30: eval_BZ2_bzWriteClose64_bb35_in(B) = 0+ eval_BZ2_bzWriteClose64_46(B):1
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzWriteClose64_bb35_in/1 
* CEs [29,30] --> Loop 21 

#### Loops of eval_BZ2_bzWriteClose64_bb35_in/1 
* Loop 21: eval_BZ2_bzWriteClose64_bb35_in(B) [] 

### Ranking functions of CR eval_BZ2_bzWriteClose64_bb35_in(B) 

#### Partial ranking functions of CR eval_BZ2_bzWriteClose64_bb35_in(B) 


### Resulting Chains:eval_BZ2_bzWriteClose64_bb35_in(B) 
* [21]


### Merging Chains  eval_BZ2_bzWriteClose64_bb35_in/1 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations loop_cont_eval_BZ2_bzWriteClose64_bb22_in/2 
* CE 16 is refined into CE [31] 
* CE 15 is refined into CE [32] 
* CE 14 is refined into CE [33] 


#### Refined cost equations loop_cont_eval_BZ2_bzWriteClose64_bb22_in/2 
* CE 31: loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A) = 0+ eval_BZ2_bzWriteClose64_bb35_in(A):1
     [C=4] 
* CE 32: loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A) = 0
     [C=3] 
* CE 33: loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_BZ2_bzWriteClose64_bb22_in/2 
* CEs [31] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 

#### Loops of loop_cont_eval_BZ2_bzWriteClose64_bb22_in/2 
* Loop 22: loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A) [C=4] 
* Loop 23: loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A) [C=3] 
* Loop 24: loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A) [C=2] 

### Ranking functions of CR loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A) 


### Resulting Chains:loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A) 
* [24]
* [23]
* [22]


### Merging Chains  loop_cont_eval_BZ2_bzWriteClose64_bb22_in/2 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 
* [[22]] --> 3 


### Specialization of cost equations eval_BZ2_bzWriteClose64_bb19_in/1 
* CE 7 is refined into CE [34,35,36,37] 
* CE 8 is refined into CE [38] 
* CE 9 is refined into CE [39] 


#### Refined cost equations eval_BZ2_bzWriteClose64_bb19_in/1 
* CE 34: eval_BZ2_bzWriteClose64_bb19_in(B) = 1+ eval_BZ2_bzWriteClose64_bb22_in(C):1+ loop_cont_eval_BZ2_bzWriteClose64_bb22_in(D,B):1
     [D=2,C=2] 
* CE 35: eval_BZ2_bzWriteClose64_bb19_in(B) = 1+ eval_BZ2_bzWriteClose64_bb22_in(C):2+ loop_cont_eval_BZ2_bzWriteClose64_bb22_in(D,B):2
     [D=3,C=3] 
* CE 36: eval_BZ2_bzWriteClose64_bb19_in(B) = 1+ eval_BZ2_bzWriteClose64_bb22_in(C):3+ loop_cont_eval_BZ2_bzWriteClose64_bb22_in(D,B):3
     [D=4,C=4] 
* CE 37: eval_BZ2_bzWriteClose64_bb19_in(B) = 1+ eval_BZ2_bzWriteClose64_bb22_in(C):4
     [] 
* CE 38: eval_BZ2_bzWriteClose64_bb19_in(B) = 0+ eval_BZ2_bzWriteClose64_bb35_in(B):1
     [] 
* CE 39: eval_BZ2_bzWriteClose64_bb19_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzWriteClose64_bb19_in/1 
* CEs [34,35,36,38,39] --> Loop 25 
* CEs [37] --> Loop 26 

#### Loops of eval_BZ2_bzWriteClose64_bb19_in/1 
* Loop 25: eval_BZ2_bzWriteClose64_bb19_in(B) [] 
* Loop 26: eval_BZ2_bzWriteClose64_bb19_in(B) [] 

### Ranking functions of CR eval_BZ2_bzWriteClose64_bb19_in(B) 

#### Partial ranking functions of CR eval_BZ2_bzWriteClose64_bb19_in(B) 


### Resulting Chains:eval_BZ2_bzWriteClose64_bb19_in(B) 
* [26]...
* [25]


### Merging Chains  eval_BZ2_bzWriteClose64_bb19_in/1 into  External patterns of execution 
* [[25]] --> 1 
* [[26]] --> 2 


### Specialization of cost equations eval_BZ2_bzWriteClose64_7/1 
* CE 5 is refined into CE [40] 
* CE 6 is refined into CE [41,42] 


#### Refined cost equations eval_BZ2_bzWriteClose64_7/1 
* CE 40: eval_BZ2_bzWriteClose64_7(B) = 0
     [] 
* CE 41: eval_BZ2_bzWriteClose64_7(B) = 0+ eval_BZ2_bzWriteClose64_bb19_in(B):1
     [] 
* CE 42: eval_BZ2_bzWriteClose64_7(B) = 0+ eval_BZ2_bzWriteClose64_bb19_in(B):2
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzWriteClose64_7/1 
* CEs [42] --> Loop 27 
* CEs [40,41] --> Loop 28 

#### Loops of eval_BZ2_bzWriteClose64_7/1 
* Loop 27: eval_BZ2_bzWriteClose64_7(B) [] 
* Loop 28: eval_BZ2_bzWriteClose64_7(B) [] 

### Ranking functions of CR eval_BZ2_bzWriteClose64_7(B) 

#### Partial ranking functions of CR eval_BZ2_bzWriteClose64_7(B) 


### Resulting Chains:eval_BZ2_bzWriteClose64_7(B) 
* [28]
* [27]...


### Merging Chains  eval_BZ2_bzWriteClose64_7/1 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_BZ2_bzWriteClose64_bb0_in/1 
* CE 3 is refined into CE [43] 
* CE 4 is refined into CE [44,45] 


#### Refined cost equations eval_BZ2_bzWriteClose64_bb0_in/1 
* CE 43: eval_BZ2_bzWriteClose64_bb0_in(B) = 0
     [] 
* CE 44: eval_BZ2_bzWriteClose64_bb0_in(B) = 0+ eval_BZ2_bzWriteClose64_7(B):1
     [] 
* CE 45: eval_BZ2_bzWriteClose64_bb0_in(B) = 0+ eval_BZ2_bzWriteClose64_7(B):2
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzWriteClose64_bb0_in/1 
* CEs [45] --> Loop 29 
* CEs [43,44] --> Loop 30 

#### Loops of eval_BZ2_bzWriteClose64_bb0_in/1 
* Loop 29: eval_BZ2_bzWriteClose64_bb0_in(B) [] 
* Loop 30: eval_BZ2_bzWriteClose64_bb0_in(B) [] 

### Ranking functions of CR eval_BZ2_bzWriteClose64_bb0_in(B) 

#### Partial ranking functions of CR eval_BZ2_bzWriteClose64_bb0_in(B) 


### Resulting Chains:eval_BZ2_bzWriteClose64_bb0_in(B) 
* [30]
* [29]...


### Merging Chains  eval_BZ2_bzWriteClose64_bb0_in/1 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


### Specialization of cost equations eval_BZ2_bzWriteClose64_start/2 
* CE 2 is refined into CE [46,47] 


#### Refined cost equations eval_BZ2_bzWriteClose64_start/2 
* CE 46: eval_BZ2_bzWriteClose64_start(V_abandon,B) = 0+ eval_BZ2_bzWriteClose64_bb0_in(B):1
     [] 
* CE 47: eval_BZ2_bzWriteClose64_start(V_abandon,B) = 0+ eval_BZ2_bzWriteClose64_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzWriteClose64_start/2 
* CEs [47] --> Loop 31 
* CEs [46] --> Loop 32 

#### Loops of eval_BZ2_bzWriteClose64_start/2 
* Loop 31: eval_BZ2_bzWriteClose64_start(V_abandon,B) [] 
* Loop 32: eval_BZ2_bzWriteClose64_start(V_abandon,B) [] 

### Ranking functions of CR eval_BZ2_bzWriteClose64_start(V_abandon,B) 

#### Partial ranking functions of CR eval_BZ2_bzWriteClose64_start(V_abandon,B) 


### Resulting Chains:eval_BZ2_bzWriteClose64_start(V_abandon,B) 
* [32]
* [31]...


### Merging Chains  eval_BZ2_bzWriteClose64_start/2 into  External patterns of execution 
* [[32]] --> 1 
* [[31]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [15] 

 * loop 15:eval_BZ2_bzWriteClose64_bb22_in(B) -> [eval_BZ2_bzWriteClose64_bb22_in(B')] 
1
#### Cost of phase [15]:eval_BZ2_bzWriteClose64_bb22_in(B) -> [eval_BZ2_bzWriteClose64_bb22_in(B')] 
1*it(15)+0
#### Cost of phase [15]:eval_BZ2_bzWriteClose64_bb22_in(B) -> [eval_BZ2_bzWriteClose64_bb22_in(B')] 
1*it(15)+0
#### Cost of phase [15]:eval_BZ2_bzWriteClose64_bb22_in(B) -> [eval_BZ2_bzWriteClose64_bb22_in(B')] 
1*it(15)+0
#### Cost of phase [15]:eval_BZ2_bzWriteClose64_bb22_in(B) -> [eval_BZ2_bzWriteClose64_bb22_in(B')] 
1*it(15)+0
#### Cost of chains of eval_BZ2_bzWriteClose64_bb22_in(B):
* Chain [[15]]...: 1*it(15)+0
  with precondition: [] 

* Chain [[15],18]: 1*it(15)+0
  with precondition: [B=2] 

* Chain [[15],17]: 1*it(15)+0
  with precondition: [B=3] 

* Chain [[15],16]: 1*it(15)+0
  with precondition: [B=4] 

* Chain [18]: 0
  with precondition: [B=2] 

* Chain [17]: 0
  with precondition: [B=3] 

* Chain [16]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_BZ2_bzWriteClose64_49(B):
* Chain [19]: 0
  with precondition: [] 


#### Cost of chains of eval_BZ2_bzWriteClose64_46(B):
* Chain [20]: 0
  with precondition: [] 


#### Cost of chains of eval_BZ2_bzWriteClose64_bb35_in(B):
* Chain [21]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_BZ2_bzWriteClose64_bb22_in(C,A):
* Chain [24]: 0
  with precondition: [C=2] 

* Chain [23]: 0
  with precondition: [C=3] 

* Chain [22]: 0
  with precondition: [C=4] 


#### Cost of chains of eval_BZ2_bzWriteClose64_bb19_in(B):
* Chain [26]...: 1*s(4)+1
  with precondition: [] 

* Chain [25]: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_BZ2_bzWriteClose64_7(B):
* Chain [28]: 1*aux(5)+0
  with precondition: [] 

* Chain [27]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_BZ2_bzWriteClose64_bb0_in(B):
* Chain [30]: 1*aux(6)+0
  with precondition: [] 

* Chain [29]...: 1*s(11)+1
  with precondition: [] 


#### Cost of chains of eval_BZ2_bzWriteClose64_start(V_abandon,B):
* Chain [32]: 1*s(12)+0
  with precondition: [] 

* Chain [31]...: 1*s(13)+1
  with precondition: [] 


Closed-form bounds of eval_BZ2_bzWriteClose64_start(V_abandon,B): 
-------------------------------------
* Chain [32] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_BZ2_bzWriteClose64_start(V_abandon,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 16 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 15 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 10 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 64 ms.

