Warning: Ignored call to eval_decode_mcu_AC_refine_stop/1 in equation eval_decode_mcu_AC_refine_bb57_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_decode_mcu_AC_refine_135/6,eval_decode_mcu_AC_refine_136/6,eval_decode_mcu_AC_refine_bb42_in/6,eval_decode_mcu_AC_refine_bb49_in/8,eval_decode_mcu_AC_refine_bb54_in/10]
1. non_recursive  : [eval_decode_mcu_AC_refine_bb57_in/1]
2. non_recursive  : [eval_decode_mcu_AC_refine_bb56_in/1]
3. recursive  : [eval_decode_mcu_AC_refine_bb47_in/2]
4. non_recursive  : [loop_cont_eval_decode_mcu_AC_refine_bb47_in/2]
5. non_recursive  : [loop_cont_eval_decode_mcu_AC_refine_bb42_in/3]
6. non_recursive  : [eval_decode_mcu_AC_refine_bb40_in/5]
7. recursive  : [eval_decode_mcu_AC_refine_86/34,eval_decode_mcu_AC_refine_87/34,eval_decode_mcu_AC_refine_bb26_in/34,eval_decode_mcu_AC_refine_bb30_in/36,eval_decode_mcu_AC_refine_bb36_in/38]
8. recursive  : [eval_decode_mcu_AC_refine_23/12,eval_decode_mcu_AC_refine_24/12,eval_decode_mcu_AC_refine_41/17,eval_decode_mcu_AC_refine_42/17,eval_decode_mcu_AC_refine_66/17,eval_decode_mcu_AC_refine_67/17,eval_decode_mcu_AC_refine_68/17,eval_decode_mcu_AC_refine_69/17,eval_decode_mcu_AC_refine_NewDefault_in/17,eval_decode_mcu_AC_refine_bb11_in/17,eval_decode_mcu_AC_refine_bb13_in/16,eval_decode_mcu_AC_refine_bb21_in/17,eval_decode_mcu_AC_refine_bb24_in/18,eval_decode_mcu_AC_refine_bb25_in/19,eval_decode_mcu_AC_refine_bb37_in/25,eval_decode_mcu_AC_refine_bb39_in/26,eval_decode_mcu_AC_refine_bb5_in/12,eval_decode_mcu_AC_refine_bb9_in/14,loop_cont_eval_decode_mcu_AC_refine_bb26_in/26]
9. non_recursive  : [eval_decode_mcu_AC_refine_bb19_in/7]
10. non_recursive  : [eval_decode_mcu_AC_refine_52/5]
11. non_recursive  : [eval_decode_mcu_AC_refine_51/7]
12. non_recursive  : [loop_cont_eval_decode_mcu_AC_refine_bb5_in/8]
13. non_recursive  : [eval_decode_mcu_AC_refine_bb3_in/2]
14. non_recursive  : [eval_decode_mcu_AC_refine_10/2]
15. non_recursive  : [eval_decode_mcu_AC_refine_9/2]
16. non_recursive  : [eval_decode_mcu_AC_refine_bb0_in/1]
17. non_recursive  : [eval_decode_mcu_AC_refine_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_decode_mcu_AC_refine_bb42_in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_decode_mcu_AC_refine_bb47_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_decode_mcu_AC_refine_bb42_in/3
6. SCC is partially evaluated into eval_decode_mcu_AC_refine_bb40_in/5
7. SCC is partially evaluated into eval_decode_mcu_AC_refine_bb26_in/34
8. SCC is partially evaluated into eval_decode_mcu_AC_refine_bb5_in/12
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_decode_mcu_AC_refine_52/5
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into loop_cont_eval_decode_mcu_AC_refine_bb5_in/8
13. SCC is partially evaluated into eval_decode_mcu_AC_refine_bb3_in/2
14. SCC is partially evaluated into eval_decode_mcu_AC_refine_10/2
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_decode_mcu_AC_refine_bb0_in/1
17. SCC is partially evaluated into eval_decode_mcu_AC_refine_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_decode_mcu_AC_refine_bb42_in/6 
* CE 33 is refined into CE [36] 
* CE 31 is refined into CE [37] 
* CE 32 is refined into CE [38] 


#### Refined cost equations eval_decode_mcu_AC_refine_bb42_in/6 
* CE 36: eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) = 0
     [V_k_4>=V_4+1,B=8] 
* CE 37: eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) = 0
     [V_4>=V_k_4,B=2] 
* CE 38: eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) = 1+ eval_decode_mcu_AC_refine_bb42_in(V_4,D,E,F,B,C)
     [V_4>=V_k_4,V_k_4+1=F] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_bb42_in/6 
* CEs [38] --> Loop 28 
* CEs [36] --> Loop 29 
* CEs [37] --> Loop 30 

#### Loops of eval_decode_mcu_AC_refine_bb42_in/6 
* Loop 28: eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C)->  eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14',V_get_buffer_14',V_k_4',B,C)
                  [V_4>=V_k_4,V_k_4+1=V_k_4'] 
* Loop 29: eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) [V_k_4>=V_4+1,B=8] 
* Loop 30: eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) [V_4>=V_k_4,B=2] 

### Ranking functions of CR eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) 
* RF of phase [28]: [V_4-V_k_4+1]

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    V_4-V_k_4+1


### Resulting Chains:eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) 
* [[28],30]
* [[28],29]
* [30]
* [29]


### Merging Chains  eval_decode_mcu_AC_refine_bb42_in/6 into  External patterns of execution 
* [[30],[30,[28]]] --> 1 
* [[29]] --> 2 
* [[29,[28]]] --> 3 


### Specialization of cost equations eval_decode_mcu_AC_refine_bb47_in/2 
* CE 28 is refined into CE [39] 
* CE 27 is refined into CE [40] 


#### Refined cost equations eval_decode_mcu_AC_refine_bb47_in/2 
* CE 39: eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B) = 0
     [0>=V_num_newnz_4,B=7] 
* CE 40: eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B) = 1+ eval_decode_mcu_AC_refine_bb47_in(C,D)
     [V_num_newnz_4>=1,V_num_newnz_4=C+1,D=7,B=7] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_bb47_in/2 
* CEs [40] --> Loop 31 
* CEs [39] --> Loop 32 

#### Loops of eval_decode_mcu_AC_refine_bb47_in/2 
* Loop 31: eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B)->  eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4',B')
                  [V_num_newnz_4>=1,V_num_newnz_4=V_num_newnz_4'+1,B'=7,B=7] 
* Loop 32: eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B) [0>=V_num_newnz_4,B=7] 

### Ranking functions of CR eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B) 
* RF of phase [31]: [V_num_newnz_4]

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    V_num_newnz_4


### Resulting Chains:eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B) 
* [[31],32]
* [32]


### Merging Chains  eval_decode_mcu_AC_refine_bb47_in/2 into  External patterns of execution 
* [[32]] --> 1 
* [[32,[31]]] --> 2 


### Specialization of cost equations loop_cont_eval_decode_mcu_AC_refine_bb42_in/3 
* CE 35 is refined into CE [41] 
* CE 34 is refined into CE [42,43] 


#### Refined cost equations loop_cont_eval_decode_mcu_AC_refine_bb42_in/3 
* CE 41: loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B) = 0
     [D=8] 
* CE 42: loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B) = 1+ eval_decode_mcu_AC_refine_bb47_in(A,E):1
     [0>=A,E=7,D=2] 
* CE 43: loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B) = 1+ eval_decode_mcu_AC_refine_bb47_in(A,E):2
     [A>=1,E=7,D=2] 

### Cost equations --> "Loop" of loop_cont_eval_decode_mcu_AC_refine_bb42_in/3 
* CEs [41] --> Loop 33 
* CEs [43] --> Loop 34 
* CEs [42] --> Loop 35 

#### Loops of loop_cont_eval_decode_mcu_AC_refine_bb42_in/3 
* Loop 33: loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B) [D=8] 
* Loop 34: loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B) [A>=1,D=2] 
* Loop 35: loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B) [0>=A,D=2] 

### Ranking functions of CR loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B) 


### Resulting Chains:loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B) 
* [35]
* [34]
* [33]


### Merging Chains  loop_cont_eval_decode_mcu_AC_refine_bb42_in/3 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 
* [[33]] --> 3 


### Specialization of cost equations eval_decode_mcu_AC_refine_bb40_in/5 
* CE 21 is refined into CE [44,45,46,47] 
* CE 22 is refined into CE [48] 


#### Refined cost equations eval_decode_mcu_AC_refine_bb40_in/5 
* CE 44: eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B) = 1+ eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,C,D):1+ loop_cont_eval_decode_mcu_AC_refine_bb42_in(E,D,B):1
     [V_4>=V_k_3,0>=D,E=2,C=2] 
* CE 45: eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B) = 1+ eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,C,D):1+ loop_cont_eval_decode_mcu_AC_refine_bb42_in(E,D,B):2
     [V_4>=V_k_3,D>=1,E=2,C=2] 
* CE 46: eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B) = 1+ eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,C,D):2+ loop_cont_eval_decode_mcu_AC_refine_bb42_in(E,D,B):3
     [V_k_3>=V_4+1,E=8,C=8] 
* CE 47: eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B) = 1+ eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,C,D):3+ loop_cont_eval_decode_mcu_AC_refine_bb42_in(E,D,B):3
     [V_4>=V_k_3,E=8,C=8] 
* CE 48: eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B) = 0
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_bb40_in/5 
* CEs [44,45,46,47,48] --> Loop 36 

#### Loops of eval_decode_mcu_AC_refine_bb40_in/5 
* Loop 36: eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B) [] 

### Ranking functions of CR eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B) 

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B) 


### Resulting Chains:eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B) 
* [36]


### Merging Chains  eval_decode_mcu_AC_refine_bb40_in/5 into  External patterns of execution 
* [[36]] --> 1 


### Specialization of cost equations eval_decode_mcu_AC_refine_bb26_in/34 
* CE 25 is refined into CE [49] 
* CE 26 is refined into CE [50] 
* CE 23 is refined into CE [51] 
* CE 24 is refined into CE [52] 


#### Refined cost equations eval_decode_mcu_AC_refine_bb26_in/34 
* CE 49: eval_decode_mcu_AC_refine_bb26_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,A,O,A,B,C,D,E,F,G,H,I,J,K,L,M,N,A,P,Q,R) = 0
     [A>=E,A+1=R,O=3] 
* CE 50: eval_decode_mcu_AC_refine_bb26_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,M,N,O) = 0
     [A>=O,O>=E,P=3] 
* CE 51: eval_decode_mcu_AC_refine_bb26_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,B,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1) = 0
     [A>=O,O>=E,P=2] 
* CE 52: eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T) = 1+ eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,U,V,W,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T)
     [V_4>=V_k_1+1,V_k_1>=V_k_0,B>=2,3>=B,V_k_1+1=W] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_bb26_in/34 
* CEs [52] --> Loop 37 
* CEs [50] --> Loop 38 
* CEs [49] --> Loop 39 
* CEs [51] --> Loop 40 

#### Loops of eval_decode_mcu_AC_refine_bb26_in/34 
* Loop 37: eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T)->  eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8',V_get_buffer_8',V_k_1',B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T)
                  [V_4>=V_k_1+1,V_k_1>=V_k_0,B>=2,3>=B,V_k_1+1=V_k_1'] 
* Loop 38: eval_decode_mcu_AC_refine_bb26_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,M,N,O) [A>=O,O>=E,P=3] 
* Loop 39: eval_decode_mcu_AC_refine_bb26_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,A,O,A,B,C,D,E,F,G,H,I,J,K,L,M,N,A,P,Q,R) [A>=E,A+1=R,O=3] 
* Loop 40: eval_decode_mcu_AC_refine_bb26_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,B,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1) [A>=O,O>=E,P=2] 

### Ranking functions of CR eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T) 
* RF of phase [37]: [V_4-V_k_1]

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T) 
* Partial RF of phase [37]:
  - RF of loop [37:1]:
    V_4-V_k_1


### Resulting Chains:eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T) 
* [[37],40]
* [[37],39]
* [[37],38]
* [40]
* [39]
* [38]


### Merging Chains  eval_decode_mcu_AC_refine_bb26_in/34 into  External patterns of execution 
* [[40],[40,[37]]] --> 1 
* [[39]] --> 2 
* [[38]] --> 3 
* [[39,[37]]] --> 4 
* [[38,[37]]] --> 5 


### Specialization of cost equations eval_decode_mcu_AC_refine_bb5_in/12 
* CE 15 is refined into CE [53] 
* CE 16 is refined into CE [54] 
* CE 14 is refined into CE [55] 
* CE 13 is refined into CE [56] 
* CE 9 is refined into CE [57] 
* CE 10 is refined into CE [58] 
* CE 11 is refined into CE [59,60,61,62] 
* CE 12 is refined into CE [63,64,65,66] 


#### Refined cost equations eval_decode_mcu_AC_refine_bb5_in/12 
* CE 53: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,A,G,H,E,I,J) = 0
     [A>=E,F=6] 
* CE 54: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,A,C,D,E,G,H) = 0
     [E>=A+1,F=6] 
* CE 55: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,A,B,E,G,H,I) = 0
     [A>=E,F=5] 
* CE 56: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,A,B,E,G,H,I) = 0
     [A>=E,F=4] 
* CE 57: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,B,G,H,I,J,K) = 0
     [A>=E,F=2] 
* CE 58: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,B,G,H,I,J,K) = 1+ eval_decode_mcu_AC_refine_bb26_in(A,B,C,D,E,L,M,N,O,P,Q,R,Q,R,E,S,B,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1):1
     [A>=E,S=2,F=2] 
* CE 59: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,A,E,F,G,H,I,J,K) = 2+ eval_decode_mcu_AC_refine_bb26_in(A,B,C,D,A,L,M,N,O,P,Q,R,Q,R,A,S,A,B,C,D,A,L,M,N,O,P,Q,R,Q,R,A,T,U,V):2+ eval_decode_mcu_AC_refine_bb5_in(A,B,T,U,W,E,F,G,H,I,J,K)
     [A+2=W,A+1=V,S=3] 
* CE 60: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) = 2+ eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,N,O,V_k_0,P,V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,N,O,V_k_0,N,O,V_k_0):3+ eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,N,O,Q,B,C,D,E,F,G,H)
     [V_4>=V_k_0,V_k_0+1=Q,P=3] 
* CE 61: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) = 2+ eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,N,O,V_k_0,P,V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,Q,R,V_4,S,T,U):4+ eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,S,T,V,B,C,D,E,F,G,H)
     [V_4>=V_k_0+1,V_4+2=V,V_4+1=U,P=3] 
* CE 62: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) = 2+ eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,N,O,V_k_0,P,V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,Q,R,S,Q,R,S):5+ eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,Q,R,T,B,C,D,E,F,G,H)
     [V_4>=S,S>=V_k_0+1,S+1=T,P=3] 
* CE 63: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,A,E,F,G,H,I,J,K) = 2+ eval_decode_mcu_AC_refine_bb26_in(A,B,C,D,A,L,M,N,O,P,Q,R,Q,R,A,S,A,B,C,D,A,L,M,N,O,P,Q,R,Q,R,A,T,U,V):2+ eval_decode_mcu_AC_refine_bb5_in(A,W,T,U,X,E,F,G,H,I,J,K)
     [A+2=X,B+1=W,A+1=V,S=3] 
* CE 64: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) = 2+ eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,N,O,V_k_0,P,V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,N,O,V_k_0,N,O,V_k_0):3+ eval_decode_mcu_AC_refine_bb5_in(V_4,Q,N,O,R,B,C,D,E,F,G,H)
     [V_4>=V_k_0,V_k_0+1=R,V_num_newnz_0+1=Q,P=3] 
* CE 65: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) = 2+ eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,N,O,V_k_0,P,V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,Q,R,V_4,S,T,U):4+ eval_decode_mcu_AC_refine_bb5_in(V_4,V,S,T,W,B,C,D,E,F,G,H)
     [V_4>=V_k_0+1,V_4+2=W,V_num_newnz_0+1=V,V_4+1=U,P=3] 
* CE 66: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) = 2+ eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,N,O,V_k_0,P,V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,I,J,K,L,M,N,O,Q,R,S,Q,R,S):5+ eval_decode_mcu_AC_refine_bb5_in(V_4,T,Q,R,U,B,C,D,E,F,G,H)
     [V_4>=S,S>=V_k_0+1,S+1=U,V_num_newnz_0+1=T,P=3] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_bb5_in/12 
* CEs [62] --> Loop 41 
* CEs [60] --> Loop 42 
* CEs [61] --> Loop 43 
* CEs [66] --> Loop 44 
* CEs [64] --> Loop 45 
* CEs [65] --> Loop 46 
* CEs [59] --> Loop 47 
* CEs [63] --> Loop 48 
* CEs [53] --> Loop 49 
* CEs [54] --> Loop 50 
* CEs [55] --> Loop 51 
* CEs [56] --> Loop 52 
* CEs [57,58] --> Loop 53 

#### Loops of eval_decode_mcu_AC_refine_bb5_in/12 
* Loop 41: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H)->  eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0',V_get_buffer_0',V_k_0',B,C,D,E,F,G,H)
                  [V_4+1>=V_k_0',V_k_0'>=V_k_0+2] 
* Loop 42: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H)->  eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0',V_get_buffer_0',V_k_0',B,C,D,E,F,G,H)
                  [V_4>=V_k_0,V_k_0+1=V_k_0'] 
* Loop 43: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H)->  eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0',V_get_buffer_0',V_k_0',B,C,D,E,F,G,H)
                  [V_4>=V_k_0+1,V_4+2=V_k_0'] 
* Loop 44: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H)->  eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B,C,D,E,F,G,H)
                  [V_4+1>=V_k_0',V_k_0'>=V_k_0+2,V_num_newnz_0+1=V_num_newnz_0'] 
* Loop 45: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H)->  eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B,C,D,E,F,G,H)
                  [V_4>=V_k_0,V_k_0+1=V_k_0',V_num_newnz_0+1=V_num_newnz_0'] 
* Loop 46: eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H)->  eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B,C,D,E,F,G,H)
                  [V_4>=V_k_0+1,V_4+2=V_k_0',V_num_newnz_0+1=V_num_newnz_0'] 
* Loop 47: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,A,E,F,G,H,I,J,K)->  eval_decode_mcu_AC_refine_bb5_in(A,B,A',B',C',E,F,G,H,I,J,K)
                  [A+2=C'] 
* Loop 48: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,A,E,F,G,H,I,J,K)->  eval_decode_mcu_AC_refine_bb5_in(A,A',B',C',D',E,F,G,H,I,J,K)
                  [A+2=D',B+1=A'] 
* Loop 49: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,A,G,H,E,I,J) [A>=E,F=6] 
* Loop 50: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,A,C,D,E,G,H) [E>=A+1,F=6] 
* Loop 51: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,A,B,E,G,H,I) [A>=E,F=5] 
* Loop 52: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,A,B,E,G,H,I) [A>=E,F=4] 
* Loop 53: eval_decode_mcu_AC_refine_bb5_in(A,B,C,D,E,F,B,G,H,I,J,K) [A>=E,F=2] 

### Ranking functions of CR eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) 
* RF of phase [41,42,44,45]: [V_4-V_k_0+1]

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) 
* Partial RF of phase [41,42,44,45]:
  - RF of loop [41:1,44:1]:
    V_4/2-V_k_0/2
  - RF of loop [42:1,45:1]:
    V_4-V_k_0+1


### Resulting Chains:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) 
* [[41,42,44,45],53]
* [[41,42,44,45],52]
* [[41,42,44,45],51]
* [[41,42,44,45],50]
* [[41,42,44,45],49]
* [[41,42,44,45],48,50]
* [[41,42,44,45],47,50]
* [[41,42,44,45],46,50]
* [[41,42,44,45],43,50]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48,50]
* [47,50]
* [46,50]
* [43,50]


### Merging Chains  eval_decode_mcu_AC_refine_bb5_in/12 into  External patterns of execution 
* [[53]] --> 1 
* [[53,[41,42,44,45]]] --> 2 
* [[52]] --> 3 
* [[52,[41,42,44,45]]] --> 4 
* [[51]] --> 5 
* [[51,[41,42,44,45]]] --> 6 
* [[50]] --> 7 
* [[50,47],[50,48]] --> 8 
* [[50,43],[50,46],[50,43,[41,42,44,45]],[50,46,[41,42,44,45]],[50,47,[41,42,44,45]],[50,48,[41,42,44,45]]] --> 9 
* [[50,[41,42,44,45]]] --> 10 
* [[49]] --> 11 
* [[49,[41,42,44,45]]] --> 12 


### Specialization of cost equations eval_decode_mcu_AC_refine_52/5 
* CE 29 is refined into CE [67] 
* CE 30 is refined into CE [68,69] 


#### Refined cost equations eval_decode_mcu_AC_refine_52/5 
* CE 67: eval_decode_mcu_AC_refine_52(V_4,V_num_newnz_0,V_k_0,V_91,B) = 0+ eval_decode_mcu_AC_refine_bb40_in(V_4,C,D,V_k_0,B):1
     [] 
* CE 68: eval_decode_mcu_AC_refine_52(V_4,V_num_newnz_0,V_k_0,V_91,B) = 1+ eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_0,C):1
     [0>=V_num_newnz_0,C=7] 
* CE 69: eval_decode_mcu_AC_refine_52(V_4,V_num_newnz_0,V_k_0,V_91,B) = 1+ eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_0,C):2
     [V_num_newnz_0>=1,C=7] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_52/5 
* CEs [67,68,69] --> Loop 54 

#### Loops of eval_decode_mcu_AC_refine_52/5 
* Loop 54: eval_decode_mcu_AC_refine_52(V_4,V_num_newnz_0,V_k_0,V_91,B) [] 

### Ranking functions of CR eval_decode_mcu_AC_refine_52(V_4,V_num_newnz_0,V_k_0,V_91,B) 

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_52(V_4,V_num_newnz_0,V_k_0,V_91,B) 


### Resulting Chains:eval_decode_mcu_AC_refine_52(V_4,V_num_newnz_0,V_k_0,V_91,B) 
* [54]


### Merging Chains  eval_decode_mcu_AC_refine_52/5 into  External patterns of execution 
* [[54]] --> 1 


### Specialization of cost equations loop_cont_eval_decode_mcu_AC_refine_bb5_in/8 
* CE 20 is refined into CE [70] 
* CE 19 is refined into CE [71] 
* CE 18 is refined into CE [72] 
* CE 17 is refined into CE [73,74] 


#### Refined cost equations loop_cont_eval_decode_mcu_AC_refine_bb5_in/8 
* CE 70: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) = 0+ eval_decode_mcu_AC_refine_bb40_in(A,B,C,D,G):1
     [I=6] 
* CE 71: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) = 0+ eval_decode_mcu_AC_refine_bb40_in(A,J,F,C,G):1
     [E=D+J,I=5] 
* CE 72: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) = 0+ eval_decode_mcu_AC_refine_52(A,B,C,F,G):1
     [I=4] 
* CE 73: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) = 1+ eval_decode_mcu_AC_refine_bb47_in(A,J):1
     [0>=A,J=7,I=2] 
* CE 74: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) = 1+ eval_decode_mcu_AC_refine_bb47_in(A,J):2
     [A>=1,J=7,I=2] 

### Cost equations --> "Loop" of loop_cont_eval_decode_mcu_AC_refine_bb5_in/8 
* CEs [70] --> Loop 55 
* CEs [71] --> Loop 56 
* CEs [72] --> Loop 57 
* CEs [74] --> Loop 58 
* CEs [73] --> Loop 59 

#### Loops of loop_cont_eval_decode_mcu_AC_refine_bb5_in/8 
* Loop 55: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) [I=6] 
* Loop 56: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) [I=5] 
* Loop 57: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) [I=4] 
* Loop 58: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) [A>=1,I=2] 
* Loop 59: loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) [0>=A,I=2] 

### Ranking functions of CR loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) 

#### Partial ranking functions of CR loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) 


### Resulting Chains:loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G) 
* [59]
* [58]
* [57]
* [56]
* [55]


### Merging Chains  loop_cont_eval_decode_mcu_AC_refine_bb5_in/8 into  External patterns of execution 
* [[59]] --> 1 
* [[58]] --> 2 
* [[57]] --> 3 
* [[56]] --> 4 
* [[55]] --> 5 


### Specialization of cost equations eval_decode_mcu_AC_refine_bb3_in/2 
* CE 7 is refined into CE [75,76,77,78,79,80,81,82,83,84,85,86,87] 
* CE 8 is refined into CE [88] 


#### Refined cost equations eval_decode_mcu_AC_refine_bb3_in/2 
* CE 75: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,H,I,J,K,L,M):1+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(N,O,I,J,K,L,M,B):1
     [V_4>=F,O=0,N=2,H=0,G=2,C=0] 
* CE 76: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,H,I,J,K,L,M):2+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(N,O,I,J,K,L,M,B):1
     [V_4>=F+1,O=0,N=2,H=0,G=2,C=0] 
* CE 77: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,H,I,J,K,L,M):2+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(N,H,I,J,K,L,M,B):2
     [V_4>=F+H,H>=1,N=2,G=2,C=0] 
* CE 78: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,V_4,H,F,I,J,K):3+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(L,V_4,M,F,I,J,K,B):3
     [V_4>=F,M=0,L=4,H=0,G=4,C=0] 
* CE 79: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,V_4,H,I,J,K,L):4+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(M,V_4,H,I,J,K,L,B):3
     [I>=F+H,V_4>=I,I>=F+1,H>=0,M=4,G=4,C=0] 
* CE 80: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,V_4,H,F,I,J,K):5+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(L,V_4,M,F,I,J,K,B):4
     [V_4>=F,M=0,L=5,H=0,G=5,C=0] 
* CE 81: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,V_4,H,I,J,K,L):6+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(M,V_4,H,I,J,K,L,B):4
     [I>=F+H,V_4>=I,I>=F+1,H>=0,M=5,G=5,C=0] 
* CE 82: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,V_4,D,E,F,H,I):7+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(J,V_4,D,E,F,H,I,B):5
     [F>=V_4+1,J=6,G=6,C=0] 
* CE 83: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,V_4,F,V_4,G,H,I,J,K):8+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(L,V_4,G,H,M,J,K,B):5
     [V_4+2=M,V_4+2=I,L=6,F=6,C=0] 
* CE 84: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,V_4,H,I,J,K,L):9+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(M,V_4,H,I,N,K,L,B):5
     [V_4>=F+1,V_4+2=N,V_4+2=J,M=6,G=6,C=0] 
* CE 85: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,V_4,H,I,J,K,L):10+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(M,V_4,H,I,N,K,L,B):5
     [V_4>=F,V_4+1=N,V_4+1=J,M=6,G=6,C=0] 
* CE 86: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,V_4,H,I,F,J,K):11+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(L,V_4,H,I,F,J,K,B):5
     [V_4>=F,L=6,G=6,C=0] 
* CE 87: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 1+ eval_decode_mcu_AC_refine_bb5_in(V_4,C,D,E,F,G,V_4,H,I,J,K,L):12+ loop_cont_eval_decode_mcu_AC_refine_bb5_in(M,V_4,H,I,J,K,L,B):5
     [V_4>=J,J>=F+1,M=6,G=6,C=0] 
* CE 88: eval_decode_mcu_AC_refine_bb3_in(V_4,B) = 0+ eval_decode_mcu_AC_refine_bb40_in(V_4,C,D,E,B):1
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_bb3_in/2 
* CEs [75,76,77,78,79,80,81,82,83,84,85,86,87,88] --> Loop 60 

#### Loops of eval_decode_mcu_AC_refine_bb3_in/2 
* Loop 60: eval_decode_mcu_AC_refine_bb3_in(V_4,B) [] 

### Ranking functions of CR eval_decode_mcu_AC_refine_bb3_in(V_4,B) 

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_bb3_in(V_4,B) 


### Resulting Chains:eval_decode_mcu_AC_refine_bb3_in(V_4,B) 
* [60]


### Merging Chains  eval_decode_mcu_AC_refine_bb3_in/2 into  External patterns of execution 
* [[60]] --> 1 


### Specialization of cost equations eval_decode_mcu_AC_refine_10/2 
* CE 5 is refined into CE [89] 
* CE 6 is refined into CE [90] 


#### Refined cost equations eval_decode_mcu_AC_refine_10/2 
* CE 89: eval_decode_mcu_AC_refine_10(V_4,B) = 0+ eval_decode_mcu_AC_refine_bb3_in(V_4,B):1
     [] 
* CE 90: eval_decode_mcu_AC_refine_10(V_4,B) = 0
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_10/2 
* CEs [89,90] --> Loop 61 

#### Loops of eval_decode_mcu_AC_refine_10/2 
* Loop 61: eval_decode_mcu_AC_refine_10(V_4,B) [] 

### Ranking functions of CR eval_decode_mcu_AC_refine_10(V_4,B) 

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_10(V_4,B) 


### Resulting Chains:eval_decode_mcu_AC_refine_10(V_4,B) 
* [61]


### Merging Chains  eval_decode_mcu_AC_refine_10/2 into  External patterns of execution 
* [[61]] --> 1 


### Specialization of cost equations eval_decode_mcu_AC_refine_bb0_in/1 
* CE 3 is refined into CE [91] 
* CE 4 is refined into CE [92] 


#### Refined cost equations eval_decode_mcu_AC_refine_bb0_in/1 
* CE 91: eval_decode_mcu_AC_refine_bb0_in(B) = 0+ eval_decode_mcu_AC_refine_10(C,B):1
     [] 
* CE 92: eval_decode_mcu_AC_refine_bb0_in(B) = 0+ eval_decode_mcu_AC_refine_bb3_in(C,B):1
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_bb0_in/1 
* CEs [91,92] --> Loop 62 

#### Loops of eval_decode_mcu_AC_refine_bb0_in/1 
* Loop 62: eval_decode_mcu_AC_refine_bb0_in(B) [] 

### Ranking functions of CR eval_decode_mcu_AC_refine_bb0_in(B) 

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_bb0_in(B) 


### Resulting Chains:eval_decode_mcu_AC_refine_bb0_in(B) 
* [62]


### Merging Chains  eval_decode_mcu_AC_refine_bb0_in/1 into  External patterns of execution 
* [[62]] --> 1 


### Specialization of cost equations eval_decode_mcu_AC_refine_start/1 
* CE 2 is refined into CE [93] 


#### Refined cost equations eval_decode_mcu_AC_refine_start/1 
* CE 93: eval_decode_mcu_AC_refine_start(B) = 0+ eval_decode_mcu_AC_refine_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_decode_mcu_AC_refine_start/1 
* CEs [93] --> Loop 63 

#### Loops of eval_decode_mcu_AC_refine_start/1 
* Loop 63: eval_decode_mcu_AC_refine_start(B) [] 

### Ranking functions of CR eval_decode_mcu_AC_refine_start(B) 

#### Partial ranking functions of CR eval_decode_mcu_AC_refine_start(B) 


### Resulting Chains:eval_decode_mcu_AC_refine_start(B) 
* [63]


### Merging Chains  eval_decode_mcu_AC_refine_start/1 into  External patterns of execution 
* [[63]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [28] 

 * loop 28:eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) -> [eval_decode_mcu_AC_refine_bb42_in(V_4',V_bits_left_14',V_get_buffer_14',V_k_4',B',C')] 
1
#### Cost of phase [28]:eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) -> [eval_decode_mcu_AC_refine_bb42_in(V_4',V_bits_left_14',V_get_buffer_14',V_k_4',B',C')] 
1*it(28)+0
  Such that:it(28) =< V_4-V_k_4+1
it(28) =< V_4-V_k_4-V_4'+V_k_4'

#### Cost of phase [28]:eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C) -> [eval_decode_mcu_AC_refine_bb42_in(V_4',V_bits_left_14',V_get_buffer_14',V_k_4',B',C')] 
1*it(28)+0
  Such that:it(28) =< V_4-V_k_4+1
it(28) =< V_4-V_k_4-V_4'+V_k_4'

#### Cost of chains of eval_decode_mcu_AC_refine_bb42_in(V_4,V_bits_left_14,V_get_buffer_14,V_k_4,B,C):
* Chain [[28],30]: 1*it(28)+0
  Such that:it(28) =< V_4-V_k_4

  with precondition: [B=2,V_4>=V_k_4+1] 

* Chain [[28],29]: 1*it(28)+0
  Such that:it(28) =< V_4-V_k_4+1

  with precondition: [B=8,V_4>=V_k_4] 

* Chain [30]: 0
  with precondition: [B=2,V_4>=V_k_4] 

* Chain [29]: 0
  with precondition: [B=8,V_k_4>=V_4+1] 


#### Cost of loops [31] 

 * loop 31:eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B) -> [eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4',B')] 
1
#### Cost of phase [31]:eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B) -> [eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4',B')] 
1*it(31)+0
  Such that:it(31) =< V_num_newnz_4
it(31) =< V_num_newnz_4-V_num_newnz_4'

#### Cost of chains of eval_decode_mcu_AC_refine_bb47_in(V_num_newnz_4,B):
* Chain [[31],32]: 1*it(31)+0
  Such that:it(31) =< V_num_newnz_4

  with precondition: [B=7,V_num_newnz_4>=1] 

* Chain [32]: 0
  with precondition: [B=7,0>=V_num_newnz_4] 


#### Cost of chains of loop_cont_eval_decode_mcu_AC_refine_bb42_in(D,A,B):
* Chain [35]: 1
  with precondition: [D=2,0>=A] 

* Chain [34]: 1*s(2)+1
  Such that:s(2) =< A

  with precondition: [D=2,A>=1] 

* Chain [33]: 0
  with precondition: [D=8] 


#### Cost of chains of eval_decode_mcu_AC_refine_bb40_in(V_4,V_bits_left_13,V_get_buffer_13,V_k_3,B):
* Chain [36]: 2*s(3)+1*s(5)+1*s(6)+2
  Such that:s(6) =< V_4-V_k_3+1
aux(1) =< V_4-V_k_3
s(3) =< aux(1)

  with precondition: [] 


#### Cost of loops [37] 

 * loop 37:eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T) -> [eval_decode_mcu_AC_refine_bb26_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_91',V_bits_left_7',V_get_buffer_7',V_bits_left_8',V_get_buffer_8',V_k_1',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S',T')] 
1
#### Cost of phase [37]:eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T) -> [eval_decode_mcu_AC_refine_bb26_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_91',V_bits_left_7',V_get_buffer_7',V_bits_left_8',V_get_buffer_8',V_k_1',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S',T')] 
1*it(37)+0
  Such that:it(37) =< V_4-V_k_1
it(37) =< V_4-V_k_1-V_4'+V_k_1'

#### Cost of phase [37]:eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T) -> [eval_decode_mcu_AC_refine_bb26_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_91',V_bits_left_7',V_get_buffer_7',V_bits_left_8',V_get_buffer_8',V_k_1',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S',T')] 
1*it(37)+0
  Such that:it(37) =< V_4-V_k_1
it(37) =< V_4-V_k_1-V_4'+V_k_1'

#### Cost of phase [37]:eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T) -> [eval_decode_mcu_AC_refine_bb26_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',V_bits_left_1',V_get_buffer_1',V_bits_left_3',V_get_buffer_3',V_91',V_bits_left_7',V_get_buffer_7',V_bits_left_8',V_get_buffer_8',V_k_1',B',C',D',E',F',G',H',I',J',K',L',M',N',O',P',Q',R',S',T')] 
1*it(37)+0
  Such that:it(37) =< V_4-V_k_1
it(37) =< V_4-V_k_1-V_4'+V_k_1'

#### Cost of chains of eval_decode_mcu_AC_refine_bb26_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,V_bits_left_1,V_get_buffer_1,V_bits_left_3,V_get_buffer_3,V_91,V_bits_left_7,V_get_buffer_7,V_bits_left_8,V_get_buffer_8,V_k_1,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T):
* Chain [[37],40]: 1*it(37)+0
  Such that:it(37) =< V_4-V_k_1

  with precondition: [B=2,V_num_newnz_0=C,V_k_1>=V_k_0,V_4>=V_k_1+1] 

* Chain [[37],39]: 1*it(37)+0
  Such that:it(37) =< V_4-V_k_1

  with precondition: [B=3,V_4=C,V_num_newnz_0=D,V_bits_left_0=E,V_get_buffer_0=F,V_k_0=G,V_bits_left_1=H,V_get_buffer_1=I,V_bits_left_3=J,V_get_buffer_3=K,V_91=L,V_bits_left_7=M,V_get_buffer_7=N,V_4=Q,V_4+1=T,V_k_1>=V_k_0,V_4>=V_k_1+1] 

* Chain [[37],38]: 1*it(37)+0
  Such that:it(37) =< -V_k_1+T

  with precondition: [B=3,V_4=C,V_num_newnz_0=D,V_bits_left_0=E,V_get_buffer_0=F,V_k_0=G,V_bits_left_1=H,V_get_buffer_1=I,V_bits_left_3=J,V_get_buffer_3=K,V_91=L,V_bits_left_7=M,V_get_buffer_7=N,O=R,P=S,Q=T,V_k_1>=V_k_0,Q>=V_k_1+1,V_4>=Q] 

* Chain [40]: 0
  with precondition: [B=2,C=V_num_newnz_0,V_k_1>=V_k_0,V_4>=V_k_1] 

* Chain [39]: 0
  with precondition: [B=3,V_k_1=V_4,D=V_num_newnz_0,E=V_bits_left_0,F=V_get_buffer_0,H=V_bits_left_1,I=V_get_buffer_1,J=V_bits_left_3,K=V_get_buffer_3,L=V_91,M=V_bits_left_7,N=V_get_buffer_7,O=V_bits_left_8,P=V_get_buffer_8,V_k_1=C,V_k_0=G,V_k_1=Q,V_k_1+1=T,V_k_1>=V_k_0] 

* Chain [38]: 0
  with precondition: [B=3,D=V_num_newnz_0,E=V_bits_left_0,F=V_get_buffer_0,H=V_bits_left_1,I=V_get_buffer_1,J=V_bits_left_3,K=V_get_buffer_3,L=V_91,M=V_bits_left_7,N=V_get_buffer_7,V_4=C,V_k_0=G,V_bits_left_8=O,V_get_buffer_8=P,V_k_1=Q,V_bits_left_8=R,V_get_buffer_8=S,V_k_1=T,V_k_1>=V_k_0,V_4>=V_k_1] 


#### Cost of loops [41,42,44,45] 

 * loop 41:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
1*s(10)+2
  Such that:s(10) =< -V_k_0+V_k_0'

 * loop 42:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
2
 * loop 44:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
1*s(12)+2
  Such that:s(12) =< -V_k_0+V_k_0'

 * loop 45:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
2
#### Cost of phase [41,42,44,45]:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(3) =< V_4-V_k_0-V_4'+V_k_0'
aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2-V_4'/2+V_k_0'/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

#### Cost of phase [41,42,44,45]:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(3) =< V_4-V_k_0-V_4'+V_k_0'
aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2-V_4'/2+V_k_0'/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

#### Cost of phase [41,42,44,45]:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(3) =< V_4-V_k_0-V_4'+V_k_0'
aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2-V_4'/2+V_k_0'/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

#### Cost of phase [41,42,44,45]:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(3) =< V_4-V_k_0-V_4'+V_k_0'
aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2-V_4'/2+V_k_0'/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

#### Cost of phase [41,42,44,45]:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(3) =< V_4-V_k_0-V_4'+V_k_0'
aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2-V_4'/2+V_k_0'/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

#### Cost of phase [41,42,44,45]:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(3) =< V_4-V_k_0-V_4'+V_k_0'
aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2-V_4'/2+V_k_0'/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

#### Cost of phase [41,42,44,45]:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(3) =< V_4-V_k_0-V_4'+V_k_0'
aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2-V_4'/2+V_k_0'/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

#### Cost of phase [41,42,44,45]:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(3) =< V_4-V_k_0-V_4'+V_k_0'
aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2-V_4'/2+V_k_0'/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

#### Cost of phase [41,42,44,45]:eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H) -> [eval_decode_mcu_AC_refine_bb5_in(V_4',V_num_newnz_0',V_bits_left_0',V_get_buffer_0',V_k_0',B',C',D',E',F',G',H')] 
4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(3) =< V_4-V_k_0-V_4'+V_k_0'
aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2-V_4'/2+V_k_0'/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

#### Cost of chains of eval_decode_mcu_AC_refine_bb5_in(V_4,V_num_newnz_0,V_bits_left_0,V_get_buffer_0,V_k_0,B,C,D,E,F,G,H):
* Chain [[41,42,44,45],53]: 4*it(41)+6*it(42)+1*s(8)+1
  Such that:aux(2) =< V_4-V_k_0+1
aux(6) =< V_4-V_k_0
aux(7) =< V_4/2-V_k_0/2
aux(5) =< aux(6)
s(8) =< aux(6)
aux(5) =< aux(7)
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(6)
it(42) =< aux(6)
it(41) =< aux(7)
it(41) =< aux(5)

  with precondition: [B=2,V_num_newnz_0>=0,C>=V_num_newnz_0,V_4>=V_k_0+1,V_4+V_num_newnz_0>=V_k_0+C] 

* Chain [[41,42,44,45],52]: 4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(4) =< V_4/2-V_k_0/2
aux(3) =< -V_k_0+E
aux(5) =< -V_k_0/2+E/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

  with precondition: [B=4,V_4=C,V_num_newnz_0>=0,D>=V_num_newnz_0,E>=V_k_0+1,V_4>=E,V_num_newnz_0+E>=V_k_0+D] 

* Chain [[41,42,44,45],51]: 4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(4) =< V_4/2-V_k_0/2
aux(3) =< -V_k_0+E
aux(5) =< -V_k_0/2+E/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

  with precondition: [B=5,V_4=C,V_num_newnz_0>=0,D>=V_num_newnz_0,E>=V_k_0+1,V_4>=E,V_num_newnz_0+E>=V_k_0+D] 

* Chain [[41,42,44,45],50]: 4*it(41)+6*it(42)+0
  Such that:aux(4) =< V_4/2-V_k_0/2
aux(5) =< V_4/2-V_k_0/2+1/2
aux(8) =< V_4-V_k_0+1
it(41) =< aux(8)
it(42) =< aux(8)
it(41) =< aux(4)
it(41) =< aux(5)

  with precondition: [B=6,V_4=C,V_4+1=F,V_num_newnz_0>=0,V_4>=V_k_0] 

* Chain [[41,42,44,45],49]: 4*it(41)+6*it(42)+0
  Such that:aux(2) =< V_4-V_k_0+1
aux(4) =< V_4/2-V_k_0/2
aux(3) =< -V_k_0+F
aux(5) =< -V_k_0/2+F/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(4)
it(41) =< aux(5)

  with precondition: [B=6,V_4=C,V_num_newnz_0>=0,F>=V_k_0+1,V_4>=F] 

* Chain [[41,42,44,45],48,50]: 4*it(41)+6*it(42)+2
  Such that:aux(3) =< V_4-V_k_0
aux(2) =< V_4-V_k_0+1
aux(9) =< V_4/2-V_k_0/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(9)

  with precondition: [B=6,V_4=C,V_4+2=F,V_num_newnz_0>=0,V_4>=V_k_0+1] 

* Chain [[41,42,44,45],47,50]: 4*it(41)+6*it(42)+2
  Such that:aux(3) =< V_4-V_k_0
aux(2) =< V_4-V_k_0+1
aux(10) =< V_4/2-V_k_0/2
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(3)
it(42) =< aux(3)
it(41) =< aux(10)

  with precondition: [B=6,V_4=C,V_4+2=F,V_num_newnz_0>=0,V_4>=V_k_0+1] 

* Chain [[41,42,44,45],46,50]: 4*it(41)+6*it(42)+1*s(15)+2
  Such that:aux(2) =< V_4-V_k_0+1
aux(11) =< V_4-V_k_0
aux(12) =< V_4/2-V_k_0/2
aux(5) =< aux(11)
s(15) =< aux(11)
aux(5) =< aux(12)
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(11)
it(42) =< aux(11)
it(41) =< aux(12)
it(41) =< aux(5)

  with precondition: [B=6,V_4=C,V_4+2=F,V_num_newnz_0>=0,V_4>=V_k_0+2] 

* Chain [[41,42,44,45],43,50]: 4*it(41)+6*it(42)+1*s(16)+2
  Such that:aux(2) =< V_4-V_k_0+1
aux(13) =< V_4-V_k_0
aux(14) =< V_4/2-V_k_0/2
aux(5) =< aux(13)
s(16) =< aux(13)
aux(5) =< aux(14)
it(41) =< aux(2)
it(42) =< aux(2)
it(41) =< aux(13)
it(42) =< aux(13)
it(41) =< aux(14)
it(41) =< aux(5)

  with precondition: [B=6,V_4=C,V_4+2=F,V_num_newnz_0>=0,V_4>=V_k_0+2] 

* Chain [53]: 1*s(8)+1
  Such that:s(8) =< V_4-V_k_0

  with precondition: [B=2,V_num_newnz_0=C,V_num_newnz_0>=0,V_4>=V_k_0] 

* Chain [52]: 0
  with precondition: [B=4,V_4=C,V_num_newnz_0=D,V_k_0=E,V_num_newnz_0>=0,V_4>=V_k_0] 

* Chain [51]: 0
  with precondition: [B=5,V_4=C,V_num_newnz_0=D,V_k_0=E,V_num_newnz_0>=0,V_4>=V_k_0] 

* Chain [50]: 0
  with precondition: [B=6,D=V_bits_left_0,E=V_get_buffer_0,V_4=C,V_k_0=F,V_num_newnz_0>=0,V_k_0>=V_4+1] 

* Chain [49]: 0
  with precondition: [B=6,V_4=C,V_k_0=F,V_num_newnz_0>=0,V_4>=V_k_0] 

* Chain [48,50]: 2
  with precondition: [B=6,V_4=V_k_0,V_4=C,V_4+2=F,V_num_newnz_0>=0] 

* Chain [47,50]: 2
  with precondition: [B=6,V_4=V_k_0,V_4=C,V_4+2=F,V_num_newnz_0>=0] 

* Chain [46,50]: 1*s(15)+2
  Such that:s(15) =< V_4-V_k_0

  with precondition: [B=6,V_4=C,V_4+2=F,V_num_newnz_0>=0,V_4>=V_k_0+1] 

* Chain [43,50]: 1*s(16)+2
  Such that:s(16) =< V_4-V_k_0

  with precondition: [B=6,V_4=C,V_4+2=F,V_num_newnz_0>=0,V_4>=V_k_0+1] 


#### Cost of chains of eval_decode_mcu_AC_refine_52(V_4,V_num_newnz_0,V_k_0,V_91,B):
* Chain [54]: 1*s(43)+2*s(45)+1*s(46)+1*s(47)+2
  Such that:s(44) =< V_4-V_k_0
s(43) =< V_4-V_k_0+1
s(47) =< V_num_newnz_0
s(45) =< s(44)

  with precondition: [] 


#### Cost of chains of loop_cont_eval_decode_mcu_AC_refine_bb5_in(I,A,B,C,D,E,F,G):
* Chain [59]: 1
  with precondition: [I=2,0>=A] 

* Chain [58]: 1*s(48)+1
  Such that:s(48) =< A

  with precondition: [I=2,A>=1] 

* Chain [57]: 1*s(50)+1*s(51)+2*s(52)+1*s(53)+2
  Such that:s(49) =< A-C
s(50) =< A-C+1
s(51) =< B
s(52) =< s(49)

  with precondition: [I=4] 

* Chain [56]: 1*s(54)+2*s(56)+1*s(57)+2
  Such that:s(55) =< A-C
s(54) =< A-C+1
s(56) =< s(55)

  with precondition: [I=5] 

* Chain [55]: 1*s(58)+2*s(60)+1*s(61)+2
  Such that:s(59) =< A-D
s(58) =< A-D+1
s(60) =< s(59)

  with precondition: [I=6] 


#### Cost of chains of eval_decode_mcu_AC_refine_bb3_in(V_4,B):
* Chain [60]: 1*aux(22)+0
  with precondition: [] 


#### Cost of chains of eval_decode_mcu_AC_refine_10(V_4,B):
* Chain [61]: 1*aux(23)+0
  with precondition: [] 


#### Cost of chains of eval_decode_mcu_AC_refine_bb0_in(B):
* Chain [62]: 1*aux(24)+0
  with precondition: [] 


#### Cost of chains of eval_decode_mcu_AC_refine_start(B):
* Chain [63]: 1*s(158)+0
  with precondition: [] 


Closed-form bounds of eval_decode_mcu_AC_refine_start(B): 
-------------------------------------
* Chain [63] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_decode_mcu_AC_refine_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 719 ms.
* Invariants computed in 636 ms.
   - Backward Invariants 410 ms.
   - Transitive Invariants 78 ms.
* Refinement performed in 861 ms.
* Termination proved in 63 ms.
* Upper bounds computed in 951 ms.
   - Equation cost structures 260 ms.
   - Phase cost structures 245 ms.
   - Chain cost structures 389 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 3458 ms.

