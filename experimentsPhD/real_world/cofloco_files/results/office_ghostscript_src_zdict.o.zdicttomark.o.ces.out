Warning: Ignored call to eval_zdicttomark_stop/1 in equation eval_zdicttomark_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_zdicttomark_10/5,eval_zdicttomark_11/5,eval_zdicttomark_12/6,eval_zdicttomark_13/6,eval_zdicttomark_14/6,eval_zdicttomark_bb3_in/4]
1. non_recursive  : [eval_zdicttomark_bb7_in/1]
2. non_recursive  : [eval_zdicttomark_19/1]
3. non_recursive  : [eval_zdicttomark_18/1]
4. non_recursive  : [eval_zdicttomark_17/2]
5. non_recursive  : [loop_cont_eval_zdicttomark_bb3_in/3]
6. non_recursive  : [eval_zdicttomark_7/2]
7. non_recursive  : [eval_zdicttomark_6/3]
8. non_recursive  : [eval_zdicttomark_1/2]
9. non_recursive  : [eval_zdicttomark_0/1]
10. non_recursive  : [eval_zdicttomark_bb0_in/1]
11. non_recursive  : [eval_zdicttomark_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_zdicttomark_bb3_in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_zdicttomark_bb3_in/3
6. SCC is partially evaluated into eval_zdicttomark_7/2
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_zdicttomark_1/2
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_zdicttomark_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_zdicttomark_bb3_in/4 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


#### Refined cost equations eval_zdicttomark_bb3_in/4 
* CE 12: eval_zdicttomark_bb3_in(A,B,C,A) = 0
     [B>=A,B>=0,C=3] 
* CE 13: eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C) = 0
     [V_2>=V_idx_0+1,V_idx_0>=0,B=2] 
* CE 14: eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C) = 1+ eval_zdicttomark_bb3_in(V_2,D,B,C)
     [V_2+1>=D,D>=2,D=V_idx_0+2] 

### Cost equations --> "Loop" of eval_zdicttomark_bb3_in/4 
* CEs [14] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 

#### Loops of eval_zdicttomark_bb3_in/4 
* Loop 9: eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C)->  eval_zdicttomark_bb3_in(V_2,V_idx_0',B,C)
                  [V_2+1>=V_idx_0',V_idx_0'>=2,V_idx_0'=V_idx_0+2] 
* Loop 10: eval_zdicttomark_bb3_in(A,B,C,A) [B>=A,B>=0,C=3] 
* Loop 11: eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C) [V_2>=V_idx_0+1,V_idx_0>=0,B=2] 

### Ranking functions of CR eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C) 
* RF of phase [9]: [V_2/2-V_idx_0/2]

#### Partial ranking functions of CR eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V_2/2-V_idx_0/2


### Resulting Chains:eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C) 
* [[9],11]
* [[9],10]
* [11]
* [10]


### Merging Chains  eval_zdicttomark_bb3_in/4 into  External patterns of execution 
* [[11],[11,[9]]] --> 1 
* [[10]] --> 2 
* [[10,[9]]] --> 3 


### Specialization of cost equations loop_cont_eval_zdicttomark_bb3_in/3 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


#### Refined cost equations loop_cont_eval_zdicttomark_bb3_in/3 
* CE 15: loop_cont_eval_zdicttomark_bb3_in(C,A,B) = 0
     [C=3] 
* CE 16: loop_cont_eval_zdicttomark_bb3_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_zdicttomark_bb3_in/3 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 

#### Loops of loop_cont_eval_zdicttomark_bb3_in/3 
* Loop 12: loop_cont_eval_zdicttomark_bb3_in(C,A,B) [C=3] 
* Loop 13: loop_cont_eval_zdicttomark_bb3_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_zdicttomark_bb3_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_zdicttomark_bb3_in(C,A,B) 


### Resulting Chains:loop_cont_eval_zdicttomark_bb3_in(C,A,B) 
* [13]
* [12]


### Merging Chains  loop_cont_eval_zdicttomark_bb3_in/3 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_zdicttomark_7/2 
* CE 5 is refined into CE [17] 
* CE 6 is refined into CE [18,19,20] 


#### Refined cost equations eval_zdicttomark_7/2 
* CE 17: eval_zdicttomark_7(V_2,B) = 0
     [] 
* CE 18: eval_zdicttomark_7(V_2,B) = 1+ eval_zdicttomark_bb3_in(V_2,C,D,E):1+ loop_cont_eval_zdicttomark_bb3_in(F,E,B):1
     [V_2>=1,F=2,D=2,C=0] 
* CE 19: eval_zdicttomark_7(V_2,B) = 1+ eval_zdicttomark_bb3_in(V_2,C,D,V_2):2+ loop_cont_eval_zdicttomark_bb3_in(E,V_2,B):2
     [0>=V_2,E=3,D=3,C=0] 
* CE 20: eval_zdicttomark_7(V_2,B) = 1+ eval_zdicttomark_bb3_in(V_2,C,D,V_2):3+ loop_cont_eval_zdicttomark_bb3_in(E,V_2,B):2
     [V_2>=1,E=3,D=3,C=0] 

### Cost equations --> "Loop" of eval_zdicttomark_7/2 
* CEs [17,18,19,20] --> Loop 14 

#### Loops of eval_zdicttomark_7/2 
* Loop 14: eval_zdicttomark_7(V_2,B) [] 

### Ranking functions of CR eval_zdicttomark_7(V_2,B) 

#### Partial ranking functions of CR eval_zdicttomark_7(V_2,B) 


### Resulting Chains:eval_zdicttomark_7(V_2,B) 
* [14]


### Merging Chains  eval_zdicttomark_7/2 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations eval_zdicttomark_1/2 
* CE 3 is refined into CE [21] 
* CE 4 is refined into CE [22] 


#### Refined cost equations eval_zdicttomark_1/2 
* CE 21: eval_zdicttomark_1(V_0,B) = 0
     [] 
* CE 22: eval_zdicttomark_1(V_0,B) = 0+ eval_zdicttomark_7(C,B):1
     [C+1=V_0] 

### Cost equations --> "Loop" of eval_zdicttomark_1/2 
* CEs [21,22] --> Loop 15 

#### Loops of eval_zdicttomark_1/2 
* Loop 15: eval_zdicttomark_1(V_0,B) [] 

### Ranking functions of CR eval_zdicttomark_1(V_0,B) 

#### Partial ranking functions of CR eval_zdicttomark_1(V_0,B) 


### Resulting Chains:eval_zdicttomark_1(V_0,B) 
* [15]


### Merging Chains  eval_zdicttomark_1/2 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_zdicttomark_start/1 
* CE 2 is refined into CE [23] 


#### Refined cost equations eval_zdicttomark_start/1 
* CE 23: eval_zdicttomark_start(B) = 0+ eval_zdicttomark_1(C,B):1
     [] 

### Cost equations --> "Loop" of eval_zdicttomark_start/1 
* CEs [23] --> Loop 16 

#### Loops of eval_zdicttomark_start/1 
* Loop 16: eval_zdicttomark_start(B) [] 

### Ranking functions of CR eval_zdicttomark_start(B) 

#### Partial ranking functions of CR eval_zdicttomark_start(B) 


### Resulting Chains:eval_zdicttomark_start(B) 
* [16]


### Merging Chains  eval_zdicttomark_start/1 into  External patterns of execution 
* [[16]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C) -> [eval_zdicttomark_bb3_in(V_2',V_idx_0',B',C')] 
1
#### Cost of phase [9]:eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C) -> [eval_zdicttomark_bb3_in(V_2',V_idx_0',B',C')] 
1*it(9)+0
  Such that:it(9) =< V_2/2-V_idx_0/2
it(9) =< V_2/2-V_idx_0/2-V_2'/2+V_idx_0'/2

#### Cost of phase [9]:eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C) -> [eval_zdicttomark_bb3_in(V_2',V_idx_0',B',C')] 
1*it(9)+0
  Such that:it(9) =< V_2/2-V_idx_0/2
it(9) =< V_2/2-V_idx_0/2-V_2'/2+V_idx_0'/2

#### Cost of chains of eval_zdicttomark_bb3_in(V_2,V_idx_0,B,C):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< V_2/2-V_idx_0/2

  with precondition: [B=2,V_idx_0>=0,V_2>=V_idx_0+3] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -V_idx_0/2+C/2

  with precondition: [B=3,V_2=C,V_idx_0>=0,V_2>=V_idx_0+1] 

* Chain [11]: 0
  with precondition: [B=2,V_idx_0>=0,V_2>=V_idx_0+1] 

* Chain [10]: 0
  with precondition: [B=3,V_2=C,V_idx_0>=0,V_idx_0>=V_2] 


#### Cost of chains of loop_cont_eval_zdicttomark_bb3_in(C,A,B):
* Chain [13]: 0
  with precondition: [C=2] 

* Chain [12]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_zdicttomark_7(V_2,B):
* Chain [14]: 2*s(2)+1
  Such that:aux(1) =< V_2/2
s(2) =< aux(1)

  with precondition: [] 


#### Cost of chains of eval_zdicttomark_1(V_0,B):
* Chain [15]: 2*s(5)+1
  Such that:s(4) =< V_0/2
s(5) =< s(4)

  with precondition: [] 


#### Cost of chains of eval_zdicttomark_start(B):
* Chain [16]: 2*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_zdicttomark_start(B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_zdicttomark_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 11 ms.
* Invariants computed in 9 ms.
   - Backward Invariants 6 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 18 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 69 ms.

