Warning: Ignored call to eval_process_decode_stop/1 in equation eval_process_decode_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_process_decode_22/7,eval_process_decode_23/7,eval_process_decode_29/7,eval_process_decode_30/8,eval_process_decode_5/6,eval_process_decode_6/7,eval_process_decode_bb2_in/6]
1. non_recursive  : [eval_process_decode_bb15_in/1]
2. non_recursive  : [eval_process_decode_20/1]
3. non_recursive  : [eval_process_decode_19/3]
4. non_recursive  : [eval_process_decode_18/3]
5. non_recursive  : [eval_process_decode_bb6_in/3]
6. non_recursive  : [eval_process_decode_17/3]
7. non_recursive  : [eval_process_decode_16/4]
8. non_recursive  : [eval_process_decode_27/1]
9. non_recursive  : [eval_process_decode_26/3]
10. non_recursive  : [eval_process_decode_25/3]
11. non_recursive  : [eval_process_decode_24/3]
12. non_recursive  : [eval_process_decode_34/1]
13. non_recursive  : [eval_process_decode_33/3]
14. non_recursive  : [eval_process_decode_32/3]
15. non_recursive  : [eval_process_decode_31/3]
16. non_recursive  : [eval_process_decode_38/1]
17. non_recursive  : [eval_process_decode_37/3]
18. non_recursive  : [eval_process_decode_36/3]
19. non_recursive  : [eval_process_decode_35/3]
20. non_recursive  : [eval_process_decode_40/1]
21. non_recursive  : [eval_process_decode_39/3]
22. non_recursive  : [loop_cont_eval_process_decode_bb2_in/5]
23. non_recursive  : [eval_process_decode_4/3]
24. non_recursive  : [eval_process_decode_3/3]
25. non_recursive  : [eval_process_decode_2/3]
26. non_recursive  : [eval_process_decode_42/1]
27. non_recursive  : [eval_process_decode_41/3]
28. non_recursive  : [eval_process_decode_1/3]
29. non_recursive  : [eval_process_decode_0/3]
30. non_recursive  : [eval_process_decode_bb0_in/3]
31. non_recursive  : [eval_process_decode_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_process_decode_bb2_in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into loop_cont_eval_process_decode_bb2_in/5
23. SCC is partially evaluated into eval_process_decode_4/3
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is partially evaluated into eval_process_decode_1/3
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is partially evaluated into eval_process_decode_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_process_decode_bb2_in/6 
* CE 6 is refined into CE [21] 
* CE 7 is refined into CE [22] 
* CE 8 is refined into CE [23] 
* CE 11 is refined into CE [24] 
* CE 10 is refined into CE [25] 
* CE 9 is refined into CE [26] 
* CE 13 is refined into CE [27] 
* CE 14 is refined into CE [28] 
* CE 12 is refined into CE [29] 


#### Refined cost equations eval_process_decode_bb2_in/6 
* CE 21: eval_process_decode_bb2_in(A,B,C,A,B,D) = 0
     [C=7] 
* CE 22: eval_process_decode_bb2_in(A,B,C,A,B,D) = 0
     [C=6] 
* CE 23: eval_process_decode_bb2_in(A,B,C,A,B,D) = 0
     [C=5] 
* CE 24: eval_process_decode_bb2_in(A,B,C,A,B,D) = 0
     [0>=D,C=4] 
* CE 25: eval_process_decode_bb2_in(A,B,C,A,B,D) = 0
     [D>=2,32>=D,C=4] 
* CE 26: eval_process_decode_bb2_in(A,B,C,A,B,D) = 0
     [D=1,C=4] 
* CE 27: eval_process_decode_bb2_in(A,B,C,A,B,D) = 0
     [C=3] 
* CE 28: eval_process_decode_bb2_in(A,B,C,A,B,D) = 0
     [C=2] 
* CE 29: eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E)
     [] 

### Cost equations --> "Loop" of eval_process_decode_bb2_in/6 
* CEs [29] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [23] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [28] --> Loop 27 

#### Loops of eval_process_decode_bb2_in/6 
* Loop 19: eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E)->  eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E)
                  [] 
* Loop 20: eval_process_decode_bb2_in(A,B,C,A,B,D) [C=7] 
* Loop 21: eval_process_decode_bb2_in(A,B,C,A,B,D) [C=6] 
* Loop 22: eval_process_decode_bb2_in(A,B,C,A,B,D) [C=5] 
* Loop 23: eval_process_decode_bb2_in(A,B,C,A,B,D) [0>=D,C=4] 
* Loop 24: eval_process_decode_bb2_in(A,B,C,A,B,D) [D>=2,32>=D,C=4] 
* Loop 25: eval_process_decode_bb2_in(A,B,C,A,B,D) [D=1,C=4] 
* Loop 26: eval_process_decode_bb2_in(A,B,C,A,B,D) [C=3] 
* Loop 27: eval_process_decode_bb2_in(A,B,C,A,B,D) [C=2] 

### Ranking functions of CR eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) 

#### Partial ranking functions of CR eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) 


### Resulting Chains:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) 
* [[19]]...
* [[19],27]
* [[19],26]
* [[19],25]
* [[19],24]
* [[19],23]
* [[19],22]
* [[19],21]
* [[19],20]
* [27]
* [26]
* [25]
* [24]
* [23]
* [22]
* [21]
* [20]


### Merging Chains  eval_process_decode_bb2_in/6 into  External patterns of execution 
* [[27],[27,[19]]] --> 1 
* [[26],[26,[19]]] --> 2 
* [[25],[25,[19]]] --> 3 
* [[24],[24,[19]]] --> 4 
* [[23],[23,[19]]] --> 5 
* [[22],[22,[19]]] --> 6 
* [[21],[21,[19]]] --> 7 
* [[20],[20,[19]]] --> 8 
* [[[19]]] --> 9 


### Specialization of cost equations loop_cont_eval_process_decode_bb2_in/5 
* CE 20 is refined into CE [30] 
* CE 19 is refined into CE [31] 
* CE 18 is refined into CE [32] 
* CE 17 is refined into CE [33] 
* CE 16 is refined into CE [34] 
* CE 15 is refined into CE [35] 


#### Refined cost equations loop_cont_eval_process_decode_bb2_in/5 
* CE 30: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) = 0
     [E=7] 
* CE 31: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) = 0
     [E=6] 
* CE 32: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) = 0
     [E=5] 
* CE 33: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) = 0
     [E=4] 
* CE 34: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) = 0
     [E=3] 
* CE 35: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) = 0
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_process_decode_bb2_in/5 
* CEs [30] --> Loop 28 
* CEs [31] --> Loop 29 
* CEs [32] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [34] --> Loop 32 
* CEs [35] --> Loop 33 

#### Loops of loop_cont_eval_process_decode_bb2_in/5 
* Loop 28: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) [E=7] 
* Loop 29: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) [E=6] 
* Loop 30: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) [E=5] 
* Loop 31: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) [E=4] 
* Loop 32: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) [E=3] 
* Loop 33: loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) [E=2] 

### Ranking functions of CR loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) 


### Resulting Chains:loop_cont_eval_process_decode_bb2_in(E,A,B,C,D) 
* [33]
* [32]
* [31]
* [30]
* [29]
* [28]


### Merging Chains  loop_cont_eval_process_decode_bb2_in/5 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 
* [[31]] --> 3 
* [[30]] --> 4 
* [[29]] --> 5 
* [[28]] --> 6 


### Specialization of cost equations eval_process_decode_4/3 
* CE 5 is refined into CE [36,37,38,39,40,41,42,43,44] 


#### Refined cost equations eval_process_decode_4/3 
* CE 36: eval_process_decode_4(V__f_fast,V__f_verbose,B) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,C,V__f_fast,V__f_verbose,D):1+ loop_cont_eval_process_decode_bb2_in(E,V__f_fast,V__f_verbose,D,B):1
     [E=2,C=2] 
* CE 37: eval_process_decode_4(V__f_fast,V__f_verbose,B) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,C,V__f_fast,V__f_verbose,D):2+ loop_cont_eval_process_decode_bb2_in(E,V__f_fast,V__f_verbose,D,B):2
     [E=3,C=3] 
* CE 38: eval_process_decode_4(V__f_fast,V__f_verbose,B) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,C,V__f_fast,V__f_verbose,D):3+ loop_cont_eval_process_decode_bb2_in(E,V__f_fast,V__f_verbose,F,B):3
     [F=1,E=4,D=1,C=4] 
* CE 39: eval_process_decode_4(V__f_fast,V__f_verbose,B) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,C,V__f_fast,V__f_verbose,D):4+ loop_cont_eval_process_decode_bb2_in(E,V__f_fast,V__f_verbose,D,B):3
     [D>=2,32>=D,E=4,C=4] 
* CE 40: eval_process_decode_4(V__f_fast,V__f_verbose,B) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,C,V__f_fast,V__f_verbose,D):5+ loop_cont_eval_process_decode_bb2_in(E,V__f_fast,V__f_verbose,D,B):3
     [0>=D,E=4,C=4] 
* CE 41: eval_process_decode_4(V__f_fast,V__f_verbose,B) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,C,V__f_fast,V__f_verbose,D):6+ loop_cont_eval_process_decode_bb2_in(E,V__f_fast,V__f_verbose,D,B):4
     [E=5,C=5] 
* CE 42: eval_process_decode_4(V__f_fast,V__f_verbose,B) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,C,V__f_fast,V__f_verbose,D):7+ loop_cont_eval_process_decode_bb2_in(E,V__f_fast,V__f_verbose,D,B):5
     [E=6,C=6] 
* CE 43: eval_process_decode_4(V__f_fast,V__f_verbose,B) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,C,V__f_fast,V__f_verbose,D):8+ loop_cont_eval_process_decode_bb2_in(E,V__f_fast,V__f_verbose,D,B):6
     [E=7,C=7] 
* CE 44: eval_process_decode_4(V__f_fast,V__f_verbose,B) = 1+ eval_process_decode_bb2_in(V__f_fast,V__f_verbose,C,D,E,F):9
     [] 

### Cost equations --> "Loop" of eval_process_decode_4/3 
* CEs [44] --> Loop 34 
* CEs [36,37,38,39,40,41,42,43] --> Loop 35 

#### Loops of eval_process_decode_4/3 
* Loop 34: eval_process_decode_4(V__f_fast,V__f_verbose,B) [] 
* Loop 35: eval_process_decode_4(V__f_fast,V__f_verbose,B) [] 

### Ranking functions of CR eval_process_decode_4(V__f_fast,V__f_verbose,B) 

#### Partial ranking functions of CR eval_process_decode_4(V__f_fast,V__f_verbose,B) 


### Resulting Chains:eval_process_decode_4(V__f_fast,V__f_verbose,B) 
* [35]
* [34]...


### Merging Chains  eval_process_decode_4/3 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 


### Specialization of cost equations eval_process_decode_1/3 
* CE 3 is refined into CE [45,46] 
* CE 4 is refined into CE [47] 


#### Refined cost equations eval_process_decode_1/3 
* CE 45: eval_process_decode_1(V__f_fast,V__f_verbose,B) = 0+ eval_process_decode_4(V__f_fast,V__f_verbose,B):1
     [] 
* CE 46: eval_process_decode_1(V__f_fast,V__f_verbose,B) = 0+ eval_process_decode_4(V__f_fast,V__f_verbose,B):2
     [] 
* CE 47: eval_process_decode_1(V__f_fast,V__f_verbose,B) = 0
     [] 

### Cost equations --> "Loop" of eval_process_decode_1/3 
* CEs [45,47] --> Loop 36 
* CEs [46] --> Loop 37 

#### Loops of eval_process_decode_1/3 
* Loop 36: eval_process_decode_1(V__f_fast,V__f_verbose,B) [] 
* Loop 37: eval_process_decode_1(V__f_fast,V__f_verbose,B) [] 

### Ranking functions of CR eval_process_decode_1(V__f_fast,V__f_verbose,B) 

#### Partial ranking functions of CR eval_process_decode_1(V__f_fast,V__f_verbose,B) 


### Resulting Chains:eval_process_decode_1(V__f_fast,V__f_verbose,B) 
* [37]...
* [36]


### Merging Chains  eval_process_decode_1/3 into  External patterns of execution 
* [[36]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_process_decode_start/3 
* CE 2 is refined into CE [48,49] 


#### Refined cost equations eval_process_decode_start/3 
* CE 48: eval_process_decode_start(V__f_fast,V__f_verbose,B) = 0+ eval_process_decode_1(V__f_fast,V__f_verbose,B):1
     [] 
* CE 49: eval_process_decode_start(V__f_fast,V__f_verbose,B) = 0+ eval_process_decode_1(V__f_fast,V__f_verbose,B):2
     [] 

### Cost equations --> "Loop" of eval_process_decode_start/3 
* CEs [49] --> Loop 38 
* CEs [48] --> Loop 39 

#### Loops of eval_process_decode_start/3 
* Loop 38: eval_process_decode_start(V__f_fast,V__f_verbose,B) [] 
* Loop 39: eval_process_decode_start(V__f_fast,V__f_verbose,B) [] 

### Ranking functions of CR eval_process_decode_start(V__f_fast,V__f_verbose,B) 

#### Partial ranking functions of CR eval_process_decode_start(V__f_fast,V__f_verbose,B) 


### Resulting Chains:eval_process_decode_start(V__f_fast,V__f_verbose,B) 
* [39]
* [38]...


### Merging Chains  eval_process_decode_start/3 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [19] 

 * loop 19:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1
#### Cost of phase [19]:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1*it(19)+0
#### Cost of phase [19]:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1*it(19)+0
#### Cost of phase [19]:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1*it(19)+0
#### Cost of phase [19]:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1*it(19)+0
#### Cost of phase [19]:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1*it(19)+0
#### Cost of phase [19]:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1*it(19)+0
#### Cost of phase [19]:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1*it(19)+0
#### Cost of phase [19]:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1*it(19)+0
#### Cost of phase [19]:eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E) -> [eval_process_decode_bb2_in(V__f_fast',V__f_verbose',B',C',D',E')] 
1*it(19)+0
#### Cost of chains of eval_process_decode_bb2_in(V__f_fast,V__f_verbose,B,C,D,E):
* Chain [[19]]...: 1*it(19)+0
  with precondition: [] 

* Chain [[19],27]: 1*it(19)+0
  with precondition: [B=2,V__f_fast=C,V__f_verbose=D] 

* Chain [[19],26]: 1*it(19)+0
  with precondition: [B=3,V__f_fast=C,V__f_verbose=D] 

* Chain [[19],25]: 1*it(19)+0
  with precondition: [B=4,E=1,V__f_fast=C,V__f_verbose=D] 

* Chain [[19],24]: 1*it(19)+0
  with precondition: [B=4,V__f_fast=C,V__f_verbose=D,32>=E,E>=2] 

* Chain [[19],23]: 1*it(19)+0
  with precondition: [B=4,V__f_fast=C,V__f_verbose=D,0>=E] 

* Chain [[19],22]: 1*it(19)+0
  with precondition: [B=5,V__f_fast=C,V__f_verbose=D] 

* Chain [[19],21]: 1*it(19)+0
  with precondition: [B=6,V__f_fast=C,V__f_verbose=D] 

* Chain [[19],20]: 1*it(19)+0
  with precondition: [B=7,V__f_fast=C,V__f_verbose=D] 

* Chain [27]: 0
  with precondition: [B=2,C=V__f_fast,D=V__f_verbose] 

* Chain [26]: 0
  with precondition: [B=3,C=V__f_fast,D=V__f_verbose] 

* Chain [25]: 0
  with precondition: [B=4,E=1,C=V__f_fast,D=V__f_verbose] 

* Chain [24]: 0
  with precondition: [B=4,C=V__f_fast,D=V__f_verbose,32>=E,E>=2] 

* Chain [23]: 0
  with precondition: [B=4,C=V__f_fast,D=V__f_verbose,0>=E] 

* Chain [22]: 0
  with precondition: [B=5,C=V__f_fast,D=V__f_verbose] 

* Chain [21]: 0
  with precondition: [B=6,C=V__f_fast,D=V__f_verbose] 

* Chain [20]: 0
  with precondition: [B=7,C=V__f_fast,D=V__f_verbose] 


#### Cost of chains of loop_cont_eval_process_decode_bb2_in(E,A,B,C,D):
* Chain [33]: 0
  with precondition: [E=2] 

* Chain [32]: 0
  with precondition: [E=3] 

* Chain [31]: 0
  with precondition: [E=4] 

* Chain [30]: 0
  with precondition: [E=5] 

* Chain [29]: 0
  with precondition: [E=6] 

* Chain [28]: 0
  with precondition: [E=7] 


#### Cost of chains of eval_process_decode_4(V__f_fast,V__f_verbose,B):
* Chain [35]: 1*aux(9)+0
  with precondition: [] 

* Chain [34]...: 1*s(17)+1
  with precondition: [] 


#### Cost of chains of eval_process_decode_1(V__f_fast,V__f_verbose,B):
* Chain [37]...: 1*s(18)+1
  with precondition: [] 

* Chain [36]: 1*aux(10)+0
  with precondition: [] 


#### Cost of chains of eval_process_decode_start(V__f_fast,V__f_verbose,B):
* Chain [39]: 1*s(20)+0
  with precondition: [] 

* Chain [38]...: 1*s(21)+1
  with precondition: [] 


Closed-form bounds of eval_process_decode_start(V__f_fast,V__f_verbose,B): 
-------------------------------------
* Chain [39] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_process_decode_start(V__f_fast,V__f_verbose,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 128 ms.
* Invariants computed in 76 ms.
   - Backward Invariants 60 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 163 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 106 ms.
   - Equation cost structures 41 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 47 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 597 ms.

