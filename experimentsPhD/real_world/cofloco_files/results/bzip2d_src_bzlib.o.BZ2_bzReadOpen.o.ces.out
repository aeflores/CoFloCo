Warning: Ignored call to eval_BZ2_bzReadOpen_stop/1 in equation eval_BZ2_bzReadOpen_bb37_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_BZ2_bzReadOpen_bb37_in/1]
1. non_recursive  : [eval_BZ2_bzReadOpen_bb35_in/1]
2. non_recursive  : [eval_BZ2_bzReadOpen_bb33_in/1]
3. non_recursive  : [eval_BZ2_bzReadOpen_bb17_in/1]
4. recursive  : [eval_BZ2_bzReadOpen_bb24_in/6]
5. non_recursive  : [eval_BZ2_bzReadOpen_44/1]
6. non_recursive  : [eval_BZ2_bzReadOpen_43/1]
7. non_recursive  : [eval_BZ2_bzReadOpen_bb31_in/1]
8. non_recursive  : [eval_BZ2_bzReadOpen_bb29_in/1]
9. non_recursive  : [eval_BZ2_bzReadOpen_38/1]
10. non_recursive  : [eval_BZ2_bzReadOpen_37/3]
11. non_recursive  : [loop_cont_eval_BZ2_bzReadOpen_bb24_in/4]
12. non_recursive  : [eval_BZ2_bzReadOpen_bb23_in/4]
13. non_recursive  : [eval_BZ2_bzReadOpen_bb21_in/4]
14. non_recursive  : [eval_BZ2_bzReadOpen_11/4]
15. non_recursive  : [eval_BZ2_bzReadOpen_10/4]
16. non_recursive  : [eval_BZ2_bzReadOpen_bb12_in/1]
17. non_recursive  : [eval_BZ2_bzReadOpen_5/4]
18. non_recursive  : [eval_BZ2_bzReadOpen_4/4]
19. non_recursive  : [eval_BZ2_bzReadOpen_bb9_in/4]
20. non_recursive  : [eval_BZ2_bzReadOpen_bb4_in/4]
21. non_recursive  : [eval_BZ2_bzReadOpen_bb2_in/4]
22. non_recursive  : [eval_BZ2_bzReadOpen_bb0_in/4]
23. non_recursive  : [eval_BZ2_bzReadOpen_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_BZ2_bzReadOpen_bb24_in/6
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_BZ2_bzReadOpen_38/1
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_BZ2_bzReadOpen_bb23_in/4
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_BZ2_bzReadOpen_11/4
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_BZ2_bzReadOpen_5/4
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_BZ2_bzReadOpen_bb4_in/4
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_BZ2_bzReadOpen_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_BZ2_bzReadOpen_bb24_in/6 
* CE 11 is refined into CE [13] 
* CE 10 is refined into CE [14] 


#### Refined cost equations eval_BZ2_bzReadOpen_bb24_in/6 
* CE 13: eval_BZ2_bzReadOpen_bb24_in(A,B,C,D,A,B) = 0
     [0>=C,D=2] 
* CE 14: eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V__02,B,C,D) = 1+ eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,E,F,C,D)
     [V__02>=1,V__02=E+1,F=2,B=2] 

### Cost equations --> "Loop" of eval_BZ2_bzReadOpen_bb24_in/6 
* CEs [14] --> Loop 9 
* CEs [13] --> Loop 10 

#### Loops of eval_BZ2_bzReadOpen_bb24_in/6 
* Loop 9: eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V__02,B,C,D)->  eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V__02',B',C,D)
                  [V__02>=1,V__02=V__02'+1,B'=2,B=2] 
* Loop 10: eval_BZ2_bzReadOpen_bb24_in(A,B,C,D,A,B) [0>=C,D=2] 

### Ranking functions of CR eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V__02,B,C,D) 
* RF of phase [9]: [V__02]

#### Partial ranking functions of CR eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V__02,B,C,D) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    V__02


### Resulting Chains:eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V__02,B,C,D) 
* [[9],10]
* [10]


### Merging Chains  eval_BZ2_bzReadOpen_bb24_in/6 into  External patterns of execution 
* [[10]] --> 1 
* [[10,[9]]] --> 2 


### Specialization of cost equations eval_BZ2_bzReadOpen_38/1 
* CE 12 is refined into CE [15] 


#### Refined cost equations eval_BZ2_bzReadOpen_38/1 
* CE 15: eval_BZ2_bzReadOpen_38(B) = 0
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzReadOpen_38/1 
* CEs [15] --> Loop 11 

#### Loops of eval_BZ2_bzReadOpen_38/1 
* Loop 11: eval_BZ2_bzReadOpen_38(B) [] 

### Ranking functions of CR eval_BZ2_bzReadOpen_38(B) 

#### Partial ranking functions of CR eval_BZ2_bzReadOpen_38(B) 


### Resulting Chains:eval_BZ2_bzReadOpen_38(B) 
* [11]


### Merging Chains  eval_BZ2_bzReadOpen_38/1 into  External patterns of execution 
* [[11]] --> 1 


### Specialization of cost equations eval_BZ2_bzReadOpen_bb23_in/4 
* CE 9 is refined into CE [16,17] 


#### Refined cost equations eval_BZ2_bzReadOpen_bb23_in/4 
* CE 16: eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B) = 1+ eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V_nUnused,C,V_verbosity,V_small):1+ eval_BZ2_bzReadOpen_38(B):1
     [0>=V_nUnused,C=2] 
* CE 17: eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B) = 1+ eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V_nUnused,C,V_verbosity,V_small):2+ eval_BZ2_bzReadOpen_38(B):1
     [V_nUnused>=1,C=2] 

### Cost equations --> "Loop" of eval_BZ2_bzReadOpen_bb23_in/4 
* CEs [17] --> Loop 12 
* CEs [16] --> Loop 13 

#### Loops of eval_BZ2_bzReadOpen_bb23_in/4 
* Loop 12: eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B) [V_nUnused>=1] 
* Loop 13: eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B) [0>=V_nUnused] 

### Ranking functions of CR eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B) 

#### Partial ranking functions of CR eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B) 


### Resulting Chains:eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B) 
* [13]
* [12]


### Merging Chains  eval_BZ2_bzReadOpen_bb23_in/4 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_BZ2_bzReadOpen_11/4 
* CE 7 is refined into CE [18] 
* CE 8 is refined into CE [19,20] 


#### Refined cost equations eval_BZ2_bzReadOpen_11/4 
* CE 18: eval_BZ2_bzReadOpen_11(V_verbosity,V_small,V_nUnused,B) = 0
     [] 
* CE 19: eval_BZ2_bzReadOpen_11(V_verbosity,V_small,V_nUnused,B) = 0+ eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B):1
     [0>=V_nUnused] 
* CE 20: eval_BZ2_bzReadOpen_11(V_verbosity,V_small,V_nUnused,B) = 0+ eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B):2
     [V_nUnused>=1] 

### Cost equations --> "Loop" of eval_BZ2_bzReadOpen_11/4 
* CEs [18,19,20] --> Loop 14 

#### Loops of eval_BZ2_bzReadOpen_11/4 
* Loop 14: eval_BZ2_bzReadOpen_11(V_verbosity,V_small,V_nUnused,B) [] 

### Ranking functions of CR eval_BZ2_bzReadOpen_11(V_verbosity,V_small,V_nUnused,B) 

#### Partial ranking functions of CR eval_BZ2_bzReadOpen_11(V_verbosity,V_small,V_nUnused,B) 


### Resulting Chains:eval_BZ2_bzReadOpen_11(V_verbosity,V_small,V_nUnused,B) 
* [14]


### Merging Chains  eval_BZ2_bzReadOpen_11/4 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations eval_BZ2_bzReadOpen_5/4 
* CE 5 is refined into CE [21] 
* CE 6 is refined into CE [22] 


#### Refined cost equations eval_BZ2_bzReadOpen_5/4 
* CE 21: eval_BZ2_bzReadOpen_5(V_verbosity,V_small,V_nUnused,B) = 0
     [] 
* CE 22: eval_BZ2_bzReadOpen_5(V_verbosity,V_small,V_nUnused,B) = 0+ eval_BZ2_bzReadOpen_11(V_verbosity,V_small,V_nUnused,B):1
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzReadOpen_5/4 
* CEs [21,22] --> Loop 15 

#### Loops of eval_BZ2_bzReadOpen_5/4 
* Loop 15: eval_BZ2_bzReadOpen_5(V_verbosity,V_small,V_nUnused,B) [] 

### Ranking functions of CR eval_BZ2_bzReadOpen_5(V_verbosity,V_small,V_nUnused,B) 

#### Partial ranking functions of CR eval_BZ2_bzReadOpen_5(V_verbosity,V_small,V_nUnused,B) 


### Resulting Chains:eval_BZ2_bzReadOpen_5(V_verbosity,V_small,V_nUnused,B) 
* [15]


### Merging Chains  eval_BZ2_bzReadOpen_5/4 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_BZ2_bzReadOpen_bb4_in/4 
* CE 3 is refined into CE [23] 
* CE 4 is refined into CE [24] 


#### Refined cost equations eval_BZ2_bzReadOpen_bb4_in/4 
* CE 23: eval_BZ2_bzReadOpen_bb4_in(V_verbosity,V_small,V_nUnused,B) = 0
     [] 
* CE 24: eval_BZ2_bzReadOpen_bb4_in(V_verbosity,V_small,V_nUnused,B) = 0+ eval_BZ2_bzReadOpen_5(V_verbosity,V_small,V_nUnused,B):1
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzReadOpen_bb4_in/4 
* CEs [23,24] --> Loop 16 

#### Loops of eval_BZ2_bzReadOpen_bb4_in/4 
* Loop 16: eval_BZ2_bzReadOpen_bb4_in(V_verbosity,V_small,V_nUnused,B) [] 

### Ranking functions of CR eval_BZ2_bzReadOpen_bb4_in(V_verbosity,V_small,V_nUnused,B) 

#### Partial ranking functions of CR eval_BZ2_bzReadOpen_bb4_in(V_verbosity,V_small,V_nUnused,B) 


### Resulting Chains:eval_BZ2_bzReadOpen_bb4_in(V_verbosity,V_small,V_nUnused,B) 
* [16]


### Merging Chains  eval_BZ2_bzReadOpen_bb4_in/4 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations eval_BZ2_bzReadOpen_start/4 
* CE 2 is refined into CE [25] 


#### Refined cost equations eval_BZ2_bzReadOpen_start/4 
* CE 25: eval_BZ2_bzReadOpen_start(V_verbosity,V_small,V_nUnused,B) = 0+ eval_BZ2_bzReadOpen_bb4_in(V_verbosity,V_small,V_nUnused,B):1
     [] 

### Cost equations --> "Loop" of eval_BZ2_bzReadOpen_start/4 
* CEs [25] --> Loop 17 

#### Loops of eval_BZ2_bzReadOpen_start/4 
* Loop 17: eval_BZ2_bzReadOpen_start(V_verbosity,V_small,V_nUnused,B) [] 

### Ranking functions of CR eval_BZ2_bzReadOpen_start(V_verbosity,V_small,V_nUnused,B) 

#### Partial ranking functions of CR eval_BZ2_bzReadOpen_start(V_verbosity,V_small,V_nUnused,B) 


### Resulting Chains:eval_BZ2_bzReadOpen_start(V_verbosity,V_small,V_nUnused,B) 
* [17]


### Merging Chains  eval_BZ2_bzReadOpen_start/4 into  External patterns of execution 
* [[17]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [9] 

 * loop 9:eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V__02,B,C,D) -> [eval_BZ2_bzReadOpen_bb24_in(V_verbosity',V_small',V__02',B',C',D')] 
1
#### Cost of phase [9]:eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V__02,B,C,D) -> [eval_BZ2_bzReadOpen_bb24_in(V_verbosity',V_small',V__02',B',C',D')] 
1*it(9)+0
  Such that:it(9) =< V__02
it(9) =< V__02-V__02'

#### Cost of chains of eval_BZ2_bzReadOpen_bb24_in(V_verbosity,V_small,V__02,B,C,D):
* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< V__02

  with precondition: [B=2,V_verbosity=C,V_small=D,V__02>=1] 

* Chain [10]: 0
  with precondition: [B=2,C=V_verbosity,D=V_small,0>=V__02] 


#### Cost of chains of eval_BZ2_bzReadOpen_38(B):
* Chain [11]: 0
  with precondition: [] 


#### Cost of chains of eval_BZ2_bzReadOpen_bb23_in(V_verbosity,V_small,V_nUnused,B):
* Chain [13]: 1
  with precondition: [0>=V_nUnused] 

* Chain [12]: 1*s(1)+1
  Such that:s(1) =< V_nUnused

  with precondition: [V_nUnused>=1] 


#### Cost of chains of eval_BZ2_bzReadOpen_11(V_verbosity,V_small,V_nUnused,B):
* Chain [14]: 1*s(2)+1
  Such that:s(2) =< V_nUnused

  with precondition: [] 


#### Cost of chains of eval_BZ2_bzReadOpen_5(V_verbosity,V_small,V_nUnused,B):
* Chain [15]: 1*s(3)+1
  Such that:s(3) =< V_nUnused

  with precondition: [] 


#### Cost of chains of eval_BZ2_bzReadOpen_bb4_in(V_verbosity,V_small,V_nUnused,B):
* Chain [16]: 1*s(4)+1
  Such that:s(4) =< V_nUnused

  with precondition: [] 


#### Cost of chains of eval_BZ2_bzReadOpen_start(V_verbosity,V_small,V_nUnused,B):
* Chain [17]: 1*s(5)+1
  Such that:s(5) =< V_nUnused

  with precondition: [] 


Closed-form bounds of eval_BZ2_bzReadOpen_start(V_verbosity,V_small,V_nUnused,B): 
-------------------------------------
* Chain [17] with precondition: [] 
    - Upper bound: nat(V_nUnused)+1 
    - Complexity: n 

### Maximum cost of eval_BZ2_bzReadOpen_start(V_verbosity,V_small,V_nUnused,B): nat(V_nUnused)+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 36 ms.
* Invariants computed in 22 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 58 ms.
* Termination proved in 8 ms.
* Upper bounds computed in 41 ms.
   - Equation cost structures 24 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 223 ms.

