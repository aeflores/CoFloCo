Warning: Ignored call to eval_sample_unpack_8_stop/1 in equation eval_sample_unpack_8_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_sample_unpack_8_bb4_in/2]
1. non_recursive  : [eval_sample_unpack_8_bb9_in/1]
2. non_recursive  : [loop_cont_eval_sample_unpack_8_bb4_in/2]
3. non_recursive  : [eval_sample_unpack_8_bb3_in/3]
4. recursive  : [eval_sample_unpack_8_bb7_in/2]
5. non_recursive  : [loop_cont_eval_sample_unpack_8_bb7_in/2]
6. non_recursive  : [eval_sample_unpack_8_bb0_in/3]
7. non_recursive  : [eval_sample_unpack_8_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_sample_unpack_8_bb4_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_sample_unpack_8_bb3_in/3
4. SCC is partially evaluated into eval_sample_unpack_8_bb7_in/2
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_sample_unpack_8_bb0_in/3
7. SCC is partially evaluated into eval_sample_unpack_8_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_sample_unpack_8_bb4_in/2 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 


#### Refined cost equations eval_sample_unpack_8_bb4_in/2 
* CE 13: eval_sample_unpack_8_bb4_in(V_left_0,B) = 0
     [B=2,V_left_0=0] 
* CE 14: eval_sample_unpack_8_bb4_in(V_left_0,B) = 1+ eval_sample_unpack_8_bb4_in(C,D)
     [V_left_0>=1,V_left_0=C+1,D=2,B=2] 
* CE 15: eval_sample_unpack_8_bb4_in(V_left_0,B) = 1+ eval_sample_unpack_8_bb4_in(C,D)
     [0>=V_left_0+1,V_left_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_sample_unpack_8_bb4_in/2 
* CEs [14] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_sample_unpack_8_bb4_in/2 
* Loop 10: eval_sample_unpack_8_bb4_in(V_left_0,B)->  eval_sample_unpack_8_bb4_in(V_left_0',B')
                  [V_left_0>=1,V_left_0=V_left_0'+1,B'=2,B=2] 
* Loop 11: eval_sample_unpack_8_bb4_in(V_left_0,B)->  eval_sample_unpack_8_bb4_in(V_left_0',B')
                  [0>=V_left_0+1,V_left_0=V_left_0'+1,B'=2,B=2] 
* Loop 12: eval_sample_unpack_8_bb4_in(V_left_0,B) [B=2,V_left_0=0] 

### Ranking functions of CR eval_sample_unpack_8_bb4_in(V_left_0,B) 
* RF of phase [10]: [V_left_0]

#### Partial ranking functions of CR eval_sample_unpack_8_bb4_in(V_left_0,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_left_0


### Resulting Chains:eval_sample_unpack_8_bb4_in(V_left_0,B) 
* [[11]]...
* [[10],12]
* [12]


### Merging Chains  eval_sample_unpack_8_bb4_in/2 into  External patterns of execution 
* [[12]] --> 1 
* [[12,[10]]] --> 2 
* [[[11]]] --> 3 


### Specialization of cost equations eval_sample_unpack_8_bb3_in/3 
* CE 6 is refined into CE [16,17,18] 


#### Refined cost equations eval_sample_unpack_8_bb3_in/3 
* CE 16: eval_sample_unpack_8_bb3_in(A,A,B) = 1+ eval_sample_unpack_8_bb4_in(C,D):1
     [D=2,C=0] 
* CE 17: eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B) = 1+ eval_sample_unpack_8_bb4_in(C,D):2
     [C>=1,V_data_x+C=V_dsize,D=2] 
* CE 18: eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B) = 1+ eval_sample_unpack_8_bb4_in(C,D):3
     [0>=C+1,V_data_x+C=V_dsize,D=2] 

### Cost equations --> "Loop" of eval_sample_unpack_8_bb3_in/3 
* CEs [18] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [16] --> Loop 15 

#### Loops of eval_sample_unpack_8_bb3_in/3 
* Loop 13: eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B) [V_data_x>=V_dsize+1] 
* Loop 14: eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B) [V_dsize>=V_data_x+1] 
* Loop 15: eval_sample_unpack_8_bb3_in(A,A,B) [] 

### Ranking functions of CR eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B) 

#### Partial ranking functions of CR eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B) 


### Resulting Chains:eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B) 
* [15]
* [14]
* [13]...


### Merging Chains  eval_sample_unpack_8_bb3_in/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13]] --> 3 


### Specialization of cost equations eval_sample_unpack_8_bb7_in/2 
* CE 9 is refined into CE [19] 
* CE 8 is refined into CE [20] 
* CE 7 is refined into CE [21] 


#### Refined cost equations eval_sample_unpack_8_bb7_in/2 
* CE 19: eval_sample_unpack_8_bb7_in(V_left1_0,B) = 0
     [B=2,V_left1_0=0] 
* CE 20: eval_sample_unpack_8_bb7_in(V_left1_0,B) = 1+ eval_sample_unpack_8_bb7_in(C,D)
     [V_left1_0>=1,V_left1_0=C+1,D=2,B=2] 
* CE 21: eval_sample_unpack_8_bb7_in(V_left1_0,B) = 1+ eval_sample_unpack_8_bb7_in(C,D)
     [0>=V_left1_0+1,V_left1_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_sample_unpack_8_bb7_in/2 
* CEs [20] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of eval_sample_unpack_8_bb7_in/2 
* Loop 16: eval_sample_unpack_8_bb7_in(V_left1_0,B)->  eval_sample_unpack_8_bb7_in(V_left1_0',B')
                  [V_left1_0>=1,V_left1_0=V_left1_0'+1,B'=2,B=2] 
* Loop 17: eval_sample_unpack_8_bb7_in(V_left1_0,B)->  eval_sample_unpack_8_bb7_in(V_left1_0',B')
                  [0>=V_left1_0+1,V_left1_0=V_left1_0'+1,B'=2,B=2] 
* Loop 18: eval_sample_unpack_8_bb7_in(V_left1_0,B) [B=2,V_left1_0=0] 

### Ranking functions of CR eval_sample_unpack_8_bb7_in(V_left1_0,B) 
* RF of phase [16]: [V_left1_0]

#### Partial ranking functions of CR eval_sample_unpack_8_bb7_in(V_left1_0,B) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_left1_0


### Resulting Chains:eval_sample_unpack_8_bb7_in(V_left1_0,B) 
* [[17]]...
* [[16],18]
* [18]


### Merging Chains  eval_sample_unpack_8_bb7_in/2 into  External patterns of execution 
* [[18]] --> 1 
* [[18,[16]]] --> 2 
* [[[17]]] --> 3 


### Specialization of cost equations eval_sample_unpack_8_bb0_in/3 
* CE 3 is refined into CE [22,23,24] 
* CE 4 is refined into CE [25] 
* CE 5 is refined into CE [26,27,28] 


#### Refined cost equations eval_sample_unpack_8_bb0_in/3 
* CE 22: eval_sample_unpack_8_bb0_in(A,A,B) = 0+ eval_sample_unpack_8_bb3_in(A,A,B):1
     [] 
* CE 23: eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) = 0+ eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B):2
     [V_dsize>=V_data_x+1] 
* CE 24: eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) = 0+ eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B):3
     [V_data_x>=V_dsize+1] 
* CE 25: eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) = 0
     [] 
* CE 26: eval_sample_unpack_8_bb0_in(A,A,B) = 1+ eval_sample_unpack_8_bb7_in(C,D):1
     [D=2,C=0] 
* CE 27: eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) = 1+ eval_sample_unpack_8_bb7_in(C,D):2
     [C>=1,V_data_x+C=V_dsize,D=2] 
* CE 28: eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) = 1+ eval_sample_unpack_8_bb7_in(C,D):3
     [0>=C+1,V_data_x+C=V_dsize,D=2] 

### Cost equations --> "Loop" of eval_sample_unpack_8_bb0_in/3 
* CEs [24,28] --> Loop 19 
* CEs [22,23,25,26,27] --> Loop 20 

#### Loops of eval_sample_unpack_8_bb0_in/3 
* Loop 19: eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) [V_data_x>=V_dsize+1] 
* Loop 20: eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) [] 

### Ranking functions of CR eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) 

#### Partial ranking functions of CR eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) 


### Resulting Chains:eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B) 
* [20]
* [19]...


### Merging Chains  eval_sample_unpack_8_bb0_in/3 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_sample_unpack_8_start/4 
* CE 2 is refined into CE [29,30] 


#### Refined cost equations eval_sample_unpack_8_start/4 
* CE 29: eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B) = 0+ eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B):1
     [] 
* CE 30: eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B) = 0+ eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B):2
     [V_data_x>=V_dsize+1] 

### Cost equations --> "Loop" of eval_sample_unpack_8_start/4 
* CEs [30] --> Loop 21 
* CEs [29] --> Loop 22 

#### Loops of eval_sample_unpack_8_start/4 
* Loop 21: eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B) [V_data_x>=V_dsize+1] 
* Loop 22: eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B) [] 

### Ranking functions of CR eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B) 

#### Partial ranking functions of CR eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B) 


### Resulting Chains:eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B) 
* [22]
* [21]...


### Merging Chains  eval_sample_unpack_8_start/4 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_sample_unpack_8_bb4_in(V_left_0,B) -> [eval_sample_unpack_8_bb4_in(V_left_0',B')] 
1
#### Cost of phase [11]:eval_sample_unpack_8_bb4_in(V_left_0,B) -> [eval_sample_unpack_8_bb4_in(V_left_0',B')] 
1*it(11)+0
#### Cost of loops [10] 

 * loop 10:eval_sample_unpack_8_bb4_in(V_left_0,B) -> [eval_sample_unpack_8_bb4_in(V_left_0',B')] 
1
#### Cost of phase [10]:eval_sample_unpack_8_bb4_in(V_left_0,B) -> [eval_sample_unpack_8_bb4_in(V_left_0',B')] 
1*it(10)+0
  Such that:it(10) =< V_left_0
it(10) =< V_left_0-V_left_0'

#### Cost of chains of eval_sample_unpack_8_bb4_in(V_left_0,B):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [0>=V_left_0+1,B=2] 

* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< V_left_0

  with precondition: [B=2,V_left_0>=1] 

* Chain [12]: 0
  with precondition: [V_left_0=0,B=2] 


#### Cost of chains of eval_sample_unpack_8_bb3_in(V_data_x,V_dsize,B):
* Chain [15]: 1
  with precondition: [V_dsize=V_data_x] 

* Chain [14]: 1*s(1)+1
  Such that:s(1) =< -V_data_x+V_dsize

  with precondition: [V_dsize>=V_data_x+1] 

* Chain [13]...: 1*s(2)+1
  with precondition: [V_data_x>=V_dsize+1] 


#### Cost of loops [17] 

 * loop 17:eval_sample_unpack_8_bb7_in(V_left1_0,B) -> [eval_sample_unpack_8_bb7_in(V_left1_0',B')] 
1
#### Cost of phase [17]:eval_sample_unpack_8_bb7_in(V_left1_0,B) -> [eval_sample_unpack_8_bb7_in(V_left1_0',B')] 
1*it(17)+0
#### Cost of loops [16] 

 * loop 16:eval_sample_unpack_8_bb7_in(V_left1_0,B) -> [eval_sample_unpack_8_bb7_in(V_left1_0',B')] 
1
#### Cost of phase [16]:eval_sample_unpack_8_bb7_in(V_left1_0,B) -> [eval_sample_unpack_8_bb7_in(V_left1_0',B')] 
1*it(16)+0
  Such that:it(16) =< V_left1_0
it(16) =< V_left1_0-V_left1_0'

#### Cost of chains of eval_sample_unpack_8_bb7_in(V_left1_0,B):
* Chain [[17]]...: 1*it(17)+0
  with precondition: [0>=V_left1_0+1,B=2] 

* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< V_left1_0

  with precondition: [B=2,V_left1_0>=1] 

* Chain [18]: 0
  with precondition: [V_left1_0=0,B=2] 


#### Cost of chains of eval_sample_unpack_8_bb0_in(V_data_x,V_dsize,B):
* Chain [20]: 2*s(3)+1
  Such that:aux(1) =< -V_data_x+V_dsize
s(3) =< aux(1)

  with precondition: [] 

* Chain [19]...: 1*aux(2)+0
  with precondition: [V_data_x>=V_dsize+1] 


#### Cost of chains of eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B):
* Chain [22]: 2*s(8)+1
  Such that:s(7) =< -V_data_x+V_dsize
s(8) =< s(7)

  with precondition: [] 

* Chain [21]...: 1*s(9)+0
  with precondition: [V_data_x>=V_dsize+1] 


Closed-form bounds of eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: nat(-V_data_x+V_dsize)*2+1 
    - Complexity: n 
* Chain [21]... with precondition: [V_data_x>=V_dsize+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_sample_unpack_8_start(V_data_x,V_dsize,V_spread,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 24 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 19 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 82 ms.

