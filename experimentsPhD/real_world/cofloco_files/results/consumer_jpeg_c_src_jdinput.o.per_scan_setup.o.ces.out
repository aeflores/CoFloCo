Warning: Ignored call to eval_per_scan_setup_stop/1 in equation eval_per_scan_setup_bb18_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_per_scan_setup_bb18_in/1]
1. non_recursive  : [eval_per_scan_setup_bb3_in/1]
2. recursive  : [eval_per_scan_setup_bb15_in/5]
3. recursive  : [eval_per_scan_setup_84/3,eval_per_scan_setup_85/3,eval_per_scan_setup_bb11_in/2,eval_per_scan_setup_bb13_in/2,eval_per_scan_setup_bb8_in/2,loop_cont_eval_per_scan_setup_bb15_in/3]
4. non_recursive  : [loop_cont_eval_per_scan_setup_bb8_in/2]
5. non_recursive  : [eval_per_scan_setup_46/1]
6. non_recursive  : [eval_per_scan_setup_45/3]
7. non_recursive  : [eval_per_scan_setup_38/1]
8. non_recursive  : [eval_per_scan_setup_37/3]
9. non_recursive  : [eval_per_scan_setup_bb7_in/1]
10. non_recursive  : [eval_per_scan_setup_31/1]
11. non_recursive  : [eval_per_scan_setup_30/1]
12. non_recursive  : [eval_per_scan_setup_bb6_in/1]
13. non_recursive  : [eval_per_scan_setup_bb0_in/1]
14. non_recursive  : [eval_per_scan_setup_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_per_scan_setup_bb15_in/5
3. SCC is partially evaluated into eval_per_scan_setup_bb8_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_per_scan_setup_46/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_per_scan_setup_bb0_in/1
14. SCC is partially evaluated into eval_per_scan_setup_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_per_scan_setup_bb15_in/5 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_per_scan_setup_bb15_in/5 
* CE 10: eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C) = 0
     [V_128>=V_mcublks_0,0>=V_mcublks_0,C=V_ci_0+1,B=2] 
* CE 11: eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C) = 1+ eval_per_scan_setup_bb15_in(V_ci_0,V_128,D,E,C)
     [V_128>=V_mcublks_0,V_mcublks_0>=1,V_mcublks_0=D+1,E=2,B=2] 

### Cost equations --> "Loop" of eval_per_scan_setup_bb15_in/5 
* CEs [11] --> Loop 8 
* CEs [10] --> Loop 9 

#### Loops of eval_per_scan_setup_bb15_in/5 
* Loop 8: eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C)->  eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0',B',C)
                  [V_128>=V_mcublks_0,V_mcublks_0>=1,V_mcublks_0=V_mcublks_0'+1,B'=2,B=2] 
* Loop 9: eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C) [V_128>=V_mcublks_0,0>=V_mcublks_0,V_ci_0+1=C,B=2] 

### Ranking functions of CR eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C) 
* RF of phase [8]: [V_mcublks_0]

#### Partial ranking functions of CR eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    V_mcublks_0


### Resulting Chains:eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C) 
* [[8],9]
* [9]


### Merging Chains  eval_per_scan_setup_bb15_in/5 into  External patterns of execution 
* [[9]] --> 1 
* [[9,[8]]] --> 2 


### Specialization of cost equations eval_per_scan_setup_bb8_in/2 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13,14] 


#### Refined cost equations eval_per_scan_setup_bb8_in/2 
* CE 12: eval_per_scan_setup_bb8_in(V_ci_0,B) = 0
     [B=3] 
* CE 13: eval_per_scan_setup_bb8_in(V_ci_0,B) = 2+ eval_per_scan_setup_bb15_in(C,D,D,E,F):1+ eval_per_scan_setup_bb8_in(F,G)
     [0>=D,F=C+1,F=V_ci_0+1,G=3,E=2,B=3] 
* CE 14: eval_per_scan_setup_bb8_in(V_ci_0,B) = 2+ eval_per_scan_setup_bb15_in(C,D,D,E,F):2+ eval_per_scan_setup_bb8_in(F,G)
     [D>=1,F=C+1,F=V_ci_0+1,G=3,E=2,B=3] 

### Cost equations --> "Loop" of eval_per_scan_setup_bb8_in/2 
* CEs [13,14] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_per_scan_setup_bb8_in/2 
* Loop 10: eval_per_scan_setup_bb8_in(V_ci_0,B)->  eval_per_scan_setup_bb8_in(V_ci_0',B')
                  [V_ci_0+1=V_ci_0',B'=3,B=3] 
* Loop 11: eval_per_scan_setup_bb8_in(V_ci_0,B) [B=3] 

### Ranking functions of CR eval_per_scan_setup_bb8_in(V_ci_0,B) 

#### Partial ranking functions of CR eval_per_scan_setup_bb8_in(V_ci_0,B) 


### Resulting Chains:eval_per_scan_setup_bb8_in(V_ci_0,B) 
* [[10]]...
* [[10],11]
* [11]


### Merging Chains  eval_per_scan_setup_bb8_in/2 into  External patterns of execution 
* [[11],[11,[10]]] --> 1 
* [[[10]]] --> 2 


### Specialization of cost equations eval_per_scan_setup_46/1 
* CE 5 is refined into CE [15,16] 


#### Refined cost equations eval_per_scan_setup_46/1 
* CE 15: eval_per_scan_setup_46(B) = 1+ eval_per_scan_setup_bb8_in(C,D):1
     [D=3,C=0] 
* CE 16: eval_per_scan_setup_46(B) = 1+ eval_per_scan_setup_bb8_in(C,D):2
     [D=3,C=0] 

### Cost equations --> "Loop" of eval_per_scan_setup_46/1 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_per_scan_setup_46/1 
* Loop 12: eval_per_scan_setup_46(B) [] 
* Loop 13: eval_per_scan_setup_46(B) [] 

### Ranking functions of CR eval_per_scan_setup_46(B) 

#### Partial ranking functions of CR eval_per_scan_setup_46(B) 


### Resulting Chains:eval_per_scan_setup_46(B) 
* [13]
* [12]...


### Merging Chains  eval_per_scan_setup_46/1 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_per_scan_setup_bb0_in/1 
* CE 3 is refined into CE [17] 
* CE 4 is refined into CE [18,19] 


#### Refined cost equations eval_per_scan_setup_bb0_in/1 
* CE 17: eval_per_scan_setup_bb0_in(B) = 0
     [] 
* CE 18: eval_per_scan_setup_bb0_in(B) = 0+ eval_per_scan_setup_46(B):1
     [] 
* CE 19: eval_per_scan_setup_bb0_in(B) = 0+ eval_per_scan_setup_46(B):2
     [] 

### Cost equations --> "Loop" of eval_per_scan_setup_bb0_in/1 
* CEs [19] --> Loop 14 
* CEs [17,18] --> Loop 15 

#### Loops of eval_per_scan_setup_bb0_in/1 
* Loop 14: eval_per_scan_setup_bb0_in(B) [] 
* Loop 15: eval_per_scan_setup_bb0_in(B) [] 

### Ranking functions of CR eval_per_scan_setup_bb0_in(B) 

#### Partial ranking functions of CR eval_per_scan_setup_bb0_in(B) 


### Resulting Chains:eval_per_scan_setup_bb0_in(B) 
* [15]
* [14]...


### Merging Chains  eval_per_scan_setup_bb0_in/1 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_per_scan_setup_start/1 
* CE 2 is refined into CE [20,21] 


#### Refined cost equations eval_per_scan_setup_start/1 
* CE 20: eval_per_scan_setup_start(B) = 0+ eval_per_scan_setup_bb0_in(B):1
     [] 
* CE 21: eval_per_scan_setup_start(B) = 0+ eval_per_scan_setup_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_per_scan_setup_start/1 
* CEs [21] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of eval_per_scan_setup_start/1 
* Loop 16: eval_per_scan_setup_start(B) [] 
* Loop 17: eval_per_scan_setup_start(B) [] 

### Ranking functions of CR eval_per_scan_setup_start(B) 

#### Partial ranking functions of CR eval_per_scan_setup_start(B) 


### Resulting Chains:eval_per_scan_setup_start(B) 
* [17]
* [16]...


### Merging Chains  eval_per_scan_setup_start/1 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C) -> [eval_per_scan_setup_bb15_in(V_ci_0',V_128',V_mcublks_0',B',C')] 
1
#### Cost of phase [8]:eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C) -> [eval_per_scan_setup_bb15_in(V_ci_0',V_128',V_mcublks_0',B',C')] 
1*it(8)+0
  Such that:it(8) =< V_mcublks_0
it(8) =< V_mcublks_0-V_mcublks_0'

#### Cost of chains of eval_per_scan_setup_bb15_in(V_ci_0,V_128,V_mcublks_0,B,C):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< V_mcublks_0

  with precondition: [B=2,V_ci_0+1=C,V_mcublks_0>=1,V_128>=V_mcublks_0] 

* Chain [9]: 0
  with precondition: [B=2,C=V_ci_0+1,0>=V_mcublks_0,V_128>=V_mcublks_0] 


#### Cost of loops [10] 

 * loop 10:eval_per_scan_setup_bb8_in(V_ci_0,B) -> [eval_per_scan_setup_bb8_in(V_ci_0',B')] 
1*s(2)+0
#### Cost of phase [10]:eval_per_scan_setup_bb8_in(V_ci_0,B) -> [eval_per_scan_setup_bb8_in(V_ci_0',B')] 
1*s(3)+0
#### Cost of phase [10]:eval_per_scan_setup_bb8_in(V_ci_0,B) -> [eval_per_scan_setup_bb8_in(V_ci_0',B')] 
1*s(3)+0
#### Cost of chains of eval_per_scan_setup_bb8_in(V_ci_0,B):
* Chain [[10]]...: 1*s(3)+0
  with precondition: [B=3] 

* Chain [[10],11]: 1*s(3)+0
  with precondition: [B=3,V_ci_0>=0] 

* Chain [11]: 0
  with precondition: [B=3,V_ci_0>=0] 


#### Cost of chains of eval_per_scan_setup_46(B):
* Chain [13]: 1*s(5)+1
  with precondition: [] 

* Chain [12]...: 1*s(6)+1
  with precondition: [] 


#### Cost of chains of eval_per_scan_setup_bb0_in(B):
* Chain [15]: 1*aux(3)+0
  with precondition: [] 

* Chain [14]...: 1*s(8)+1
  with precondition: [] 


#### Cost of chains of eval_per_scan_setup_start(B):
* Chain [17]: 1*s(9)+0
  with precondition: [] 

* Chain [16]...: 1*s(10)+1
  with precondition: [] 


Closed-form bounds of eval_per_scan_setup_start(B): 
-------------------------------------
* Chain [17] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [16]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_per_scan_setup_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 11 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 15 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 14 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 7 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 85 ms.

