Warning: Ignored call to eval_PackBitsEncodeChunk_stop/1 in equation eval_PackBitsEncodeChunk_11/1 
Warning: Ignored call to eval_PackBitsEncodeChunk_stop/1 in equation eval_PackBitsEncodeChunk_bb5_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_PackBitsEncodeChunk_11/1]
1. non_recursive  : [eval_PackBitsEncodeChunk_10/1]
2. recursive  : [eval_PackBitsEncodeChunk_6/4,eval_PackBitsEncodeChunk_7/4,eval_PackBitsEncodeChunk_bb2_in/4]
3. non_recursive  : [eval_PackBitsEncodeChunk_bb5_in/1]
4. non_recursive  : [loop_cont_eval_PackBitsEncodeChunk_bb2_in/2]
5. non_recursive  : [eval_PackBitsEncodeChunk_bb0_in/3]
6. non_recursive  : [eval_PackBitsEncodeChunk_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_PackBitsEncodeChunk_bb2_in/4
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_PackBitsEncodeChunk_bb0_in/3
6. SCC is partially evaluated into eval_PackBitsEncodeChunk_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_PackBitsEncodeChunk_bb2_in/4 
* CE 6 is refined into CE [8] 
* CE 7 is refined into CE [9] 
* CE 5 is refined into CE [10] 


#### Refined cost equations eval_PackBitsEncodeChunk_bb2_in/4 
* CE 8: eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) = 0
     [V__02>=1,B=2] 
* CE 9: eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) = 0
     [0>=V__02,B=2] 
* CE 10: eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) = 1+ eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,C,D)
     [V__02>=1,V__02=V_2+C,D=2,B=2] 

### Cost equations --> "Loop" of eval_PackBitsEncodeChunk_bb2_in/4 
* CEs [10] --> Loop 6 
* CEs [8] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_PackBitsEncodeChunk_bb2_in/4 
* Loop 6: eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B)->  eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02',B')
                  [V__02>=1,V__02=V_2+V__02',B'=2,B=2] 
* Loop 7: eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) [V__02>=1,B=2] 
* Loop 8: eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) [0>=V__02,B=2] 

### Ranking functions of CR eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) 

#### Partial ranking functions of CR eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) 


### Resulting Chains:eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) 
* [[6]]...
* [[6],8]
* [[6],7]
* [8]
* [7]


### Merging Chains  eval_PackBitsEncodeChunk_bb2_in/4 into  External patterns of execution 
* [[8]] --> 1 
* [[7],[7,[6]],[8,[6]]] --> 2 
* [[[6]]] --> 3 


### Specialization of cost equations eval_PackBitsEncodeChunk_bb0_in/3 
* CE 3 is refined into CE [11,12,13] 
* CE 4 is refined into CE [14] 


#### Refined cost equations eval_PackBitsEncodeChunk_bb0_in/3 
* CE 11: eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B) = 1+ eval_PackBitsEncodeChunk_bb2_in(V_s,C,V_cc,D):1
     [0>=V_cc,D=2] 
* CE 12: eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B) = 1+ eval_PackBitsEncodeChunk_bb2_in(V_s,C,V_cc,D):2
     [V_cc>=1,D=2] 
* CE 13: eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B) = 1+ eval_PackBitsEncodeChunk_bb2_in(V_s,C,V_cc,D):3
     [V_cc>=1,D=2] 
* CE 14: eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B) = 0
     [] 

### Cost equations --> "Loop" of eval_PackBitsEncodeChunk_bb0_in/3 
* CEs [11,12,14] --> Loop 9 
* CEs [13] --> Loop 10 

#### Loops of eval_PackBitsEncodeChunk_bb0_in/3 
* Loop 9: eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B) [] 
* Loop 10: eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B) [V_cc>=1] 

### Ranking functions of CR eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B) 

#### Partial ranking functions of CR eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B) 


### Resulting Chains:eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B) 
* [10]...
* [9]


### Merging Chains  eval_PackBitsEncodeChunk_bb0_in/3 into  External patterns of execution 
* [[9]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_PackBitsEncodeChunk_start/3 
* CE 2 is refined into CE [15,16] 


#### Refined cost equations eval_PackBitsEncodeChunk_start/3 
* CE 15: eval_PackBitsEncodeChunk_start(V_cc,V_s,B) = 0+ eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B):1
     [] 
* CE 16: eval_PackBitsEncodeChunk_start(V_cc,V_s,B) = 0+ eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B):2
     [V_cc>=1] 

### Cost equations --> "Loop" of eval_PackBitsEncodeChunk_start/3 
* CEs [16] --> Loop 11 
* CEs [15] --> Loop 12 

#### Loops of eval_PackBitsEncodeChunk_start/3 
* Loop 11: eval_PackBitsEncodeChunk_start(V_cc,V_s,B) [V_cc>=1] 
* Loop 12: eval_PackBitsEncodeChunk_start(V_cc,V_s,B) [] 

### Ranking functions of CR eval_PackBitsEncodeChunk_start(V_cc,V_s,B) 

#### Partial ranking functions of CR eval_PackBitsEncodeChunk_start(V_cc,V_s,B) 


### Resulting Chains:eval_PackBitsEncodeChunk_start(V_cc,V_s,B) 
* [12]
* [11]...


### Merging Chains  eval_PackBitsEncodeChunk_start/3 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) -> [eval_PackBitsEncodeChunk_bb2_in(V_s',V_2',V__02',B')] 
1
#### Cost of phase [6]:eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) -> [eval_PackBitsEncodeChunk_bb2_in(V_s',V_2',V__02',B')] 
1*it(6)+0
#### Cost of phase [6]:eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) -> [eval_PackBitsEncodeChunk_bb2_in(V_s',V_2',V__02',B')] 
1*it(6)+0
#### Cost of phase [6]:eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B) -> [eval_PackBitsEncodeChunk_bb2_in(V_s',V_2',V__02',B')] 
1*it(6)+0
#### Cost of chains of eval_PackBitsEncodeChunk_bb2_in(V_s,V_2,V__02,B):
* Chain [[6]]...: 1*it(6)+0
  with precondition: [V__02>=1,B=2] 

* Chain [[6],8]: 1*it(6)+0
  with precondition: [B=2,V_2>=1,V__02>=1] 

* Chain [[6],7]: 1*it(6)+0
  with precondition: [B=2,V__02>=1,V__02>=V_2+1] 

* Chain [8]: 0
  with precondition: [B=2,0>=V__02] 

* Chain [7]: 0
  with precondition: [B=2,V__02>=1] 


#### Cost of chains of eval_PackBitsEncodeChunk_bb0_in(V_cc,V_s,B):
* Chain [10]...: 1*s(3)+1
  with precondition: [V_cc>=1] 

* Chain [9]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_PackBitsEncodeChunk_start(V_cc,V_s,B):
* Chain [12]: 1*s(5)+0
  with precondition: [] 

* Chain [11]...: 1*s(6)+1
  with precondition: [V_cc>=1] 


Closed-form bounds of eval_PackBitsEncodeChunk_start(V_cc,V_s,B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11]... with precondition: [V_cc>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_PackBitsEncodeChunk_start(V_cc,V_s,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 6 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 12 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 48 ms.

