Warning: Ignored call to eval_zoserrorstring_stop/1 in equation eval_zoserrorstring_bb13_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_zoserrorstring_bb13_in/1]
1. non_recursive  : [eval_zoserrorstring_44/1]
2. non_recursive  : [eval_zoserrorstring_43/1]
3. recursive  : [eval_zoserrorstring_bb8_in/1]
4. non_recursive  : [eval_zoserrorstring__critedge_in/1]
5. non_recursive  : [loop_cont_eval_zoserrorstring_bb8_in/2]
6. non_recursive  : [eval_zoserrorstring_21/1]
7. non_recursive  : [eval_zoserrorstring_20/1]
8. non_recursive  : [eval_zoserrorstring_bb3_in/1]
9. non_recursive  : [eval_zoserrorstring_8/1]
10. non_recursive  : [eval_zoserrorstring_7/1]
11. non_recursive  : [eval_zoserrorstring_6/1]
12. non_recursive  : [eval_zoserrorstring_5/2]
13. non_recursive  : [eval_zoserrorstring_bb0_in/1]
14. non_recursive  : [eval_zoserrorstring_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_zoserrorstring_bb8_in/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_zoserrorstring_21/1
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_zoserrorstring_8/1
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_zoserrorstring_6/1
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_zoserrorstring_bb0_in/1
14. SCC is partially evaluated into eval_zoserrorstring_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_zoserrorstring_bb8_in/1 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 


#### Refined cost equations eval_zoserrorstring_bb8_in/1 
* CE 13: eval_zoserrorstring_bb8_in(B) = 0
     [B=2] 
* CE 14: eval_zoserrorstring_bb8_in(B) = 1+ eval_zoserrorstring_bb8_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_zoserrorstring_bb8_in/1 
* CEs [14] --> Loop 8 
* CEs [13] --> Loop 9 

#### Loops of eval_zoserrorstring_bb8_in/1 
* Loop 8: eval_zoserrorstring_bb8_in(B)->  eval_zoserrorstring_bb8_in(B')
                  [B'=2,B=2] 
* Loop 9: eval_zoserrorstring_bb8_in(B) [B=2] 

### Ranking functions of CR eval_zoserrorstring_bb8_in(B) 

#### Partial ranking functions of CR eval_zoserrorstring_bb8_in(B) 


### Resulting Chains:eval_zoserrorstring_bb8_in(B) 
* [[8]]...
* [[8],9]
* [9]


### Merging Chains  eval_zoserrorstring_bb8_in/1 into  External patterns of execution 
* [[9],[9,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval_zoserrorstring_21/1 
* CE 9 is refined into CE [15] 
* CE 10 is refined into CE [16,17] 


#### Refined cost equations eval_zoserrorstring_21/1 
* CE 15: eval_zoserrorstring_21(B) = 0
     [] 
* CE 16: eval_zoserrorstring_21(B) = 1+ eval_zoserrorstring_bb8_in(C):1
     [C=2] 
* CE 17: eval_zoserrorstring_21(B) = 1+ eval_zoserrorstring_bb8_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_zoserrorstring_21/1 
* CEs [17] --> Loop 10 
* CEs [15,16] --> Loop 11 

#### Loops of eval_zoserrorstring_21/1 
* Loop 10: eval_zoserrorstring_21(B) [] 
* Loop 11: eval_zoserrorstring_21(B) [] 

### Ranking functions of CR eval_zoserrorstring_21(B) 

#### Partial ranking functions of CR eval_zoserrorstring_21(B) 


### Resulting Chains:eval_zoserrorstring_21(B) 
* [11]
* [10]...


### Merging Chains  eval_zoserrorstring_21/1 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_zoserrorstring_8/1 
* CE 7 is refined into CE [18] 
* CE 8 is refined into CE [19,20] 


#### Refined cost equations eval_zoserrorstring_8/1 
* CE 18: eval_zoserrorstring_8(B) = 0
     [] 
* CE 19: eval_zoserrorstring_8(B) = 0+ eval_zoserrorstring_21(B):1
     [] 
* CE 20: eval_zoserrorstring_8(B) = 0+ eval_zoserrorstring_21(B):2
     [] 

### Cost equations --> "Loop" of eval_zoserrorstring_8/1 
* CEs [20] --> Loop 12 
* CEs [18,19] --> Loop 13 

#### Loops of eval_zoserrorstring_8/1 
* Loop 12: eval_zoserrorstring_8(B) [] 
* Loop 13: eval_zoserrorstring_8(B) [] 

### Ranking functions of CR eval_zoserrorstring_8(B) 

#### Partial ranking functions of CR eval_zoserrorstring_8(B) 


### Resulting Chains:eval_zoserrorstring_8(B) 
* [13]
* [12]...


### Merging Chains  eval_zoserrorstring_8/1 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_zoserrorstring_6/1 
* CE 5 is refined into CE [21] 
* CE 6 is refined into CE [22,23] 


#### Refined cost equations eval_zoserrorstring_6/1 
* CE 21: eval_zoserrorstring_6(B) = 0
     [] 
* CE 22: eval_zoserrorstring_6(B) = 0+ eval_zoserrorstring_8(B):1
     [] 
* CE 23: eval_zoserrorstring_6(B) = 0+ eval_zoserrorstring_8(B):2
     [] 

### Cost equations --> "Loop" of eval_zoserrorstring_6/1 
* CEs [23] --> Loop 14 
* CEs [21,22] --> Loop 15 

#### Loops of eval_zoserrorstring_6/1 
* Loop 14: eval_zoserrorstring_6(B) [] 
* Loop 15: eval_zoserrorstring_6(B) [] 

### Ranking functions of CR eval_zoserrorstring_6(B) 

#### Partial ranking functions of CR eval_zoserrorstring_6(B) 


### Resulting Chains:eval_zoserrorstring_6(B) 
* [15]
* [14]...


### Merging Chains  eval_zoserrorstring_6/1 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_zoserrorstring_bb0_in/1 
* CE 3 is refined into CE [24,25] 
* CE 4 is refined into CE [26] 


#### Refined cost equations eval_zoserrorstring_bb0_in/1 
* CE 24: eval_zoserrorstring_bb0_in(B) = 0+ eval_zoserrorstring_6(B):1
     [] 
* CE 25: eval_zoserrorstring_bb0_in(B) = 0+ eval_zoserrorstring_6(B):2
     [] 
* CE 26: eval_zoserrorstring_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_zoserrorstring_bb0_in/1 
* CEs [24,26] --> Loop 16 
* CEs [25] --> Loop 17 

#### Loops of eval_zoserrorstring_bb0_in/1 
* Loop 16: eval_zoserrorstring_bb0_in(B) [] 
* Loop 17: eval_zoserrorstring_bb0_in(B) [] 

### Ranking functions of CR eval_zoserrorstring_bb0_in(B) 

#### Partial ranking functions of CR eval_zoserrorstring_bb0_in(B) 


### Resulting Chains:eval_zoserrorstring_bb0_in(B) 
* [17]...
* [16]


### Merging Chains  eval_zoserrorstring_bb0_in/1 into  External patterns of execution 
* [[16]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_zoserrorstring_start/1 
* CE 2 is refined into CE [27,28] 


#### Refined cost equations eval_zoserrorstring_start/1 
* CE 27: eval_zoserrorstring_start(B) = 0+ eval_zoserrorstring_bb0_in(B):1
     [] 
* CE 28: eval_zoserrorstring_start(B) = 0+ eval_zoserrorstring_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_zoserrorstring_start/1 
* CEs [28] --> Loop 18 
* CEs [27] --> Loop 19 

#### Loops of eval_zoserrorstring_start/1 
* Loop 18: eval_zoserrorstring_start(B) [] 
* Loop 19: eval_zoserrorstring_start(B) [] 

### Ranking functions of CR eval_zoserrorstring_start(B) 

#### Partial ranking functions of CR eval_zoserrorstring_start(B) 


### Resulting Chains:eval_zoserrorstring_start(B) 
* [19]
* [18]...


### Merging Chains  eval_zoserrorstring_start/1 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_zoserrorstring_bb8_in(B) -> [eval_zoserrorstring_bb8_in(B')] 
1
#### Cost of phase [8]:eval_zoserrorstring_bb8_in(B) -> [eval_zoserrorstring_bb8_in(B')] 
1*it(8)+0
#### Cost of phase [8]:eval_zoserrorstring_bb8_in(B) -> [eval_zoserrorstring_bb8_in(B')] 
1*it(8)+0
#### Cost of chains of eval_zoserrorstring_bb8_in(B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [B=2] 

* Chain [9]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_zoserrorstring_21(B):
* Chain [11]: 1*aux(2)+0
  with precondition: [] 

* Chain [10]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_zoserrorstring_8(B):
* Chain [13]: 1*aux(3)+0
  with precondition: [] 

* Chain [12]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_zoserrorstring_6(B):
* Chain [15]: 1*aux(4)+0
  with precondition: [] 

* Chain [14]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_zoserrorstring_bb0_in(B):
* Chain [17]...: 1*s(8)+1
  with precondition: [] 

* Chain [16]: 1*aux(5)+0
  with precondition: [] 


#### Cost of chains of eval_zoserrorstring_start(B):
* Chain [19]: 1*s(10)+0
  with precondition: [] 

* Chain [18]...: 1*s(11)+1
  with precondition: [] 


Closed-form bounds of eval_zoserrorstring_start(B): 
-------------------------------------
* Chain [19] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_zoserrorstring_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 5 ms.
* Invariants computed in 3 ms.
   - Backward Invariants 1 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 7 ms.
* Termination proved in 0 ms.
* Upper bounds computed in 6 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 1 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 32 ms.

