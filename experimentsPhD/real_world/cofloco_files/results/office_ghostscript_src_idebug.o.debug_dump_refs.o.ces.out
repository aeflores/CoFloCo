Warning: Ignored call to eval_debug_dump_refs_stop/1 in equation loop_cont_eval_debug_dump_refs_bb2_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_debug_dump_refs_10/5,eval_debug_dump_refs_11/5,eval_debug_dump_refs_12/5,eval_debug_dump_refs_13/5,eval_debug_dump_refs_bb2_in/2]
1. non_recursive  : [loop_cont_eval_debug_dump_refs_bb2_in/2]
2. non_recursive  : [eval_debug_dump_refs_2/2]
3. non_recursive  : [eval_debug_dump_refs_1/3]
4. non_recursive  : [eval_debug_dump_refs_bb0_in/2]
5. non_recursive  : [eval_debug_dump_refs_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_debug_dump_refs_bb2_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_debug_dump_refs_2/2
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_debug_dump_refs_bb0_in/2
5. SCC is partially evaluated into eval_debug_dump_refs_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_debug_dump_refs_bb2_in/2 
* CE 8 is refined into CE [9] 
* CE 6 is refined into CE [10] 
* CE 7 is refined into CE [11] 


#### Refined cost equations eval_debug_dump_refs_bb2_in/2 
* CE 9: eval_debug_dump_refs_bb2_in(V_count_0,B) = 0
     [B=2,V_count_0=0] 
* CE 10: eval_debug_dump_refs_bb2_in(V_count_0,B) = 1+ eval_debug_dump_refs_bb2_in(C,D)
     [V_count_0>=1,V_count_0=C+1,D=2,B=2] 
* CE 11: eval_debug_dump_refs_bb2_in(V_count_0,B) = 1+ eval_debug_dump_refs_bb2_in(C,D)
     [0>=V_count_0+1,V_count_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_debug_dump_refs_bb2_in/2 
* CEs [10] --> Loop 7 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 

#### Loops of eval_debug_dump_refs_bb2_in/2 
* Loop 7: eval_debug_dump_refs_bb2_in(V_count_0,B)->  eval_debug_dump_refs_bb2_in(V_count_0',B')
                  [V_count_0>=1,V_count_0=V_count_0'+1,B'=2,B=2] 
* Loop 8: eval_debug_dump_refs_bb2_in(V_count_0,B)->  eval_debug_dump_refs_bb2_in(V_count_0',B')
                  [0>=V_count_0+1,V_count_0=V_count_0'+1,B'=2,B=2] 
* Loop 9: eval_debug_dump_refs_bb2_in(V_count_0,B) [B=2,V_count_0=0] 

### Ranking functions of CR eval_debug_dump_refs_bb2_in(V_count_0,B) 
* RF of phase [7]: [V_count_0]

#### Partial ranking functions of CR eval_debug_dump_refs_bb2_in(V_count_0,B) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_count_0


### Resulting Chains:eval_debug_dump_refs_bb2_in(V_count_0,B) 
* [[8]]...
* [[7],9]
* [9]


### Merging Chains  eval_debug_dump_refs_bb2_in/2 into  External patterns of execution 
* [[9]] --> 1 
* [[9,[7]]] --> 2 
* [[[8]]] --> 3 


### Specialization of cost equations eval_debug_dump_refs_2/2 
* CE 5 is refined into CE [12,13,14] 


#### Refined cost equations eval_debug_dump_refs_2/2 
* CE 12: eval_debug_dump_refs_2(V_size,B) = 1+ eval_debug_dump_refs_bb2_in(C,D):1
     [D=2,C=0,V_size=0] 
* CE 13: eval_debug_dump_refs_2(V_size,B) = 1+ eval_debug_dump_refs_bb2_in(V_size,C):2
     [V_size>=1,C=2] 
* CE 14: eval_debug_dump_refs_2(V_size,B) = 1+ eval_debug_dump_refs_bb2_in(V_size,C):3
     [0>=V_size+1,C=2] 

### Cost equations --> "Loop" of eval_debug_dump_refs_2/2 
* CEs [14] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_debug_dump_refs_2/2 
* Loop 10: eval_debug_dump_refs_2(V_size,B) [0>=V_size+1] 
* Loop 11: eval_debug_dump_refs_2(V_size,B) [V_size>=1] 
* Loop 12: eval_debug_dump_refs_2(V_size,B) [V_size=0] 

### Ranking functions of CR eval_debug_dump_refs_2(V_size,B) 

#### Partial ranking functions of CR eval_debug_dump_refs_2(V_size,B) 


### Resulting Chains:eval_debug_dump_refs_2(V_size,B) 
* [12]
* [11]
* [10]...


### Merging Chains  eval_debug_dump_refs_2/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[10]] --> 3 


### Specialization of cost equations eval_debug_dump_refs_bb0_in/2 
* CE 3 is refined into CE [15,16,17] 
* CE 4 is refined into CE [18,19,20] 


#### Refined cost equations eval_debug_dump_refs_bb0_in/2 
* CE 15: eval_debug_dump_refs_bb0_in(V_size,B) = 0+ eval_debug_dump_refs_2(C,B):1
     [C=0,V_size=0] 
* CE 16: eval_debug_dump_refs_bb0_in(V_size,B) = 0+ eval_debug_dump_refs_2(V_size,B):2
     [V_size>=1] 
* CE 17: eval_debug_dump_refs_bb0_in(V_size,B) = 0+ eval_debug_dump_refs_2(V_size,B):3
     [0>=V_size+1] 
* CE 18: eval_debug_dump_refs_bb0_in(V_size,B) = 1+ eval_debug_dump_refs_bb2_in(C,D):1
     [D=2,C=0,V_size=0] 
* CE 19: eval_debug_dump_refs_bb0_in(V_size,B) = 1+ eval_debug_dump_refs_bb2_in(V_size,C):2
     [V_size>=1,C=2] 
* CE 20: eval_debug_dump_refs_bb0_in(V_size,B) = 1+ eval_debug_dump_refs_bb2_in(V_size,C):3
     [0>=V_size+1,C=2] 

### Cost equations --> "Loop" of eval_debug_dump_refs_bb0_in/2 
* CEs [17,20] --> Loop 13 
* CEs [16,19] --> Loop 14 
* CEs [15,18] --> Loop 15 

#### Loops of eval_debug_dump_refs_bb0_in/2 
* Loop 13: eval_debug_dump_refs_bb0_in(V_size,B) [0>=V_size+1] 
* Loop 14: eval_debug_dump_refs_bb0_in(V_size,B) [V_size>=1] 
* Loop 15: eval_debug_dump_refs_bb0_in(V_size,B) [V_size=0] 

### Ranking functions of CR eval_debug_dump_refs_bb0_in(V_size,B) 

#### Partial ranking functions of CR eval_debug_dump_refs_bb0_in(V_size,B) 


### Resulting Chains:eval_debug_dump_refs_bb0_in(V_size,B) 
* [15]
* [14]
* [13]...


### Merging Chains  eval_debug_dump_refs_bb0_in/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13]] --> 3 


### Specialization of cost equations eval_debug_dump_refs_start/2 
* CE 2 is refined into CE [21,22,23] 


#### Refined cost equations eval_debug_dump_refs_start/2 
* CE 21: eval_debug_dump_refs_start(V_size,B) = 0+ eval_debug_dump_refs_bb0_in(C,B):1
     [C=0,V_size=0] 
* CE 22: eval_debug_dump_refs_start(V_size,B) = 0+ eval_debug_dump_refs_bb0_in(V_size,B):2
     [V_size>=1] 
* CE 23: eval_debug_dump_refs_start(V_size,B) = 0+ eval_debug_dump_refs_bb0_in(V_size,B):3
     [0>=V_size+1] 

### Cost equations --> "Loop" of eval_debug_dump_refs_start/2 
* CEs [23] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of eval_debug_dump_refs_start/2 
* Loop 16: eval_debug_dump_refs_start(V_size,B) [0>=V_size+1] 
* Loop 17: eval_debug_dump_refs_start(V_size,B) [V_size>=1] 
* Loop 18: eval_debug_dump_refs_start(V_size,B) [V_size=0] 

### Ranking functions of CR eval_debug_dump_refs_start(V_size,B) 

#### Partial ranking functions of CR eval_debug_dump_refs_start(V_size,B) 


### Resulting Chains:eval_debug_dump_refs_start(V_size,B) 
* [18]
* [17]
* [16]...


### Merging Chains  eval_debug_dump_refs_start/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 
* [[16]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_debug_dump_refs_bb2_in(V_count_0,B) -> [eval_debug_dump_refs_bb2_in(V_count_0',B')] 
1
#### Cost of phase [8]:eval_debug_dump_refs_bb2_in(V_count_0,B) -> [eval_debug_dump_refs_bb2_in(V_count_0',B')] 
1*it(8)+0
#### Cost of loops [7] 

 * loop 7:eval_debug_dump_refs_bb2_in(V_count_0,B) -> [eval_debug_dump_refs_bb2_in(V_count_0',B')] 
1
#### Cost of phase [7]:eval_debug_dump_refs_bb2_in(V_count_0,B) -> [eval_debug_dump_refs_bb2_in(V_count_0',B')] 
1*it(7)+0
  Such that:it(7) =< V_count_0
it(7) =< V_count_0-V_count_0'

#### Cost of chains of eval_debug_dump_refs_bb2_in(V_count_0,B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [0>=V_count_0+1,B=2] 

* Chain [[7],9]: 1*it(7)+0
  Such that:it(7) =< V_count_0

  with precondition: [B=2,V_count_0>=1] 

* Chain [9]: 0
  with precondition: [V_count_0=0,B=2] 


#### Cost of chains of eval_debug_dump_refs_2(V_size,B):
* Chain [12]: 1
  with precondition: [V_size=0] 

* Chain [11]: 1*s(1)+1
  Such that:s(1) =< V_size

  with precondition: [V_size>=1] 

* Chain [10]...: 1*s(2)+1
  with precondition: [0>=V_size+1] 


#### Cost of chains of eval_debug_dump_refs_bb0_in(V_size,B):
* Chain [15]: 1
  with precondition: [V_size=0] 

* Chain [14]: 2*s(3)+1
  Such that:aux(1) =< V_size
s(3) =< aux(1)

  with precondition: [V_size>=1] 

* Chain [13]...: 1*aux(2)+0
  with precondition: [0>=V_size+1] 


#### Cost of chains of eval_debug_dump_refs_start(V_size,B):
* Chain [18]: 1
  with precondition: [V_size=0] 

* Chain [17]: 2*s(8)+1
  Such that:s(7) =< V_size
s(8) =< s(7)

  with precondition: [V_size>=1] 

* Chain [16]...: 1*s(9)+0
  with precondition: [0>=V_size+1] 


Closed-form bounds of eval_debug_dump_refs_start(V_size,B): 
-------------------------------------
* Chain [18] with precondition: [V_size=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [17] with precondition: [V_size>=1] 
    - Upper bound: 2*V_size+1 
    - Complexity: n 
* Chain [16]... with precondition: [0>=V_size+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_debug_dump_refs_start(V_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 28 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 6 ms.
* Refinement performed in 54 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 42 ms.
   - Equation cost structures 24 ms.
   - Phase cost structures 10 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 194 ms.

