Warning: Ignored call to eval_obj_eq_stop/1 in equation eval_obj_eq_bb54_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_obj_eq_bb54_in/1]
1. non_recursive  : [eval_obj_eq_108/2]
2. non_recursive  : [eval_obj_eq_107/3]
3. non_recursive  : [eval_obj_eq_NewDefault19_in/1]
4. non_recursive  : [eval_obj_eq_bb27_in/1]
5. non_recursive  : [eval_obj_eq_bb30_in/1]
6. non_recursive  : [eval_obj_eq_bb33_in/1]
7. recursive  : [eval_obj_eq_bb36_in/1]
8. non_recursive  : [eval_obj_eq_bb52_in/3]
9. non_recursive  : [eval_obj_eq_124/2]
10. non_recursive  : [eval_obj_eq_123/2]
11. non_recursive  : [eval_obj_eq_bb49_in/2]
12. non_recursive  : [eval_obj_eq_116/1]
13. non_recursive  : [eval_obj_eq_115/1]
14. non_recursive  : [eval_obj_eq_bb46_in/1]
15. recursive  : [eval_obj_eq_bb38_in/1]
16. non_recursive  : [loop_cont_eval_obj_eq_bb38_in/2]
17. non_recursive  : [loop_cont_eval_obj_eq_bb36_in/2]
18. non_recursive  : [eval_obj_eq_bb22_in/1]
19. non_recursive  : [eval_obj_eq_bb20_in/1]
20. non_recursive  : [eval_obj_eq_19/1]
21. non_recursive  : [eval_obj_eq_18/1]
22. non_recursive  : [eval_obj_eq_39/1]
23. non_recursive  : [eval_obj_eq_38/1]
24. non_recursive  : [eval_obj_eq_bb19_in/1]
25. non_recursive  : [eval_obj_eq_bb17_in/1]
26. non_recursive  : [eval_obj_eq_NewDefault_in/1]
27. non_recursive  : [eval_obj_eq_bb12_in/1]
28. non_recursive  : [eval_obj_eq_bb4_in/1]
29. non_recursive  : [eval_obj_eq_bb9_in/1]
30. non_recursive  : [eval_obj_eq_bb0_in/1]
31. non_recursive  : [eval_obj_eq_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_obj_eq_108/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_obj_eq_bb36_in/1
8. SCC is partially evaluated into eval_obj_eq_bb52_in/3
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_obj_eq_bb49_in/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_obj_eq_bb46_in/1
15. SCC is partially evaluated into eval_obj_eq_bb38_in/1
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into loop_cont_eval_obj_eq_bb36_in/2
18. SCC is partially evaluated into eval_obj_eq_bb22_in/1
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_obj_eq_bb19_in/1
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is partially evaluated into eval_obj_eq_bb0_in/1
31. SCC is partially evaluated into eval_obj_eq_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_obj_eq_108/2 
* CE 17 is refined into CE [25] 
* CE 16 is refined into CE [26] 
* CE 18 is refined into CE [27] 


#### Refined cost equations eval_obj_eq_108/2 
* CE 25: eval_obj_eq_108(V_258,B) = 0
     [V_258>=1] 
* CE 26: eval_obj_eq_108(V_258,B) = 0
     [0>=V_258+1] 
* CE 27: eval_obj_eq_108(V_258,B) = 0
     [V_258=0] 

### Cost equations --> "Loop" of eval_obj_eq_108/2 
* CEs [25] --> Loop 18 
* CEs [26] --> Loop 19 
* CEs [27] --> Loop 20 

#### Loops of eval_obj_eq_108/2 
* Loop 18: eval_obj_eq_108(V_258,B) [V_258>=1] 
* Loop 19: eval_obj_eq_108(V_258,B) [0>=V_258+1] 
* Loop 20: eval_obj_eq_108(V_258,B) [V_258=0] 

### Ranking functions of CR eval_obj_eq_108(V_258,B) 

#### Partial ranking functions of CR eval_obj_eq_108(V_258,B) 


### Resulting Chains:eval_obj_eq_108(V_258,B) 
* [20]
* [19]
* [18]


### Merging Chains  eval_obj_eq_108/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


### Specialization of cost equations eval_obj_eq_bb36_in/1 
* CE 13 is refined into CE [28] 
* CE 12 is refined into CE [29] 


#### Refined cost equations eval_obj_eq_bb36_in/1 
* CE 28: eval_obj_eq_bb36_in(B) = 0
     [B=3] 
* CE 29: eval_obj_eq_bb36_in(B) = 1+ eval_obj_eq_bb36_in(B)
     [] 

### Cost equations --> "Loop" of eval_obj_eq_bb36_in/1 
* CEs [29] --> Loop 21 
* CEs [28] --> Loop 22 

#### Loops of eval_obj_eq_bb36_in/1 
* Loop 21: eval_obj_eq_bb36_in(B)->  eval_obj_eq_bb36_in(B)
                  [] 
* Loop 22: eval_obj_eq_bb36_in(B) [B=3] 

### Ranking functions of CR eval_obj_eq_bb36_in(B) 

#### Partial ranking functions of CR eval_obj_eq_bb36_in(B) 


### Resulting Chains:eval_obj_eq_bb36_in(B) 
* [[21]]...
* [[21],22]
* [22]


### Merging Chains  eval_obj_eq_bb36_in/1 into  External patterns of execution 
* [[22],[22,[21]]] --> 1 
* [[[21]]] --> 2 


### Specialization of cost equations eval_obj_eq_bb52_in/3 
* CE 23 is refined into CE [30] 
* CE 22 is refined into CE [31] 
* CE 24 is refined into CE [32] 


#### Refined cost equations eval_obj_eq_bb52_in/3 
* CE 30: eval_obj_eq_bb52_in(V_279,V__sink4,B) = 0
     [V_279>=V__sink4+1] 
* CE 31: eval_obj_eq_bb52_in(V_279,V__sink4,B) = 0
     [V__sink4>=V_279+1] 
* CE 32: eval_obj_eq_bb52_in(A,A,B) = 0
     [] 

### Cost equations --> "Loop" of eval_obj_eq_bb52_in/3 
* CEs [30] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [32] --> Loop 25 

#### Loops of eval_obj_eq_bb52_in/3 
* Loop 23: eval_obj_eq_bb52_in(V_279,V__sink4,B) [V_279>=V__sink4+1] 
* Loop 24: eval_obj_eq_bb52_in(V_279,V__sink4,B) [V__sink4>=V_279+1] 
* Loop 25: eval_obj_eq_bb52_in(A,A,B) [] 

### Ranking functions of CR eval_obj_eq_bb52_in(V_279,V__sink4,B) 

#### Partial ranking functions of CR eval_obj_eq_bb52_in(V_279,V__sink4,B) 


### Resulting Chains:eval_obj_eq_bb52_in(V_279,V__sink4,B) 
* [25]
* [24]
* [23]


### Merging Chains  eval_obj_eq_bb52_in/3 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 
* [[23]] --> 3 


### Specialization of cost equations eval_obj_eq_bb49_in/2 
* CE 21 is refined into CE [33,34,35] 


#### Refined cost equations eval_obj_eq_bb49_in/2 
* CE 33: eval_obj_eq_bb49_in(V__sink,B) = 0+ eval_obj_eq_bb52_in(V__sink,V__sink,B):1
     [] 
* CE 34: eval_obj_eq_bb49_in(V__sink,B) = 0+ eval_obj_eq_bb52_in(V__sink,C,B):2
     [C>=V__sink+1] 
* CE 35: eval_obj_eq_bb49_in(V__sink,B) = 0+ eval_obj_eq_bb52_in(V__sink,C,B):3
     [V__sink>=C+1] 

### Cost equations --> "Loop" of eval_obj_eq_bb49_in/2 
* CEs [33,34,35] --> Loop 26 

#### Loops of eval_obj_eq_bb49_in/2 
* Loop 26: eval_obj_eq_bb49_in(V__sink,B) [] 

### Ranking functions of CR eval_obj_eq_bb49_in(V__sink,B) 

#### Partial ranking functions of CR eval_obj_eq_bb49_in(V__sink,B) 


### Resulting Chains:eval_obj_eq_bb49_in(V__sink,B) 
* [26]


### Merging Chains  eval_obj_eq_bb49_in/2 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations eval_obj_eq_bb46_in/1 
* CE 15 is refined into CE [36] 


#### Refined cost equations eval_obj_eq_bb46_in/1 
* CE 36: eval_obj_eq_bb46_in(B) = 0+ eval_obj_eq_bb49_in(C,B):1
     [] 

### Cost equations --> "Loop" of eval_obj_eq_bb46_in/1 
* CEs [36] --> Loop 27 

#### Loops of eval_obj_eq_bb46_in/1 
* Loop 27: eval_obj_eq_bb46_in(B) [] 

### Ranking functions of CR eval_obj_eq_bb46_in(B) 

#### Partial ranking functions of CR eval_obj_eq_bb46_in(B) 


### Resulting Chains:eval_obj_eq_bb46_in(B) 
* [27]


### Merging Chains  eval_obj_eq_bb46_in/1 into  External patterns of execution 
* [[27]] --> 1 


### Specialization of cost equations eval_obj_eq_bb38_in/1 
* CE 20 is refined into CE [37] 
* CE 19 is refined into CE [38] 


#### Refined cost equations eval_obj_eq_bb38_in/1 
* CE 37: eval_obj_eq_bb38_in(B) = 0
     [B=2] 
* CE 38: eval_obj_eq_bb38_in(B) = 1+ eval_obj_eq_bb38_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_obj_eq_bb38_in/1 
* CEs [38] --> Loop 28 
* CEs [37] --> Loop 29 

#### Loops of eval_obj_eq_bb38_in/1 
* Loop 28: eval_obj_eq_bb38_in(B)->  eval_obj_eq_bb38_in(B')
                  [B'=2,B=2] 
* Loop 29: eval_obj_eq_bb38_in(B) [B=2] 

### Ranking functions of CR eval_obj_eq_bb38_in(B) 

#### Partial ranking functions of CR eval_obj_eq_bb38_in(B) 


### Resulting Chains:eval_obj_eq_bb38_in(B) 
* [[28]]...
* [[28],29]
* [29]


### Merging Chains  eval_obj_eq_bb38_in/1 into  External patterns of execution 
* [[29],[29,[28]]] --> 1 
* [[[28]]] --> 2 


### Specialization of cost equations loop_cont_eval_obj_eq_bb36_in/2 
* CE 14 is refined into CE [39,40] 


#### Refined cost equations loop_cont_eval_obj_eq_bb36_in/2 
* CE 39: loop_cont_eval_obj_eq_bb36_in(C,A) = 1+ eval_obj_eq_bb38_in(D):1
     [D=2,C=3] 
* CE 40: loop_cont_eval_obj_eq_bb36_in(C,A) = 1+ eval_obj_eq_bb38_in(D):2
     [D=2,C=3] 

### Cost equations --> "Loop" of loop_cont_eval_obj_eq_bb36_in/2 
* CEs [40] --> Loop 30 
* CEs [39] --> Loop 31 

#### Loops of loop_cont_eval_obj_eq_bb36_in/2 
* Loop 30: loop_cont_eval_obj_eq_bb36_in(C,A) [C=3] 
* Loop 31: loop_cont_eval_obj_eq_bb36_in(C,A) [C=3] 

### Ranking functions of CR loop_cont_eval_obj_eq_bb36_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_obj_eq_bb36_in(C,A) 


### Resulting Chains:loop_cont_eval_obj_eq_bb36_in(C,A) 
* [31]
* [30]...


### Merging Chains  loop_cont_eval_obj_eq_bb36_in/2 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations eval_obj_eq_bb22_in/1 
* CE 8 is refined into CE [41] 
* CE 9 is refined into CE [42,43,44] 
* CE 10 is refined into CE [45] 
* CE 11 is refined into CE [46,47,48] 


#### Refined cost equations eval_obj_eq_bb22_in/1 
* CE 41: eval_obj_eq_bb22_in(B) = 0
     [] 
* CE 42: eval_obj_eq_bb22_in(B) = 1+ eval_obj_eq_bb36_in(C):1+ loop_cont_eval_obj_eq_bb36_in(D,B):1
     [D=3,C=3] 
* CE 43: eval_obj_eq_bb22_in(B) = 1+ eval_obj_eq_bb36_in(C):1+ loop_cont_eval_obj_eq_bb36_in(D,B):2
     [D=3,C=3] 
* CE 44: eval_obj_eq_bb22_in(B) = 1+ eval_obj_eq_bb36_in(C):2
     [] 
* CE 45: eval_obj_eq_bb22_in(B) = 0+ eval_obj_eq_bb46_in(B):1
     [] 
* CE 46: eval_obj_eq_bb22_in(B) = 0+ eval_obj_eq_108(C,B):1
     [C=0] 
* CE 47: eval_obj_eq_bb22_in(B) = 0+ eval_obj_eq_108(C,B):2
     [0>=C+1] 
* CE 48: eval_obj_eq_bb22_in(B) = 0+ eval_obj_eq_108(C,B):3
     [C>=1] 

### Cost equations --> "Loop" of eval_obj_eq_bb22_in/1 
* CEs [41,42,45,46,47,48] --> Loop 32 
* CEs [43,44] --> Loop 33 

#### Loops of eval_obj_eq_bb22_in/1 
* Loop 32: eval_obj_eq_bb22_in(B) [] 
* Loop 33: eval_obj_eq_bb22_in(B) [] 

### Ranking functions of CR eval_obj_eq_bb22_in(B) 

#### Partial ranking functions of CR eval_obj_eq_bb22_in(B) 


### Resulting Chains:eval_obj_eq_bb22_in(B) 
* [33]...
* [32]


### Merging Chains  eval_obj_eq_bb22_in/1 into  External patterns of execution 
* [[32]] --> 1 
* [[33]] --> 2 


### Specialization of cost equations eval_obj_eq_bb19_in/1 
* CE 6 is refined into CE [49] 
* CE 7 is refined into CE [50,51] 


#### Refined cost equations eval_obj_eq_bb19_in/1 
* CE 49: eval_obj_eq_bb19_in(B) = 0
     [] 
* CE 50: eval_obj_eq_bb19_in(B) = 0+ eval_obj_eq_bb22_in(B):1
     [] 
* CE 51: eval_obj_eq_bb19_in(B) = 0+ eval_obj_eq_bb22_in(B):2
     [] 

### Cost equations --> "Loop" of eval_obj_eq_bb19_in/1 
* CEs [51] --> Loop 34 
* CEs [49,50] --> Loop 35 

#### Loops of eval_obj_eq_bb19_in/1 
* Loop 34: eval_obj_eq_bb19_in(B) [] 
* Loop 35: eval_obj_eq_bb19_in(B) [] 

### Ranking functions of CR eval_obj_eq_bb19_in(B) 

#### Partial ranking functions of CR eval_obj_eq_bb19_in(B) 


### Resulting Chains:eval_obj_eq_bb19_in(B) 
* [35]
* [34]...


### Merging Chains  eval_obj_eq_bb19_in/1 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 


### Specialization of cost equations eval_obj_eq_bb0_in/1 
* CE 3 is refined into CE [52] 
* CE 4 is refined into CE [53,54] 
* CE 5 is refined into CE [55,56] 


#### Refined cost equations eval_obj_eq_bb0_in/1 
* CE 52: eval_obj_eq_bb0_in(B) = 0
     [] 
* CE 53: eval_obj_eq_bb0_in(B) = 0+ eval_obj_eq_bb19_in(B):1
     [] 
* CE 54: eval_obj_eq_bb0_in(B) = 0+ eval_obj_eq_bb19_in(B):2
     [] 
* CE 55: eval_obj_eq_bb0_in(B) = 0+ eval_obj_eq_bb22_in(B):1
     [] 
* CE 56: eval_obj_eq_bb0_in(B) = 0+ eval_obj_eq_bb22_in(B):2
     [] 

### Cost equations --> "Loop" of eval_obj_eq_bb0_in/1 
* CEs [54,56] --> Loop 36 
* CEs [52,53,55] --> Loop 37 

#### Loops of eval_obj_eq_bb0_in/1 
* Loop 36: eval_obj_eq_bb0_in(B) [] 
* Loop 37: eval_obj_eq_bb0_in(B) [] 

### Ranking functions of CR eval_obj_eq_bb0_in(B) 

#### Partial ranking functions of CR eval_obj_eq_bb0_in(B) 


### Resulting Chains:eval_obj_eq_bb0_in(B) 
* [37]
* [36]...


### Merging Chains  eval_obj_eq_bb0_in/1 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations eval_obj_eq_start/1 
* CE 2 is refined into CE [57,58] 


#### Refined cost equations eval_obj_eq_start/1 
* CE 57: eval_obj_eq_start(B) = 0+ eval_obj_eq_bb0_in(B):1
     [] 
* CE 58: eval_obj_eq_start(B) = 0+ eval_obj_eq_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_obj_eq_start/1 
* CEs [58] --> Loop 38 
* CEs [57] --> Loop 39 

#### Loops of eval_obj_eq_start/1 
* Loop 38: eval_obj_eq_start(B) [] 
* Loop 39: eval_obj_eq_start(B) [] 

### Ranking functions of CR eval_obj_eq_start(B) 

#### Partial ranking functions of CR eval_obj_eq_start(B) 


### Resulting Chains:eval_obj_eq_start(B) 
* [39]
* [38]...


### Merging Chains  eval_obj_eq_start/1 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of eval_obj_eq_108(V_258,B):
* Chain [20]: 0
  with precondition: [V_258=0] 

* Chain [19]: 0
  with precondition: [0>=V_258+1] 

* Chain [18]: 0
  with precondition: [V_258>=1] 


#### Cost of loops [21] 

 * loop 21:eval_obj_eq_bb36_in(B) -> [eval_obj_eq_bb36_in(B')] 
1
#### Cost of phase [21]:eval_obj_eq_bb36_in(B) -> [eval_obj_eq_bb36_in(B')] 
1*it(21)+0
#### Cost of phase [21]:eval_obj_eq_bb36_in(B) -> [eval_obj_eq_bb36_in(B')] 
1*it(21)+0
#### Cost of chains of eval_obj_eq_bb36_in(B):
* Chain [[21]]...: 1*it(21)+0
  with precondition: [] 

* Chain [[21],22]: 1*it(21)+0
  with precondition: [B=3] 

* Chain [22]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_obj_eq_bb52_in(V_279,V__sink4,B):
* Chain [25]: 0
  with precondition: [V__sink4=V_279] 

* Chain [24]: 0
  with precondition: [V__sink4>=V_279+1] 

* Chain [23]: 0
  with precondition: [V_279>=V__sink4+1] 


#### Cost of chains of eval_obj_eq_bb49_in(V__sink,B):
* Chain [26]: 0
  with precondition: [] 


#### Cost of chains of eval_obj_eq_bb46_in(B):
* Chain [27]: 0
  with precondition: [] 


#### Cost of loops [28] 

 * loop 28:eval_obj_eq_bb38_in(B) -> [eval_obj_eq_bb38_in(B')] 
1
#### Cost of phase [28]:eval_obj_eq_bb38_in(B) -> [eval_obj_eq_bb38_in(B')] 
1*it(28)+0
#### Cost of phase [28]:eval_obj_eq_bb38_in(B) -> [eval_obj_eq_bb38_in(B')] 
1*it(28)+0
#### Cost of chains of eval_obj_eq_bb38_in(B):
* Chain [[28]]...: 1*it(28)+0
  with precondition: [B=2] 

* Chain [[28],29]: 1*it(28)+0
  with precondition: [B=2] 

* Chain [29]: 0
  with precondition: [B=2] 


#### Cost of chains of loop_cont_eval_obj_eq_bb36_in(C,A):
* Chain [31]: 1*s(3)+1
  with precondition: [C=3] 

* Chain [30]...: 1*s(4)+1
  with precondition: [C=3] 


#### Cost of chains of eval_obj_eq_bb22_in(B):
* Chain [33]...: 1*aux(3)+0
  with precondition: [] 

* Chain [32]: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_obj_eq_bb19_in(B):
* Chain [35]: 1*aux(5)+0
  with precondition: [] 

* Chain [34]...: 1*s(11)+0
  with precondition: [] 


#### Cost of chains of eval_obj_eq_bb0_in(B):
* Chain [37]: 1*aux(6)+0
  with precondition: [] 

* Chain [36]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_obj_eq_start(B):
* Chain [39]: 1*s(16)+0
  with precondition: [] 

* Chain [38]...: 1*s(17)+0
  with precondition: [] 


Closed-form bounds of eval_obj_eq_start(B): 
-------------------------------------
* Chain [39] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [38]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_obj_eq_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 41 ms.
* Invariants computed in 16 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 60 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 41 ms.
   - Equation cost structures 23 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 5 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 233 ms.

