WARNING: Excluded non-linear constraints:[C-2*B*D>=0,C-2*B*D+1=<2*B]
WARNING: Excluded non-linear constraints:[C-2*B*D>=0,C-2*B*D+1=< -2*B]
WARNING: Excluded non-linear constraints:[-C+2*B*D>=0,-C+2*B*D+1=<2*B]
WARNING: Excluded non-linear constraints:[-C+2*B*D>=0,-C+2*B*D+1=< -2*B]
WARNING: Excluded non-linear constraints:[E-2*D*B>=0,E-2*D*B+1=<2*D]
WARNING: Excluded non-linear constraints:[E-2*D*B>=0,E-2*D*B+1=< -2*D]
WARNING: Excluded non-linear constraints:[-E+2*D*B>=0,-E+2*D*B+1=<2*D]
WARNING: Excluded non-linear constraints:[-E+2*D*B>=0,-E+2*D*B+1=< -2*D]
Warning: Ignored call to eval_lame_decode_stop/1 in equation eval_lame_decode_9/1 
Warning: Ignored call to eval_lame_decode_stop/1 in equation eval_lame_decode_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_lame_decode_9/1]
1. non_recursive  : [eval_lame_decode_8/1]
2. non_recursive  : [eval_lame_decode_7/1]
3. non_recursive  : [eval_lame_decode_bb10_in/1]
4. recursive  : [eval_lame_decode_bb4_in/6,eval_lame_decode_bb8_in/6]
5. recursive  : [eval_lame_decode_bb3_in/3,loop_cont_eval_lame_decode_bb4_in/4]
6. non_recursive  : [loop_cont_eval_lame_decode_bb3_in/2]
7. non_recursive  : [eval_lame_decode_1/1]
8. non_recursive  : [eval_lame_decode_0/2]
9. non_recursive  : [eval_lame_decode_bb0_in/2]
10. non_recursive  : [eval_lame_decode_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_lame_decode_bb4_in/6
5. SCC is partially evaluated into eval_lame_decode_bb3_in/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_lame_decode_1/1
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_lame_decode_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_lame_decode_bb4_in/6 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_lame_decode_bb4_in/6 
* CE 10: eval_lame_decode_bb4_in(A,B,C,D,A,E) = 0
     [C>=A,C>=0,E=B+1,D=2] 
* CE 11: eval_lame_decode_bb4_in(V_7,V_j_0,V_i_0,B,C,D) = 1+ eval_lame_decode_bb4_in(V_7,V_j_0,E,F,C,D)
     [V_7>=V_i_0+1,V_i_0>=0,V_i_0+1=E,F=2,B=2] 

### Cost equations --> "Loop" of eval_lame_decode_bb4_in/6 
* CEs [11] --> Loop 7 
* CEs [10] --> Loop 8 

#### Loops of eval_lame_decode_bb4_in/6 
* Loop 7: eval_lame_decode_bb4_in(V_7,V_j_0,V_i_0,B,C,D)->  eval_lame_decode_bb4_in(V_7,V_j_0,V_i_0',B',C,D)
                  [V_7>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 8: eval_lame_decode_bb4_in(A,B,C,D,A,E) [C>=A,C>=0,B+1=E,D=2] 

### Ranking functions of CR eval_lame_decode_bb4_in(V_7,V_j_0,V_i_0,B,C,D) 
* RF of phase [7]: [V_7-V_i_0]

#### Partial ranking functions of CR eval_lame_decode_bb4_in(V_7,V_j_0,V_i_0,B,C,D) 
* Partial RF of phase [7]:
  - RF of loop [7:1]:
    V_7-V_i_0


### Resulting Chains:eval_lame_decode_bb4_in(V_7,V_j_0,V_i_0,B,C,D) 
* [[7],8]
* [8]


### Merging Chains  eval_lame_decode_bb4_in/6 into  External patterns of execution 
* [[8]] --> 1 
* [[8,[7]]] --> 2 


### Specialization of cost equations eval_lame_decode_bb3_in/3 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13,14] 


#### Refined cost equations eval_lame_decode_bb3_in/3 
* CE 12: eval_lame_decode_bb3_in(V_7,V_j_0,B) = 0
     [B=3] 
* CE 13: eval_lame_decode_bb3_in(V_7,V_j_0,B) = 2+ eval_lame_decode_bb4_in(V_7,C,D,E,V_7,F):1+ eval_lame_decode_bb3_in(V_7,F,G)
     [0>=V_7,F=C+1,F=V_j_0+1,G=3,E=2,D=0,B=3] 
* CE 14: eval_lame_decode_bb3_in(V_7,V_j_0,B) = 2+ eval_lame_decode_bb4_in(V_7,C,D,E,V_7,F):2+ eval_lame_decode_bb3_in(V_7,F,G)
     [V_7>=1,F=C+1,F=V_j_0+1,G=3,E=2,D=0,B=3] 

### Cost equations --> "Loop" of eval_lame_decode_bb3_in/3 
* CEs [14] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_lame_decode_bb3_in/3 
* Loop 9: eval_lame_decode_bb3_in(V_7,V_j_0,B)->  eval_lame_decode_bb3_in(V_7,V_j_0',B')
                  [V_7>=1,V_j_0+1=V_j_0',B'=3,B=3] 
* Loop 10: eval_lame_decode_bb3_in(V_7,V_j_0,B)->  eval_lame_decode_bb3_in(V_7,V_j_0',B')
                  [0>=V_7,V_j_0+1=V_j_0',B'=3,B=3] 
* Loop 11: eval_lame_decode_bb3_in(V_7,V_j_0,B) [B=3] 

### Ranking functions of CR eval_lame_decode_bb3_in(V_7,V_j_0,B) 

#### Partial ranking functions of CR eval_lame_decode_bb3_in(V_7,V_j_0,B) 


### Resulting Chains:eval_lame_decode_bb3_in(V_7,V_j_0,B) 
* [[10]]...
* [[10],11]
* [[9]]...
* [[9],11]
* [11]


### Merging Chains  eval_lame_decode_bb3_in/3 into  External patterns of execution 
* [[11],[11,[10]]] --> 1 
* [[11,[9]]] --> 2 
* [[[10]]] --> 3 
* [[[9]]] --> 4 


### Specialization of cost equations eval_lame_decode_1/1 
* CE 3 is refined into CE [15] 
* CE 4 is refined into CE [16,17,18,19] 
* CE 5 is refined into CE [20,21] 


#### Refined cost equations eval_lame_decode_1/1 
* CE 15: eval_lame_decode_1(B) = 0
     [] 
* CE 16: eval_lame_decode_1(B) = 1+ eval_lame_decode_bb3_in(C,D,E):1
     [C>=0,E=3,D=0] 
* CE 17: eval_lame_decode_1(B) = 1+ eval_lame_decode_bb3_in(C,D,E):2
     [C>=1,E=3,D=0] 
* CE 18: eval_lame_decode_1(B) = 1+ eval_lame_decode_bb3_in(C,D,E):3
     [E=3,D=0,C=0] 
* CE 19: eval_lame_decode_1(B) = 1+ eval_lame_decode_bb3_in(C,D,E):4
     [C>=1,E=3,D=0] 
* CE 20: eval_lame_decode_1(B) = 1+ eval_lame_decode_bb3_in(C,D,E):1
     [0>=C,E=3,D=0] 
* CE 21: eval_lame_decode_1(B) = 1+ eval_lame_decode_bb3_in(C,D,E):3
     [0>=C,E=3,D=0] 

### Cost equations --> "Loop" of eval_lame_decode_1/1 
* CEs [18,19,21] --> Loop 12 
* CEs [15,16,17,20] --> Loop 13 

#### Loops of eval_lame_decode_1/1 
* Loop 12: eval_lame_decode_1(B) [] 
* Loop 13: eval_lame_decode_1(B) [] 

### Ranking functions of CR eval_lame_decode_1(B) 

#### Partial ranking functions of CR eval_lame_decode_1(B) 


### Resulting Chains:eval_lame_decode_1(B) 
* [13]
* [12]...


### Merging Chains  eval_lame_decode_1/1 into  External patterns of execution 
* [[13]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_lame_decode_start/2 
* CE 2 is refined into CE [22,23] 


#### Refined cost equations eval_lame_decode_start/2 
* CE 22: eval_lame_decode_start(V_len,B) = 0+ eval_lame_decode_1(B):1
     [] 
* CE 23: eval_lame_decode_start(V_len,B) = 0+ eval_lame_decode_1(B):2
     [] 

### Cost equations --> "Loop" of eval_lame_decode_start/2 
* CEs [23] --> Loop 14 
* CEs [22] --> Loop 15 

#### Loops of eval_lame_decode_start/2 
* Loop 14: eval_lame_decode_start(V_len,B) [] 
* Loop 15: eval_lame_decode_start(V_len,B) [] 

### Ranking functions of CR eval_lame_decode_start(V_len,B) 

#### Partial ranking functions of CR eval_lame_decode_start(V_len,B) 


### Resulting Chains:eval_lame_decode_start(V_len,B) 
* [15]
* [14]...


### Merging Chains  eval_lame_decode_start/2 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [7] 

 * loop 7:eval_lame_decode_bb4_in(V_7,V_j_0,V_i_0,B,C,D) -> [eval_lame_decode_bb4_in(V_7',V_j_0',V_i_0',B',C',D')] 
1
#### Cost of phase [7]:eval_lame_decode_bb4_in(V_7,V_j_0,V_i_0,B,C,D) -> [eval_lame_decode_bb4_in(V_7',V_j_0',V_i_0',B',C',D')] 
1*it(7)+0
  Such that:it(7) =< V_7-V_i_0
it(7) =< V_7-V_i_0-V_7'+V_i_0'

#### Cost of chains of eval_lame_decode_bb4_in(V_7,V_j_0,V_i_0,B,C,D):
* Chain [[7],8]: 1*it(7)+0
  Such that:it(7) =< -V_i_0+C

  with precondition: [B=2,V_7=C,V_j_0+1=D,V_i_0>=0,V_7>=V_i_0+1] 

* Chain [8]: 0
  with precondition: [B=2,D=V_j_0+1,V_7=C,V_i_0>=0,V_i_0>=V_7] 


#### Cost of loops [10] 

 * loop 10:eval_lame_decode_bb3_in(V_7,V_j_0,B) -> [eval_lame_decode_bb3_in(V_7',V_j_0',B')] 
2
#### Cost of phase [10]:eval_lame_decode_bb3_in(V_7,V_j_0,B) -> [eval_lame_decode_bb3_in(V_7',V_j_0',B')] 
2*it(10)+0
#### Cost of phase [10]:eval_lame_decode_bb3_in(V_7,V_j_0,B) -> [eval_lame_decode_bb3_in(V_7',V_j_0',B')] 
2*it(10)+0
#### Cost of loops [9] 

 * loop 9:eval_lame_decode_bb3_in(V_7,V_j_0,B) -> [eval_lame_decode_bb3_in(V_7',V_j_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_7'

#### Cost of phase [9]:eval_lame_decode_bb3_in(V_7,V_j_0,B) -> [eval_lame_decode_bb3_in(V_7',V_j_0',B')] 
2*it(9)+1*s(3)+0
#### Cost of phase [9]:eval_lame_decode_bb3_in(V_7,V_j_0,B) -> [eval_lame_decode_bb3_in(V_7',V_j_0',B')] 
2*it(9)+1*s(3)+0
#### Cost of chains of eval_lame_decode_bb3_in(V_7,V_j_0,B):
* Chain [[10]]...: 2*it(10)+0
  with precondition: [0>=V_7,B=3] 

* Chain [[10],11]: 2*it(10)+0
  with precondition: [B=3,0>=V_7,V_j_0>=0] 

* Chain [[9]]...: 3*it(9)+0
  with precondition: [V_7>=1,B=3] 

* Chain [[9],11]: 3*it(9)+0
  with precondition: [B=3,V_7>=1,V_j_0>=0] 

* Chain [11]: 0
  with precondition: [B=3,V_j_0>=0] 


#### Cost of chains of eval_lame_decode_1(B):
* Chain [13]: 1*aux(3)+0
  with precondition: [] 

* Chain [12]...: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_lame_decode_start(V_len,B):
* Chain [15]: 1*s(11)+0
  with precondition: [] 

* Chain [14]...: 1*s(12)+0
  with precondition: [] 


Closed-form bounds of eval_lame_decode_start(V_len,B): 
-------------------------------------
* Chain [15] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [14]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_lame_decode_start(V_len,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 32 ms.
* Invariants computed in 55 ms.
   - Backward Invariants 22 ms.
   - Transitive Invariants 15 ms.
* Refinement performed in 73 ms.
* Termination proved in 13 ms.
* Upper bounds computed in 83 ms.
   - Equation cost structures 22 ms.
   - Phase cost structures 40 ms.
   - Chain cost structures 29 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 319 ms.

