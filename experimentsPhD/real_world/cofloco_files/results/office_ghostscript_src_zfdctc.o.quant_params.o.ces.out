Warning: Ignored call to eval_quant_params_stop/1 in equation eval_quant_params_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_quant_params_bb15_in/1]
1. non_recursive  : [eval_quant_params_NewDefault_in/1]
2. recursive  : [eval_quant_params_bb13_in/3]
3. recursive  : [eval_quant_params_13/3,eval_quant_params_14/3,eval_quant_params_bb10_in/3,eval_quant_params_bb6_in/3]
4. non_recursive  : [eval_quant_params_NewDefault7_in/1]
5. non_recursive  : [loop_cont_eval_quant_params_bb6_in/2]
6. non_recursive  : [eval_quant_params_bb5_in/2]
7. non_recursive  : [loop_cont_eval_quant_params_bb13_in/2]
8. non_recursive  : [eval_quant_params_bb0_in/2]
9. non_recursive  : [eval_quant_params_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_quant_params_bb13_in/3
3. SCC is partially evaluated into eval_quant_params_bb6_in/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into loop_cont_eval_quant_params_bb6_in/2
6. SCC is partially evaluated into eval_quant_params_bb5_in/2
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_quant_params_bb0_in/2
9. SCC is partially evaluated into eval_quant_params_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_quant_params_bb13_in/3 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


#### Refined cost equations eval_quant_params_bb13_in/3 
* CE 14: eval_quant_params_bb13_in(V_count,V_i_0,B) = 0
     [V_i_0>=V_count,V_i_0>=0,B=3] 
* CE 15: eval_quant_params_bb13_in(V_count,V_i_0,B) = 1+ eval_quant_params_bb13_in(V_count,C,D)
     [V_count>=V_i_0+1,V_i_0>=0,V_i_0+1=C,D=3,B=3] 

### Cost equations --> "Loop" of eval_quant_params_bb13_in/3 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_quant_params_bb13_in/3 
* Loop 11: eval_quant_params_bb13_in(V_count,V_i_0,B)->  eval_quant_params_bb13_in(V_count,V_i_0',B')
                  [V_count>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=3,B=3] 
* Loop 12: eval_quant_params_bb13_in(V_count,V_i_0,B) [V_i_0>=V_count,V_i_0>=0,B=3] 

### Ranking functions of CR eval_quant_params_bb13_in(V_count,V_i_0,B) 
* RF of phase [11]: [V_count-V_i_0]

#### Partial ranking functions of CR eval_quant_params_bb13_in(V_count,V_i_0,B) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_count-V_i_0


### Resulting Chains:eval_quant_params_bb13_in(V_count,V_i_0,B) 
* [[11],12]
* [12]


### Merging Chains  eval_quant_params_bb13_in/3 into  External patterns of execution 
* [[12]] --> 1 
* [[12,[11]]] --> 2 


### Specialization of cost equations eval_quant_params_bb6_in/3 
* CE 11 is refined into CE [16] 
* CE 9 is refined into CE [17] 
* CE 10 is refined into CE [18] 


#### Refined cost equations eval_quant_params_bb6_in/3 
* CE 16: eval_quant_params_bb6_in(V_count,V_i_1,B) = 0
     [V_i_1>=V_count,V_i_1>=0,B=3] 
* CE 17: eval_quant_params_bb6_in(V_count,V_i_1,B) = 0
     [V_count>=V_i_1+1,V_i_1>=0,B=2] 
* CE 18: eval_quant_params_bb6_in(V_count,V_i_1,B) = 1+ eval_quant_params_bb6_in(V_count,C,B)
     [V_count>=V_i_1+1,V_i_1>=0,V_i_1+1=C] 

### Cost equations --> "Loop" of eval_quant_params_bb6_in/3 
* CEs [18] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of eval_quant_params_bb6_in/3 
* Loop 13: eval_quant_params_bb6_in(V_count,V_i_1,B)->  eval_quant_params_bb6_in(V_count,V_i_1',B)
                  [V_count>=V_i_1+1,V_i_1>=0,V_i_1+1=V_i_1'] 
* Loop 14: eval_quant_params_bb6_in(V_count,V_i_1,B) [V_i_1>=V_count,V_i_1>=0,B=3] 
* Loop 15: eval_quant_params_bb6_in(V_count,V_i_1,B) [V_count>=V_i_1+1,V_i_1>=0,B=2] 

### Ranking functions of CR eval_quant_params_bb6_in(V_count,V_i_1,B) 
* RF of phase [13]: [V_count-V_i_1]

#### Partial ranking functions of CR eval_quant_params_bb6_in(V_count,V_i_1,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_count-V_i_1


### Resulting Chains:eval_quant_params_bb6_in(V_count,V_i_1,B) 
* [[13],15]
* [[13],14]
* [15]
* [14]


### Merging Chains  eval_quant_params_bb6_in/3 into  External patterns of execution 
* [[15],[15,[13]]] --> 1 
* [[14]] --> 2 
* [[14,[13]]] --> 3 


### Specialization of cost equations loop_cont_eval_quant_params_bb6_in/2 
* CE 13 is refined into CE [19] 
* CE 12 is refined into CE [20] 


#### Refined cost equations loop_cont_eval_quant_params_bb6_in/2 
* CE 19: loop_cont_eval_quant_params_bb6_in(B,A) = 0
     [B=3] 
* CE 20: loop_cont_eval_quant_params_bb6_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_quant_params_bb6_in/2 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 

#### Loops of loop_cont_eval_quant_params_bb6_in/2 
* Loop 16: loop_cont_eval_quant_params_bb6_in(B,A) [B=3] 
* Loop 17: loop_cont_eval_quant_params_bb6_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_quant_params_bb6_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_quant_params_bb6_in(B,A) 


### Resulting Chains:loop_cont_eval_quant_params_bb6_in(B,A) 
* [17]
* [16]


### Merging Chains  loop_cont_eval_quant_params_bb6_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_quant_params_bb5_in/2 
* CE 6 is refined into CE [21,22,23] 


#### Refined cost equations eval_quant_params_bb5_in/2 
* CE 21: eval_quant_params_bb5_in(V_count,B) = 1+ eval_quant_params_bb6_in(V_count,C,D):1+ loop_cont_eval_quant_params_bb6_in(E,B):1
     [V_count>=1,E=2,D=2,C=0] 
* CE 22: eval_quant_params_bb5_in(V_count,B) = 1+ eval_quant_params_bb6_in(V_count,C,D):2+ loop_cont_eval_quant_params_bb6_in(E,B):2
     [0>=V_count,E=3,D=3,C=0] 
* CE 23: eval_quant_params_bb5_in(V_count,B) = 1+ eval_quant_params_bb6_in(V_count,C,D):3+ loop_cont_eval_quant_params_bb6_in(E,B):2
     [V_count>=1,E=3,D=3,C=0] 

### Cost equations --> "Loop" of eval_quant_params_bb5_in/2 
* CEs [21,23] --> Loop 18 
* CEs [22] --> Loop 19 

#### Loops of eval_quant_params_bb5_in/2 
* Loop 18: eval_quant_params_bb5_in(V_count,B) [V_count>=1] 
* Loop 19: eval_quant_params_bb5_in(V_count,B) [0>=V_count] 

### Ranking functions of CR eval_quant_params_bb5_in(V_count,B) 

#### Partial ranking functions of CR eval_quant_params_bb5_in(V_count,B) 


### Resulting Chains:eval_quant_params_bb5_in(V_count,B) 
* [19]
* [18]


### Merging Chains  eval_quant_params_bb5_in/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_quant_params_bb0_in/2 
* CE 3 is refined into CE [24,25] 
* CE 4 is refined into CE [26] 
* CE 5 is refined into CE [27,28] 


#### Refined cost equations eval_quant_params_bb0_in/2 
* CE 24: eval_quant_params_bb0_in(V_count,B) = 0+ eval_quant_params_bb5_in(V_count,B):1
     [0>=V_count] 
* CE 25: eval_quant_params_bb0_in(V_count,B) = 0+ eval_quant_params_bb5_in(V_count,B):2
     [V_count>=1] 
* CE 26: eval_quant_params_bb0_in(V_count,B) = 0
     [] 
* CE 27: eval_quant_params_bb0_in(V_count,B) = 1+ eval_quant_params_bb13_in(V_count,C,D):1
     [0>=V_count,D=3,C=0] 
* CE 28: eval_quant_params_bb0_in(V_count,B) = 1+ eval_quant_params_bb13_in(V_count,C,D):2
     [V_count>=1,D=3,C=0] 

### Cost equations --> "Loop" of eval_quant_params_bb0_in/2 
* CEs [24,25,26,27,28] --> Loop 20 

#### Loops of eval_quant_params_bb0_in/2 
* Loop 20: eval_quant_params_bb0_in(V_count,B) [] 

### Ranking functions of CR eval_quant_params_bb0_in(V_count,B) 

#### Partial ranking functions of CR eval_quant_params_bb0_in(V_count,B) 


### Resulting Chains:eval_quant_params_bb0_in(V_count,B) 
* [20]


### Merging Chains  eval_quant_params_bb0_in/2 into  External patterns of execution 
* [[20]] --> 1 


### Specialization of cost equations eval_quant_params_start/2 
* CE 2 is refined into CE [29] 


#### Refined cost equations eval_quant_params_start/2 
* CE 29: eval_quant_params_start(V_count,B) = 0+ eval_quant_params_bb0_in(V_count,B):1
     [] 

### Cost equations --> "Loop" of eval_quant_params_start/2 
* CEs [29] --> Loop 21 

#### Loops of eval_quant_params_start/2 
* Loop 21: eval_quant_params_start(V_count,B) [] 

### Ranking functions of CR eval_quant_params_start(V_count,B) 

#### Partial ranking functions of CR eval_quant_params_start(V_count,B) 


### Resulting Chains:eval_quant_params_start(V_count,B) 
* [21]


### Merging Chains  eval_quant_params_start/2 into  External patterns of execution 
* [[21]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_quant_params_bb13_in(V_count,V_i_0,B) -> [eval_quant_params_bb13_in(V_count',V_i_0',B')] 
1
#### Cost of phase [11]:eval_quant_params_bb13_in(V_count,V_i_0,B) -> [eval_quant_params_bb13_in(V_count',V_i_0',B')] 
1*it(11)+0
  Such that:it(11) =< V_count-V_i_0
it(11) =< V_count-V_i_0-V_count'+V_i_0'

#### Cost of chains of eval_quant_params_bb13_in(V_count,V_i_0,B):
* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V_count-V_i_0

  with precondition: [B=3,V_i_0>=0,V_count>=V_i_0+1] 

* Chain [12]: 0
  with precondition: [B=3,V_i_0>=0,V_i_0>=V_count] 


#### Cost of loops [13] 

 * loop 13:eval_quant_params_bb6_in(V_count,V_i_1,B) -> [eval_quant_params_bb6_in(V_count',V_i_1',B')] 
1
#### Cost of phase [13]:eval_quant_params_bb6_in(V_count,V_i_1,B) -> [eval_quant_params_bb6_in(V_count',V_i_1',B')] 
1*it(13)+0
  Such that:it(13) =< V_count-V_i_1
it(13) =< V_count-V_i_1-V_count'+V_i_1'

#### Cost of phase [13]:eval_quant_params_bb6_in(V_count,V_i_1,B) -> [eval_quant_params_bb6_in(V_count',V_i_1',B')] 
1*it(13)+0
  Such that:it(13) =< V_count-V_i_1
it(13) =< V_count-V_i_1-V_count'+V_i_1'

#### Cost of chains of eval_quant_params_bb6_in(V_count,V_i_1,B):
* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< V_count-V_i_1

  with precondition: [B=2,V_i_1>=0,V_count>=V_i_1+2] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V_count-V_i_1

  with precondition: [B=3,V_i_1>=0,V_count>=V_i_1+1] 

* Chain [15]: 0
  with precondition: [B=2,V_i_1>=0,V_count>=V_i_1+1] 

* Chain [14]: 0
  with precondition: [B=3,V_i_1>=0,V_i_1>=V_count] 


#### Cost of chains of loop_cont_eval_quant_params_bb6_in(B,A):
* Chain [17]: 0
  with precondition: [B=2] 

* Chain [16]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_quant_params_bb5_in(V_count,B):
* Chain [19]: 1
  with precondition: [0>=V_count] 

* Chain [18]: 2*s(2)+1
  Such that:aux(1) =< V_count
s(2) =< aux(1)

  with precondition: [V_count>=1] 


#### Cost of chains of eval_quant_params_bb0_in(V_count,B):
* Chain [20]: 3*s(5)+1
  Such that:aux(2) =< V_count
s(5) =< aux(2)

  with precondition: [] 


#### Cost of chains of eval_quant_params_start(V_count,B):
* Chain [21]: 3*s(8)+1
  Such that:s(7) =< V_count
s(8) =< s(7)

  with precondition: [] 


Closed-form bounds of eval_quant_params_start(V_count,B): 
-------------------------------------
* Chain [21] with precondition: [] 
    - Upper bound: nat(V_count)*3+1 
    - Complexity: n 

### Maximum cost of eval_quant_params_start(V_count,B): nat(V_count)*3+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 9 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 23 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 21 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 87 ms.

