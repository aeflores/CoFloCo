Warning: Ignored call to eval_whatcap_stop/1 in equation eval_whatcap_bb14_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_whatcap_bb1_in/1]
1. non_recursive  : [eval_whatcap_bb14_in/1]
2. recursive  : [eval_whatcap_bb5_in/1]
3. recursive  : [eval_whatcap_bb11_in/1]
4. non_recursive  : [loop_cont_eval_whatcap_bb11_in/2]
5. non_recursive  : [eval_whatcap_bb8_in/1]
6. non_recursive  : [loop_cont_eval_whatcap_bb5_in/2]
7. non_recursive  : [eval_whatcap_bb4_in/1]
8. non_recursive  : [loop_cont_eval_whatcap_bb1_in/2]
9. non_recursive  : [eval_whatcap_bb0_in/1]
10. non_recursive  : [eval_whatcap_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_whatcap_bb1_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_whatcap_bb5_in/1
3. SCC is partially evaluated into eval_whatcap_bb11_in/1
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_whatcap_bb8_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_whatcap_bb4_in/1
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_whatcap_bb0_in/1
10. SCC is partially evaluated into eval_whatcap_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_whatcap_bb1_in/1 
* CE 5 is refined into CE [14] 
* CE 4 is refined into CE [15] 


#### Refined cost equations eval_whatcap_bb1_in/1 
* CE 14: eval_whatcap_bb1_in(B) = 1+ eval_whatcap_bb1_in(C)
     [C=3,B=3] 
* CE 15: eval_whatcap_bb1_in(B) = 0
     [B=3] 

### Cost equations --> "Loop" of eval_whatcap_bb1_in/1 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_whatcap_bb1_in/1 
* Loop 11: eval_whatcap_bb1_in(B) [B=3] 
* Loop 12: eval_whatcap_bb1_in(B)->  eval_whatcap_bb1_in(B')
                  [B'=3,B=3] 

### Ranking functions of CR eval_whatcap_bb1_in(B) 

#### Partial ranking functions of CR eval_whatcap_bb1_in(B) 


### Resulting Chains:eval_whatcap_bb1_in(B) 
* [[12]]...
* [[12],11]
* [11]


### Merging Chains  eval_whatcap_bb1_in/1 into  External patterns of execution 
* [[11],[11,[12]]] --> 1 
* [[[12]]] --> 2 


### Specialization of cost equations eval_whatcap_bb5_in/1 
* CE 9 is refined into CE [16] 
* CE 8 is refined into CE [17] 


#### Refined cost equations eval_whatcap_bb5_in/1 
* CE 16: eval_whatcap_bb5_in(B) = 1+ eval_whatcap_bb5_in(C)
     [C=2,B=2] 
* CE 17: eval_whatcap_bb5_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_whatcap_bb5_in/1 
* CEs [17] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of eval_whatcap_bb5_in/1 
* Loop 13: eval_whatcap_bb5_in(B) [B=2] 
* Loop 14: eval_whatcap_bb5_in(B)->  eval_whatcap_bb5_in(B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_whatcap_bb5_in(B) 

#### Partial ranking functions of CR eval_whatcap_bb5_in(B) 


### Resulting Chains:eval_whatcap_bb5_in(B) 
* [[14]]...
* [[14],13]
* [13]


### Merging Chains  eval_whatcap_bb5_in/1 into  External patterns of execution 
* [[13],[13,[14]]] --> 1 
* [[[14]]] --> 2 


### Specialization of cost equations eval_whatcap_bb11_in/1 
* CE 13 is refined into CE [18] 
* CE 12 is refined into CE [19] 


#### Refined cost equations eval_whatcap_bb11_in/1 
* CE 18: eval_whatcap_bb11_in(B) = 1+ eval_whatcap_bb11_in(C)
     [C=4,B=4] 
* CE 19: eval_whatcap_bb11_in(B) = 0
     [B=4] 

### Cost equations --> "Loop" of eval_whatcap_bb11_in/1 
* CEs [19] --> Loop 15 
* CEs [18] --> Loop 16 

#### Loops of eval_whatcap_bb11_in/1 
* Loop 15: eval_whatcap_bb11_in(B) [B=4] 
* Loop 16: eval_whatcap_bb11_in(B)->  eval_whatcap_bb11_in(B')
                  [B'=4,B=4] 

### Ranking functions of CR eval_whatcap_bb11_in(B) 

#### Partial ranking functions of CR eval_whatcap_bb11_in(B) 


### Resulting Chains:eval_whatcap_bb11_in(B) 
* [[16]]...
* [[16],15]
* [15]


### Merging Chains  eval_whatcap_bb11_in/1 into  External patterns of execution 
* [[15],[15,[16]]] --> 1 
* [[[16]]] --> 2 


### Specialization of cost equations eval_whatcap_bb8_in/1 
* CE 10 is refined into CE [20,21] 
* CE 11 is refined into CE [22] 


#### Refined cost equations eval_whatcap_bb8_in/1 
* CE 20: eval_whatcap_bb8_in(B) = 1+ eval_whatcap_bb11_in(C):1
     [C=4] 
* CE 21: eval_whatcap_bb8_in(B) = 1+ eval_whatcap_bb11_in(C):2
     [C=4] 
* CE 22: eval_whatcap_bb8_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_whatcap_bb8_in/1 
* CEs [20,22] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of eval_whatcap_bb8_in/1 
* Loop 17: eval_whatcap_bb8_in(B) [] 
* Loop 18: eval_whatcap_bb8_in(B) [] 

### Ranking functions of CR eval_whatcap_bb8_in(B) 

#### Partial ranking functions of CR eval_whatcap_bb8_in(B) 


### Resulting Chains:eval_whatcap_bb8_in(B) 
* [18]...
* [17]


### Merging Chains  eval_whatcap_bb8_in/1 into  External patterns of execution 
* [[17]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_whatcap_bb4_in/1 
* CE 6 is refined into CE [23] 
* CE 7 is refined into CE [24,25,26] 


#### Refined cost equations eval_whatcap_bb4_in/1 
* CE 23: eval_whatcap_bb4_in(B) = 0
     [] 
* CE 24: eval_whatcap_bb4_in(B) = 1+ eval_whatcap_bb5_in(C):1+ eval_whatcap_bb8_in(B):1
     [C=2] 
* CE 25: eval_whatcap_bb4_in(B) = 1+ eval_whatcap_bb5_in(C):1+ eval_whatcap_bb8_in(B):2
     [C=2] 
* CE 26: eval_whatcap_bb4_in(B) = 1+ eval_whatcap_bb5_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_whatcap_bb4_in/1 
* CEs [25,26] --> Loop 19 
* CEs [23,24] --> Loop 20 

#### Loops of eval_whatcap_bb4_in/1 
* Loop 19: eval_whatcap_bb4_in(B) [] 
* Loop 20: eval_whatcap_bb4_in(B) [] 

### Ranking functions of CR eval_whatcap_bb4_in(B) 

#### Partial ranking functions of CR eval_whatcap_bb4_in(B) 


### Resulting Chains:eval_whatcap_bb4_in(B) 
* [20]
* [19]...


### Merging Chains  eval_whatcap_bb4_in/1 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_whatcap_bb0_in/1 
* CE 3 is refined into CE [27,28,29] 


#### Refined cost equations eval_whatcap_bb0_in/1 
* CE 27: eval_whatcap_bb0_in(B) = 1+ eval_whatcap_bb1_in(C):1+ eval_whatcap_bb4_in(B):1
     [C=3] 
* CE 28: eval_whatcap_bb0_in(B) = 1+ eval_whatcap_bb1_in(C):1+ eval_whatcap_bb4_in(B):2
     [C=3] 
* CE 29: eval_whatcap_bb0_in(B) = 1+ eval_whatcap_bb1_in(C):2
     [C=3] 

### Cost equations --> "Loop" of eval_whatcap_bb0_in/1 
* CEs [28,29] --> Loop 21 
* CEs [27] --> Loop 22 

#### Loops of eval_whatcap_bb0_in/1 
* Loop 21: eval_whatcap_bb0_in(B) [] 
* Loop 22: eval_whatcap_bb0_in(B) [] 

### Ranking functions of CR eval_whatcap_bb0_in(B) 

#### Partial ranking functions of CR eval_whatcap_bb0_in(B) 


### Resulting Chains:eval_whatcap_bb0_in(B) 
* [22]
* [21]...


### Merging Chains  eval_whatcap_bb0_in/1 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_whatcap_start/1 
* CE 2 is refined into CE [30,31] 


#### Refined cost equations eval_whatcap_start/1 
* CE 30: eval_whatcap_start(B) = 0+ eval_whatcap_bb0_in(B):1
     [] 
* CE 31: eval_whatcap_start(B) = 0+ eval_whatcap_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_whatcap_start/1 
* CEs [31] --> Loop 23 
* CEs [30] --> Loop 24 

#### Loops of eval_whatcap_start/1 
* Loop 23: eval_whatcap_start(B) [] 
* Loop 24: eval_whatcap_start(B) [] 

### Ranking functions of CR eval_whatcap_start(B) 

#### Partial ranking functions of CR eval_whatcap_start(B) 


### Resulting Chains:eval_whatcap_start(B) 
* [24]
* [23]...


### Merging Chains  eval_whatcap_start/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_whatcap_bb1_in(B) -> [eval_whatcap_bb1_in(B')] 
1
#### Cost of phase [12]:eval_whatcap_bb1_in(B) -> [eval_whatcap_bb1_in(B')] 
1*it(12)+0
#### Cost of phase [12]:eval_whatcap_bb1_in(B) -> [eval_whatcap_bb1_in(B')] 
1*it(12)+0
#### Cost of chains of eval_whatcap_bb1_in(B):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [B=3] 

* Chain [[12],11]: 1*it(12)+0
  with precondition: [B=3] 

* Chain [11]: 0
  with precondition: [B=3] 


#### Cost of loops [14] 

 * loop 14:eval_whatcap_bb5_in(B) -> [eval_whatcap_bb5_in(B')] 
1
#### Cost of phase [14]:eval_whatcap_bb5_in(B) -> [eval_whatcap_bb5_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_whatcap_bb5_in(B) -> [eval_whatcap_bb5_in(B')] 
1*it(14)+0
#### Cost of chains of eval_whatcap_bb5_in(B):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [B=2] 

* Chain [[14],13]: 1*it(14)+0
  with precondition: [B=2] 

* Chain [13]: 0
  with precondition: [B=2] 


#### Cost of loops [16] 

 * loop 16:eval_whatcap_bb11_in(B) -> [eval_whatcap_bb11_in(B')] 
1
#### Cost of phase [16]:eval_whatcap_bb11_in(B) -> [eval_whatcap_bb11_in(B')] 
1*it(16)+0
#### Cost of phase [16]:eval_whatcap_bb11_in(B) -> [eval_whatcap_bb11_in(B')] 
1*it(16)+0
#### Cost of chains of eval_whatcap_bb11_in(B):
* Chain [[16]]...: 1*it(16)+0
  with precondition: [B=4] 

* Chain [[16],15]: 1*it(16)+0
  with precondition: [B=4] 

* Chain [15]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_whatcap_bb8_in(B):
* Chain [18]...: 1*s(4)+1
  with precondition: [] 

* Chain [17]: 1*aux(4)+0
  with precondition: [] 


#### Cost of chains of eval_whatcap_bb4_in(B):
* Chain [20]: 1*aux(5)+0
  with precondition: [] 

* Chain [19]...: 1*aux(6)+0
  with precondition: [] 


#### Cost of chains of eval_whatcap_bb0_in(B):
* Chain [22]: 2*s(11)+1
  with precondition: [] 

* Chain [21]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_whatcap_start(B):
* Chain [24]: 2*s(16)+1
  with precondition: [] 

* Chain [23]...: 1*s(17)+0
  with precondition: [] 


Closed-form bounds of eval_whatcap_start(B): 
-------------------------------------
* Chain [24] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_whatcap_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 23 ms.
   - Backward Invariants 10 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 36 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 34 ms.
   - Equation cost structures 13 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 142 ms.

