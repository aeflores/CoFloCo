WARNING: Excluded non-linear constraints:[H=4*F*G]
WARNING: Excluded non-linear constraints:[H=4*F*G]
WARNING: Excluded non-linear constraints:[D=B*C]
WARNING: Excluded non-linear constraints:[E=C*D]
WARNING: Excluded non-linear constraints:[E=C*D]
WARNING: Excluded non-linear constraints:[D=B*C]
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_122/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_15/1 
Warning: Ignored call to eval_main1_stop/1 in equation eval_main1_24/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_main1_17/10,eval_main1_18/10,eval_main1_26/10,eval_main1_27/11,eval_main1_28/9,eval_main1_29/9,eval_main1_NewDefault_in/9,eval_main1_bb21_in/13,eval_main1_bb3_in/9]
1. non_recursive  : [eval_main1_15/1]
2. non_recursive  : [eval_main1_14/1]
3. non_recursive  : [eval_main1_13/1]
4. non_recursive  : [eval_main1_24/1]
5. non_recursive  : [eval_main1_23/1]
6. non_recursive  : [eval_main1_22/1]
7. non_recursive  : [eval_main1_122/1]
8. non_recursive  : [eval_main1_121/1]
9. non_recursive  : [eval_main1_120/3]
10. non_recursive  : [eval_main1_bb43_in/1]
11. non_recursive  : [eval_main1_39/1]
12. non_recursive  : [eval_main1_38/1]
13. non_recursive  : [eval_main1_37/4]
14. non_recursive  : [eval_main1_35/2]
15. non_recursive  : [eval_main1_34/3]
16. non_recursive  : [eval_main1_88/1]
17. non_recursive  : [eval_main1_87/1]
18. non_recursive  : [eval_main1_86/1]
19. non_recursive  : [eval_main1_bb35_in/1]
20. non_recursive  : [eval_main1_59/1]
21. non_recursive  : [eval_main1_58/2]
22. non_recursive  : [eval_main1_bb28_in/1]
23. non_recursive  : [eval_main1_52/1]
24. non_recursive  : [eval_main1_51/3]
25. non_recursive  : [eval_main1_54/1]
26. non_recursive  : [eval_main1_53/3]
27. non_recursive  : [eval_main1_85/1]
28. non_recursive  : [eval_main1_84/1]
29. non_recursive  : [eval_main1_83/4]
30. non_recursive  : [eval_main1_bb34_in/2]
31. non_recursive  : [eval_main1_80/2]
32. non_recursive  : [eval_main1_79/4]
33. non_recursive  : [eval_main1_bb32_in/2]
34. non_recursive  : [eval_main1_74/2]
35. non_recursive  : [eval_main1_73/4]
36. non_recursive  : [eval_main1_76/2]
37. non_recursive  : [eval_main1_75/4]
38. non_recursive  : [eval_main1_70/2]
39. non_recursive  : [eval_main1_69/3]
40. non_recursive  : [eval_main1_65/2]
41. non_recursive  : [eval_main1_64/3]
42. non_recursive  : [eval_main1_47/2]
43. non_recursive  : [eval_main1_46/3]
44. non_recursive  : [eval_main1_45/4]
45. non_recursive  : [eval_main1_117/1]
46. non_recursive  : [eval_main1_116/1]
47. non_recursive  : [eval_main1_115/1]
48. non_recursive  : [eval_main1_bb42_in/1]
49. non_recursive  : [eval_main1_114/1]
50. non_recursive  : [eval_main1_113/3]
51. non_recursive  : [eval_main1_bb41_in/2]
52. non_recursive  : [eval_main1_109/2]
53. non_recursive  : [eval_main1_108/4]
54. non_recursive  : [eval_main1_111/2]
55. non_recursive  : [eval_main1_110/4]
56. non_recursive  : [eval_main1_104/1]
57. non_recursive  : [eval_main1_103/2]
58. non_recursive  : [eval_main1_100/1]
59. non_recursive  : [eval_main1_99/3]
60. non_recursive  : [eval_main1_96/2]
61. non_recursive  : [eval_main1_95/3]
62. non_recursive  : [eval_main1_94/4]
63. non_recursive  : [eval_main1_NewDefault35_in/1]
64. non_recursive  : [loop_cont_eval_main1_bb3_in/5]
65. non_recursive  : [eval_main1_3/2]
66. non_recursive  : [eval_main1_2/2]
67. non_recursive  : [eval_main1_bb2_in/2]
68. non_recursive  : [eval_main1_1/2]
69. non_recursive  : [eval_main1_0/2]
70. non_recursive  : [eval_main1_bb0_in/2]
71. non_recursive  : [eval_main1_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_main1_bb3_in/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is partially evaluated into eval_main1_bb32_in/2
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is partially evaluated into eval_main1_70/2
39. SCC is completely evaluated into other SCCs
40. SCC is completely evaluated into other SCCs
41. SCC is completely evaluated into other SCCs
42. SCC is partially evaluated into eval_main1_47/2
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is completely evaluated into other SCCs
46. SCC is completely evaluated into other SCCs
47. SCC is completely evaluated into other SCCs
48. SCC is completely evaluated into other SCCs
49. SCC is completely evaluated into other SCCs
50. SCC is completely evaluated into other SCCs
51. SCC is completely evaluated into other SCCs
52. SCC is completely evaluated into other SCCs
53. SCC is completely evaluated into other SCCs
54. SCC is completely evaluated into other SCCs
55. SCC is completely evaluated into other SCCs
56. SCC is completely evaluated into other SCCs
57. SCC is completely evaluated into other SCCs
58. SCC is completely evaluated into other SCCs
59. SCC is completely evaluated into other SCCs
60. SCC is partially evaluated into eval_main1_96/2
61. SCC is completely evaluated into other SCCs
62. SCC is completely evaluated into other SCCs
63. SCC is completely evaluated into other SCCs
64. SCC is partially evaluated into loop_cont_eval_main1_bb3_in/5
65. SCC is partially evaluated into eval_main1_3/2
66. SCC is completely evaluated into other SCCs
67. SCC is completely evaluated into other SCCs
68. SCC is completely evaluated into other SCCs
69. SCC is completely evaluated into other SCCs
70. SCC is partially evaluated into eval_main1_bb0_in/2
71. SCC is partially evaluated into eval_main1_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main1_bb3_in/9 
* CE 15 is refined into CE [27] 
* CE 14 is refined into CE [28] 
* CE 13 is refined into CE [29] 
* CE 12 is refined into CE [30] 
* CE 11 is refined into CE [31] 
* CE 10 is refined into CE [32] 
* CE 7 is refined into CE [33] 
* CE 6 is refined into CE [34] 
* CE 9 is refined into CE [35] 
* CE 5 is refined into CE [36] 
* CE 8 is refined into CE [37] 


#### Refined cost equations eval_main1_bb3_in/9 
* CE 27: eval_main1_bb3_in(A,B,C,D,E,F,B,D,G) = 0
     [E>=B+C+3,E>=A,C>=0,B>=0,F=7] 
* CE 28: eval_main1_bb3_in(A,B,C,D,E,F,B,D,G) = 0
     [E>=B+C+3,E>=A,C>=0,B>=0,F=6] 
* CE 29: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) = 0
     [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argindex_0>=V_argc,V_three_by_three_0>=0,V_drawing_mode_0>=0,B=5] 
* CE 30: eval_main1_bb3_in(A,B,C,D,E,F,C,D,G) = 0
     [E>=B+C+3,E>=A,C>=0,B>=0,F=4] 
* CE 31: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) = 0
     [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,B=3] 
* CE 32: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) = 0
     [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,B=2] 
* CE 33: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) = 1+ eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,F,B,C,D,E)
     [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,V_argindex_0+1=F] 
* CE 34: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) = 1+ eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,F,G,B,C,D,E)
     [G>=V_drawing_mode_0+V_three_by_three_0+5,V_argc+1>=G,V_three_by_three_0>=0,V_drawing_mode_0>=0,G=V_argindex_0+2] 
* CE 35: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) = 1+ eval_main1_bb3_in(V_argc,V_drawing_mode_0,F,V_bt_0,G,B,C,D,E)
     [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,V_argindex_0+1=G,F=1] 
* CE 36: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) = 1+ eval_main1_bb3_in(V_argc,V_drawing_mode_0,F,V_bt_0,G,B,C,D,E)
     [G>=V_drawing_mode_0+V_three_by_three_0+5,V_argc+1>=G,V_three_by_three_0>=0,V_drawing_mode_0>=0,G=V_argindex_0+2,F=1] 
* CE 37: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) = 1+ eval_main1_bb3_in(V_argc,F,V_three_by_three_0,V_bt_0,G,B,C,D,E)
     [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,V_argindex_0+1=G,F=1] 

### Cost equations --> "Loop" of eval_main1_bb3_in/9 
* CEs [33] --> Loop 25 
* CEs [34] --> Loop 26 
* CEs [35] --> Loop 27 
* CEs [36] --> Loop 28 
* CEs [37] --> Loop 29 
* CEs [27] --> Loop 30 
* CEs [28] --> Loop 31 
* CEs [29] --> Loop 32 
* CEs [30] --> Loop 33 
* CEs [31] --> Loop 34 
* CEs [32] --> Loop 35 

#### Loops of eval_main1_bb3_in/9 
* Loop 25: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E)->  eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0',B,C,D,E)
                  [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,V_argindex_0+1=V_argindex_0'] 
* Loop 26: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E)->  eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0',V_argindex_0',B,C,D,E)
                  [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,V_argindex_0+2=V_argindex_0'] 
* Loop 27: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E)->  eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0',V_bt_0,V_argindex_0',B,C,D,E)
                  [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,V_argindex_0+1=V_argindex_0',V_three_by_three_0'=1] 
* Loop 28: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E)->  eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0',V_bt_0,V_argindex_0',B,C,D,E)
                  [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,V_argindex_0+2=V_argindex_0',V_three_by_three_0'=1] 
* Loop 29: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E)->  eval_main1_bb3_in(V_argc,V_drawing_mode_0',V_three_by_three_0,V_bt_0,V_argindex_0',B,C,D,E)
                  [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,V_argindex_0+1=V_argindex_0',V_drawing_mode_0'=1] 
* Loop 30: eval_main1_bb3_in(A,B,C,D,E,F,B,D,G) [E>=B+C+3,E>=A,C>=0,B>=0,F=7] 
* Loop 31: eval_main1_bb3_in(A,B,C,D,E,F,B,D,G) [E>=B+C+3,E>=A,C>=0,B>=0,F=6] 
* Loop 32: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argindex_0>=V_argc,V_three_by_three_0>=0,V_drawing_mode_0>=0,B=5] 
* Loop 33: eval_main1_bb3_in(A,B,C,D,E,F,C,D,G) [E>=B+C+3,E>=A,C>=0,B>=0,F=4] 
* Loop 34: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,B=3] 
* Loop 35: eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) [V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc>=V_argindex_0+1,V_three_by_three_0>=0,V_drawing_mode_0>=0,B=2] 

### Ranking functions of CR eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) 
* RF of phase [25,26,27,28,29]: [V_argc-V_argindex_0]

#### Partial ranking functions of CR eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) 
* Partial RF of phase [25,26,27,28,29]:
  - RF of loop [25:1,27:1,29:1]:
    V_argc-V_argindex_0
  - RF of loop [26:1,28:1]:
    V_argc/2-V_argindex_0/2


### Resulting Chains:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) 
* [[25,26,27,28,29],35]
* [[25,26,27,28,29],34]
* [[25,26,27,28,29],33]
* [[25,26,27,28,29],32]
* [[25,26,27,28,29],31]
* [[25,26,27,28,29],30]
* [35]
* [34]
* [33]
* [32]
* [31]
* [30]


### Merging Chains  eval_main1_bb3_in/9 into  External patterns of execution 
* [[35],[35,[25,26,27,28,29]]] --> 1 
* [[34],[34,[25,26,27,28,29]]] --> 2 
* [[33]] --> 3 
* [[33,[25,26,27,28,29]]] --> 4 
* [[32]] --> 5 
* [[32,[25,26,27,28,29]]] --> 6 
* [[31]] --> 7 
* [[31,[25,26,27,28,29]]] --> 8 
* [[30]] --> 9 
* [[30,[25,26,27,28,29]]] --> 10 


### Specialization of cost equations eval_main1_bb32_in/2 
* CE 26 is refined into CE [38] 


#### Refined cost equations eval_main1_bb32_in/2 
* CE 38: eval_main1_bb32_in(V_drawing_mode_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_main1_bb32_in/2 
* CEs [38] --> Loop 36 

#### Loops of eval_main1_bb32_in/2 
* Loop 36: eval_main1_bb32_in(V_drawing_mode_0,B) [] 

### Ranking functions of CR eval_main1_bb32_in(V_drawing_mode_0,B) 

#### Partial ranking functions of CR eval_main1_bb32_in(V_drawing_mode_0,B) 


### Resulting Chains:eval_main1_bb32_in(V_drawing_mode_0,B) 
* [36]


### Merging Chains  eval_main1_bb32_in/2 into  External patterns of execution 
* [[36]] --> 1 


### Specialization of cost equations eval_main1_70/2 
* CE 25 is refined into CE [39] 


#### Refined cost equations eval_main1_70/2 
* CE 39: eval_main1_70(V_drawing_mode_0,B) = 0+ eval_main1_bb32_in(V_drawing_mode_0,B):1
     [] 

### Cost equations --> "Loop" of eval_main1_70/2 
* CEs [39] --> Loop 37 

#### Loops of eval_main1_70/2 
* Loop 37: eval_main1_70(V_drawing_mode_0,B) [] 

### Ranking functions of CR eval_main1_70(V_drawing_mode_0,B) 

#### Partial ranking functions of CR eval_main1_70(V_drawing_mode_0,B) 


### Resulting Chains:eval_main1_70(V_drawing_mode_0,B) 
* [37]


### Merging Chains  eval_main1_70/2 into  External patterns of execution 
* [[37]] --> 1 


### Specialization of cost equations eval_main1_47/2 
* CE 22 is refined into CE [40] 
* CE 23 is refined into CE [41] 


#### Refined cost equations eval_main1_47/2 
* CE 40: eval_main1_47(V_drawing_mode_0,B) = 0
     [] 
* CE 41: eval_main1_47(V_drawing_mode_0,B) = 0+ eval_main1_70(V_drawing_mode_0,B):1
     [] 

### Cost equations --> "Loop" of eval_main1_47/2 
* CEs [40,41] --> Loop 38 

#### Loops of eval_main1_47/2 
* Loop 38: eval_main1_47(V_drawing_mode_0,B) [] 

### Ranking functions of CR eval_main1_47(V_drawing_mode_0,B) 

#### Partial ranking functions of CR eval_main1_47(V_drawing_mode_0,B) 


### Resulting Chains:eval_main1_47(V_drawing_mode_0,B) 
* [38]


### Merging Chains  eval_main1_47/2 into  External patterns of execution 
* [[38]] --> 1 


### Specialization of cost equations eval_main1_96/2 
* CE 24 is refined into CE [42] 


#### Refined cost equations eval_main1_96/2 
* CE 42: eval_main1_96(V_drawing_mode_0,B) = 0
     [] 

### Cost equations --> "Loop" of eval_main1_96/2 
* CEs [42] --> Loop 39 

#### Loops of eval_main1_96/2 
* Loop 39: eval_main1_96(V_drawing_mode_0,B) [] 

### Ranking functions of CR eval_main1_96(V_drawing_mode_0,B) 

#### Partial ranking functions of CR eval_main1_96(V_drawing_mode_0,B) 


### Resulting Chains:eval_main1_96(V_drawing_mode_0,B) 
* [39]


### Merging Chains  eval_main1_96/2 into  External patterns of execution 
* [[39]] --> 1 


### Specialization of cost equations loop_cont_eval_main1_bb3_in/5 
* CE 21 is refined into CE [43] 
* CE 20 is refined into CE [44] 
* CE 19 is refined into CE [45] 
* CE 18 is refined into CE [46] 
* CE 17 is refined into CE [47] 
* CE 16 is refined into CE [48] 


#### Refined cost equations loop_cont_eval_main1_bb3_in/5 
* CE 43: loop_cont_eval_main1_bb3_in(G,A,B,C,D) = 0+ eval_main1_96(A,D):1
     [G=7] 
* CE 44: loop_cont_eval_main1_bb3_in(G,A,B,C,D) = 0+ eval_main1_47(A,D):1
     [G=6] 
* CE 45: loop_cont_eval_main1_bb3_in(G,A,B,C,D) = 0
     [G=5] 
* CE 46: loop_cont_eval_main1_bb3_in(G,A,B,C,D) = 0
     [G=4] 
* CE 47: loop_cont_eval_main1_bb3_in(G,A,B,C,D) = 0
     [G=3] 
* CE 48: loop_cont_eval_main1_bb3_in(G,A,B,C,D) = 0
     [G=2] 

### Cost equations --> "Loop" of loop_cont_eval_main1_bb3_in/5 
* CEs [43] --> Loop 40 
* CEs [44] --> Loop 41 
* CEs [45] --> Loop 42 
* CEs [46] --> Loop 43 
* CEs [47] --> Loop 44 
* CEs [48] --> Loop 45 

#### Loops of loop_cont_eval_main1_bb3_in/5 
* Loop 40: loop_cont_eval_main1_bb3_in(G,A,B,C,D) [G=7] 
* Loop 41: loop_cont_eval_main1_bb3_in(G,A,B,C,D) [G=6] 
* Loop 42: loop_cont_eval_main1_bb3_in(G,A,B,C,D) [G=5] 
* Loop 43: loop_cont_eval_main1_bb3_in(G,A,B,C,D) [G=4] 
* Loop 44: loop_cont_eval_main1_bb3_in(G,A,B,C,D) [G=3] 
* Loop 45: loop_cont_eval_main1_bb3_in(G,A,B,C,D) [G=2] 

### Ranking functions of CR loop_cont_eval_main1_bb3_in(G,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_main1_bb3_in(G,A,B,C,D) 


### Resulting Chains:loop_cont_eval_main1_bb3_in(G,A,B,C,D) 
* [45]
* [44]
* [43]
* [42]
* [41]
* [40]


### Merging Chains  loop_cont_eval_main1_bb3_in/5 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 
* [[43]] --> 3 
* [[42]] --> 4 
* [[41]] --> 5 
* [[40]] --> 6 


### Specialization of cost equations eval_main1_3/2 
* CE 4 is refined into CE [49,50,51,52,53,54,55,56,57,58] 


#### Refined cost equations eval_main1_3/2 
* CE 49: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):1+ loop_cont_eval_main1_bb3_in(K,H,I,J,B):1
     [V_argc>=4,K=2,G=2,F=3,E=20,D=0,C=0] 
* CE 50: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):2+ loop_cont_eval_main1_bb3_in(K,H,I,J,B):2
     [V_argc>=4,K=3,G=3,F=3,E=20,D=0,C=0] 
* CE 51: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):3+ loop_cont_eval_main1_bb3_in(K,L,M,J,B):3
     [3>=V_argc,M=20,L=0,K=4,I=20,H=0,G=4,F=3,E=20,D=0,C=0] 
* CE 52: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):4+ loop_cont_eval_main1_bb3_in(K,H,I,J,B):3
     [V_argc>=H+3,H>=0,V_argc>=4,K=4,G=4,F=3,E=20,D=0,C=0] 
* CE 53: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):5+ loop_cont_eval_main1_bb3_in(K,H,I,J,B):4
     [3>=V_argc,K=5,G=5,F=3,E=20,D=0,C=0] 
* CE 54: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):6+ loop_cont_eval_main1_bb3_in(K,H,I,J,B):4
     [V_argc>=4,K=5,G=5,F=3,E=20,D=0,C=0] 
* CE 55: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):7+ loop_cont_eval_main1_bb3_in(K,L,M,J,B):5
     [3>=V_argc,M=20,L=0,K=6,I=20,H=0,G=6,F=3,E=20,D=0,C=0] 
* CE 56: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):8+ loop_cont_eval_main1_bb3_in(K,H,I,J,B):5
     [V_argc>=H+3,H>=0,V_argc>=4,K=6,G=6,F=3,E=20,D=0,C=0] 
* CE 57: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):9+ loop_cont_eval_main1_bb3_in(K,L,M,J,B):6
     [3>=V_argc,M=20,L=0,K=7,I=20,H=0,G=7,F=3,E=20,D=0,C=0] 
* CE 58: eval_main1_3(V_argc,B) = 1+ eval_main1_bb3_in(V_argc,C,D,E,F,G,H,I,J):10+ loop_cont_eval_main1_bb3_in(K,H,I,J,B):6
     [V_argc>=H+3,H>=0,V_argc>=4,K=7,G=7,F=3,E=20,D=0,C=0] 

### Cost equations --> "Loop" of eval_main1_3/2 
* CEs [49,50,52,54,56,58] --> Loop 46 
* CEs [51,53,55,57] --> Loop 47 

#### Loops of eval_main1_3/2 
* Loop 46: eval_main1_3(V_argc,B) [V_argc>=4] 
* Loop 47: eval_main1_3(V_argc,B) [3>=V_argc] 

### Ranking functions of CR eval_main1_3(V_argc,B) 

#### Partial ranking functions of CR eval_main1_3(V_argc,B) 


### Resulting Chains:eval_main1_3(V_argc,B) 
* [47]
* [46]


### Merging Chains  eval_main1_3/2 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 


### Specialization of cost equations eval_main1_bb0_in/2 
* CE 3 is refined into CE [59,60] 


#### Refined cost equations eval_main1_bb0_in/2 
* CE 59: eval_main1_bb0_in(V_argc,B) = 0+ eval_main1_3(V_argc,B):1
     [3>=V_argc] 
* CE 60: eval_main1_bb0_in(V_argc,B) = 0+ eval_main1_3(V_argc,B):2
     [V_argc>=4] 

### Cost equations --> "Loop" of eval_main1_bb0_in/2 
* CEs [60] --> Loop 48 
* CEs [59] --> Loop 49 

#### Loops of eval_main1_bb0_in/2 
* Loop 48: eval_main1_bb0_in(V_argc,B) [V_argc>=4] 
* Loop 49: eval_main1_bb0_in(V_argc,B) [3>=V_argc] 

### Ranking functions of CR eval_main1_bb0_in(V_argc,B) 

#### Partial ranking functions of CR eval_main1_bb0_in(V_argc,B) 


### Resulting Chains:eval_main1_bb0_in(V_argc,B) 
* [49]
* [48]


### Merging Chains  eval_main1_bb0_in/2 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 


### Specialization of cost equations eval_main1_start/2 
* CE 2 is refined into CE [61,62] 


#### Refined cost equations eval_main1_start/2 
* CE 61: eval_main1_start(V_argc,B) = 0+ eval_main1_bb0_in(V_argc,B):1
     [3>=V_argc] 
* CE 62: eval_main1_start(V_argc,B) = 0+ eval_main1_bb0_in(V_argc,B):2
     [V_argc>=4] 

### Cost equations --> "Loop" of eval_main1_start/2 
* CEs [62] --> Loop 50 
* CEs [61] --> Loop 51 

#### Loops of eval_main1_start/2 
* Loop 50: eval_main1_start(V_argc,B) [V_argc>=4] 
* Loop 51: eval_main1_start(V_argc,B) [3>=V_argc] 

### Ranking functions of CR eval_main1_start(V_argc,B) 

#### Partial ranking functions of CR eval_main1_start(V_argc,B) 


### Resulting Chains:eval_main1_start(V_argc,B) 
* [51]
* [50]


### Merging Chains  eval_main1_start/2 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [25,26,27,28,29] 

 * loop 25:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
1
 * loop 26:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
1
 * loop 27:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
1
 * loop 28:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
1
 * loop 29:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
1
#### Cost of phase [25,26,27,28,29]:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0-V_argc'+V_argindex_0'
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2-V_argc'/2+V_argindex_0'/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

#### Cost of phase [25,26,27,28,29]:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0-V_argc'+V_argindex_0'
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2-V_argc'/2+V_argindex_0'/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

#### Cost of phase [25,26,27,28,29]:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0-V_argc'+V_argindex_0'
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2-V_argc'/2+V_argindex_0'/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

#### Cost of phase [25,26,27,28,29]:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0-V_argc'+V_argindex_0'
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2-V_argc'/2+V_argindex_0'/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

#### Cost of phase [25,26,27,28,29]:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0-V_argc'+V_argindex_0'
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2-V_argc'/2+V_argindex_0'/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

#### Cost of phase [25,26,27,28,29]:eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E) -> [eval_main1_bb3_in(V_argc',V_drawing_mode_0',V_three_by_three_0',V_bt_0',V_argindex_0',B',C',D',E')] 
3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0-V_argc'+V_argindex_0'
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2-V_argc'/2+V_argindex_0'/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

#### Cost of chains of eval_main1_bb3_in(V_argc,V_drawing_mode_0,V_three_by_three_0,V_bt_0,V_argindex_0,B,C,D,E):
* Chain [[25,26,27,28,29],35]: 3*it(25)+2*it(26)+0
  Such that:aux(5) =< V_argc-V_argindex_0
aux(6) =< V_argc/2-V_argindex_0/2
it(25) =< aux(5)
it(26) =< aux(5)
it(26) =< aux(6)

  with precondition: [B=2,V_drawing_mode_0>=0,V_three_by_three_0>=0,V_argc>=V_argindex_0+2,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3] 

* Chain [[25,26,27,28,29],34]: 3*it(25)+2*it(26)+0
  Such that:aux(7) =< V_argc-V_argindex_0
aux(8) =< V_argc/2-V_argindex_0/2
it(25) =< aux(7)
it(26) =< aux(7)
it(26) =< aux(8)

  with precondition: [B=3,V_drawing_mode_0>=0,V_three_by_three_0>=0,V_argc>=V_argindex_0+2,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3] 

* Chain [[25,26,27,28,29],33]: 3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0+1
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2+1/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

  with precondition: [B=4,V_drawing_mode_0>=0,V_three_by_three_0>=0,C>=0,V_argc>=V_argindex_0+1,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc+V_three_by_three_0>=V_argindex_0+C] 

* Chain [[25,26,27,28,29],32]: 3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0+1
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2+1/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

  with precondition: [B=5,V_drawing_mode_0>=0,V_three_by_three_0>=0,V_argc>=V_argindex_0+1,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3] 

* Chain [[25,26,27,28,29],31]: 3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0+1
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2+1/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

  with precondition: [B=6,V_drawing_mode_0>=0,V_three_by_three_0>=0,C>=0,V_argc>=V_argindex_0+1,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc+V_drawing_mode_0>=V_argindex_0+C] 

* Chain [[25,26,27,28,29],30]: 3*it(25)+2*it(26)+0
  Such that:aux(1) =< V_argc-V_argindex_0
aux(2) =< V_argc-V_argindex_0+1
aux(3) =< V_argc/2-V_argindex_0/2
aux(4) =< V_argc/2-V_argindex_0/2+1/2
it(25) =< aux(1)
it(26) =< aux(1)
it(25) =< aux(2)
it(26) =< aux(2)
it(26) =< aux(3)
it(26) =< aux(4)

  with precondition: [B=7,V_drawing_mode_0>=0,V_three_by_three_0>=0,C>=0,V_argc>=V_argindex_0+1,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3,V_argc+V_drawing_mode_0>=V_argindex_0+C] 

* Chain [35]: 0
  with precondition: [B=2,V_drawing_mode_0>=0,V_three_by_three_0>=0,V_argc>=V_argindex_0+1,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3] 

* Chain [34]: 0
  with precondition: [B=3,V_drawing_mode_0>=0,V_three_by_three_0>=0,V_argc>=V_argindex_0+1,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3] 

* Chain [33]: 0
  with precondition: [B=4,D=V_bt_0,V_three_by_three_0=C,V_drawing_mode_0>=0,V_three_by_three_0>=0,V_argindex_0>=V_argc,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3] 

* Chain [32]: 0
  with precondition: [B=5,V_drawing_mode_0>=0,V_three_by_three_0>=0,V_argindex_0>=V_argc,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3] 

* Chain [31]: 0
  with precondition: [B=6,D=V_bt_0,V_drawing_mode_0=C,V_drawing_mode_0>=0,V_three_by_three_0>=0,V_argindex_0>=V_argc,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3] 

* Chain [30]: 0
  with precondition: [B=7,D=V_bt_0,V_drawing_mode_0=C,V_drawing_mode_0>=0,V_three_by_three_0>=0,V_argindex_0>=V_argc,V_argindex_0>=V_drawing_mode_0+V_three_by_three_0+3] 


#### Cost of chains of eval_main1_bb32_in(V_drawing_mode_0,B):
* Chain [36]: 0
  with precondition: [] 


#### Cost of chains of eval_main1_70(V_drawing_mode_0,B):
* Chain [37]: 0
  with precondition: [] 


#### Cost of chains of eval_main1_47(V_drawing_mode_0,B):
* Chain [38]: 0
  with precondition: [] 


#### Cost of chains of eval_main1_96(V_drawing_mode_0,B):
* Chain [39]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_main1_bb3_in(G,A,B,C,D):
* Chain [45]: 0
  with precondition: [G=2] 

* Chain [44]: 0
  with precondition: [G=3] 

* Chain [43]: 0
  with precondition: [G=4] 

* Chain [42]: 0
  with precondition: [G=5] 

* Chain [41]: 0
  with precondition: [G=6] 

* Chain [40]: 0
  with precondition: [G=7] 


#### Cost of chains of eval_main1_3(V_argc,B):
* Chain [47]: 1
  with precondition: [3>=V_argc] 

* Chain [46]: 18*s(11)+12*s(12)+1
  Such that:aux(17) =< V_argc
aux(18) =< V_argc/2
s(11) =< aux(17)
s(12) =< aux(17)
s(12) =< aux(18)

  with precondition: [V_argc>=4] 


#### Cost of chains of eval_main1_bb0_in(V_argc,B):
* Chain [49]: 1
  with precondition: [3>=V_argc] 

* Chain [48]: 18*s(43)+12*s(44)+1
  Such that:s(41) =< V_argc
s(42) =< V_argc/2
s(43) =< s(41)
s(44) =< s(41)
s(44) =< s(42)

  with precondition: [V_argc>=4] 


#### Cost of chains of eval_main1_start(V_argc,B):
* Chain [51]: 1
  with precondition: [3>=V_argc] 

* Chain [50]: 18*s(47)+12*s(48)+1
  Such that:s(45) =< V_argc
s(46) =< V_argc/2
s(47) =< s(45)
s(48) =< s(45)
s(48) =< s(46)

  with precondition: [V_argc>=4] 


Closed-form bounds of eval_main1_start(V_argc,B): 
-------------------------------------
* Chain [51] with precondition: [3>=V_argc] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [50] with precondition: [V_argc>=4] 
    - Upper bound: 30*V_argc+1 
    - Complexity: n 

### Maximum cost of eval_main1_start(V_argc,B): nat(V_argc)*30+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 76 ms.
* Invariants computed in 103 ms.
   - Backward Invariants 71 ms.
   - Transitive Invariants 15 ms.
* Refinement performed in 115 ms.
* Termination proved in 14 ms.
* Upper bounds computed in 142 ms.
   - Equation cost structures 38 ms.
   - Phase cost structures 37 ms.
   - Chain cost structures 71 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 536 ms.

