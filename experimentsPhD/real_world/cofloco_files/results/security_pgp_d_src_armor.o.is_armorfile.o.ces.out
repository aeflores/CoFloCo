Warning: Ignored call to eval_is_armorfile_stop/1 in equation eval_is_armorfile_bb16_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_is_armorfile_bb16_in/1]
1. recursive  : [eval_is_armorfile_4/4,eval_is_armorfile_5/4,eval_is_armorfile_bb2_in/4]
2. non_recursive  : [eval_is_armorfile_7/1]
3. non_recursive  : [eval_is_armorfile_6/2]
4. recursive  : [eval_is_armorfile_10/3,eval_is_armorfile_11/3,eval_is_armorfile_12/3,eval_is_armorfile_13/4,eval_is_armorfile_bb7_in/3]
5. non_recursive  : [eval_is_armorfile_17/1]
6. non_recursive  : [eval_is_armorfile_16/2]
7. non_recursive  : [eval_is_armorfile_28/1]
8. non_recursive  : [eval_is_armorfile_27/2]
9. non_recursive  : [eval_is_armorfile_26/1]
10. non_recursive  : [eval_is_armorfile_25/2]
11. non_recursive  : [eval_is_armorfile_bb14_in/2]
12. non_recursive  : [eval_is_armorfile_24/2]
13. non_recursive  : [eval_is_armorfile_23/2]
14. non_recursive  : [eval_is_armorfile_22/2]
15. non_recursive  : [eval_is_armorfile_21/2]
16. non_recursive  : [eval_is_armorfile_20/2]
17. non_recursive  : [eval_is_armorfile_19/2]
18. non_recursive  : [eval_is_armorfile_15/2]
19. non_recursive  : [eval_is_armorfile_14/2]
20. non_recursive  : [loop_cont_eval_is_armorfile_bb7_in/3]
21. non_recursive  : [loop_cont_eval_is_armorfile_bb2_in/3]
22. non_recursive  : [eval_is_armorfile_1/2]
23. non_recursive  : [eval_is_armorfile_0/2]
24. non_recursive  : [eval_is_armorfile_bb0_in/2]
25. non_recursive  : [eval_is_armorfile_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_is_armorfile_bb2_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_is_armorfile_bb7_in/3
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_is_armorfile_24/2
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_is_armorfile_22/2
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_is_armorfile_20/2
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_is_armorfile_15/2
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into loop_cont_eval_is_armorfile_bb7_in/3
21. SCC is partially evaluated into loop_cont_eval_is_armorfile_bb2_in/3
22. SCC is partially evaluated into eval_is_armorfile_1/2
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_is_armorfile_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_is_armorfile_bb2_in/4 
* CE 7 is refined into CE [22] 
* CE 6 is refined into CE [23] 
* CE 5 is refined into CE [24] 


#### Refined cost equations eval_is_armorfile_bb2_in/4 
* CE 22: eval_is_armorfile_bb2_in(A,B,C,A) = 0
     [B>=A,B>=0,C=5] 
* CE 23: eval_is_armorfile_bb2_in(A,B,C,A) = 0
     [A>=B+1,B>=0,C=4] 
* CE 24: eval_is_armorfile_bb2_in(V__infile_line,V_il_0,B,C) = 1+ eval_is_armorfile_bb2_in(V__infile_line,D,B,C)
     [V__infile_line>=V_il_0+1,V_il_0>=0,V_il_0+1=D] 

### Cost equations --> "Loop" of eval_is_armorfile_bb2_in/4 
* CEs [24] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [23] --> Loop 19 

#### Loops of eval_is_armorfile_bb2_in/4 
* Loop 17: eval_is_armorfile_bb2_in(V__infile_line,V_il_0,B,C)->  eval_is_armorfile_bb2_in(V__infile_line,V_il_0',B,C)
                  [V__infile_line>=V_il_0+1,V_il_0>=0,V_il_0+1=V_il_0'] 
* Loop 18: eval_is_armorfile_bb2_in(A,B,C,A) [B>=A,B>=0,C=5] 
* Loop 19: eval_is_armorfile_bb2_in(A,B,C,A) [A>=B+1,B>=0,C=4] 

### Ranking functions of CR eval_is_armorfile_bb2_in(V__infile_line,V_il_0,B,C) 
* RF of phase [17]: [V__infile_line-V_il_0]

#### Partial ranking functions of CR eval_is_armorfile_bb2_in(V__infile_line,V_il_0,B,C) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    V__infile_line-V_il_0


### Resulting Chains:eval_is_armorfile_bb2_in(V__infile_line,V_il_0,B,C) 
* [[17],19]
* [[17],18]
* [19]
* [18]


### Merging Chains  eval_is_armorfile_bb2_in/4 into  External patterns of execution 
* [[19],[19,[17]]] --> 1 
* [[18]] --> 2 
* [[18,[17]]] --> 3 


### Specialization of cost equations eval_is_armorfile_bb7_in/3 
* CE 11 is refined into CE [25] 
* CE 12 is refined into CE [26] 
* CE 10 is refined into CE [27] 


#### Refined cost equations eval_is_armorfile_bb7_in/3 
* CE 25: eval_is_armorfile_bb7_in(A,B,A) = 0
     [B=3] 
* CE 26: eval_is_armorfile_bb7_in(A,B,A) = 0
     [B=2] 
* CE 27: eval_is_armorfile_bb7_in(V__infile_line,B,C) = 1+ eval_is_armorfile_bb7_in(V__infile_line,B,C)
     [] 

### Cost equations --> "Loop" of eval_is_armorfile_bb7_in/3 
* CEs [27] --> Loop 20 
* CEs [25] --> Loop 21 
* CEs [26] --> Loop 22 

#### Loops of eval_is_armorfile_bb7_in/3 
* Loop 20: eval_is_armorfile_bb7_in(V__infile_line,B,C)->  eval_is_armorfile_bb7_in(V__infile_line,B,C)
                  [] 
* Loop 21: eval_is_armorfile_bb7_in(A,B,A) [B=3] 
* Loop 22: eval_is_armorfile_bb7_in(A,B,A) [B=2] 

### Ranking functions of CR eval_is_armorfile_bb7_in(V__infile_line,B,C) 

#### Partial ranking functions of CR eval_is_armorfile_bb7_in(V__infile_line,B,C) 


### Resulting Chains:eval_is_armorfile_bb7_in(V__infile_line,B,C) 
* [[20]]...
* [[20],22]
* [[20],21]
* [22]
* [21]


### Merging Chains  eval_is_armorfile_bb7_in/3 into  External patterns of execution 
* [[22],[22,[20]]] --> 1 
* [[21],[21,[20]]] --> 2 
* [[[20]]] --> 3 


### Specialization of cost equations eval_is_armorfile_24/2 
* CE 21 is refined into CE [28] 


#### Refined cost equations eval_is_armorfile_24/2 
* CE 28: eval_is_armorfile_24(V__infile_line,B) = 0
     [] 

### Cost equations --> "Loop" of eval_is_armorfile_24/2 
* CEs [28] --> Loop 23 

#### Loops of eval_is_armorfile_24/2 
* Loop 23: eval_is_armorfile_24(V__infile_line,B) [] 

### Ranking functions of CR eval_is_armorfile_24(V__infile_line,B) 

#### Partial ranking functions of CR eval_is_armorfile_24(V__infile_line,B) 


### Resulting Chains:eval_is_armorfile_24(V__infile_line,B) 
* [23]


### Merging Chains  eval_is_armorfile_24/2 into  External patterns of execution 
* [[23]] --> 1 


### Specialization of cost equations eval_is_armorfile_22/2 
* CE 19 is refined into CE [29] 
* CE 20 is refined into CE [30] 


#### Refined cost equations eval_is_armorfile_22/2 
* CE 29: eval_is_armorfile_22(V__infile_line,B) = 0
     [] 
* CE 30: eval_is_armorfile_22(V__infile_line,B) = 0+ eval_is_armorfile_24(V__infile_line,B):1
     [] 

### Cost equations --> "Loop" of eval_is_armorfile_22/2 
* CEs [29,30] --> Loop 24 

#### Loops of eval_is_armorfile_22/2 
* Loop 24: eval_is_armorfile_22(V__infile_line,B) [] 

### Ranking functions of CR eval_is_armorfile_22(V__infile_line,B) 

#### Partial ranking functions of CR eval_is_armorfile_22(V__infile_line,B) 


### Resulting Chains:eval_is_armorfile_22(V__infile_line,B) 
* [24]


### Merging Chains  eval_is_armorfile_22/2 into  External patterns of execution 
* [[24]] --> 1 


### Specialization of cost equations eval_is_armorfile_20/2 
* CE 17 is refined into CE [31] 
* CE 18 is refined into CE [32] 


#### Refined cost equations eval_is_armorfile_20/2 
* CE 31: eval_is_armorfile_20(V__infile_line,B) = 0
     [] 
* CE 32: eval_is_armorfile_20(V__infile_line,B) = 0+ eval_is_armorfile_22(V__infile_line,B):1
     [] 

### Cost equations --> "Loop" of eval_is_armorfile_20/2 
* CEs [31,32] --> Loop 25 

#### Loops of eval_is_armorfile_20/2 
* Loop 25: eval_is_armorfile_20(V__infile_line,B) [] 

### Ranking functions of CR eval_is_armorfile_20(V__infile_line,B) 

#### Partial ranking functions of CR eval_is_armorfile_20(V__infile_line,B) 


### Resulting Chains:eval_is_armorfile_20(V__infile_line,B) 
* [25]


### Merging Chains  eval_is_armorfile_20/2 into  External patterns of execution 
* [[25]] --> 1 


### Specialization of cost equations eval_is_armorfile_15/2 
* CE 15 is refined into CE [33] 
* CE 16 is refined into CE [34] 


#### Refined cost equations eval_is_armorfile_15/2 
* CE 33: eval_is_armorfile_15(V__infile_line,B) = 0
     [] 
* CE 34: eval_is_armorfile_15(V__infile_line,B) = 0+ eval_is_armorfile_20(V__infile_line,B):1
     [] 

### Cost equations --> "Loop" of eval_is_armorfile_15/2 
* CEs [33,34] --> Loop 26 

#### Loops of eval_is_armorfile_15/2 
* Loop 26: eval_is_armorfile_15(V__infile_line,B) [] 

### Ranking functions of CR eval_is_armorfile_15(V__infile_line,B) 

#### Partial ranking functions of CR eval_is_armorfile_15(V__infile_line,B) 


### Resulting Chains:eval_is_armorfile_15(V__infile_line,B) 
* [26]


### Merging Chains  eval_is_armorfile_15/2 into  External patterns of execution 
* [[26]] --> 1 


### Specialization of cost equations loop_cont_eval_is_armorfile_bb7_in/3 
* CE 14 is refined into CE [35] 
* CE 13 is refined into CE [36] 


#### Refined cost equations loop_cont_eval_is_armorfile_bb7_in/3 
* CE 35: loop_cont_eval_is_armorfile_bb7_in(C,A,B) = 0+ eval_is_armorfile_15(A,B):1
     [C=3] 
* CE 36: loop_cont_eval_is_armorfile_bb7_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_is_armorfile_bb7_in/3 
* CEs [35] --> Loop 27 
* CEs [36] --> Loop 28 

#### Loops of loop_cont_eval_is_armorfile_bb7_in/3 
* Loop 27: loop_cont_eval_is_armorfile_bb7_in(C,A,B) [C=3] 
* Loop 28: loop_cont_eval_is_armorfile_bb7_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_is_armorfile_bb7_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_is_armorfile_bb7_in(C,A,B) 


### Resulting Chains:loop_cont_eval_is_armorfile_bb7_in(C,A,B) 
* [28]
* [27]


### Merging Chains  loop_cont_eval_is_armorfile_bb7_in/3 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations loop_cont_eval_is_armorfile_bb2_in/3 
* CE 9 is refined into CE [37,38,39] 
* CE 8 is refined into CE [40] 


#### Refined cost equations loop_cont_eval_is_armorfile_bb2_in/3 
* CE 37: loop_cont_eval_is_armorfile_bb2_in(C,A,B) = 1+ eval_is_armorfile_bb7_in(A,D,A):1+ loop_cont_eval_is_armorfile_bb7_in(E,A,B):1
     [E=2,D=2,C=5] 
* CE 38: loop_cont_eval_is_armorfile_bb2_in(C,A,B) = 1+ eval_is_armorfile_bb7_in(A,D,A):2+ loop_cont_eval_is_armorfile_bb7_in(E,A,B):2
     [E=3,D=3,C=5] 
* CE 39: loop_cont_eval_is_armorfile_bb2_in(C,A,B) = 1+ eval_is_armorfile_bb7_in(A,D,E):3
     [C=5] 
* CE 40: loop_cont_eval_is_armorfile_bb2_in(C,A,B) = 0
     [C=4] 

### Cost equations --> "Loop" of loop_cont_eval_is_armorfile_bb2_in/3 
* CEs [37,38] --> Loop 29 
* CEs [40] --> Loop 30 
* CEs [39] --> Loop 31 

#### Loops of loop_cont_eval_is_armorfile_bb2_in/3 
* Loop 29: loop_cont_eval_is_armorfile_bb2_in(C,A,B) [C=5] 
* Loop 30: loop_cont_eval_is_armorfile_bb2_in(C,A,B) [C=4] 
* Loop 31: loop_cont_eval_is_armorfile_bb2_in(C,A,B) [C=5] 

### Ranking functions of CR loop_cont_eval_is_armorfile_bb2_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_is_armorfile_bb2_in(C,A,B) 


### Resulting Chains:loop_cont_eval_is_armorfile_bb2_in(C,A,B) 
* [31]...
* [30]
* [29]


### Merging Chains  loop_cont_eval_is_armorfile_bb2_in/3 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[31]] --> 3 


### Specialization of cost equations eval_is_armorfile_1/2 
* CE 3 is refined into CE [41] 
* CE 4 is refined into CE [42,43,44,45,46] 


#### Refined cost equations eval_is_armorfile_1/2 
* CE 41: eval_is_armorfile_1(V__infile_line,B) = 0
     [] 
* CE 42: eval_is_armorfile_1(V__infile_line,B) = 1+ eval_is_armorfile_bb2_in(V__infile_line,C,D,V__infile_line):1+ loop_cont_eval_is_armorfile_bb2_in(E,V__infile_line,B):1
     [V__infile_line>=1,E=4,D=4,C=0] 
* CE 43: eval_is_armorfile_1(V__infile_line,B) = 1+ eval_is_armorfile_bb2_in(V__infile_line,C,D,V__infile_line):2+ loop_cont_eval_is_armorfile_bb2_in(E,V__infile_line,B):2
     [0>=V__infile_line,E=5,D=5,C=0] 
* CE 44: eval_is_armorfile_1(V__infile_line,B) = 1+ eval_is_armorfile_bb2_in(V__infile_line,C,D,V__infile_line):2+ loop_cont_eval_is_armorfile_bb2_in(E,V__infile_line,B):3
     [0>=V__infile_line,E=5,D=5,C=0] 
* CE 45: eval_is_armorfile_1(V__infile_line,B) = 1+ eval_is_armorfile_bb2_in(V__infile_line,C,D,V__infile_line):3+ loop_cont_eval_is_armorfile_bb2_in(E,V__infile_line,B):2
     [V__infile_line>=1,E=5,D=5,C=0] 
* CE 46: eval_is_armorfile_1(V__infile_line,B) = 1+ eval_is_armorfile_bb2_in(V__infile_line,C,D,V__infile_line):3+ loop_cont_eval_is_armorfile_bb2_in(E,V__infile_line,B):3
     [V__infile_line>=1,E=5,D=5,C=0] 

### Cost equations --> "Loop" of eval_is_armorfile_1/2 
* CEs [46] --> Loop 32 
* CEs [44] --> Loop 33 
* CEs [41,42,43,45] --> Loop 34 

#### Loops of eval_is_armorfile_1/2 
* Loop 32: eval_is_armorfile_1(V__infile_line,B) [V__infile_line>=1] 
* Loop 33: eval_is_armorfile_1(V__infile_line,B) [0>=V__infile_line] 
* Loop 34: eval_is_armorfile_1(V__infile_line,B) [] 

### Ranking functions of CR eval_is_armorfile_1(V__infile_line,B) 

#### Partial ranking functions of CR eval_is_armorfile_1(V__infile_line,B) 


### Resulting Chains:eval_is_armorfile_1(V__infile_line,B) 
* [34]
* [33]...
* [32]...


### Merging Chains  eval_is_armorfile_1/2 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 
* [[32]] --> 3 


### Specialization of cost equations eval_is_armorfile_start/2 
* CE 2 is refined into CE [47,48,49] 


#### Refined cost equations eval_is_armorfile_start/2 
* CE 47: eval_is_armorfile_start(V__infile_line,B) = 0+ eval_is_armorfile_1(V__infile_line,B):1
     [] 
* CE 48: eval_is_armorfile_start(V__infile_line,B) = 0+ eval_is_armorfile_1(V__infile_line,B):2
     [0>=V__infile_line] 
* CE 49: eval_is_armorfile_start(V__infile_line,B) = 0+ eval_is_armorfile_1(V__infile_line,B):3
     [V__infile_line>=1] 

### Cost equations --> "Loop" of eval_is_armorfile_start/2 
* CEs [49] --> Loop 35 
* CEs [48] --> Loop 36 
* CEs [47] --> Loop 37 

#### Loops of eval_is_armorfile_start/2 
* Loop 35: eval_is_armorfile_start(V__infile_line,B) [V__infile_line>=1] 
* Loop 36: eval_is_armorfile_start(V__infile_line,B) [0>=V__infile_line] 
* Loop 37: eval_is_armorfile_start(V__infile_line,B) [] 

### Ranking functions of CR eval_is_armorfile_start(V__infile_line,B) 

#### Partial ranking functions of CR eval_is_armorfile_start(V__infile_line,B) 


### Resulting Chains:eval_is_armorfile_start(V__infile_line,B) 
* [37]
* [36]...
* [35]...


### Merging Chains  eval_is_armorfile_start/2 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 
* [[35]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [17] 

 * loop 17:eval_is_armorfile_bb2_in(V__infile_line,V_il_0,B,C) -> [eval_is_armorfile_bb2_in(V__infile_line',V_il_0',B',C')] 
1
#### Cost of phase [17]:eval_is_armorfile_bb2_in(V__infile_line,V_il_0,B,C) -> [eval_is_armorfile_bb2_in(V__infile_line',V_il_0',B',C')] 
1*it(17)+0
  Such that:it(17) =< V__infile_line-V_il_0
it(17) =< V__infile_line-V_il_0-V__infile_line'+V_il_0'

#### Cost of phase [17]:eval_is_armorfile_bb2_in(V__infile_line,V_il_0,B,C) -> [eval_is_armorfile_bb2_in(V__infile_line',V_il_0',B',C')] 
1*it(17)+0
  Such that:it(17) =< V__infile_line-V_il_0
it(17) =< V__infile_line-V_il_0-V__infile_line'+V_il_0'

#### Cost of chains of eval_is_armorfile_bb2_in(V__infile_line,V_il_0,B,C):
* Chain [[17],19]: 1*it(17)+0
  Such that:it(17) =< -V_il_0+C

  with precondition: [B=4,V__infile_line=C,V_il_0>=0,V__infile_line>=V_il_0+2] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< -V_il_0+C

  with precondition: [B=5,V__infile_line=C,V_il_0>=0,V__infile_line>=V_il_0+1] 

* Chain [19]: 0
  with precondition: [B=4,V__infile_line=C,V_il_0>=0,V__infile_line>=V_il_0+1] 

* Chain [18]: 0
  with precondition: [B=5,V__infile_line=C,V_il_0>=0,V_il_0>=V__infile_line] 


#### Cost of loops [20] 

 * loop 20:eval_is_armorfile_bb7_in(V__infile_line,B,C) -> [eval_is_armorfile_bb7_in(V__infile_line',B',C')] 
1
#### Cost of phase [20]:eval_is_armorfile_bb7_in(V__infile_line,B,C) -> [eval_is_armorfile_bb7_in(V__infile_line',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_is_armorfile_bb7_in(V__infile_line,B,C) -> [eval_is_armorfile_bb7_in(V__infile_line',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_is_armorfile_bb7_in(V__infile_line,B,C) -> [eval_is_armorfile_bb7_in(V__infile_line',B',C')] 
1*it(20)+0
#### Cost of chains of eval_is_armorfile_bb7_in(V__infile_line,B,C):
* Chain [[20]]...: 1*it(20)+0
  with precondition: [] 

* Chain [[20],22]: 1*it(20)+0
  with precondition: [B=2,V__infile_line=C] 

* Chain [[20],21]: 1*it(20)+0
  with precondition: [B=3,V__infile_line=C] 

* Chain [22]: 0
  with precondition: [B=2,C=V__infile_line] 

* Chain [21]: 0
  with precondition: [B=3,C=V__infile_line] 


#### Cost of chains of eval_is_armorfile_24(V__infile_line,B):
* Chain [23]: 0
  with precondition: [] 


#### Cost of chains of eval_is_armorfile_22(V__infile_line,B):
* Chain [24]: 0
  with precondition: [] 


#### Cost of chains of eval_is_armorfile_20(V__infile_line,B):
* Chain [25]: 0
  with precondition: [] 


#### Cost of chains of eval_is_armorfile_15(V__infile_line,B):
* Chain [26]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_is_armorfile_bb7_in(C,A,B):
* Chain [28]: 0
  with precondition: [C=2] 

* Chain [27]: 0
  with precondition: [C=3] 


#### Cost of chains of loop_cont_eval_is_armorfile_bb2_in(C,A,B):
* Chain [31]...: 1*s(4)+1
  with precondition: [C=5] 

* Chain [30]: 0
  with precondition: [C=4] 

* Chain [29]: 1*aux(3)+0
  with precondition: [C=5] 


#### Cost of chains of eval_is_armorfile_1(V__infile_line,B):
* Chain [34]: 2*s(7)+2*s(8)+1
  Such that:aux(4) =< V__infile_line
s(7) =< aux(4)

  with precondition: [] 

* Chain [33]...: 1*s(11)+2
  with precondition: [0>=V__infile_line] 

* Chain [32]...: 1*s(12)+1*s(13)+2
  Such that:s(12) =< V__infile_line

  with precondition: [V__infile_line>=1] 


#### Cost of chains of eval_is_armorfile_start(V__infile_line,B):
* Chain [37]: 2*s(15)+2*s(16)+1
  Such that:s(14) =< V__infile_line
s(15) =< s(14)

  with precondition: [] 

* Chain [36]...: 1*s(17)+2
  with precondition: [0>=V__infile_line] 

* Chain [35]...: 1*s(18)+1*s(19)+2
  Such that:s(18) =< V__infile_line

  with precondition: [V__infile_line>=1] 


Closed-form bounds of eval_is_armorfile_start(V__infile_line,B): 
-------------------------------------
* Chain [37] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [36]... with precondition: [0>=V__infile_line] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [35]... with precondition: [V__infile_line>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_is_armorfile_start(V__infile_line,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 18 ms.
* Invariants computed in 14 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 37 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 26 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 8 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 124 ms.

