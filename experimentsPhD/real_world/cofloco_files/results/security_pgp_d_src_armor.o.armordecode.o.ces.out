Warning: Ignored call to eval_armordecode_stop/1 in equation eval_armordecode_bb50_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_armordecode_18/10,eval_armordecode_19/10,eval_armordecode_20/10,eval_armordecode_21/10,eval_armordecode_22/10,eval_armordecode_23/10,eval_armordecode_32/10,eval_armordecode_33/11,eval_armordecode_bb10_in/10,eval_armordecode_bb13_in/10,eval_armordecode_bb7_in/10]
1. recursive  : [eval_armordecode_101/7,eval_armordecode_102/7,eval_armordecode_103/7,eval_armordecode_104/7,eval_armordecode_105/7,eval_armordecode_106/7,eval_armordecode_107/7,eval_armordecode_116/8,eval_armordecode_117/9,eval_armordecode_119/10,eval_armordecode_120/10,eval_armordecode_13/7,eval_armordecode_14/7,eval_armordecode_15/7,eval_armordecode_3/7,eval_armordecode_34/8,eval_armordecode_35/8,eval_armordecode_4/7,eval_armordecode_5/7,eval_armordecode_53/9,eval_armordecode_54/9,eval_armordecode_55/9,eval_armordecode_56/9,eval_armordecode_6/8,eval_armordecode_63/7,eval_armordecode_64/7,eval_armordecode_71/7,eval_armordecode_72/7,eval_armordecode_73/7,eval_armordecode_74/7,eval_armordecode_bb1_in/7,eval_armordecode_bb28_in/7,eval_armordecode_bb29_in/7,eval_armordecode_bb37_in/7,eval_armordecode_bb3_in/7,eval_armordecode_bb51_in/9,eval_armordecode_bb6_in/7,loop_cont_eval_armordecode_bb7_in/9]
2. non_recursive  : [eval_armordecode_bb50_in/1]
3. non_recursive  : [eval_armordecode_134/1]
4. non_recursive  : [eval_armordecode_133/2]
5. non_recursive  : [eval_armordecode_bb45_in/2]
6. non_recursive  : [eval_armordecode_114/2]
7. non_recursive  : [eval_armordecode_113/4]
8. non_recursive  : [eval_armordecode_112/3]
9. non_recursive  : [eval_armordecode_111/3]
10. non_recursive  : [eval_armordecode_27/1]
11. non_recursive  : [eval_armordecode_26/3]
12. non_recursive  : [eval_armordecode_25/3]
13. non_recursive  : [eval_armordecode_24/3]
14. non_recursive  : [eval_armordecode_39/2]
15. non_recursive  : [eval_armordecode_38/3]
16. non_recursive  : [eval_armordecode_37/3]
17. non_recursive  : [eval_armordecode_36/3]
18. non_recursive  : [eval_armordecode_50/2]
19. non_recursive  : [eval_armordecode_49/3]
20. non_recursive  : [eval_armordecode_48/2]
21. non_recursive  : [eval_armordecode_47/2]
22. non_recursive  : [eval_armordecode_52/2]
23. non_recursive  : [eval_armordecode_51/2]
24. non_recursive  : [eval_armordecode_45/2]
25. non_recursive  : [eval_armordecode_44/3]
26. non_recursive  : [eval_armordecode_43/3]
27. non_recursive  : [eval_armordecode_59/2]
28. non_recursive  : [eval_armordecode_58/3]
29. non_recursive  : [eval_armordecode_57/3]
30. non_recursive  : [eval_armordecode_79/2]
31. non_recursive  : [eval_armordecode_78/3]
32. non_recursive  : [eval_armordecode_77/3]
33. non_recursive  : [eval_armordecode_132/2]
34. non_recursive  : [eval_armordecode_131/2]
35. non_recursive  : [eval_armordecode_bb44_in/2]
36. non_recursive  : [eval_armordecode_130/2]
37. non_recursive  : [eval_armordecode_129/3]
38. non_recursive  : [eval_armordecode_128/2]
39. non_recursive  : [eval_armordecode_127/2]
40. non_recursive  : [eval_armordecode_125/2]
41. non_recursive  : [eval_armordecode_124/2]
42. non_recursive  : [eval_armordecode_123/2]
43. non_recursive  : [eval_armordecode_139/1]
44. non_recursive  : [eval_armordecode_138/2]
45. non_recursive  : [eval_armordecode_bb48_in/2]
46. non_recursive  : [eval_armordecode_137/2]
47. non_recursive  : [eval_armordecode_136/2]
48. non_recursive  : [eval_armordecode_135/2]
49. non_recursive  : [eval_armordecode_bb40_in/2]
50. non_recursive  : [eval_armordecode_100/2]
51. non_recursive  : [eval_armordecode_99/2]
52. non_recursive  : [eval_armordecode_98/2]
53. non_recursive  : [loop_cont_eval_armordecode_bb1_in/4]
54. non_recursive  : [eval_armordecode_2/2]
55. non_recursive  : [eval_armordecode_1/2]
56. non_recursive  : [eval_armordecode_bb0_in/2]
57. non_recursive  : [eval_armordecode_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_armordecode_bb7_in/10
1. SCC is partially evaluated into eval_armordecode_bb1_in/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_armordecode_bb45_in/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_armordecode_45/2
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is completely evaluated into other SCCs
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is completely evaluated into other SCCs
38. SCC is completely evaluated into other SCCs
39. SCC is completely evaluated into other SCCs
40. SCC is partially evaluated into eval_armordecode_125/2
41. SCC is completely evaluated into other SCCs
42. SCC is completely evaluated into other SCCs
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is partially evaluated into eval_armordecode_bb48_in/2
46. SCC is completely evaluated into other SCCs
47. SCC is completely evaluated into other SCCs
48. SCC is completely evaluated into other SCCs
49. SCC is partially evaluated into eval_armordecode_bb40_in/2
50. SCC is completely evaluated into other SCCs
51. SCC is completely evaluated into other SCCs
52. SCC is completely evaluated into other SCCs
53. SCC is partially evaluated into loop_cont_eval_armordecode_bb1_in/4
54. SCC is partially evaluated into eval_armordecode_2/2
55. SCC is completely evaluated into other SCCs
56. SCC is completely evaluated into other SCCs
57. SCC is partially evaluated into eval_armordecode_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_armordecode_bb7_in/10 
* CE 36 is refined into CE [46] 
* CE 35 is refined into CE [47] 
* CE 39 is refined into CE [48] 
* CE 38 is refined into CE [49] 
* CE 37 is refined into CE [50] 


#### Refined cost equations eval_armordecode_bb7_in/10 
* CE 46: eval_armordecode_bb7_in(A,B,C,D,E,A,B,C,D,F) = 0
     [F=0,E=3] 
* CE 47: eval_armordecode_bb7_in(A,B,C,D,E,F,B,C,D,G) = 0
     [F=A+1,G=0,E=3] 
* CE 48: eval_armordecode_bb7_in(A,B,C,D,E,A,C,F,G,H) = 0
     [E=2] 
* CE 49: eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) = 1+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G)
     [B>=2,3>=B] 
* CE 50: eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) = 1+ eval_armordecode_bb7_in(H,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G)
     [B>=2,3>=B,H=V__infile_line+1] 

### Cost equations --> "Loop" of eval_armordecode_bb7_in/10 
* CEs [49] --> Loop 38 
* CEs [50] --> Loop 39 
* CEs [46] --> Loop 40 
* CEs [47] --> Loop 41 
* CEs [48] --> Loop 42 

#### Loops of eval_armordecode_bb7_in/10 
* Loop 38: eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G)->  eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G)
                  [B>=2,3>=B] 
* Loop 39: eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G)->  eval_armordecode_bb7_in(V__infile_line',V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G)
                  [B>=2,3>=B,V__infile_line+1=V__infile_line'] 
* Loop 40: eval_armordecode_bb7_in(A,B,C,D,E,A,B,C,D,F) [F=0,E=3] 
* Loop 41: eval_armordecode_bb7_in(A,B,C,D,E,F,B,C,D,G) [A+1=F,G=0,E=3] 
* Loop 42: eval_armordecode_bb7_in(A,B,C,D,E,A,C,F,G,H) [E=2] 

### Ranking functions of CR eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) 


### Resulting Chains:eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) 
* [[38,39]]...
* [[38,39],42]
* [[38,39],41]
* [[38,39],40]
* [42]
* [41]
* [40]


### Merging Chains  eval_armordecode_bb7_in/10 into  External patterns of execution 
* [[42],[42,[38,39]]] --> 1 
* [[40],[40,[38,39]],[41,[38,39]]] --> 2 
* [[41]] --> 3 
* [[[38,39]]] --> 4 


### Specialization of cost equations eval_armordecode_bb1_in/7 
* CE 25 is refined into CE [51] 
* CE 14 is refined into CE [52] 
* CE 20 is refined into CE [53] 
* CE 9 is refined into CE [54] 
* CE 23 is refined into CE [55] 
* CE 12 is refined into CE [56] 
* CE 6 is refined into CE [57,58,59] 
* CE 17 is refined into CE [60,61,62] 
* CE 4 is refined into CE [63,64,65] 
* CE 15 is refined into CE [66,67,68] 
* CE 7 is refined into CE [69,70,71] 
* CE 18 is refined into CE [72,73,74] 
* CE 8 is refined into CE [75,76,77] 
* CE 19 is refined into CE [78,79,80] 
* CE 22 is refined into CE [81] 
* CE 11 is refined into CE [82] 
* CE 13 is refined into CE [83,84] 
* CE 24 is refined into CE [85,86] 
* CE 21 is refined into CE [87] 
* CE 10 is refined into CE [88] 
* CE 5 is refined into CE [89,90,91] 
* CE 16 is refined into CE [92,93,94] 


#### Refined cost equations eval_armordecode_bb1_in/7 
* CE 51: eval_armordecode_bb1_in(A,B,C,D,E,A,F) = 0
     [E=11] 
* CE 52: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 0
     [C=V__infile_line+1,B=11] 
* CE 53: eval_armordecode_bb1_in(A,B,C,D,E,A,D) = 0
     [E=10] 
* CE 54: eval_armordecode_bb1_in(A,B,C,D,E,F,D) = 0
     [F=A+1,E=10] 
* CE 55: eval_armordecode_bb1_in(A,B,C,D,E,A,D) = 0
     [E=9] 
* CE 56: eval_armordecode_bb1_in(A,B,C,D,E,F,D) = 0
     [F=A+1,E=9] 
* CE 57: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,V_crc_0,V_currentSection_0,V_line_0,G):2
     [C>=E,V_currentSection_0+1=D,E=V__infile_line+1,G=0,F=3,B=8] 
* CE 58: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,V_crc_0,V_currentSection_0,V_line_0,G):3
     [C=E+1,V_currentSection_0+1=D,C=V__infile_line+2,G=0,F=3,B=8] 
* CE 59: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,G,H,I,J):4
     [H+1=D,E=V__infile_line+1,F=3,B=8] 
* CE 60: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,C,V_crc_0,V_currentSection_0,V_line_0,F):2
     [C>=V__infile_line,V_currentSection_0+1=D,F=0,E=3,B=8] 
* CE 61: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,V_crc_0,V_currentSection_0,V_line_0,G):3
     [C=E+1,V_currentSection_0+1=D,C=V__infile_line+1,G=0,F=3,B=8] 
* CE 62: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,C,F,G,H,I):4
     [G+1=D,E=3,B=8] 
* CE 63: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,V_crc_0,V_currentSection_0,V_line_0,G):2
     [C>=E,E=V__infile_line+1,G=0,F=3,B=7] 
* CE 64: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,V_crc_0,V_currentSection_0,V_line_0,G):3
     [C=E+1,C=V__infile_line+2,G=0,F=3,B=7] 
* CE 65: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,G,H,I,J):4
     [E=V__infile_line+1,F=3,B=7] 
* CE 66: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,C,V_crc_0,V_currentSection_0,V_line_0,F):2
     [C>=V__infile_line,F=0,E=3,B=7] 
* CE 67: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,V_crc_0,V_currentSection_0,V_line_0,G):3
     [C=E+1,C=V__infile_line+1,G=0,F=3,B=7] 
* CE 68: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,C,F,G,H,I):4
     [E=3,B=7] 
* CE 69: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,V_crc_0,V_currentSection_0,V_line_0,G):2
     [C>=E,V_currentSection_0+1=D,E=V__infile_line+1,G=0,F=3,B=6] 
* CE 70: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,V_crc_0,V_currentSection_0,V_line_0,G):3
     [C=E+1,V_currentSection_0+1=D,C=V__infile_line+2,G=0,F=3,B=6] 
* CE 71: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,G,H,I,J):4
     [H+1=D,E=V__infile_line+1,F=3,B=6] 
* CE 72: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,C,V_crc_0,V_currentSection_0,V_line_0,F):2
     [C>=V__infile_line,V_currentSection_0+1=D,F=0,E=3,B=6] 
* CE 73: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,V_crc_0,V_currentSection_0,V_line_0,G):3
     [C=E+1,V_currentSection_0+1=D,C=V__infile_line+1,G=0,F=3,B=6] 
* CE 74: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,C,F,G,H,I):4
     [G+1=D,E=3,B=6] 
* CE 75: eval_armordecode_bb1_in(A,B,C,D,E,F,C) = 1+ eval_armordecode_bb7_in(G,B,C,D,H,F,B,C,D,I):2
     [F>=G,G=A+1,I=0,H=3,E=5] 
* CE 76: eval_armordecode_bb1_in(A,B,C,D,E,F,C) = 1+ eval_armordecode_bb7_in(G,B,C,D,H,F,B,C,D,I):3
     [F=G+1,F=A+2,I=0,H=3,E=5] 
* CE 77: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,G,D,H,I):4
     [E=V__infile_line+1,F=3,B=5] 
* CE 78: eval_armordecode_bb1_in(A,B,C,D,E,F,C) = 1+ eval_armordecode_bb7_in(A,B,C,D,G,F,B,C,D,H):2
     [F>=A,H=0,G=3,E=5] 
* CE 79: eval_armordecode_bb1_in(A,B,C,D,E,F,C) = 1+ eval_armordecode_bb7_in(G,B,C,D,H,F,B,C,D,I):3
     [F=G+1,F=A+1,I=0,H=3,E=5] 
* CE 80: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,C,F,D,G,H):4
     [E=3,B=5] 
* CE 81: eval_armordecode_bb1_in(A,B,C,D,E,A,F) = 0
     [E=4] 
* CE 82: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 0
     [C=V__infile_line+1,B=4] 
* CE 83: eval_armordecode_bb1_in(A,B,C,D,E,F,C) = 1+ eval_armordecode_bb7_in(G,B,C,D,H,F,C,I,J,K):1
     [F>=G,G=A+1,H=2,E=2] 
* CE 84: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,C,D,G,H,I):4
     [E=V__infile_line+1,F=2,B=2] 
* CE 85: eval_armordecode_bb1_in(A,B,C,D,E,F,C) = 1+ eval_armordecode_bb7_in(A,B,C,D,G,F,C,H,I,J):1
     [F>=A,G=2,E=2] 
* CE 86: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,C,D,F,G,H):4
     [E=2,B=2] 
* CE 87: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb1_in(V__infile_line,E,V_currentSection_0,F,B,C,D)
     [F=V_line_0+1] 
* CE 88: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 1+ eval_armordecode_bb1_in(E,F,V_currentSection_0,G,B,C,D)
     [G=V_line_0+1,E=V__infile_line+1] 
* CE 89: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 2+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,G,V_crc_0,V_currentSection_0,V_line_0,H):2+ eval_armordecode_bb1_in(G,I,J,K,B,C,D)
     [G>=E,V_line_0+1=K,V_currentSection_0+1=J,E=V__infile_line+1,I=11994318,H=0,F=3] 
* CE 90: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 2+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,G,V_crc_0,V_currentSection_0,V_line_0,H):3+ eval_armordecode_bb1_in(G,I,J,K,B,C,D)
     [V_line_0+1=K,V_currentSection_0+1=J,G=E+1,G=V__infile_line+2,I=11994318,H=0,F=3] 
* CE 91: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 2+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,G,H,I,J,K):4
     [L=J+1,M=I+1,E=V__infile_line+1,N=11994318,F=3] 
* CE 92: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 2+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,F,V_crc_0,V_currentSection_0,V_line_0,G):2+ eval_armordecode_bb1_in(F,H,I,J,B,C,D)
     [F>=V__infile_line,V_line_0+1=J,V_currentSection_0+1=I,H=11994318,G=0,E=3] 
* CE 93: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 2+ eval_armordecode_bb7_in(E,V_crc_0,V_currentSection_0,V_line_0,F,G,V_crc_0,V_currentSection_0,V_line_0,H):3+ eval_armordecode_bb1_in(G,I,J,K,B,C,D)
     [V_line_0+1=K,V_currentSection_0+1=J,G=E+1,G=V__infile_line+1,I=11994318,H=0,F=3] 
* CE 94: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) = 2+ eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,E,F,G,H,I,J):4
     [K=I+1,L=H+1,M=11994318,E=3] 

### Cost equations --> "Loop" of eval_armordecode_bb1_in/7 
* CEs [59,62,65,68,71,74,77,80,84,86,91,94] --> Loop 43 
* CEs [87] --> Loop 44 
* CEs [88] --> Loop 45 
* CEs [93] --> Loop 46 
* CEs [89,90,92] --> Loop 47 
* CEs [51] --> Loop 48 
* CEs [52] --> Loop 49 
* CEs [53] --> Loop 50 
* CEs [54] --> Loop 51 
* CEs [55] --> Loop 52 
* CEs [56] --> Loop 53 
* CEs [61] --> Loop 54 
* CEs [57,58,60] --> Loop 55 
* CEs [67] --> Loop 56 
* CEs [63,64,66] --> Loop 57 
* CEs [73] --> Loop 58 
* CEs [69,70,72] --> Loop 59 
* CEs [79] --> Loop 60 
* CEs [75,76,78] --> Loop 61 
* CEs [81] --> Loop 62 
* CEs [82] --> Loop 63 
* CEs [83,85] --> Loop 64 

#### Loops of eval_armordecode_bb1_in/7 
* Loop 43: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) [] 
* Loop 44: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D)->  eval_armordecode_bb1_in(V__infile_line,V_crc_0',V_currentSection_0,V_line_0',B,C,D)
                  [V_line_0+1=V_line_0'] 
* Loop 45: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D)->  eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0,V_line_0',B,C,D)
                  [V_line_0+1=V_line_0',V__infile_line+1=V__infile_line'] 
* Loop 46: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D)->  eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B,C,D)
                  [V_line_0+1=V_line_0',V_currentSection_0+1=V_currentSection_0',V__infile_line+1=V__infile_line',V_crc_0'=11994318] 
* Loop 47: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D)->  eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B,C,D)
                  [V__infile_line'>=V__infile_line,V_line_0+1=V_line_0',V_currentSection_0+1=V_currentSection_0',V_crc_0'=11994318] 
* Loop 48: eval_armordecode_bb1_in(A,B,C,D,E,A,F) [E=11] 
* Loop 49: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) [V__infile_line+1=C,B=11] 
* Loop 50: eval_armordecode_bb1_in(A,B,C,D,E,A,D) [E=10] 
* Loop 51: eval_armordecode_bb1_in(A,B,C,D,E,F,D) [A+1=F,E=10] 
* Loop 52: eval_armordecode_bb1_in(A,B,C,D,E,A,D) [E=9] 
* Loop 53: eval_armordecode_bb1_in(A,B,C,D,E,F,D) [A+1=F,E=9] 
* Loop 54: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) [V_currentSection_0+1=D,V__infile_line+1=C,B=8] 
* Loop 55: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) [C>=V__infile_line,V_currentSection_0+1=D,B=8] 
* Loop 56: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) [V__infile_line+1=C,B=7] 
* Loop 57: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) [C>=V__infile_line,B=7] 
* Loop 58: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) [V_currentSection_0+1=D,V__infile_line+1=C,B=6] 
* Loop 59: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) [C>=V__infile_line,V_currentSection_0+1=D,B=6] 
* Loop 60: eval_armordecode_bb1_in(A,B,C,D,E,F,C) [A+1=F,E=5] 
* Loop 61: eval_armordecode_bb1_in(A,B,C,D,E,F,C) [F>=A,E=5] 
* Loop 62: eval_armordecode_bb1_in(A,B,C,D,E,A,F) [E=4] 
* Loop 63: eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) [V__infile_line+1=C,B=4] 
* Loop 64: eval_armordecode_bb1_in(A,B,C,D,E,F,C) [F>=A,E=2] 

### Ranking functions of CR eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) 

#### Partial ranking functions of CR eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) 


### Resulting Chains:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) 
* [[44,45,46,47]]...
* [[44,45,46,47],64]
* [[44,45,46,47],63]
* [[44,45,46,47],62]
* [[44,45,46,47],61]
* [[44,45,46,47],60]
* [[44,45,46,47],59]
* [[44,45,46,47],58]
* [[44,45,46,47],57]
* [[44,45,46,47],56]
* [[44,45,46,47],55]
* [[44,45,46,47],54]
* [[44,45,46,47],53]
* [[44,45,46,47],52]
* [[44,45,46,47],51]
* [[44,45,46,47],50]
* [[44,45,46,47],49]
* [[44,45,46,47],48]
* [[44,45,46,47],43]...
* [64]
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [43]...


### Merging Chains  eval_armordecode_bb1_in/7 into  External patterns of execution 
* [[64],[64,[44,45,46,47]]] --> 1 
* [[62],[62,[44,45,46,47]],[63,[44,45,46,47]]] --> 2 
* [[63]] --> 3 
* [[60],[61],[60,[44,45,46,47]],[61,[44,45,46,47]]] --> 4 
* [[58],[59],[58,[44,45,46,47]],[59,[44,45,46,47]]] --> 5 
* [[56],[57],[56,[44,45,46,47]],[57,[44,45,46,47]]] --> 6 
* [[54],[55],[54,[44,45,46,47]],[55,[44,45,46,47]]] --> 7 
* [[52]] --> 8 
* [[53]] --> 9 
* [[52,[44,45,46,47]],[53,[44,45,46,47]]] --> 10 
* [[50]] --> 11 
* [[51]] --> 12 
* [[50,[44,45,46,47]],[51,[44,45,46,47]]] --> 13 
* [[48],[48,[44,45,46,47]],[49,[44,45,46,47]]] --> 14 
* [[49]] --> 15 
* [[[44,45,46,47]]] --> 16 
* [[43],[43,[44,45,46,47]]] --> 17 


### Specialization of cost equations eval_armordecode_bb45_in/2 
* CE 42 is refined into CE [95] 


#### Refined cost equations eval_armordecode_bb45_in/2 
* CE 95: eval_armordecode_bb45_in(V__infile_line,B) = 0
     [] 

### Cost equations --> "Loop" of eval_armordecode_bb45_in/2 
* CEs [95] --> Loop 65 

#### Loops of eval_armordecode_bb45_in/2 
* Loop 65: eval_armordecode_bb45_in(V__infile_line,B) [] 

### Ranking functions of CR eval_armordecode_bb45_in(V__infile_line,B) 

#### Partial ranking functions of CR eval_armordecode_bb45_in(V__infile_line,B) 


### Resulting Chains:eval_armordecode_bb45_in(V__infile_line,B) 
* [65]


### Merging Chains  eval_armordecode_bb45_in/2 into  External patterns of execution 
* [[65]] --> 1 


### Specialization of cost equations eval_armordecode_45/2 
* CE 43 is refined into CE [96] 


#### Refined cost equations eval_armordecode_45/2 
* CE 96: eval_armordecode_45(V__infile_line,B) = 0+ eval_armordecode_bb45_in(V__infile_line,B):1
     [] 

### Cost equations --> "Loop" of eval_armordecode_45/2 
* CEs [96] --> Loop 66 

#### Loops of eval_armordecode_45/2 
* Loop 66: eval_armordecode_45(V__infile_line,B) [] 

### Ranking functions of CR eval_armordecode_45(V__infile_line,B) 

#### Partial ranking functions of CR eval_armordecode_45(V__infile_line,B) 


### Resulting Chains:eval_armordecode_45(V__infile_line,B) 
* [66]


### Merging Chains  eval_armordecode_45/2 into  External patterns of execution 
* [[66]] --> 1 


### Specialization of cost equations eval_armordecode_125/2 
* CE 44 is refined into CE [97] 


#### Refined cost equations eval_armordecode_125/2 
* CE 97: eval_armordecode_125(V__infile_line,B) = 0+ eval_armordecode_bb45_in(V__infile_line,B):1
     [] 

### Cost equations --> "Loop" of eval_armordecode_125/2 
* CEs [97] --> Loop 67 

#### Loops of eval_armordecode_125/2 
* Loop 67: eval_armordecode_125(V__infile_line,B) [] 

### Ranking functions of CR eval_armordecode_125(V__infile_line,B) 

#### Partial ranking functions of CR eval_armordecode_125(V__infile_line,B) 


### Resulting Chains:eval_armordecode_125(V__infile_line,B) 
* [67]


### Merging Chains  eval_armordecode_125/2 into  External patterns of execution 
* [[67]] --> 1 


### Specialization of cost equations eval_armordecode_bb48_in/2 
* CE 45 is refined into CE [98] 


#### Refined cost equations eval_armordecode_bb48_in/2 
* CE 98: eval_armordecode_bb48_in(V__infile_line,B) = 0
     [] 

### Cost equations --> "Loop" of eval_armordecode_bb48_in/2 
* CEs [98] --> Loop 68 

#### Loops of eval_armordecode_bb48_in/2 
* Loop 68: eval_armordecode_bb48_in(V__infile_line,B) [] 

### Ranking functions of CR eval_armordecode_bb48_in(V__infile_line,B) 

#### Partial ranking functions of CR eval_armordecode_bb48_in(V__infile_line,B) 


### Resulting Chains:eval_armordecode_bb48_in(V__infile_line,B) 
* [68]


### Merging Chains  eval_armordecode_bb48_in/2 into  External patterns of execution 
* [[68]] --> 1 


### Specialization of cost equations eval_armordecode_bb40_in/2 
* CE 40 is refined into CE [99] 
* CE 41 is refined into CE [100] 


#### Refined cost equations eval_armordecode_bb40_in/2 
* CE 99: eval_armordecode_bb40_in(V__infile_line,B) = 0+ eval_armordecode_125(V__infile_line,B):1
     [] 
* CE 100: eval_armordecode_bb40_in(V__infile_line,B) = 0+ eval_armordecode_bb48_in(V__infile_line,B):1
     [] 

### Cost equations --> "Loop" of eval_armordecode_bb40_in/2 
* CEs [99,100] --> Loop 69 

#### Loops of eval_armordecode_bb40_in/2 
* Loop 69: eval_armordecode_bb40_in(V__infile_line,B) [] 

### Ranking functions of CR eval_armordecode_bb40_in(V__infile_line,B) 

#### Partial ranking functions of CR eval_armordecode_bb40_in(V__infile_line,B) 


### Resulting Chains:eval_armordecode_bb40_in(V__infile_line,B) 
* [69]


### Merging Chains  eval_armordecode_bb40_in/2 into  External patterns of execution 
* [[69]] --> 1 


### Specialization of cost equations loop_cont_eval_armordecode_bb1_in/4 
* CE 33 is refined into CE [101] 
* CE 32 is refined into CE [102] 
* CE 31 is refined into CE [103] 
* CE 30 is refined into CE [104] 
* CE 29 is refined into CE [105] 
* CE 28 is refined into CE [106] 
* CE 27 is refined into CE [107] 
* CE 26 is refined into CE [108] 
* CE 34 is refined into CE [109] 


#### Refined cost equations loop_cont_eval_armordecode_bb1_in/4 
* CE 101: loop_cont_eval_armordecode_bb1_in(D,A,B,C) = 0+ eval_armordecode_bb40_in(A,C):1
     [D=11] 
* CE 102: loop_cont_eval_armordecode_bb1_in(D,A,B,C) = 0+ eval_armordecode_bb45_in(A,C):1
     [D=10] 
* CE 103: loop_cont_eval_armordecode_bb1_in(D,A,B,C) = 0+ eval_armordecode_bb45_in(A,C):1
     [D=9] 
* CE 104: loop_cont_eval_armordecode_bb1_in(D,A,B,C) = 0+ eval_armordecode_bb45_in(A,C):1
     [D=8] 
* CE 105: loop_cont_eval_armordecode_bb1_in(D,A,B,C) = 0+ eval_armordecode_bb45_in(A,C):1
     [D=7] 
* CE 106: loop_cont_eval_armordecode_bb1_in(D,A,B,C) = 0+ eval_armordecode_45(A,C):1
     [D=6] 
* CE 107: loop_cont_eval_armordecode_bb1_in(D,A,B,C) = 0+ eval_armordecode_bb45_in(A,C):1
     [D=5] 
* CE 108: loop_cont_eval_armordecode_bb1_in(D,A,B,C) = 0+ eval_armordecode_bb40_in(A,C):1
     [D=4] 
* CE 109: loop_cont_eval_armordecode_bb1_in(D,A,B,C) = 0
     [D=2] 

### Cost equations --> "Loop" of loop_cont_eval_armordecode_bb1_in/4 
* CEs [101] --> Loop 70 
* CEs [102] --> Loop 71 
* CEs [103] --> Loop 72 
* CEs [104] --> Loop 73 
* CEs [105] --> Loop 74 
* CEs [106] --> Loop 75 
* CEs [107] --> Loop 76 
* CEs [108] --> Loop 77 
* CEs [109] --> Loop 78 

#### Loops of loop_cont_eval_armordecode_bb1_in/4 
* Loop 70: loop_cont_eval_armordecode_bb1_in(D,A,B,C) [D=11] 
* Loop 71: loop_cont_eval_armordecode_bb1_in(D,A,B,C) [D=10] 
* Loop 72: loop_cont_eval_armordecode_bb1_in(D,A,B,C) [D=9] 
* Loop 73: loop_cont_eval_armordecode_bb1_in(D,A,B,C) [D=8] 
* Loop 74: loop_cont_eval_armordecode_bb1_in(D,A,B,C) [D=7] 
* Loop 75: loop_cont_eval_armordecode_bb1_in(D,A,B,C) [D=6] 
* Loop 76: loop_cont_eval_armordecode_bb1_in(D,A,B,C) [D=5] 
* Loop 77: loop_cont_eval_armordecode_bb1_in(D,A,B,C) [D=4] 
* Loop 78: loop_cont_eval_armordecode_bb1_in(D,A,B,C) [D=2] 

### Ranking functions of CR loop_cont_eval_armordecode_bb1_in(D,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_armordecode_bb1_in(D,A,B,C) 


### Resulting Chains:loop_cont_eval_armordecode_bb1_in(D,A,B,C) 
* [78]
* [77]
* [76]
* [75]
* [74]
* [73]
* [72]
* [71]
* [70]


### Merging Chains  loop_cont_eval_armordecode_bb1_in/4 into  External patterns of execution 
* [[78]] --> 1 
* [[77]] --> 2 
* [[76]] --> 3 
* [[75]] --> 4 
* [[74]] --> 5 
* [[73]] --> 6 
* [[72]] --> 7 
* [[71]] --> 8 
* [[70]] --> 9 


### Specialization of cost equations eval_armordecode_2/2 
* CE 3 is refined into CE [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126] 


#### Refined cost equations eval_armordecode_2/2 
* CE 110: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):1+ loop_cont_eval_armordecode_bb1_in(I,G,H,B):1
     [G>=V__infile_line,H>=1,I=2,F=2,E=1,D=1,C=11994318] 
* CE 111: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):2+ loop_cont_eval_armordecode_bb1_in(I,G,H,B):2
     [G>=V__infile_line,I=4,F=4,E=1,D=1,C=11994318] 
* CE 112: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(C,D,E,F,G,H,I):3+ loop_cont_eval_armordecode_bb1_in(J,H,I,B):2
     [H=C+1,H=V__infile_line+1,J=4,G=4,F=1,E=1,D=11994318] 
* CE 113: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):4+ loop_cont_eval_armordecode_bb1_in(I,G,H,B):3
     [G>=V__infile_line,H>=1,I=5,F=5,E=1,D=1,C=11994318] 
* CE 114: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):5+ loop_cont_eval_armordecode_bb1_in(I,G,H,B):4
     [G>=V__infile_line,H>=2,I=6,F=6,E=1,D=1,C=11994318] 
* CE 115: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):6+ loop_cont_eval_armordecode_bb1_in(I,G,H,B):5
     [G>=V__infile_line,I=7,F=7,E=1,D=1,C=11994318] 
* CE 116: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):7+ loop_cont_eval_armordecode_bb1_in(I,G,H,B):6
     [G>=V__infile_line,H>=2,I=8,F=8,E=1,D=1,C=11994318] 
* CE 117: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,V__infile_line,G):8+ loop_cont_eval_armordecode_bb1_in(H,V__infile_line,I,B):7
     [I=1,H=9,G=1,F=9,E=1,D=1,C=11994318] 
* CE 118: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(C,D,E,F,G,H,I):9+ loop_cont_eval_armordecode_bb1_in(J,H,K,B):7
     [H=C+1,H=V__infile_line+1,K=1,J=9,I=1,G=9,F=1,E=1,D=11994318] 
* CE 119: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):10+ loop_cont_eval_armordecode_bb1_in(I,G,H,B):7
     [G>=V__infile_line,H>=2,I=9,F=9,E=1,D=1,C=11994318] 
* CE 120: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,V__infile_line,G):11+ loop_cont_eval_armordecode_bb1_in(H,V__infile_line,I,B):8
     [I=1,H=10,G=1,F=10,E=1,D=1,C=11994318] 
* CE 121: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(C,D,E,F,G,H,I):12+ loop_cont_eval_armordecode_bb1_in(J,H,K,B):8
     [H=C+1,H=V__infile_line+1,K=1,J=10,I=1,G=10,F=1,E=1,D=11994318] 
* CE 122: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):13+ loop_cont_eval_armordecode_bb1_in(I,G,H,B):8
     [G>=V__infile_line,H>=2,I=10,F=10,E=1,D=1,C=11994318] 
* CE 123: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):14+ loop_cont_eval_armordecode_bb1_in(I,G,H,B):9
     [G>=V__infile_line,I=11,F=11,E=1,D=1,C=11994318] 
* CE 124: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(C,D,E,F,G,H,I):15+ loop_cont_eval_armordecode_bb1_in(J,H,I,B):9
     [H=C+1,H=V__infile_line+1,J=11,G=11,F=1,E=1,D=11994318] 
* CE 125: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):16
     [E=1,D=1,C=11994318] 
* CE 126: eval_armordecode_2(V__infile_line,B) = 1+ eval_armordecode_bb1_in(V__infile_line,C,D,E,F,G,H):17
     [E=1,D=1,C=11994318] 

### Cost equations --> "Loop" of eval_armordecode_2/2 
* CEs [125,126] --> Loop 79 
* CEs [110,111,112,113,114,115,116,117,118,119,120,121,122,123,124] --> Loop 80 

#### Loops of eval_armordecode_2/2 
* Loop 79: eval_armordecode_2(V__infile_line,B) [] 
* Loop 80: eval_armordecode_2(V__infile_line,B) [] 

### Ranking functions of CR eval_armordecode_2(V__infile_line,B) 

#### Partial ranking functions of CR eval_armordecode_2(V__infile_line,B) 


### Resulting Chains:eval_armordecode_2(V__infile_line,B) 
* [80]
* [79]...


### Merging Chains  eval_armordecode_2/2 into  External patterns of execution 
* [[80]] --> 1 
* [[79]] --> 2 


### Specialization of cost equations eval_armordecode_start/2 
* CE 2 is refined into CE [127,128] 


#### Refined cost equations eval_armordecode_start/2 
* CE 127: eval_armordecode_start(V__infile_line,B) = 0+ eval_armordecode_2(V__infile_line,B):1
     [] 
* CE 128: eval_armordecode_start(V__infile_line,B) = 0+ eval_armordecode_2(V__infile_line,B):2
     [] 

### Cost equations --> "Loop" of eval_armordecode_start/2 
* CEs [128] --> Loop 81 
* CEs [127] --> Loop 82 

#### Loops of eval_armordecode_start/2 
* Loop 81: eval_armordecode_start(V__infile_line,B) [] 
* Loop 82: eval_armordecode_start(V__infile_line,B) [] 

### Ranking functions of CR eval_armordecode_start(V__infile_line,B) 

#### Partial ranking functions of CR eval_armordecode_start(V__infile_line,B) 


### Resulting Chains:eval_armordecode_start(V__infile_line,B) 
* [82]
* [81]...


### Merging Chains  eval_armordecode_start/2 into  External patterns of execution 
* [[82]] --> 1 
* [[81]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [38,39] 

 * loop 38:eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) -> [eval_armordecode_bb7_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D',E',F',G')] 
1
 * loop 39:eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) -> [eval_armordecode_bb7_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D',E',F',G')] 
1
#### Cost of phase [38,39]:eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) -> [eval_armordecode_bb7_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D',E',F',G')] 
2*it(38)+0
#### Cost of phase [38,39]:eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) -> [eval_armordecode_bb7_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D',E',F',G')] 
2*it(38)+0
#### Cost of phase [38,39]:eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) -> [eval_armordecode_bb7_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D',E',F',G')] 
2*it(38)+0
#### Cost of phase [38,39]:eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G) -> [eval_armordecode_bb7_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D',E',F',G')] 
2*it(38)+0
#### Cost of chains of eval_armordecode_bb7_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D,E,F,G):
* Chain [[38,39]]...: 2*it(38)+0
  with precondition: [B>=2,3>=B] 

* Chain [[38,39],42]: 2*it(38)+0
  with precondition: [B=2,V_currentSection_0=D,C>=V__infile_line] 

* Chain [[38,39],41]: 2*it(38)+0
  with precondition: [B=3,G=0,V_crc_0=D,V_currentSection_0=E,V_line_0=F,C>=V__infile_line+1] 

* Chain [[38,39],40]: 2*it(38)+0
  with precondition: [B=3,G=0,V_crc_0=D,V_currentSection_0=E,V_line_0=F,C>=V__infile_line] 

* Chain [42]: 0
  with precondition: [B=2,C=V__infile_line,D=V_currentSection_0] 

* Chain [41]: 0
  with precondition: [B=3,G=0,C=V__infile_line+1,D=V_crc_0,E=V_currentSection_0,F=V_line_0] 

* Chain [40]: 0
  with precondition: [B=3,G=0,C=V__infile_line,D=V_crc_0,E=V_currentSection_0,F=V_line_0] 


#### Cost of loops [44,45,46,47] 

 * loop 44:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
1
 * loop 45:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
1
 * loop 46:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
2
 * loop 47:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
1*s(6)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of phase [44,45,46,47]:eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D) -> [eval_armordecode_bb1_in(V__infile_line',V_crc_0',V_currentSection_0',V_line_0',B',C',D')] 
5*it(44)+0
#### Cost of chains of eval_armordecode_bb1_in(V__infile_line,V_crc_0,V_currentSection_0,V_line_0,B,C,D):
* Chain [[44,45,46,47]]...: 5*it(44)+0
  with precondition: [] 

* Chain [[44,45,46,47],64]: 6*aux(4)+0
  with precondition: [B=2,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0,D>=V_currentSection_0] 

* Chain [[44,45,46,47],63]: 5*it(44)+0
  with precondition: [B=4,V_currentSection_0>=1,C>=V__infile_line+1,V_line_0>=V_currentSection_0] 

* Chain [[44,45,46,47],62]: 5*it(44)+0
  with precondition: [B=4,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0] 

* Chain [[44,45,46,47],61]: 6*aux(5)+0
  with precondition: [B=5,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0,D>=V_currentSection_0] 

* Chain [[44,45,46,47],60]: 5*it(44)+1
  with precondition: [B=5,V_currentSection_0>=1,C>=V__infile_line+1,V_line_0>=V_currentSection_0,D>=V_currentSection_0] 

* Chain [[44,45,46,47],59]: 6*aux(6)+0
  with precondition: [B=6,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0,D>=V_currentSection_0+1] 

* Chain [[44,45,46,47],58]: 5*it(44)+1
  with precondition: [B=6,V_currentSection_0>=1,C>=V__infile_line+1,V_line_0>=V_currentSection_0,D>=V_currentSection_0+1] 

* Chain [[44,45,46,47],57]: 6*aux(7)+0
  with precondition: [B=7,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0] 

* Chain [[44,45,46,47],56]: 5*it(44)+1
  with precondition: [B=7,V_currentSection_0>=1,C>=V__infile_line+1,V_line_0>=V_currentSection_0] 

* Chain [[44,45,46,47],55]: 6*aux(8)+0
  with precondition: [B=8,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0,D>=V_currentSection_0+1] 

* Chain [[44,45,46,47],54]: 5*it(44)+1
  with precondition: [B=8,V_currentSection_0>=1,C>=V__infile_line+1,V_line_0>=V_currentSection_0,D>=V_currentSection_0+1] 

* Chain [[44,45,46,47],53]: 5*it(44)+0
  with precondition: [B=9,V_currentSection_0>=1,C>=V__infile_line+1,V_line_0>=V_currentSection_0,D>=V_line_0+1] 

* Chain [[44,45,46,47],52]: 5*it(44)+0
  with precondition: [B=9,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0,D>=V_line_0+1] 

* Chain [[44,45,46,47],51]: 5*it(44)+0
  with precondition: [B=10,V_currentSection_0>=1,C>=V__infile_line+1,V_line_0>=V_currentSection_0,D>=V_line_0+1] 

* Chain [[44,45,46,47],50]: 5*it(44)+0
  with precondition: [B=10,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0,D>=V_line_0+1] 

* Chain [[44,45,46,47],49]: 5*it(44)+0
  with precondition: [B=11,V_currentSection_0>=1,C>=V__infile_line+1,V_line_0>=V_currentSection_0] 

* Chain [[44,45,46,47],48]: 5*it(44)+0
  with precondition: [B=11,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0] 

* Chain [[44,45,46,47],43]...: 6*aux(9)+0
  with precondition: [V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [64]: 1*aux(4)+0
  with precondition: [B=2,V_currentSection_0=D,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0] 

* Chain [63]: 0
  with precondition: [B=4,C=V__infile_line+1,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [62]: 0
  with precondition: [B=4,C=V__infile_line,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [61]: 1*aux(5)+0
  with precondition: [B=5,V_currentSection_0=D,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0] 

* Chain [60]: 1
  with precondition: [B=5,C=V__infile_line+1,V_currentSection_0=D,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [59]: 1*aux(6)+0
  with precondition: [B=6,V_currentSection_0+1=D,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0] 

* Chain [58]: 1
  with precondition: [B=6,C=V__infile_line+1,V_currentSection_0+1=D,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [57]: 1*aux(7)+0
  with precondition: [B=7,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0] 

* Chain [56]: 1
  with precondition: [B=7,C=V__infile_line+1,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [55]: 1*aux(8)+0
  with precondition: [B=8,V_currentSection_0+1=D,V_currentSection_0>=1,C>=V__infile_line,V_line_0>=V_currentSection_0] 

* Chain [54]: 1
  with precondition: [B=8,C=V__infile_line+1,V_currentSection_0+1=D,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [53]: 0
  with precondition: [B=9,C=V__infile_line+1,V_line_0=D,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [52]: 0
  with precondition: [B=9,C=V__infile_line,V_line_0=D,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [51]: 0
  with precondition: [B=10,C=V__infile_line+1,V_line_0=D,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [50]: 0
  with precondition: [B=10,C=V__infile_line,V_line_0=D,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [49]: 0
  with precondition: [B=11,C=V__infile_line+1,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [48]: 0
  with precondition: [B=11,C=V__infile_line,V_currentSection_0>=1,V_line_0>=V_currentSection_0] 

* Chain [43]...: 1*aux(9)+0
  with precondition: [V_currentSection_0>=1,V_line_0>=V_currentSection_0] 


#### Cost of chains of eval_armordecode_bb45_in(V__infile_line,B):
* Chain [65]: 0
  with precondition: [] 


#### Cost of chains of eval_armordecode_45(V__infile_line,B):
* Chain [66]: 0
  with precondition: [] 


#### Cost of chains of eval_armordecode_125(V__infile_line,B):
* Chain [67]: 0
  with precondition: [] 


#### Cost of chains of eval_armordecode_bb48_in(V__infile_line,B):
* Chain [68]: 0
  with precondition: [] 


#### Cost of chains of eval_armordecode_bb40_in(V__infile_line,B):
* Chain [69]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_armordecode_bb1_in(D,A,B,C):
* Chain [78]: 0
  with precondition: [D=2] 

* Chain [77]: 0
  with precondition: [D=4] 

* Chain [76]: 0
  with precondition: [D=5] 

* Chain [75]: 0
  with precondition: [D=6] 

* Chain [74]: 0
  with precondition: [D=7] 

* Chain [73]: 0
  with precondition: [D=8] 

* Chain [72]: 0
  with precondition: [D=9] 

* Chain [71]: 0
  with precondition: [D=10] 

* Chain [70]: 0
  with precondition: [D=11] 


#### Cost of chains of eval_armordecode_2(V__infile_line,B):
* Chain [80]: 1*aux(20)+0
  with precondition: [] 

* Chain [79]...: 1*aux(21)+0
  with precondition: [] 


#### Cost of chains of eval_armordecode_start(V__infile_line,B):
* Chain [82]: 1*s(65)+0
  with precondition: [] 

* Chain [81]...: 1*s(66)+0
  with precondition: [] 


Closed-form bounds of eval_armordecode_start(V__infile_line,B): 
-------------------------------------
* Chain [82] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [81]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_armordecode_start(V__infile_line,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 191 ms.
* Invariants computed in 475 ms.
   - Backward Invariants 388 ms.
   - Transitive Invariants 24 ms.
* Refinement performed in 424 ms.
* Termination proved in 16 ms.
* Upper bounds computed in 482 ms.
   - Equation cost structures 206 ms.
   - Phase cost structures 71 ms.
   - Chain cost structures 202 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 1745 ms.

