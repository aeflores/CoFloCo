Warning: Ignored call to eval_cie_load_common_cache_stop/1 in equation eval_cie_load_common_cache_bb9_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_cie_load_common_cache_10/4,eval_cie_load_common_cache_9/4,eval_cie_load_common_cache_bb3_in/4]
1. recursive  : [eval_cie_load_common_cache_bb1_in/2,loop_cont_eval_cie_load_common_cache_bb3_in/3]
2. non_recursive  : [eval_cie_load_common_cache_bb9_in/1]
3. non_recursive  : [eval_cie_load_common_cache_23/1]
4. non_recursive  : [eval_cie_load_common_cache_22/1]
5. non_recursive  : [eval_cie_load_common_cache_21/1]
6. non_recursive  : [eval_cie_load_common_cache_20/1]
7. non_recursive  : [eval_cie_load_common_cache_19/1]
8. non_recursive  : [loop_cont_eval_cie_load_common_cache_bb1_in/2]
9. non_recursive  : [eval_cie_load_common_cache_4/1]
10. non_recursive  : [eval_cie_load_common_cache_3/1]
11. non_recursive  : [eval_cie_load_common_cache_2/1]
12. non_recursive  : [eval_cie_load_common_cache_1/1]
13. non_recursive  : [eval_cie_load_common_cache_0/1]
14. non_recursive  : [eval_cie_load_common_cache_bb0_in/1]
15. non_recursive  : [eval_cie_load_common_cache_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cie_load_common_cache_bb3_in/4
1. SCC is partially evaluated into eval_cie_load_common_cache_bb1_in/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_cie_load_common_cache_20/1
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into loop_cont_eval_cie_load_common_cache_bb1_in/2
9. SCC is partially evaluated into eval_cie_load_common_cache_4/1
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_cie_load_common_cache_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cie_load_common_cache_bb3_in/4 
* CE 10 is refined into CE [12] 
* CE 9 is refined into CE [13] 


#### Refined cost equations eval_cie_load_common_cache_bb3_in/4 
* CE 12: eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C) = 0
     [V_j_0>=3,511>=V_i_0,V_i_0+1=C,B=2] 
* CE 13: eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C) = 1+ eval_cie_load_common_cache_bb3_in(V_i_0,D,E,C)
     [V_j_0>=0,2>=V_j_0,511>=V_i_0,V_j_0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_cie_load_common_cache_bb3_in/4 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_cie_load_common_cache_bb3_in/4 
* Loop 11: eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C)->  eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0',B',C)
                  [V_j_0>=0,2>=V_j_0,511>=V_i_0,V_j_0+1=V_j_0',B'=2,B=2] 
* Loop 12: eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C) [V_j_0>=3,511>=V_i_0,V_i_0+1=C,B=2] 

### Ranking functions of CR eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C) 
* RF of phase [11]: [-V_j_0+3]

#### Partial ranking functions of CR eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -V_j_0+3


### Resulting Chains:eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C) 
* [[11],12]


### Merging Chains  eval_cie_load_common_cache_bb3_in/4 into  External patterns of execution 
* [[12,[11]]] --> 1 


### Specialization of cost equations eval_cie_load_common_cache_bb1_in/2 
* CE 6 is refined into CE [14] 
* CE 5 is refined into CE [15] 
* CE 4 is refined into CE [16] 


#### Refined cost equations eval_cie_load_common_cache_bb1_in/2 
* CE 14: eval_cie_load_common_cache_bb1_in(V_i_0,B) = 0
     [V_i_0>=512,B=4] 
* CE 15: eval_cie_load_common_cache_bb1_in(V_i_0,B) = 0
     [V_i_0>=512,B=3] 
* CE 16: eval_cie_load_common_cache_bb1_in(V_i_0,B) = 2+ eval_cie_load_common_cache_bb3_in(C,D,E,F):1+ eval_cie_load_common_cache_bb1_in(F,B)
     [512>=F,F=C+1,F=V_i_0+1,E=2,D=0] 

### Cost equations --> "Loop" of eval_cie_load_common_cache_bb1_in/2 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_cie_load_common_cache_bb1_in/2 
* Loop 13: eval_cie_load_common_cache_bb1_in(V_i_0,B)->  eval_cie_load_common_cache_bb1_in(V_i_0',B)
                  [511>=V_i_0,V_i_0+1=V_i_0'] 
* Loop 14: eval_cie_load_common_cache_bb1_in(V_i_0,B) [V_i_0>=512,B=4] 
* Loop 15: eval_cie_load_common_cache_bb1_in(V_i_0,B) [V_i_0>=512,B=3] 

### Ranking functions of CR eval_cie_load_common_cache_bb1_in(V_i_0,B) 
* RF of phase [13]: [-V_i_0+512]

#### Partial ranking functions of CR eval_cie_load_common_cache_bb1_in(V_i_0,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    -V_i_0+512


### Resulting Chains:eval_cie_load_common_cache_bb1_in(V_i_0,B) 
* [[13],15]
* [[13],14]


### Merging Chains  eval_cie_load_common_cache_bb1_in/2 into  External patterns of execution 
* [[15,[13]]] --> 1 
* [[14,[13]]] --> 2 


### Specialization of cost equations eval_cie_load_common_cache_20/1 
* CE 11 is refined into CE [17] 


#### Refined cost equations eval_cie_load_common_cache_20/1 
* CE 17: eval_cie_load_common_cache_20(B) = 0
     [] 

### Cost equations --> "Loop" of eval_cie_load_common_cache_20/1 
* CEs [17] --> Loop 16 

#### Loops of eval_cie_load_common_cache_20/1 
* Loop 16: eval_cie_load_common_cache_20(B) [] 

### Ranking functions of CR eval_cie_load_common_cache_20(B) 

#### Partial ranking functions of CR eval_cie_load_common_cache_20(B) 


### Resulting Chains:eval_cie_load_common_cache_20(B) 
* [16]


### Merging Chains  eval_cie_load_common_cache_20/1 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations loop_cont_eval_cie_load_common_cache_bb1_in/2 
* CE 8 is refined into CE [18] 
* CE 7 is refined into CE [19] 


#### Refined cost equations loop_cont_eval_cie_load_common_cache_bb1_in/2 
* CE 18: loop_cont_eval_cie_load_common_cache_bb1_in(C,A) = 0+ eval_cie_load_common_cache_20(A):1
     [C=4] 
* CE 19: loop_cont_eval_cie_load_common_cache_bb1_in(C,A) = 0
     [C=3] 

### Cost equations --> "Loop" of loop_cont_eval_cie_load_common_cache_bb1_in/2 
* CEs [18] --> Loop 17 
* CEs [19] --> Loop 18 

#### Loops of loop_cont_eval_cie_load_common_cache_bb1_in/2 
* Loop 17: loop_cont_eval_cie_load_common_cache_bb1_in(C,A) [C=4] 
* Loop 18: loop_cont_eval_cie_load_common_cache_bb1_in(C,A) [C=3] 

### Ranking functions of CR loop_cont_eval_cie_load_common_cache_bb1_in(C,A) 

#### Partial ranking functions of CR loop_cont_eval_cie_load_common_cache_bb1_in(C,A) 


### Resulting Chains:loop_cont_eval_cie_load_common_cache_bb1_in(C,A) 
* [18]
* [17]


### Merging Chains  loop_cont_eval_cie_load_common_cache_bb1_in/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_cie_load_common_cache_4/1 
* CE 3 is refined into CE [20,21] 


#### Refined cost equations eval_cie_load_common_cache_4/1 
* CE 20: eval_cie_load_common_cache_4(B) = 1+ eval_cie_load_common_cache_bb1_in(C,D):1+ loop_cont_eval_cie_load_common_cache_bb1_in(E,B):1
     [E=3,D=3,C=0] 
* CE 21: eval_cie_load_common_cache_4(B) = 1+ eval_cie_load_common_cache_bb1_in(C,D):2+ loop_cont_eval_cie_load_common_cache_bb1_in(E,B):2
     [E=4,D=4,C=0] 

### Cost equations --> "Loop" of eval_cie_load_common_cache_4/1 
* CEs [20,21] --> Loop 19 

#### Loops of eval_cie_load_common_cache_4/1 
* Loop 19: eval_cie_load_common_cache_4(B) [] 

### Ranking functions of CR eval_cie_load_common_cache_4(B) 

#### Partial ranking functions of CR eval_cie_load_common_cache_4(B) 


### Resulting Chains:eval_cie_load_common_cache_4(B) 
* [19]


### Merging Chains  eval_cie_load_common_cache_4/1 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations eval_cie_load_common_cache_start/1 
* CE 2 is refined into CE [22] 


#### Refined cost equations eval_cie_load_common_cache_start/1 
* CE 22: eval_cie_load_common_cache_start(B) = 0+ eval_cie_load_common_cache_4(B):1
     [] 

### Cost equations --> "Loop" of eval_cie_load_common_cache_start/1 
* CEs [22] --> Loop 20 

#### Loops of eval_cie_load_common_cache_start/1 
* Loop 20: eval_cie_load_common_cache_start(B) [] 

### Ranking functions of CR eval_cie_load_common_cache_start(B) 

#### Partial ranking functions of CR eval_cie_load_common_cache_start(B) 


### Resulting Chains:eval_cie_load_common_cache_start(B) 
* [20]


### Merging Chains  eval_cie_load_common_cache_start/1 into  External patterns of execution 
* [[20]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C) -> [eval_cie_load_common_cache_bb3_in(V_i_0',V_j_0',B',C')] 
1
#### Cost of phase [11]:eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C) -> [eval_cie_load_common_cache_bb3_in(V_i_0',V_j_0',B',C')] 
1*it(11)+0
  Such that:it(11) =< -V_j_0+3
it(11) =< -V_j_0+V_j_0'

#### Cost of chains of eval_cie_load_common_cache_bb3_in(V_i_0,V_j_0,B,C):
* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< -V_j_0+3

  with precondition: [B=2,V_i_0+1=C,511>=V_i_0,2>=V_j_0,V_j_0>=0] 


#### Cost of loops [13] 

 * loop 13:eval_cie_load_common_cache_bb1_in(V_i_0,B) -> [eval_cie_load_common_cache_bb1_in(V_i_0',B')] 
1*s(2)+2
  Such that:s(2) =< 3

#### Cost of phase [13]:eval_cie_load_common_cache_bb1_in(V_i_0,B) -> [eval_cie_load_common_cache_bb1_in(V_i_0',B')] 
2*it(13)+1*s(3)+0
  Such that:aux(2) =< -V_i_0+512
aux(3) =< -V_i_0+V_i_0'
aux(1) =< aux(2)
it(13) =< aux(2)
aux(1) =< aux(3)
it(13) =< aux(3)
s(3) =< aux(1)*3

#### Cost of phase [13]:eval_cie_load_common_cache_bb1_in(V_i_0,B) -> [eval_cie_load_common_cache_bb1_in(V_i_0',B')] 
2*it(13)+1*s(3)+0
  Such that:aux(2) =< -V_i_0+512
aux(3) =< -V_i_0+V_i_0'
aux(1) =< aux(2)
it(13) =< aux(2)
aux(1) =< aux(3)
it(13) =< aux(3)
s(3) =< aux(1)*3

#### Cost of chains of eval_cie_load_common_cache_bb1_in(V_i_0,B):
* Chain [[13],15]: 2*it(13)+1*s(3)+0
  Such that:aux(4) =< -V_i_0+512
it(13) =< aux(4)
s(3) =< aux(4)*3

  with precondition: [B=3,511>=V_i_0] 

* Chain [[13],14]: 2*it(13)+1*s(3)+0
  Such that:aux(5) =< -V_i_0+512
it(13) =< aux(5)
s(3) =< aux(5)*3

  with precondition: [B=4,511>=V_i_0] 


#### Cost of chains of eval_cie_load_common_cache_20(B):
* Chain [16]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_cie_load_common_cache_bb1_in(C,A):
* Chain [18]: 0
  with precondition: [C=3] 

* Chain [17]: 0
  with precondition: [C=4] 


#### Cost of chains of eval_cie_load_common_cache_4(B):
* Chain [19]: 5121
  with precondition: [] 


#### Cost of chains of eval_cie_load_common_cache_start(B):
* Chain [20]: 5121
  with precondition: [] 


Closed-form bounds of eval_cie_load_common_cache_start(B): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: 5121 
    - Complexity: constant 

### Maximum cost of eval_cie_load_common_cache_start(B): 5121 
Asymptotic class: constant 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 37 ms.
   - Backward Invariants 16 ms.
   - Transitive Invariants 9 ms.
* Refinement performed in 56 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 55 ms.
   - Equation cost structures 20 ms.
   - Phase cost structures 18 ms.
   - Chain cost structures 22 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 235 ms.

