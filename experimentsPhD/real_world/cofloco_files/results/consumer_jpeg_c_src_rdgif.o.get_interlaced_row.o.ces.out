Warning: Ignored call to eval_get_interlaced_row_stop/1 in equation loop_cont_eval_get_interlaced_row_bb6_in/2 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_get_interlaced_row_bb6_in/2]
1. non_recursive  : [loop_cont_eval_get_interlaced_row_bb6_in/2]
2. non_recursive  : [eval_get_interlaced_row_22/1]
3. non_recursive  : [eval_get_interlaced_row_21/1]
4. non_recursive  : [eval_get_interlaced_row_bb5_in/1]
5. non_recursive  : [eval_get_interlaced_row_NewDefault_in/1]
6. non_recursive  : [eval_get_interlaced_row_bb3_in/1]
7. non_recursive  : [eval_get_interlaced_row_bb0_in/1]
8. non_recursive  : [eval_get_interlaced_row_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_get_interlaced_row_bb6_in/2
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_get_interlaced_row_22/1
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_get_interlaced_row_bb0_in/1
8. SCC is partially evaluated into eval_get_interlaced_row_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_get_interlaced_row_bb6_in/2 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_get_interlaced_row_bb6_in/2 
* CE 7: eval_get_interlaced_row_bb6_in(V_col_0,B) = 0
     [0>=V_col_0,B=2] 
* CE 8: eval_get_interlaced_row_bb6_in(V_col_0,B) = 1+ eval_get_interlaced_row_bb6_in(C,D)
     [V_col_0>=1,V_col_0=C+1,D=2,B=2] 

### Cost equations --> "Loop" of eval_get_interlaced_row_bb6_in/2 
* CEs [8] --> Loop 6 
* CEs [7] --> Loop 7 

#### Loops of eval_get_interlaced_row_bb6_in/2 
* Loop 6: eval_get_interlaced_row_bb6_in(V_col_0,B)->  eval_get_interlaced_row_bb6_in(V_col_0',B')
                  [V_col_0>=1,V_col_0=V_col_0'+1,B'=2,B=2] 
* Loop 7: eval_get_interlaced_row_bb6_in(V_col_0,B) [0>=V_col_0,B=2] 

### Ranking functions of CR eval_get_interlaced_row_bb6_in(V_col_0,B) 
* RF of phase [6]: [V_col_0]

#### Partial ranking functions of CR eval_get_interlaced_row_bb6_in(V_col_0,B) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_col_0


### Resulting Chains:eval_get_interlaced_row_bb6_in(V_col_0,B) 
* [[6],7]
* [7]


### Merging Chains  eval_get_interlaced_row_bb6_in/2 into  External patterns of execution 
* [[7]] --> 1 
* [[7,[6]]] --> 2 


### Specialization of cost equations eval_get_interlaced_row_22/1 
* CE 4 is refined into CE [9,10] 


#### Refined cost equations eval_get_interlaced_row_22/1 
* CE 9: eval_get_interlaced_row_22(B) = 1+ eval_get_interlaced_row_bb6_in(C,D):1
     [0>=C,D=2] 
* CE 10: eval_get_interlaced_row_22(B) = 1+ eval_get_interlaced_row_bb6_in(C,D):2
     [C>=1,D=2] 

### Cost equations --> "Loop" of eval_get_interlaced_row_22/1 
* CEs [9,10] --> Loop 8 

#### Loops of eval_get_interlaced_row_22/1 
* Loop 8: eval_get_interlaced_row_22(B) [] 

### Ranking functions of CR eval_get_interlaced_row_22(B) 

#### Partial ranking functions of CR eval_get_interlaced_row_22(B) 


### Resulting Chains:eval_get_interlaced_row_22(B) 
* [8]


### Merging Chains  eval_get_interlaced_row_22/1 into  External patterns of execution 
* [[8]] --> 1 


### Specialization of cost equations eval_get_interlaced_row_bb0_in/1 
* CE 3 is refined into CE [11] 


#### Refined cost equations eval_get_interlaced_row_bb0_in/1 
* CE 11: eval_get_interlaced_row_bb0_in(B) = 0+ eval_get_interlaced_row_22(B):1
     [] 

### Cost equations --> "Loop" of eval_get_interlaced_row_bb0_in/1 
* CEs [11] --> Loop 9 

#### Loops of eval_get_interlaced_row_bb0_in/1 
* Loop 9: eval_get_interlaced_row_bb0_in(B) [] 

### Ranking functions of CR eval_get_interlaced_row_bb0_in(B) 

#### Partial ranking functions of CR eval_get_interlaced_row_bb0_in(B) 


### Resulting Chains:eval_get_interlaced_row_bb0_in(B) 
* [9]


### Merging Chains  eval_get_interlaced_row_bb0_in/1 into  External patterns of execution 
* [[9]] --> 1 


### Specialization of cost equations eval_get_interlaced_row_start/1 
* CE 2 is refined into CE [12] 


#### Refined cost equations eval_get_interlaced_row_start/1 
* CE 12: eval_get_interlaced_row_start(B) = 0+ eval_get_interlaced_row_bb0_in(B):1
     [] 

### Cost equations --> "Loop" of eval_get_interlaced_row_start/1 
* CEs [12] --> Loop 10 

#### Loops of eval_get_interlaced_row_start/1 
* Loop 10: eval_get_interlaced_row_start(B) [] 

### Ranking functions of CR eval_get_interlaced_row_start(B) 

#### Partial ranking functions of CR eval_get_interlaced_row_start(B) 


### Resulting Chains:eval_get_interlaced_row_start(B) 
* [10]


### Merging Chains  eval_get_interlaced_row_start/1 into  External patterns of execution 
* [[10]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_get_interlaced_row_bb6_in(V_col_0,B) -> [eval_get_interlaced_row_bb6_in(V_col_0',B')] 
1
#### Cost of phase [6]:eval_get_interlaced_row_bb6_in(V_col_0,B) -> [eval_get_interlaced_row_bb6_in(V_col_0',B')] 
1*it(6)+0
  Such that:it(6) =< V_col_0
it(6) =< V_col_0-V_col_0'

#### Cost of chains of eval_get_interlaced_row_bb6_in(V_col_0,B):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< V_col_0

  with precondition: [B=2,V_col_0>=1] 

* Chain [7]: 0
  with precondition: [B=2,0>=V_col_0] 


#### Cost of chains of eval_get_interlaced_row_22(B):
* Chain [8]: 1*aux(1)+0
  with precondition: [] 


#### Cost of chains of eval_get_interlaced_row_bb0_in(B):
* Chain [9]: 1*s(2)+0
  with precondition: [] 


#### Cost of chains of eval_get_interlaced_row_start(B):
* Chain [10]: 1*s(3)+0
  with precondition: [] 


Closed-form bounds of eval_get_interlaced_row_start(B): 
-------------------------------------
* Chain [10] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_get_interlaced_row_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 3 ms.
* Invariants computed in 4 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 8 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 6 ms.
   - Equation cost structures 2 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 1 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 28 ms.

