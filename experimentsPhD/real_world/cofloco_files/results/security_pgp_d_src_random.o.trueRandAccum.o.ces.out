Warning: Ignored call to eval_trueRandAccum_stop/1 in equation eval_trueRandAccum_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_trueRandAccum_14/7,eval_trueRandAccum_15/7,eval_trueRandAccum_16/7,eval_trueRandAccum_17/7,eval_trueRandAccum_18/8,eval_trueRandAccum_19/8,eval_trueRandAccum_20/9,eval_trueRandAccum_21/9,eval_trueRandAccum_bb2_in/6]
1. non_recursive  : [eval_trueRandAccum_bb4_in/1]
2. non_recursive  : [eval_trueRandAccum_29/1]
3. non_recursive  : [eval_trueRandAccum_28/3]
4. non_recursive  : [eval_trueRandAccum_27/3]
5. non_recursive  : [eval_trueRandAccum_26/3]
6. non_recursive  : [eval_trueRandAccum_25/3]
7. non_recursive  : [eval_trueRandAccum_24/3]
8. non_recursive  : [eval_trueRandAccum_23/3]
9. non_recursive  : [loop_cont_eval_trueRandAccum_bb2_in/4]
10. non_recursive  : [eval_trueRandAccum_11/4]
11. non_recursive  : [eval_trueRandAccum_10/4]
12. non_recursive  : [eval_trueRandAccum_9/5]
13. non_recursive  : [eval_trueRandAccum_7/4]
14. non_recursive  : [eval_trueRandAccum_6/4]
15. non_recursive  : [eval_trueRandAccum_bb0_in/4]
16. non_recursive  : [eval_trueRandAccum_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_trueRandAccum_bb2_in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_trueRandAccum_11/4
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_trueRandAccum_bb0_in/4
16. SCC is partially evaluated into eval_trueRandAccum_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_trueRandAccum_bb2_in/6 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_trueRandAccum_bb2_in/6 
* CE 9: eval_trueRandAccum_bb2_in(A,B,C,D,A,E) = 0
     [A>=C,E=0,D=2,B=0] 
* CE 10: eval_trueRandAccum_bb2_in(V__trueRandBits,V__trueRandPending,V__,B,C,D) = 1+ eval_trueRandAccum_bb2_in(V__trueRandBits,E,V__,F,C,D)
     [V__>=V__trueRandBits+1,F=2,E=0,B=2,V__trueRandPending=0] 

### Cost equations --> "Loop" of eval_trueRandAccum_bb2_in/6 
* CEs [10] --> Loop 6 
* CEs [9] --> Loop 7 

#### Loops of eval_trueRandAccum_bb2_in/6 
* Loop 6: eval_trueRandAccum_bb2_in(V__trueRandBits,V__trueRandPending,V__,B,C,D)->  eval_trueRandAccum_bb2_in(V__trueRandBits,V__trueRandPending',V__,B',C,D)
                  [V__>=V__trueRandBits+1,B'=2,V__trueRandPending'=0,B=2,V__trueRandPending=0] 
* Loop 7: eval_trueRandAccum_bb2_in(A,B,C,D,A,E) [A>=C,E=0,D=2,B=0] 

### Ranking functions of CR eval_trueRandAccum_bb2_in(V__trueRandBits,V__trueRandPending,V__,B,C,D) 

#### Partial ranking functions of CR eval_trueRandAccum_bb2_in(V__trueRandBits,V__trueRandPending,V__,B,C,D) 


### Resulting Chains:eval_trueRandAccum_bb2_in(V__trueRandBits,V__trueRandPending,V__,B,C,D) 
* [[6]]...
* [7]


### Merging Chains  eval_trueRandAccum_bb2_in/6 into  External patterns of execution 
* [[7]] --> 1 
* [[[6]]] --> 2 


### Specialization of cost equations eval_trueRandAccum_11/4 
* CE 6 is refined into CE [11,12] 


#### Refined cost equations eval_trueRandAccum_11/4 
* CE 11: eval_trueRandAccum_11(V__trueRandBits,V__trueRandPending,V__,B) = 1+ eval_trueRandAccum_bb2_in(V__trueRandBits,C,V__,D,V__trueRandBits,E):1
     [V__trueRandBits>=V__,E=0,D=2,C=0,V__trueRandPending=0] 
* CE 12: eval_trueRandAccum_11(V__trueRandBits,V__trueRandPending,V__,B) = 1+ eval_trueRandAccum_bb2_in(V__trueRandBits,C,V__,D,E,F):2
     [V__>=V__trueRandBits+1,D=2,C=0,V__trueRandPending=0] 

### Cost equations --> "Loop" of eval_trueRandAccum_11/4 
* CEs [12] --> Loop 8 
* CEs [11] --> Loop 9 

#### Loops of eval_trueRandAccum_11/4 
* Loop 8: eval_trueRandAccum_11(V__trueRandBits,V__trueRandPending,V__,B) [V__>=V__trueRandBits+1,V__trueRandPending=0] 
* Loop 9: eval_trueRandAccum_11(V__trueRandBits,V__trueRandPending,V__,B) [V__trueRandBits>=V__,V__trueRandPending=0] 

### Ranking functions of CR eval_trueRandAccum_11(V__trueRandBits,V__trueRandPending,V__,B) 

#### Partial ranking functions of CR eval_trueRandAccum_11(V__trueRandBits,V__trueRandPending,V__,B) 


### Resulting Chains:eval_trueRandAccum_11(V__trueRandBits,V__trueRandPending,V__,B) 
* [9]
* [8]...


### Merging Chains  eval_trueRandAccum_11/4 into  External patterns of execution 
* [[9]] --> 1 
* [[8]] --> 2 


### Specialization of cost equations eval_trueRandAccum_bb0_in/4 
* CE 3 is refined into CE [13] 
* CE 4 is refined into CE [14,15] 
* CE 5 is refined into CE [16,17] 


#### Refined cost equations eval_trueRandAccum_bb0_in/4 
* CE 13: eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) = 0
     [] 
* CE 14: eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) = 0+ eval_trueRandAccum_11(V__trueRandBits,C,D,B):1
     [V__trueRandBits>=3072,D=3072,C=0] 
* CE 15: eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) = 0+ eval_trueRandAccum_11(V__trueRandBits,C,D,B):2
     [3071>=V__trueRandBits,D=3072,C=0] 
* CE 16: eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) = 0+ eval_trueRandAccum_11(V__trueRandBits,C,D,B):1
     [V__trueRandBits>=D,D=V_count+V__trueRandPending,C=0] 
* CE 17: eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) = 0+ eval_trueRandAccum_11(V__trueRandBits,C,D,B):2
     [D>=V__trueRandBits+1,D=V_count+V__trueRandPending,C=0] 

### Cost equations --> "Loop" of eval_trueRandAccum_bb0_in/4 
* CEs [17] --> Loop 10 
* CEs [15] --> Loop 11 
* CEs [13,14,16] --> Loop 12 

#### Loops of eval_trueRandAccum_bb0_in/4 
* Loop 10: eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) [V_count+V__trueRandPending>=V__trueRandBits+1] 
* Loop 11: eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) [3071>=V__trueRandBits] 
* Loop 12: eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) [] 

### Ranking functions of CR eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) 

#### Partial ranking functions of CR eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) 


### Resulting Chains:eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B) 
* [12]
* [11]...
* [10]...


### Merging Chains  eval_trueRandAccum_bb0_in/4 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 
* [[10]] --> 3 


### Specialization of cost equations eval_trueRandAccum_start/4 
* CE 2 is refined into CE [18,19,20] 


#### Refined cost equations eval_trueRandAccum_start/4 
* CE 18: eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B) = 0+ eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B):1
     [] 
* CE 19: eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B) = 0+ eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B):2
     [3071>=V__trueRandBits] 
* CE 20: eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B) = 0+ eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B):3
     [V_count+V__trueRandPending>=V__trueRandBits+1] 

### Cost equations --> "Loop" of eval_trueRandAccum_start/4 
* CEs [20] --> Loop 13 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 

#### Loops of eval_trueRandAccum_start/4 
* Loop 13: eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B) [V_count+V__trueRandPending>=V__trueRandBits+1] 
* Loop 14: eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B) [3071>=V__trueRandBits] 
* Loop 15: eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B) [] 

### Ranking functions of CR eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B) 

#### Partial ranking functions of CR eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B) 


### Resulting Chains:eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B) 
* [15]
* [14]...
* [13]...


### Merging Chains  eval_trueRandAccum_start/4 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 
* [[13]] --> 3 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_trueRandAccum_bb2_in(V__trueRandBits,V__trueRandPending,V__,B,C,D) -> [eval_trueRandAccum_bb2_in(V__trueRandBits',V__trueRandPending',V__',B',C',D')] 
1
#### Cost of phase [6]:eval_trueRandAccum_bb2_in(V__trueRandBits,V__trueRandPending,V__,B,C,D) -> [eval_trueRandAccum_bb2_in(V__trueRandBits',V__trueRandPending',V__',B',C',D')] 
1*it(6)+0
#### Cost of chains of eval_trueRandAccum_bb2_in(V__trueRandBits,V__trueRandPending,V__,B,C,D):
* Chain [[6]]...: 1*it(6)+0
  with precondition: [V__>=V__trueRandBits+1,V__trueRandPending=0,B=2] 

* Chain [7]: 0
  with precondition: [V__trueRandPending=0,B=2,D=0,V__trueRandBits=C,V__trueRandBits>=V__] 


#### Cost of chains of eval_trueRandAccum_11(V__trueRandBits,V__trueRandPending,V__,B):
* Chain [9]: 1
  with precondition: [V__trueRandPending=0,V__trueRandBits>=V__] 

* Chain [8]...: 1*s(1)+1
  with precondition: [V__trueRandPending=0,V__>=V__trueRandBits+1] 


#### Cost of chains of eval_trueRandAccum_bb0_in(V_count,V__trueRandBits,V__trueRandPending,B):
* Chain [12]: 1
  with precondition: [] 

* Chain [11]...: 1*s(2)+1
  with precondition: [3071>=V__trueRandBits] 

* Chain [10]...: 1*s(3)+1
  with precondition: [V__trueRandPending+V_count>=V__trueRandBits+1] 


#### Cost of chains of eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B):
* Chain [15]: 1
  with precondition: [] 

* Chain [14]...: 1*s(4)+1
  with precondition: [3071>=V__trueRandBits] 

* Chain [13]...: 1*s(5)+1
  with precondition: [V__trueRandPending+V_count>=V__trueRandBits+1] 


Closed-form bounds of eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B): 
-------------------------------------
* Chain [15] with precondition: [] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [14]... with precondition: [3071>=V__trueRandBits] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [13]... with precondition: [V_count+V__trueRandPending>=V__trueRandBits+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_trueRandAccum_start(V_count,V__trueRandBits,V__trueRandPending,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 30 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 23 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 12 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 105 ms.

