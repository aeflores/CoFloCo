Warning: Ignored call to eval_decodeMP3_stop/1 in equation eval_decodeMP3_bb17_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_decodeMP3_bb17_in/1]
1. non_recursive  : [eval_decodeMP3_3/1]
2. non_recursive  : [eval_decodeMP3_2/2]
3. recursive  : [eval_decodeMP3_43/6,eval_decodeMP3_44/6,eval_decodeMP3_55/7,eval_decodeMP3_56/7,eval_decodeMP3_bb12_in/5,eval_decodeMP3_bb9_in/4]
4. non_recursive  : [eval_decodeMP3_63/1]
5. non_recursive  : [eval_decodeMP3_62/2]
6. non_recursive  : [eval_decodeMP3_bb16_in/2]
7. non_recursive  : [eval_decodeMP3_61/2]
8. non_recursive  : [eval_decodeMP3_60/2]
9. non_recursive  : [loop_cont_eval_decodeMP3_bb9_in/3]
10. non_recursive  : [eval_decodeMP3_bb7_in/2]
11. non_recursive  : [eval_decodeMP3_13/2]
12. non_recursive  : [eval_decodeMP3_12/3]
13. non_recursive  : [eval_decodeMP3_11/2]
14. non_recursive  : [eval_decodeMP3_10/2]
15. non_recursive  : [eval_decodeMP3_bb4_in/2]
16. non_recursive  : [eval_decodeMP3_5/2]
17. non_recursive  : [eval_decodeMP3_4/3]
18. non_recursive  : [eval_decodeMP3_bb0_in/3]
19. non_recursive  : [eval_decodeMP3_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_decodeMP3_bb9_in/4
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into loop_cont_eval_decodeMP3_bb9_in/3
10. SCC is partially evaluated into eval_decodeMP3_bb7_in/2
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_decodeMP3_bb4_in/2
16. SCC is partially evaluated into eval_decodeMP3_5/2
17. SCC is completely evaluated into other SCCs
18. SCC is partially evaluated into eval_decodeMP3_bb0_in/3
19. SCC is partially evaluated into eval_decodeMP3_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_decodeMP3_bb9_in/4 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 
* CE 12 is refined into CE [19] 


#### Refined cost equations eval_decodeMP3_bb9_in/4 
* CE 17: eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) = 0
     [B=3] 
* CE 18: eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) = 0
     [B=2] 
* CE 19: eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) = 1+ eval_decodeMP3_bb9_in(D,E,B,C)
     [] 

### Cost equations --> "Loop" of eval_decodeMP3_bb9_in/4 
* CEs [19] --> Loop 11 
* CEs [17] --> Loop 12 
* CEs [18] --> Loop 13 

#### Loops of eval_decodeMP3_bb9_in/4 
* Loop 11: eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C)->  eval_decodeMP3_bb9_in(V__bitindex',V_len_0',B,C)
                  [] 
* Loop 12: eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) [B=3] 
* Loop 13: eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) [B=2] 

### Ranking functions of CR eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) 

#### Partial ranking functions of CR eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) 


### Resulting Chains:eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) 
* [[11]]...
* [[11],13]
* [[11],12]
* [13]
* [12]


### Merging Chains  eval_decodeMP3_bb9_in/4 into  External patterns of execution 
* [[13],[13,[11]]] --> 1 
* [[12],[12,[11]]] --> 2 
* [[[11]]] --> 3 


### Specialization of cost equations loop_cont_eval_decodeMP3_bb9_in/3 
* CE 16 is refined into CE [20] 
* CE 15 is refined into CE [21] 


#### Refined cost equations loop_cont_eval_decodeMP3_bb9_in/3 
* CE 20: loop_cont_eval_decodeMP3_bb9_in(C,A,B) = 0
     [C=3] 
* CE 21: loop_cont_eval_decodeMP3_bb9_in(C,A,B) = 0
     [C=2] 

### Cost equations --> "Loop" of loop_cont_eval_decodeMP3_bb9_in/3 
* CEs [20] --> Loop 14 
* CEs [21] --> Loop 15 

#### Loops of loop_cont_eval_decodeMP3_bb9_in/3 
* Loop 14: loop_cont_eval_decodeMP3_bb9_in(C,A,B) [C=3] 
* Loop 15: loop_cont_eval_decodeMP3_bb9_in(C,A,B) [C=2] 

### Ranking functions of CR loop_cont_eval_decodeMP3_bb9_in(C,A,B) 

#### Partial ranking functions of CR loop_cont_eval_decodeMP3_bb9_in(C,A,B) 


### Resulting Chains:loop_cont_eval_decodeMP3_bb9_in(C,A,B) 
* [15]
* [14]


### Merging Chains  loop_cont_eval_decodeMP3_bb9_in/3 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_decodeMP3_bb7_in/2 
* CE 10 is refined into CE [22] 
* CE 11 is refined into CE [23,24,25] 


#### Refined cost equations eval_decodeMP3_bb7_in/2 
* CE 22: eval_decodeMP3_bb7_in(V__bitindex,B) = 0
     [] 
* CE 23: eval_decodeMP3_bb7_in(V__bitindex,B) = 1+ eval_decodeMP3_bb9_in(C,D,E,F):1+ loop_cont_eval_decodeMP3_bb9_in(G,F,B):1
     [G=2,E=2,D=0,C=0] 
* CE 24: eval_decodeMP3_bb7_in(V__bitindex,B) = 1+ eval_decodeMP3_bb9_in(C,D,E,F):2+ loop_cont_eval_decodeMP3_bb9_in(G,F,B):2
     [G=3,E=3,D=0,C=0] 
* CE 25: eval_decodeMP3_bb7_in(V__bitindex,B) = 1+ eval_decodeMP3_bb9_in(C,D,E,F):3
     [D=0,C=0] 

### Cost equations --> "Loop" of eval_decodeMP3_bb7_in/2 
* CEs [25] --> Loop 16 
* CEs [22,23,24] --> Loop 17 

#### Loops of eval_decodeMP3_bb7_in/2 
* Loop 16: eval_decodeMP3_bb7_in(V__bitindex,B) [] 
* Loop 17: eval_decodeMP3_bb7_in(V__bitindex,B) [] 

### Ranking functions of CR eval_decodeMP3_bb7_in(V__bitindex,B) 

#### Partial ranking functions of CR eval_decodeMP3_bb7_in(V__bitindex,B) 


### Resulting Chains:eval_decodeMP3_bb7_in(V__bitindex,B) 
* [17]
* [16]...


### Merging Chains  eval_decodeMP3_bb7_in/2 into  External patterns of execution 
* [[17]] --> 1 
* [[16]] --> 2 


### Specialization of cost equations eval_decodeMP3_bb4_in/2 
* CE 8 is refined into CE [26] 
* CE 9 is refined into CE [27,28] 


#### Refined cost equations eval_decodeMP3_bb4_in/2 
* CE 26: eval_decodeMP3_bb4_in(V__bitindex,B) = 0
     [] 
* CE 27: eval_decodeMP3_bb4_in(V__bitindex,B) = 0+ eval_decodeMP3_bb7_in(C,B):1
     [] 
* CE 28: eval_decodeMP3_bb4_in(V__bitindex,B) = 0+ eval_decodeMP3_bb7_in(C,B):2
     [] 

### Cost equations --> "Loop" of eval_decodeMP3_bb4_in/2 
* CEs [28] --> Loop 18 
* CEs [26,27] --> Loop 19 

#### Loops of eval_decodeMP3_bb4_in/2 
* Loop 18: eval_decodeMP3_bb4_in(V__bitindex,B) [] 
* Loop 19: eval_decodeMP3_bb4_in(V__bitindex,B) [] 

### Ranking functions of CR eval_decodeMP3_bb4_in(V__bitindex,B) 

#### Partial ranking functions of CR eval_decodeMP3_bb4_in(V__bitindex,B) 


### Resulting Chains:eval_decodeMP3_bb4_in(V__bitindex,B) 
* [19]
* [18]...


### Merging Chains  eval_decodeMP3_bb4_in/2 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_decodeMP3_5/2 
* CE 6 is refined into CE [29] 
* CE 7 is refined into CE [30,31] 


#### Refined cost equations eval_decodeMP3_5/2 
* CE 29: eval_decodeMP3_5(V__bitindex,B) = 0
     [] 
* CE 30: eval_decodeMP3_5(V__bitindex,B) = 0+ eval_decodeMP3_bb4_in(V__bitindex,B):1
     [] 
* CE 31: eval_decodeMP3_5(V__bitindex,B) = 0+ eval_decodeMP3_bb4_in(V__bitindex,B):2
     [] 

### Cost equations --> "Loop" of eval_decodeMP3_5/2 
* CEs [31] --> Loop 20 
* CEs [29,30] --> Loop 21 

#### Loops of eval_decodeMP3_5/2 
* Loop 20: eval_decodeMP3_5(V__bitindex,B) [] 
* Loop 21: eval_decodeMP3_5(V__bitindex,B) [] 

### Ranking functions of CR eval_decodeMP3_5(V__bitindex,B) 

#### Partial ranking functions of CR eval_decodeMP3_5(V__bitindex,B) 


### Resulting Chains:eval_decodeMP3_5(V__bitindex,B) 
* [21]
* [20]...


### Merging Chains  eval_decodeMP3_5/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_decodeMP3_bb0_in/3 
* CE 3 is refined into CE [32] 
* CE 4 is refined into CE [33,34] 
* CE 5 is refined into CE [35,36] 


#### Refined cost equations eval_decodeMP3_bb0_in/3 
* CE 32: eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) = 0
     [] 
* CE 33: eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) = 0+ eval_decodeMP3_5(V__bitindex,B):1
     [] 
* CE 34: eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) = 0+ eval_decodeMP3_5(V__bitindex,B):2
     [] 
* CE 35: eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) = 0+ eval_decodeMP3_bb4_in(V__bitindex,B):1
     [] 
* CE 36: eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) = 0+ eval_decodeMP3_bb4_in(V__bitindex,B):2
     [] 

### Cost equations --> "Loop" of eval_decodeMP3_bb0_in/3 
* CEs [34,36] --> Loop 22 
* CEs [32,33,35] --> Loop 23 

#### Loops of eval_decodeMP3_bb0_in/3 
* Loop 22: eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) [] 
* Loop 23: eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) [] 

### Ranking functions of CR eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) 

#### Partial ranking functions of CR eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) 


### Resulting Chains:eval_decodeMP3_bb0_in(V_isize,V__bitindex,B) 
* [23]
* [22]...


### Merging Chains  eval_decodeMP3_bb0_in/3 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_decodeMP3_start/4 
* CE 2 is refined into CE [37,38] 


#### Refined cost equations eval_decodeMP3_start/4 
* CE 37: eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B) = 0+ eval_decodeMP3_bb0_in(V_isize,V__bitindex,B):1
     [] 
* CE 38: eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B) = 0+ eval_decodeMP3_bb0_in(V_isize,V__bitindex,B):2
     [] 

### Cost equations --> "Loop" of eval_decodeMP3_start/4 
* CEs [38] --> Loop 24 
* CEs [37] --> Loop 25 

#### Loops of eval_decodeMP3_start/4 
* Loop 24: eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B) [] 
* Loop 25: eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B) [] 

### Ranking functions of CR eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B) 

#### Partial ranking functions of CR eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B) 


### Resulting Chains:eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B) 
* [25]
* [24]...


### Merging Chains  eval_decodeMP3_start/4 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) -> [eval_decodeMP3_bb9_in(V__bitindex',V_len_0',B',C')] 
1
#### Cost of phase [11]:eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) -> [eval_decodeMP3_bb9_in(V__bitindex',V_len_0',B',C')] 
1*it(11)+0
#### Cost of phase [11]:eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) -> [eval_decodeMP3_bb9_in(V__bitindex',V_len_0',B',C')] 
1*it(11)+0
#### Cost of phase [11]:eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C) -> [eval_decodeMP3_bb9_in(V__bitindex',V_len_0',B',C')] 
1*it(11)+0
#### Cost of chains of eval_decodeMP3_bb9_in(V__bitindex,V_len_0,B,C):
* Chain [[11]]...: 1*it(11)+0
  with precondition: [] 

* Chain [[11],13]: 1*it(11)+0
  with precondition: [B=2] 

* Chain [[11],12]: 1*it(11)+0
  with precondition: [B=3] 

* Chain [13]: 0
  with precondition: [B=2] 

* Chain [12]: 0
  with precondition: [B=3] 


#### Cost of chains of loop_cont_eval_decodeMP3_bb9_in(C,A,B):
* Chain [15]: 0
  with precondition: [C=2] 

* Chain [14]: 0
  with precondition: [C=3] 


#### Cost of chains of eval_decodeMP3_bb7_in(V__bitindex,B):
* Chain [17]: 1*aux(3)+0
  with precondition: [] 

* Chain [16]...: 1*s(5)+1
  with precondition: [] 


#### Cost of chains of eval_decodeMP3_bb4_in(V__bitindex,B):
* Chain [19]: 1*aux(4)+0
  with precondition: [] 

* Chain [18]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_decodeMP3_5(V__bitindex,B):
* Chain [21]: 1*aux(5)+0
  with precondition: [] 

* Chain [20]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_decodeMP3_bb0_in(V_isize,V__bitindex,B):
* Chain [23]: 1*aux(6)+0
  with precondition: [] 

* Chain [22]...: 1*aux(7)+0
  with precondition: [] 


#### Cost of chains of eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B):
* Chain [25]: 1*s(14)+0
  with precondition: [] 

* Chain [24]...: 1*s(15)+0
  with precondition: [] 


Closed-form bounds of eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B): 
-------------------------------------
* Chain [25] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_decodeMP3_start(V_isize,V_osize,V__bitindex,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 49 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 7 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 43 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 32 ms.
   - Equation cost structures 17 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 207 ms.

