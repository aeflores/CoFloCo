Warning: Ignored call to eval_zreadline_from_stop/1 in equation eval_zreadline_from_bb18_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_zreadline_from_20/1,eval_zreadline_from_21/1,eval_zreadline_from_NewDefault_in/1,eval_zreadline_from_bb11_in/1,eval_zreadline_from_bb8_in/1]
1. recursive  : [eval_zreadline_from_bb1_in/1,loop_cont_eval_zreadline_from_bb8_in/2]
2. non_recursive  : [eval_zreadline_from_bb18_in/1]
3. non_recursive  : [eval_zreadline_from_bb7_in/1]
4. non_recursive  : [eval_zreadline_from_5/1]
5. non_recursive  : [eval_zreadline_from_4/1]
6. non_recursive  : [loop_cont_eval_zreadline_from_bb1_in/2]
7. non_recursive  : [eval_zreadline_from_bb0_in/1]
8. non_recursive  : [eval_zreadline_from_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_zreadline_from_bb8_in/1
1. SCC is partially evaluated into eval_zreadline_from_bb1_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_zreadline_from_5/1
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_zreadline_from_bb1_in/2
7. SCC is partially evaluated into eval_zreadline_from_bb0_in/1
8. SCC is partially evaluated into eval_zreadline_from_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_zreadline_from_bb8_in/1 
* CE 11 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 10 is refined into CE [15] 


#### Refined cost equations eval_zreadline_from_bb8_in/1 
* CE 13: eval_zreadline_from_bb8_in(B) = 1+ eval_zreadline_from_bb8_in(B)
     [B>=2,3>=B] 
* CE 14: eval_zreadline_from_bb8_in(B) = 0
     [B=3] 
* CE 15: eval_zreadline_from_bb8_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_zreadline_from_bb8_in/1 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 

#### Loops of eval_zreadline_from_bb8_in/1 
* Loop 12: eval_zreadline_from_bb8_in(B) [B=3] 
* Loop 13: eval_zreadline_from_bb8_in(B) [B=2] 
* Loop 14: eval_zreadline_from_bb8_in(B)->  eval_zreadline_from_bb8_in(B)
                  [B>=2,3>=B] 

### Ranking functions of CR eval_zreadline_from_bb8_in(B) 

#### Partial ranking functions of CR eval_zreadline_from_bb8_in(B) 


### Resulting Chains:eval_zreadline_from_bb8_in(B) 
* [[14]]...
* [[14],13]
* [[14],12]
* [13]
* [12]


### Merging Chains  eval_zreadline_from_bb8_in/1 into  External patterns of execution 
* [[13],[13,[14]]] --> 1 
* [[12],[12,[14]]] --> 2 
* [[[14]]] --> 3 


### Specialization of cost equations eval_zreadline_from_bb1_in/1 
* CE 6 is refined into CE [16] 
* CE 5 is refined into CE [17,18] 
* CE 4 is refined into CE [19,20] 


#### Refined cost equations eval_zreadline_from_bb1_in/1 
* CE 16: eval_zreadline_from_bb1_in(B) = 0
     [B=4] 
* CE 17: eval_zreadline_from_bb1_in(B) = 1+ eval_zreadline_from_bb8_in(C):1
     [C=2,B=2] 
* CE 18: eval_zreadline_from_bb1_in(B) = 1+ eval_zreadline_from_bb8_in(C):3
     [C=2,B=2] 
* CE 19: eval_zreadline_from_bb1_in(B) = 2+ eval_zreadline_from_bb8_in(C):2+ eval_zreadline_from_bb1_in(B)
     [C=3] 
* CE 20: eval_zreadline_from_bb1_in(B) = 2+ eval_zreadline_from_bb8_in(C):3
     [C=3] 

### Cost equations --> "Loop" of eval_zreadline_from_bb1_in/1 
* CEs [18,20] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 

#### Loops of eval_zreadline_from_bb1_in/1 
* Loop 15: eval_zreadline_from_bb1_in(B) [] 
* Loop 16: eval_zreadline_from_bb1_in(B)->  eval_zreadline_from_bb1_in(B)
                  [] 
* Loop 17: eval_zreadline_from_bb1_in(B) [B=4] 
* Loop 18: eval_zreadline_from_bb1_in(B) [B=2] 

### Ranking functions of CR eval_zreadline_from_bb1_in(B) 

#### Partial ranking functions of CR eval_zreadline_from_bb1_in(B) 


### Resulting Chains:eval_zreadline_from_bb1_in(B) 
* [[16]]...
* [[16],18]
* [[16],17]
* [[16],15]...
* [18]
* [17]
* [15]...


### Merging Chains  eval_zreadline_from_bb1_in/1 into  External patterns of execution 
* [[18],[18,[16]]] --> 1 
* [[17],[17,[16]]] --> 2 
* [[15],[[16]],[15,[16]]] --> 3 


### Specialization of cost equations eval_zreadline_from_5/1 
* CE 12 is refined into CE [21] 


#### Refined cost equations eval_zreadline_from_5/1 
* CE 21: eval_zreadline_from_5(B) = 0
     [] 

### Cost equations --> "Loop" of eval_zreadline_from_5/1 
* CEs [21] --> Loop 19 

#### Loops of eval_zreadline_from_5/1 
* Loop 19: eval_zreadline_from_5(B) [] 

### Ranking functions of CR eval_zreadline_from_5(B) 

#### Partial ranking functions of CR eval_zreadline_from_5(B) 


### Resulting Chains:eval_zreadline_from_5(B) 
* [19]


### Merging Chains  eval_zreadline_from_5/1 into  External patterns of execution 
* [[19]] --> 1 


### Specialization of cost equations loop_cont_eval_zreadline_from_bb1_in/2 
* CE 7 is refined into CE [22] 
* CE 8 is refined into CE [23] 


#### Refined cost equations loop_cont_eval_zreadline_from_bb1_in/2 
* CE 22: loop_cont_eval_zreadline_from_bb1_in(B,A) = 0+ eval_zreadline_from_5(A):1
     [B=4] 
* CE 23: loop_cont_eval_zreadline_from_bb1_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_zreadline_from_bb1_in/2 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 

#### Loops of loop_cont_eval_zreadline_from_bb1_in/2 
* Loop 20: loop_cont_eval_zreadline_from_bb1_in(B,A) [B=4] 
* Loop 21: loop_cont_eval_zreadline_from_bb1_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_zreadline_from_bb1_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_zreadline_from_bb1_in(B,A) 


### Resulting Chains:loop_cont_eval_zreadline_from_bb1_in(B,A) 
* [21]
* [20]


### Merging Chains  loop_cont_eval_zreadline_from_bb1_in/2 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


### Specialization of cost equations eval_zreadline_from_bb0_in/1 
* CE 3 is refined into CE [24,25,26] 


#### Refined cost equations eval_zreadline_from_bb0_in/1 
* CE 24: eval_zreadline_from_bb0_in(B) = 1+ eval_zreadline_from_bb1_in(C):1+ loop_cont_eval_zreadline_from_bb1_in(D,B):1
     [D=2,C=2] 
* CE 25: eval_zreadline_from_bb0_in(B) = 1+ eval_zreadline_from_bb1_in(C):2+ loop_cont_eval_zreadline_from_bb1_in(D,B):2
     [D=4,C=4] 
* CE 26: eval_zreadline_from_bb0_in(B) = 1+ eval_zreadline_from_bb1_in(C):3
     [] 

### Cost equations --> "Loop" of eval_zreadline_from_bb0_in/1 
* CEs [26] --> Loop 22 
* CEs [24,25] --> Loop 23 

#### Loops of eval_zreadline_from_bb0_in/1 
* Loop 22: eval_zreadline_from_bb0_in(B) [] 
* Loop 23: eval_zreadline_from_bb0_in(B) [] 

### Ranking functions of CR eval_zreadline_from_bb0_in(B) 

#### Partial ranking functions of CR eval_zreadline_from_bb0_in(B) 


### Resulting Chains:eval_zreadline_from_bb0_in(B) 
* [23]
* [22]...


### Merging Chains  eval_zreadline_from_bb0_in/1 into  External patterns of execution 
* [[23]] --> 1 
* [[22]] --> 2 


### Specialization of cost equations eval_zreadline_from_start/2 
* CE 2 is refined into CE [27,28] 


#### Refined cost equations eval_zreadline_from_start/2 
* CE 27: eval_zreadline_from_start(V_size,B) = 0+ eval_zreadline_from_bb0_in(B):1
     [] 
* CE 28: eval_zreadline_from_start(V_size,B) = 0+ eval_zreadline_from_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_zreadline_from_start/2 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 

#### Loops of eval_zreadline_from_start/2 
* Loop 24: eval_zreadline_from_start(V_size,B) [] 
* Loop 25: eval_zreadline_from_start(V_size,B) [] 

### Ranking functions of CR eval_zreadline_from_start(V_size,B) 

#### Partial ranking functions of CR eval_zreadline_from_start(V_size,B) 


### Resulting Chains:eval_zreadline_from_start(V_size,B) 
* [25]
* [24]...


### Merging Chains  eval_zreadline_from_start/2 into  External patterns of execution 
* [[25]] --> 1 
* [[24]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_zreadline_from_bb8_in(B) -> [eval_zreadline_from_bb8_in(B')] 
1
#### Cost of phase [14]:eval_zreadline_from_bb8_in(B) -> [eval_zreadline_from_bb8_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_zreadline_from_bb8_in(B) -> [eval_zreadline_from_bb8_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_zreadline_from_bb8_in(B) -> [eval_zreadline_from_bb8_in(B')] 
1*it(14)+0
#### Cost of chains of eval_zreadline_from_bb8_in(B):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [B>=2,3>=B] 

* Chain [[14],13]: 1*it(14)+0
  with precondition: [B=2] 

* Chain [[14],12]: 1*it(14)+0
  with precondition: [B=3] 

* Chain [13]: 0
  with precondition: [B=2] 

* Chain [12]: 0
  with precondition: [B=3] 


#### Cost of loops [16] 

 * loop 16:eval_zreadline_from_bb1_in(B) -> [eval_zreadline_from_bb1_in(B')] 
1*s(4)+2
#### Cost of phase [16]:eval_zreadline_from_bb1_in(B) -> [eval_zreadline_from_bb1_in(B')] 
3*it(16)+0
#### Cost of phase [16]:eval_zreadline_from_bb1_in(B) -> [eval_zreadline_from_bb1_in(B')] 
3*it(16)+0
#### Cost of phase [16]:eval_zreadline_from_bb1_in(B) -> [eval_zreadline_from_bb1_in(B')] 
3*it(16)+0
#### Cost of phase [16]:eval_zreadline_from_bb1_in(B) -> [eval_zreadline_from_bb1_in(B')] 
3*it(16)+0
#### Cost of chains of eval_zreadline_from_bb1_in(B):
* Chain [[16]]...: 3*it(16)+0
  with precondition: [] 

* Chain [[16],18]: 4*it(16)+1
  with precondition: [B=2] 

* Chain [[16],17]: 3*it(16)+0
  with precondition: [B=4] 

* Chain [[16],15]...: 4*aux(3)+0
  with precondition: [] 

* Chain [18]: 1*s(6)+1
  with precondition: [B=2] 

* Chain [17]: 0
  with precondition: [B=4] 

* Chain [15]...: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_zreadline_from_5(B):
* Chain [19]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_zreadline_from_bb1_in(B,A):
* Chain [21]: 0
  with precondition: [B=2] 

* Chain [20]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_zreadline_from_bb0_in(B):
* Chain [23]: 1*aux(7)+0
  with precondition: [] 

* Chain [22]...: 1*s(17)+1
  with precondition: [] 


#### Cost of chains of eval_zreadline_from_start(V_size,B):
* Chain [25]: 1*s(18)+0
  with precondition: [] 

* Chain [24]...: 1*s(19)+1
  with precondition: [] 


Closed-form bounds of eval_zreadline_from_start(V_size,B): 
-------------------------------------
* Chain [25] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [24]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_zreadline_from_start(V_size,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 7 ms.
* Invariants computed in 7 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 13 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 11 ms.
   - Equation cost structures 4 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 4 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 54 ms.

