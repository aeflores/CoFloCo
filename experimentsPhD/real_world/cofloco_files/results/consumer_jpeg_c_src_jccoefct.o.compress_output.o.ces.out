Warning: Ignored call to eval_compress_output_stop/1 in equation eval_compress_output_bb20_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_compress_output_10/3,eval_compress_output_9/3,eval_compress_output_bb1_in/3]
1. recursive  : [eval_compress_output_bb11_in/10]
2. recursive  : [eval_compress_output_bb9_in/8,loop_cont_eval_compress_output_bb11_in/9]
3. recursive  : [eval_compress_output_bb7_in/7,loop_cont_eval_compress_output_bb9_in/8]
4. recursive  : [eval_compress_output_46/5,eval_compress_output_47/5,eval_compress_output_bb6_in/4,loop_cont_eval_compress_output_bb7_in/6]
5. recursive  : [eval_compress_output_bb4_in/2,loop_cont_eval_compress_output_bb6_in/3]
6. non_recursive  : [eval_compress_output_bb20_in/1]
7. non_recursive  : [eval_compress_output_60/1]
8. non_recursive  : [eval_compress_output_59/1]
9. non_recursive  : [loop_cont_eval_compress_output_bb4_in/2]
10. non_recursive  : [loop_cont_eval_compress_output_bb1_in/3]
11. non_recursive  : [eval_compress_output_bb0_in/1]
12. non_recursive  : [eval_compress_output_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_compress_output_bb1_in/3
1. SCC is partially evaluated into eval_compress_output_bb11_in/10
2. SCC is partially evaluated into eval_compress_output_bb9_in/8
3. SCC is partially evaluated into eval_compress_output_bb7_in/7
4. SCC is partially evaluated into eval_compress_output_bb6_in/4
5. SCC is partially evaluated into eval_compress_output_bb4_in/2
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into loop_cont_eval_compress_output_bb4_in/2
10. SCC is partially evaluated into loop_cont_eval_compress_output_bb1_in/3
11. SCC is partially evaluated into eval_compress_output_bb0_in/1
12. SCC is partially evaluated into eval_compress_output_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_compress_output_bb1_in/3 
* CE 5 is refined into CE [21] 
* CE 4 is refined into CE [22] 


#### Refined cost equations eval_compress_output_bb1_in/3 
* CE 21: eval_compress_output_bb1_in(V_ci_0,B,C) = 0
     [V_ci_0>=0,B=6] 
* CE 22: eval_compress_output_bb1_in(V_ci_0,B,C) = 1+ eval_compress_output_bb1_in(D,B,C)
     [V_ci_0>=0,V_ci_0+1=D] 

### Cost equations --> "Loop" of eval_compress_output_bb1_in/3 
* CEs [22] --> Loop 20 
* CEs [21] --> Loop 21 

#### Loops of eval_compress_output_bb1_in/3 
* Loop 20: eval_compress_output_bb1_in(V_ci_0,B,C)->  eval_compress_output_bb1_in(V_ci_0',B,C)
                  [V_ci_0>=0,V_ci_0+1=V_ci_0'] 
* Loop 21: eval_compress_output_bb1_in(V_ci_0,B,C) [V_ci_0>=0,B=6] 

### Ranking functions of CR eval_compress_output_bb1_in(V_ci_0,B,C) 

#### Partial ranking functions of CR eval_compress_output_bb1_in(V_ci_0,B,C) 


### Resulting Chains:eval_compress_output_bb1_in(V_ci_0,B,C) 
* [[20]]...
* [[20],21]
* [21]


### Merging Chains  eval_compress_output_bb1_in/3 into  External patterns of execution 
* [[21],[21,[20]]] --> 1 
* [[[20]]] --> 2 


### Specialization of cost equations eval_compress_output_bb11_in/10 
* CE 20 is refined into CE [23] 
* CE 19 is refined into CE [24] 


#### Refined cost equations eval_compress_output_bb11_in/10 
* CE 23: eval_compress_output_bb11_in(A,B,C,D,E,F,A,B,C,G) = 0
     [E>=0,G=D+1,F=2] 
* CE 24: eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0,B,C,D,E,F) = 1+ eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,G,H,C,D,E,F)
     [V_xindex_0>=0,V_xindex_0+1=G,H=2,B=2] 

### Cost equations --> "Loop" of eval_compress_output_bb11_in/10 
* CEs [24] --> Loop 22 
* CEs [23] --> Loop 23 

#### Loops of eval_compress_output_bb11_in/10 
* Loop 22: eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0,B,C,D,E,F)->  eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0',B',C,D,E,F)
                  [V_xindex_0>=0,V_xindex_0+1=V_xindex_0',B'=2,B=2] 
* Loop 23: eval_compress_output_bb11_in(A,B,C,D,E,F,A,B,C,G) [E>=0,D+1=G,F=2] 

### Ranking functions of CR eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0,B,C,D,E,F) 

#### Partial ranking functions of CR eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0,B,C,D,E,F) 


### Resulting Chains:eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0,B,C,D,E,F) 
* [[22]]...
* [[22],23]
* [23]


### Merging Chains  eval_compress_output_bb11_in/10 into  External patterns of execution 
* [[23],[23,[22]]] --> 1 
* [[[22]]] --> 2 


### Specialization of cost equations eval_compress_output_bb9_in/8 
* CE 18 is refined into CE [25] 
* CE 17 is refined into CE [26,27] 


#### Refined cost equations eval_compress_output_bb9_in/8 
* CE 25: eval_compress_output_bb9_in(A,B,C,D,E,A,B,F) = 0
     [F=C+1,E=3] 
* CE 26: eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) = 2+ eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,F,G,H,V_yoffset_0,V_MCU_col_num_0,V_ci_1,I):1+ eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,I,J,C,D,E)
     [I=F+1,I=V_yindex_0+1,J=3,H=2,G=0,B=3] 
* CE 27: eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) = 2+ eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,F,G,H,I,J,K):2
     [L=3,G=2,F=0,B=3] 

### Cost equations --> "Loop" of eval_compress_output_bb9_in/8 
* CEs [27] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [25] --> Loop 26 

#### Loops of eval_compress_output_bb9_in/8 
* Loop 24: eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) [B=3] 
* Loop 25: eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E)->  eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0',B',C,D,E)
                  [V_yindex_0+1=V_yindex_0',B'=3,B=3] 
* Loop 26: eval_compress_output_bb9_in(A,B,C,D,E,A,B,F) [C+1=F,E=3] 

### Ranking functions of CR eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) 

#### Partial ranking functions of CR eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) 


### Resulting Chains:eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) 
* [[25]]...
* [[25],26]
* [[25],24]...
* [26]
* [24]...


### Merging Chains  eval_compress_output_bb9_in/8 into  External patterns of execution 
* [[26],[26,[25]]] --> 1 
* [[[25]]] --> 2 
* [[24],[24,[25]]] --> 3 


### Specialization of cost equations eval_compress_output_bb7_in/7 
* CE 16 is refined into CE [28] 
* CE 15 is refined into CE [29,30,31] 


#### Refined cost equations eval_compress_output_bb7_in/7 
* CE 28: eval_compress_output_bb7_in(A,B,C,D,A,B,C) = 0
     [D=4] 
* CE 29: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) = 2+ eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,F,G,H,V_yoffset_0,V_MCU_col_num_0,I):1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,I,J,C,D,E)
     [I=F+1,I=V_ci_1+1,J=4,H=3,G=0,B=4] 
* CE 30: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) = 2+ eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,F,G,H,I,J):2
     [K=4,G=3,F=0,B=4] 
* CE 31: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) = 2+ eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,F,G,H,I,J):3
     [K=4,G=3,F=0,B=4] 

### Cost equations --> "Loop" of eval_compress_output_bb7_in/7 
* CEs [30,31] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [28] --> Loop 29 

#### Loops of eval_compress_output_bb7_in/7 
* Loop 27: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) [B=4] 
* Loop 28: eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E)->  eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1',B',C,D,E)
                  [V_ci_1+1=V_ci_1',B'=4,B=4] 
* Loop 29: eval_compress_output_bb7_in(A,B,C,D,A,B,C) [D=4] 

### Ranking functions of CR eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) 

#### Partial ranking functions of CR eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) 


### Resulting Chains:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) 
* [[28]]...
* [[28],29]
* [[28],27]...
* [29]
* [27]...


### Merging Chains  eval_compress_output_bb7_in/7 into  External patterns of execution 
* [[29]] --> 1 
* [[29,[28]]] --> 2 
* [[[28]]] --> 3 
* [[27],[27,[28]]] --> 4 


### Specialization of cost equations eval_compress_output_bb6_in/4 
* CE 14 is refined into CE [32] 
* CE 12 is refined into CE [33,34,35,36] 
* CE 13 is refined into CE [37,38,39,40] 


#### Refined cost equations eval_compress_output_bb6_in/4 
* CE 32: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 0
     [C=V_yoffset_0+1,B=6] 
* CE 33: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,V_yoffset_0,V_MCU_col_num_0,F):1
     [F=0,E=4,D=0,B=5] 
* CE 34: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,V_yoffset_0,V_MCU_col_num_0,F):2
     [F>=1,E=4,D=0,B=5] 
* CE 35: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,F,G,H):3
     [E=4,D=0,B=5] 
* CE 36: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 1+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,F,G,H):4
     [E=4,D=0,B=5] 
* CE 37: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 2+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,V_yoffset_0,V_MCU_col_num_0,F):1+ eval_compress_output_bb6_in(V_yoffset_0,G,B,C)
     [B>=5,6>=B,V_MCU_col_num_0+1=G,F=0,E=4,D=0] 
* CE 38: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 2+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,V_yoffset_0,V_MCU_col_num_0,F):2+ eval_compress_output_bb6_in(V_yoffset_0,G,B,C)
     [F>=1,B>=5,6>=B,V_MCU_col_num_0+1=G,E=4,D=0] 
* CE 39: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 2+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,F,G,H):3
     [B>=5,6>=B,I=G+1,E=4,D=0] 
* CE 40: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) = 2+ eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,D,E,F,G,H):4
     [B>=5,6>=B,I=G+1,E=4,D=0] 

### Cost equations --> "Loop" of eval_compress_output_bb6_in/4 
* CEs [35,36,39,40] --> Loop 30 
* CEs [37,38] --> Loop 31 
* CEs [32] --> Loop 32 
* CEs [33,34] --> Loop 33 

#### Loops of eval_compress_output_bb6_in/4 
* Loop 30: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) [B>=5,6>=B] 
* Loop 31: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C)->  eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0',B,C)
                  [B>=5,6>=B,V_MCU_col_num_0+1=V_MCU_col_num_0'] 
* Loop 32: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) [V_yoffset_0+1=C,B=6] 
* Loop 33: eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) [B=5] 

### Ranking functions of CR eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) 

#### Partial ranking functions of CR eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) 


### Resulting Chains:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) 
* [[31]]...
* [[31],33]
* [[31],32]
* [[31],30]...
* [33]
* [32]
* [30]...


### Merging Chains  eval_compress_output_bb6_in/4 into  External patterns of execution 
* [[33],[33,[31]]] --> 1 
* [[32],[32,[31]]] --> 2 
* [[30],[30,[31]]] --> 3 
* [[[31]]] --> 4 


### Specialization of cost equations eval_compress_output_bb4_in/2 
* CE 9 is refined into CE [41] 
* CE 8 is refined into CE [42,43,44] 
* CE 7 is refined into CE [45,46,47] 


#### Refined cost equations eval_compress_output_bb4_in/2 
* CE 41: eval_compress_output_bb4_in(V_yoffset_0,B) = 0
     [B=7] 
* CE 42: eval_compress_output_bb4_in(V_yoffset_0,B) = 1+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):1
     [D=5,B=5] 
* CE 43: eval_compress_output_bb4_in(V_yoffset_0,B) = 1+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):3
     [D=5,B=5] 
* CE 44: eval_compress_output_bb4_in(V_yoffset_0,B) = 1+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):4
     [D=5,B=5] 
* CE 45: eval_compress_output_bb4_in(V_yoffset_0,B) = 2+ eval_compress_output_bb6_in(C,D,E,F):2+ eval_compress_output_bb4_in(F,B)
     [F=C+1,F=V_yoffset_0+1,E=6] 
* CE 46: eval_compress_output_bb4_in(V_yoffset_0,B) = 2+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):3
     [D=6] 
* CE 47: eval_compress_output_bb4_in(V_yoffset_0,B) = 2+ eval_compress_output_bb6_in(V_yoffset_0,C,D,E):4
     [D=6] 

### Cost equations --> "Loop" of eval_compress_output_bb4_in/2 
* CEs [43,44,46,47] --> Loop 34 
* CEs [45] --> Loop 35 
* CEs [41] --> Loop 36 
* CEs [42] --> Loop 37 

#### Loops of eval_compress_output_bb4_in/2 
* Loop 34: eval_compress_output_bb4_in(V_yoffset_0,B) [] 
* Loop 35: eval_compress_output_bb4_in(V_yoffset_0,B)->  eval_compress_output_bb4_in(V_yoffset_0',B)
                  [V_yoffset_0+1=V_yoffset_0'] 
* Loop 36: eval_compress_output_bb4_in(V_yoffset_0,B) [B=7] 
* Loop 37: eval_compress_output_bb4_in(V_yoffset_0,B) [B=5] 

### Ranking functions of CR eval_compress_output_bb4_in(V_yoffset_0,B) 

#### Partial ranking functions of CR eval_compress_output_bb4_in(V_yoffset_0,B) 


### Resulting Chains:eval_compress_output_bb4_in(V_yoffset_0,B) 
* [[35]]...
* [[35],37]
* [[35],36]
* [[35],34]...
* [37]
* [36]
* [34]...


### Merging Chains  eval_compress_output_bb4_in/2 into  External patterns of execution 
* [[37],[37,[35]]] --> 1 
* [[36],[36,[35]]] --> 2 
* [[34],[[35]],[34,[35]]] --> 3 


### Specialization of cost equations loop_cont_eval_compress_output_bb4_in/2 
* CE 10 is refined into CE [48] 
* CE 11 is refined into CE [49] 


#### Refined cost equations loop_cont_eval_compress_output_bb4_in/2 
* CE 48: loop_cont_eval_compress_output_bb4_in(B,A) = 0
     [B=7] 
* CE 49: loop_cont_eval_compress_output_bb4_in(B,A) = 0
     [B=5] 

### Cost equations --> "Loop" of loop_cont_eval_compress_output_bb4_in/2 
* CEs [48] --> Loop 38 
* CEs [49] --> Loop 39 

#### Loops of loop_cont_eval_compress_output_bb4_in/2 
* Loop 38: loop_cont_eval_compress_output_bb4_in(B,A) [B=7] 
* Loop 39: loop_cont_eval_compress_output_bb4_in(B,A) [B=5] 

### Ranking functions of CR loop_cont_eval_compress_output_bb4_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_compress_output_bb4_in(B,A) 


### Resulting Chains:loop_cont_eval_compress_output_bb4_in(B,A) 
* [39]
* [38]


### Merging Chains  loop_cont_eval_compress_output_bb4_in/2 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations loop_cont_eval_compress_output_bb1_in/3 
* CE 6 is refined into CE [50,51,52] 


#### Refined cost equations loop_cont_eval_compress_output_bb1_in/3 
* CE 50: loop_cont_eval_compress_output_bb1_in(D,A,B) = 1+ eval_compress_output_bb4_in(A,E):1+ loop_cont_eval_compress_output_bb4_in(F,B):1
     [F=5,E=5,D=6] 
* CE 51: loop_cont_eval_compress_output_bb1_in(D,A,B) = 1+ eval_compress_output_bb4_in(A,E):2+ loop_cont_eval_compress_output_bb4_in(F,B):2
     [F=7,E=7,D=6] 
* CE 52: loop_cont_eval_compress_output_bb1_in(D,A,B) = 1+ eval_compress_output_bb4_in(A,E):3
     [D=6] 

### Cost equations --> "Loop" of loop_cont_eval_compress_output_bb1_in/3 
* CEs [52] --> Loop 40 
* CEs [50,51] --> Loop 41 

#### Loops of loop_cont_eval_compress_output_bb1_in/3 
* Loop 40: loop_cont_eval_compress_output_bb1_in(D,A,B) [D=6] 
* Loop 41: loop_cont_eval_compress_output_bb1_in(D,A,B) [D=6] 

### Ranking functions of CR loop_cont_eval_compress_output_bb1_in(D,A,B) 

#### Partial ranking functions of CR loop_cont_eval_compress_output_bb1_in(D,A,B) 


### Resulting Chains:loop_cont_eval_compress_output_bb1_in(D,A,B) 
* [41]
* [40]...


### Merging Chains  loop_cont_eval_compress_output_bb1_in/3 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations eval_compress_output_bb0_in/1 
* CE 3 is refined into CE [53,54,55] 


#### Refined cost equations eval_compress_output_bb0_in/1 
* CE 53: eval_compress_output_bb0_in(B) = 1+ eval_compress_output_bb1_in(C,D,E):1+ loop_cont_eval_compress_output_bb1_in(F,E,B):1
     [F=6,D=6,C=0] 
* CE 54: eval_compress_output_bb0_in(B) = 1+ eval_compress_output_bb1_in(C,D,E):1+ loop_cont_eval_compress_output_bb1_in(F,E,B):2
     [F=6,D=6,C=0] 
* CE 55: eval_compress_output_bb0_in(B) = 1+ eval_compress_output_bb1_in(C,D,E):2
     [C=0] 

### Cost equations --> "Loop" of eval_compress_output_bb0_in/1 
* CEs [54,55] --> Loop 42 
* CEs [53] --> Loop 43 

#### Loops of eval_compress_output_bb0_in/1 
* Loop 42: eval_compress_output_bb0_in(B) [] 
* Loop 43: eval_compress_output_bb0_in(B) [] 

### Ranking functions of CR eval_compress_output_bb0_in(B) 

#### Partial ranking functions of CR eval_compress_output_bb0_in(B) 


### Resulting Chains:eval_compress_output_bb0_in(B) 
* [43]
* [42]...


### Merging Chains  eval_compress_output_bb0_in/1 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations eval_compress_output_start/1 
* CE 2 is refined into CE [56,57] 


#### Refined cost equations eval_compress_output_start/1 
* CE 56: eval_compress_output_start(B) = 0+ eval_compress_output_bb0_in(B):1
     [] 
* CE 57: eval_compress_output_start(B) = 0+ eval_compress_output_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_compress_output_start/1 
* CEs [57] --> Loop 44 
* CEs [56] --> Loop 45 

#### Loops of eval_compress_output_start/1 
* Loop 44: eval_compress_output_start(B) [] 
* Loop 45: eval_compress_output_start(B) [] 

### Ranking functions of CR eval_compress_output_start(B) 

#### Partial ranking functions of CR eval_compress_output_start(B) 


### Resulting Chains:eval_compress_output_start(B) 
* [45]
* [44]...


### Merging Chains  eval_compress_output_start/1 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [20] 

 * loop 20:eval_compress_output_bb1_in(V_ci_0,B,C) -> [eval_compress_output_bb1_in(V_ci_0',B',C')] 
1
#### Cost of phase [20]:eval_compress_output_bb1_in(V_ci_0,B,C) -> [eval_compress_output_bb1_in(V_ci_0',B',C')] 
1*it(20)+0
#### Cost of phase [20]:eval_compress_output_bb1_in(V_ci_0,B,C) -> [eval_compress_output_bb1_in(V_ci_0',B',C')] 
1*it(20)+0
#### Cost of chains of eval_compress_output_bb1_in(V_ci_0,B,C):
* Chain [[20]]...: 1*it(20)+0
  with precondition: [V_ci_0>=0] 

* Chain [[20],21]: 1*it(20)+0
  with precondition: [B=6,V_ci_0>=0] 

* Chain [21]: 0
  with precondition: [B=6,V_ci_0>=0] 


#### Cost of loops [22] 

 * loop 22:eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0,B,C,D,E,F) -> [eval_compress_output_bb11_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_yindex_0',V_xindex_0',B',C',D',E',F')] 
1
#### Cost of phase [22]:eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0,B,C,D,E,F) -> [eval_compress_output_bb11_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_yindex_0',V_xindex_0',B',C',D',E',F')] 
1*it(22)+0
#### Cost of phase [22]:eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0,B,C,D,E,F) -> [eval_compress_output_bb11_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_yindex_0',V_xindex_0',B',C',D',E',F')] 
1*it(22)+0
#### Cost of chains of eval_compress_output_bb11_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,V_xindex_0,B,C,D,E,F):
* Chain [[22]]...: 1*it(22)+0
  with precondition: [V_xindex_0>=0,B=2] 

* Chain [[22],23]: 1*it(22)+0
  with precondition: [B=2,V_yoffset_0=C,V_MCU_col_num_0=D,V_ci_1=E,V_yindex_0+1=F,V_xindex_0>=0] 

* Chain [23]: 0
  with precondition: [B=2,C=V_yoffset_0,D=V_MCU_col_num_0,E=V_ci_1,F=V_yindex_0+1,V_xindex_0>=0] 


#### Cost of loops [25] 

 * loop 25:eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) -> [eval_compress_output_bb9_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_yindex_0',B',C',D',E')] 
1*s(4)+2
#### Cost of phase [25]:eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) -> [eval_compress_output_bb9_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_yindex_0',B',C',D',E')] 
3*it(25)+0
#### Cost of phase [25]:eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) -> [eval_compress_output_bb9_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_yindex_0',B',C',D',E')] 
3*it(25)+0
#### Cost of phase [25]:eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E) -> [eval_compress_output_bb9_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',V_yindex_0',B',C',D',E')] 
3*it(25)+0
#### Cost of chains of eval_compress_output_bb9_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,V_yindex_0,B,C,D,E):
* Chain [[25]]...: 3*it(25)+0
  with precondition: [B=3] 

* Chain [[25],26]: 3*it(25)+0
  with precondition: [B=3,V_yoffset_0=C,V_MCU_col_num_0=D,V_ci_1+1=E,V_yindex_0>=0] 

* Chain [[25],24]...: 4*it(25)+2
  with precondition: [B=3,V_yindex_0>=0] 

* Chain [26]: 0
  with precondition: [B=3,C=V_yoffset_0,D=V_MCU_col_num_0,E=V_ci_1+1,V_yindex_0>=0] 

* Chain [24]...: 1*s(6)+2
  with precondition: [B=3,V_yindex_0>=0] 


#### Cost of loops [28] 

 * loop 28:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) -> [eval_compress_output_bb7_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',B',C',D',E')] 
1*s(11)+2
#### Cost of phase [28]:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) -> [eval_compress_output_bb7_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',B',C',D',E')] 
3*it(28)+0
#### Cost of phase [28]:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) -> [eval_compress_output_bb7_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',B',C',D',E')] 
3*it(28)+0
#### Cost of phase [28]:eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E) -> [eval_compress_output_bb7_in(V_yoffset_0',V_MCU_col_num_0',V_ci_1',B',C',D',E')] 
3*it(28)+0
#### Cost of chains of eval_compress_output_bb7_in(V_yoffset_0,V_MCU_col_num_0,V_ci_1,B,C,D,E):
* Chain [[28]]...: 3*it(28)+0
  with precondition: [B=4] 

* Chain [[28],29]: 3*it(28)+0
  with precondition: [B=4,V_yoffset_0=C,V_MCU_col_num_0=D,V_ci_1>=0,E>=V_ci_1+1] 

* Chain [[28],27]...: 4*aux(5)+0
  with precondition: [B=4,V_ci_1>=0] 

* Chain [29]: 0
  with precondition: [B=4,C=V_yoffset_0,D=V_MCU_col_num_0,V_ci_1=E,V_ci_1>=0] 

* Chain [27]...: 1*aux(5)+0
  with precondition: [B=4,V_ci_1>=0] 


#### Cost of loops [31] 

 * loop 31:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(18)+0
#### Cost of phase [31]:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(19)+0
#### Cost of phase [31]:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(19)+0
#### Cost of phase [31]:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(19)+0
#### Cost of phase [31]:eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C) -> [eval_compress_output_bb6_in(V_yoffset_0',V_MCU_col_num_0',B',C')] 
1*s(19)+0
#### Cost of chains of eval_compress_output_bb6_in(V_yoffset_0,V_MCU_col_num_0,B,C):
* Chain [[31]]...: 1*s(19)+0
  with precondition: [B>=5,6>=B] 

* Chain [[31],33]: 2*aux(8)+0
  with precondition: [B=5] 

* Chain [[31],32]: 1*s(19)+0
  with precondition: [B=6,V_yoffset_0+1=C] 

* Chain [[31],30]...: 2*aux(9)+0
  with precondition: [6>=B,B>=5] 

* Chain [33]: 1*aux(8)+0
  with precondition: [B=5] 

* Chain [32]: 0
  with precondition: [B=6,C=V_yoffset_0+1] 

* Chain [30]...: 1*aux(9)+0
  with precondition: [6>=B,B>=5] 


#### Cost of loops [35] 

 * loop 35:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
1*s(31)+2
#### Cost of phase [35]:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
3*it(35)+0
#### Cost of phase [35]:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
3*it(35)+0
#### Cost of phase [35]:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
3*it(35)+0
#### Cost of phase [35]:eval_compress_output_bb4_in(V_yoffset_0,B) -> [eval_compress_output_bb4_in(V_yoffset_0',B')] 
3*it(35)+0
#### Cost of chains of eval_compress_output_bb4_in(V_yoffset_0,B):
* Chain [[35]]...: 3*it(35)+0
  with precondition: [] 

* Chain [[35],37]: 4*it(35)+1
  with precondition: [B=5] 

* Chain [[35],36]: 3*it(35)+0
  with precondition: [B=7] 

* Chain [[35],34]...: 4*aux(13)+0
  with precondition: [] 

* Chain [37]: 1*s(33)+1
  with precondition: [B=5] 

* Chain [36]: 0
  with precondition: [B=7] 

* Chain [34]...: 1*aux(13)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_compress_output_bb4_in(B,A):
* Chain [39]: 0
  with precondition: [B=5] 

* Chain [38]: 0
  with precondition: [B=7] 


#### Cost of chains of loop_cont_eval_compress_output_bb1_in(D,A,B):
* Chain [41]: 1*aux(17)+0
  with precondition: [D=6] 

* Chain [40]...: 1*s(46)+1
  with precondition: [D=6] 


#### Cost of chains of eval_compress_output_bb0_in(B):
* Chain [43]: 2*s(47)+1
  with precondition: [] 

* Chain [42]...: 1*aux(18)+0
  with precondition: [] 


#### Cost of chains of eval_compress_output_start(B):
* Chain [45]: 2*s(52)+1
  with precondition: [] 

* Chain [44]...: 1*s(53)+0
  with precondition: [] 


Closed-form bounds of eval_compress_output_start(B): 
-------------------------------------
* Chain [45] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_compress_output_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 25 ms.
* Invariants computed in 50 ms.
   - Backward Invariants 27 ms.
   - Transitive Invariants 10 ms.
* Refinement performed in 80 ms.
* Termination proved in 9 ms.
* Upper bounds computed in 65 ms.
   - Equation cost structures 21 ms.
   - Phase cost structures 17 ms.
   - Chain cost structures 28 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 264 ms.

