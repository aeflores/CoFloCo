Warning: Ignored call to eval_gx_default_fill_mask_stop/1 in equation eval_gx_default_fill_mask_bb34_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_gx_default_fill_mask_bb34_in/1]
1. non_recursive  : [eval_gx_default_fill_mask_15/1]
2. non_recursive  : [eval_gx_default_fill_mask_14/1]
3. non_recursive  : [eval_gx_default_fill_mask_28/1]
4. non_recursive  : [eval_gx_default_fill_mask_27/1]
5. non_recursive  : [eval_gx_default_fill_mask_bb11_in/1]
6. non_recursive  : [eval_gx_default_fill_mask_19/1]
7. non_recursive  : [eval_gx_default_fill_mask_18/1]
8. non_recursive  : [eval_gx_default_fill_mask_17/1]
9. non_recursive  : [eval_gx_default_fill_mask_16/1]
10. non_recursive  : [eval_gx_default_fill_mask_31/1]
11. non_recursive  : [eval_gx_default_fill_mask_30/1]
12. recursive  : [eval_gx_default_fill_mask_bb29_in/14]
13. recursive  : [eval_gx_default_fill_mask_96/12,eval_gx_default_fill_mask_97/12,eval_gx_default_fill_mask_bb26_in/10,eval_gx_default_fill_mask_bb32_in/12,loop_cont_eval_gx_default_fill_mask_bb29_in/13]
14. recursive  : [eval_gx_default_fill_mask_bb25_in/5,loop_cont_eval_gx_default_fill_mask_bb26_in/6]
15. non_recursive  : [loop_cont_eval_gx_default_fill_mask_bb25_in/2]
16. non_recursive  : [eval_gx_default_fill_mask_bb23_in/3]
17. non_recursive  : [eval_gx_default_fill_mask_bb21_in/4]
18. non_recursive  : [eval_gx_default_fill_mask_bb19_in/5]
19. non_recursive  : [eval_gx_default_fill_mask_bb17_in/5]
20. non_recursive  : [eval_gx_default_fill_mask_bb6_in/5]
21. non_recursive  : [eval_gx_default_fill_mask_12/5]
22. non_recursive  : [eval_gx_default_fill_mask_11/5]
23. non_recursive  : [eval_gx_default_fill_mask_10/5]
24. non_recursive  : [eval_gx_default_fill_mask_9/5]
25. non_recursive  : [eval_gx_default_fill_mask_bb4_in/5]
26. non_recursive  : [eval_gx_default_fill_mask_bb0_in/5]
27. non_recursive  : [eval_gx_default_fill_mask_start/10]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_gx_default_fill_mask_bb29_in/14
13. SCC is partially evaluated into eval_gx_default_fill_mask_bb26_in/10
14. SCC is partially evaluated into eval_gx_default_fill_mask_bb25_in/5
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_gx_default_fill_mask_bb23_in/3
17. SCC is partially evaluated into eval_gx_default_fill_mask_bb21_in/4
18. SCC is partially evaluated into eval_gx_default_fill_mask_bb19_in/5
19. SCC is partially evaluated into eval_gx_default_fill_mask_bb17_in/5
20. SCC is partially evaluated into eval_gx_default_fill_mask_bb6_in/5
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is partially evaluated into eval_gx_default_fill_mask_bb4_in/5
26. SCC is partially evaluated into eval_gx_default_fill_mask_bb0_in/5
27. SCC is partially evaluated into eval_gx_default_fill_mask_start/10

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gx_default_fill_mask_bb29_in/14 
* CE 24 is refined into CE [25] 
* CE 23 is refined into CE [26] 


#### Refined cost equations eval_gx_default_fill_mask_bb29_in/14 
* CE 25: eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1,B,C,D,E,F,G,H,I) = 1+ eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,J,K,C,D,E,F,G,H,I)
     [V_108>=V_ix_0+1,K=2,B=2] 
* CE 26: eval_gx_default_fill_mask_bb29_in(A,B,C,D,E,F,G,A,B,C,D,E,F,H) = 0
     [C>=E+1,G=2] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb29_in/14 
* CEs [26] --> Loop 17 
* CEs [25] --> Loop 18 

#### Loops of eval_gx_default_fill_mask_bb29_in/14 
* Loop 17: eval_gx_default_fill_mask_bb29_in(A,B,C,D,E,F,G,A,B,C,D,E,F,H) [C>=E+1,G=2] 
* Loop 18: eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1,B,C,D,E,F,G,H,I)->  eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1',B',C,D,E,F,G,H,I)
                  [V_108>=V_ix_0+1,B'=2,B=2] 

### Ranking functions of CR eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1,B,C,D,E,F,G,H,I) 
* [[18]]...
* [[18],17]
* [17]


### Merging Chains  eval_gx_default_fill_mask_bb29_in/14 into  External patterns of execution 
* [[17],[17,[18]]] --> 1 
* [[[18]]] --> 2 


### Specialization of cost equations eval_gx_default_fill_mask_bb26_in/10 
* CE 22 is refined into CE [27] 
* CE 20 is refined into CE [28,29] 
* CE 19 is refined into CE [30,31] 
* CE 21 is refined into CE [32] 


#### Refined cost equations eval_gx_default_fill_mask_bb26_in/10 
* CE 27: eval_gx_default_fill_mask_bb26_in(A,B,C,D,E,F,A,B,C,G) = 0
     [E>=C,G=D+1,F=4] 
* CE 28: eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) = 1+ eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_0,G,V__212,V_107,V_108,V_iy_0,V_ix_0,H,I):1
     [V_108>=V_ix_0+1,G=2,B=3] 
* CE 29: eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) = 1+ eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_0,G,H,I,J,K,L,M,N):2
     [V_108>=V_ix_0+1,G=2,B=3] 
* CE 30: eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) = 2+ eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_0,G,V__212,V_107,V_108,V_iy_0,V_ix_0,H,I):1+ eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,I,B,C,D,E,F)
     [V_108>=V_ix_0+1,B>=3,4>=B,G=2] 
* CE 31: eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) = 2+ eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_0,G,H,I,J,K,L,M,N):2
     [V_108>=V_ix_0+1,B>=3,4>=B,G=2] 
* CE 32: eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) = 1+ eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,G,B,C,D,E,F)
     [V_108>=V_ix_0+1,B>=3,4>=B] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb26_in/10 
* CEs [30,32] --> Loop 19 
* CEs [29,31] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [28] --> Loop 22 

#### Loops of eval_gx_default_fill_mask_bb26_in/10 
* Loop 19: eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F)->  eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0',B,C,D,E,F)
                  [V_108>=V_ix_0+1,B>=3,4>=B] 
* Loop 20: eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) [V_108>=V_ix_0+1,B>=3,4>=B] 
* Loop 21: eval_gx_default_fill_mask_bb26_in(A,B,C,D,E,F,A,B,C,G) [E>=C,D+1=G,F=4] 
* Loop 22: eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) [V_108>=V_ix_0+1,B=3] 

### Ranking functions of CR eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) 


### Resulting Chains:eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) 
* [[19]]...
* [[19],22]
* [[19],21]
* [[19],20]...
* [22]
* [21]
* [20]...


### Merging Chains  eval_gx_default_fill_mask_bb26_in/10 into  External patterns of execution 
* [[22],[22,[19]]] --> 1 
* [[21]] --> 2 
* [[21,[19]]] --> 3 
* [[20],[20,[19]]] --> 4 
* [[[19]]] --> 5 


### Specialization of cost equations eval_gx_default_fill_mask_bb25_in/5 
* CE 17 is refined into CE [33,34,35] 
* CE 18 is refined into CE [36] 
* CE 16 is refined into CE [37,38,39,40] 


#### Refined cost equations eval_gx_default_fill_mask_bb25_in/5 
* CE 33: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) = 1+ eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_107,C,D,E,F,G):1
     [V_108>=V_107+1,V__212>=V_iy_0+1,C=3,B=3] 
* CE 34: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) = 1+ eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_107,C,D,E,F,G):4
     [V_108>=V_107+1,V__212>=V_iy_0+1,C=3,B=3] 
* CE 35: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) = 1+ eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_107,C,D,E,F,G):5
     [V_108>=V_107+1,V__212>=V_iy_0+1,C=3,B=3] 
* CE 36: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) = 0
     [V_iy_0>=V__212,B=3] 
* CE 37: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) = 2+ eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,C,V_107,D,V__212,V_107,V_108,E):2+ eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,E,F)
     [V__212>=E,V_107>=V_108,E=C+1,E=V_iy_0+1,F=3,D=4,B=3] 
* CE 38: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) = 2+ eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,C,V_107,D,V__212,V_107,V_108,E):3+ eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,E,F)
     [V__212>=E,V_108>=V_107+1,E=C+1,E=V_iy_0+1,F=3,D=4,B=3] 
* CE 39: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) = 2+ eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_107,C,D,E,F,G):4
     [V_108>=V_107+1,V__212>=V_iy_0+1,H=3,C=4,B=3] 
* CE 40: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) = 2+ eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_107,C,D,E,F,G):5
     [V_108>=V_107+1,V__212>=V_iy_0+1,H=3,C=4,B=3] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb25_in/5 
* CEs [34,35,39,40] --> Loop 23 
* CEs [37] --> Loop 24 
* CEs [38] --> Loop 25 
* CEs [33] --> Loop 26 
* CEs [36] --> Loop 27 

#### Loops of eval_gx_default_fill_mask_bb25_in/5 
* Loop 23: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) [V__212>=V_iy_0+1,V_108>=V_107+1,B=3] 
* Loop 24: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B)->  eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0',B')
                  [V__212>=V_iy_0+1,V_107>=V_108,V_iy_0+1=V_iy_0',B'=3,B=3] 
* Loop 25: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B)->  eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0',B')
                  [V__212>=V_iy_0+1,V_108>=V_107+1,V_iy_0+1=V_iy_0',B'=3,B=3] 
* Loop 26: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) [V__212>=V_iy_0+1,V_108>=V_107+1,B=3] 
* Loop 27: eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) [V_iy_0>=V__212,B=3] 

### Ranking functions of CR eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) 
* RF of phase [24]: [V__212-V_iy_0]
* RF of phase [25]: [V__212-V_iy_0]

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    V__212-V_iy_0
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    V__212-V_iy_0


### Resulting Chains:eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) 
* [[25],27]
* [[25],26]
* [[25],23]...
* [[24],27]
* [27]
* [26]
* [23]...


### Merging Chains  eval_gx_default_fill_mask_bb25_in/5 into  External patterns of execution 
* [[27]] --> 1 
* [[26],[26,[25]],[27,[25]]] --> 2 
* [[27,[24]]] --> 3 
* [[23]] --> 4 
* [[23,[25]]] --> 5 


### Specialization of cost equations eval_gx_default_fill_mask_bb23_in/3 
* CE 14 is refined into CE [41] 
* CE 15 is refined into CE [42,43,44,45,46] 


#### Refined cost equations eval_gx_default_fill_mask_bb23_in/3 
* CE 41: eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) = 0
     [] 
* CE 42: eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) = 1+ eval_gx_default_fill_mask_bb25_in(V__212,C,D,E,F):1
     [0>=V__212,D=V__2+C,F=3,E=0] 
* CE 43: eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) = 1+ eval_gx_default_fill_mask_bb25_in(V__212,C,D,E,F):2
     [D>=C+1,V__212>=1,V__2+C=D,F=3,E=0] 
* CE 44: eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) = 1+ eval_gx_default_fill_mask_bb25_in(V__212,C,D,E,F):3
     [C>=D,V__212>=1,D=V__2+C,F=3,E=0] 
* CE 45: eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) = 1+ eval_gx_default_fill_mask_bb25_in(V__212,C,D,E,F):4
     [D>=C+1,V__212>=1,V__2+C=D,F=3,E=0] 
* CE 46: eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) = 1+ eval_gx_default_fill_mask_bb25_in(V__212,C,D,E,F):5
     [D>=C+1,V__212>=2,V__2+C=D,F=3,E=0] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb23_in/3 
* CEs [45,46] --> Loop 28 
* CEs [41,42,43,44] --> Loop 29 

#### Loops of eval_gx_default_fill_mask_bb23_in/3 
* Loop 28: eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) [V__212>=1,V__2>=1] 
* Loop 29: eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) [] 

### Ranking functions of CR eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) 


### Resulting Chains:eval_gx_default_fill_mask_bb23_in(V__2,V__212,B) 
* [29]
* [28]...


### Merging Chains  eval_gx_default_fill_mask_bb23_in/3 into  External patterns of execution 
* [[29]] --> 1 
* [[28]] --> 2 


### Specialization of cost equations eval_gx_default_fill_mask_bb21_in/4 
* CE 13 is refined into CE [47,48] 


#### Refined cost equations eval_gx_default_fill_mask_bb21_in/4 
* CE 47: eval_gx_default_fill_mask_bb21_in(V__111,V__17,V__2,B) = 0+ eval_gx_default_fill_mask_bb23_in(V__2,C,B):1
     [] 
* CE 48: eval_gx_default_fill_mask_bb21_in(V__111,V__17,V__2,B) = 0+ eval_gx_default_fill_mask_bb23_in(V__2,C,B):2
     [C>=1,V__2>=1] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb21_in/4 
* CEs [48] --> Loop 30 
* CEs [47] --> Loop 31 

#### Loops of eval_gx_default_fill_mask_bb21_in/4 
* Loop 30: eval_gx_default_fill_mask_bb21_in(V__111,V__17,V__2,B) [V__2>=1] 
* Loop 31: eval_gx_default_fill_mask_bb21_in(V__111,V__17,V__2,B) [] 

### Ranking functions of CR eval_gx_default_fill_mask_bb21_in(V__111,V__17,V__2,B) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb21_in(V__111,V__17,V__2,B) 


### Resulting Chains:eval_gx_default_fill_mask_bb21_in(V__111,V__17,V__2,B) 
* [31]
* [30]...


### Merging Chains  eval_gx_default_fill_mask_bb21_in/4 into  External patterns of execution 
* [[31]] --> 1 
* [[30]] --> 2 


### Specialization of cost equations eval_gx_default_fill_mask_bb19_in/5 
* CE 12 is refined into CE [49,50] 


#### Refined cost equations eval_gx_default_fill_mask_bb19_in/5 
* CE 49: eval_gx_default_fill_mask_bb19_in(V__111,V__19,V__17,V__15,B) = 0+ eval_gx_default_fill_mask_bb21_in(V__111,V__17,C,B):1
     [] 
* CE 50: eval_gx_default_fill_mask_bb19_in(V__111,V__19,V__17,V__15,B) = 0+ eval_gx_default_fill_mask_bb21_in(V__111,V__17,C,B):2
     [C>=1] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb19_in/5 
* CEs [50] --> Loop 32 
* CEs [49] --> Loop 33 

#### Loops of eval_gx_default_fill_mask_bb19_in/5 
* Loop 32: eval_gx_default_fill_mask_bb19_in(V__111,V__19,V__17,V__15,B) [] 
* Loop 33: eval_gx_default_fill_mask_bb19_in(V__111,V__19,V__17,V__15,B) [] 

### Ranking functions of CR eval_gx_default_fill_mask_bb19_in(V__111,V__19,V__17,V__15,B) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb19_in(V__111,V__19,V__17,V__15,B) 


### Resulting Chains:eval_gx_default_fill_mask_bb19_in(V__111,V__19,V__17,V__15,B) 
* [33]
* [32]...


### Merging Chains  eval_gx_default_fill_mask_bb19_in/5 into  External patterns of execution 
* [[33]] --> 1 
* [[32]] --> 2 


### Specialization of cost equations eval_gx_default_fill_mask_bb17_in/5 
* CE 10 is refined into CE [51,52] 
* CE 11 is refined into CE [53,54] 


#### Refined cost equations eval_gx_default_fill_mask_bb17_in/5 
* CE 51: eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B) = 0+ eval_gx_default_fill_mask_bb19_in(C,V__08,D,V__04,B):1
     [C=V_y+V_h,D=0] 
* CE 52: eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B) = 0+ eval_gx_default_fill_mask_bb19_in(C,V__08,D,V__04,B):2
     [C=V_y+V_h,D=0] 
* CE 53: eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B) = 0+ eval_gx_default_fill_mask_bb19_in(V_h,V__08,V_y,V__04,B):1
     [] 
* CE 54: eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B) = 0+ eval_gx_default_fill_mask_bb19_in(V_h,V__08,V_y,V__04,B):2
     [] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb17_in/5 
* CEs [52,54] --> Loop 34 
* CEs [51,53] --> Loop 35 

#### Loops of eval_gx_default_fill_mask_bb17_in/5 
* Loop 34: eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B) [] 
* Loop 35: eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B) [] 

### Ranking functions of CR eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B) 


### Resulting Chains:eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B) 
* [35]
* [34]...


### Merging Chains  eval_gx_default_fill_mask_bb17_in/5 into  External patterns of execution 
* [[35]] --> 1 
* [[34]] --> 2 


### Specialization of cost equations eval_gx_default_fill_mask_bb6_in/5 
* CE 6 is refined into CE [55] 
* CE 7 is refined into CE [56,57] 
* CE 8 is refined into CE [58,59] 
* CE 9 is refined into CE [60,61] 


#### Refined cost equations eval_gx_default_fill_mask_bb6_in/5 
* CE 55: eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) = 0
     [] 
* CE 56: eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb17_in(V_y,V_h,C,D,B):1
     [C=V_x+V_w,D=0] 
* CE 57: eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb17_in(V_y,V_h,C,D,B):2
     [C=V_x+V_w,D=0] 
* CE 58: eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb17_in(V_y,V_h,V_w,V_x,B):1
     [] 
* CE 59: eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb17_in(V_y,V_h,V_w,V_x,B):2
     [] 
* CE 60: eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb19_in(V_h,V_w,V_y,V_x,B):1
     [] 
* CE 61: eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb19_in(V_h,V_w,V_y,V_x,B):2
     [] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb6_in/5 
* CEs [57,59,61] --> Loop 36 
* CEs [55,56,58,60] --> Loop 37 

#### Loops of eval_gx_default_fill_mask_bb6_in/5 
* Loop 36: eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) [] 
* Loop 37: eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) [] 

### Ranking functions of CR eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) 


### Resulting Chains:eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B) 
* [37]
* [36]...


### Merging Chains  eval_gx_default_fill_mask_bb6_in/5 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations eval_gx_default_fill_mask_bb4_in/5 
* CE 5 is refined into CE [62,63] 


#### Refined cost equations eval_gx_default_fill_mask_bb4_in/5 
* CE 62: eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B):1
     [] 
* CE 63: eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B):2
     [] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb4_in/5 
* CEs [63] --> Loop 38 
* CEs [62] --> Loop 39 

#### Loops of eval_gx_default_fill_mask_bb4_in/5 
* Loop 38: eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B) [] 
* Loop 39: eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B) [] 

### Ranking functions of CR eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B) 


### Resulting Chains:eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B) 
* [39]
* [38]...


### Merging Chains  eval_gx_default_fill_mask_bb4_in/5 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations eval_gx_default_fill_mask_bb0_in/5 
* CE 3 is refined into CE [64,65] 
* CE 4 is refined into CE [66] 


#### Refined cost equations eval_gx_default_fill_mask_bb0_in/5 
* CE 64: eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B):1
     [] 
* CE 65: eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B) = 0+ eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B):2
     [] 
* CE 66: eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B) = 0
     [] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_bb0_in/5 
* CEs [64,66] --> Loop 40 
* CEs [65] --> Loop 41 

#### Loops of eval_gx_default_fill_mask_bb0_in/5 
* Loop 40: eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B) [] 
* Loop 41: eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B) [] 

### Ranking functions of CR eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B) 


### Resulting Chains:eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B) 
* [41]...
* [40]


### Merging Chains  eval_gx_default_fill_mask_bb0_in/5 into  External patterns of execution 
* [[40]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_gx_default_fill_mask_start/10 
* CE 2 is refined into CE [67,68] 


#### Refined cost equations eval_gx_default_fill_mask_start/10 
* CE 67: eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B) = 0+ eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B):1
     [] 
* CE 68: eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B) = 0+ eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B):2
     [] 

### Cost equations --> "Loop" of eval_gx_default_fill_mask_start/10 
* CEs [68] --> Loop 42 
* CEs [67] --> Loop 43 

#### Loops of eval_gx_default_fill_mask_start/10 
* Loop 42: eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B) [] 
* Loop 43: eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B) [] 

### Ranking functions of CR eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B) 

#### Partial ranking functions of CR eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B) 


### Resulting Chains:eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B) 
* [43]
* [42]...


### Merging Chains  eval_gx_default_fill_mask_start/10 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [18] 

 * loop 18:eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1,B,C,D,E,F,G,H,I) -> [eval_gx_default_fill_mask_bb29_in(V__212',V_107',V_108',V_iy_0',V_ix_0',V_ix_1',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [18]:eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1,B,C,D,E,F,G,H,I) -> [eval_gx_default_fill_mask_bb29_in(V__212',V_107',V_108',V_iy_0',V_ix_0',V_ix_1',B',C',D',E',F',G',H',I')] 
1*it(18)+0
#### Cost of phase [18]:eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1,B,C,D,E,F,G,H,I) -> [eval_gx_default_fill_mask_bb29_in(V__212',V_107',V_108',V_iy_0',V_ix_0',V_ix_1',B',C',D',E',F',G',H',I')] 
1*it(18)+0
#### Cost of chains of eval_gx_default_fill_mask_bb29_in(V__212,V_107,V_108,V_iy_0,V_ix_0,V_ix_1,B,C,D,E,F,G,H,I):
* Chain [[18]]...: 1*it(18)+0
  with precondition: [V_108>=V_ix_0+1,B=2] 

* Chain [[18],17]: 1*it(18)+0
  with precondition: [B=2,V__212=C,V_107=D,V_108=E,V_iy_0=F,V_ix_0=G,V_108>=V_ix_0+1] 

* Chain [17]: 0
  with precondition: [B=2,C=V__212,D=V_107,F=V_iy_0,H=V_ix_1,V_108=E,V_ix_0=G,V_108>=V_ix_0+1] 


#### Cost of loops [19] 

 * loop 19:eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) -> [eval_gx_default_fill_mask_bb26_in(V__212',V_107',V_108',V_iy_0',V_ix_0',B',C',D',E',F')] 
1*s(3)+0
#### Cost of phase [19]:eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) -> [eval_gx_default_fill_mask_bb26_in(V__212',V_107',V_108',V_iy_0',V_ix_0',B',C',D',E',F')] 
1*s(4)+0
#### Cost of phase [19]:eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) -> [eval_gx_default_fill_mask_bb26_in(V__212',V_107',V_108',V_iy_0',V_ix_0',B',C',D',E',F')] 
1*s(4)+0
#### Cost of phase [19]:eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) -> [eval_gx_default_fill_mask_bb26_in(V__212',V_107',V_108',V_iy_0',V_ix_0',B',C',D',E',F')] 
1*s(4)+0
#### Cost of phase [19]:eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F) -> [eval_gx_default_fill_mask_bb26_in(V__212',V_107',V_108',V_iy_0',V_ix_0',B',C',D',E',F')] 
1*s(4)+0
#### Cost of chains of eval_gx_default_fill_mask_bb26_in(V__212,V_107,V_108,V_iy_0,V_ix_0,B,C,D,E,F):
* Chain [[19]]...: 1*s(4)+0
  with precondition: [V_108>=V_ix_0+1,B>=3,4>=B] 

* Chain [[19],22]: 2*s(4)+1
  with precondition: [B=3,V__212>=V_iy_0+1,V_108>=V_ix_0+1] 

* Chain [[19],21]: 1*s(4)+0
  with precondition: [B=4,F=V_iy_0+1,V__212=C,V_107=D,V_108=E,V_108>=V_ix_0+1,V__212>=F] 

* Chain [[19],20]...: 2*aux(3)+0
  with precondition: [4>=B,B>=3,V__212>=V_iy_0+1,V_108>=V_ix_0+1] 

* Chain [22]: 1*s(5)+1
  with precondition: [B=3,V__212>=V_iy_0+1,V_108>=V_ix_0+1] 

* Chain [21]: 0
  with precondition: [B=4,D=V_107,V__212=C,V_108=E,V_iy_0+1=F,V_ix_0>=V_108,V__212>=V_iy_0+1] 

* Chain [20]...: 1*aux(3)+0
  with precondition: [4>=B,B>=3,V__212>=V_iy_0+1,V_108>=V_ix_0+1] 


#### Cost of loops [25] 

 * loop 25:eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) -> [eval_gx_default_fill_mask_bb25_in(V__212',V_107',V_108',V_iy_0',B')] 
1*s(13)+2
#### Cost of phase [25]:eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) -> [eval_gx_default_fill_mask_bb25_in(V__212',V_107',V_108',V_iy_0',B')] 
2*it(25)+1*s(14)+0
  Such that:it(25) =< V__212-V_iy_0
it(25) =< V__212-V_iy_0-V__212'+V_iy_0'

#### Cost of phase [25]:eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) -> [eval_gx_default_fill_mask_bb25_in(V__212',V_107',V_108',V_iy_0',B')] 
2*it(25)+1*s(14)+0
  Such that:it(25) =< V__212-V_iy_0
it(25) =< V__212-V_iy_0-V__212'+V_iy_0'

#### Cost of phase [25]:eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) -> [eval_gx_default_fill_mask_bb25_in(V__212',V_107',V_108',V_iy_0',B')] 
2*it(25)+1*s(14)+0
  Such that:it(25) =< V__212-V_iy_0
it(25) =< V__212-V_iy_0-V__212'+V_iy_0'

#### Cost of loops [24] 

 * loop 24:eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) -> [eval_gx_default_fill_mask_bb25_in(V__212',V_107',V_108',V_iy_0',B')] 
2
#### Cost of phase [24]:eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B) -> [eval_gx_default_fill_mask_bb25_in(V__212',V_107',V_108',V_iy_0',B')] 
2*it(24)+0
  Such that:it(24) =< V__212-V_iy_0
it(24) =< V__212-V_iy_0-V__212'+V_iy_0'

#### Cost of chains of eval_gx_default_fill_mask_bb25_in(V__212,V_107,V_108,V_iy_0,B):
* Chain [[25],27]: 2*it(25)+1*s(14)+0
  Such that:it(25) =< V__212-V_iy_0

  with precondition: [B=3,V_iy_0>=0,V_108>=V_107+1,V__212>=V_iy_0+1] 

* Chain [[25],26]: 2*it(25)+2*s(14)+1
  Such that:it(25) =< V__212-V_iy_0

  with precondition: [B=3,V_iy_0>=0,V_108>=V_107+1,V__212>=V_iy_0+2] 

* Chain [[25],23]...: 2*aux(6)+2*it(25)+0
  Such that:it(25) =< V__212-V_iy_0

  with precondition: [B=3,V_iy_0>=0,V_108>=V_107+1,V__212>=V_iy_0+2] 

* Chain [[24],27]: 2*it(24)+0
  Such that:it(24) =< V__212-V_iy_0

  with precondition: [B=3,V_iy_0>=0,V_107>=V_108,V__212>=V_iy_0+1] 

* Chain [27]: 0
  with precondition: [B=3,V_iy_0>=0,V_iy_0>=V__212] 

* Chain [26]: 1*s(15)+1
  with precondition: [B=3,V_iy_0>=0,V_108>=V_107+1,V__212>=V_iy_0+1] 

* Chain [23]...: 1*aux(6)+0
  with precondition: [B=3,V_iy_0>=0,V_108>=V_107+1,V__212>=V_iy_0+1] 


#### Cost of chains of eval_gx_default_fill_mask_bb23_in(V__2,V__212,B):
* Chain [29]: 6*s(26)+4*s(27)+2
  Such that:aux(8) =< V__212
s(26) =< aux(8)

  with precondition: [] 

* Chain [28]...: 3*s(29)+2*s(30)+1
  Such that:s(30) =< V__212

  with precondition: [V__2>=1,V__212>=1] 


#### Cost of chains of eval_gx_default_fill_mask_bb21_in(V__111,V__17,V__2,B):
* Chain [31]: 6*s(33)+4*s(34)+2
  with precondition: [] 

* Chain [30]...: 5*s(35)+1
  with precondition: [V__2>=1] 


#### Cost of chains of eval_gx_default_fill_mask_bb19_in(V__111,V__19,V__17,V__15,B):
* Chain [33]: 10*s(37)+2
  with precondition: [] 

* Chain [32]...: 5*s(39)+1
  with precondition: [] 


#### Cost of chains of eval_gx_default_fill_mask_bb17_in(V_y,V_h,V__08,V__04,B):
* Chain [35]: 1*aux(9)+0
  with precondition: [] 

* Chain [34]...: 1*aux(10)+0
  with precondition: [] 


#### Cost of chains of eval_gx_default_fill_mask_bb6_in(V_x,V_y,V_w,V_h,B):
* Chain [37]: 1*aux(11)+0
  with precondition: [] 

* Chain [36]...: 1*aux(12)+0
  with precondition: [] 


#### Cost of chains of eval_gx_default_fill_mask_bb4_in(V_x,V_y,V_w,V_h,B):
* Chain [39]: 1*s(50)+0
  with precondition: [] 

* Chain [38]...: 1*s(51)+0
  with precondition: [] 


#### Cost of chains of eval_gx_default_fill_mask_bb0_in(V_x,V_y,V_w,V_h,B):
* Chain [41]...: 1*s(52)+0
  with precondition: [] 

* Chain [40]: 1*aux(13)+0
  with precondition: [] 


#### Cost of chains of eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B):
* Chain [43]: 1*s(54)+0
  with precondition: [] 

* Chain [42]...: 1*s(55)+0
  with precondition: [] 


Closed-form bounds of eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B): 
-------------------------------------
* Chain [43] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [42]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gx_default_fill_mask_start(V_dx,V_raster,V_id,V_x,V_y,V_w,V_h,V_depth,V_lop,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 50 ms.
* Invariants computed in 50 ms.
   - Backward Invariants 28 ms.
   - Transitive Invariants 8 ms.
* Refinement performed in 103 ms.
* Termination proved in 11 ms.
* Upper bounds computed in 80 ms.
   - Equation cost structures 36 ms.
   - Phase cost structures 19 ms.
   - Chain cost structures 29 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 352 ms.

