Warning: Ignored call to eval_cf_decode_eol_stop/1 in equation eval_cf_decode_eol_bb29_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_cf_decode_eol_bb11_in/2,eval_cf_decode_eol_bb12_in/2,eval_cf_decode_eol_bb1_in/2,eval_cf_decode_eol_bb7_in/2]
1. recursive  : [eval_cf_decode_eol_bb16_in/1,eval_cf_decode_eol_bb21_in/1,eval_cf_decode_eol_bb26_in/1,eval_cf_decode_eol_bb27_in/1]
2. non_recursive  : [eval_cf_decode_eol_bb29_in/1]
3. non_recursive  : [loop_cont_eval_cf_decode_eol_bb16_in/2]
4. non_recursive  : [loop_cont_eval_cf_decode_eol_bb1_in/2]
5. non_recursive  : [eval_cf_decode_eol_bb0_in/1]
6. non_recursive  : [eval_cf_decode_eol_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cf_decode_eol_bb1_in/2
1. SCC is partially evaluated into eval_cf_decode_eol_bb16_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_cf_decode_eol_bb1_in/2
5. SCC is partially evaluated into eval_cf_decode_eol_bb0_in/1
6. SCC is partially evaluated into eval_cf_decode_eol_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cf_decode_eol_bb1_in/2 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 


#### Refined cost equations eval_cf_decode_eol_bb1_in/2 
* CE 11: eval_cf_decode_eol_bb1_in(V_zeros_0,B) = 0
     [V_zeros_0>=11,B=3] 
* CE 12: eval_cf_decode_eol_bb1_in(V_zeros_0,B) = 0
     [V_zeros_0>=0,10>=V_zeros_0,B=2] 
* CE 13: eval_cf_decode_eol_bb1_in(V_zeros_0,B) = 1+ eval_cf_decode_eol_bb1_in(C,B)
     [V_zeros_0>=0,10>=V_zeros_0,V_zeros_0+1=C] 

### Cost equations --> "Loop" of eval_cf_decode_eol_bb1_in/2 
* CEs [13] --> Loop 10 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_cf_decode_eol_bb1_in/2 
* Loop 10: eval_cf_decode_eol_bb1_in(V_zeros_0,B)->  eval_cf_decode_eol_bb1_in(V_zeros_0',B)
                  [V_zeros_0>=0,10>=V_zeros_0,V_zeros_0+1=V_zeros_0'] 
* Loop 11: eval_cf_decode_eol_bb1_in(V_zeros_0,B) [V_zeros_0>=11,B=3] 
* Loop 12: eval_cf_decode_eol_bb1_in(V_zeros_0,B) [V_zeros_0>=0,10>=V_zeros_0,B=2] 

### Ranking functions of CR eval_cf_decode_eol_bb1_in(V_zeros_0,B) 
* RF of phase [10]: [-V_zeros_0+11]

#### Partial ranking functions of CR eval_cf_decode_eol_bb1_in(V_zeros_0,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -V_zeros_0+11


### Resulting Chains:eval_cf_decode_eol_bb1_in(V_zeros_0,B) 
* [[10],12]
* [[10],11]
* [12]


### Merging Chains  eval_cf_decode_eol_bb1_in/2 into  External patterns of execution 
* [[12],[12,[10]]] --> 1 
* [[11,[10]]] --> 2 


### Specialization of cost equations eval_cf_decode_eol_bb16_in/1 
* CE 10 is refined into CE [14] 
* CE 9 is refined into CE [15] 


#### Refined cost equations eval_cf_decode_eol_bb16_in/1 
* CE 14: eval_cf_decode_eol_bb16_in(B) = 0
     [B=2] 
* CE 15: eval_cf_decode_eol_bb16_in(B) = 1+ eval_cf_decode_eol_bb16_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_cf_decode_eol_bb16_in/1 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

#### Loops of eval_cf_decode_eol_bb16_in/1 
* Loop 13: eval_cf_decode_eol_bb16_in(B)->  eval_cf_decode_eol_bb16_in(B')
                  [B'=2,B=2] 
* Loop 14: eval_cf_decode_eol_bb16_in(B) [B=2] 

### Ranking functions of CR eval_cf_decode_eol_bb16_in(B) 

#### Partial ranking functions of CR eval_cf_decode_eol_bb16_in(B) 


### Resulting Chains:eval_cf_decode_eol_bb16_in(B) 
* [[13]]...
* [[13],14]
* [14]


### Merging Chains  eval_cf_decode_eol_bb16_in/1 into  External patterns of execution 
* [[14],[14,[13]]] --> 1 
* [[[13]]] --> 2 


### Specialization of cost equations loop_cont_eval_cf_decode_eol_bb1_in/2 
* CE 8 is refined into CE [16,17] 
* CE 7 is refined into CE [18] 


#### Refined cost equations loop_cont_eval_cf_decode_eol_bb1_in/2 
* CE 16: loop_cont_eval_cf_decode_eol_bb1_in(B,A) = 1+ eval_cf_decode_eol_bb16_in(C):1
     [C=2,B=3] 
* CE 17: loop_cont_eval_cf_decode_eol_bb1_in(B,A) = 1+ eval_cf_decode_eol_bb16_in(C):2
     [C=2,B=3] 
* CE 18: loop_cont_eval_cf_decode_eol_bb1_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_cf_decode_eol_bb1_in/2 
* CEs [16] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

#### Loops of loop_cont_eval_cf_decode_eol_bb1_in/2 
* Loop 15: loop_cont_eval_cf_decode_eol_bb1_in(B,A) [B=3] 
* Loop 16: loop_cont_eval_cf_decode_eol_bb1_in(B,A) [B=2] 
* Loop 17: loop_cont_eval_cf_decode_eol_bb1_in(B,A) [B=3] 

### Ranking functions of CR loop_cont_eval_cf_decode_eol_bb1_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_cf_decode_eol_bb1_in(B,A) 


### Resulting Chains:loop_cont_eval_cf_decode_eol_bb1_in(B,A) 
* [17]...
* [16]
* [15]


### Merging Chains  loop_cont_eval_cf_decode_eol_bb1_in/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 
* [[17]] --> 3 


### Specialization of cost equations eval_cf_decode_eol_bb0_in/1 
* CE 3 is refined into CE [19,20,21] 


#### Refined cost equations eval_cf_decode_eol_bb0_in/1 
* CE 19: eval_cf_decode_eol_bb0_in(B) = 1+ eval_cf_decode_eol_bb1_in(C,D):1+ loop_cont_eval_cf_decode_eol_bb1_in(E,B):1
     [E=2,D=2,C=0] 
* CE 20: eval_cf_decode_eol_bb0_in(B) = 1+ eval_cf_decode_eol_bb1_in(C,D):2+ loop_cont_eval_cf_decode_eol_bb1_in(E,B):2
     [E=3,D=3,C=0] 
* CE 21: eval_cf_decode_eol_bb0_in(B) = 1+ eval_cf_decode_eol_bb1_in(C,D):2+ loop_cont_eval_cf_decode_eol_bb1_in(E,B):3
     [E=3,D=3,C=0] 

### Cost equations --> "Loop" of eval_cf_decode_eol_bb0_in/1 
* CEs [21] --> Loop 18 
* CEs [19,20] --> Loop 19 

#### Loops of eval_cf_decode_eol_bb0_in/1 
* Loop 18: eval_cf_decode_eol_bb0_in(B) [] 
* Loop 19: eval_cf_decode_eol_bb0_in(B) [] 

### Ranking functions of CR eval_cf_decode_eol_bb0_in(B) 

#### Partial ranking functions of CR eval_cf_decode_eol_bb0_in(B) 


### Resulting Chains:eval_cf_decode_eol_bb0_in(B) 
* [19]
* [18]...


### Merging Chains  eval_cf_decode_eol_bb0_in/1 into  External patterns of execution 
* [[19]] --> 1 
* [[18]] --> 2 


### Specialization of cost equations eval_cf_decode_eol_start/1 
* CE 2 is refined into CE [22,23] 


#### Refined cost equations eval_cf_decode_eol_start/1 
* CE 22: eval_cf_decode_eol_start(B) = 0+ eval_cf_decode_eol_bb0_in(B):1
     [] 
* CE 23: eval_cf_decode_eol_start(B) = 0+ eval_cf_decode_eol_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_cf_decode_eol_start/1 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 

#### Loops of eval_cf_decode_eol_start/1 
* Loop 20: eval_cf_decode_eol_start(B) [] 
* Loop 21: eval_cf_decode_eol_start(B) [] 

### Ranking functions of CR eval_cf_decode_eol_start(B) 

#### Partial ranking functions of CR eval_cf_decode_eol_start(B) 


### Resulting Chains:eval_cf_decode_eol_start(B) 
* [21]
* [20]...


### Merging Chains  eval_cf_decode_eol_start/1 into  External patterns of execution 
* [[21]] --> 1 
* [[20]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_cf_decode_eol_bb1_in(V_zeros_0,B) -> [eval_cf_decode_eol_bb1_in(V_zeros_0',B')] 
1
#### Cost of phase [10]:eval_cf_decode_eol_bb1_in(V_zeros_0,B) -> [eval_cf_decode_eol_bb1_in(V_zeros_0',B')] 
1*it(10)+0
  Such that:it(10) =< -V_zeros_0+11
it(10) =< -V_zeros_0+V_zeros_0'

#### Cost of phase [10]:eval_cf_decode_eol_bb1_in(V_zeros_0,B) -> [eval_cf_decode_eol_bb1_in(V_zeros_0',B')] 
1*it(10)+0
  Such that:it(10) =< -V_zeros_0+11
it(10) =< -V_zeros_0+V_zeros_0'

#### Cost of chains of eval_cf_decode_eol_bb1_in(V_zeros_0,B):
* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< -V_zeros_0+10

  with precondition: [B=2,9>=V_zeros_0,V_zeros_0>=0] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -V_zeros_0+11

  with precondition: [B=3,10>=V_zeros_0,V_zeros_0>=0] 

* Chain [12]: 0
  with precondition: [B=2,10>=V_zeros_0,V_zeros_0>=0] 


#### Cost of loops [13] 

 * loop 13:eval_cf_decode_eol_bb16_in(B) -> [eval_cf_decode_eol_bb16_in(B')] 
1
#### Cost of phase [13]:eval_cf_decode_eol_bb16_in(B) -> [eval_cf_decode_eol_bb16_in(B')] 
1*it(13)+0
#### Cost of phase [13]:eval_cf_decode_eol_bb16_in(B) -> [eval_cf_decode_eol_bb16_in(B')] 
1*it(13)+0
#### Cost of chains of eval_cf_decode_eol_bb16_in(B):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [B=2] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [B=2] 

* Chain [14]: 0
  with precondition: [B=2] 


#### Cost of chains of loop_cont_eval_cf_decode_eol_bb1_in(B,A):
* Chain [17]...: 1*s(3)+1
  with precondition: [B=3] 

* Chain [16]: 0
  with precondition: [B=2] 

* Chain [15]: 1*s(4)+1
  with precondition: [B=3] 


#### Cost of chains of eval_cf_decode_eol_bb0_in(B):
* Chain [19]: 1*aux(2)+0
  with precondition: [] 

* Chain [18]...: 1*s(8)+1*s(9)+2
  Such that:s(8) =< 11

  with precondition: [] 


#### Cost of chains of eval_cf_decode_eol_start(B):
* Chain [21]: 1*s(10)+0
  with precondition: [] 

* Chain [20]...: 1*s(11)+1*s(12)+2
  Such that:s(11) =< 11

  with precondition: [] 


Closed-form bounds of eval_cf_decode_eol_start(B): 
-------------------------------------
* Chain [21] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [20]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_cf_decode_eol_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 23 ms.
* Invariants computed in 25 ms.
   - Backward Invariants 14 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 46 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 42 ms.
   - Equation cost structures 15 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 14 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 185 ms.

