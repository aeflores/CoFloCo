Warning: Ignored call to eval_main_stop/1 in equation eval_main_10/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_121/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_15/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_20/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_4/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_50/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_55/1 
Warning: Ignored call to eval_main_stop/1 in equation eval_main_99/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_main_4/1]
1. non_recursive  : [eval_main_3/1]
2. non_recursive  : [eval_main_2/1]
3. non_recursive  : [eval_main_15/1]
4. non_recursive  : [eval_main_14/1]
5. non_recursive  : [eval_main_13/1]
6. non_recursive  : [eval_main_20/1]
7. non_recursive  : [eval_main_19/1]
8. non_recursive  : [eval_main_18/1]
9. recursive  : [eval_main_21/4,eval_main_22/4,eval_main_23/4,eval_main_24/4,eval_main_26/4,eval_main_27/5,eval_main_bb8_in/4]
10. recursive  : [eval_main_30/5,eval_main_31/5,eval_main_32/5,eval_main_33/5,eval_main_35/5,eval_main_36/6,eval_main__critedge_in/5]
11. non_recursive  : [eval_main_50/1]
12. non_recursive  : [eval_main_49/1]
13. non_recursive  : [eval_main_48/1]
14. non_recursive  : [eval_main_55/1]
15. non_recursive  : [eval_main_54/1]
16. non_recursive  : [eval_main_53/1]
17. recursive  : [eval_main_56/1,eval_main_57/1,eval_main_58/1,eval_main_59/1,eval_main_60/1,eval_main_61/1,eval_main_62/1,eval_main_63/1,eval_main_66/1,eval_main_67/1,eval_main_69/1,eval_main_70/1,eval_main_bb16_in/1,eval_main_bb20_in/1]
18. recursive  : [eval_main_75/1,eval_main_76/1,eval_main_77/1,eval_main_78/1,eval_main_79/1,eval_main_80/1,eval_main_81/1,eval_main_82/1,eval_main_85/1,eval_main_86/1,eval_main_88/1,eval_main_89/1,eval_main_bb21_in/1,eval_main_bb25_in/1]
19. non_recursive  : [eval_main_99/1]
20. non_recursive  : [eval_main_98/1]
21. non_recursive  : [eval_main_97/1]
22. recursive  : [eval_main_108/3,eval_main_109/3,eval_main_bb29_in/3]
23. recursive  : [eval_main_103/1,eval_main_104/1,eval_main_113/2,eval_main_114/2,eval_main_115/2,eval_main_116/2,eval_main_117/2,eval_main_118/2,eval_main_bb27_in/1,eval_main_bb33_in/2,loop_cont_eval_main_bb29_in/3]
24. non_recursive  : [eval_main_121/1]
25. non_recursive  : [eval_main_120/1]
26. non_recursive  : [loop_cont_eval_main_bb27_in/2]
27. non_recursive  : [eval_main_96/1]
28. non_recursive  : [eval_main_95/1]
29. non_recursive  : [eval_main_94/1]
30. non_recursive  : [eval_main_93/1]
31. non_recursive  : [eval_main__critedge3_in/1]
32. non_recursive  : [loop_cont_eval_main_bb21_in/2]
33. non_recursive  : [eval_main__critedge2_in/1]
34. non_recursive  : [loop_cont_eval_main_bb16_in/2]
35. non_recursive  : [eval_main_52/1]
36. non_recursive  : [eval_main_51/1]
37. non_recursive  : [eval_main_47/1]
38. non_recursive  : [eval_main_46/1]
39. non_recursive  : [eval_main_45/2]
40. non_recursive  : [eval_main_44/2]
41. non_recursive  : [eval_main_43/3]
42. non_recursive  : [eval_main_42/3]
43. non_recursive  : [eval_main_41/3]
44. non_recursive  : [eval_main_40/3]
45. non_recursive  : [eval_main_39/3]
46. non_recursive  : [eval_main__critedge1_in/3]
47. non_recursive  : [loop_cont_eval_main__critedge_in/4]
48. non_recursive  : [loop_cont_eval_main_bb8_in/4]
49. non_recursive  : [eval_main_17/1]
50. non_recursive  : [eval_main_16/1]
51. non_recursive  : [eval_main_12/1]
52. non_recursive  : [eval_main_11/1]
53. non_recursive  : [eval_main_10/1]
54. non_recursive  : [eval_main_9/1]
55. non_recursive  : [eval_main_8/1]
56. non_recursive  : [eval_main_7/1]
57. non_recursive  : [eval_main_6/1]
58. non_recursive  : [eval_main_5/1]
59. non_recursive  : [eval_main_1/1]
60. non_recursive  : [eval_main_0/1]
61. non_recursive  : [eval_main_bb0_in/1]
62. non_recursive  : [eval_main_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_main_bb8_in/4
10. SCC is partially evaluated into eval_main__critedge_in/5
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_main_bb16_in/1
18. SCC is partially evaluated into eval_main_bb21_in/1
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is partially evaluated into eval_main_bb29_in/3
23. SCC is partially evaluated into eval_main_bb27_in/1
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is partially evaluated into eval_main_96/1
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is partially evaluated into eval_main__critedge2_in/1
34. SCC is completely evaluated into other SCCs
35. SCC is partially evaluated into eval_main_52/1
36. SCC is completely evaluated into other SCCs
37. SCC is partially evaluated into eval_main_47/1
38. SCC is completely evaluated into other SCCs
39. SCC is completely evaluated into other SCCs
40. SCC is completely evaluated into other SCCs
41. SCC is completely evaluated into other SCCs
42. SCC is completely evaluated into other SCCs
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is completely evaluated into other SCCs
46. SCC is completely evaluated into other SCCs
47. SCC is completely evaluated into other SCCs
48. SCC is partially evaluated into loop_cont_eval_main_bb8_in/4
49. SCC is partially evaluated into eval_main_17/1
50. SCC is completely evaluated into other SCCs
51. SCC is partially evaluated into eval_main_12/1
52. SCC is completely evaluated into other SCCs
53. SCC is completely evaluated into other SCCs
54. SCC is completely evaluated into other SCCs
55. SCC is completely evaluated into other SCCs
56. SCC is partially evaluated into eval_main_7/1
57. SCC is completely evaluated into other SCCs
58. SCC is completely evaluated into other SCCs
59. SCC is partially evaluated into eval_main_1/1
60. SCC is completely evaluated into other SCCs
61. SCC is completely evaluated into other SCCs
62. SCC is partially evaluated into eval_main_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_main_bb8_in/4 
* CE 12 is refined into CE [31] 
* CE 11 is refined into CE [32] 


#### Refined cost equations eval_main_bb8_in/4 
* CE 31: eval_main_bb8_in(V_size1_0,B,C,D) = 1+ eval_main_bb8_in(E,B,C,D)
     [] 
* CE 32: eval_main_bb8_in(A,B,A,C) = 0
     [C=0,B=3] 

### Cost equations --> "Loop" of eval_main_bb8_in/4 
* CEs [32] --> Loop 23 
* CEs [31] --> Loop 24 

#### Loops of eval_main_bb8_in/4 
* Loop 23: eval_main_bb8_in(A,B,A,C) [C=0,B=3] 
* Loop 24: eval_main_bb8_in(V_size1_0,B,C,D)->  eval_main_bb8_in(V_size1_0',B,C,D)
                  [] 

### Ranking functions of CR eval_main_bb8_in(V_size1_0,B,C,D) 

#### Partial ranking functions of CR eval_main_bb8_in(V_size1_0,B,C,D) 


### Resulting Chains:eval_main_bb8_in(V_size1_0,B,C,D) 
* [[24]]...
* [[24],23]
* [23]


### Merging Chains  eval_main_bb8_in/4 into  External patterns of execution 
* [[23],[23,[24]]] --> 1 
* [[[24]]] --> 2 


### Specialization of cost equations eval_main__critedge_in/5 
* CE 15 is refined into CE [33] 
* CE 14 is refined into CE [34] 


#### Refined cost equations eval_main__critedge_in/5 
* CE 33: eval_main__critedge_in(V_size1_0,V_size2_0,B,C,D) = 1+ eval_main__critedge_in(V_size1_0,E,F,C,D)
     [F=7,B=7] 
* CE 34: eval_main__critedge_in(A,B,C,A,B) = 0
     [C=7] 

### Cost equations --> "Loop" of eval_main__critedge_in/5 
* CEs [34] --> Loop 25 
* CEs [33] --> Loop 26 

#### Loops of eval_main__critedge_in/5 
* Loop 25: eval_main__critedge_in(A,B,C,A,B) [C=7] 
* Loop 26: eval_main__critedge_in(V_size1_0,V_size2_0,B,C,D)->  eval_main__critedge_in(V_size1_0,V_size2_0',B',C,D)
                  [B'=7,B=7] 

### Ranking functions of CR eval_main__critedge_in(V_size1_0,V_size2_0,B,C,D) 

#### Partial ranking functions of CR eval_main__critedge_in(V_size1_0,V_size2_0,B,C,D) 


### Resulting Chains:eval_main__critedge_in(V_size1_0,V_size2_0,B,C,D) 
* [[26]]...
* [[26],25]
* [25]


### Merging Chains  eval_main__critedge_in/5 into  External patterns of execution 
* [[25],[25,[26]]] --> 1 
* [[[26]]] --> 2 


### Specialization of cost equations eval_main_bb16_in/1 
* CE 21 is refined into CE [35] 
* CE 20 is refined into CE [36] 


#### Refined cost equations eval_main_bb16_in/1 
* CE 35: eval_main_bb16_in(B) = 1+ eval_main_bb16_in(C)
     [C=6,B=6] 
* CE 36: eval_main_bb16_in(B) = 0
     [B=6] 

### Cost equations --> "Loop" of eval_main_bb16_in/1 
* CEs [36] --> Loop 27 
* CEs [35] --> Loop 28 

#### Loops of eval_main_bb16_in/1 
* Loop 27: eval_main_bb16_in(B) [B=6] 
* Loop 28: eval_main_bb16_in(B)->  eval_main_bb16_in(B')
                  [B'=6,B=6] 

### Ranking functions of CR eval_main_bb16_in(B) 

#### Partial ranking functions of CR eval_main_bb16_in(B) 


### Resulting Chains:eval_main_bb16_in(B) 
* [[28]]...
* [[28],27]
* [27]


### Merging Chains  eval_main_bb16_in/1 into  External patterns of execution 
* [[27],[27,[28]]] --> 1 
* [[[28]]] --> 2 


### Specialization of cost equations eval_main_bb21_in/1 
* CE 24 is refined into CE [37] 
* CE 23 is refined into CE [38] 


#### Refined cost equations eval_main_bb21_in/1 
* CE 37: eval_main_bb21_in(B) = 1+ eval_main_bb21_in(C)
     [C=5,B=5] 
* CE 38: eval_main_bb21_in(B) = 0
     [B=5] 

### Cost equations --> "Loop" of eval_main_bb21_in/1 
* CEs [38] --> Loop 29 
* CEs [37] --> Loop 30 

#### Loops of eval_main_bb21_in/1 
* Loop 29: eval_main_bb21_in(B) [B=5] 
* Loop 30: eval_main_bb21_in(B)->  eval_main_bb21_in(B')
                  [B'=5,B=5] 

### Ranking functions of CR eval_main_bb21_in(B) 

#### Partial ranking functions of CR eval_main_bb21_in(B) 


### Resulting Chains:eval_main_bb21_in(B) 
* [[30]]...
* [[30],29]
* [29]


### Merging Chains  eval_main_bb21_in/1 into  External patterns of execution 
* [[29],[29,[30]]] --> 1 
* [[[30]]] --> 2 


### Specialization of cost equations eval_main_bb29_in/3 
* CE 30 is refined into CE [39] 
* CE 29 is refined into CE [40] 


#### Refined cost equations eval_main_bb29_in/3 
* CE 39: eval_main_bb29_in(A,B,A) = 0
     [A>=0,B=2] 
* CE 40: eval_main_bb29_in(V_loop_wrap1_0,B,C) = 1+ eval_main_bb29_in(D,E,C)
     [V_loop_wrap1_0>=0,V_loop_wrap1_0+1=D,E=2,B=2] 

### Cost equations --> "Loop" of eval_main_bb29_in/3 
* CEs [40] --> Loop 31 
* CEs [39] --> Loop 32 

#### Loops of eval_main_bb29_in/3 
* Loop 31: eval_main_bb29_in(V_loop_wrap1_0,B,C)->  eval_main_bb29_in(V_loop_wrap1_0',B',C)
                  [V_loop_wrap1_0>=0,V_loop_wrap1_0+1=V_loop_wrap1_0',B'=2,B=2] 
* Loop 32: eval_main_bb29_in(A,B,A) [A>=0,B=2] 

### Ranking functions of CR eval_main_bb29_in(V_loop_wrap1_0,B,C) 

#### Partial ranking functions of CR eval_main_bb29_in(V_loop_wrap1_0,B,C) 


### Resulting Chains:eval_main_bb29_in(V_loop_wrap1_0,B,C) 
* [[31]]...
* [[31],32]
* [32]


### Merging Chains  eval_main_bb29_in/3 into  External patterns of execution 
* [[32]] --> 1 
* [[32,[31]]] --> 2 
* [[[31]]] --> 3 


### Specialization of cost equations eval_main_bb27_in/1 
* CE 28 is refined into CE [41] 
* CE 27 is refined into CE [42,43,44] 


#### Refined cost equations eval_main_bb27_in/1 
* CE 41: eval_main_bb27_in(B) = 0
     [B=4] 
* CE 42: eval_main_bb27_in(B) = 2+ eval_main_bb29_in(C,D,E):1+ eval_main_bb27_in(F)
     [F=4,E=0,D=2,C=0,B=4] 
* CE 43: eval_main_bb27_in(B) = 2+ eval_main_bb29_in(C,D,E):2+ eval_main_bb27_in(F)
     [E>=1,F=4,D=2,C=0,B=4] 
* CE 44: eval_main_bb27_in(B) = 2+ eval_main_bb29_in(C,D,E):3
     [F=4,D=2,C=0,B=4] 

### Cost equations --> "Loop" of eval_main_bb27_in/1 
* CEs [44] --> Loop 33 
* CEs [42,43] --> Loop 34 
* CEs [41] --> Loop 35 

#### Loops of eval_main_bb27_in/1 
* Loop 33: eval_main_bb27_in(B) [B=4] 
* Loop 34: eval_main_bb27_in(B)->  eval_main_bb27_in(B')
                  [B'=4,B=4] 
* Loop 35: eval_main_bb27_in(B) [B=4] 

### Ranking functions of CR eval_main_bb27_in(B) 

#### Partial ranking functions of CR eval_main_bb27_in(B) 


### Resulting Chains:eval_main_bb27_in(B) 
* [[34]]...
* [[34],35]
* [[34],33]...
* [35]
* [33]...


### Merging Chains  eval_main_bb27_in/1 into  External patterns of execution 
* [[35],[35,[34]]] --> 1 
* [[33],[[34]],[33,[34]]] --> 2 


### Specialization of cost equations eval_main_96/1 
* CE 25 is refined into CE [45] 
* CE 26 is refined into CE [46,47] 


#### Refined cost equations eval_main_96/1 
* CE 45: eval_main_96(B) = 0
     [] 
* CE 46: eval_main_96(B) = 1+ eval_main_bb27_in(C):1
     [C=4] 
* CE 47: eval_main_96(B) = 1+ eval_main_bb27_in(C):2
     [C=4] 

### Cost equations --> "Loop" of eval_main_96/1 
* CEs [47] --> Loop 36 
* CEs [45,46] --> Loop 37 

#### Loops of eval_main_96/1 
* Loop 36: eval_main_96(B) [] 
* Loop 37: eval_main_96(B) [] 

### Ranking functions of CR eval_main_96(B) 

#### Partial ranking functions of CR eval_main_96(B) 


### Resulting Chains:eval_main_96(B) 
* [37]
* [36]...


### Merging Chains  eval_main_96/1 into  External patterns of execution 
* [[37]] --> 1 
* [[36]] --> 2 


### Specialization of cost equations eval_main__critedge2_in/1 
* CE 22 is refined into CE [48,49,50] 


#### Refined cost equations eval_main__critedge2_in/1 
* CE 48: eval_main__critedge2_in(B) = 1+ eval_main_bb21_in(C):1+ eval_main_96(B):1
     [C=5] 
* CE 49: eval_main__critedge2_in(B) = 1+ eval_main_bb21_in(C):1+ eval_main_96(B):2
     [C=5] 
* CE 50: eval_main__critedge2_in(B) = 1+ eval_main_bb21_in(C):2
     [C=5] 

### Cost equations --> "Loop" of eval_main__critedge2_in/1 
* CEs [49,50] --> Loop 38 
* CEs [48] --> Loop 39 

#### Loops of eval_main__critedge2_in/1 
* Loop 38: eval_main__critedge2_in(B) [] 
* Loop 39: eval_main__critedge2_in(B) [] 

### Ranking functions of CR eval_main__critedge2_in(B) 

#### Partial ranking functions of CR eval_main__critedge2_in(B) 


### Resulting Chains:eval_main__critedge2_in(B) 
* [39]
* [38]...


### Merging Chains  eval_main__critedge2_in/1 into  External patterns of execution 
* [[39]] --> 1 
* [[38]] --> 2 


### Specialization of cost equations eval_main_52/1 
* CE 18 is refined into CE [51] 
* CE 19 is refined into CE [52,53,54] 


#### Refined cost equations eval_main_52/1 
* CE 51: eval_main_52(B) = 0
     [] 
* CE 52: eval_main_52(B) = 1+ eval_main_bb16_in(C):1+ eval_main__critedge2_in(B):1
     [C=6] 
* CE 53: eval_main_52(B) = 1+ eval_main_bb16_in(C):1+ eval_main__critedge2_in(B):2
     [C=6] 
* CE 54: eval_main_52(B) = 1+ eval_main_bb16_in(C):2
     [C=6] 

### Cost equations --> "Loop" of eval_main_52/1 
* CEs [53,54] --> Loop 40 
* CEs [51,52] --> Loop 41 

#### Loops of eval_main_52/1 
* Loop 40: eval_main_52(B) [] 
* Loop 41: eval_main_52(B) [] 

### Ranking functions of CR eval_main_52(B) 

#### Partial ranking functions of CR eval_main_52(B) 


### Resulting Chains:eval_main_52(B) 
* [41]
* [40]...


### Merging Chains  eval_main_52/1 into  External patterns of execution 
* [[41]] --> 1 
* [[40]] --> 2 


### Specialization of cost equations eval_main_47/1 
* CE 16 is refined into CE [55] 
* CE 17 is refined into CE [56,57] 


#### Refined cost equations eval_main_47/1 
* CE 55: eval_main_47(B) = 0
     [] 
* CE 56: eval_main_47(B) = 0+ eval_main_52(B):1
     [] 
* CE 57: eval_main_47(B) = 0+ eval_main_52(B):2
     [] 

### Cost equations --> "Loop" of eval_main_47/1 
* CEs [57] --> Loop 42 
* CEs [55,56] --> Loop 43 

#### Loops of eval_main_47/1 
* Loop 42: eval_main_47(B) [] 
* Loop 43: eval_main_47(B) [] 

### Ranking functions of CR eval_main_47(B) 

#### Partial ranking functions of CR eval_main_47(B) 


### Resulting Chains:eval_main_47(B) 
* [43]
* [42]...


### Merging Chains  eval_main_47/1 into  External patterns of execution 
* [[43]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations loop_cont_eval_main_bb8_in/4 
* CE 13 is refined into CE [58,59,60] 


#### Refined cost equations loop_cont_eval_main_bb8_in/4 
* CE 58: loop_cont_eval_main_bb8_in(G,A,B,C) = 1+ eval_main__critedge_in(A,B,H,A,I):1+ eval_main_47(C):1
     [H=7,G=3] 
* CE 59: loop_cont_eval_main_bb8_in(G,A,B,C) = 1+ eval_main__critedge_in(A,B,H,A,I):1+ eval_main_47(C):2
     [H=7,G=3] 
* CE 60: loop_cont_eval_main_bb8_in(G,A,B,C) = 1+ eval_main__critedge_in(A,B,H,I,J):2
     [H=7,G=3] 

### Cost equations --> "Loop" of loop_cont_eval_main_bb8_in/4 
* CEs [59,60] --> Loop 44 
* CEs [58] --> Loop 45 

#### Loops of loop_cont_eval_main_bb8_in/4 
* Loop 44: loop_cont_eval_main_bb8_in(G,A,B,C) [G=3] 
* Loop 45: loop_cont_eval_main_bb8_in(G,A,B,C) [G=3] 

### Ranking functions of CR loop_cont_eval_main_bb8_in(G,A,B,C) 

#### Partial ranking functions of CR loop_cont_eval_main_bb8_in(G,A,B,C) 


### Resulting Chains:loop_cont_eval_main_bb8_in(G,A,B,C) 
* [45]
* [44]...


### Merging Chains  loop_cont_eval_main_bb8_in/4 into  External patterns of execution 
* [[45]] --> 1 
* [[44]] --> 2 


### Specialization of cost equations eval_main_17/1 
* CE 9 is refined into CE [61] 
* CE 10 is refined into CE [62,63,64] 


#### Refined cost equations eval_main_17/1 
* CE 61: eval_main_17(B) = 0
     [] 
* CE 62: eval_main_17(B) = 1+ eval_main_bb8_in(C,D,E,F):1+ loop_cont_eval_main_bb8_in(G,E,H,B):1
     [H=0,G=3,F=0,D=3,C=0] 
* CE 63: eval_main_17(B) = 1+ eval_main_bb8_in(C,D,E,F):1+ loop_cont_eval_main_bb8_in(G,E,H,B):2
     [H=0,G=3,F=0,D=3,C=0] 
* CE 64: eval_main_17(B) = 1+ eval_main_bb8_in(C,D,E,F):2
     [C=0] 

### Cost equations --> "Loop" of eval_main_17/1 
* CEs [63,64] --> Loop 46 
* CEs [61,62] --> Loop 47 

#### Loops of eval_main_17/1 
* Loop 46: eval_main_17(B) [] 
* Loop 47: eval_main_17(B) [] 

### Ranking functions of CR eval_main_17(B) 

#### Partial ranking functions of CR eval_main_17(B) 


### Resulting Chains:eval_main_17(B) 
* [47]
* [46]...


### Merging Chains  eval_main_17/1 into  External patterns of execution 
* [[47]] --> 1 
* [[46]] --> 2 


### Specialization of cost equations eval_main_12/1 
* CE 7 is refined into CE [65] 
* CE 8 is refined into CE [66,67] 


#### Refined cost equations eval_main_12/1 
* CE 65: eval_main_12(B) = 0
     [] 
* CE 66: eval_main_12(B) = 0+ eval_main_17(B):1
     [] 
* CE 67: eval_main_12(B) = 0+ eval_main_17(B):2
     [] 

### Cost equations --> "Loop" of eval_main_12/1 
* CEs [67] --> Loop 48 
* CEs [65,66] --> Loop 49 

#### Loops of eval_main_12/1 
* Loop 48: eval_main_12(B) [] 
* Loop 49: eval_main_12(B) [] 

### Ranking functions of CR eval_main_12(B) 

#### Partial ranking functions of CR eval_main_12(B) 


### Resulting Chains:eval_main_12(B) 
* [49]
* [48]...


### Merging Chains  eval_main_12/1 into  External patterns of execution 
* [[49]] --> 1 
* [[48]] --> 2 


### Specialization of cost equations eval_main_7/1 
* CE 5 is refined into CE [68] 
* CE 6 is refined into CE [69,70] 


#### Refined cost equations eval_main_7/1 
* CE 68: eval_main_7(B) = 0
     [] 
* CE 69: eval_main_7(B) = 0+ eval_main_12(B):1
     [] 
* CE 70: eval_main_7(B) = 0+ eval_main_12(B):2
     [] 

### Cost equations --> "Loop" of eval_main_7/1 
* CEs [70] --> Loop 50 
* CEs [68,69] --> Loop 51 

#### Loops of eval_main_7/1 
* Loop 50: eval_main_7(B) [] 
* Loop 51: eval_main_7(B) [] 

### Ranking functions of CR eval_main_7(B) 

#### Partial ranking functions of CR eval_main_7(B) 


### Resulting Chains:eval_main_7(B) 
* [51]
* [50]...


### Merging Chains  eval_main_7/1 into  External patterns of execution 
* [[51]] --> 1 
* [[50]] --> 2 


### Specialization of cost equations eval_main_1/1 
* CE 3 is refined into CE [71] 
* CE 4 is refined into CE [72,73] 


#### Refined cost equations eval_main_1/1 
* CE 71: eval_main_1(B) = 0
     [] 
* CE 72: eval_main_1(B) = 0+ eval_main_7(B):1
     [] 
* CE 73: eval_main_1(B) = 0+ eval_main_7(B):2
     [] 

### Cost equations --> "Loop" of eval_main_1/1 
* CEs [73] --> Loop 52 
* CEs [71,72] --> Loop 53 

#### Loops of eval_main_1/1 
* Loop 52: eval_main_1(B) [] 
* Loop 53: eval_main_1(B) [] 

### Ranking functions of CR eval_main_1(B) 

#### Partial ranking functions of CR eval_main_1(B) 


### Resulting Chains:eval_main_1(B) 
* [53]
* [52]...


### Merging Chains  eval_main_1/1 into  External patterns of execution 
* [[53]] --> 1 
* [[52]] --> 2 


### Specialization of cost equations eval_main_start/2 
* CE 2 is refined into CE [74,75] 


#### Refined cost equations eval_main_start/2 
* CE 74: eval_main_start(V_argc,B) = 0+ eval_main_1(B):1
     [] 
* CE 75: eval_main_start(V_argc,B) = 0+ eval_main_1(B):2
     [] 

### Cost equations --> "Loop" of eval_main_start/2 
* CEs [75] --> Loop 54 
* CEs [74] --> Loop 55 

#### Loops of eval_main_start/2 
* Loop 54: eval_main_start(V_argc,B) [] 
* Loop 55: eval_main_start(V_argc,B) [] 

### Ranking functions of CR eval_main_start(V_argc,B) 

#### Partial ranking functions of CR eval_main_start(V_argc,B) 


### Resulting Chains:eval_main_start(V_argc,B) 
* [55]
* [54]...


### Merging Chains  eval_main_start/2 into  External patterns of execution 
* [[55]] --> 1 
* [[54]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [24] 

 * loop 24:eval_main_bb8_in(V_size1_0,B,C,D) -> [eval_main_bb8_in(V_size1_0',B',C',D')] 
1
#### Cost of phase [24]:eval_main_bb8_in(V_size1_0,B,C,D) -> [eval_main_bb8_in(V_size1_0',B',C',D')] 
1*it(24)+0
#### Cost of phase [24]:eval_main_bb8_in(V_size1_0,B,C,D) -> [eval_main_bb8_in(V_size1_0',B',C',D')] 
1*it(24)+0
#### Cost of chains of eval_main_bb8_in(V_size1_0,B,C,D):
* Chain [[24]]...: 1*it(24)+0
  with precondition: [] 

* Chain [[24],23]: 1*it(24)+0
  with precondition: [B=3,D=0] 

* Chain [23]: 0
  with precondition: [B=3,D=0,C=V_size1_0] 


#### Cost of loops [26] 

 * loop 26:eval_main__critedge_in(V_size1_0,V_size2_0,B,C,D) -> [eval_main__critedge_in(V_size1_0',V_size2_0',B',C',D')] 
1
#### Cost of phase [26]:eval_main__critedge_in(V_size1_0,V_size2_0,B,C,D) -> [eval_main__critedge_in(V_size1_0',V_size2_0',B',C',D')] 
1*it(26)+0
#### Cost of phase [26]:eval_main__critedge_in(V_size1_0,V_size2_0,B,C,D) -> [eval_main__critedge_in(V_size1_0',V_size2_0',B',C',D')] 
1*it(26)+0
#### Cost of chains of eval_main__critedge_in(V_size1_0,V_size2_0,B,C,D):
* Chain [[26]]...: 1*it(26)+0
  with precondition: [B=7] 

* Chain [[26],25]: 1*it(26)+0
  with precondition: [B=7,V_size1_0=C] 

* Chain [25]: 0
  with precondition: [B=7,C=V_size1_0,D=V_size2_0] 


#### Cost of loops [28] 

 * loop 28:eval_main_bb16_in(B) -> [eval_main_bb16_in(B')] 
1
#### Cost of phase [28]:eval_main_bb16_in(B) -> [eval_main_bb16_in(B')] 
1*it(28)+0
#### Cost of phase [28]:eval_main_bb16_in(B) -> [eval_main_bb16_in(B')] 
1*it(28)+0
#### Cost of chains of eval_main_bb16_in(B):
* Chain [[28]]...: 1*it(28)+0
  with precondition: [B=6] 

* Chain [[28],27]: 1*it(28)+0
  with precondition: [B=6] 

* Chain [27]: 0
  with precondition: [B=6] 


#### Cost of loops [30] 

 * loop 30:eval_main_bb21_in(B) -> [eval_main_bb21_in(B')] 
1
#### Cost of phase [30]:eval_main_bb21_in(B) -> [eval_main_bb21_in(B')] 
1*it(30)+0
#### Cost of phase [30]:eval_main_bb21_in(B) -> [eval_main_bb21_in(B')] 
1*it(30)+0
#### Cost of chains of eval_main_bb21_in(B):
* Chain [[30]]...: 1*it(30)+0
  with precondition: [B=5] 

* Chain [[30],29]: 1*it(30)+0
  with precondition: [B=5] 

* Chain [29]: 0
  with precondition: [B=5] 


#### Cost of loops [31] 

 * loop 31:eval_main_bb29_in(V_loop_wrap1_0,B,C) -> [eval_main_bb29_in(V_loop_wrap1_0',B',C')] 
1
#### Cost of phase [31]:eval_main_bb29_in(V_loop_wrap1_0,B,C) -> [eval_main_bb29_in(V_loop_wrap1_0',B',C')] 
1*it(31)+0
#### Cost of phase [31]:eval_main_bb29_in(V_loop_wrap1_0,B,C) -> [eval_main_bb29_in(V_loop_wrap1_0',B',C')] 
1*it(31)+0
#### Cost of chains of eval_main_bb29_in(V_loop_wrap1_0,B,C):
* Chain [[31]]...: 1*it(31)+0
  with precondition: [V_loop_wrap1_0>=0,B=2] 

* Chain [[31],32]: 1*it(31)+0
  with precondition: [B=2,V_loop_wrap1_0>=0,C>=V_loop_wrap1_0+1] 

* Chain [32]: 0
  with precondition: [B=2,V_loop_wrap1_0=C,V_loop_wrap1_0>=0] 


#### Cost of loops [34] 

 * loop 34:eval_main_bb27_in(B) -> [eval_main_bb27_in(B')] 
1*s(6)+0
#### Cost of phase [34]:eval_main_bb27_in(B) -> [eval_main_bb27_in(B')] 
1*s(7)+0
#### Cost of phase [34]:eval_main_bb27_in(B) -> [eval_main_bb27_in(B')] 
1*s(7)+0
#### Cost of phase [34]:eval_main_bb27_in(B) -> [eval_main_bb27_in(B')] 
1*s(7)+0
#### Cost of chains of eval_main_bb27_in(B):
* Chain [[34]]...: 1*s(7)+0
  with precondition: [B=4] 

* Chain [[34],35]: 1*s(7)+0
  with precondition: [B=4] 

* Chain [[34],33]...: 2*s(7)+2
  with precondition: [B=4] 

* Chain [35]: 0
  with precondition: [B=4] 

* Chain [33]...: 1*s(8)+2
  with precondition: [B=4] 


#### Cost of chains of eval_main_96(B):
* Chain [37]: 1*aux(8)+0
  with precondition: [] 

* Chain [36]...: 1*s(14)+1
  with precondition: [] 


#### Cost of chains of eval_main__critedge2_in(B):
* Chain [39]: 2*s(15)+1
  with precondition: [] 

* Chain [38]...: 1*aux(9)+0
  with precondition: [] 


#### Cost of chains of eval_main_52(B):
* Chain [41]: 1*aux(10)+0
  with precondition: [] 

* Chain [40]...: 1*aux(11)+0
  with precondition: [] 


#### Cost of chains of eval_main_47(B):
* Chain [43]: 1*aux(12)+0
  with precondition: [] 

* Chain [42]...: 1*s(26)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_main_bb8_in(G,A,B,C):
* Chain [45]: 2*s(27)+1
  with precondition: [G=3] 

* Chain [44]...: 1*aux(13)+0
  with precondition: [G=3] 


#### Cost of chains of eval_main_17(B):
* Chain [47]: 1*aux(14)+0
  with precondition: [] 

* Chain [46]...: 1*aux(15)+0
  with precondition: [] 


#### Cost of chains of eval_main_12(B):
* Chain [49]: 1*aux(16)+0
  with precondition: [] 

* Chain [48]...: 1*s(38)+0
  with precondition: [] 


#### Cost of chains of eval_main_7(B):
* Chain [51]: 1*aux(17)+0
  with precondition: [] 

* Chain [50]...: 1*s(40)+0
  with precondition: [] 


#### Cost of chains of eval_main_1(B):
* Chain [53]: 1*aux(18)+0
  with precondition: [] 

* Chain [52]...: 1*s(42)+0
  with precondition: [] 


#### Cost of chains of eval_main_start(V_argc,B):
* Chain [55]: 1*s(43)+0
  with precondition: [] 

* Chain [54]...: 1*s(44)+0
  with precondition: [] 


Closed-form bounds of eval_main_start(V_argc,B): 
-------------------------------------
* Chain [55] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [54]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_main_start(V_argc,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 40 ms.
* Invariants computed in 21 ms.
   - Backward Invariants 11 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 38 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 31 ms.
   - Equation cost structures 11 ms.
   - Phase cost structures 9 ms.
   - Chain cost structures 10 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 264 ms.

