Warning: Ignored call to eval_write_scan_header_stop/1 in equation eval_write_scan_header_31/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_write_scan_header_31/1]
1. non_recursive  : [eval_write_scan_header_30/1]
2. non_recursive  : [eval_write_scan_header_bb13_in/1]
3. non_recursive  : [eval_write_scan_header_29/1]
4. non_recursive  : [eval_write_scan_header_28/1]
5. non_recursive  : [eval_write_scan_header_bb11_in/1]
6. non_recursive  : [eval_write_scan_header_3/1]
7. non_recursive  : [eval_write_scan_header_2/1]
8. recursive  : [eval_write_scan_header_14/3,eval_write_scan_header_15/3,eval_write_scan_header_17/3,eval_write_scan_header_18/3,eval_write_scan_header_20/3,eval_write_scan_header_21/3,eval_write_scan_header_22/4,eval_write_scan_header_23/4,eval_write_scan_header_bb10_in/2,eval_write_scan_header_bb3_in/2]
9. non_recursive  : [loop_cont_eval_write_scan_header_bb3_in/2]
10. non_recursive  : [eval_write_scan_header_bb0_in/1]
11. non_recursive  : [eval_write_scan_header_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_write_scan_header_bb11_in/1
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_write_scan_header_bb3_in/2
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_write_scan_header_bb0_in/1
11. SCC is partially evaluated into eval_write_scan_header_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_write_scan_header_bb11_in/1 
* CE 5 is refined into CE [8] 


#### Refined cost equations eval_write_scan_header_bb11_in/1 
* CE 8: eval_write_scan_header_bb11_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_write_scan_header_bb11_in/1 
* CEs [8] --> Loop 6 

#### Loops of eval_write_scan_header_bb11_in/1 
* Loop 6: eval_write_scan_header_bb11_in(B) [] 

### Ranking functions of CR eval_write_scan_header_bb11_in(B) 

#### Partial ranking functions of CR eval_write_scan_header_bb11_in(B) 


### Resulting Chains:eval_write_scan_header_bb11_in(B) 
* [6]


### Merging Chains  eval_write_scan_header_bb11_in/1 into  External patterns of execution 
* [[6]] --> 1 


### Specialization of cost equations eval_write_scan_header_bb3_in/2 
* CE 7 is refined into CE [9] 
* CE 6 is refined into CE [10] 


#### Refined cost equations eval_write_scan_header_bb3_in/2 
* CE 9: eval_write_scan_header_bb3_in(V_i_0,B) = 0
     [V_i_0>=0,B=2] 
* CE 10: eval_write_scan_header_bb3_in(V_i_0,B) = 1+ eval_write_scan_header_bb3_in(C,D)
     [V_i_0>=0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_write_scan_header_bb3_in/2 
* CEs [10] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_write_scan_header_bb3_in/2 
* Loop 7: eval_write_scan_header_bb3_in(V_i_0,B)->  eval_write_scan_header_bb3_in(V_i_0',B')
                  [V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 8: eval_write_scan_header_bb3_in(V_i_0,B) [V_i_0>=0,B=2] 

### Ranking functions of CR eval_write_scan_header_bb3_in(V_i_0,B) 

#### Partial ranking functions of CR eval_write_scan_header_bb3_in(V_i_0,B) 


### Resulting Chains:eval_write_scan_header_bb3_in(V_i_0,B) 
* [[7]]...
* [[7],8]
* [8]


### Merging Chains  eval_write_scan_header_bb3_in/2 into  External patterns of execution 
* [[8],[8,[7]]] --> 1 
* [[[7]]] --> 2 


### Specialization of cost equations eval_write_scan_header_bb0_in/1 
* CE 3 is refined into CE [11] 
* CE 4 is refined into CE [12,13] 


#### Refined cost equations eval_write_scan_header_bb0_in/1 
* CE 11: eval_write_scan_header_bb0_in(B) = 0+ eval_write_scan_header_bb11_in(B):1
     [] 
* CE 12: eval_write_scan_header_bb0_in(B) = 1+ eval_write_scan_header_bb3_in(C,D):1+ eval_write_scan_header_bb11_in(B):1
     [D=2,C=0] 
* CE 13: eval_write_scan_header_bb0_in(B) = 1+ eval_write_scan_header_bb3_in(C,D):2
     [D=2,C=0] 

### Cost equations --> "Loop" of eval_write_scan_header_bb0_in/1 
* CEs [13] --> Loop 9 
* CEs [11,12] --> Loop 10 

#### Loops of eval_write_scan_header_bb0_in/1 
* Loop 9: eval_write_scan_header_bb0_in(B) [] 
* Loop 10: eval_write_scan_header_bb0_in(B) [] 

### Ranking functions of CR eval_write_scan_header_bb0_in(B) 

#### Partial ranking functions of CR eval_write_scan_header_bb0_in(B) 


### Resulting Chains:eval_write_scan_header_bb0_in(B) 
* [10]
* [9]...


### Merging Chains  eval_write_scan_header_bb0_in/1 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_write_scan_header_start/1 
* CE 2 is refined into CE [14,15] 


#### Refined cost equations eval_write_scan_header_start/1 
* CE 14: eval_write_scan_header_start(B) = 0+ eval_write_scan_header_bb0_in(B):1
     [] 
* CE 15: eval_write_scan_header_start(B) = 0+ eval_write_scan_header_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_write_scan_header_start/1 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_write_scan_header_start/1 
* Loop 11: eval_write_scan_header_start(B) [] 
* Loop 12: eval_write_scan_header_start(B) [] 

### Ranking functions of CR eval_write_scan_header_start(B) 

#### Partial ranking functions of CR eval_write_scan_header_start(B) 


### Resulting Chains:eval_write_scan_header_start(B) 
* [12]
* [11]...


### Merging Chains  eval_write_scan_header_start/1 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of chains of eval_write_scan_header_bb11_in(B):
* Chain [6]: 0
  with precondition: [] 


#### Cost of loops [7] 

 * loop 7:eval_write_scan_header_bb3_in(V_i_0,B) -> [eval_write_scan_header_bb3_in(V_i_0',B')] 
1
#### Cost of phase [7]:eval_write_scan_header_bb3_in(V_i_0,B) -> [eval_write_scan_header_bb3_in(V_i_0',B')] 
1*it(7)+0
#### Cost of phase [7]:eval_write_scan_header_bb3_in(V_i_0,B) -> [eval_write_scan_header_bb3_in(V_i_0',B')] 
1*it(7)+0
#### Cost of chains of eval_write_scan_header_bb3_in(V_i_0,B):
* Chain [[7]]...: 1*it(7)+0
  with precondition: [V_i_0>=0,B=2] 

* Chain [[7],8]: 1*it(7)+0
  with precondition: [B=2,V_i_0>=0] 

* Chain [8]: 0
  with precondition: [B=2,V_i_0>=0] 


#### Cost of chains of eval_write_scan_header_bb0_in(B):
* Chain [10]: 1*aux(2)+0
  with precondition: [] 

* Chain [9]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_write_scan_header_start(B):
* Chain [12]: 1*s(4)+0
  with precondition: [] 

* Chain [11]...: 1*s(5)+1
  with precondition: [] 


Closed-form bounds of eval_write_scan_header_start(B): 
-------------------------------------
* Chain [12] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [11]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_write_scan_header_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 13 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 22 ms.
* Termination proved in 3 ms.
* Upper bounds computed in 19 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 5 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 122 ms.

