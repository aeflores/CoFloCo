Warning: Ignored call to eval_cie_prepare_caches_stop/1 in equation eval_cie_prepare_caches_bb4_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_cie_prepare_caches_3/3,eval_cie_prepare_caches_4/3,eval_cie_prepare_caches_bb1_in/3]
1. non_recursive  : [eval_cie_prepare_caches_bb4_in/1]
2. non_recursive  : [loop_cont_eval_cie_prepare_caches_bb1_in/2]
3. non_recursive  : [eval_cie_prepare_caches_bb0_in/2]
4. non_recursive  : [eval_cie_prepare_caches_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_cie_prepare_caches_bb1_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_cie_prepare_caches_bb0_in/2
4. SCC is partially evaluated into eval_cie_prepare_caches_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_cie_prepare_caches_bb1_in/3 
* CE 5 is refined into CE [7] 
* CE 6 is refined into CE [8] 
* CE 4 is refined into CE [9] 


#### Refined cost equations eval_cie_prepare_caches_bb1_in/3 
* CE 7: eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) = 0
     [V_count>=V_i_0+1,V_i_0>=0,B=2] 
* CE 8: eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) = 0
     [V_i_0>=V_count,V_i_0>=0,B=2] 
* CE 9: eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) = 1+ eval_cie_prepare_caches_bb1_in(V_count,C,D)
     [V_count>=V_i_0+1,V_i_0>=0,V_i_0+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_cie_prepare_caches_bb1_in/3 
* CEs [9] --> Loop 6 
* CEs [7] --> Loop 7 
* CEs [8] --> Loop 8 

#### Loops of eval_cie_prepare_caches_bb1_in/3 
* Loop 6: eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B)->  eval_cie_prepare_caches_bb1_in(V_count,V_i_0',B')
                  [V_count>=V_i_0+1,V_i_0>=0,V_i_0+1=V_i_0',B'=2,B=2] 
* Loop 7: eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) [V_count>=V_i_0+1,V_i_0>=0,B=2] 
* Loop 8: eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) [V_i_0>=V_count,V_i_0>=0,B=2] 

### Ranking functions of CR eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) 
* RF of phase [6]: [V_count-V_i_0]

#### Partial ranking functions of CR eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    V_count-V_i_0


### Resulting Chains:eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) 
* [[6],8]
* [[6],7]
* [8]
* [7]


### Merging Chains  eval_cie_prepare_caches_bb1_in/3 into  External patterns of execution 
* [[8]] --> 1 
* [[7],[7,[6]],[8,[6]]] --> 2 


### Specialization of cost equations eval_cie_prepare_caches_bb0_in/2 
* CE 3 is refined into CE [10,11] 


#### Refined cost equations eval_cie_prepare_caches_bb0_in/2 
* CE 10: eval_cie_prepare_caches_bb0_in(V_count,B) = 1+ eval_cie_prepare_caches_bb1_in(V_count,C,D):1
     [0>=V_count,D=2,C=0] 
* CE 11: eval_cie_prepare_caches_bb0_in(V_count,B) = 1+ eval_cie_prepare_caches_bb1_in(V_count,C,D):2
     [V_count>=1,D=2,C=0] 

### Cost equations --> "Loop" of eval_cie_prepare_caches_bb0_in/2 
* CEs [11] --> Loop 9 
* CEs [10] --> Loop 10 

#### Loops of eval_cie_prepare_caches_bb0_in/2 
* Loop 9: eval_cie_prepare_caches_bb0_in(V_count,B) [V_count>=1] 
* Loop 10: eval_cie_prepare_caches_bb0_in(V_count,B) [0>=V_count] 

### Ranking functions of CR eval_cie_prepare_caches_bb0_in(V_count,B) 

#### Partial ranking functions of CR eval_cie_prepare_caches_bb0_in(V_count,B) 


### Resulting Chains:eval_cie_prepare_caches_bb0_in(V_count,B) 
* [10]
* [9]


### Merging Chains  eval_cie_prepare_caches_bb0_in/2 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_cie_prepare_caches_start/2 
* CE 2 is refined into CE [12,13] 


#### Refined cost equations eval_cie_prepare_caches_start/2 
* CE 12: eval_cie_prepare_caches_start(V_count,B) = 0+ eval_cie_prepare_caches_bb0_in(V_count,B):1
     [0>=V_count] 
* CE 13: eval_cie_prepare_caches_start(V_count,B) = 0+ eval_cie_prepare_caches_bb0_in(V_count,B):2
     [V_count>=1] 

### Cost equations --> "Loop" of eval_cie_prepare_caches_start/2 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

#### Loops of eval_cie_prepare_caches_start/2 
* Loop 11: eval_cie_prepare_caches_start(V_count,B) [V_count>=1] 
* Loop 12: eval_cie_prepare_caches_start(V_count,B) [0>=V_count] 

### Ranking functions of CR eval_cie_prepare_caches_start(V_count,B) 

#### Partial ranking functions of CR eval_cie_prepare_caches_start(V_count,B) 


### Resulting Chains:eval_cie_prepare_caches_start(V_count,B) 
* [12]
* [11]


### Merging Chains  eval_cie_prepare_caches_start/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [6] 

 * loop 6:eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) -> [eval_cie_prepare_caches_bb1_in(V_count',V_i_0',B')] 
1
#### Cost of phase [6]:eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) -> [eval_cie_prepare_caches_bb1_in(V_count',V_i_0',B')] 
1*it(6)+0
  Such that:it(6) =< V_count-V_i_0
it(6) =< V_count-V_i_0-V_count'+V_i_0'

#### Cost of phase [6]:eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B) -> [eval_cie_prepare_caches_bb1_in(V_count',V_i_0',B')] 
1*it(6)+0
  Such that:it(6) =< V_count-V_i_0
it(6) =< V_count-V_i_0-V_count'+V_i_0'

#### Cost of chains of eval_cie_prepare_caches_bb1_in(V_count,V_i_0,B):
* Chain [[6],8]: 1*it(6)+0
  Such that:it(6) =< V_count-V_i_0

  with precondition: [B=2,V_i_0>=0,V_count>=V_i_0+1] 

* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< V_count-V_i_0

  with precondition: [B=2,V_i_0>=0,V_count>=V_i_0+2] 

* Chain [8]: 0
  with precondition: [B=2,V_i_0>=0,V_i_0>=V_count] 

* Chain [7]: 0
  with precondition: [B=2,V_i_0>=0,V_count>=V_i_0+1] 


#### Cost of chains of eval_cie_prepare_caches_bb0_in(V_count,B):
* Chain [10]: 1
  with precondition: [0>=V_count] 

* Chain [9]: 2*s(4)+1
  Such that:s(3) =< V_count
s(4) =< s(3)

  with precondition: [V_count>=1] 


#### Cost of chains of eval_cie_prepare_caches_start(V_count,B):
* Chain [12]: 1
  with precondition: [0>=V_count] 

* Chain [11]: 2*s(6)+1
  Such that:s(5) =< V_count
s(6) =< s(5)

  with precondition: [V_count>=1] 


Closed-form bounds of eval_cie_prepare_caches_start(V_count,B): 
-------------------------------------
* Chain [12] with precondition: [0>=V_count] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [11] with precondition: [V_count>=1] 
    - Upper bound: 2*V_count+1 
    - Complexity: n 

### Maximum cost of eval_cie_prepare_caches_start(V_count,B): nat(V_count)*2+1 
Asymptotic class: n 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 15 ms.
* Invariants computed in 26 ms.
   - Backward Invariants 15 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 39 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 40 ms.
   - Equation cost structures 14 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 15 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 158 ms.

