Warning: Ignored call to eval_read_samples_pcm_stop/1 in equation eval_read_samples_pcm_18/1 
Warning: Ignored call to eval_read_samples_pcm_stop/1 in equation eval_read_samples_pcm_9/1 
Warning: Ignored call to eval_read_samples_pcm_stop/1 in equation eval_read_samples_pcm_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_read_samples_pcm_18/1]
1. non_recursive  : [eval_read_samples_pcm_17/2]
2. non_recursive  : [eval_read_samples_pcm_16/2]
3. recursive  : [eval_read_samples_pcm_bb13_in/3]
4. non_recursive  : [eval_read_samples_pcm_bb15_in/1]
5. non_recursive  : [loop_cont_eval_read_samples_pcm_bb13_in/2]
6. non_recursive  : [eval_read_samples_pcm_bb11_in/3]
7. non_recursive  : [eval_read_samples_pcm_30/3]
8. non_recursive  : [eval_read_samples_pcm_29/4]
9. non_recursive  : [eval_read_samples_pcm_bb9_in/4]
10. non_recursive  : [eval_read_samples_pcm_26/4]
11. non_recursive  : [eval_read_samples_pcm_25/4]
12. non_recursive  : [eval_read_samples_pcm_bb7_in/4]
13. non_recursive  : [eval_read_samples_pcm_22/4]
14. non_recursive  : [eval_read_samples_pcm_21/4]
15. non_recursive  : [eval_read_samples_pcm_bb5_in/4]
16. non_recursive  : [eval_read_samples_pcm_13/5]
17. non_recursive  : [eval_read_samples_pcm_12/4]
18. non_recursive  : [eval_read_samples_pcm_9/1]
19. non_recursive  : [eval_read_samples_pcm_8/2]
20. non_recursive  : [eval_read_samples_pcm_7/2]
21. non_recursive  : [eval_read_samples_pcm_6/4]
22. non_recursive  : [eval_read_samples_pcm_5/4]
23. non_recursive  : [eval_read_samples_pcm_4/4]
24. non_recursive  : [eval_read_samples_pcm_3/4]
25. non_recursive  : [eval_read_samples_pcm_bb0_in/4]
26. non_recursive  : [eval_read_samples_pcm_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_read_samples_pcm_bb13_in/3
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_read_samples_pcm_bb11_in/3
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_read_samples_pcm_bb9_in/4
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_read_samples_pcm_bb7_in/4
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_read_samples_pcm_bb5_in/4
16. SCC is partially evaluated into eval_read_samples_pcm_13/5
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is partially evaluated into eval_read_samples_pcm_6/4
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is partially evaluated into eval_read_samples_pcm_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_read_samples_pcm_bb13_in/3 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 


#### Refined cost equations eval_read_samples_pcm_bb13_in/3 
* CE 16: eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B) = 0
     [V_samples_read_1>=V_frame_size,B=2] 
* CE 17: eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B) = 1+ eval_read_samples_pcm_bb13_in(V_frame_size,C,D)
     [V_frame_size>=V_samples_read_1+1,V_samples_read_1+1=C,D=2,B=2] 

### Cost equations --> "Loop" of eval_read_samples_pcm_bb13_in/3 
* CEs [17] --> Loop 10 
* CEs [16] --> Loop 11 

#### Loops of eval_read_samples_pcm_bb13_in/3 
* Loop 10: eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B)->  eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1',B')
                  [V_frame_size>=V_samples_read_1+1,V_samples_read_1+1=V_samples_read_1',B'=2,B=2] 
* Loop 11: eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B) [V_samples_read_1>=V_frame_size,B=2] 

### Ranking functions of CR eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B) 
* RF of phase [10]: [V_frame_size-V_samples_read_1]

#### Partial ranking functions of CR eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    V_frame_size-V_samples_read_1


### Resulting Chains:eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B) 
* [[10],11]
* [11]


### Merging Chains  eval_read_samples_pcm_bb13_in/3 into  External patterns of execution 
* [[11]] --> 1 
* [[11,[10]]] --> 2 


### Specialization of cost equations eval_read_samples_pcm_bb11_in/3 
* CE 11 is refined into CE [18,19] 
* CE 12 is refined into CE [20,21] 
* CE 13 is refined into CE [22] 


#### Refined cost equations eval_read_samples_pcm_bb11_in/3 
* CE 18: eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B) = 1+ eval_read_samples_pcm_bb13_in(V_frame_size,C,D):1
     [0>=V_frame_size,D=2,C=0] 
* CE 19: eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B) = 1+ eval_read_samples_pcm_bb13_in(V_frame_size,C,D):2
     [V_frame_size>=1,D=2,C=0] 
* CE 20: eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B) = 1+ eval_read_samples_pcm_bb13_in(V_frame_size,V_8,C):1
     [V_8>=V_frame_size,C=2] 
* CE 21: eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B) = 1+ eval_read_samples_pcm_bb13_in(V_frame_size,V_8,C):2
     [V_frame_size>=V_8+1,C=2] 
* CE 22: eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B) = 0
     [] 

### Cost equations --> "Loop" of eval_read_samples_pcm_bb11_in/3 
* CEs [18,19,20,21,22] --> Loop 12 

#### Loops of eval_read_samples_pcm_bb11_in/3 
* Loop 12: eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B) [] 

### Ranking functions of CR eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B) 

#### Partial ranking functions of CR eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B) 


### Resulting Chains:eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B) 
* [12]


### Merging Chains  eval_read_samples_pcm_bb11_in/3 into  External patterns of execution 
* [[12]] --> 1 


### Specialization of cost equations eval_read_samples_pcm_bb9_in/4 
* CE 10 is refined into CE [23] 


#### Refined cost equations eval_read_samples_pcm_bb9_in/4 
* CE 23: eval_read_samples_pcm_bb9_in(V_frame_size,V__NativeByteOrder,V_8,B) = 0+ eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B):1
     [] 

### Cost equations --> "Loop" of eval_read_samples_pcm_bb9_in/4 
* CEs [23] --> Loop 13 

#### Loops of eval_read_samples_pcm_bb9_in/4 
* Loop 13: eval_read_samples_pcm_bb9_in(V_frame_size,V__NativeByteOrder,V_8,B) [] 

### Ranking functions of CR eval_read_samples_pcm_bb9_in(V_frame_size,V__NativeByteOrder,V_8,B) 

#### Partial ranking functions of CR eval_read_samples_pcm_bb9_in(V_frame_size,V__NativeByteOrder,V_8,B) 


### Resulting Chains:eval_read_samples_pcm_bb9_in(V_frame_size,V__NativeByteOrder,V_8,B) 
* [13]


### Merging Chains  eval_read_samples_pcm_bb9_in/4 into  External patterns of execution 
* [[13]] --> 1 


### Specialization of cost equations eval_read_samples_pcm_bb7_in/4 
* CE 9 is refined into CE [24] 


#### Refined cost equations eval_read_samples_pcm_bb7_in/4 
* CE 24: eval_read_samples_pcm_bb7_in(V_frame_size,V__NativeByteOrder,V_8,B) = 0+ eval_read_samples_pcm_bb9_in(V_frame_size,V__NativeByteOrder,V_8,B):1
     [] 

### Cost equations --> "Loop" of eval_read_samples_pcm_bb7_in/4 
* CEs [24] --> Loop 14 

#### Loops of eval_read_samples_pcm_bb7_in/4 
* Loop 14: eval_read_samples_pcm_bb7_in(V_frame_size,V__NativeByteOrder,V_8,B) [] 

### Ranking functions of CR eval_read_samples_pcm_bb7_in(V_frame_size,V__NativeByteOrder,V_8,B) 

#### Partial ranking functions of CR eval_read_samples_pcm_bb7_in(V_frame_size,V__NativeByteOrder,V_8,B) 


### Resulting Chains:eval_read_samples_pcm_bb7_in(V_frame_size,V__NativeByteOrder,V_8,B) 
* [14]


### Merging Chains  eval_read_samples_pcm_bb7_in/4 into  External patterns of execution 
* [[14]] --> 1 


### Specialization of cost equations eval_read_samples_pcm_bb5_in/4 
* CE 8 is refined into CE [25] 


#### Refined cost equations eval_read_samples_pcm_bb5_in/4 
* CE 25: eval_read_samples_pcm_bb5_in(V_frame_size,V__NativeByteOrder,V_8,B) = 0+ eval_read_samples_pcm_bb7_in(V_frame_size,V__NativeByteOrder,V_8,B):1
     [] 

### Cost equations --> "Loop" of eval_read_samples_pcm_bb5_in/4 
* CEs [25] --> Loop 15 

#### Loops of eval_read_samples_pcm_bb5_in/4 
* Loop 15: eval_read_samples_pcm_bb5_in(V_frame_size,V__NativeByteOrder,V_8,B) [] 

### Ranking functions of CR eval_read_samples_pcm_bb5_in(V_frame_size,V__NativeByteOrder,V_8,B) 

#### Partial ranking functions of CR eval_read_samples_pcm_bb5_in(V_frame_size,V__NativeByteOrder,V_8,B) 


### Resulting Chains:eval_read_samples_pcm_bb5_in(V_frame_size,V__NativeByteOrder,V_8,B) 
* [15]


### Merging Chains  eval_read_samples_pcm_bb5_in/4 into  External patterns of execution 
* [[15]] --> 1 


### Specialization of cost equations eval_read_samples_pcm_13/5 
* CE 6 is refined into CE [26] 
* CE 7 is refined into CE [27] 


#### Refined cost equations eval_read_samples_pcm_13/5 
* CE 26: eval_read_samples_pcm_13(V_frame_size,V__NativeByteOrder,V_8,V_17,B) = 0
     [] 
* CE 27: eval_read_samples_pcm_13(V_frame_size,V__NativeByteOrder,V_8,V_17,B) = 0+ eval_read_samples_pcm_bb5_in(V_frame_size,V_17,V_8,B):1
     [] 

### Cost equations --> "Loop" of eval_read_samples_pcm_13/5 
* CEs [26,27] --> Loop 16 

#### Loops of eval_read_samples_pcm_13/5 
* Loop 16: eval_read_samples_pcm_13(V_frame_size,V__NativeByteOrder,V_8,V_17,B) [] 

### Ranking functions of CR eval_read_samples_pcm_13(V_frame_size,V__NativeByteOrder,V_8,V_17,B) 

#### Partial ranking functions of CR eval_read_samples_pcm_13(V_frame_size,V__NativeByteOrder,V_8,V_17,B) 


### Resulting Chains:eval_read_samples_pcm_13(V_frame_size,V__NativeByteOrder,V_8,V_17,B) 
* [16]


### Merging Chains  eval_read_samples_pcm_13/5 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations eval_read_samples_pcm_6/4 
* CE 3 is refined into CE [28] 
* CE 4 is refined into CE [29] 
* CE 5 is refined into CE [30] 


#### Refined cost equations eval_read_samples_pcm_6/4 
* CE 28: eval_read_samples_pcm_6(V_frame_size,V__NativeByteOrder,V_8,B) = 0
     [] 
* CE 29: eval_read_samples_pcm_6(V_frame_size,V__NativeByteOrder,V_8,B) = 0+ eval_read_samples_pcm_13(V_frame_size,V__NativeByteOrder,V_8,C,B):1
     [] 
* CE 30: eval_read_samples_pcm_6(V_frame_size,V__NativeByteOrder,V_8,B) = 0+ eval_read_samples_pcm_bb5_in(V_frame_size,V__NativeByteOrder,V_8,B):1
     [] 

### Cost equations --> "Loop" of eval_read_samples_pcm_6/4 
* CEs [28,29,30] --> Loop 17 

#### Loops of eval_read_samples_pcm_6/4 
* Loop 17: eval_read_samples_pcm_6(V_frame_size,V__NativeByteOrder,V_8,B) [] 

### Ranking functions of CR eval_read_samples_pcm_6(V_frame_size,V__NativeByteOrder,V_8,B) 

#### Partial ranking functions of CR eval_read_samples_pcm_6(V_frame_size,V__NativeByteOrder,V_8,B) 


### Resulting Chains:eval_read_samples_pcm_6(V_frame_size,V__NativeByteOrder,V_8,B) 
* [17]


### Merging Chains  eval_read_samples_pcm_6/4 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations eval_read_samples_pcm_start/4 
* CE 2 is refined into CE [31] 


#### Refined cost equations eval_read_samples_pcm_start/4 
* CE 31: eval_read_samples_pcm_start(V_frame_size,V_samples_to_read,V__NativeByteOrder,B) = 0+ eval_read_samples_pcm_6(V_frame_size,V__NativeByteOrder,C,B):1
     [] 

### Cost equations --> "Loop" of eval_read_samples_pcm_start/4 
* CEs [31] --> Loop 18 

#### Loops of eval_read_samples_pcm_start/4 
* Loop 18: eval_read_samples_pcm_start(V_frame_size,V_samples_to_read,V__NativeByteOrder,B) [] 

### Ranking functions of CR eval_read_samples_pcm_start(V_frame_size,V_samples_to_read,V__NativeByteOrder,B) 

#### Partial ranking functions of CR eval_read_samples_pcm_start(V_frame_size,V_samples_to_read,V__NativeByteOrder,B) 


### Resulting Chains:eval_read_samples_pcm_start(V_frame_size,V_samples_to_read,V__NativeByteOrder,B) 
* [18]


### Merging Chains  eval_read_samples_pcm_start/4 into  External patterns of execution 
* [[18]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [10] 

 * loop 10:eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B) -> [eval_read_samples_pcm_bb13_in(V_frame_size',V_samples_read_1',B')] 
1
#### Cost of phase [10]:eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B) -> [eval_read_samples_pcm_bb13_in(V_frame_size',V_samples_read_1',B')] 
1*it(10)+0
  Such that:it(10) =< V_frame_size-V_samples_read_1
it(10) =< V_frame_size-V_samples_read_1-V_frame_size'+V_samples_read_1'

#### Cost of chains of eval_read_samples_pcm_bb13_in(V_frame_size,V_samples_read_1,B):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< V_frame_size-V_samples_read_1

  with precondition: [B=2,V_frame_size>=V_samples_read_1+1] 

* Chain [11]: 0
  with precondition: [B=2,V_samples_read_1>=V_frame_size] 


#### Cost of chains of eval_read_samples_pcm_bb11_in(V_frame_size,V_8,B):
* Chain [12]: 1*s(1)+1*s(2)+1
  Such that:s(1) =< V_frame_size
s(2) =< V_frame_size-V_8

  with precondition: [] 


#### Cost of chains of eval_read_samples_pcm_bb9_in(V_frame_size,V__NativeByteOrder,V_8,B):
* Chain [13]: 1*s(3)+1*s(4)+1
  Such that:s(3) =< V_frame_size
s(4) =< V_frame_size-V_8

  with precondition: [] 


#### Cost of chains of eval_read_samples_pcm_bb7_in(V_frame_size,V__NativeByteOrder,V_8,B):
* Chain [14]: 1*s(5)+1*s(6)+1
  Such that:s(5) =< V_frame_size
s(6) =< V_frame_size-V_8

  with precondition: [] 


#### Cost of chains of eval_read_samples_pcm_bb5_in(V_frame_size,V__NativeByteOrder,V_8,B):
* Chain [15]: 1*s(7)+1*s(8)+1
  Such that:s(7) =< V_frame_size
s(8) =< V_frame_size-V_8

  with precondition: [] 


#### Cost of chains of eval_read_samples_pcm_13(V_frame_size,V__NativeByteOrder,V_8,V_17,B):
* Chain [16]: 1*s(9)+1*s(10)+1
  Such that:s(9) =< V_frame_size
s(10) =< V_frame_size-V_8

  with precondition: [] 


#### Cost of chains of eval_read_samples_pcm_6(V_frame_size,V__NativeByteOrder,V_8,B):
* Chain [17]: 2*s(11)+2*s(12)+1
  Such that:aux(1) =< V_frame_size
aux(2) =< V_frame_size-V_8
s(11) =< aux(1)
s(12) =< aux(2)

  with precondition: [] 


#### Cost of chains of eval_read_samples_pcm_start(V_frame_size,V_samples_to_read,V__NativeByteOrder,B):
* Chain [18]: 2*s(17)+2*s(18)+1
  Such that:s(15) =< V_frame_size
s(17) =< s(15)

  with precondition: [] 


Closed-form bounds of eval_read_samples_pcm_start(V_frame_size,V_samples_to_read,V__NativeByteOrder,B): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_read_samples_pcm_start(V_frame_size,V_samples_to_read,V__NativeByteOrder,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 51 ms.
* Invariants computed in 18 ms.
   - Backward Invariants 8 ms.
   - Transitive Invariants 4 ms.
* Refinement performed in 50 ms.
* Termination proved in 6 ms.
* Upper bounds computed in 52 ms.
   - Equation cost structures 37 ms.
   - Phase cost structures 6 ms.
   - Chain cost structures 7 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 249 ms.

