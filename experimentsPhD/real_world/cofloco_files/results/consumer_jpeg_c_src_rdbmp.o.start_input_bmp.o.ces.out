WARNING: Excluded non-linear constraints:[E=B-C*A]
Warning: Ignored call to eval_start_input_bmp_stop/1 in equation eval_start_input_bmp_320/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_input_bmp_295/3,eval_start_input_bmp_296/3,eval_start_input_bmp_bb35_in/2]
1. recursive  : [eval_start_input_bmp_bb40_in/1]
2. non_recursive  : [eval_start_input_bmp_320/1]
3. non_recursive  : [eval_start_input_bmp_319/1]
4. non_recursive  : [eval_start_input_bmp_bb44_in/1]
5. non_recursive  : [eval_start_input_bmp_310/1]
6. non_recursive  : [eval_start_input_bmp_309/1]
7. non_recursive  : [loop_cont_eval_start_input_bmp_bb40_in/2]
8. non_recursive  : [eval_start_input_bmp_bb39_in/1]
9. non_recursive  : [loop_cont_eval_start_input_bmp_bb35_in/2]
10. non_recursive  : [eval_start_input_bmp_292/2]
11. non_recursive  : [eval_start_input_bmp_291/2]
12. non_recursive  : [eval_start_input_bmp_bb33_in/2]
13. non_recursive  : [eval_start_input_bmp_286/4]
14. non_recursive  : [eval_start_input_bmp_285/5]
15. non_recursive  : [eval_start_input_bmp_283/4]
16. non_recursive  : [eval_start_input_bmp_282/4]
17. non_recursive  : [eval_start_input_bmp_bb32_in/4]
18. non_recursive  : [eval_start_input_bmp_280/4]
19. non_recursive  : [eval_start_input_bmp_279/4]
20. non_recursive  : [eval_start_input_bmp_bb28_in/5]
21. non_recursive  : [eval_start_input_bmp_117/4]
22. non_recursive  : [eval_start_input_bmp_116/4]
23. non_recursive  : [eval_start_input_bmp_bb15_in/4]
24. non_recursive  : [eval_start_input_bmp_104/3]
25. non_recursive  : [eval_start_input_bmp_103/3]
26. non_recursive  : [eval_start_input_bmp_111/3]
27. non_recursive  : [eval_start_input_bmp_110/3]
28. non_recursive  : [eval_start_input_bmp_114/3]
29. non_recursive  : [eval_start_input_bmp_113/3]
30. non_recursive  : [eval_start_input_bmp_NewDefault8_in/3]
31. non_recursive  : [eval_start_input_bmp_274/3]
32. non_recursive  : [eval_start_input_bmp_273/3]
33. non_recursive  : [eval_start_input_bmp_NewDefault_in/3]
34. non_recursive  : [eval_start_input_bmp_bb25_in/6]
35. non_recursive  : [eval_start_input_bmp_263/6]
36. non_recursive  : [eval_start_input_bmp_262/6]
37. non_recursive  : [eval_start_input_bmp_bb23_in/6]
38. non_recursive  : [eval_start_input_bmp_260/6]
39. non_recursive  : [eval_start_input_bmp_259/6]
40. non_recursive  : [eval_start_input_bmp_bb21_in/6]
41. non_recursive  : [eval_start_input_bmp_247/5]
42. non_recursive  : [eval_start_input_bmp_246/5]
43. non_recursive  : [eval_start_input_bmp_254/5]
44. non_recursive  : [eval_start_input_bmp_253/5]
45. non_recursive  : [eval_start_input_bmp_257/5]
46. non_recursive  : [eval_start_input_bmp_256/5]
47. non_recursive  : [eval_start_input_bmp_NewDefault15_in/5]
48. non_recursive  : [eval_start_input_bmp_bb17_in/3]
49. non_recursive  : [eval_start_input_bmp_bb10_in/3]
50. non_recursive  : [eval_start_input_bmp_66/3]
51. non_recursive  : [eval_start_input_bmp_65/3]
52. non_recursive  : [eval_start_input_bmp_62/3]
53. non_recursive  : [eval_start_input_bmp_61/4]
54. non_recursive  : [eval_start_input_bmp_bb8_in/3]
55. non_recursive  : [eval_start_input_bmp_59/3]
56. non_recursive  : [eval_start_input_bmp_58/3]
57. non_recursive  : [eval_start_input_bmp_bb6_in/2]
58. non_recursive  : [eval_start_input_bmp_37/2]
59. non_recursive  : [eval_start_input_bmp_36/2]
60. non_recursive  : [eval_start_input_bmp_34/2]
61. non_recursive  : [eval_start_input_bmp_33/2]
62. non_recursive  : [eval_start_input_bmp_bb4_in/1]
63. non_recursive  : [eval_start_input_bmp_14/1]
64. non_recursive  : [eval_start_input_bmp_13/1]
65. non_recursive  : [eval_start_input_bmp_bb2_in/1]
66. non_recursive  : [eval_start_input_bmp_4/1]
67. non_recursive  : [eval_start_input_bmp_3/1]
68. non_recursive  : [eval_start_input_bmp_1/1]
69. non_recursive  : [eval_start_input_bmp_0/1]
70. non_recursive  : [eval_start_input_bmp_bb0_in/1]
71. non_recursive  : [eval_start_input_bmp_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_input_bmp_bb35_in/2
1. SCC is partially evaluated into eval_start_input_bmp_bb40_in/1
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into eval_start_input_bmp_bb39_in/1
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_start_input_bmp_292/2
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_start_input_bmp_bb33_in/2
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is partially evaluated into eval_start_input_bmp_bb28_in/5
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is partially evaluated into eval_start_input_bmp_bb15_in/4
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_start_input_bmp_bb25_in/6
35. SCC is completely evaluated into other SCCs
36. SCC is completely evaluated into other SCCs
37. SCC is partially evaluated into eval_start_input_bmp_bb23_in/6
38. SCC is completely evaluated into other SCCs
39. SCC is completely evaluated into other SCCs
40. SCC is partially evaluated into eval_start_input_bmp_bb21_in/6
41. SCC is completely evaluated into other SCCs
42. SCC is completely evaluated into other SCCs
43. SCC is completely evaluated into other SCCs
44. SCC is completely evaluated into other SCCs
45. SCC is completely evaluated into other SCCs
46. SCC is completely evaluated into other SCCs
47. SCC is completely evaluated into other SCCs
48. SCC is partially evaluated into eval_start_input_bmp_bb17_in/3
49. SCC is partially evaluated into eval_start_input_bmp_bb10_in/3
50. SCC is completely evaluated into other SCCs
51. SCC is completely evaluated into other SCCs
52. SCC is partially evaluated into eval_start_input_bmp_62/3
53. SCC is completely evaluated into other SCCs
54. SCC is completely evaluated into other SCCs
55. SCC is completely evaluated into other SCCs
56. SCC is completely evaluated into other SCCs
57. SCC is partially evaluated into eval_start_input_bmp_bb6_in/2
58. SCC is completely evaluated into other SCCs
59. SCC is completely evaluated into other SCCs
60. SCC is partially evaluated into eval_start_input_bmp_34/2
61. SCC is completely evaluated into other SCCs
62. SCC is completely evaluated into other SCCs
63. SCC is completely evaluated into other SCCs
64. SCC is completely evaluated into other SCCs
65. SCC is partially evaluated into eval_start_input_bmp_bb2_in/1
66. SCC is completely evaluated into other SCCs
67. SCC is completely evaluated into other SCCs
68. SCC is partially evaluated into eval_start_input_bmp_1/1
69. SCC is completely evaluated into other SCCs
70. SCC is completely evaluated into other SCCs
71. SCC is partially evaluated into eval_start_input_bmp_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_input_bmp_bb35_in/2 
* CE 21 is refined into CE [35] 
* CE 20 is refined into CE [36] 


#### Refined cost equations eval_start_input_bmp_bb35_in/2 
* CE 35: eval_start_input_bmp_bb35_in(V_bPad_1,B) = 0
     [0>=V_bPad_1,B=3] 
* CE 36: eval_start_input_bmp_bb35_in(V_bPad_1,B) = 1+ eval_start_input_bmp_bb35_in(C,D)
     [V_bPad_1>=1,V_bPad_1=C+1,D=3,B=3] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb35_in/2 
* CEs [36] --> Loop 21 
* CEs [35] --> Loop 22 

#### Loops of eval_start_input_bmp_bb35_in/2 
* Loop 21: eval_start_input_bmp_bb35_in(V_bPad_1,B)->  eval_start_input_bmp_bb35_in(V_bPad_1',B')
                  [V_bPad_1>=1,V_bPad_1=V_bPad_1'+1,B'=3,B=3] 
* Loop 22: eval_start_input_bmp_bb35_in(V_bPad_1,B) [0>=V_bPad_1,B=3] 

### Ranking functions of CR eval_start_input_bmp_bb35_in(V_bPad_1,B) 
* RF of phase [21]: [V_bPad_1]

#### Partial ranking functions of CR eval_start_input_bmp_bb35_in(V_bPad_1,B) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_bPad_1


### Resulting Chains:eval_start_input_bmp_bb35_in(V_bPad_1,B) 
* [[21],22]
* [22]


### Merging Chains  eval_start_input_bmp_bb35_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[21]]] --> 2 


### Specialization of cost equations eval_start_input_bmp_bb40_in/1 
* CE 25 is refined into CE [37] 
* CE 24 is refined into CE [38] 


#### Refined cost equations eval_start_input_bmp_bb40_in/1 
* CE 37: eval_start_input_bmp_bb40_in(B) = 0
     [B=2] 
* CE 38: eval_start_input_bmp_bb40_in(B) = 1+ eval_start_input_bmp_bb40_in(C)
     [C=2,B=2] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb40_in/1 
* CEs [38] --> Loop 23 
* CEs [37] --> Loop 24 

#### Loops of eval_start_input_bmp_bb40_in/1 
* Loop 23: eval_start_input_bmp_bb40_in(B)->  eval_start_input_bmp_bb40_in(B')
                  [B'=2,B=2] 
* Loop 24: eval_start_input_bmp_bb40_in(B) [B=2] 

### Ranking functions of CR eval_start_input_bmp_bb40_in(B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb40_in(B) 


### Resulting Chains:eval_start_input_bmp_bb40_in(B) 
* [[23]]...
* [[23],24]
* [24]


### Merging Chains  eval_start_input_bmp_bb40_in/1 into  External patterns of execution 
* [[24],[24,[23]]] --> 1 
* [[[23]]] --> 2 


### Specialization of cost equations eval_start_input_bmp_bb39_in/1 
* CE 22 is refined into CE [39,40] 


#### Refined cost equations eval_start_input_bmp_bb39_in/1 
* CE 39: eval_start_input_bmp_bb39_in(B) = 1+ eval_start_input_bmp_bb40_in(C):1
     [C=2] 
* CE 40: eval_start_input_bmp_bb39_in(B) = 1+ eval_start_input_bmp_bb40_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb39_in/1 
* CEs [40] --> Loop 25 
* CEs [39] --> Loop 26 

#### Loops of eval_start_input_bmp_bb39_in/1 
* Loop 25: eval_start_input_bmp_bb39_in(B) [] 
* Loop 26: eval_start_input_bmp_bb39_in(B) [] 

### Ranking functions of CR eval_start_input_bmp_bb39_in(B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb39_in(B) 


### Resulting Chains:eval_start_input_bmp_bb39_in(B) 
* [26]
* [25]...


### Merging Chains  eval_start_input_bmp_bb39_in/1 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_start_input_bmp_292/2 
* CE 19 is refined into CE [41,42,43,44] 


#### Refined cost equations eval_start_input_bmp_292/2 
* CE 41: eval_start_input_bmp_292(V_bPad_0,B) = 1+ eval_start_input_bmp_bb35_in(V_bPad_0,C):1+ eval_start_input_bmp_bb39_in(B):1
     [0>=V_bPad_0,C=3] 
* CE 42: eval_start_input_bmp_292(V_bPad_0,B) = 1+ eval_start_input_bmp_bb35_in(V_bPad_0,C):1+ eval_start_input_bmp_bb39_in(B):2
     [0>=V_bPad_0,C=3] 
* CE 43: eval_start_input_bmp_292(V_bPad_0,B) = 1+ eval_start_input_bmp_bb35_in(V_bPad_0,C):2+ eval_start_input_bmp_bb39_in(B):1
     [V_bPad_0>=1,C=3] 
* CE 44: eval_start_input_bmp_292(V_bPad_0,B) = 1+ eval_start_input_bmp_bb35_in(V_bPad_0,C):2+ eval_start_input_bmp_bb39_in(B):2
     [V_bPad_0>=1,C=3] 

### Cost equations --> "Loop" of eval_start_input_bmp_292/2 
* CEs [44] --> Loop 27 
* CEs [42] --> Loop 28 
* CEs [43] --> Loop 29 
* CEs [41] --> Loop 30 

#### Loops of eval_start_input_bmp_292/2 
* Loop 27: eval_start_input_bmp_292(V_bPad_0,B) [V_bPad_0>=1] 
* Loop 28: eval_start_input_bmp_292(V_bPad_0,B) [0>=V_bPad_0] 
* Loop 29: eval_start_input_bmp_292(V_bPad_0,B) [V_bPad_0>=1] 
* Loop 30: eval_start_input_bmp_292(V_bPad_0,B) [0>=V_bPad_0] 

### Ranking functions of CR eval_start_input_bmp_292(V_bPad_0,B) 

#### Partial ranking functions of CR eval_start_input_bmp_292(V_bPad_0,B) 


### Resulting Chains:eval_start_input_bmp_292(V_bPad_0,B) 
* [30]
* [29]
* [28]...
* [27]...


### Merging Chains  eval_start_input_bmp_292/2 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 
* [[28]] --> 3 
* [[27]] --> 4 


### Specialization of cost equations eval_start_input_bmp_bb33_in/2 
* CE 16 is refined into CE [45,46,47,48] 
* CE 17 is refined into CE [49,50,51,52] 


#### Refined cost equations eval_start_input_bmp_bb33_in/2 
* CE 45: eval_start_input_bmp_bb33_in(V_bPad_0,B) = 0+ eval_start_input_bmp_292(V_bPad_0,B):1
     [0>=V_bPad_0] 
* CE 46: eval_start_input_bmp_bb33_in(V_bPad_0,B) = 0+ eval_start_input_bmp_292(V_bPad_0,B):2
     [V_bPad_0>=1] 
* CE 47: eval_start_input_bmp_bb33_in(V_bPad_0,B) = 0+ eval_start_input_bmp_292(V_bPad_0,B):3
     [0>=V_bPad_0] 
* CE 48: eval_start_input_bmp_bb33_in(V_bPad_0,B) = 0+ eval_start_input_bmp_292(V_bPad_0,B):4
     [V_bPad_0>=1] 
* CE 49: eval_start_input_bmp_bb33_in(V_bPad_0,B) = 1+ eval_start_input_bmp_bb35_in(V_bPad_0,C):1+ eval_start_input_bmp_bb39_in(B):1
     [0>=V_bPad_0,C=3] 
* CE 50: eval_start_input_bmp_bb33_in(V_bPad_0,B) = 1+ eval_start_input_bmp_bb35_in(V_bPad_0,C):1+ eval_start_input_bmp_bb39_in(B):2
     [0>=V_bPad_0,C=3] 
* CE 51: eval_start_input_bmp_bb33_in(V_bPad_0,B) = 1+ eval_start_input_bmp_bb35_in(V_bPad_0,C):2+ eval_start_input_bmp_bb39_in(B):1
     [V_bPad_0>=1,C=3] 
* CE 52: eval_start_input_bmp_bb33_in(V_bPad_0,B) = 1+ eval_start_input_bmp_bb35_in(V_bPad_0,C):2+ eval_start_input_bmp_bb39_in(B):2
     [V_bPad_0>=1,C=3] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb33_in/2 
* CEs [48,52] --> Loop 31 
* CEs [47,50] --> Loop 32 
* CEs [46,51] --> Loop 33 
* CEs [45,49] --> Loop 34 

#### Loops of eval_start_input_bmp_bb33_in/2 
* Loop 31: eval_start_input_bmp_bb33_in(V_bPad_0,B) [V_bPad_0>=1] 
* Loop 32: eval_start_input_bmp_bb33_in(V_bPad_0,B) [0>=V_bPad_0] 
* Loop 33: eval_start_input_bmp_bb33_in(V_bPad_0,B) [V_bPad_0>=1] 
* Loop 34: eval_start_input_bmp_bb33_in(V_bPad_0,B) [0>=V_bPad_0] 

### Ranking functions of CR eval_start_input_bmp_bb33_in(V_bPad_0,B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb33_in(V_bPad_0,B) 


### Resulting Chains:eval_start_input_bmp_bb33_in(V_bPad_0,B) 
* [34]
* [33]
* [32]...
* [31]...


### Merging Chains  eval_start_input_bmp_bb33_in/2 into  External patterns of execution 
* [[34]] --> 1 
* [[33]] --> 2 
* [[32]] --> 3 
* [[31]] --> 4 


### Specialization of cost equations eval_start_input_bmp_bb28_in/5 
* CE 13 is refined into CE [53,54,55,56] 


#### Refined cost equations eval_start_input_bmp_bb28_in/5 
* CE 53: eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B) = 0+ eval_start_input_bmp_bb33_in(C,B):1
     [V_mapentrysize_2>=0,0>=C,4>=V_mapentrysize_2] 
* CE 54: eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B) = 0+ eval_start_input_bmp_bb33_in(C,B):2
     [C>=1,V_mapentrysize_2>=0,4>=V_mapentrysize_2] 
* CE 55: eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B) = 0+ eval_start_input_bmp_bb33_in(C,B):3
     [V_mapentrysize_2>=0,0>=C,4>=V_mapentrysize_2] 
* CE 56: eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B) = 0+ eval_start_input_bmp_bb33_in(C,B):4
     [C>=1,V_mapentrysize_2>=0,4>=V_mapentrysize_2] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb28_in/5 
* CEs [55,56] --> Loop 35 
* CEs [53,54] --> Loop 36 

#### Loops of eval_start_input_bmp_bb28_in/5 
* Loop 35: eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B) [V_mapentrysize_2>=0,4>=V_mapentrysize_2] 
* Loop 36: eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B) [V_mapentrysize_2>=0,4>=V_mapentrysize_2] 

### Ranking functions of CR eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B) 


### Resulting Chains:eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B) 
* [36]
* [35]...


### Merging Chains  eval_start_input_bmp_bb28_in/5 into  External patterns of execution 
* [[36]] --> 1 
* [[35]] --> 2 


### Specialization of cost equations eval_start_input_bmp_bb15_in/4 
* CE 12 is refined into CE [57,58] 


#### Refined cost equations eval_start_input_bmp_bb15_in/4 
* CE 57: eval_start_input_bmp_bb15_in(V_53,V_89,V_mapentrysize_0,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_0,C,B):1
     [V_mapentrysize_0>=0,3>=V_mapentrysize_0,C=0] 
* CE 58: eval_start_input_bmp_bb15_in(V_53,V_89,V_mapentrysize_0,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_0,C,B):2
     [V_mapentrysize_0>=0,3>=V_mapentrysize_0,C=0] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb15_in/4 
* CEs [58] --> Loop 37 
* CEs [57] --> Loop 38 

#### Loops of eval_start_input_bmp_bb15_in/4 
* Loop 37: eval_start_input_bmp_bb15_in(V_53,V_89,V_mapentrysize_0,B) [V_mapentrysize_0>=0,3>=V_mapentrysize_0] 
* Loop 38: eval_start_input_bmp_bb15_in(V_53,V_89,V_mapentrysize_0,B) [V_mapentrysize_0>=0,3>=V_mapentrysize_0] 

### Ranking functions of CR eval_start_input_bmp_bb15_in(V_53,V_89,V_mapentrysize_0,B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb15_in(V_53,V_89,V_mapentrysize_0,B) 


### Resulting Chains:eval_start_input_bmp_bb15_in(V_53,V_89,V_mapentrysize_0,B) 
* [38]
* [37]...


### Merging Chains  eval_start_input_bmp_bb15_in/4 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_start_input_bmp_bb25_in/6 
* CE 26 is refined into CE [59,60] 
* CE 27 is refined into CE [61,62] 
* CE 28 is refined into CE [63,64] 
* CE 29 is refined into CE [65,66] 
* CE 30 is refined into CE [67,68] 
* CE 31 is refined into CE [69,70] 
* CE 32 is refined into CE [71,72] 
* CE 33 is refined into CE [73,74] 
* CE 34 is refined into CE [75,76] 


#### Refined cost equations eval_start_input_bmp_bb25_in/6 
* CE 59: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):1
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 
* CE 60: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):2
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 
* CE 61: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):1
     [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,V_316=0] 
* CE 62: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):2
     [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,V_316=0] 
* CE 63: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):1
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,V_316=0] 
* CE 64: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):2
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,V_316=0] 
* CE 65: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):1
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,V_338=0] 
* CE 66: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):2
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,V_338=0] 
* CE 67: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):1
     [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* CE 68: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):2
     [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* CE 69: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):1
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* CE 70: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):2
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* CE 71: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):1
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_316+1,V_338=0] 
* CE 72: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):2
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_316+1,V_338=0] 
* CE 73: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):1
     [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* CE 74: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):2
     [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* CE 75: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):1
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* CE 76: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_1,C,B):2
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb25_in/6 
* CEs [68] --> Loop 39 
* CEs [70] --> Loop 40 
* CEs [74] --> Loop 41 
* CEs [76] --> Loop 42 
* CEs [66] --> Loop 43 
* CEs [72] --> Loop 44 
* CEs [62] --> Loop 45 
* CEs [60,64] --> Loop 46 
* CEs [67] --> Loop 47 
* CEs [69] --> Loop 48 
* CEs [73] --> Loop 49 
* CEs [75] --> Loop 50 
* CEs [65] --> Loop 51 
* CEs [71] --> Loop 52 
* CEs [61] --> Loop 53 
* CEs [59,63] --> Loop 54 

#### Loops of eval_start_input_bmp_bb25_in/6 
* Loop 39: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* Loop 40: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* Loop 41: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* Loop 42: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* Loop 43: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,V_338=0] 
* Loop 44: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_316+1,V_338=0] 
* Loop 45: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,V_316=0] 
* Loop 46: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 
* Loop 47: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* Loop 48: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* Loop 49: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* Loop 50: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* Loop 51: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,V_338=0] 
* Loop 52: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_316+1,V_338=0] 
* Loop 53: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,V_316=0] 
* Loop 54: eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 

### Ranking functions of CR eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) 


### Resulting Chains:eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) 
* [54]
* [53]
* [52]
* [51]
* [50]
* [49]
* [48]
* [47]
* [46]...
* [45]...
* [44]...
* [43]...
* [42]...
* [41]...
* [40]...
* [39]...


### Merging Chains  eval_start_input_bmp_bb25_in/6 into  External patterns of execution 
* [[53],[54]] --> 1 
* [[52]] --> 2 
* [[51]] --> 3 
* [[50]] --> 4 
* [[49]] --> 5 
* [[48]] --> 6 
* [[47]] --> 7 
* [[45]] --> 8 
* [[44]] --> 9 
* [[43]] --> 10 
* [[42]] --> 11 
* [[41]] --> 12 
* [[40]] --> 13 
* [[39]] --> 14 
* [[46]] --> 15 


### Specialization of cost equations eval_start_input_bmp_bb23_in/6 
* CE 23 is refined into CE [77,78,79,80,81,82,83,84,85,86,87,88,89,90,91] 


#### Refined cost equations eval_start_input_bmp_bb23_in/6 
* CE 77: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):1
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 
* CE 78: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,C,V_mapentrysize_1,B):2
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_316+1,C=0,V_338=0] 
* CE 79: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,C,V_mapentrysize_1,B):3
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,C=0,V_338=0] 
* CE 80: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):4
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* CE 81: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):5
     [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* CE 82: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):6
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* CE 83: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):7
     [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* CE 84: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,C,V_338,V_mapentrysize_1,B):8
     [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,C=0,V_316=0] 
* CE 85: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,C,V_mapentrysize_1,B):9
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_316+1,C=0,V_338=0] 
* CE 86: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,C,V_mapentrysize_1,B):10
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,C=0,V_338=0] 
* CE 87: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):11
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* CE 88: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):12
     [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* CE 89: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):13
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* CE 90: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):14
     [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* CE 91: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):15
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb23_in/6 
* CEs [90] --> Loop 55 
* CEs [89] --> Loop 56 
* CEs [88] --> Loop 57 
* CEs [87] --> Loop 58 
* CEs [86] --> Loop 59 
* CEs [85] --> Loop 60 
* CEs [84,91] --> Loop 61 
* CEs [83] --> Loop 62 
* CEs [82] --> Loop 63 
* CEs [81] --> Loop 64 
* CEs [80] --> Loop 65 
* CEs [79] --> Loop 66 
* CEs [77,78] --> Loop 67 

#### Loops of eval_start_input_bmp_bb23_in/6 
* Loop 55: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* Loop 56: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* Loop 57: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* Loop 58: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* Loop 59: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,V_338=0] 
* Loop 60: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_316+1,V_338=0] 
* Loop 61: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 
* Loop 62: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* Loop 63: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* Loop 64: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* Loop 65: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* Loop 66: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,V_338=0] 
* Loop 67: eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 

### Ranking functions of CR eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) 


### Resulting Chains:eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) 
* [67]
* [66]
* [65]
* [64]
* [63]
* [62]
* [61]...
* [60]...
* [59]...
* [58]...
* [57]...
* [56]...
* [55]...


### Merging Chains  eval_start_input_bmp_bb23_in/6 into  External patterns of execution 
* [[66],[67]] --> 1 
* [[65]] --> 2 
* [[64]] --> 3 
* [[63]] --> 4 
* [[62]] --> 5 
* [[60]] --> 6 
* [[59]] --> 7 
* [[58]] --> 8 
* [[57]] --> 9 
* [[56]] --> 10 
* [[55]] --> 11 
* [[61]] --> 12 


### Specialization of cost equations eval_start_input_bmp_bb21_in/6 
* CE 18 is refined into CE [92,93,94,95,96,97,98,99,100,101,102,103] 


#### Refined cost equations eval_start_input_bmp_bb21_in/6 
* CE 92: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):1
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 
* CE 93: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):2
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* CE 94: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):3
     [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* CE 95: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):4
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* CE 96: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):5
     [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* CE 97: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,C,V_mapentrysize_1,B):6
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_316+1,C=0,V_338=0] 
* CE 98: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,C,V_mapentrysize_1,B):7
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,C=0,V_338=0] 
* CE 99: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):8
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* CE 100: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):9
     [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* CE 101: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):10
     [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* CE 102: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):11
     [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* CE 103: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) = 0+ eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):12
     [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb21_in/6 
* CEs [102] --> Loop 68 
* CEs [101] --> Loop 69 
* CEs [100] --> Loop 70 
* CEs [99] --> Loop 71 
* CEs [98] --> Loop 72 
* CEs [97,103] --> Loop 73 
* CEs [96] --> Loop 74 
* CEs [95] --> Loop 75 
* CEs [94] --> Loop 76 
* CEs [92,93] --> Loop 77 

#### Loops of eval_start_input_bmp_bb21_in/6 
* Loop 68: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* Loop 69: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* Loop 70: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* Loop 71: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1,0>=V_338+1,0>=V_316+1] 
* Loop 72: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,V_338=0] 
* Loop 73: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 
* Loop 74: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,V_316>=1,4>=V_mapentrysize_1] 
* Loop 75: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_316>=1,4>=V_mapentrysize_1,0>=V_338+1] 
* Loop 76: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,V_338>=1,4>=V_mapentrysize_1,0>=V_316+1] 
* Loop 77: eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) [V_mapentrysize_1>=0,4>=V_mapentrysize_1] 

### Ranking functions of CR eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) 


### Resulting Chains:eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B) 
* [77]
* [76]
* [75]
* [74]
* [73]...
* [72]...
* [71]...
* [70]...
* [69]...
* [68]...


### Merging Chains  eval_start_input_bmp_bb21_in/6 into  External patterns of execution 
* [[76],[77]] --> 1 
* [[75]] --> 2 
* [[74]] --> 3 
* [[72]] --> 4 
* [[71]] --> 5 
* [[70]] --> 6 
* [[69]] --> 7 
* [[68]] --> 8 
* [[73]] --> 9 


### Specialization of cost equations eval_start_input_bmp_bb17_in/3 
* CE 14 is refined into CE [104,105,106,107,108,109,110,111,112] 
* CE 15 is refined into CE [113,114,115,116,117,118,119,120,121] 


#### Refined cost equations eval_start_input_bmp_bb17_in/3 
* CE 104: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):1
     [E=4] 
* CE 105: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):2
     [C>=1,0>=D+1,E=4] 
* CE 106: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):3
     [D>=1,C>=1,E=4] 
* CE 107: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):4
     [C>=1,E=4,D=0] 
* CE 108: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):5
     [0>=D+1,0>=C+1,E=4] 
* CE 109: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):6
     [D>=1,0>=C+1,E=4] 
* CE 110: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):7
     [C>=1,0>=D+1,E=4] 
* CE 111: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):8
     [D>=1,C>=1,E=4] 
* CE 112: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):9
     [E=4] 
* CE 113: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):1
     [E=0] 
* CE 114: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):2
     [C>=1,0>=D+1,E=0] 
* CE 115: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):3
     [D>=1,C>=1,E=0] 
* CE 116: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):4
     [C>=1,E=0,D=0] 
* CE 117: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):5
     [0>=D+1,0>=C+1,E=0] 
* CE 118: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):6
     [D>=1,0>=C+1,E=0] 
* CE 119: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):7
     [C>=1,0>=D+1,E=0] 
* CE 120: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):8
     [D>=1,C>=1,E=0] 
* CE 121: eval_start_input_bmp_bb17_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb21_in(V_53,V_89,C,D,E,B):9
     [E=0] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb17_in/3 
* CEs [107,108,109,110,111,112,116,117,118,119,120,121] --> Loop 78 
* CEs [104,105,106,113,114,115] --> Loop 79 

#### Loops of eval_start_input_bmp_bb17_in/3 
* Loop 78: eval_start_input_bmp_bb17_in(V_53,V_89,B) [] 
* Loop 79: eval_start_input_bmp_bb17_in(V_53,V_89,B) [] 

### Ranking functions of CR eval_start_input_bmp_bb17_in(V_53,V_89,B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb17_in(V_53,V_89,B) 


### Resulting Chains:eval_start_input_bmp_bb17_in(V_53,V_89,B) 
* [79]
* [78]...


### Merging Chains  eval_start_input_bmp_bb17_in/3 into  External patterns of execution 
* [[79]] --> 1 
* [[78]] --> 2 


### Specialization of cost equations eval_start_input_bmp_bb10_in/3 
* CE 8 is refined into CE [122,123] 
* CE 9 is refined into CE [124,125] 
* CE 10 is refined into CE [126,127] 
* CE 11 is refined into CE [128,129] 


#### Refined cost equations eval_start_input_bmp_bb10_in/3 
* CE 122: eval_start_input_bmp_bb10_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb15_in(V_53,V_89,C,B):1
     [C=3] 
* CE 123: eval_start_input_bmp_bb10_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb15_in(V_53,V_89,C,B):2
     [C=3] 
* CE 124: eval_start_input_bmp_bb10_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb15_in(V_53,V_89,C,B):1
     [C=0] 
* CE 125: eval_start_input_bmp_bb10_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb15_in(V_53,V_89,C,B):2
     [C=0] 
* CE 126: eval_start_input_bmp_bb10_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,C,D,B):1
     [D=0,C=0] 
* CE 127: eval_start_input_bmp_bb10_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb28_in(V_53,V_89,C,D,B):2
     [D=0,C=0] 
* CE 128: eval_start_input_bmp_bb10_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb17_in(V_53,V_89,B):1
     [] 
* CE 129: eval_start_input_bmp_bb10_in(V_53,V_89,B) = 0+ eval_start_input_bmp_bb17_in(V_53,V_89,B):2
     [] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb10_in/3 
* CEs [123,125,127,129] --> Loop 80 
* CEs [122,124,126,128] --> Loop 81 

#### Loops of eval_start_input_bmp_bb10_in/3 
* Loop 80: eval_start_input_bmp_bb10_in(V_53,V_89,B) [] 
* Loop 81: eval_start_input_bmp_bb10_in(V_53,V_89,B) [] 

### Ranking functions of CR eval_start_input_bmp_bb10_in(V_53,V_89,B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb10_in(V_53,V_89,B) 


### Resulting Chains:eval_start_input_bmp_bb10_in(V_53,V_89,B) 
* [81]
* [80]...


### Merging Chains  eval_start_input_bmp_bb10_in/3 into  External patterns of execution 
* [[81]] --> 1 
* [[80]] --> 2 


### Specialization of cost equations eval_start_input_bmp_62/3 
* CE 7 is refined into CE [130,131] 


#### Refined cost equations eval_start_input_bmp_62/3 
* CE 130: eval_start_input_bmp_62(V_53,V_89,B) = 0+ eval_start_input_bmp_bb10_in(V_53,V_89,B):1
     [] 
* CE 131: eval_start_input_bmp_62(V_53,V_89,B) = 0+ eval_start_input_bmp_bb10_in(V_53,V_89,B):2
     [] 

### Cost equations --> "Loop" of eval_start_input_bmp_62/3 
* CEs [131] --> Loop 82 
* CEs [130] --> Loop 83 

#### Loops of eval_start_input_bmp_62/3 
* Loop 82: eval_start_input_bmp_62(V_53,V_89,B) [] 
* Loop 83: eval_start_input_bmp_62(V_53,V_89,B) [] 

### Ranking functions of CR eval_start_input_bmp_62(V_53,V_89,B) 

#### Partial ranking functions of CR eval_start_input_bmp_62(V_53,V_89,B) 


### Resulting Chains:eval_start_input_bmp_62(V_53,V_89,B) 
* [83]
* [82]...


### Merging Chains  eval_start_input_bmp_62/3 into  External patterns of execution 
* [[83]] --> 1 
* [[82]] --> 2 


### Specialization of cost equations eval_start_input_bmp_bb6_in/2 
* CE 6 is refined into CE [132,133] 


#### Refined cost equations eval_start_input_bmp_bb6_in/2 
* CE 132: eval_start_input_bmp_bb6_in(V_53,B) = 0+ eval_start_input_bmp_62(V_53,C,B):1
     [] 
* CE 133: eval_start_input_bmp_bb6_in(V_53,B) = 0+ eval_start_input_bmp_62(V_53,C,B):2
     [] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb6_in/2 
* CEs [133] --> Loop 84 
* CEs [132] --> Loop 85 

#### Loops of eval_start_input_bmp_bb6_in/2 
* Loop 84: eval_start_input_bmp_bb6_in(V_53,B) [] 
* Loop 85: eval_start_input_bmp_bb6_in(V_53,B) [] 

### Ranking functions of CR eval_start_input_bmp_bb6_in(V_53,B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb6_in(V_53,B) 


### Resulting Chains:eval_start_input_bmp_bb6_in(V_53,B) 
* [85]
* [84]...


### Merging Chains  eval_start_input_bmp_bb6_in/2 into  External patterns of execution 
* [[85]] --> 1 
* [[84]] --> 2 


### Specialization of cost equations eval_start_input_bmp_34/2 
* CE 5 is refined into CE [134,135] 


#### Refined cost equations eval_start_input_bmp_34/2 
* CE 134: eval_start_input_bmp_34(V_53,B) = 0+ eval_start_input_bmp_bb6_in(V_53,B):1
     [] 
* CE 135: eval_start_input_bmp_34(V_53,B) = 0+ eval_start_input_bmp_bb6_in(V_53,B):2
     [] 

### Cost equations --> "Loop" of eval_start_input_bmp_34/2 
* CEs [135] --> Loop 86 
* CEs [134] --> Loop 87 

#### Loops of eval_start_input_bmp_34/2 
* Loop 86: eval_start_input_bmp_34(V_53,B) [] 
* Loop 87: eval_start_input_bmp_34(V_53,B) [] 

### Ranking functions of CR eval_start_input_bmp_34(V_53,B) 

#### Partial ranking functions of CR eval_start_input_bmp_34(V_53,B) 


### Resulting Chains:eval_start_input_bmp_34(V_53,B) 
* [87]
* [86]...


### Merging Chains  eval_start_input_bmp_34/2 into  External patterns of execution 
* [[87]] --> 1 
* [[86]] --> 2 


### Specialization of cost equations eval_start_input_bmp_bb2_in/1 
* CE 4 is refined into CE [136,137] 


#### Refined cost equations eval_start_input_bmp_bb2_in/1 
* CE 136: eval_start_input_bmp_bb2_in(B) = 0+ eval_start_input_bmp_34(C,B):1
     [] 
* CE 137: eval_start_input_bmp_bb2_in(B) = 0+ eval_start_input_bmp_34(C,B):2
     [] 

### Cost equations --> "Loop" of eval_start_input_bmp_bb2_in/1 
* CEs [137] --> Loop 88 
* CEs [136] --> Loop 89 

#### Loops of eval_start_input_bmp_bb2_in/1 
* Loop 88: eval_start_input_bmp_bb2_in(B) [] 
* Loop 89: eval_start_input_bmp_bb2_in(B) [] 

### Ranking functions of CR eval_start_input_bmp_bb2_in(B) 

#### Partial ranking functions of CR eval_start_input_bmp_bb2_in(B) 


### Resulting Chains:eval_start_input_bmp_bb2_in(B) 
* [89]
* [88]...


### Merging Chains  eval_start_input_bmp_bb2_in/1 into  External patterns of execution 
* [[89]] --> 1 
* [[88]] --> 2 


### Specialization of cost equations eval_start_input_bmp_1/1 
* CE 3 is refined into CE [138,139] 


#### Refined cost equations eval_start_input_bmp_1/1 
* CE 138: eval_start_input_bmp_1(B) = 0+ eval_start_input_bmp_bb2_in(B):1
     [] 
* CE 139: eval_start_input_bmp_1(B) = 0+ eval_start_input_bmp_bb2_in(B):2
     [] 

### Cost equations --> "Loop" of eval_start_input_bmp_1/1 
* CEs [139] --> Loop 90 
* CEs [138] --> Loop 91 

#### Loops of eval_start_input_bmp_1/1 
* Loop 90: eval_start_input_bmp_1(B) [] 
* Loop 91: eval_start_input_bmp_1(B) [] 

### Ranking functions of CR eval_start_input_bmp_1(B) 

#### Partial ranking functions of CR eval_start_input_bmp_1(B) 


### Resulting Chains:eval_start_input_bmp_1(B) 
* [91]
* [90]...


### Merging Chains  eval_start_input_bmp_1/1 into  External patterns of execution 
* [[91]] --> 1 
* [[90]] --> 2 


### Specialization of cost equations eval_start_input_bmp_start/1 
* CE 2 is refined into CE [140,141] 


#### Refined cost equations eval_start_input_bmp_start/1 
* CE 140: eval_start_input_bmp_start(B) = 0+ eval_start_input_bmp_1(B):1
     [] 
* CE 141: eval_start_input_bmp_start(B) = 0+ eval_start_input_bmp_1(B):2
     [] 

### Cost equations --> "Loop" of eval_start_input_bmp_start/1 
* CEs [141] --> Loop 92 
* CEs [140] --> Loop 93 

#### Loops of eval_start_input_bmp_start/1 
* Loop 92: eval_start_input_bmp_start(B) [] 
* Loop 93: eval_start_input_bmp_start(B) [] 

### Ranking functions of CR eval_start_input_bmp_start(B) 

#### Partial ranking functions of CR eval_start_input_bmp_start(B) 


### Resulting Chains:eval_start_input_bmp_start(B) 
* [93]
* [92]...


### Merging Chains  eval_start_input_bmp_start/1 into  External patterns of execution 
* [[93]] --> 1 
* [[92]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [21] 

 * loop 21:eval_start_input_bmp_bb35_in(V_bPad_1,B) -> [eval_start_input_bmp_bb35_in(V_bPad_1',B')] 
1
#### Cost of phase [21]:eval_start_input_bmp_bb35_in(V_bPad_1,B) -> [eval_start_input_bmp_bb35_in(V_bPad_1',B')] 
1*it(21)+0
  Such that:it(21) =< V_bPad_1
it(21) =< V_bPad_1-V_bPad_1'

#### Cost of chains of eval_start_input_bmp_bb35_in(V_bPad_1,B):
* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V_bPad_1

  with precondition: [B=3,V_bPad_1>=1] 

* Chain [22]: 0
  with precondition: [B=3,0>=V_bPad_1] 


#### Cost of loops [23] 

 * loop 23:eval_start_input_bmp_bb40_in(B) -> [eval_start_input_bmp_bb40_in(B')] 
1
#### Cost of phase [23]:eval_start_input_bmp_bb40_in(B) -> [eval_start_input_bmp_bb40_in(B')] 
1*it(23)+0
#### Cost of phase [23]:eval_start_input_bmp_bb40_in(B) -> [eval_start_input_bmp_bb40_in(B')] 
1*it(23)+0
#### Cost of chains of eval_start_input_bmp_bb40_in(B):
* Chain [[23]]...: 1*it(23)+0
  with precondition: [B=2] 

* Chain [[23],24]: 1*it(23)+0
  with precondition: [B=2] 

* Chain [24]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_start_input_bmp_bb39_in(B):
* Chain [26]: 1*s(2)+1
  with precondition: [] 

* Chain [25]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_start_input_bmp_292(V_bPad_0,B):
* Chain [30]: 1*s(4)+2
  with precondition: [0>=V_bPad_0] 

* Chain [29]: 1*s(5)+1*s(6)+2
  Such that:s(5) =< V_bPad_0

  with precondition: [V_bPad_0>=1] 

* Chain [28]...: 1*s(7)+2
  with precondition: [0>=V_bPad_0] 

* Chain [27]...: 1*s(8)+1*s(9)+2
  Such that:s(8) =< V_bPad_0

  with precondition: [V_bPad_0>=1] 


#### Cost of chains of eval_start_input_bmp_bb33_in(V_bPad_0,B):
* Chain [34]: 1*aux(2)+0
  with precondition: [0>=V_bPad_0] 

* Chain [33]: 2*s(12)+2*s(13)+2
  Such that:aux(3) =< V_bPad_0
s(12) =< aux(3)

  with precondition: [V_bPad_0>=1] 

* Chain [32]...: 1*aux(4)+0
  with precondition: [0>=V_bPad_0] 

* Chain [31]...: 2*s(18)+2*s(19)+2
  Such that:aux(5) =< V_bPad_0
s(18) =< aux(5)

  with precondition: [V_bPad_0>=1] 


#### Cost of chains of eval_start_input_bmp_bb28_in(V_53,V_89,V_mapentrysize_2,V_biClrUsed_0,B):
* Chain [36]: 1*aux(6)+0
  with precondition: [4>=V_mapentrysize_2,V_mapentrysize_2>=0] 

* Chain [35]...: 1*aux(7)+0
  with precondition: [4>=V_mapentrysize_2,V_mapentrysize_2>=0] 


#### Cost of chains of eval_start_input_bmp_bb15_in(V_53,V_89,V_mapentrysize_0,B):
* Chain [38]: 1*s(30)+0
  with precondition: [3>=V_mapentrysize_0,V_mapentrysize_0>=0] 

* Chain [37]...: 1*s(31)+0
  with precondition: [3>=V_mapentrysize_0,V_mapentrysize_0>=0] 


#### Cost of chains of eval_start_input_bmp_bb25_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):
* Chain [54]: 1*aux(8)+0
  with precondition: [4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [53]: 1*s(34)+0
  with precondition: [V_316=0,4>=V_mapentrysize_1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [52]: 1*s(35)+0
  with precondition: [V_338=0,0>=V_316+1,4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [51]: 1*s(36)+0
  with precondition: [V_338=0,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [50]: 1*s(37)+0
  with precondition: [0>=V_316+1,0>=V_338+1,4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [49]: 1*s(38)+0
  with precondition: [0>=V_316+1,4>=V_mapentrysize_1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [48]: 1*s(39)+0
  with precondition: [0>=V_338+1,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [47]: 1*s(40)+0
  with precondition: [4>=V_mapentrysize_1,V_316>=1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [46]...: 1*aux(9)+0
  with precondition: [4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [45]...: 1*s(43)+0
  with precondition: [V_316=0,4>=V_mapentrysize_1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [44]...: 1*s(44)+0
  with precondition: [V_338=0,0>=V_316+1,4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [43]...: 1*s(45)+0
  with precondition: [V_338=0,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [42]...: 1*s(46)+0
  with precondition: [0>=V_316+1,0>=V_338+1,4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [41]...: 1*s(47)+0
  with precondition: [0>=V_316+1,4>=V_mapentrysize_1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [40]...: 1*s(48)+0
  with precondition: [0>=V_338+1,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [39]...: 1*s(49)+0
  with precondition: [4>=V_mapentrysize_1,V_316>=1,V_338>=1,V_mapentrysize_1>=0] 


#### Cost of chains of eval_start_input_bmp_bb23_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):
* Chain [67]: 1*aux(11)+0
  with precondition: [4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [66]: 1*s(54)+0
  with precondition: [V_338=0,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [65]: 1*s(55)+0
  with precondition: [0>=V_316+1,0>=V_338+1,4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [64]: 1*s(56)+0
  with precondition: [0>=V_316+1,4>=V_mapentrysize_1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [63]: 1*s(57)+0
  with precondition: [0>=V_338+1,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [62]: 1*s(58)+0
  with precondition: [4>=V_mapentrysize_1,V_316>=1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [61]...: 1*aux(12)+0
  with precondition: [4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [60]...: 1*s(61)+0
  with precondition: [V_338=0,0>=V_316+1,4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [59]...: 1*s(62)+0
  with precondition: [V_338=0,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [58]...: 1*s(63)+0
  with precondition: [0>=V_316+1,0>=V_338+1,4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [57]...: 1*s(64)+0
  with precondition: [0>=V_316+1,4>=V_mapentrysize_1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [56]...: 1*s(65)+0
  with precondition: [0>=V_338+1,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [55]...: 1*s(66)+0
  with precondition: [4>=V_mapentrysize_1,V_316>=1,V_338>=1,V_mapentrysize_1>=0] 


#### Cost of chains of eval_start_input_bmp_bb21_in(V_53,V_89,V_316,V_338,V_mapentrysize_1,B):
* Chain [77]: 1*aux(14)+0
  with precondition: [4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [76]: 1*s(71)+0
  with precondition: [0>=V_316+1,4>=V_mapentrysize_1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [75]: 1*s(72)+0
  with precondition: [0>=V_338+1,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [74]: 1*s(73)+0
  with precondition: [4>=V_mapentrysize_1,V_316>=1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [73]...: 1*aux(15)+0
  with precondition: [4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [72]...: 1*s(76)+0
  with precondition: [V_338=0,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [71]...: 1*s(77)+0
  with precondition: [0>=V_316+1,0>=V_338+1,4>=V_mapentrysize_1,V_mapentrysize_1>=0] 

* Chain [70]...: 1*s(78)+0
  with precondition: [0>=V_316+1,4>=V_mapentrysize_1,V_338>=1,V_mapentrysize_1>=0] 

* Chain [69]...: 1*s(79)+0
  with precondition: [0>=V_338+1,4>=V_mapentrysize_1,V_316>=1,V_mapentrysize_1>=0] 

* Chain [68]...: 1*s(80)+0
  with precondition: [4>=V_mapentrysize_1,V_316>=1,V_338>=1,V_mapentrysize_1>=0] 


#### Cost of chains of eval_start_input_bmp_bb17_in(V_53,V_89,B):
* Chain [79]: 1*aux(17)+0
  with precondition: [] 

* Chain [78]...: 1*aux(18)+0
  with precondition: [] 


#### Cost of chains of eval_start_input_bmp_bb10_in(V_53,V_89,B):
* Chain [81]: 1*aux(19)+0
  with precondition: [] 

* Chain [80]...: 1*aux(20)+0
  with precondition: [] 


#### Cost of chains of eval_start_input_bmp_62(V_53,V_89,B):
* Chain [83]: 1*s(109)+0
  with precondition: [] 

* Chain [82]...: 1*s(110)+0
  with precondition: [] 


#### Cost of chains of eval_start_input_bmp_bb6_in(V_53,B):
* Chain [85]: 1*s(111)+0
  with precondition: [] 

* Chain [84]...: 1*s(112)+0
  with precondition: [] 


#### Cost of chains of eval_start_input_bmp_34(V_53,B):
* Chain [87]: 1*s(113)+0
  with precondition: [] 

* Chain [86]...: 1*s(114)+0
  with precondition: [] 


#### Cost of chains of eval_start_input_bmp_bb2_in(B):
* Chain [89]: 1*s(115)+0
  with precondition: [] 

* Chain [88]...: 1*s(116)+0
  with precondition: [] 


#### Cost of chains of eval_start_input_bmp_1(B):
* Chain [91]: 1*s(117)+0
  with precondition: [] 

* Chain [90]...: 1*s(118)+0
  with precondition: [] 


#### Cost of chains of eval_start_input_bmp_start(B):
* Chain [93]: 1*s(119)+0
  with precondition: [] 

* Chain [92]...: 1*s(120)+0
  with precondition: [] 


Closed-form bounds of eval_start_input_bmp_start(B): 
-------------------------------------
* Chain [93] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [92]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_start_input_bmp_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 75 ms.
* Invariants computed in 33 ms.
   - Backward Invariants 17 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 141 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 79 ms.
   - Equation cost structures 58 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 406 ms.

