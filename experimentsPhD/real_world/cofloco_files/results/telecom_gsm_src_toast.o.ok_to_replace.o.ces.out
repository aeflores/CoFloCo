Warning: Ignored call to eval_ok_to_replace_stop/1 in equation eval_ok_to_replace_bb7_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ok_to_replace_11/3,eval_ok_to_replace_12/3,eval_ok_to_replace_NewDefault_in/3,eval_ok_to_replace_bb3_in/3]
1. non_recursive  : [eval_ok_to_replace_bb7_in/1]
2. non_recursive  : [eval_ok_to_replace_10/1]
3. non_recursive  : [eval_ok_to_replace_9/2]
4. non_recursive  : [eval_ok_to_replace_bb4_in/2]
5. non_recursive  : [loop_cont_eval_ok_to_replace_bb3_in/3]
6. non_recursive  : [eval_ok_to_replace_8/2]
7. non_recursive  : [eval_ok_to_replace_7/2]
8. non_recursive  : [eval_ok_to_replace_6/2]
9. non_recursive  : [eval_ok_to_replace_5/2]
10. non_recursive  : [eval_ok_to_replace_4/2]
11. non_recursive  : [eval_ok_to_replace_3/3]
12. non_recursive  : [eval_ok_to_replace_2/2]
13. non_recursive  : [eval_ok_to_replace_bb0_in/2]
14. non_recursive  : [eval_ok_to_replace_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ok_to_replace_bb3_in/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_ok_to_replace_bb4_in/2
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into eval_ok_to_replace_8/2
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_ok_to_replace_4/2
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_ok_to_replace_bb0_in/2
14. SCC is partially evaluated into eval_ok_to_replace_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ok_to_replace_bb3_in/3 
* CE 9 is refined into CE [11] 
* CE 8 is refined into CE [12] 


#### Refined cost equations eval_ok_to_replace_bb3_in/3 
* CE 11: eval_ok_to_replace_bb3_in(A,B,A) = 0
     [B=2] 
* CE 12: eval_ok_to_replace_bb3_in(V__f_force,B,C) = 1+ eval_ok_to_replace_bb3_in(V__f_force,D,C)
     [D=2,B=2] 

### Cost equations --> "Loop" of eval_ok_to_replace_bb3_in/3 
* CEs [12] --> Loop 8 
* CEs [11] --> Loop 9 

#### Loops of eval_ok_to_replace_bb3_in/3 
* Loop 8: eval_ok_to_replace_bb3_in(V__f_force,B,C)->  eval_ok_to_replace_bb3_in(V__f_force,B',C)
                  [B'=2,B=2] 
* Loop 9: eval_ok_to_replace_bb3_in(A,B,A) [B=2] 

### Ranking functions of CR eval_ok_to_replace_bb3_in(V__f_force,B,C) 

#### Partial ranking functions of CR eval_ok_to_replace_bb3_in(V__f_force,B,C) 


### Resulting Chains:eval_ok_to_replace_bb3_in(V__f_force,B,C) 
* [[8]]...
* [[8],9]
* [9]


### Merging Chains  eval_ok_to_replace_bb3_in/3 into  External patterns of execution 
* [[9],[9,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval_ok_to_replace_bb4_in/2 
* CE 10 is refined into CE [13] 


#### Refined cost equations eval_ok_to_replace_bb4_in/2 
* CE 13: eval_ok_to_replace_bb4_in(V__f_force,B) = 0
     [] 

### Cost equations --> "Loop" of eval_ok_to_replace_bb4_in/2 
* CEs [13] --> Loop 10 

#### Loops of eval_ok_to_replace_bb4_in/2 
* Loop 10: eval_ok_to_replace_bb4_in(V__f_force,B) [] 

### Ranking functions of CR eval_ok_to_replace_bb4_in(V__f_force,B) 

#### Partial ranking functions of CR eval_ok_to_replace_bb4_in(V__f_force,B) 


### Resulting Chains:eval_ok_to_replace_bb4_in(V__f_force,B) 
* [10]


### Merging Chains  eval_ok_to_replace_bb4_in/2 into  External patterns of execution 
* [[10]] --> 1 


### Specialization of cost equations eval_ok_to_replace_8/2 
* CE 7 is refined into CE [14,15] 


#### Refined cost equations eval_ok_to_replace_8/2 
* CE 14: eval_ok_to_replace_8(V__f_force,B) = 1+ eval_ok_to_replace_bb3_in(V__f_force,C,V__f_force):1+ eval_ok_to_replace_bb4_in(V__f_force,B):1
     [C=2] 
* CE 15: eval_ok_to_replace_8(V__f_force,B) = 1+ eval_ok_to_replace_bb3_in(V__f_force,C,D):2
     [C=2] 

### Cost equations --> "Loop" of eval_ok_to_replace_8/2 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_ok_to_replace_8/2 
* Loop 11: eval_ok_to_replace_8(V__f_force,B) [] 
* Loop 12: eval_ok_to_replace_8(V__f_force,B) [] 

### Ranking functions of CR eval_ok_to_replace_8(V__f_force,B) 

#### Partial ranking functions of CR eval_ok_to_replace_8(V__f_force,B) 


### Resulting Chains:eval_ok_to_replace_8(V__f_force,B) 
* [12]
* [11]...


### Merging Chains  eval_ok_to_replace_8/2 into  External patterns of execution 
* [[12]] --> 1 
* [[11]] --> 2 


### Specialization of cost equations eval_ok_to_replace_4/2 
* CE 5 is refined into CE [16,17] 
* CE 6 is refined into CE [18] 


#### Refined cost equations eval_ok_to_replace_4/2 
* CE 16: eval_ok_to_replace_4(V__f_force,B) = 0+ eval_ok_to_replace_8(V__f_force,B):1
     [] 
* CE 17: eval_ok_to_replace_4(V__f_force,B) = 0+ eval_ok_to_replace_8(V__f_force,B):2
     [] 
* CE 18: eval_ok_to_replace_4(V__f_force,B) = 0
     [] 

### Cost equations --> "Loop" of eval_ok_to_replace_4/2 
* CEs [16,18] --> Loop 13 
* CEs [17] --> Loop 14 

#### Loops of eval_ok_to_replace_4/2 
* Loop 13: eval_ok_to_replace_4(V__f_force,B) [] 
* Loop 14: eval_ok_to_replace_4(V__f_force,B) [] 

### Ranking functions of CR eval_ok_to_replace_4(V__f_force,B) 

#### Partial ranking functions of CR eval_ok_to_replace_4(V__f_force,B) 


### Resulting Chains:eval_ok_to_replace_4(V__f_force,B) 
* [14]...
* [13]


### Merging Chains  eval_ok_to_replace_4/2 into  External patterns of execution 
* [[13]] --> 1 
* [[14]] --> 2 


### Specialization of cost equations eval_ok_to_replace_bb0_in/2 
* CE 3 is refined into CE [19] 
* CE 4 is refined into CE [20,21] 


#### Refined cost equations eval_ok_to_replace_bb0_in/2 
* CE 19: eval_ok_to_replace_bb0_in(V__f_force,B) = 0
     [] 
* CE 20: eval_ok_to_replace_bb0_in(V__f_force,B) = 0+ eval_ok_to_replace_4(V__f_force,B):1
     [] 
* CE 21: eval_ok_to_replace_bb0_in(V__f_force,B) = 0+ eval_ok_to_replace_4(V__f_force,B):2
     [] 

### Cost equations --> "Loop" of eval_ok_to_replace_bb0_in/2 
* CEs [21] --> Loop 15 
* CEs [19,20] --> Loop 16 

#### Loops of eval_ok_to_replace_bb0_in/2 
* Loop 15: eval_ok_to_replace_bb0_in(V__f_force,B) [] 
* Loop 16: eval_ok_to_replace_bb0_in(V__f_force,B) [] 

### Ranking functions of CR eval_ok_to_replace_bb0_in(V__f_force,B) 

#### Partial ranking functions of CR eval_ok_to_replace_bb0_in(V__f_force,B) 


### Resulting Chains:eval_ok_to_replace_bb0_in(V__f_force,B) 
* [16]
* [15]...


### Merging Chains  eval_ok_to_replace_bb0_in/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


### Specialization of cost equations eval_ok_to_replace_start/2 
* CE 2 is refined into CE [22,23] 


#### Refined cost equations eval_ok_to_replace_start/2 
* CE 22: eval_ok_to_replace_start(V__f_force,B) = 0+ eval_ok_to_replace_bb0_in(V__f_force,B):1
     [] 
* CE 23: eval_ok_to_replace_start(V__f_force,B) = 0+ eval_ok_to_replace_bb0_in(V__f_force,B):2
     [] 

### Cost equations --> "Loop" of eval_ok_to_replace_start/2 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 

#### Loops of eval_ok_to_replace_start/2 
* Loop 17: eval_ok_to_replace_start(V__f_force,B) [] 
* Loop 18: eval_ok_to_replace_start(V__f_force,B) [] 

### Ranking functions of CR eval_ok_to_replace_start(V__f_force,B) 

#### Partial ranking functions of CR eval_ok_to_replace_start(V__f_force,B) 


### Resulting Chains:eval_ok_to_replace_start(V__f_force,B) 
* [18]
* [17]...


### Merging Chains  eval_ok_to_replace_start/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_ok_to_replace_bb3_in(V__f_force,B,C) -> [eval_ok_to_replace_bb3_in(V__f_force',B',C')] 
1
#### Cost of phase [8]:eval_ok_to_replace_bb3_in(V__f_force,B,C) -> [eval_ok_to_replace_bb3_in(V__f_force',B',C')] 
1*it(8)+0
#### Cost of phase [8]:eval_ok_to_replace_bb3_in(V__f_force,B,C) -> [eval_ok_to_replace_bb3_in(V__f_force',B',C')] 
1*it(8)+0
#### Cost of chains of eval_ok_to_replace_bb3_in(V__f_force,B,C):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [B=2,V__f_force=C] 

* Chain [9]: 0
  with precondition: [B=2,C=V__f_force] 


#### Cost of chains of eval_ok_to_replace_bb4_in(V__f_force,B):
* Chain [10]: 0
  with precondition: [] 


#### Cost of chains of eval_ok_to_replace_8(V__f_force,B):
* Chain [12]: 1*s(2)+1
  with precondition: [] 

* Chain [11]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_ok_to_replace_4(V__f_force,B):
* Chain [14]...: 1*s(4)+1
  with precondition: [] 

* Chain [13]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_ok_to_replace_bb0_in(V__f_force,B):
* Chain [16]: 1*aux(3)+0
  with precondition: [] 

* Chain [15]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_ok_to_replace_start(V__f_force,B):
* Chain [18]: 1*s(8)+0
  with precondition: [] 

* Chain [17]...: 1*s(9)+1
  with precondition: [] 


Closed-form bounds of eval_ok_to_replace_start(V__f_force,B): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [17]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_ok_to_replace_start(V__f_force,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 21 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 5 ms.
   - Transitive Invariants 2 ms.
* Refinement performed in 30 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 25 ms.
   - Equation cost structures 12 ms.
   - Phase cost structures 4 ms.
   - Chain cost structures 6 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 135 ms.

