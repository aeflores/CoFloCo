WARNING: Excluded non-linear constraints:[12*F-E*G>=0,12*F-E*G+1=<E]
WARNING: Excluded non-linear constraints:[12*F-E*G>=0,12*F-E*G+1=< -E]
WARNING: Excluded non-linear constraints:[-12*F+E*G>=0,-12*F+E*G+1=<E]
WARNING: Excluded non-linear constraints:[-12*F+E*G>=0,-12*F+E*G+1=< -E]
WARNING: Excluded non-linear constraints:[72*F-E*G>=0,72*F-E*G+1=<E]
WARNING: Excluded non-linear constraints:[72*F-E*G>=0,72*F-E*G+1=< -E]
WARNING: Excluded non-linear constraints:[-72*F+E*G>=0,-72*F+E*G+1=<E]
WARNING: Excluded non-linear constraints:[-72*F+E*G>=0,-72*F+E*G+1=< -E]
WARNING: Excluded non-linear constraints:[144*F-E*G>=0,144*F-E*G+1=<E]
WARNING: Excluded non-linear constraints:[144*F-E*G>=0,144*F-E*G+1=< -E]
WARNING: Excluded non-linear constraints:[-144*F+E*G>=0,-144*F+E*G+1=<E]
WARNING: Excluded non-linear constraints:[-144*F+E*G>=0,-144*F+E*G+1=< -E]
Warning: Ignored call to eval_mad_header_decode_stop/1 in equation eval_mad_header_decode_bb43_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_mad_header_decode_bb43_in/1]
1. non_recursive  : [eval_mad_header_decode_bb37_in/1]
2. recursive  : [eval_mad_header_decode_46/1,eval_mad_header_decode_47/1,eval_mad_header_decode_48/1,eval_mad_header_decode_57/1,eval_mad_header_decode_58/1,eval_mad_header_decode_61/1,eval_mad_header_decode_62/1,eval_mad_header_decode_63/1,eval_mad_header_decode_77/4,eval_mad_header_decode_78/4,eval_mad_header_decode_84/4,eval_mad_header_decode_85/4,eval_mad_header_decode_bb20_in/1,eval_mad_header_decode_bb24_in/1,eval_mad_header_decode_bb25_in/2,eval_mad_header_decode_bb28_in/4,eval_mad_header_decode_bb29_in/4,eval_mad_header_decode_bb30_in/4,eval_mad_header_decode_bb34_in/4,eval_mad_header_decode_bb35_in/4,eval_mad_header_decode_bb44_in/4,eval_mad_header_decode_bb9_in/1]
3. non_recursive  : [eval_mad_header_decode_bb14_in/1]
4. non_recursive  : [eval_mad_header_decode_bb18_in/1]
5. non_recursive  : [eval_mad_header_decode_bb42_in/1]
6. non_recursive  : [loop_cont_eval_mad_header_decode_bb9_in/2]
7. non_recursive  : [eval_mad_header_decode_bb8_in/1]
8. non_recursive  : [eval_mad_header_decode_bb5_in/1]
9. non_recursive  : [eval_mad_header_decode_bb0_in/1]
10. non_recursive  : [eval_mad_header_decode_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_mad_header_decode_bb9_in/1
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_mad_header_decode_bb9_in/2
7. SCC is partially evaluated into eval_mad_header_decode_bb8_in/1
8. SCC is partially evaluated into eval_mad_header_decode_bb5_in/1
9. SCC is partially evaluated into eval_mad_header_decode_bb0_in/1
10. SCC is partially evaluated into eval_mad_header_decode_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mad_header_decode_bb9_in/1 
* CE 13 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 12 is refined into CE [21] 
* CE 10 is refined into CE [22] 


#### Refined cost equations eval_mad_header_decode_bb9_in/1 
* CE 18: eval_mad_header_decode_bb9_in(B) = 0
     [B=5] 
* CE 19: eval_mad_header_decode_bb9_in(B) = 0
     [B=4] 
* CE 20: eval_mad_header_decode_bb9_in(B) = 0
     [B=3] 
* CE 21: eval_mad_header_decode_bb9_in(B) = 0
     [B=2] 
* CE 22: eval_mad_header_decode_bb9_in(B) = 1+ eval_mad_header_decode_bb9_in(B)
     [] 

### Cost equations --> "Loop" of eval_mad_header_decode_bb9_in/1 
* CEs [22] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [21] --> Loop 18 

#### Loops of eval_mad_header_decode_bb9_in/1 
* Loop 14: eval_mad_header_decode_bb9_in(B)->  eval_mad_header_decode_bb9_in(B)
                  [] 
* Loop 15: eval_mad_header_decode_bb9_in(B) [B=5] 
* Loop 16: eval_mad_header_decode_bb9_in(B) [B=4] 
* Loop 17: eval_mad_header_decode_bb9_in(B) [B=3] 
* Loop 18: eval_mad_header_decode_bb9_in(B) [B=2] 

### Ranking functions of CR eval_mad_header_decode_bb9_in(B) 

#### Partial ranking functions of CR eval_mad_header_decode_bb9_in(B) 


### Resulting Chains:eval_mad_header_decode_bb9_in(B) 
* [[14]]...
* [[14],18]
* [[14],17]
* [[14],16]
* [[14],15]
* [18]
* [17]
* [16]
* [15]


### Merging Chains  eval_mad_header_decode_bb9_in/1 into  External patterns of execution 
* [[18],[18,[14]]] --> 1 
* [[17],[17,[14]]] --> 2 
* [[16],[16,[14]]] --> 3 
* [[15],[15,[14]]] --> 4 
* [[[14]]] --> 5 


### Specialization of cost equations loop_cont_eval_mad_header_decode_bb9_in/2 
* CE 17 is refined into CE [23] 
* CE 16 is refined into CE [24] 
* CE 15 is refined into CE [25] 
* CE 14 is refined into CE [26] 


#### Refined cost equations loop_cont_eval_mad_header_decode_bb9_in/2 
* CE 23: loop_cont_eval_mad_header_decode_bb9_in(B,A) = 0
     [B=5] 
* CE 24: loop_cont_eval_mad_header_decode_bb9_in(B,A) = 0
     [B=4] 
* CE 25: loop_cont_eval_mad_header_decode_bb9_in(B,A) = 0
     [B=3] 
* CE 26: loop_cont_eval_mad_header_decode_bb9_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_mad_header_decode_bb9_in/2 
* CEs [23] --> Loop 19 
* CEs [24] --> Loop 20 
* CEs [25] --> Loop 21 
* CEs [26] --> Loop 22 

#### Loops of loop_cont_eval_mad_header_decode_bb9_in/2 
* Loop 19: loop_cont_eval_mad_header_decode_bb9_in(B,A) [B=5] 
* Loop 20: loop_cont_eval_mad_header_decode_bb9_in(B,A) [B=4] 
* Loop 21: loop_cont_eval_mad_header_decode_bb9_in(B,A) [B=3] 
* Loop 22: loop_cont_eval_mad_header_decode_bb9_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_mad_header_decode_bb9_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_mad_header_decode_bb9_in(B,A) 


### Resulting Chains:loop_cont_eval_mad_header_decode_bb9_in(B,A) 
* [22]
* [21]
* [20]
* [19]


### Merging Chains  loop_cont_eval_mad_header_decode_bb9_in/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 
* [[20]] --> 3 
* [[19]] --> 4 


### Specialization of cost equations eval_mad_header_decode_bb8_in/1 
* CE 8 is refined into CE [27,28,29,30,31] 


#### Refined cost equations eval_mad_header_decode_bb8_in/1 
* CE 27: eval_mad_header_decode_bb8_in(B) = 1+ eval_mad_header_decode_bb9_in(C):1+ loop_cont_eval_mad_header_decode_bb9_in(D,B):1
     [D=2,C=2] 
* CE 28: eval_mad_header_decode_bb8_in(B) = 1+ eval_mad_header_decode_bb9_in(C):2+ loop_cont_eval_mad_header_decode_bb9_in(D,B):2
     [D=3,C=3] 
* CE 29: eval_mad_header_decode_bb8_in(B) = 1+ eval_mad_header_decode_bb9_in(C):3+ loop_cont_eval_mad_header_decode_bb9_in(D,B):3
     [D=4,C=4] 
* CE 30: eval_mad_header_decode_bb8_in(B) = 1+ eval_mad_header_decode_bb9_in(C):4+ loop_cont_eval_mad_header_decode_bb9_in(D,B):4
     [D=5,C=5] 
* CE 31: eval_mad_header_decode_bb8_in(B) = 1+ eval_mad_header_decode_bb9_in(C):5
     [] 

### Cost equations --> "Loop" of eval_mad_header_decode_bb8_in/1 
* CEs [31] --> Loop 23 
* CEs [27,28,29,30] --> Loop 24 

#### Loops of eval_mad_header_decode_bb8_in/1 
* Loop 23: eval_mad_header_decode_bb8_in(B) [] 
* Loop 24: eval_mad_header_decode_bb8_in(B) [] 

### Ranking functions of CR eval_mad_header_decode_bb8_in(B) 

#### Partial ranking functions of CR eval_mad_header_decode_bb8_in(B) 


### Resulting Chains:eval_mad_header_decode_bb8_in(B) 
* [24]
* [23]...


### Merging Chains  eval_mad_header_decode_bb8_in/1 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


### Specialization of cost equations eval_mad_header_decode_bb5_in/1 
* CE 6 is refined into CE [32] 
* CE 7 is refined into CE [33,34] 


#### Refined cost equations eval_mad_header_decode_bb5_in/1 
* CE 32: eval_mad_header_decode_bb5_in(B) = 0
     [] 
* CE 33: eval_mad_header_decode_bb5_in(B) = 0+ eval_mad_header_decode_bb8_in(B):1
     [] 
* CE 34: eval_mad_header_decode_bb5_in(B) = 0+ eval_mad_header_decode_bb8_in(B):2
     [] 

### Cost equations --> "Loop" of eval_mad_header_decode_bb5_in/1 
* CEs [34] --> Loop 25 
* CEs [32,33] --> Loop 26 

#### Loops of eval_mad_header_decode_bb5_in/1 
* Loop 25: eval_mad_header_decode_bb5_in(B) [] 
* Loop 26: eval_mad_header_decode_bb5_in(B) [] 

### Ranking functions of CR eval_mad_header_decode_bb5_in(B) 

#### Partial ranking functions of CR eval_mad_header_decode_bb5_in(B) 


### Resulting Chains:eval_mad_header_decode_bb5_in(B) 
* [26]
* [25]...


### Merging Chains  eval_mad_header_decode_bb5_in/1 into  External patterns of execution 
* [[26]] --> 1 
* [[25]] --> 2 


### Specialization of cost equations eval_mad_header_decode_bb0_in/1 
* CE 3 is refined into CE [35] 
* CE 4 is refined into CE [36,37] 
* CE 5 is refined into CE [38,39] 


#### Refined cost equations eval_mad_header_decode_bb0_in/1 
* CE 35: eval_mad_header_decode_bb0_in(B) = 0
     [] 
* CE 36: eval_mad_header_decode_bb0_in(B) = 0+ eval_mad_header_decode_bb5_in(B):1
     [] 
* CE 37: eval_mad_header_decode_bb0_in(B) = 0+ eval_mad_header_decode_bb5_in(B):2
     [] 
* CE 38: eval_mad_header_decode_bb0_in(B) = 0+ eval_mad_header_decode_bb8_in(B):1
     [] 
* CE 39: eval_mad_header_decode_bb0_in(B) = 0+ eval_mad_header_decode_bb8_in(B):2
     [] 

### Cost equations --> "Loop" of eval_mad_header_decode_bb0_in/1 
* CEs [37,39] --> Loop 27 
* CEs [35,36,38] --> Loop 28 

#### Loops of eval_mad_header_decode_bb0_in/1 
* Loop 27: eval_mad_header_decode_bb0_in(B) [] 
* Loop 28: eval_mad_header_decode_bb0_in(B) [] 

### Ranking functions of CR eval_mad_header_decode_bb0_in(B) 

#### Partial ranking functions of CR eval_mad_header_decode_bb0_in(B) 


### Resulting Chains:eval_mad_header_decode_bb0_in(B) 
* [28]
* [27]...


### Merging Chains  eval_mad_header_decode_bb0_in/1 into  External patterns of execution 
* [[28]] --> 1 
* [[27]] --> 2 


### Specialization of cost equations eval_mad_header_decode_start/1 
* CE 2 is refined into CE [40,41] 


#### Refined cost equations eval_mad_header_decode_start/1 
* CE 40: eval_mad_header_decode_start(B) = 0+ eval_mad_header_decode_bb0_in(B):1
     [] 
* CE 41: eval_mad_header_decode_start(B) = 0+ eval_mad_header_decode_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_mad_header_decode_start/1 
* CEs [41] --> Loop 29 
* CEs [40] --> Loop 30 

#### Loops of eval_mad_header_decode_start/1 
* Loop 29: eval_mad_header_decode_start(B) [] 
* Loop 30: eval_mad_header_decode_start(B) [] 

### Ranking functions of CR eval_mad_header_decode_start(B) 

#### Partial ranking functions of CR eval_mad_header_decode_start(B) 


### Resulting Chains:eval_mad_header_decode_start(B) 
* [30]
* [29]...


### Merging Chains  eval_mad_header_decode_start/1 into  External patterns of execution 
* [[30]] --> 1 
* [[29]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [14] 

 * loop 14:eval_mad_header_decode_bb9_in(B) -> [eval_mad_header_decode_bb9_in(B')] 
1
#### Cost of phase [14]:eval_mad_header_decode_bb9_in(B) -> [eval_mad_header_decode_bb9_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_mad_header_decode_bb9_in(B) -> [eval_mad_header_decode_bb9_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_mad_header_decode_bb9_in(B) -> [eval_mad_header_decode_bb9_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_mad_header_decode_bb9_in(B) -> [eval_mad_header_decode_bb9_in(B')] 
1*it(14)+0
#### Cost of phase [14]:eval_mad_header_decode_bb9_in(B) -> [eval_mad_header_decode_bb9_in(B')] 
1*it(14)+0
#### Cost of chains of eval_mad_header_decode_bb9_in(B):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [] 

* Chain [[14],18]: 1*it(14)+0
  with precondition: [B=2] 

* Chain [[14],17]: 1*it(14)+0
  with precondition: [B=3] 

* Chain [[14],16]: 1*it(14)+0
  with precondition: [B=4] 

* Chain [[14],15]: 1*it(14)+0
  with precondition: [B=5] 

* Chain [18]: 0
  with precondition: [B=2] 

* Chain [17]: 0
  with precondition: [B=3] 

* Chain [16]: 0
  with precondition: [B=4] 

* Chain [15]: 0
  with precondition: [B=5] 


#### Cost of chains of loop_cont_eval_mad_header_decode_bb9_in(B,A):
* Chain [22]: 0
  with precondition: [B=2] 

* Chain [21]: 0
  with precondition: [B=3] 

* Chain [20]: 0
  with precondition: [B=4] 

* Chain [19]: 0
  with precondition: [B=5] 


#### Cost of chains of eval_mad_header_decode_bb8_in(B):
* Chain [24]: 1*aux(5)+0
  with precondition: [] 

* Chain [23]...: 1*s(9)+1
  with precondition: [] 


#### Cost of chains of eval_mad_header_decode_bb5_in(B):
* Chain [26]: 1*aux(6)+0
  with precondition: [] 

* Chain [25]...: 1*s(11)+1
  with precondition: [] 


#### Cost of chains of eval_mad_header_decode_bb0_in(B):
* Chain [28]: 1*aux(7)+0
  with precondition: [] 

* Chain [27]...: 1*aux(8)+0
  with precondition: [] 


#### Cost of chains of eval_mad_header_decode_start(B):
* Chain [30]: 1*s(16)+0
  with precondition: [] 

* Chain [29]...: 1*s(17)+0
  with precondition: [] 


Closed-form bounds of eval_mad_header_decode_start(B): 
-------------------------------------
* Chain [30] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [29]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mad_header_decode_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 23 ms.
* Invariants computed in 3 ms.
   - Backward Invariants 3 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 15 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 10 ms.
   - Equation cost structures 5 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 2 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 83 ms.

