WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=<H]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=< -H]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=<H]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=< -H]
WARNING: Excluded non-linear constraints:[-H*I+2147483647>=0,-H*I+2147483647+1=<H]
WARNING: Excluded non-linear constraints:[-H*I+2147483647>=0,-H*I+2147483647+1=< -H]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[-H*I+2147483647>=0,-H*I+2147483647+1=<H]
WARNING: Excluded non-linear constraints:[-H*I+2147483647>=0,-H*I+2147483647+1=< -H]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[-H*I+2147483647>=0,-H*I+2147483647+1=<H]
WARNING: Excluded non-linear constraints:[-H*I+2147483647>=0,-H*I+2147483647+1=< -H]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[A-H*I>=0,A-H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=<H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=<J]
WARNING: Excluded non-linear constraints:[-A+H*I>=0,-A+H*I+1=< -H,-J*K+2147483647>=0,-J*K+2147483647+1=< -J]
Warning: Ignored call to eval_pick_cell_size_stop/1 in equation eval_pick_cell_size_bb39_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_pick_cell_size_bb11_in/3]
1. recursive  : [eval_pick_cell_size_100/7,eval_pick_cell_size_101/7,eval_pick_cell_size_102/7,eval_pick_cell_size_103/7,eval_pick_cell_size_104/7,eval_pick_cell_size_105/7,eval_pick_cell_size_52/7,eval_pick_cell_size_53/7,eval_pick_cell_size_71/7,eval_pick_cell_size_72/7,eval_pick_cell_size_77/7,eval_pick_cell_size_78/7,eval_pick_cell_size_81/7,eval_pick_cell_size_82/7,eval_pick_cell_size_87/7,eval_pick_cell_size_88/7,eval_pick_cell_size_93/7,eval_pick_cell_size_94/7,eval_pick_cell_size_97/7,eval_pick_cell_size_98/7,eval_pick_cell_size_99/7,eval_pick_cell_size_bb17_in/7,eval_pick_cell_size_bb28_in/7,eval_pick_cell_size_bb30_in/7]
2. recursive  : [eval_pick_cell_size_bb15_in/5,loop_cont_eval_pick_cell_size_bb17_in/6]
3. recursive  : [eval_pick_cell_size_21/2,eval_pick_cell_size_22/2,eval_pick_cell_size_23/3,eval_pick_cell_size_24/3,eval_pick_cell_size_bb14_in/2,loop_cont_eval_pick_cell_size_bb15_in/3]
4. non_recursive  : [eval_pick_cell_size_bb39_in/1]
5. non_recursive  : [eval_pick_cell_size_bb38_in/1]
6. non_recursive  : [loop_cont_eval_pick_cell_size_bb14_in/2]
7. non_recursive  : [eval_pick_cell_size_20/2]
8. non_recursive  : [eval_pick_cell_size_19/2]
9. non_recursive  : [eval_pick_cell_size_18/2]
10. non_recursive  : [loop_cont_eval_pick_cell_size_bb11_in/3]
11. non_recursive  : [eval_pick_cell_size_15/2]
12. non_recursive  : [eval_pick_cell_size_14/2]
13. non_recursive  : [eval_pick_cell_size_13/2]
14. non_recursive  : [eval_pick_cell_size_bb10_in/2]
15. non_recursive  : [eval_pick_cell_size_12/2]
16. non_recursive  : [eval_pick_cell_size_11/2]
17. non_recursive  : [eval_pick_cell_size_10/2]
18. non_recursive  : [eval_pick_cell_size_9/2]
19. non_recursive  : [eval_pick_cell_size_8/2]
20. non_recursive  : [eval_pick_cell_size_bb8_in/2]
21. non_recursive  : [eval_pick_cell_size_bb5_in/2]
22. non_recursive  : [eval_pick_cell_size_bb2_in/2]
23. non_recursive  : [eval_pick_cell_size_bb0_in/2]
24. non_recursive  : [eval_pick_cell_size_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_pick_cell_size_bb11_in/3
1. SCC is partially evaluated into eval_pick_cell_size_bb17_in/7
2. SCC is partially evaluated into eval_pick_cell_size_bb15_in/5
3. SCC is partially evaluated into eval_pick_cell_size_bb14_in/2
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into loop_cont_eval_pick_cell_size_bb14_in/2
7. SCC is partially evaluated into eval_pick_cell_size_20/2
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_pick_cell_size_15/2
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_pick_cell_size_12/2
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_pick_cell_size_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_pick_cell_size_bb11_in/3 
* CE 7 is refined into CE [24] 
* CE 6 is refined into CE [25] 


#### Refined cost equations eval_pick_cell_size_bb11_in/3 
* CE 24: eval_pick_cell_size_bb11_in(A,B,A) = 0
     [B=6] 
* CE 25: eval_pick_cell_size_bb11_in(V_max_size,B,C) = 1+ eval_pick_cell_size_bb11_in(V_max_size,D,C)
     [D=6,B=6] 

### Cost equations --> "Loop" of eval_pick_cell_size_bb11_in/3 
* CEs [25] --> Loop 21 
* CEs [24] --> Loop 22 

#### Loops of eval_pick_cell_size_bb11_in/3 
* Loop 21: eval_pick_cell_size_bb11_in(V_max_size,B,C)->  eval_pick_cell_size_bb11_in(V_max_size,B',C)
                  [B'=6,B=6] 
* Loop 22: eval_pick_cell_size_bb11_in(A,B,A) [B=6] 

### Ranking functions of CR eval_pick_cell_size_bb11_in(V_max_size,B,C) 

#### Partial ranking functions of CR eval_pick_cell_size_bb11_in(V_max_size,B,C) 


### Resulting Chains:eval_pick_cell_size_bb11_in(V_max_size,B,C) 
* [[21]]...
* [[21],22]
* [22]


### Merging Chains  eval_pick_cell_size_bb11_in/3 into  External patterns of execution 
* [[22],[22,[21]]] --> 1 
* [[[21]]] --> 2 


### Specialization of cost equations eval_pick_cell_size_bb17_in/7 
* CE 23 is refined into CE [26] 
* CE 21 is refined into CE [27] 
* CE 22 is refined into CE [28] 
* CE 20 is refined into CE [29] 
* CE 19 is refined into CE [30] 


#### Refined cost equations eval_pick_cell_size_bb17_in/7 
* CE 26: eval_pick_cell_size_bb17_in(A,B,C,D,A,B,C) = 0
     [D=3] 
* CE 27: eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) = 0
     [V_max_size>=1,B=2] 
* CE 28: eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) = 0
     [0>=V_max_size+1,B=2] 
* CE 29: eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) = 0
     [B=2,V_max_size=0] 
* CE 30: eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) = 1+ eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E)
     [B>=2,3>=B] 

### Cost equations --> "Loop" of eval_pick_cell_size_bb17_in/7 
* CEs [30] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 

#### Loops of eval_pick_cell_size_bb17_in/7 
* Loop 23: eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E)->  eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E)
                  [B>=2,3>=B] 
* Loop 24: eval_pick_cell_size_bb17_in(A,B,C,D,A,B,C) [D=3] 
* Loop 25: eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) [V_max_size>=1,B=2] 
* Loop 26: eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) [0>=V_max_size+1,B=2] 
* Loop 27: eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) [B=2,V_max_size=0] 

### Ranking functions of CR eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) 

#### Partial ranking functions of CR eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) 


### Resulting Chains:eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) 
* [[23]]...
* [[23],27]
* [[23],26]
* [[23],25]
* [[23],24]
* [27]
* [26]
* [25]
* [24]


### Merging Chains  eval_pick_cell_size_bb17_in/7 into  External patterns of execution 
* [[27],[27,[23]]] --> 1 
* [[26],[26,[23]]] --> 2 
* [[25],[25,[23]]] --> 3 
* [[24],[24,[23]]] --> 4 
* [[[23]]] --> 5 


### Specialization of cost equations eval_pick_cell_size_bb15_in/5 
* CE 18 is refined into CE [31] 
* CE 16 is refined into CE [32] 
* CE 15 is refined into CE [33,34,35,36] 
* CE 17 is refined into CE [37] 
* CE 14 is refined into CE [38,39] 


#### Refined cost equations eval_pick_cell_size_bb15_in/5 
* CE 31: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) = 0
     [B=5] 
* CE 32: eval_pick_cell_size_bb15_in(A,B,C,D,A) = 0
     [D=4] 
* CE 33: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) = 1+ eval_pick_cell_size_bb17_in(D,V_127,V_133,E,F,G,H):1
     [E=2,D=0,B=2,V_max_size=0] 
* CE 34: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) = 1+ eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,D,E,F,G):2
     [0>=V_max_size+1,D=2,B=2] 
* CE 35: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) = 1+ eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,D,E,F,G):3
     [V_max_size>=1,D=2,B=2] 
* CE 36: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) = 1+ eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,D,E,F,G):5
     [D=2,B=2] 
* CE 37: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) = 0
     [B=2] 
* CE 38: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) = 2+ eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,D,V_max_size,V_127,V_133):4+ eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C)
     [B>=2,5>=B,D=3] 
* CE 39: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) = 2+ eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,D,E,F,G):5
     [B>=2,5>=B,D=3] 

### Cost equations --> "Loop" of eval_pick_cell_size_bb15_in/5 
* CEs [36,39] --> Loop 28 
* CEs [38] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [32] --> Loop 31 
* CEs [33,34,35,37] --> Loop 32 

#### Loops of eval_pick_cell_size_bb15_in/5 
* Loop 28: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) [B>=2,5>=B] 
* Loop 29: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C)->  eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C)
                  [B>=2,5>=B] 
* Loop 30: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) [B=5] 
* Loop 31: eval_pick_cell_size_bb15_in(A,B,C,D,A) [D=4] 
* Loop 32: eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) [B=2] 

### Ranking functions of CR eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) 

#### Partial ranking functions of CR eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) 


### Resulting Chains:eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) 
* [[29]]...
* [[29],32]
* [[29],31]
* [[29],30]
* [[29],28]...
* [32]
* [31]
* [30]
* [28]...


### Merging Chains  eval_pick_cell_size_bb15_in/5 into  External patterns of execution 
* [[32],[32,[29]]] --> 1 
* [[31],[31,[29]]] --> 2 
* [[30],[30,[29]]] --> 3 
* [[28],[28,[29]]] --> 4 
* [[[29]]] --> 5 


### Specialization of cost equations eval_pick_cell_size_bb14_in/2 
* CE 11 is refined into CE [40,41,42] 
* CE 9 is refined into CE [43,44,45] 
* CE 10 is refined into CE [46,47,48] 


#### Refined cost equations eval_pick_cell_size_bb14_in/2 
* CE 40: eval_pick_cell_size_bb14_in(V_max_size,B) = 2+ eval_pick_cell_size_bb15_in(V_max_size,C,D,E,V_max_size):2+ eval_pick_cell_size_bb14_in(V_max_size,B)
     [E=4] 
* CE 41: eval_pick_cell_size_bb14_in(V_max_size,B) = 2+ eval_pick_cell_size_bb15_in(V_max_size,C,D,E,F):4
     [E=4] 
* CE 42: eval_pick_cell_size_bb14_in(V_max_size,B) = 2+ eval_pick_cell_size_bb15_in(V_max_size,C,D,E,F):5
     [E=4] 
* CE 43: eval_pick_cell_size_bb14_in(V_max_size,B) = 1+ eval_pick_cell_size_bb15_in(V_max_size,C,D,E,F):3
     [E=5,B=5] 
* CE 44: eval_pick_cell_size_bb14_in(V_max_size,B) = 1+ eval_pick_cell_size_bb15_in(V_max_size,C,D,E,F):4
     [E=5,B=5] 
* CE 45: eval_pick_cell_size_bb14_in(V_max_size,B) = 1+ eval_pick_cell_size_bb15_in(V_max_size,C,D,E,F):5
     [E=5,B=5] 
* CE 46: eval_pick_cell_size_bb14_in(V_max_size,B) = 1+ eval_pick_cell_size_bb15_in(V_max_size,C,D,E,F):1
     [E=2,B=2] 
* CE 47: eval_pick_cell_size_bb14_in(V_max_size,B) = 1+ eval_pick_cell_size_bb15_in(V_max_size,C,D,E,F):4
     [E=2,B=2] 
* CE 48: eval_pick_cell_size_bb14_in(V_max_size,B) = 1+ eval_pick_cell_size_bb15_in(V_max_size,C,D,E,F):5
     [E=2,B=2] 

### Cost equations --> "Loop" of eval_pick_cell_size_bb14_in/2 
* CEs [41,42,44,45,47,48] --> Loop 33 
* CEs [43] --> Loop 34 
* CEs [46] --> Loop 35 
* CEs [40] --> Loop 36 

#### Loops of eval_pick_cell_size_bb14_in/2 
* Loop 33: eval_pick_cell_size_bb14_in(V_max_size,B) [] 
* Loop 34: eval_pick_cell_size_bb14_in(V_max_size,B) [B=5] 
* Loop 35: eval_pick_cell_size_bb14_in(V_max_size,B) [B=2] 
* Loop 36: eval_pick_cell_size_bb14_in(V_max_size,B)->  eval_pick_cell_size_bb14_in(V_max_size,B)
                  [] 

### Ranking functions of CR eval_pick_cell_size_bb14_in(V_max_size,B) 

#### Partial ranking functions of CR eval_pick_cell_size_bb14_in(V_max_size,B) 


### Resulting Chains:eval_pick_cell_size_bb14_in(V_max_size,B) 
* [[36]]...
* [[36],35]
* [[36],34]
* [[36],33]...
* [35]
* [34]
* [33]...


### Merging Chains  eval_pick_cell_size_bb14_in/2 into  External patterns of execution 
* [[35],[35,[36]]] --> 1 
* [[34],[34,[36]]] --> 2 
* [[33],[[36]],[33,[36]]] --> 3 


### Specialization of cost equations loop_cont_eval_pick_cell_size_bb14_in/2 
* CE 13 is refined into CE [49] 
* CE 12 is refined into CE [50] 


#### Refined cost equations loop_cont_eval_pick_cell_size_bb14_in/2 
* CE 49: loop_cont_eval_pick_cell_size_bb14_in(B,A) = 0
     [B=5] 
* CE 50: loop_cont_eval_pick_cell_size_bb14_in(B,A) = 0
     [B=2] 

### Cost equations --> "Loop" of loop_cont_eval_pick_cell_size_bb14_in/2 
* CEs [49] --> Loop 37 
* CEs [50] --> Loop 38 

#### Loops of loop_cont_eval_pick_cell_size_bb14_in/2 
* Loop 37: loop_cont_eval_pick_cell_size_bb14_in(B,A) [B=5] 
* Loop 38: loop_cont_eval_pick_cell_size_bb14_in(B,A) [B=2] 

### Ranking functions of CR loop_cont_eval_pick_cell_size_bb14_in(B,A) 

#### Partial ranking functions of CR loop_cont_eval_pick_cell_size_bb14_in(B,A) 


### Resulting Chains:loop_cont_eval_pick_cell_size_bb14_in(B,A) 
* [38]
* [37]


### Merging Chains  loop_cont_eval_pick_cell_size_bb14_in/2 into  External patterns of execution 
* [[38]] --> 1 
* [[37]] --> 2 


### Specialization of cost equations eval_pick_cell_size_20/2 
* CE 8 is refined into CE [51,52,53] 


#### Refined cost equations eval_pick_cell_size_20/2 
* CE 51: eval_pick_cell_size_20(V_max_size,B) = 1+ eval_pick_cell_size_bb14_in(V_max_size,C):1+ loop_cont_eval_pick_cell_size_bb14_in(D,B):1
     [D=2,C=2] 
* CE 52: eval_pick_cell_size_20(V_max_size,B) = 1+ eval_pick_cell_size_bb14_in(V_max_size,C):2+ loop_cont_eval_pick_cell_size_bb14_in(D,B):2
     [D=5,C=5] 
* CE 53: eval_pick_cell_size_20(V_max_size,B) = 1+ eval_pick_cell_size_bb14_in(V_max_size,C):3
     [] 

### Cost equations --> "Loop" of eval_pick_cell_size_20/2 
* CEs [53] --> Loop 39 
* CEs [51,52] --> Loop 40 

#### Loops of eval_pick_cell_size_20/2 
* Loop 39: eval_pick_cell_size_20(V_max_size,B) [] 
* Loop 40: eval_pick_cell_size_20(V_max_size,B) [] 

### Ranking functions of CR eval_pick_cell_size_20(V_max_size,B) 

#### Partial ranking functions of CR eval_pick_cell_size_20(V_max_size,B) 


### Resulting Chains:eval_pick_cell_size_20(V_max_size,B) 
* [40]
* [39]...


### Merging Chains  eval_pick_cell_size_20/2 into  External patterns of execution 
* [[40]] --> 1 
* [[39]] --> 2 


### Specialization of cost equations eval_pick_cell_size_15/2 
* CE 5 is refined into CE [54,55,56] 


#### Refined cost equations eval_pick_cell_size_15/2 
* CE 54: eval_pick_cell_size_15(V_max_size,B) = 1+ eval_pick_cell_size_bb11_in(V_max_size,C,V_max_size):1+ eval_pick_cell_size_20(V_max_size,B):1
     [C=6] 
* CE 55: eval_pick_cell_size_15(V_max_size,B) = 1+ eval_pick_cell_size_bb11_in(V_max_size,C,V_max_size):1+ eval_pick_cell_size_20(V_max_size,B):2
     [C=6] 
* CE 56: eval_pick_cell_size_15(V_max_size,B) = 1+ eval_pick_cell_size_bb11_in(V_max_size,C,D):2
     [C=6] 

### Cost equations --> "Loop" of eval_pick_cell_size_15/2 
* CEs [55,56] --> Loop 41 
* CEs [54] --> Loop 42 

#### Loops of eval_pick_cell_size_15/2 
* Loop 41: eval_pick_cell_size_15(V_max_size,B) [] 
* Loop 42: eval_pick_cell_size_15(V_max_size,B) [] 

### Ranking functions of CR eval_pick_cell_size_15(V_max_size,B) 

#### Partial ranking functions of CR eval_pick_cell_size_15(V_max_size,B) 


### Resulting Chains:eval_pick_cell_size_15(V_max_size,B) 
* [42]
* [41]...


### Merging Chains  eval_pick_cell_size_15/2 into  External patterns of execution 
* [[42]] --> 1 
* [[41]] --> 2 


### Specialization of cost equations eval_pick_cell_size_12/2 
* CE 3 is refined into CE [57] 
* CE 4 is refined into CE [58,59] 


#### Refined cost equations eval_pick_cell_size_12/2 
* CE 57: eval_pick_cell_size_12(V_max_size,B) = 0
     [] 
* CE 58: eval_pick_cell_size_12(V_max_size,B) = 0+ eval_pick_cell_size_15(V_max_size,B):1
     [] 
* CE 59: eval_pick_cell_size_12(V_max_size,B) = 0+ eval_pick_cell_size_15(V_max_size,B):2
     [] 

### Cost equations --> "Loop" of eval_pick_cell_size_12/2 
* CEs [59] --> Loop 43 
* CEs [57,58] --> Loop 44 

#### Loops of eval_pick_cell_size_12/2 
* Loop 43: eval_pick_cell_size_12(V_max_size,B) [] 
* Loop 44: eval_pick_cell_size_12(V_max_size,B) [] 

### Ranking functions of CR eval_pick_cell_size_12(V_max_size,B) 

#### Partial ranking functions of CR eval_pick_cell_size_12(V_max_size,B) 


### Resulting Chains:eval_pick_cell_size_12(V_max_size,B) 
* [44]
* [43]...


### Merging Chains  eval_pick_cell_size_12/2 into  External patterns of execution 
* [[44]] --> 1 
* [[43]] --> 2 


### Specialization of cost equations eval_pick_cell_size_start/4 
* CE 2 is refined into CE [60,61] 


#### Refined cost equations eval_pick_cell_size_start/4 
* CE 60: eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B) = 0+ eval_pick_cell_size_12(V_max_size,B):1
     [] 
* CE 61: eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B) = 0+ eval_pick_cell_size_12(V_max_size,B):2
     [] 

### Cost equations --> "Loop" of eval_pick_cell_size_start/4 
* CEs [61] --> Loop 45 
* CEs [60] --> Loop 46 

#### Loops of eval_pick_cell_size_start/4 
* Loop 45: eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B) [] 
* Loop 46: eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B) [] 

### Ranking functions of CR eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B) 

#### Partial ranking functions of CR eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B) 


### Resulting Chains:eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B) 
* [46]
* [45]...


### Merging Chains  eval_pick_cell_size_start/4 into  External patterns of execution 
* [[46]] --> 1 
* [[45]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [21] 

 * loop 21:eval_pick_cell_size_bb11_in(V_max_size,B,C) -> [eval_pick_cell_size_bb11_in(V_max_size',B',C')] 
1
#### Cost of phase [21]:eval_pick_cell_size_bb11_in(V_max_size,B,C) -> [eval_pick_cell_size_bb11_in(V_max_size',B',C')] 
1*it(21)+0
#### Cost of phase [21]:eval_pick_cell_size_bb11_in(V_max_size,B,C) -> [eval_pick_cell_size_bb11_in(V_max_size',B',C')] 
1*it(21)+0
#### Cost of chains of eval_pick_cell_size_bb11_in(V_max_size,B,C):
* Chain [[21]]...: 1*it(21)+0
  with precondition: [B=6] 

* Chain [[21],22]: 1*it(21)+0
  with precondition: [B=6,V_max_size=C] 

* Chain [22]: 0
  with precondition: [B=6,C=V_max_size] 


#### Cost of loops [23] 

 * loop 23:eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) -> [eval_pick_cell_size_bb17_in(V_max_size',V_127',V_133',B',C',D',E')] 
1
#### Cost of phase [23]:eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) -> [eval_pick_cell_size_bb17_in(V_max_size',V_127',V_133',B',C',D',E')] 
1*it(23)+0
#### Cost of phase [23]:eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) -> [eval_pick_cell_size_bb17_in(V_max_size',V_127',V_133',B',C',D',E')] 
1*it(23)+0
#### Cost of phase [23]:eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) -> [eval_pick_cell_size_bb17_in(V_max_size',V_127',V_133',B',C',D',E')] 
1*it(23)+0
#### Cost of phase [23]:eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) -> [eval_pick_cell_size_bb17_in(V_max_size',V_127',V_133',B',C',D',E')] 
1*it(23)+0
#### Cost of phase [23]:eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E) -> [eval_pick_cell_size_bb17_in(V_max_size',V_127',V_133',B',C',D',E')] 
1*it(23)+0
#### Cost of chains of eval_pick_cell_size_bb17_in(V_max_size,V_127,V_133,B,C,D,E):
* Chain [[23]]...: 1*it(23)+0
  with precondition: [B>=2,3>=B] 

* Chain [[23],27]: 1*it(23)+0
  with precondition: [V_max_size=0,B=2] 

* Chain [[23],26]: 1*it(23)+0
  with precondition: [B=2,0>=V_max_size+1] 

* Chain [[23],25]: 1*it(23)+0
  with precondition: [B=2,V_max_size>=1] 

* Chain [[23],24]: 1*it(23)+0
  with precondition: [B=3,V_max_size=C,V_127=D,V_133=E] 

* Chain [27]: 0
  with precondition: [V_max_size=0,B=2] 

* Chain [26]: 0
  with precondition: [B=2,0>=V_max_size+1] 

* Chain [25]: 0
  with precondition: [B=2,V_max_size>=1] 

* Chain [24]: 0
  with precondition: [B=3,C=V_max_size,D=V_127,E=V_133] 


#### Cost of loops [29] 

 * loop 29:eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) -> [eval_pick_cell_size_bb15_in(V_max_size',V_127',V_133',B',C')] 
1*s(7)+2
#### Cost of phase [29]:eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) -> [eval_pick_cell_size_bb15_in(V_max_size',V_127',V_133',B',C')] 
3*it(29)+0
#### Cost of phase [29]:eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) -> [eval_pick_cell_size_bb15_in(V_max_size',V_127',V_133',B',C')] 
3*it(29)+0
#### Cost of phase [29]:eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) -> [eval_pick_cell_size_bb15_in(V_max_size',V_127',V_133',B',C')] 
3*it(29)+0
#### Cost of phase [29]:eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) -> [eval_pick_cell_size_bb15_in(V_max_size',V_127',V_133',B',C')] 
3*it(29)+0
#### Cost of phase [29]:eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C) -> [eval_pick_cell_size_bb15_in(V_max_size',V_127',V_133',B',C')] 
3*it(29)+0
#### Cost of chains of eval_pick_cell_size_bb15_in(V_max_size,V_127,V_133,B,C):
* Chain [[29]]...: 3*it(29)+0
  with precondition: [B>=2,5>=B] 

* Chain [[29],32]: 4*aux(6)+0
  with precondition: [B=2] 

* Chain [[29],31]: 3*it(29)+0
  with precondition: [B=4,V_max_size=C] 

* Chain [[29],30]: 3*it(29)+0
  with precondition: [B=5] 

* Chain [[29],28]...: 4*aux(7)+0
  with precondition: [5>=B,B>=2] 

* Chain [32]: 1*aux(6)+0
  with precondition: [B=2] 

* Chain [31]: 0
  with precondition: [B=4,C=V_max_size] 

* Chain [30]: 0
  with precondition: [B=5] 

* Chain [28]...: 1*aux(7)+0
  with precondition: [5>=B,B>=2] 


#### Cost of loops [36] 

 * loop 36:eval_pick_cell_size_bb14_in(V_max_size,B) -> [eval_pick_cell_size_bb14_in(V_max_size',B')] 
1*s(21)+2
#### Cost of phase [36]:eval_pick_cell_size_bb14_in(V_max_size,B) -> [eval_pick_cell_size_bb14_in(V_max_size',B')] 
3*it(36)+0
#### Cost of phase [36]:eval_pick_cell_size_bb14_in(V_max_size,B) -> [eval_pick_cell_size_bb14_in(V_max_size',B')] 
3*it(36)+0
#### Cost of phase [36]:eval_pick_cell_size_bb14_in(V_max_size,B) -> [eval_pick_cell_size_bb14_in(V_max_size',B')] 
3*it(36)+0
#### Cost of phase [36]:eval_pick_cell_size_bb14_in(V_max_size,B) -> [eval_pick_cell_size_bb14_in(V_max_size',B')] 
3*it(36)+0
#### Cost of chains of eval_pick_cell_size_bb14_in(V_max_size,B):
* Chain [[36]]...: 3*it(36)+0
  with precondition: [] 

* Chain [[36],35]: 4*it(36)+1
  with precondition: [B=2] 

* Chain [[36],34]: 4*it(36)+1
  with precondition: [B=5] 

* Chain [[36],33]...: 4*aux(12)+0
  with precondition: [] 

* Chain [35]: 1*s(23)+1
  with precondition: [B=2] 

* Chain [34]: 1*s(24)+1
  with precondition: [B=5] 

* Chain [33]...: 1*aux(12)+0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_pick_cell_size_bb14_in(B,A):
* Chain [38]: 0
  with precondition: [B=2] 

* Chain [37]: 0
  with precondition: [B=5] 


#### Cost of chains of eval_pick_cell_size_20(V_max_size,B):
* Chain [40]: 1*aux(16)+0
  with precondition: [] 

* Chain [39]...: 1*s(40)+1
  with precondition: [] 


#### Cost of chains of eval_pick_cell_size_15(V_max_size,B):
* Chain [42]: 2*s(41)+1
  with precondition: [] 

* Chain [41]...: 1*aux(17)+0
  with precondition: [] 


#### Cost of chains of eval_pick_cell_size_12(V_max_size,B):
* Chain [44]: 1*aux(18)+0
  with precondition: [] 

* Chain [43]...: 1*s(47)+0
  with precondition: [] 


#### Cost of chains of eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B):
* Chain [46]: 1*s(48)+0
  with precondition: [] 

* Chain [45]...: 1*s(49)+0
  with precondition: [] 


Closed-form bounds of eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B): 
-------------------------------------
* Chain [46] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_pick_cell_size_start(V_max_size,V_min_levels,V_accurate,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 72 ms.
* Invariants computed in 28 ms.
   - Backward Invariants 19 ms.
   - Transitive Invariants 3 ms.
* Refinement performed in 55 ms.
* Termination proved in 5 ms.
* Upper bounds computed in 46 ms.
   - Equation cost structures 19 ms.
   - Phase cost structures 8 ms.
   - Chain cost structures 20 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 301 ms.

