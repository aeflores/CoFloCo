Warning: Ignored call to eval_mad_decoder_finish_stop/1 in equation eval_mad_decoder_finish_bb8_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_mad_decoder_finish_10/2,eval_mad_decoder_finish_11/3,eval_mad_decoder_finish_bb3_in/1]
1. non_recursive  : [eval_mad_decoder_finish_bb8_in/1]
2. non_recursive  : [eval_mad_decoder_finish_bb7_in/1]
3. non_recursive  : [eval_mad_decoder_finish_17/1]
4. non_recursive  : [eval_mad_decoder_finish_16/2]
5. non_recursive  : [eval_mad_decoder_finish__critedge_in/1]
6. non_recursive  : [loop_cont_eval_mad_decoder_finish_bb3_in/2]
7. non_recursive  : [eval_mad_decoder_finish_7/1]
8. non_recursive  : [eval_mad_decoder_finish_6/1]
9. non_recursive  : [eval_mad_decoder_finish_5/2]
10. non_recursive  : [eval_mad_decoder_finish_bb0_in/1]
11. non_recursive  : [eval_mad_decoder_finish_start/1]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_mad_decoder_finish_bb3_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_mad_decoder_finish_17/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_mad_decoder_finish_7/1
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_mad_decoder_finish_bb0_in/1
11. SCC is partially evaluated into eval_mad_decoder_finish_start/1

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_mad_decoder_finish_bb3_in/1 
* CE 7 is refined into CE [9] 
* CE 6 is refined into CE [10] 


#### Refined cost equations eval_mad_decoder_finish_bb3_in/1 
* CE 9: eval_mad_decoder_finish_bb3_in(B) = 1+ eval_mad_decoder_finish_bb3_in(C)
     [C=2,B=2] 
* CE 10: eval_mad_decoder_finish_bb3_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_mad_decoder_finish_bb3_in/1 
* CEs [10] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_mad_decoder_finish_bb3_in/1 
* Loop 7: eval_mad_decoder_finish_bb3_in(B) [B=2] 
* Loop 8: eval_mad_decoder_finish_bb3_in(B)->  eval_mad_decoder_finish_bb3_in(B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_mad_decoder_finish_bb3_in(B) 

#### Partial ranking functions of CR eval_mad_decoder_finish_bb3_in(B) 


### Resulting Chains:eval_mad_decoder_finish_bb3_in(B) 
* [[8]]...
* [[8],7]
* [7]


### Merging Chains  eval_mad_decoder_finish_bb3_in/1 into  External patterns of execution 
* [[7],[7,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval_mad_decoder_finish_17/1 
* CE 8 is refined into CE [11] 


#### Refined cost equations eval_mad_decoder_finish_17/1 
* CE 11: eval_mad_decoder_finish_17(B) = 0
     [] 

### Cost equations --> "Loop" of eval_mad_decoder_finish_17/1 
* CEs [11] --> Loop 9 

#### Loops of eval_mad_decoder_finish_17/1 
* Loop 9: eval_mad_decoder_finish_17(B) [] 

### Ranking functions of CR eval_mad_decoder_finish_17(B) 

#### Partial ranking functions of CR eval_mad_decoder_finish_17(B) 


### Resulting Chains:eval_mad_decoder_finish_17(B) 
* [9]


### Merging Chains  eval_mad_decoder_finish_17/1 into  External patterns of execution 
* [[9]] --> 1 


### Specialization of cost equations eval_mad_decoder_finish_7/1 
* CE 5 is refined into CE [12,13] 


#### Refined cost equations eval_mad_decoder_finish_7/1 
* CE 12: eval_mad_decoder_finish_7(B) = 1+ eval_mad_decoder_finish_bb3_in(C):1+ eval_mad_decoder_finish_17(B):1
     [C=2] 
* CE 13: eval_mad_decoder_finish_7(B) = 1+ eval_mad_decoder_finish_bb3_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_mad_decoder_finish_7/1 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 

#### Loops of eval_mad_decoder_finish_7/1 
* Loop 10: eval_mad_decoder_finish_7(B) [] 
* Loop 11: eval_mad_decoder_finish_7(B) [] 

### Ranking functions of CR eval_mad_decoder_finish_7(B) 

#### Partial ranking functions of CR eval_mad_decoder_finish_7(B) 


### Resulting Chains:eval_mad_decoder_finish_7(B) 
* [11]
* [10]...


### Merging Chains  eval_mad_decoder_finish_7/1 into  External patterns of execution 
* [[11]] --> 1 
* [[10]] --> 2 


### Specialization of cost equations eval_mad_decoder_finish_bb0_in/1 
* CE 3 is refined into CE [14,15] 
* CE 4 is refined into CE [16] 


#### Refined cost equations eval_mad_decoder_finish_bb0_in/1 
* CE 14: eval_mad_decoder_finish_bb0_in(B) = 0+ eval_mad_decoder_finish_7(B):1
     [] 
* CE 15: eval_mad_decoder_finish_bb0_in(B) = 0+ eval_mad_decoder_finish_7(B):2
     [] 
* CE 16: eval_mad_decoder_finish_bb0_in(B) = 0
     [] 

### Cost equations --> "Loop" of eval_mad_decoder_finish_bb0_in/1 
* CEs [14,16] --> Loop 12 
* CEs [15] --> Loop 13 

#### Loops of eval_mad_decoder_finish_bb0_in/1 
* Loop 12: eval_mad_decoder_finish_bb0_in(B) [] 
* Loop 13: eval_mad_decoder_finish_bb0_in(B) [] 

### Ranking functions of CR eval_mad_decoder_finish_bb0_in(B) 

#### Partial ranking functions of CR eval_mad_decoder_finish_bb0_in(B) 


### Resulting Chains:eval_mad_decoder_finish_bb0_in(B) 
* [13]...
* [12]


### Merging Chains  eval_mad_decoder_finish_bb0_in/1 into  External patterns of execution 
* [[12]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_mad_decoder_finish_start/1 
* CE 2 is refined into CE [17,18] 


#### Refined cost equations eval_mad_decoder_finish_start/1 
* CE 17: eval_mad_decoder_finish_start(B) = 0+ eval_mad_decoder_finish_bb0_in(B):1
     [] 
* CE 18: eval_mad_decoder_finish_start(B) = 0+ eval_mad_decoder_finish_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_mad_decoder_finish_start/1 
* CEs [18] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of eval_mad_decoder_finish_start/1 
* Loop 14: eval_mad_decoder_finish_start(B) [] 
* Loop 15: eval_mad_decoder_finish_start(B) [] 

### Ranking functions of CR eval_mad_decoder_finish_start(B) 

#### Partial ranking functions of CR eval_mad_decoder_finish_start(B) 


### Resulting Chains:eval_mad_decoder_finish_start(B) 
* [15]
* [14]...


### Merging Chains  eval_mad_decoder_finish_start/1 into  External patterns of execution 
* [[15]] --> 1 
* [[14]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_mad_decoder_finish_bb3_in(B) -> [eval_mad_decoder_finish_bb3_in(B')] 
1
#### Cost of phase [8]:eval_mad_decoder_finish_bb3_in(B) -> [eval_mad_decoder_finish_bb3_in(B')] 
1*it(8)+0
#### Cost of phase [8]:eval_mad_decoder_finish_bb3_in(B) -> [eval_mad_decoder_finish_bb3_in(B')] 
1*it(8)+0
#### Cost of chains of eval_mad_decoder_finish_bb3_in(B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],7]: 1*it(8)+0
  with precondition: [B=2] 

* Chain [7]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_mad_decoder_finish_17(B):
* Chain [9]: 0
  with precondition: [] 


#### Cost of chains of eval_mad_decoder_finish_7(B):
* Chain [11]: 1*s(2)+1
  with precondition: [] 

* Chain [10]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_mad_decoder_finish_bb0_in(B):
* Chain [13]...: 1*s(4)+1
  with precondition: [] 

* Chain [12]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_mad_decoder_finish_start(B):
* Chain [15]: 1*s(6)+0
  with precondition: [] 

* Chain [14]...: 1*s(7)+1
  with precondition: [] 


Closed-form bounds of eval_mad_decoder_finish_start(B): 
-------------------------------------
* Chain [15] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [14]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_mad_decoder_finish_start(B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 13 ms.
* Invariants computed in 8 ms.
   - Backward Invariants 4 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 16 ms.
* Termination proved in 4 ms.
* Upper bounds computed in 15 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 3 ms.
   - Chain cost structures 3 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 85 ms.

