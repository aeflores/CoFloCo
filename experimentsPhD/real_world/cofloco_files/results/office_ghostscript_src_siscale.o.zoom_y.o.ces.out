WARNING: Excluded non-linear constraints:[F=A*B]
WARNING: Excluded non-linear constraints:[F=A*B]
Warning: Ignored call to eval_zoom_y_stop/1 in equation eval_zoom_y_bb15_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_zoom_y_bb3_in/9]
1. recursive  : [eval_zoom_y_bb1_in/4,eval_zoom_y_bb7_in/5,loop_cont_eval_zoom_y_bb3_in/6]
2. recursive  : [eval_zoom_y_bb10_in/9]
3. recursive  : [eval_zoom_y_bb14_in/5,eval_zoom_y_bb8_in/4,loop_cont_eval_zoom_y_bb10_in/6]
4. non_recursive  : [eval_zoom_y_bb15_in/1]
5. non_recursive  : [loop_cont_eval_zoom_y_bb1_in/2]
6. non_recursive  : [loop_cont_eval_zoom_y_bb8_in/2]
7. non_recursive  : [eval_zoom_y_bb0_in/3]
8. non_recursive  : [eval_zoom_y_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_zoom_y_bb3_in/9
1. SCC is partially evaluated into eval_zoom_y_bb1_in/4
2. SCC is partially evaluated into eval_zoom_y_bb10_in/9
3. SCC is partially evaluated into eval_zoom_y_bb8_in/4
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_zoom_y_bb0_in/3
8. SCC is partially evaluated into eval_zoom_y_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_zoom_y_bb3_in/9 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


#### Refined cost equations eval_zoom_y_bb3_in/9 
* CE 13: eval_zoom_y_bb3_in(A,B,C,D,E,A,B,C,D) = 0
     [B>=D,A>=C+1,0>=D,E=3] 
* CE 14: eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_j_0,B,C,D,E,F) = 1+ eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,G,H,C,D,E,F)
     [V_2>=V_j_0,V_0>=V_kc_0+1,V_j_0>=1,V_j_0=G+1,H=3,B=3] 

### Cost equations --> "Loop" of eval_zoom_y_bb3_in/9 
* CEs [14] --> Loop 11 
* CEs [13] --> Loop 12 

#### Loops of eval_zoom_y_bb3_in/9 
* Loop 11: eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_j_0,B,C,D,E,F)->  eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_j_0',B',C,D,E,F)
                  [V_2>=V_j_0,V_0>=V_kc_0+1,V_j_0>=1,V_j_0=V_j_0'+1,B'=3,B=3] 
* Loop 12: eval_zoom_y_bb3_in(A,B,C,D,E,A,B,C,D) [B>=D,A>=C+1,0>=D,E=3] 

### Ranking functions of CR eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_j_0,B,C,D,E,F) 
* RF of phase [11]: [V_j_0]

#### Partial ranking functions of CR eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_j_0,B,C,D,E,F) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    V_j_0


### Resulting Chains:eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_j_0,B,C,D,E,F) 
* [[11],12]
* [12]


### Merging Chains  eval_zoom_y_bb3_in/9 into  External patterns of execution 
* [[12,[11]]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_zoom_y_bb1_in/4 
* CE 6 is refined into CE [15] 
* CE 5 is refined into CE [16,17] 


#### Refined cost equations eval_zoom_y_bb1_in/4 
* CE 15: eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) = 0
     [V_kc_0>=V_0,B=4] 
* CE 16: eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) = 2+ eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_2,C,V_0,V_2,V_kc_0,D):1+ eval_zoom_y_bb1_in(V_0,V_2,E,F)
     [V_0>=V_kc_0+1,V_2>=1,V_kc_0+1=E,F=4,D=0,C=3,B=4] 
* CE 17: eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) = 2+ eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_2,C,V_0,V_2,V_kc_0,V_2):2+ eval_zoom_y_bb1_in(V_0,V_2,D,E)
     [V_0>=V_kc_0+1,0>=V_2,V_kc_0+1=D,E=4,C=3,B=4] 

### Cost equations --> "Loop" of eval_zoom_y_bb1_in/4 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [15] --> Loop 15 

#### Loops of eval_zoom_y_bb1_in/4 
* Loop 13: eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B)->  eval_zoom_y_bb1_in(V_0,V_2,V_kc_0',B')
                  [V_0>=V_kc_0+1,V_2>=1,V_kc_0+1=V_kc_0',B'=4,B=4] 
* Loop 14: eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B)->  eval_zoom_y_bb1_in(V_0,V_2,V_kc_0',B')
                  [V_0>=V_kc_0+1,0>=V_2,V_kc_0+1=V_kc_0',B'=4,B=4] 
* Loop 15: eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) [V_kc_0>=V_0,B=4] 

### Ranking functions of CR eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) 
* RF of phase [13]: [V_0-V_kc_0]
* RF of phase [14]: [V_0-V_kc_0]

#### Partial ranking functions of CR eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_0-V_kc_0
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_0-V_kc_0


### Resulting Chains:eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) 
* [[14],15]
* [[13],15]
* [15]


### Merging Chains  eval_zoom_y_bb1_in/4 into  External patterns of execution 
* [[15,[14]]] --> 1 
* [[15,[13]]] --> 2 
* [[15]] --> 3 


### Specialization of cost equations eval_zoom_y_bb10_in/9 
* CE 12 is refined into CE [18] 
* CE 11 is refined into CE [19] 


#### Refined cost equations eval_zoom_y_bb10_in/9 
* CE 18: eval_zoom_y_bb10_in(A,B,C,D,E,A,B,C,D) = 0
     [B>=D,A>=C+1,0>=D,E=2] 
* CE 19: eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_j3_0,B,C,D,E,F) = 1+ eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,G,H,C,D,E,F)
     [V_2>=V_j3_0,V_0>=V_kc_1+1,V_j3_0>=1,V_j3_0=G+1,H=2,B=2] 

### Cost equations --> "Loop" of eval_zoom_y_bb10_in/9 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 

#### Loops of eval_zoom_y_bb10_in/9 
* Loop 16: eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_j3_0,B,C,D,E,F)->  eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_j3_0',B',C,D,E,F)
                  [V_2>=V_j3_0,V_0>=V_kc_1+1,V_j3_0>=1,V_j3_0=V_j3_0'+1,B'=2,B=2] 
* Loop 17: eval_zoom_y_bb10_in(A,B,C,D,E,A,B,C,D) [B>=D,A>=C+1,0>=D,E=2] 

### Ranking functions of CR eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_j3_0,B,C,D,E,F) 
* RF of phase [16]: [V_j3_0]

#### Partial ranking functions of CR eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_j3_0,B,C,D,E,F) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_j3_0


### Resulting Chains:eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_j3_0,B,C,D,E,F) 
* [[16],17]
* [17]


### Merging Chains  eval_zoom_y_bb10_in/9 into  External patterns of execution 
* [[17,[16]]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_zoom_y_bb8_in/4 
* CE 8 is refined into CE [20] 
* CE 7 is refined into CE [21,22] 


#### Refined cost equations eval_zoom_y_bb8_in/4 
* CE 20: eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) = 0
     [V_kc_1>=V_0,B=4] 
* CE 21: eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) = 2+ eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_2,C,V_0,V_2,V_kc_1,D):1+ eval_zoom_y_bb8_in(V_0,V_2,E,F)
     [V_0>=V_kc_1+1,V_2>=1,V_kc_1+1=E,F=4,D=0,C=2,B=4] 
* CE 22: eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) = 2+ eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_2,C,V_0,V_2,V_kc_1,V_2):2+ eval_zoom_y_bb8_in(V_0,V_2,D,E)
     [V_0>=V_kc_1+1,0>=V_2,V_kc_1+1=D,E=4,C=2,B=4] 

### Cost equations --> "Loop" of eval_zoom_y_bb8_in/4 
* CEs [21] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [20] --> Loop 20 

#### Loops of eval_zoom_y_bb8_in/4 
* Loop 18: eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B)->  eval_zoom_y_bb8_in(V_0,V_2,V_kc_1',B')
                  [V_0>=V_kc_1+1,V_2>=1,V_kc_1+1=V_kc_1',B'=4,B=4] 
* Loop 19: eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B)->  eval_zoom_y_bb8_in(V_0,V_2,V_kc_1',B')
                  [V_0>=V_kc_1+1,0>=V_2,V_kc_1+1=V_kc_1',B'=4,B=4] 
* Loop 20: eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) [V_kc_1>=V_0,B=4] 

### Ranking functions of CR eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) 
* RF of phase [18]: [V_0-V_kc_1]
* RF of phase [19]: [V_0-V_kc_1]

#### Partial ranking functions of CR eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    V_0-V_kc_1
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    V_0-V_kc_1


### Resulting Chains:eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) 
* [[19],20]
* [[18],20]
* [20]


### Merging Chains  eval_zoom_y_bb8_in/4 into  External patterns of execution 
* [[20,[19]]] --> 1 
* [[20,[18]]] --> 2 
* [[20]] --> 3 


### Specialization of cost equations eval_zoom_y_bb0_in/3 
* CE 3 is refined into CE [23,24,25] 
* CE 4 is refined into CE [26,27,28] 


#### Refined cost equations eval_zoom_y_bb0_in/3 
* CE 23: eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) = 1+ eval_zoom_y_bb1_in(C,D,E,F):1
     [C>=1,0>=D,F=4,E=0] 
* CE 24: eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) = 1+ eval_zoom_y_bb1_in(C,D,E,F):2
     [D>=1,C>=1,F=4,E=0] 
* CE 25: eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) = 1+ eval_zoom_y_bb1_in(C,D,E,F):3
     [0>=C,F=4,E=0] 
* CE 26: eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) = 1+ eval_zoom_y_bb8_in(C,D,E,F):1
     [C>=1,0>=D,F=4,E=0] 
* CE 27: eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) = 1+ eval_zoom_y_bb8_in(C,D,E,F):2
     [D>=1,C>=1,F=4,E=0] 
* CE 28: eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) = 1+ eval_zoom_y_bb8_in(C,D,E,F):3
     [0>=C,F=4,E=0] 

### Cost equations --> "Loop" of eval_zoom_y_bb0_in/3 
* CEs [23,24,25,26,27,28] --> Loop 21 

#### Loops of eval_zoom_y_bb0_in/3 
* Loop 21: eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) [] 

### Ranking functions of CR eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) 

#### Partial ranking functions of CR eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) 


### Resulting Chains:eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B) 
* [21]


### Merging Chains  eval_zoom_y_bb0_in/3 into  External patterns of execution 
* [[21]] --> 1 


### Specialization of cost equations eval_zoom_y_start/6 
* CE 2 is refined into CE [29] 


#### Refined cost equations eval_zoom_y_start/6 
* CE 29: eval_zoom_y_start(V_sizeofPixelOut,V_MaxValueOut,V_WidthOut,V_tmp_width,V_Colors,B) = 0+ eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B):1
     [] 

### Cost equations --> "Loop" of eval_zoom_y_start/6 
* CEs [29] --> Loop 22 

#### Loops of eval_zoom_y_start/6 
* Loop 22: eval_zoom_y_start(V_sizeofPixelOut,V_MaxValueOut,V_WidthOut,V_tmp_width,V_Colors,B) [] 

### Ranking functions of CR eval_zoom_y_start(V_sizeofPixelOut,V_MaxValueOut,V_WidthOut,V_tmp_width,V_Colors,B) 

#### Partial ranking functions of CR eval_zoom_y_start(V_sizeofPixelOut,V_MaxValueOut,V_WidthOut,V_tmp_width,V_Colors,B) 


### Resulting Chains:eval_zoom_y_start(V_sizeofPixelOut,V_MaxValueOut,V_WidthOut,V_tmp_width,V_Colors,B) 
* [22]


### Merging Chains  eval_zoom_y_start/6 into  External patterns of execution 
* [[22]] --> 1 


Computing Bounds
=====================================

#### Cost of loops [11] 

 * loop 11:eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_j_0,B,C,D,E,F) -> [eval_zoom_y_bb3_in(V_0',V_2',V_kc_0',V_j_0',B',C',D',E',F')] 
1
#### Cost of phase [11]:eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_j_0,B,C,D,E,F) -> [eval_zoom_y_bb3_in(V_0',V_2',V_kc_0',V_j_0',B',C',D',E',F')] 
1*it(11)+0
  Such that:it(11) =< V_j_0
it(11) =< V_j_0-V_j_0'

#### Cost of chains of eval_zoom_y_bb3_in(V_0,V_2,V_kc_0,V_j_0,B,C,D,E,F):
* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< V_j_0

  with precondition: [B=3,F=0,V_0=C,V_2=D,V_kc_0=E,V_j_0>=1,V_0>=V_kc_0+1,V_2>=V_j_0] 

* Chain [12]: 0
  with precondition: [B=3,V_0=C,V_2=D,V_kc_0=E,V_j_0=F,0>=V_j_0,V_0>=V_kc_0+1,V_2>=V_j_0] 


#### Cost of loops [14] 

 * loop 14:eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) -> [eval_zoom_y_bb1_in(V_0',V_2',V_kc_0',B')] 
2
#### Cost of phase [14]:eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) -> [eval_zoom_y_bb1_in(V_0',V_2',V_kc_0',B')] 
2*it(14)+0
  Such that:it(14) =< V_0-V_kc_0
it(14) =< V_0-V_kc_0-V_0'+V_kc_0'

#### Cost of loops [13] 

 * loop 13:eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) -> [eval_zoom_y_bb1_in(V_0',V_2',V_kc_0',B')] 
1*s(2)+2
  Such that:s(2) =< V_2'

#### Cost of phase [13]:eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B) -> [eval_zoom_y_bb1_in(V_0',V_2',V_kc_0',B')] 
2*it(13)+1*s(3)+0
  Such that:it(13) =< V_0-V_kc_0
it(13) =< V_0-V_kc_0-V_0'+V_kc_0'
aux(1) =< V_2
s(3) =< it(13)*aux(1)

#### Cost of chains of eval_zoom_y_bb1_in(V_0,V_2,V_kc_0,B):
* Chain [[14],15]: 2*it(14)+0
  Such that:it(14) =< V_0-V_kc_0

  with precondition: [B=4,0>=V_2,V_kc_0>=0,V_0>=V_kc_0+1] 

* Chain [[13],15]: 2*it(13)+1*s(3)+0
  Such that:it(13) =< V_0-V_kc_0
aux(1) =< V_2
s(3) =< it(13)*aux(1)

  with precondition: [B=4,V_2>=1,V_kc_0>=0,V_0>=V_kc_0+1] 

* Chain [15]: 0
  with precondition: [B=4,V_kc_0>=0,V_kc_0>=V_0] 


#### Cost of loops [16] 

 * loop 16:eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_j3_0,B,C,D,E,F) -> [eval_zoom_y_bb10_in(V_0',V_2',V_kc_1',V_j3_0',B',C',D',E',F')] 
1
#### Cost of phase [16]:eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_j3_0,B,C,D,E,F) -> [eval_zoom_y_bb10_in(V_0',V_2',V_kc_1',V_j3_0',B',C',D',E',F')] 
1*it(16)+0
  Such that:it(16) =< V_j3_0
it(16) =< V_j3_0-V_j3_0'

#### Cost of chains of eval_zoom_y_bb10_in(V_0,V_2,V_kc_1,V_j3_0,B,C,D,E,F):
* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V_j3_0

  with precondition: [B=2,F=0,V_0=C,V_2=D,V_kc_1=E,V_j3_0>=1,V_0>=V_kc_1+1,V_2>=V_j3_0] 

* Chain [17]: 0
  with precondition: [B=2,V_0=C,V_2=D,V_kc_1=E,V_j3_0=F,0>=V_j3_0,V_0>=V_kc_1+1,V_2>=V_j3_0] 


#### Cost of loops [19] 

 * loop 19:eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) -> [eval_zoom_y_bb8_in(V_0',V_2',V_kc_1',B')] 
2
#### Cost of phase [19]:eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) -> [eval_zoom_y_bb8_in(V_0',V_2',V_kc_1',B')] 
2*it(19)+0
  Such that:it(19) =< V_0-V_kc_1
it(19) =< V_0-V_kc_1-V_0'+V_kc_1'

#### Cost of loops [18] 

 * loop 18:eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) -> [eval_zoom_y_bb8_in(V_0',V_2',V_kc_1',B')] 
1*s(5)+2
  Such that:s(5) =< V_2'

#### Cost of phase [18]:eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B) -> [eval_zoom_y_bb8_in(V_0',V_2',V_kc_1',B')] 
2*it(18)+1*s(6)+0
  Such that:it(18) =< V_0-V_kc_1
it(18) =< V_0-V_kc_1-V_0'+V_kc_1'
aux(2) =< V_2
s(6) =< it(18)*aux(2)

#### Cost of chains of eval_zoom_y_bb8_in(V_0,V_2,V_kc_1,B):
* Chain [[19],20]: 2*it(19)+0
  Such that:it(19) =< V_0-V_kc_1

  with precondition: [B=4,0>=V_2,V_kc_1>=0,V_0>=V_kc_1+1] 

* Chain [[18],20]: 2*it(18)+1*s(6)+0
  Such that:it(18) =< V_0-V_kc_1
aux(2) =< V_2
s(6) =< it(18)*aux(2)

  with precondition: [B=4,V_2>=1,V_kc_1>=0,V_0>=V_kc_1+1] 

* Chain [20]: 0
  with precondition: [B=4,V_kc_1>=0,V_kc_1>=V_0] 


#### Cost of chains of eval_zoom_y_bb0_in(V_WidthOut,V_Colors,B):
* Chain [21]: 1*aux(3)+0
  with precondition: [] 


#### Cost of chains of eval_zoom_y_start(V_sizeofPixelOut,V_MaxValueOut,V_WidthOut,V_tmp_width,V_Colors,B):
* Chain [22]: 1*s(15)+0
  with precondition: [] 


Closed-form bounds of eval_zoom_y_start(V_sizeofPixelOut,V_MaxValueOut,V_WidthOut,V_tmp_width,V_Colors,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_zoom_y_start(V_sizeofPixelOut,V_MaxValueOut,V_WidthOut,V_tmp_width,V_Colors,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 52 ms.
* Invariants computed in 155 ms.
   - Backward Invariants 65 ms.
   - Transitive Invariants 40 ms.
* Refinement performed in 189 ms.
* Termination proved in 42 ms.
* Upper bounds computed in 210 ms.
   - Equation cost structures 61 ms.
   - Phase cost structures 113 ms.
   - Chain cost structures 69 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 748 ms.

