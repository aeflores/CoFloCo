Warning: Ignored call to eval_ct_init_stop/1 in equation eval_ct_init_bb32_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ct_init_bb3_in/9]
1. recursive  : [eval_ct_init_bb1_in/7,loop_cont_eval_ct_init_bb3_in/8]
2. non_recursive  : [eval_ct_init_bb32_in/1]
3. recursive  : [eval_ct_init_bb9_in/9]
4. recursive  : [eval_ct_init_bb7_in/7,loop_cont_eval_ct_init_bb9_in/8]
5. recursive  : [eval_ct_init_bb15_in/8]
6. recursive  : [eval_ct_init_bb13_in/7,loop_cont_eval_ct_init_bb15_in/8]
7. recursive  : [eval_ct_init_bb18_in/7]
8. recursive  : [eval_ct_init_bb20_in/7]
9. recursive  : [eval_ct_init_bb22_in/7]
10. recursive  : [eval_ct_init_bb24_in/7]
11. recursive  : [eval_ct_init_bb26_in/6]
12. recursive  : [eval_ct_init_96/6,eval_ct_init_97/6,eval_ct_init_bb29_in/6]
13. non_recursive  : [eval_ct_init_103/1]
14. non_recursive  : [eval_ct_init_102/3]
15. non_recursive  : [loop_cont_eval_ct_init_bb29_in/4]
16. non_recursive  : [eval_ct_init_93/3]
17. non_recursive  : [eval_ct_init_92/3]
18. non_recursive  : [loop_cont_eval_ct_init_bb26_in/4]
19. non_recursive  : [loop_cont_eval_ct_init_bb24_in/5]
20. non_recursive  : [loop_cont_eval_ct_init_bb22_in/5]
21. non_recursive  : [loop_cont_eval_ct_init_bb20_in/5]
22. non_recursive  : [loop_cont_eval_ct_init_bb18_in/5]
23. non_recursive  : [loop_cont_eval_ct_init_bb13_in/5]
24. non_recursive  : [loop_cont_eval_ct_init_bb7_in/5]
25. non_recursive  : [loop_cont_eval_ct_init_bb1_in/5]
26. non_recursive  : [eval_ct_init_bb0_in/3]
27. non_recursive  : [eval_ct_init_start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ct_init_bb3_in/9
1. SCC is partially evaluated into eval_ct_init_bb1_in/7
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_ct_init_bb9_in/9
4. SCC is partially evaluated into eval_ct_init_bb7_in/7
5. SCC is partially evaluated into eval_ct_init_bb15_in/8
6. SCC is partially evaluated into eval_ct_init_bb13_in/7
7. SCC is partially evaluated into eval_ct_init_bb18_in/7
8. SCC is partially evaluated into eval_ct_init_bb20_in/7
9. SCC is partially evaluated into eval_ct_init_bb22_in/7
10. SCC is partially evaluated into eval_ct_init_bb24_in/7
11. SCC is partially evaluated into eval_ct_init_bb26_in/6
12. SCC is partially evaluated into eval_ct_init_bb29_in/6
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into eval_ct_init_93/3
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into loop_cont_eval_ct_init_bb24_in/5
20. SCC is partially evaluated into loop_cont_eval_ct_init_bb22_in/5
21. SCC is partially evaluated into loop_cont_eval_ct_init_bb20_in/5
22. SCC is partially evaluated into loop_cont_eval_ct_init_bb18_in/5
23. SCC is partially evaluated into loop_cont_eval_ct_init_bb13_in/5
24. SCC is partially evaluated into loop_cont_eval_ct_init_bb7_in/5
25. SCC is partially evaluated into loop_cont_eval_ct_init_bb1_in/5
26. SCC is partially evaluated into eval_ct_init_bb0_in/3
27. SCC is partially evaluated into eval_ct_init_start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ct_init_bb3_in/9 
* CE 9 is refined into CE [37] 
* CE 8 is refined into CE [38] 


#### Refined cost equations eval_ct_init_bb3_in/9 
* CE 37: eval_ct_init_bb3_in(A,B,C,D,E,F,A,B,G) = 0
     [E>=D,E>=0,27>=C,C+1=G,F=3] 
* CE 38: eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,V_n_0,B,C,D,E) = 1+ eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,F,G,C,D,E)
     [V_10>=V_n_0+1,V_n_0>=0,27>=V_code_0,V_n_0+1=F,G=3,B=3] 

### Cost equations --> "Loop" of eval_ct_init_bb3_in/9 
* CEs [38] --> Loop 35 
* CEs [37] --> Loop 36 

#### Loops of eval_ct_init_bb3_in/9 
* Loop 35: eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,V_n_0,B,C,D,E)->  eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,V_n_0',B',C,D,E)
                  [V_10>=V_n_0+1,V_n_0>=0,27>=V_code_0,V_n_0+1=V_n_0',B'=3,B=3] 
* Loop 36: eval_ct_init_bb3_in(A,B,C,D,E,F,A,B,G) [E>=D,E>=0,27>=C,C+1=G,F=3] 

### Ranking functions of CR eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,V_n_0,B,C,D,E) 
* RF of phase [35]: [V_10-V_n_0]

#### Partial ranking functions of CR eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,V_n_0,B,C,D,E) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    V_10-V_n_0


### Resulting Chains:eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,V_n_0,B,C,D,E) 
* [[35],36]
* [36]


### Merging Chains  eval_ct_init_bb3_in/9 into  External patterns of execution 
* [[36]] --> 1 
* [[36,[35]]] --> 2 


### Specialization of cost equations eval_ct_init_bb1_in/7 
* CE 6 is refined into CE [39] 
* CE 5 is refined into CE [40,41] 


#### Refined cost equations eval_ct_init_bb1_in/7 
* CE 39: eval_ct_init_bb1_in(A,B,C,D,A,B,E) = 0
     [C>=28,E=0,D=2] 
* CE 40: eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0,B,C,D,E) = 2+ eval_ct_init_bb3_in(V__input_len,V__compressed_len,F,G,H,I,V__input_len,V__compressed_len,J):1+ eval_ct_init_bb1_in(V__input_len,V__compressed_len,J,B,C,D,E)
     [28>=J,0>=G,J=F+1,J=V_code_0+1,I=3,H=0] 
* CE 41: eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0,B,C,D,E) = 2+ eval_ct_init_bb3_in(V__input_len,V__compressed_len,F,G,H,I,V__input_len,V__compressed_len,J):2+ eval_ct_init_bb1_in(V__input_len,V__compressed_len,J,B,C,D,E)
     [G>=1,28>=J,J=F+1,J=V_code_0+1,I=3,H=0] 

### Cost equations --> "Loop" of eval_ct_init_bb1_in/7 
* CEs [40,41] --> Loop 37 
* CEs [39] --> Loop 38 

#### Loops of eval_ct_init_bb1_in/7 
* Loop 37: eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0,B,C,D,E)->  eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0',B,C,D,E)
                  [27>=V_code_0,V_code_0+1=V_code_0'] 
* Loop 38: eval_ct_init_bb1_in(A,B,C,D,A,B,E) [C>=28,E=0,D=2] 

### Ranking functions of CR eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0,B,C,D,E) 
* RF of phase [37]: [-V_code_0+28]

#### Partial ranking functions of CR eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0,B,C,D,E) 
* Partial RF of phase [37]:
  - RF of loop [37:1]:
    -V_code_0+28


### Resulting Chains:eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0,B,C,D,E) 
* [[37],38]


### Merging Chains  eval_ct_init_bb1_in/7 into  External patterns of execution 
* [[38,[37]]] --> 1 


### Specialization of cost equations eval_ct_init_bb9_in/9 
* CE 14 is refined into CE [42] 
* CE 13 is refined into CE [43] 


#### Refined cost equations eval_ct_init_bb9_in/9 
* CE 42: eval_ct_init_bb9_in(A,B,C,D,E,F,A,B,G) = 0
     [E>=D,E>=0,15>=C,C+1=G,F=2] 
* CE 43: eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,V_n_1,B,C,D,E) = 1+ eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,F,G,C,D,E)
     [V_28>=V_n_1+1,V_n_1>=0,15>=V_code_1,V_n_1+1=F,G=2,B=2] 

### Cost equations --> "Loop" of eval_ct_init_bb9_in/9 
* CEs [43] --> Loop 39 
* CEs [42] --> Loop 40 

#### Loops of eval_ct_init_bb9_in/9 
* Loop 39: eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,V_n_1,B,C,D,E)->  eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,V_n_1',B',C,D,E)
                  [V_28>=V_n_1+1,V_n_1>=0,15>=V_code_1,V_n_1+1=V_n_1',B'=2,B=2] 
* Loop 40: eval_ct_init_bb9_in(A,B,C,D,E,F,A,B,G) [E>=D,E>=0,15>=C,C+1=G,F=2] 

### Ranking functions of CR eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,V_n_1,B,C,D,E) 
* RF of phase [39]: [V_28-V_n_1]

#### Partial ranking functions of CR eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,V_n_1,B,C,D,E) 
* Partial RF of phase [39]:
  - RF of loop [39:1]:
    V_28-V_n_1


### Resulting Chains:eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,V_n_1,B,C,D,E) 
* [[39],40]
* [40]


### Merging Chains  eval_ct_init_bb9_in/9 into  External patterns of execution 
* [[40]] --> 1 
* [[40,[39]]] --> 2 


### Specialization of cost equations eval_ct_init_bb7_in/7 
* CE 11 is refined into CE [44] 
* CE 10 is refined into CE [45,46] 


#### Refined cost equations eval_ct_init_bb7_in/7 
* CE 44: eval_ct_init_bb7_in(A,B,C,D,A,B,C) = 0
     [C>=16,D=4] 
* CE 45: eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1,B,C,D,E) = 2+ eval_ct_init_bb9_in(V__input_len,V__compressed_len,F,G,H,I,V__input_len,V__compressed_len,J):1+ eval_ct_init_bb7_in(V__input_len,V__compressed_len,J,B,C,D,E)
     [16>=J,0>=G,J=F+1,J=V_code_1+1,I=2,H=0] 
* CE 46: eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1,B,C,D,E) = 2+ eval_ct_init_bb9_in(V__input_len,V__compressed_len,F,G,H,I,V__input_len,V__compressed_len,J):2+ eval_ct_init_bb7_in(V__input_len,V__compressed_len,J,B,C,D,E)
     [G>=1,16>=J,J=F+1,J=V_code_1+1,I=2,H=0] 

### Cost equations --> "Loop" of eval_ct_init_bb7_in/7 
* CEs [45,46] --> Loop 41 
* CEs [44] --> Loop 42 

#### Loops of eval_ct_init_bb7_in/7 
* Loop 41: eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1,B,C,D,E)->  eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1',B,C,D,E)
                  [15>=V_code_1,V_code_1+1=V_code_1'] 
* Loop 42: eval_ct_init_bb7_in(A,B,C,D,A,B,C) [C>=16,D=4] 

### Ranking functions of CR eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1,B,C,D,E) 
* RF of phase [41]: [-V_code_1+16]

#### Partial ranking functions of CR eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1,B,C,D,E) 
* Partial RF of phase [41]:
  - RF of loop [41:1]:
    -V_code_1+16


### Resulting Chains:eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1,B,C,D,E) 
* [[41],42]
* [42]


### Merging Chains  eval_ct_init_bb7_in/7 into  External patterns of execution 
* [[42,[41]]] --> 1 
* [[42]] --> 2 


### Specialization of cost equations eval_ct_init_bb15_in/8 
* CE 19 is refined into CE [47] 
* CE 18 is refined into CE [48] 


#### Refined cost equations eval_ct_init_bb15_in/8 
* CE 47: eval_ct_init_bb15_in(A,B,C,D,E,A,B,F) = 0
     [D>=0,29>=C,C+1=F,E=4] 
* CE 48: eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2,B,C,D,E) = 1+ eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,F,G,C,D,E)
     [V_n_2>=0,29>=V_code_2,V_n_2+1=F,G=4,B=4] 

### Cost equations --> "Loop" of eval_ct_init_bb15_in/8 
* CEs [48] --> Loop 43 
* CEs [47] --> Loop 44 

#### Loops of eval_ct_init_bb15_in/8 
* Loop 43: eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2,B,C,D,E)->  eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2',B',C,D,E)
                  [V_n_2>=0,29>=V_code_2,V_n_2+1=V_n_2',B'=4,B=4] 
* Loop 44: eval_ct_init_bb15_in(A,B,C,D,E,A,B,F) [D>=0,29>=C,C+1=F,E=4] 

### Ranking functions of CR eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2,B,C,D,E) 

#### Partial ranking functions of CR eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2,B,C,D,E) 


### Resulting Chains:eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2,B,C,D,E) 
* [[43]]...
* [[43],44]
* [44]


### Merging Chains  eval_ct_init_bb15_in/8 into  External patterns of execution 
* [[44],[44,[43]]] --> 1 
* [[[43]]] --> 2 


### Specialization of cost equations eval_ct_init_bb13_in/7 
* CE 16 is refined into CE [49] 
* CE 15 is refined into CE [50,51] 


#### Refined cost equations eval_ct_init_bb13_in/7 
* CE 49: eval_ct_init_bb13_in(A,B,C,D,A,B,E) = 0
     [C>=30,E=0,D=11] 
* CE 50: eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E) = 2+ eval_ct_init_bb15_in(V__input_len,V__compressed_len,F,G,H,V__input_len,V__compressed_len,I):1+ eval_ct_init_bb13_in(V__input_len,V__compressed_len,I,B,C,D,E)
     [30>=I,I=F+1,I=V_code_2+1,H=4,G=0] 
* CE 51: eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E) = 2+ eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,F,G,H,I,J):2
     [29>=V_code_2,G=4,F=0] 

### Cost equations --> "Loop" of eval_ct_init_bb13_in/7 
* CEs [51] --> Loop 45 
* CEs [50] --> Loop 46 
* CEs [49] --> Loop 47 

#### Loops of eval_ct_init_bb13_in/7 
* Loop 45: eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E) [29>=V_code_2] 
* Loop 46: eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E)->  eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2',B,C,D,E)
                  [29>=V_code_2,V_code_2+1=V_code_2'] 
* Loop 47: eval_ct_init_bb13_in(A,B,C,D,A,B,E) [C>=30,E=0,D=11] 

### Ranking functions of CR eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E) 
* RF of phase [46]: [-V_code_2+30]

#### Partial ranking functions of CR eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E) 
* Partial RF of phase [46]:
  - RF of loop [46:1]:
    -V_code_2+30


### Resulting Chains:eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E) 
* [[46],47]
* [[46],45]...
* [47]
* [45]...


### Merging Chains  eval_ct_init_bb13_in/7 into  External patterns of execution 
* [[47]] --> 1 
* [[47,[46]]] --> 2 
* [[45]] --> 3 
* [[45,[46]]] --> 4 


### Specialization of cost equations eval_ct_init_bb18_in/7 
* CE 21 is refined into CE [52] 
* CE 20 is refined into CE [53] 


#### Refined cost equations eval_ct_init_bb18_in/7 
* CE 52: eval_ct_init_bb18_in(A,B,C,D,A,B,E) = 0
     [C>=16,E=0,D=10] 
* CE 53: eval_ct_init_bb18_in(V__input_len,V__compressed_len,V_bits_0,B,C,D,E) = 1+ eval_ct_init_bb18_in(V__input_len,V__compressed_len,F,B,C,D,E)
     [15>=V_bits_0,V_bits_0+1=F] 

### Cost equations --> "Loop" of eval_ct_init_bb18_in/7 
* CEs [53] --> Loop 48 
* CEs [52] --> Loop 49 

#### Loops of eval_ct_init_bb18_in/7 
* Loop 48: eval_ct_init_bb18_in(V__input_len,V__compressed_len,V_bits_0,B,C,D,E)->  eval_ct_init_bb18_in(V__input_len,V__compressed_len,V_bits_0',B,C,D,E)
                  [15>=V_bits_0,V_bits_0+1=V_bits_0'] 
* Loop 49: eval_ct_init_bb18_in(A,B,C,D,A,B,E) [C>=16,E=0,D=10] 

### Ranking functions of CR eval_ct_init_bb18_in(V__input_len,V__compressed_len,V_bits_0,B,C,D,E) 
* RF of phase [48]: [-V_bits_0+16]

#### Partial ranking functions of CR eval_ct_init_bb18_in(V__input_len,V__compressed_len,V_bits_0,B,C,D,E) 
* Partial RF of phase [48]:
  - RF of loop [48:1]:
    -V_bits_0+16


### Resulting Chains:eval_ct_init_bb18_in(V__input_len,V__compressed_len,V_bits_0,B,C,D,E) 
* [[48],49]
* [49]


### Merging Chains  eval_ct_init_bb18_in/7 into  External patterns of execution 
* [[49]] --> 1 
* [[49,[48]]] --> 2 


### Specialization of cost equations eval_ct_init_bb20_in/7 
* CE 24 is refined into CE [54] 
* CE 23 is refined into CE [55] 


#### Refined cost equations eval_ct_init_bb20_in/7 
* CE 54: eval_ct_init_bb20_in(A,B,C,D,A,B,C) = 0
     [C>=144,D=9] 
* CE 55: eval_ct_init_bb20_in(V__input_len,V__compressed_len,V_n_3,B,C,D,E) = 1+ eval_ct_init_bb20_in(V__input_len,V__compressed_len,F,B,C,D,E)
     [143>=V_n_3,V_n_3+1=F] 

### Cost equations --> "Loop" of eval_ct_init_bb20_in/7 
* CEs [55] --> Loop 50 
* CEs [54] --> Loop 51 

#### Loops of eval_ct_init_bb20_in/7 
* Loop 50: eval_ct_init_bb20_in(V__input_len,V__compressed_len,V_n_3,B,C,D,E)->  eval_ct_init_bb20_in(V__input_len,V__compressed_len,V_n_3',B,C,D,E)
                  [143>=V_n_3,V_n_3+1=V_n_3'] 
* Loop 51: eval_ct_init_bb20_in(A,B,C,D,A,B,C) [C>=144,D=9] 

### Ranking functions of CR eval_ct_init_bb20_in(V__input_len,V__compressed_len,V_n_3,B,C,D,E) 
* RF of phase [50]: [-V_n_3+144]

#### Partial ranking functions of CR eval_ct_init_bb20_in(V__input_len,V__compressed_len,V_n_3,B,C,D,E) 
* Partial RF of phase [50]:
  - RF of loop [50:1]:
    -V_n_3+144


### Resulting Chains:eval_ct_init_bb20_in(V__input_len,V__compressed_len,V_n_3,B,C,D,E) 
* [[50],51]
* [51]


### Merging Chains  eval_ct_init_bb20_in/7 into  External patterns of execution 
* [[51,[50]]] --> 1 
* [[51]] --> 2 


### Specialization of cost equations eval_ct_init_bb22_in/7 
* CE 27 is refined into CE [56] 
* CE 26 is refined into CE [57] 


#### Refined cost equations eval_ct_init_bb22_in/7 
* CE 56: eval_ct_init_bb22_in(A,B,C,D,A,B,C) = 0
     [C>=256,D=8] 
* CE 57: eval_ct_init_bb22_in(V__input_len,V__compressed_len,V_n_4,B,C,D,E) = 1+ eval_ct_init_bb22_in(V__input_len,V__compressed_len,F,B,C,D,E)
     [255>=V_n_4,V_n_4+1=F] 

### Cost equations --> "Loop" of eval_ct_init_bb22_in/7 
* CEs [57] --> Loop 52 
* CEs [56] --> Loop 53 

#### Loops of eval_ct_init_bb22_in/7 
* Loop 52: eval_ct_init_bb22_in(V__input_len,V__compressed_len,V_n_4,B,C,D,E)->  eval_ct_init_bb22_in(V__input_len,V__compressed_len,V_n_4',B,C,D,E)
                  [255>=V_n_4,V_n_4+1=V_n_4'] 
* Loop 53: eval_ct_init_bb22_in(A,B,C,D,A,B,C) [C>=256,D=8] 

### Ranking functions of CR eval_ct_init_bb22_in(V__input_len,V__compressed_len,V_n_4,B,C,D,E) 
* RF of phase [52]: [-V_n_4+256]

#### Partial ranking functions of CR eval_ct_init_bb22_in(V__input_len,V__compressed_len,V_n_4,B,C,D,E) 
* Partial RF of phase [52]:
  - RF of loop [52:1]:
    -V_n_4+256


### Resulting Chains:eval_ct_init_bb22_in(V__input_len,V__compressed_len,V_n_4,B,C,D,E) 
* [[52],53]
* [53]


### Merging Chains  eval_ct_init_bb22_in/7 into  External patterns of execution 
* [[53,[52]]] --> 1 
* [[53]] --> 2 


### Specialization of cost equations eval_ct_init_bb24_in/7 
* CE 30 is refined into CE [58] 
* CE 29 is refined into CE [59] 


#### Refined cost equations eval_ct_init_bb24_in/7 
* CE 58: eval_ct_init_bb24_in(A,B,C,D,A,B,C) = 0
     [C>=280,D=7] 
* CE 59: eval_ct_init_bb24_in(V__input_len,V__compressed_len,V_n_5,B,C,D,E) = 1+ eval_ct_init_bb24_in(V__input_len,V__compressed_len,F,B,C,D,E)
     [279>=V_n_5,V_n_5+1=F] 

### Cost equations --> "Loop" of eval_ct_init_bb24_in/7 
* CEs [59] --> Loop 54 
* CEs [58] --> Loop 55 

#### Loops of eval_ct_init_bb24_in/7 
* Loop 54: eval_ct_init_bb24_in(V__input_len,V__compressed_len,V_n_5,B,C,D,E)->  eval_ct_init_bb24_in(V__input_len,V__compressed_len,V_n_5',B,C,D,E)
                  [279>=V_n_5,V_n_5+1=V_n_5'] 
* Loop 55: eval_ct_init_bb24_in(A,B,C,D,A,B,C) [C>=280,D=7] 

### Ranking functions of CR eval_ct_init_bb24_in(V__input_len,V__compressed_len,V_n_5,B,C,D,E) 
* RF of phase [54]: [-V_n_5+280]

#### Partial ranking functions of CR eval_ct_init_bb24_in(V__input_len,V__compressed_len,V_n_5,B,C,D,E) 
* Partial RF of phase [54]:
  - RF of loop [54:1]:
    -V_n_5+280


### Resulting Chains:eval_ct_init_bb24_in(V__input_len,V__compressed_len,V_n_5,B,C,D,E) 
* [[54],55]
* [55]


### Merging Chains  eval_ct_init_bb24_in/7 into  External patterns of execution 
* [[55,[54]]] --> 1 
* [[55]] --> 2 


### Specialization of cost equations eval_ct_init_bb26_in/6 
* CE 33 is refined into CE [60] 
* CE 32 is refined into CE [61] 


#### Refined cost equations eval_ct_init_bb26_in/6 
* CE 60: eval_ct_init_bb26_in(A,B,C,D,A,B) = 0
     [C>=288,D=6] 
* CE 61: eval_ct_init_bb26_in(V__input_len,V__compressed_len,V_n_6,B,C,D) = 1+ eval_ct_init_bb26_in(V__input_len,V__compressed_len,E,F,C,D)
     [287>=V_n_6,V_n_6+1=E,F=6,B=6] 

### Cost equations --> "Loop" of eval_ct_init_bb26_in/6 
* CEs [61] --> Loop 56 
* CEs [60] --> Loop 57 

#### Loops of eval_ct_init_bb26_in/6 
* Loop 56: eval_ct_init_bb26_in(V__input_len,V__compressed_len,V_n_6,B,C,D)->  eval_ct_init_bb26_in(V__input_len,V__compressed_len,V_n_6',B',C,D)
                  [287>=V_n_6,V_n_6+1=V_n_6',B'=6,B=6] 
* Loop 57: eval_ct_init_bb26_in(A,B,C,D,A,B) [C>=288,D=6] 

### Ranking functions of CR eval_ct_init_bb26_in(V__input_len,V__compressed_len,V_n_6,B,C,D) 
* RF of phase [56]: [-V_n_6+288]

#### Partial ranking functions of CR eval_ct_init_bb26_in(V__input_len,V__compressed_len,V_n_6,B,C,D) 
* Partial RF of phase [56]:
  - RF of loop [56:1]:
    -V_n_6+288


### Resulting Chains:eval_ct_init_bb26_in(V__input_len,V__compressed_len,V_n_6,B,C,D) 
* [[56],57]
* [57]


### Merging Chains  eval_ct_init_bb26_in/6 into  External patterns of execution 
* [[57]] --> 1 
* [[57,[56]]] --> 2 


### Specialization of cost equations eval_ct_init_bb29_in/6 
* CE 36 is refined into CE [62] 
* CE 35 is refined into CE [63] 


#### Refined cost equations eval_ct_init_bb29_in/6 
* CE 62: eval_ct_init_bb29_in(A,B,C,D,A,B) = 0
     [C>=30,D=5] 
* CE 63: eval_ct_init_bb29_in(V__input_len,V__compressed_len,V_n_7,B,C,D) = 1+ eval_ct_init_bb29_in(V__input_len,V__compressed_len,E,F,C,D)
     [V_n_7>=0,29>=V_n_7,V_n_7+1=E,F=5,B=5] 

### Cost equations --> "Loop" of eval_ct_init_bb29_in/6 
* CEs [63] --> Loop 58 
* CEs [62] --> Loop 59 

#### Loops of eval_ct_init_bb29_in/6 
* Loop 58: eval_ct_init_bb29_in(V__input_len,V__compressed_len,V_n_7,B,C,D)->  eval_ct_init_bb29_in(V__input_len,V__compressed_len,V_n_7',B',C,D)
                  [V_n_7>=0,29>=V_n_7,V_n_7+1=V_n_7',B'=5,B=5] 
* Loop 59: eval_ct_init_bb29_in(A,B,C,D,A,B) [C>=30,D=5] 

### Ranking functions of CR eval_ct_init_bb29_in(V__input_len,V__compressed_len,V_n_7,B,C,D) 
* RF of phase [58]: [-V_n_7+30]

#### Partial ranking functions of CR eval_ct_init_bb29_in(V__input_len,V__compressed_len,V_n_7,B,C,D) 
* Partial RF of phase [58]:
  - RF of loop [58:1]:
    -V_n_7+30


### Resulting Chains:eval_ct_init_bb29_in(V__input_len,V__compressed_len,V_n_7,B,C,D) 
* [[58],59]


### Merging Chains  eval_ct_init_bb29_in/6 into  External patterns of execution 
* [[59,[58]]] --> 1 


### Specialization of cost equations eval_ct_init_93/3 
* CE 34 is refined into CE [64] 


#### Refined cost equations eval_ct_init_93/3 
* CE 64: eval_ct_init_93(V__input_len,V__compressed_len,B) = 1+ eval_ct_init_bb29_in(V__input_len,V__compressed_len,C,D,V__input_len,V__compressed_len):1
     [D=5,C=0] 

### Cost equations --> "Loop" of eval_ct_init_93/3 
* CEs [64] --> Loop 60 

#### Loops of eval_ct_init_93/3 
* Loop 60: eval_ct_init_93(V__input_len,V__compressed_len,B) [] 

### Ranking functions of CR eval_ct_init_93(V__input_len,V__compressed_len,B) 

#### Partial ranking functions of CR eval_ct_init_93(V__input_len,V__compressed_len,B) 


### Resulting Chains:eval_ct_init_93(V__input_len,V__compressed_len,B) 
* [60]


### Merging Chains  eval_ct_init_93/3 into  External patterns of execution 
* [[60]] --> 1 


### Specialization of cost equations loop_cont_eval_ct_init_bb24_in/5 
* CE 31 is refined into CE [65,66] 


#### Refined cost equations loop_cont_eval_ct_init_bb24_in/5 
* CE 65: loop_cont_eval_ct_init_bb24_in(I,A,B,C,D) = 1+ eval_ct_init_bb26_in(A,B,C,J,A,B):1+ eval_ct_init_93(A,B,D):1
     [C>=288,J=6,I=7] 
* CE 66: loop_cont_eval_ct_init_bb24_in(I,A,B,C,D) = 1+ eval_ct_init_bb26_in(A,B,C,J,A,B):2+ eval_ct_init_93(A,B,D):1
     [287>=C,J=6,I=7] 

### Cost equations --> "Loop" of loop_cont_eval_ct_init_bb24_in/5 
* CEs [65] --> Loop 61 
* CEs [66] --> Loop 62 

#### Loops of loop_cont_eval_ct_init_bb24_in/5 
* Loop 61: loop_cont_eval_ct_init_bb24_in(I,A,B,C,D) [C>=288,I=7] 
* Loop 62: loop_cont_eval_ct_init_bb24_in(I,A,B,C,D) [287>=C,I=7] 

### Ranking functions of CR loop_cont_eval_ct_init_bb24_in(I,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_ct_init_bb24_in(I,A,B,C,D) 


### Resulting Chains:loop_cont_eval_ct_init_bb24_in(I,A,B,C,D) 
* [62]
* [61]


### Merging Chains  loop_cont_eval_ct_init_bb24_in/5 into  External patterns of execution 
* [[62]] --> 1 
* [[61]] --> 2 


### Specialization of cost equations loop_cont_eval_ct_init_bb22_in/5 
* CE 28 is refined into CE [67,68,69] 


#### Refined cost equations loop_cont_eval_ct_init_bb22_in/5 
* CE 67: loop_cont_eval_ct_init_bb22_in(J,A,B,C,D) = 1+ eval_ct_init_bb24_in(A,B,C,K,A,B,L):1+ loop_cont_eval_ct_init_bb24_in(M,A,B,N,D):1
     [279>=C,N=280,M=7,L=280,K=7,J=8] 
* CE 68: loop_cont_eval_ct_init_bb22_in(J,A,B,C,D) = 1+ eval_ct_init_bb24_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb24_in(L,A,B,C,D):1
     [C>=280,287>=C,L=7,K=7,J=8] 
* CE 69: loop_cont_eval_ct_init_bb22_in(J,A,B,C,D) = 1+ eval_ct_init_bb24_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb24_in(L,A,B,C,D):2
     [C>=288,L=7,K=7,J=8] 

### Cost equations --> "Loop" of loop_cont_eval_ct_init_bb22_in/5 
* CEs [69] --> Loop 63 
* CEs [67] --> Loop 64 
* CEs [68] --> Loop 65 

#### Loops of loop_cont_eval_ct_init_bb22_in/5 
* Loop 63: loop_cont_eval_ct_init_bb22_in(J,A,B,C,D) [C>=288,J=8] 
* Loop 64: loop_cont_eval_ct_init_bb22_in(J,A,B,C,D) [279>=C,J=8] 
* Loop 65: loop_cont_eval_ct_init_bb22_in(J,A,B,C,D) [C>=280,287>=C,J=8] 

### Ranking functions of CR loop_cont_eval_ct_init_bb22_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_ct_init_bb22_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_ct_init_bb22_in(J,A,B,C,D) 
* [65]
* [64]
* [63]


### Merging Chains  loop_cont_eval_ct_init_bb22_in/5 into  External patterns of execution 
* [[65]] --> 1 
* [[64]] --> 2 
* [[63]] --> 3 


### Specialization of cost equations loop_cont_eval_ct_init_bb20_in/5 
* CE 25 is refined into CE [70,71,72,73] 


#### Refined cost equations loop_cont_eval_ct_init_bb20_in/5 
* CE 70: loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) = 1+ eval_ct_init_bb22_in(A,B,C,K,A,B,L):1+ loop_cont_eval_ct_init_bb22_in(M,A,B,N,D):2
     [255>=C,N=256,M=8,L=256,K=8,J=9] 
* CE 71: loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) = 1+ eval_ct_init_bb22_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb22_in(L,A,B,C,D):1
     [C>=280,287>=C,L=8,K=8,J=9] 
* CE 72: loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) = 1+ eval_ct_init_bb22_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb22_in(L,A,B,C,D):2
     [C>=256,279>=C,L=8,K=8,J=9] 
* CE 73: loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) = 1+ eval_ct_init_bb22_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb22_in(L,A,B,C,D):3
     [C>=288,L=8,K=8,J=9] 

### Cost equations --> "Loop" of loop_cont_eval_ct_init_bb20_in/5 
* CEs [73] --> Loop 66 
* CEs [70] --> Loop 67 
* CEs [72] --> Loop 68 
* CEs [71] --> Loop 69 

#### Loops of loop_cont_eval_ct_init_bb20_in/5 
* Loop 66: loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) [C>=288,J=9] 
* Loop 67: loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) [255>=C,J=9] 
* Loop 68: loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) [C>=256,279>=C,J=9] 
* Loop 69: loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) [C>=280,287>=C,J=9] 

### Ranking functions of CR loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_ct_init_bb20_in(J,A,B,C,D) 
* [69]
* [68]
* [67]
* [66]


### Merging Chains  loop_cont_eval_ct_init_bb20_in/5 into  External patterns of execution 
* [[69]] --> 1 
* [[68]] --> 2 
* [[67]] --> 3 
* [[66]] --> 4 


### Specialization of cost equations loop_cont_eval_ct_init_bb18_in/5 
* CE 22 is refined into CE [74,75,76,77,78] 


#### Refined cost equations loop_cont_eval_ct_init_bb18_in/5 
* CE 74: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) = 1+ eval_ct_init_bb20_in(A,B,C,K,A,B,L):1+ loop_cont_eval_ct_init_bb20_in(M,A,B,N,D):3
     [143>=C,N=144,M=9,L=144,K=9,J=10] 
* CE 75: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) = 1+ eval_ct_init_bb20_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb20_in(L,A,B,C,D):1
     [C>=280,287>=C,L=9,K=9,J=10] 
* CE 76: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) = 1+ eval_ct_init_bb20_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb20_in(L,A,B,C,D):2
     [C>=256,279>=C,L=9,K=9,J=10] 
* CE 77: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) = 1+ eval_ct_init_bb20_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb20_in(L,A,B,C,D):3
     [C>=144,255>=C,L=9,K=9,J=10] 
* CE 78: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) = 1+ eval_ct_init_bb20_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb20_in(L,A,B,C,D):4
     [C>=288,L=9,K=9,J=10] 

### Cost equations --> "Loop" of loop_cont_eval_ct_init_bb18_in/5 
* CEs [78] --> Loop 70 
* CEs [74] --> Loop 71 
* CEs [77] --> Loop 72 
* CEs [76] --> Loop 73 
* CEs [75] --> Loop 74 

#### Loops of loop_cont_eval_ct_init_bb18_in/5 
* Loop 70: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) [C>=288,J=10] 
* Loop 71: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) [143>=C,J=10] 
* Loop 72: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) [C>=144,255>=C,J=10] 
* Loop 73: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) [C>=256,279>=C,J=10] 
* Loop 74: loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) [C>=280,287>=C,J=10] 

### Ranking functions of CR loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_ct_init_bb18_in(J,A,B,C,D) 
* [74]
* [73]
* [72]
* [71]
* [70]


### Merging Chains  loop_cont_eval_ct_init_bb18_in/5 into  External patterns of execution 
* [[74]] --> 1 
* [[73]] --> 2 
* [[72]] --> 3 
* [[71]] --> 4 
* [[70]] --> 5 


### Specialization of cost equations loop_cont_eval_ct_init_bb13_in/5 
* CE 17 is refined into CE [79,80] 


#### Refined cost equations loop_cont_eval_ct_init_bb13_in/5 
* CE 79: loop_cont_eval_ct_init_bb13_in(J,A,B,C,D) = 1+ eval_ct_init_bb18_in(A,B,C,K,A,B,L):1+ loop_cont_eval_ct_init_bb18_in(M,A,B,N,D):4
     [C>=16,N=0,M=10,L=0,K=10,J=11] 
* CE 80: loop_cont_eval_ct_init_bb13_in(J,A,B,C,D) = 1+ eval_ct_init_bb18_in(A,B,C,K,A,B,L):2+ loop_cont_eval_ct_init_bb18_in(M,A,B,N,D):4
     [15>=C,N=0,M=10,L=0,K=10,J=11] 

### Cost equations --> "Loop" of loop_cont_eval_ct_init_bb13_in/5 
* CEs [79] --> Loop 75 
* CEs [80] --> Loop 76 

#### Loops of loop_cont_eval_ct_init_bb13_in/5 
* Loop 75: loop_cont_eval_ct_init_bb13_in(J,A,B,C,D) [C>=16,J=11] 
* Loop 76: loop_cont_eval_ct_init_bb13_in(J,A,B,C,D) [15>=C,J=11] 

### Ranking functions of CR loop_cont_eval_ct_init_bb13_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_ct_init_bb13_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_ct_init_bb13_in(J,A,B,C,D) 
* [76]
* [75]


### Merging Chains  loop_cont_eval_ct_init_bb13_in/5 into  External patterns of execution 
* [[76]] --> 1 
* [[75]] --> 2 


### Specialization of cost equations loop_cont_eval_ct_init_bb7_in/5 
* CE 12 is refined into CE [81,82,83,84] 


#### Refined cost equations loop_cont_eval_ct_init_bb7_in/5 
* CE 81: loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) = 1+ eval_ct_init_bb13_in(A,B,C,K,A,B,L):1+ loop_cont_eval_ct_init_bb13_in(M,A,B,N,D):1
     [C>=30,N=0,M=11,L=0,K=11,J=4] 
* CE 82: loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) = 1+ eval_ct_init_bb13_in(A,B,C,K,A,B,L):2+ loop_cont_eval_ct_init_bb13_in(M,A,B,N,D):1
     [29>=C,N=0,M=11,L=0,K=11,J=4] 
* CE 83: loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) = 1+ eval_ct_init_bb13_in(A,B,C,K,L,M,N):3
     [29>=C,J=4] 
* CE 84: loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) = 1+ eval_ct_init_bb13_in(A,B,C,K,L,M,N):4
     [28>=C,J=4] 

### Cost equations --> "Loop" of loop_cont_eval_ct_init_bb7_in/5 
* CEs [83,84] --> Loop 77 
* CEs [81] --> Loop 78 
* CEs [82] --> Loop 79 

#### Loops of loop_cont_eval_ct_init_bb7_in/5 
* Loop 77: loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) [29>=C,J=4] 
* Loop 78: loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) [C>=30,J=4] 
* Loop 79: loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) [29>=C,J=4] 

### Ranking functions of CR loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_ct_init_bb7_in(J,A,B,C,D) 
* [79]
* [78]
* [77]...


### Merging Chains  loop_cont_eval_ct_init_bb7_in/5 into  External patterns of execution 
* [[79]] --> 1 
* [[78]] --> 2 
* [[77]] --> 3 


### Specialization of cost equations loop_cont_eval_ct_init_bb1_in/5 
* CE 7 is refined into CE [85,86,87,88,89] 


#### Refined cost equations loop_cont_eval_ct_init_bb1_in/5 
* CE 85: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) = 1+ eval_ct_init_bb7_in(A,B,C,K,A,B,L):1+ loop_cont_eval_ct_init_bb7_in(M,A,B,N,D):1
     [15>=C,N=16,M=4,L=16,K=4,J=2] 
* CE 86: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) = 1+ eval_ct_init_bb7_in(A,B,C,K,A,B,L):1+ loop_cont_eval_ct_init_bb7_in(M,A,B,N,D):3
     [15>=C,N=16,M=4,L=16,K=4,J=2] 
* CE 87: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) = 1+ eval_ct_init_bb7_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb7_in(L,A,B,C,D):1
     [C>=16,29>=C,L=4,K=4,J=2] 
* CE 88: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) = 1+ eval_ct_init_bb7_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb7_in(L,A,B,C,D):2
     [C>=30,L=4,K=4,J=2] 
* CE 89: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) = 1+ eval_ct_init_bb7_in(A,B,C,K,A,B,C):2+ loop_cont_eval_ct_init_bb7_in(L,A,B,C,D):3
     [C>=16,29>=C,L=4,K=4,J=2] 

### Cost equations --> "Loop" of loop_cont_eval_ct_init_bb1_in/5 
* CEs [86] --> Loop 80 
* CEs [89] --> Loop 81 
* CEs [88] --> Loop 82 
* CEs [85] --> Loop 83 
* CEs [87] --> Loop 84 

#### Loops of loop_cont_eval_ct_init_bb1_in/5 
* Loop 80: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) [15>=C,J=2] 
* Loop 81: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) [C>=16,29>=C,J=2] 
* Loop 82: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) [C>=30,J=2] 
* Loop 83: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) [15>=C,J=2] 
* Loop 84: loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) [C>=16,29>=C,J=2] 

### Ranking functions of CR loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) 


### Resulting Chains:loop_cont_eval_ct_init_bb1_in(J,A,B,C,D) 
* [84]
* [83]
* [82]
* [81]...
* [80]...


### Merging Chains  loop_cont_eval_ct_init_bb1_in/5 into  External patterns of execution 
* [[84]] --> 1 
* [[83]] --> 2 
* [[82]] --> 3 
* [[81]] --> 4 
* [[80]] --> 5 


### Specialization of cost equations eval_ct_init_bb0_in/3 
* CE 3 is refined into CE [90] 
* CE 4 is refined into CE [91,92] 


#### Refined cost equations eval_ct_init_bb0_in/3 
* CE 90: eval_ct_init_bb0_in(V__input_len,V__compressed_len,B) = 0
     [] 
* CE 91: eval_ct_init_bb0_in(V__input_len,V__compressed_len,B) = 1+ eval_ct_init_bb1_in(C,D,E,F,G,H,I):1+ loop_cont_eval_ct_init_bb1_in(J,K,L,M,B):2
     [M=0,L=0,K=0,J=2,I=0,H=0,G=0,F=2,E=0,D=0,C=0] 
* CE 92: eval_ct_init_bb0_in(V__input_len,V__compressed_len,B) = 1+ eval_ct_init_bb1_in(C,D,E,F,G,H,I):1+ loop_cont_eval_ct_init_bb1_in(J,K,L,M,B):5
     [M=0,L=0,K=0,J=2,I=0,H=0,G=0,F=2,E=0,D=0,C=0] 

### Cost equations --> "Loop" of eval_ct_init_bb0_in/3 
* CEs [92] --> Loop 85 
* CEs [90,91] --> Loop 86 

#### Loops of eval_ct_init_bb0_in/3 
* Loop 85: eval_ct_init_bb0_in(V__input_len,V__compressed_len,B) [] 
* Loop 86: eval_ct_init_bb0_in(V__input_len,V__compressed_len,B) [] 

### Ranking functions of CR eval_ct_init_bb0_in(V__input_len,V__compressed_len,B) 

#### Partial ranking functions of CR eval_ct_init_bb0_in(V__input_len,V__compressed_len,B) 


### Resulting Chains:eval_ct_init_bb0_in(V__input_len,V__compressed_len,B) 
* [86]
* [85]...


### Merging Chains  eval_ct_init_bb0_in/3 into  External patterns of execution 
* [[86]] --> 1 
* [[85]] --> 2 


### Specialization of cost equations eval_ct_init_start/3 
* CE 2 is refined into CE [93,94] 


#### Refined cost equations eval_ct_init_start/3 
* CE 93: eval_ct_init_start(V__input_len,V__compressed_len,B) = 0+ eval_ct_init_bb0_in(V__input_len,V__compressed_len,B):1
     [] 
* CE 94: eval_ct_init_start(V__input_len,V__compressed_len,B) = 0+ eval_ct_init_bb0_in(V__input_len,V__compressed_len,B):2
     [] 

### Cost equations --> "Loop" of eval_ct_init_start/3 
* CEs [94] --> Loop 87 
* CEs [93] --> Loop 88 

#### Loops of eval_ct_init_start/3 
* Loop 87: eval_ct_init_start(V__input_len,V__compressed_len,B) [] 
* Loop 88: eval_ct_init_start(V__input_len,V__compressed_len,B) [] 

### Ranking functions of CR eval_ct_init_start(V__input_len,V__compressed_len,B) 

#### Partial ranking functions of CR eval_ct_init_start(V__input_len,V__compressed_len,B) 


### Resulting Chains:eval_ct_init_start(V__input_len,V__compressed_len,B) 
* [88]
* [87]...


### Merging Chains  eval_ct_init_start/3 into  External patterns of execution 
* [[88]] --> 1 
* [[87]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [35] 

 * loop 35:eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,V_n_0,B,C,D,E) -> [eval_ct_init_bb3_in(V__input_len',V__compressed_len',V_code_0',V_10',V_n_0',B',C',D',E')] 
1
#### Cost of phase [35]:eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,V_n_0,B,C,D,E) -> [eval_ct_init_bb3_in(V__input_len',V__compressed_len',V_code_0',V_10',V_n_0',B',C',D',E')] 
1*it(35)+0
  Such that:it(35) =< V_10-V_n_0
it(35) =< V_10-V_n_0-V_10'+V_n_0'

#### Cost of chains of eval_ct_init_bb3_in(V__input_len,V__compressed_len,V_code_0,V_10,V_n_0,B,C,D,E):
* Chain [[35],36]: 1*it(35)+0
  Such that:it(35) =< V_10-V_n_0

  with precondition: [B=3,V__input_len=C,V__compressed_len=D,V_code_0+1=E,27>=V_code_0,V_n_0>=0,V_10>=V_n_0+1] 

* Chain [36]: 0
  with precondition: [B=3,C=V__input_len,D=V__compressed_len,V_code_0+1=E,27>=V_code_0,V_n_0>=0,V_n_0>=V_10] 


#### Cost of loops [37] 

 * loop 37:eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0,B,C,D,E) -> [eval_ct_init_bb1_in(V__input_len',V__compressed_len',V_code_0',B',C',D',E')] 
1*s(2)+0
#### Cost of phase [37]:eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0,B,C,D,E) -> [eval_ct_init_bb1_in(V__input_len',V__compressed_len',V_code_0',B',C',D',E')] 
1*s(3)+0
#### Cost of chains of eval_ct_init_bb1_in(V__input_len,V__compressed_len,V_code_0,B,C,D,E):
* Chain [[37],38]: 1*s(3)+0
  with precondition: [V__input_len=0,V__compressed_len=0,B=2,C=0,D=0,E=0,27>=V_code_0] 


#### Cost of loops [39] 

 * loop 39:eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,V_n_1,B,C,D,E) -> [eval_ct_init_bb9_in(V__input_len',V__compressed_len',V_code_1',V_28',V_n_1',B',C',D',E')] 
1
#### Cost of phase [39]:eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,V_n_1,B,C,D,E) -> [eval_ct_init_bb9_in(V__input_len',V__compressed_len',V_code_1',V_28',V_n_1',B',C',D',E')] 
1*it(39)+0
  Such that:it(39) =< V_28-V_n_1
it(39) =< V_28-V_n_1-V_28'+V_n_1'

#### Cost of chains of eval_ct_init_bb9_in(V__input_len,V__compressed_len,V_code_1,V_28,V_n_1,B,C,D,E):
* Chain [[39],40]: 1*it(39)+0
  Such that:it(39) =< V_28-V_n_1

  with precondition: [B=2,V__input_len=C,V__compressed_len=D,V_code_1+1=E,15>=V_code_1,V_n_1>=0,V_28>=V_n_1+1] 

* Chain [40]: 0
  with precondition: [B=2,C=V__input_len,D=V__compressed_len,V_code_1+1=E,15>=V_code_1,V_n_1>=0,V_n_1>=V_28] 


#### Cost of loops [41] 

 * loop 41:eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1,B,C,D,E) -> [eval_ct_init_bb7_in(V__input_len',V__compressed_len',V_code_1',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [41]:eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1,B,C,D,E) -> [eval_ct_init_bb7_in(V__input_len',V__compressed_len',V_code_1',B',C',D',E')] 
1*s(6)+0
#### Cost of chains of eval_ct_init_bb7_in(V__input_len,V__compressed_len,V_code_1,B,C,D,E):
* Chain [[41],42]: 1*s(6)+0
  with precondition: [B=4,E=16,V__input_len=C,V__compressed_len=D,15>=V_code_1] 

* Chain [42]: 0
  with precondition: [B=4,C=V__input_len,D=V__compressed_len,V_code_1=E,V_code_1>=16] 


#### Cost of loops [43] 

 * loop 43:eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2,B,C,D,E) -> [eval_ct_init_bb15_in(V__input_len',V__compressed_len',V_code_2',V_n_2',B',C',D',E')] 
1
#### Cost of phase [43]:eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2,B,C,D,E) -> [eval_ct_init_bb15_in(V__input_len',V__compressed_len',V_code_2',V_n_2',B',C',D',E')] 
1*it(43)+0
#### Cost of phase [43]:eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2,B,C,D,E) -> [eval_ct_init_bb15_in(V__input_len',V__compressed_len',V_code_2',V_n_2',B',C',D',E')] 
1*it(43)+0
#### Cost of chains of eval_ct_init_bb15_in(V__input_len,V__compressed_len,V_code_2,V_n_2,B,C,D,E):
* Chain [[43]]...: 1*it(43)+0
  with precondition: [29>=V_code_2,V_n_2>=0,B=4] 

* Chain [[43],44]: 1*it(43)+0
  with precondition: [B=4,V__input_len=C,V__compressed_len=D,V_code_2+1=E,29>=V_code_2,V_n_2>=0] 

* Chain [44]: 0
  with precondition: [B=4,C=V__input_len,D=V__compressed_len,V_code_2+1=E,29>=V_code_2,V_n_2>=0] 


#### Cost of loops [46] 

 * loop 46:eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E) -> [eval_ct_init_bb13_in(V__input_len',V__compressed_len',V_code_2',B',C',D',E')] 
1*s(9)+2
#### Cost of phase [46]:eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E) -> [eval_ct_init_bb13_in(V__input_len',V__compressed_len',V_code_2',B',C',D',E')] 
2*it(46)+1*s(10)+0
  Such that:it(46) =< -V_code_2+30
it(46) =< -V_code_2+V_code_2'

#### Cost of phase [46]:eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E) -> [eval_ct_init_bb13_in(V__input_len',V__compressed_len',V_code_2',B',C',D',E')] 
2*it(46)+1*s(10)+0
  Such that:it(46) =< -V_code_2+30
it(46) =< -V_code_2+V_code_2'

#### Cost of chains of eval_ct_init_bb13_in(V__input_len,V__compressed_len,V_code_2,B,C,D,E):
* Chain [[46],47]: 2*it(46)+1*s(10)+0
  Such that:it(46) =< -V_code_2+30

  with precondition: [B=11,E=0,V__input_len=C,V__compressed_len=D,29>=V_code_2] 

* Chain [[46],45]...: 2*it(46)+2*s(10)+2
  Such that:it(46) =< -V_code_2+29

  with precondition: [28>=V_code_2] 

* Chain [47]: 0
  with precondition: [B=11,E=0,C=V__input_len,D=V__compressed_len,V_code_2>=30] 

* Chain [45]...: 1*s(11)+2
  with precondition: [29>=V_code_2] 


#### Cost of loops [48] 

 * loop 48:eval_ct_init_bb18_in(V__input_len,V__compressed_len,V_bits_0,B,C,D,E) -> [eval_ct_init_bb18_in(V__input_len',V__compressed_len',V_bits_0',B',C',D',E')] 
1
#### Cost of phase [48]:eval_ct_init_bb18_in(V__input_len,V__compressed_len,V_bits_0,B,C,D,E) -> [eval_ct_init_bb18_in(V__input_len',V__compressed_len',V_bits_0',B',C',D',E')] 
1*it(48)+0
  Such that:it(48) =< -V_bits_0+16
it(48) =< -V_bits_0+V_bits_0'

#### Cost of chains of eval_ct_init_bb18_in(V__input_len,V__compressed_len,V_bits_0,B,C,D,E):
* Chain [[48],49]: 1*it(48)+0
  Such that:it(48) =< -V_bits_0+16

  with precondition: [B=10,E=0,V__input_len=C,V__compressed_len=D,15>=V_bits_0] 

* Chain [49]: 0
  with precondition: [B=10,E=0,C=V__input_len,D=V__compressed_len,V_bits_0>=16] 


#### Cost of loops [50] 

 * loop 50:eval_ct_init_bb20_in(V__input_len,V__compressed_len,V_n_3,B,C,D,E) -> [eval_ct_init_bb20_in(V__input_len',V__compressed_len',V_n_3',B',C',D',E')] 
1
#### Cost of phase [50]:eval_ct_init_bb20_in(V__input_len,V__compressed_len,V_n_3,B,C,D,E) -> [eval_ct_init_bb20_in(V__input_len',V__compressed_len',V_n_3',B',C',D',E')] 
1*it(50)+0
  Such that:it(50) =< -V_n_3+144
it(50) =< -V_n_3+V_n_3'

#### Cost of chains of eval_ct_init_bb20_in(V__input_len,V__compressed_len,V_n_3,B,C,D,E):
* Chain [[50],51]: 1*it(50)+0
  Such that:it(50) =< -V_n_3+144

  with precondition: [B=9,E=144,V__input_len=C,V__compressed_len=D,143>=V_n_3] 

* Chain [51]: 0
  with precondition: [B=9,C=V__input_len,D=V__compressed_len,V_n_3=E,V_n_3>=144] 


#### Cost of loops [52] 

 * loop 52:eval_ct_init_bb22_in(V__input_len,V__compressed_len,V_n_4,B,C,D,E) -> [eval_ct_init_bb22_in(V__input_len',V__compressed_len',V_n_4',B',C',D',E')] 
1
#### Cost of phase [52]:eval_ct_init_bb22_in(V__input_len,V__compressed_len,V_n_4,B,C,D,E) -> [eval_ct_init_bb22_in(V__input_len',V__compressed_len',V_n_4',B',C',D',E')] 
1*it(52)+0
  Such that:it(52) =< -V_n_4+256
it(52) =< -V_n_4+V_n_4'

#### Cost of chains of eval_ct_init_bb22_in(V__input_len,V__compressed_len,V_n_4,B,C,D,E):
* Chain [[52],53]: 1*it(52)+0
  Such that:it(52) =< -V_n_4+256

  with precondition: [B=8,E=256,V__input_len=C,V__compressed_len=D,255>=V_n_4] 

* Chain [53]: 0
  with precondition: [B=8,C=V__input_len,D=V__compressed_len,V_n_4=E,V_n_4>=256] 


#### Cost of loops [54] 

 * loop 54:eval_ct_init_bb24_in(V__input_len,V__compressed_len,V_n_5,B,C,D,E) -> [eval_ct_init_bb24_in(V__input_len',V__compressed_len',V_n_5',B',C',D',E')] 
1
#### Cost of phase [54]:eval_ct_init_bb24_in(V__input_len,V__compressed_len,V_n_5,B,C,D,E) -> [eval_ct_init_bb24_in(V__input_len',V__compressed_len',V_n_5',B',C',D',E')] 
1*it(54)+0
  Such that:it(54) =< -V_n_5+280
it(54) =< -V_n_5+V_n_5'

#### Cost of chains of eval_ct_init_bb24_in(V__input_len,V__compressed_len,V_n_5,B,C,D,E):
* Chain [[54],55]: 1*it(54)+0
  Such that:it(54) =< -V_n_5+280

  with precondition: [B=7,E=280,V__input_len=C,V__compressed_len=D,279>=V_n_5] 

* Chain [55]: 0
  with precondition: [B=7,C=V__input_len,D=V__compressed_len,V_n_5=E,V_n_5>=280] 


#### Cost of loops [56] 

 * loop 56:eval_ct_init_bb26_in(V__input_len,V__compressed_len,V_n_6,B,C,D) -> [eval_ct_init_bb26_in(V__input_len',V__compressed_len',V_n_6',B',C',D')] 
1
#### Cost of phase [56]:eval_ct_init_bb26_in(V__input_len,V__compressed_len,V_n_6,B,C,D) -> [eval_ct_init_bb26_in(V__input_len',V__compressed_len',V_n_6',B',C',D')] 
1*it(56)+0
  Such that:it(56) =< -V_n_6+288
it(56) =< -V_n_6+V_n_6'

#### Cost of chains of eval_ct_init_bb26_in(V__input_len,V__compressed_len,V_n_6,B,C,D):
* Chain [[56],57]: 1*it(56)+0
  Such that:it(56) =< -V_n_6+288

  with precondition: [B=6,V__input_len=C,V__compressed_len=D,287>=V_n_6] 

* Chain [57]: 0
  with precondition: [B=6,C=V__input_len,D=V__compressed_len,V_n_6>=288] 


#### Cost of loops [58] 

 * loop 58:eval_ct_init_bb29_in(V__input_len,V__compressed_len,V_n_7,B,C,D) -> [eval_ct_init_bb29_in(V__input_len',V__compressed_len',V_n_7',B',C',D')] 
1
#### Cost of phase [58]:eval_ct_init_bb29_in(V__input_len,V__compressed_len,V_n_7,B,C,D) -> [eval_ct_init_bb29_in(V__input_len',V__compressed_len',V_n_7',B',C',D')] 
1*it(58)+0
  Such that:it(58) =< -V_n_7+30
it(58) =< -V_n_7+V_n_7'

#### Cost of chains of eval_ct_init_bb29_in(V__input_len,V__compressed_len,V_n_7,B,C,D):
* Chain [[58],59]: 1*it(58)+0
  Such that:it(58) =< -V_n_7+30

  with precondition: [B=5,V__input_len=C,V__compressed_len=D,29>=V_n_7,V_n_7>=0] 


#### Cost of chains of eval_ct_init_93(V__input_len,V__compressed_len,B):
* Chain [60]: 1*s(12)+1
  Such that:s(12) =< 30

  with precondition: [] 


#### Cost of chains of loop_cont_eval_ct_init_bb24_in(I,A,B,C,D):
* Chain [62]: 1*s(13)+1*s(14)+2
  Such that:s(14) =< 30
s(13) =< -C+288

  with precondition: [I=7,287>=C] 

* Chain [61]: 1*s(15)+2
  Such that:s(15) =< 30

  with precondition: [I=7,C>=288] 


#### Cost of chains of loop_cont_eval_ct_init_bb22_in(J,A,B,C,D):
* Chain [65]: 1*s(16)+1*s(17)+3
  Such that:s(16) =< 30
s(17) =< -C+288

  with precondition: [J=8,287>=C,C>=280] 

* Chain [64]: 1*s(18)+1*s(19)+1*s(20)+3
  Such that:s(20) =< 8
s(19) =< 30
s(18) =< -C+280

  with precondition: [J=8,279>=C] 

* Chain [63]: 1*s(21)+3
  Such that:s(21) =< 30

  with precondition: [J=8,C>=288] 


#### Cost of chains of loop_cont_eval_ct_init_bb20_in(J,A,B,C,D):
* Chain [69]: 1*s(22)+1*s(23)+4
  Such that:s(22) =< 30
s(23) =< -C+288

  with precondition: [J=9,287>=C,C>=280] 

* Chain [68]: 1*s(24)+1*s(25)+1*s(26)+4
  Such that:s(24) =< 8
s(25) =< 30
s(26) =< -C+280

  with precondition: [J=9,279>=C,C>=256] 

* Chain [67]: 1*s(27)+1*s(28)+1*s(29)+1*s(30)+4
  Such that:s(28) =< 8
s(30) =< 24
s(29) =< 30
s(27) =< -C+256

  with precondition: [J=9,255>=C] 

* Chain [66]: 1*s(31)+4
  Such that:s(31) =< 30

  with precondition: [J=9,C>=288] 


#### Cost of chains of loop_cont_eval_ct_init_bb18_in(J,A,B,C,D):
* Chain [74]: 1*s(32)+1*s(33)+5
  Such that:s(32) =< 30
s(33) =< -C+288

  with precondition: [J=10,287>=C,C>=280] 

* Chain [73]: 1*s(34)+1*s(35)+1*s(36)+5
  Such that:s(34) =< 8
s(35) =< 30
s(36) =< -C+280

  with precondition: [J=10,279>=C,C>=256] 

* Chain [72]: 1*s(37)+1*s(38)+1*s(39)+1*s(40)+5
  Such that:s(37) =< 8
s(38) =< 24
s(39) =< 30
s(40) =< -C+256

  with precondition: [J=10,255>=C,C>=144] 

* Chain [71]: 1*s(41)+1*s(42)+1*s(43)+1*s(44)+1*s(45)+5
  Such that:s(42) =< 8
s(43) =< 24
s(44) =< 30
s(45) =< 112
s(41) =< -C+144

  with precondition: [J=10,143>=C] 

* Chain [70]: 1*s(46)+5
  Such that:s(46) =< 30

  with precondition: [J=10,C>=288] 


#### Cost of chains of loop_cont_eval_ct_init_bb13_in(J,A,B,C,D):
* Chain [76]: 1*s(47)+1*s(48)+1*s(49)+1*s(50)+1*s(51)+1*s(52)+6
  Such that:s(48) =< 8
s(49) =< 24
s(50) =< 30
s(51) =< 112
s(52) =< 144
s(47) =< -C+16

  with precondition: [J=11,15>=C] 

* Chain [75]: 1*s(53)+1*s(54)+1*s(55)+1*s(56)+1*s(57)+6
  Such that:s(53) =< 8
s(54) =< 24
s(55) =< 30
s(56) =< 112
s(57) =< 144

  with precondition: [J=11,C>=16] 


#### Cost of chains of loop_cont_eval_ct_init_bb7_in(J,A,B,C,D):
* Chain [79]: 2*s(58)+1*s(59)+1*s(60)+1*s(61)+1*s(62)+1*s(63)+1*s(64)+1*s(65)+7
  Such that:s(60) =< 8
s(65) =< 16
s(61) =< 24
s(62) =< 30
s(63) =< 112
s(64) =< 144
s(58) =< -C+30

  with precondition: [J=4,29>=C] 

* Chain [78]: 1*s(66)+1*s(67)+1*s(68)+1*s(69)+1*s(70)+1*s(71)+7
  Such that:s(66) =< 8
s(71) =< 16
s(67) =< 24
s(68) =< 30
s(69) =< 112
s(70) =< 144

  with precondition: [J=4,C>=30] 

* Chain [77]...: 3*s(72)+2*s(73)+3
  Such that:s(73) =< -C+29

  with precondition: [J=4,29>=C] 


#### Cost of chains of loop_cont_eval_ct_init_bb1_in(J,A,B,C,D):
* Chain [84]: 1*s(75)+1*s(76)+1*s(77)+1*s(78)+1*s(79)+1*s(80)+2*s(81)+1*s(82)+8
  Such that:s(75) =< 8
s(76) =< 16
s(77) =< 24
s(78) =< 30
s(79) =< 112
s(80) =< 144
s(81) =< -C+30

  with precondition: [J=2,29>=C,C>=16] 

* Chain [83]: 2*s(83)+1*s(84)+1*s(85)+1*s(86)+1*s(87)+1*s(88)+1*s(89)+2*s(90)+8
  Such that:s(84) =< 8
s(90) =< 14
s(85) =< 16
s(86) =< 24
s(87) =< 30
s(88) =< 112
s(89) =< 144

  with precondition: [J=2,15>=C] 

* Chain [82]: 1*s(92)+1*s(93)+1*s(94)+1*s(95)+1*s(96)+1*s(97)+8
  Such that:s(92) =< 8
s(93) =< 16
s(94) =< 24
s(95) =< 30
s(96) =< 112
s(97) =< 144

  with precondition: [J=2,C>=30] 

* Chain [81]...: 2*s(98)+3*s(99)+4
  Such that:s(98) =< -C+29

  with precondition: [J=2,29>=C,C>=16] 

* Chain [80]...: 4*s(100)+2*s(101)+4
  Such that:s(101) =< 13

  with precondition: [J=2,15>=C] 


#### Cost of chains of eval_ct_init_bb0_in(V__input_len,V__compressed_len,B):
* Chain [86]: 1*aux(4)+0
  with precondition: [] 

* Chain [85]...: 5*s(112)+2*s(113)+5
  Such that:s(113) =< 13

  with precondition: [] 


#### Cost of chains of eval_ct_init_start(V__input_len,V__compressed_len,B):
* Chain [88]: 1*s(115)+0
  with precondition: [] 

* Chain [87]...: 2*s(116)+5*s(117)+5
  Such that:s(116) =< 13

  with precondition: [] 


Closed-form bounds of eval_ct_init_start(V__input_len,V__compressed_len,B): 
-------------------------------------
* Chain [88] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [87]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_ct_init_start(V__input_len,V__compressed_len,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 160 ms.
* Invariants computed in 342 ms.
   - Backward Invariants 164 ms.
   - Transitive Invariants 83 ms.
* Refinement performed in 702 ms.
* Termination proved in 79 ms.
* Upper bounds computed in 469 ms.
   - Equation cost structures 227 ms.
   - Phase cost structures 146 ms.
   - Chain cost structures 132 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 2034 ms.

