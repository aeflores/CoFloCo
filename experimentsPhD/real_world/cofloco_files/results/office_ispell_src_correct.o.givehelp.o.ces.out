Warning: Ignored call to eval_givehelp_stop/1 in equation eval_givehelp_bb6_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_givehelp_30/1,eval_givehelp_31/2,eval_givehelp_bb5_in/1]
1. non_recursive  : [eval_givehelp_bb6_in/1]
2. non_recursive  : [loop_cont_eval_givehelp_bb5_in/2]
3. non_recursive  : [eval_givehelp_29/1]
4. non_recursive  : [eval_givehelp_28/1]
5. non_recursive  : [eval_givehelp_27/1]
6. non_recursive  : [eval_givehelp_26/1]
7. non_recursive  : [eval_givehelp_25/1]
8. non_recursive  : [eval_givehelp_24/1]
9. non_recursive  : [eval_givehelp_23/1]
10. non_recursive  : [eval_givehelp_22/1]
11. non_recursive  : [eval_givehelp_21/1]
12. non_recursive  : [eval_givehelp_20/1]
13. non_recursive  : [eval_givehelp_19/1]
14. non_recursive  : [eval_givehelp_18/1]
15. non_recursive  : [eval_givehelp_17/1]
16. non_recursive  : [eval_givehelp_16/1]
17. non_recursive  : [eval_givehelp_15/1]
18. non_recursive  : [eval_givehelp_14/1]
19. non_recursive  : [eval_givehelp_13/1]
20. non_recursive  : [eval_givehelp_12/1]
21. non_recursive  : [eval_givehelp_11/1]
22. non_recursive  : [eval_givehelp_10/1]
23. non_recursive  : [eval_givehelp_9/1]
24. non_recursive  : [eval_givehelp_8/1]
25. non_recursive  : [eval_givehelp_7/1]
26. non_recursive  : [eval_givehelp_6/1]
27. non_recursive  : [eval_givehelp_5/1]
28. non_recursive  : [eval_givehelp_4/1]
29. non_recursive  : [eval_givehelp_3/1]
30. non_recursive  : [eval_givehelp_2/1]
31. non_recursive  : [eval_givehelp_bb3_in/1]
32. non_recursive  : [eval_givehelp_1/1]
33. non_recursive  : [eval_givehelp_0/1]
34. non_recursive  : [eval_givehelp_bb0_in/1]
35. non_recursive  : [eval_givehelp_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_givehelp_bb5_in/1
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into eval_givehelp_29/1
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_givehelp_25/1
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is completely evaluated into other SCCs
25. SCC is completely evaluated into other SCCs
26. SCC is completely evaluated into other SCCs
27. SCC is completely evaluated into other SCCs
28. SCC is completely evaluated into other SCCs
29. SCC is completely evaluated into other SCCs
30. SCC is completely evaluated into other SCCs
31. SCC is completely evaluated into other SCCs
32. SCC is completely evaluated into other SCCs
33. SCC is completely evaluated into other SCCs
34. SCC is partially evaluated into eval_givehelp_bb0_in/1
35. SCC is partially evaluated into eval_givehelp_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_givehelp_bb5_in/1 
* CE 8 is refined into CE [9] 
* CE 7 is refined into CE [10] 


#### Refined cost equations eval_givehelp_bb5_in/1 
* CE 9: eval_givehelp_bb5_in(B) = 1+ eval_givehelp_bb5_in(C)
     [C=2,B=2] 
* CE 10: eval_givehelp_bb5_in(B) = 0
     [B=2] 

### Cost equations --> "Loop" of eval_givehelp_bb5_in/1 
* CEs [10] --> Loop 7 
* CEs [9] --> Loop 8 

#### Loops of eval_givehelp_bb5_in/1 
* Loop 7: eval_givehelp_bb5_in(B) [B=2] 
* Loop 8: eval_givehelp_bb5_in(B)->  eval_givehelp_bb5_in(B')
                  [B'=2,B=2] 

### Ranking functions of CR eval_givehelp_bb5_in(B) 

#### Partial ranking functions of CR eval_givehelp_bb5_in(B) 


### Resulting Chains:eval_givehelp_bb5_in(B) 
* [[8]]...
* [[8],7]
* [7]


### Merging Chains  eval_givehelp_bb5_in/1 into  External patterns of execution 
* [[7],[7,[8]]] --> 1 
* [[[8]]] --> 2 


### Specialization of cost equations eval_givehelp_29/1 
* CE 6 is refined into CE [11,12] 


#### Refined cost equations eval_givehelp_29/1 
* CE 11: eval_givehelp_29(B) = 1+ eval_givehelp_bb5_in(C):1
     [C=2] 
* CE 12: eval_givehelp_29(B) = 1+ eval_givehelp_bb5_in(C):2
     [C=2] 

### Cost equations --> "Loop" of eval_givehelp_29/1 
* CEs [12] --> Loop 9 
* CEs [11] --> Loop 10 

#### Loops of eval_givehelp_29/1 
* Loop 9: eval_givehelp_29(B) [] 
* Loop 10: eval_givehelp_29(B) [] 

### Ranking functions of CR eval_givehelp_29(B) 

#### Partial ranking functions of CR eval_givehelp_29(B) 


### Resulting Chains:eval_givehelp_29(B) 
* [10]
* [9]...


### Merging Chains  eval_givehelp_29/1 into  External patterns of execution 
* [[10]] --> 1 
* [[9]] --> 2 


### Specialization of cost equations eval_givehelp_25/1 
* CE 4 is refined into CE [13,14] 
* CE 5 is refined into CE [15] 


#### Refined cost equations eval_givehelp_25/1 
* CE 13: eval_givehelp_25(B) = 0+ eval_givehelp_29(B):1
     [] 
* CE 14: eval_givehelp_25(B) = 0+ eval_givehelp_29(B):2
     [] 
* CE 15: eval_givehelp_25(B) = 0
     [] 

### Cost equations --> "Loop" of eval_givehelp_25/1 
* CEs [13,15] --> Loop 11 
* CEs [14] --> Loop 12 

#### Loops of eval_givehelp_25/1 
* Loop 11: eval_givehelp_25(B) [] 
* Loop 12: eval_givehelp_25(B) [] 

### Ranking functions of CR eval_givehelp_25(B) 

#### Partial ranking functions of CR eval_givehelp_25(B) 


### Resulting Chains:eval_givehelp_25(B) 
* [12]...
* [11]


### Merging Chains  eval_givehelp_25/1 into  External patterns of execution 
* [[11]] --> 1 
* [[12]] --> 2 


### Specialization of cost equations eval_givehelp_bb0_in/1 
* CE 3 is refined into CE [16,17] 


#### Refined cost equations eval_givehelp_bb0_in/1 
* CE 16: eval_givehelp_bb0_in(B) = 0+ eval_givehelp_25(B):1
     [] 
* CE 17: eval_givehelp_bb0_in(B) = 0+ eval_givehelp_25(B):2
     [] 

### Cost equations --> "Loop" of eval_givehelp_bb0_in/1 
* CEs [17] --> Loop 13 
* CEs [16] --> Loop 14 

#### Loops of eval_givehelp_bb0_in/1 
* Loop 13: eval_givehelp_bb0_in(B) [] 
* Loop 14: eval_givehelp_bb0_in(B) [] 

### Ranking functions of CR eval_givehelp_bb0_in(B) 

#### Partial ranking functions of CR eval_givehelp_bb0_in(B) 


### Resulting Chains:eval_givehelp_bb0_in(B) 
* [14]
* [13]...


### Merging Chains  eval_givehelp_bb0_in/1 into  External patterns of execution 
* [[14]] --> 1 
* [[13]] --> 2 


### Specialization of cost equations eval_givehelp_start/2 
* CE 2 is refined into CE [18,19] 


#### Refined cost equations eval_givehelp_start/2 
* CE 18: eval_givehelp_start(V_interactive,B) = 0+ eval_givehelp_bb0_in(B):1
     [] 
* CE 19: eval_givehelp_start(V_interactive,B) = 0+ eval_givehelp_bb0_in(B):2
     [] 

### Cost equations --> "Loop" of eval_givehelp_start/2 
* CEs [19] --> Loop 15 
* CEs [18] --> Loop 16 

#### Loops of eval_givehelp_start/2 
* Loop 15: eval_givehelp_start(V_interactive,B) [] 
* Loop 16: eval_givehelp_start(V_interactive,B) [] 

### Ranking functions of CR eval_givehelp_start(V_interactive,B) 

#### Partial ranking functions of CR eval_givehelp_start(V_interactive,B) 


### Resulting Chains:eval_givehelp_start(V_interactive,B) 
* [16]
* [15]...


### Merging Chains  eval_givehelp_start/2 into  External patterns of execution 
* [[16]] --> 1 
* [[15]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [8] 

 * loop 8:eval_givehelp_bb5_in(B) -> [eval_givehelp_bb5_in(B')] 
1
#### Cost of phase [8]:eval_givehelp_bb5_in(B) -> [eval_givehelp_bb5_in(B')] 
1*it(8)+0
#### Cost of phase [8]:eval_givehelp_bb5_in(B) -> [eval_givehelp_bb5_in(B')] 
1*it(8)+0
#### Cost of chains of eval_givehelp_bb5_in(B):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [B=2] 

* Chain [[8],7]: 1*it(8)+0
  with precondition: [B=2] 

* Chain [7]: 0
  with precondition: [B=2] 


#### Cost of chains of eval_givehelp_29(B):
* Chain [10]: 1*s(2)+1
  with precondition: [] 

* Chain [9]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of eval_givehelp_25(B):
* Chain [12]...: 1*s(4)+1
  with precondition: [] 

* Chain [11]: 1*aux(2)+0
  with precondition: [] 


#### Cost of chains of eval_givehelp_bb0_in(B):
* Chain [14]: 1*s(6)+0
  with precondition: [] 

* Chain [13]...: 1*s(7)+1
  with precondition: [] 


#### Cost of chains of eval_givehelp_start(V_interactive,B):
* Chain [16]: 1*s(8)+0
  with precondition: [] 

* Chain [15]...: 1*s(9)+1
  with precondition: [] 


Closed-form bounds of eval_givehelp_start(V_interactive,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [15]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_givehelp_start(V_interactive,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 10 ms.
* Invariants computed in 2 ms.
   - Backward Invariants 2 ms.
   - Transitive Invariants 0 ms.
* Refinement performed in 3 ms.
* Termination proved in 1 ms.
* Upper bounds computed in 5 ms.
   - Equation cost structures 3 ms.
   - Phase cost structures 1 ms.
   - Chain cost structures 0 ms.
   - Solving cost expressions 0 ms.
* Total analysis performed in 39 ms.

