Warning: Ignored call to eval_gx_bits_cache_alloc_stop/1 in equation eval_gx_bits_cache_alloc_bb12_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_gx_bits_cache_alloc_bb12_in/1]
1. recursive  : [eval_gx_bits_cache_alloc_bb3_in/4]
2. non_recursive  : [eval_gx_bits_cache_alloc_bb11_in/1]
3. non_recursive  : [eval_gx_bits_cache_alloc_bb8_in/1]
4. non_recursive  : [loop_cont_eval_gx_bits_cache_alloc_bb3_in/2]
5. non_recursive  : [eval_gx_bits_cache_alloc_bb0_in/2]
6. non_recursive  : [eval_gx_bits_cache_alloc_start/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_gx_bits_cache_alloc_bb3_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into loop_cont_eval_gx_bits_cache_alloc_bb3_in/2
5. SCC is partially evaluated into eval_gx_bits_cache_alloc_bb0_in/2
6. SCC is partially evaluated into eval_gx_bits_cache_alloc_start/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_gx_bits_cache_alloc_bb3_in/4 
* CE 9 is refined into CE [13] 
* CE 10 is refined into CE [14] 
* CE 7 is refined into CE [15] 
* CE 8 is refined into CE [16] 
* CE 5 is refined into CE [17] 
* CE 6 is refined into CE [18] 


#### Refined cost equations eval_gx_bits_cache_alloc_bb3_in/4 
* CE 13: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) = 0
     [V_fsize_0>=V_20,V_20=V_21+8,B=3] 
* CE 14: eval_gx_bits_cache_alloc_bb3_in(A,B,B,C) = 0
     [B+8=A,C=3] 
* CE 15: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) = 0
     [V_21>=V_fsize_0+1,V_21+8=V_20,B=2] 
* CE 16: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) = 0
     [V_20>=V_fsize_0+1,V_fsize_0+7>=V_20,V_20=V_21+8,B=2] 
* CE 17: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) = 1+ eval_gx_bits_cache_alloc_bb3_in(C,V_21,D,B)
     [V_21>=V_fsize_0+1,V_21+8=C,V_21+8=V_20] 
* CE 18: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) = 1+ eval_gx_bits_cache_alloc_bb3_in(V_20,C,D,B)
     [V_20>=V_fsize_0+1,V_fsize_0+7>=V_20,V_20=C+8,V_20=V_21+8] 

### Cost equations --> "Loop" of eval_gx_bits_cache_alloc_bb3_in/4 
* CEs [18] --> Loop 11 
* CEs [17] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 

#### Loops of eval_gx_bits_cache_alloc_bb3_in/4 
* Loop 11: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B)->  eval_gx_bits_cache_alloc_bb3_in(V_20,V_21',V_fsize_0',B)
                  [V_20>=V_fsize_0+1,V_fsize_0+7>=V_20,V_20=V_21'+8,V_20=V_21+8] 
* Loop 12: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B)->  eval_gx_bits_cache_alloc_bb3_in(V_20,V_21',V_fsize_0',B)
                  [V_20>=V_fsize_0+9,V_20=V_21'+8,V_20=V_21+8] 
* Loop 13: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) [V_fsize_0>=V_20,V_20=V_21+8,B=3] 
* Loop 14: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) [V_20=V_fsize_0+8,V_20=V_21+8,B=3] 
* Loop 15: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) [V_20>=V_fsize_0+1,V_fsize_0+7>=V_20,V_20=V_21+8,B=2] 
* Loop 16: eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) [V_20>=V_fsize_0+9,V_20=V_21+8,B=2] 

### Ranking functions of CR eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) 

#### Partial ranking functions of CR eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) 


### Resulting Chains:eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) 
* [[11,12]]...
* [[11,12],16]
* [[11,12],15]
* [[11,12],14]
* [[11,12],13]
* [16]
* [15]
* [14]
* [13]


### Merging Chains  eval_gx_bits_cache_alloc_bb3_in/4 into  External patterns of execution 
* [[15],[15,[11,12]],[16,[11,12]]] --> 1 
* [[16]] --> 2 
* [[14],[13,[11,12]],[14,[11,12]]] --> 3 
* [[13]] --> 4 
* [[[11,12]]] --> 5 


### Specialization of cost equations loop_cont_eval_gx_bits_cache_alloc_bb3_in/2 
* CE 12 is refined into CE [19] 
* CE 11 is refined into CE [20] 


#### Refined cost equations loop_cont_eval_gx_bits_cache_alloc_bb3_in/2 
* CE 19: loop_cont_eval_gx_bits_cache_alloc_bb3_in(E,A) = 0
     [E=3] 
* CE 20: loop_cont_eval_gx_bits_cache_alloc_bb3_in(E,A) = 0
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_gx_bits_cache_alloc_bb3_in/2 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 

#### Loops of loop_cont_eval_gx_bits_cache_alloc_bb3_in/2 
* Loop 17: loop_cont_eval_gx_bits_cache_alloc_bb3_in(E,A) [E=3] 
* Loop 18: loop_cont_eval_gx_bits_cache_alloc_bb3_in(E,A) [E=2] 

### Ranking functions of CR loop_cont_eval_gx_bits_cache_alloc_bb3_in(E,A) 

#### Partial ranking functions of CR loop_cont_eval_gx_bits_cache_alloc_bb3_in(E,A) 


### Resulting Chains:loop_cont_eval_gx_bits_cache_alloc_bb3_in(E,A) 
* [18]
* [17]


### Merging Chains  loop_cont_eval_gx_bits_cache_alloc_bb3_in/2 into  External patterns of execution 
* [[18]] --> 1 
* [[17]] --> 2 


### Specialization of cost equations eval_gx_bits_cache_alloc_bb0_in/2 
* CE 3 is refined into CE [21] 
* CE 4 is refined into CE [22,23,24,25,26] 


#### Refined cost equations eval_gx_bits_cache_alloc_bb0_in/2 
* CE 21: eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) = 0
     [] 
* CE 22: eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) = 1+ eval_gx_bits_cache_alloc_bb3_in(C,V_lsize,D,E):1+ loop_cont_eval_gx_bits_cache_alloc_bb3_in(F,B):1
     [V_lsize+7>=0,V_lsize+8=C,F=2,E=2,D=0] 
* CE 23: eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) = 1+ eval_gx_bits_cache_alloc_bb3_in(C,V_lsize,D,E):2+ loop_cont_eval_gx_bits_cache_alloc_bb3_in(F,B):1
     [V_lsize>=1,V_lsize+8=C,F=2,E=2,D=0] 
* CE 24: eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) = 1+ eval_gx_bits_cache_alloc_bb3_in(C,V_lsize,D,E):3+ loop_cont_eval_gx_bits_cache_alloc_bb3_in(F,B):2
     [V_lsize+7>=0,V_lsize+8=C,F=3,E=3,D=0] 
* CE 25: eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) = 1+ eval_gx_bits_cache_alloc_bb3_in(C,V_lsize,D,E):4+ loop_cont_eval_gx_bits_cache_alloc_bb3_in(F,B):2
     [0>=V_lsize+8,V_lsize+8=C,F=3,E=3,D=0] 
* CE 26: eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) = 1+ eval_gx_bits_cache_alloc_bb3_in(C,D,E,F):5
     [C>=1,C=D+8,C=V_lsize+8,E=0] 

### Cost equations --> "Loop" of eval_gx_bits_cache_alloc_bb0_in/2 
* CEs [26] --> Loop 19 
* CEs [21,22,23,24,25] --> Loop 20 

#### Loops of eval_gx_bits_cache_alloc_bb0_in/2 
* Loop 19: eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) [V_lsize+7>=0] 
* Loop 20: eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) [] 

### Ranking functions of CR eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) 

#### Partial ranking functions of CR eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) 


### Resulting Chains:eval_gx_bits_cache_alloc_bb0_in(V_lsize,B) 
* [20]
* [19]...


### Merging Chains  eval_gx_bits_cache_alloc_bb0_in/2 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 


### Specialization of cost equations eval_gx_bits_cache_alloc_start/2 
* CE 2 is refined into CE [27,28] 


#### Refined cost equations eval_gx_bits_cache_alloc_start/2 
* CE 27: eval_gx_bits_cache_alloc_start(V_lsize,B) = 0+ eval_gx_bits_cache_alloc_bb0_in(V_lsize,B):1
     [] 
* CE 28: eval_gx_bits_cache_alloc_start(V_lsize,B) = 0+ eval_gx_bits_cache_alloc_bb0_in(V_lsize,B):2
     [V_lsize+7>=0] 

### Cost equations --> "Loop" of eval_gx_bits_cache_alloc_start/2 
* CEs [28] --> Loop 21 
* CEs [27] --> Loop 22 

#### Loops of eval_gx_bits_cache_alloc_start/2 
* Loop 21: eval_gx_bits_cache_alloc_start(V_lsize,B) [V_lsize+7>=0] 
* Loop 22: eval_gx_bits_cache_alloc_start(V_lsize,B) [] 

### Ranking functions of CR eval_gx_bits_cache_alloc_start(V_lsize,B) 

#### Partial ranking functions of CR eval_gx_bits_cache_alloc_start(V_lsize,B) 


### Resulting Chains:eval_gx_bits_cache_alloc_start(V_lsize,B) 
* [22]
* [21]...


### Merging Chains  eval_gx_bits_cache_alloc_start/2 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [11,12] 

 * loop 11:eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) -> [eval_gx_bits_cache_alloc_bb3_in(V_20',V_21',V_fsize_0',B')] 
1
 * loop 12:eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) -> [eval_gx_bits_cache_alloc_bb3_in(V_20',V_21',V_fsize_0',B')] 
1
#### Cost of phase [11,12]:eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) -> [eval_gx_bits_cache_alloc_bb3_in(V_20',V_21',V_fsize_0',B')] 
2*it(11)+0
#### Cost of phase [11,12]:eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) -> [eval_gx_bits_cache_alloc_bb3_in(V_20',V_21',V_fsize_0',B')] 
2*it(11)+0
#### Cost of phase [11,12]:eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) -> [eval_gx_bits_cache_alloc_bb3_in(V_20',V_21',V_fsize_0',B')] 
2*it(11)+0
#### Cost of phase [11,12]:eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) -> [eval_gx_bits_cache_alloc_bb3_in(V_20',V_21',V_fsize_0',B')] 
2*it(11)+0
#### Cost of phase [11,12]:eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B) -> [eval_gx_bits_cache_alloc_bb3_in(V_20',V_21',V_fsize_0',B')] 
2*it(11)+0
#### Cost of chains of eval_gx_bits_cache_alloc_bb3_in(V_20,V_21,V_fsize_0,B):
* Chain [[11,12]]...: 2*it(11)+0
  with precondition: [V_20>=V_fsize_0+1,V_20=V_21+8] 

* Chain [[11,12],16]: 2*it(11)+0
  with precondition: [B=2,V_20=V_21+8,V_20>=V_fsize_0+1] 

* Chain [[11,12],15]: 2*it(11)+0
  with precondition: [B=2,V_20=V_21+8,V_20>=V_fsize_0+1] 

* Chain [[11,12],14]: 2*it(11)+0
  with precondition: [B=3,V_20=V_21+8,V_20>=V_fsize_0+1] 

* Chain [[11,12],13]: 2*it(11)+0
  with precondition: [B=3,V_20=V_21+8,V_20>=V_fsize_0+1] 

* Chain [16]: 0
  with precondition: [B=2,V_21+8=V_20,V_21>=V_fsize_0+1] 

* Chain [15]: 0
  with precondition: [B=2,V_21+8=V_20,V_fsize_0>=V_21+1,V_21+7>=V_fsize_0] 

* Chain [14]: 0
  with precondition: [B=3,V_21+8=V_20,V_21=V_fsize_0] 

* Chain [13]: 0
  with precondition: [B=3,V_21+8=V_20,V_fsize_0>=V_21+8] 


#### Cost of chains of loop_cont_eval_gx_bits_cache_alloc_bb3_in(E,A):
* Chain [18]: 0
  with precondition: [E=2] 

* Chain [17]: 0
  with precondition: [E=3] 


#### Cost of chains of eval_gx_bits_cache_alloc_bb0_in(V_lsize,B):
* Chain [20]: 1*aux(3)+0
  with precondition: [] 

* Chain [19]...: 2*s(7)+1
  with precondition: [V_lsize+7>=0] 


#### Cost of chains of eval_gx_bits_cache_alloc_start(V_lsize,B):
* Chain [22]: 1*s(8)+0
  with precondition: [] 

* Chain [21]...: 2*s(9)+1
  with precondition: [V_lsize+7>=0] 


Closed-form bounds of eval_gx_bits_cache_alloc_start(V_lsize,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [21]... with precondition: [V_lsize+7>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_gx_bits_cache_alloc_start(V_lsize,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 23 ms.
* Invariants computed in 59 ms.
   - Backward Invariants 38 ms.
   - Transitive Invariants 5 ms.
* Refinement performed in 93 ms.
* Termination proved in 7 ms.
* Upper bounds computed in 66 ms.
   - Equation cost structures 25 ms.
   - Phase cost structures 15 ms.
   - Chain cost structures 25 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 305 ms.

