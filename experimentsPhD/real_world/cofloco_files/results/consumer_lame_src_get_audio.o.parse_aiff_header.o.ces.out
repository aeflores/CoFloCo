Warning: Ignored call to eval_parse_aiff_header_stop/1 in equation eval_parse_aiff_header_bb10_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_parse_aiff_header_bb10_in/1]
1. recursive  : [eval_parse_aiff_header_11/12,eval_parse_aiff_header_12/12,eval_parse_aiff_header_15/13,eval_parse_aiff_header_16/13,eval_parse_aiff_header_19/14,eval_parse_aiff_header_20/14,eval_parse_aiff_header_23/15,eval_parse_aiff_header_24/15,eval_parse_aiff_header_26/16,eval_parse_aiff_header_27/16,eval_parse_aiff_header_40/9,eval_parse_aiff_header_41/10,eval_parse_aiff_header_43/12,eval_parse_aiff_header_44/12,eval_parse_aiff_header_6/9,eval_parse_aiff_header_7/9,eval_parse_aiff_header_8/9,eval_parse_aiff_header_9/10,eval_parse_aiff_header_NewDefault_in/9,eval_parse_aiff_header_bb2_in/8]
2. non_recursive  : [eval_parse_aiff_header_46/1]
3. non_recursive  : [eval_parse_aiff_header_45/4]
4. non_recursive  : [eval_parse_aiff_header_bb8_in/4]
5. non_recursive  : [eval_parse_aiff_header_37/4]
6. non_recursive  : [eval_parse_aiff_header_36/5]
7. non_recursive  : [eval_parse_aiff_header_33/4]
8. non_recursive  : [eval_parse_aiff_header_32/4]
9. non_recursive  : [eval_parse_aiff_header_30/4]
10. non_recursive  : [eval_parse_aiff_header_29/4]
11. non_recursive  : [eval_parse_aiff_header_28/4]
12. non_recursive  : [loop_cont_eval_parse_aiff_header_bb2_in/5]
13. non_recursive  : [eval_parse_aiff_header_4/5]
14. non_recursive  : [eval_parse_aiff_header_3/5]
15. non_recursive  : [eval_parse_aiff_header_2/5]
16. non_recursive  : [eval_parse_aiff_header_1/4]
17. non_recursive  : [eval_parse_aiff_header_0/4]
18. non_recursive  : [eval_parse_aiff_header_bb0_in/4]
19. non_recursive  : [eval_parse_aiff_header_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval_parse_aiff_header_bb2_in/8
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_parse_aiff_header_bb8_in/4
5. SCC is partially evaluated into eval_parse_aiff_header_37/4
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into loop_cont_eval_parse_aiff_header_bb2_in/5
13. SCC is partially evaluated into eval_parse_aiff_header_4/5
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_parse_aiff_header_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_parse_aiff_header_bb2_in/8 
* CE 8 is refined into CE [15] 
* CE 5 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 7 is refined into CE [18] 


#### Refined cost equations eval_parse_aiff_header_bb2_in/8 
* CE 15: eval_parse_aiff_header_bb2_in(A,B,C,D,E,A,B,C) = 0
     [0>=D,E=4] 
* CE 16: eval_parse_aiff_header_bb2_in(A,B,C,D,E,A,B,C) = 0
     [D>=1,E=3] 
* CE 17: eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) = 0
     [V_chunkSize_0>=1,B=2] 
* CE 18: eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) = 1+ eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,F,B,C,D,E)
     [V_chunkSize_0>=1] 

### Cost equations --> "Loop" of eval_parse_aiff_header_bb2_in/8 
* CEs [18] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 

#### Loops of eval_parse_aiff_header_bb2_in/8 
* Loop 12: eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E)->  eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0',B,C,D,E)
                  [V_chunkSize_0>=1] 
* Loop 13: eval_parse_aiff_header_bb2_in(A,B,C,D,E,A,B,C) [0>=D,E=4] 
* Loop 14: eval_parse_aiff_header_bb2_in(A,B,C,D,E,A,B,C) [D>=1,E=3] 
* Loop 15: eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) [V_chunkSize_0>=1,B=2] 

### Ranking functions of CR eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) 

#### Partial ranking functions of CR eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) 


### Resulting Chains:eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) 
* [[12]]...
* [[12],15]
* [[12],14]
* [[12],13]
* [15]
* [14]
* [13]


### Merging Chains  eval_parse_aiff_header_bb2_in/8 into  External patterns of execution 
* [[15],[15,[12]]] --> 1 
* [[14],[14,[12]]] --> 2 
* [[13]] --> 3 
* [[13,[12]]] --> 4 
* [[[12]]] --> 5 


### Specialization of cost equations eval_parse_aiff_header_bb8_in/4 
* CE 14 is refined into CE [19] 


#### Refined cost equations eval_parse_aiff_header_bb8_in/4 
* CE 19: eval_parse_aiff_header_bb8_in(V__num_samples,V__samp_freq,V__num_channels,B) = 0
     [] 

### Cost equations --> "Loop" of eval_parse_aiff_header_bb8_in/4 
* CEs [19] --> Loop 16 

#### Loops of eval_parse_aiff_header_bb8_in/4 
* Loop 16: eval_parse_aiff_header_bb8_in(V__num_samples,V__samp_freq,V__num_channels,B) [] 

### Ranking functions of CR eval_parse_aiff_header_bb8_in(V__num_samples,V__samp_freq,V__num_channels,B) 

#### Partial ranking functions of CR eval_parse_aiff_header_bb8_in(V__num_samples,V__samp_freq,V__num_channels,B) 


### Resulting Chains:eval_parse_aiff_header_bb8_in(V__num_samples,V__samp_freq,V__num_channels,B) 
* [16]


### Merging Chains  eval_parse_aiff_header_bb8_in/4 into  External patterns of execution 
* [[16]] --> 1 


### Specialization of cost equations eval_parse_aiff_header_37/4 
* CE 12 is refined into CE [20] 
* CE 13 is refined into CE [21] 


#### Refined cost equations eval_parse_aiff_header_37/4 
* CE 20: eval_parse_aiff_header_37(V__num_samples,V__samp_freq,V__num_channels,B) = 0
     [] 
* CE 21: eval_parse_aiff_header_37(V__num_samples,V__samp_freq,V__num_channels,B) = 0+ eval_parse_aiff_header_bb8_in(V__num_samples,V__samp_freq,V__num_channels,B):1
     [] 

### Cost equations --> "Loop" of eval_parse_aiff_header_37/4 
* CEs [20,21] --> Loop 17 

#### Loops of eval_parse_aiff_header_37/4 
* Loop 17: eval_parse_aiff_header_37(V__num_samples,V__samp_freq,V__num_channels,B) [] 

### Ranking functions of CR eval_parse_aiff_header_37(V__num_samples,V__samp_freq,V__num_channels,B) 

#### Partial ranking functions of CR eval_parse_aiff_header_37(V__num_samples,V__samp_freq,V__num_channels,B) 


### Resulting Chains:eval_parse_aiff_header_37(V__num_samples,V__samp_freq,V__num_channels,B) 
* [17]


### Merging Chains  eval_parse_aiff_header_37/4 into  External patterns of execution 
* [[17]] --> 1 


### Specialization of cost equations loop_cont_eval_parse_aiff_header_bb2_in/5 
* CE 11 is refined into CE [22] 
* CE 10 is refined into CE [23] 
* CE 9 is refined into CE [24] 


#### Refined cost equations loop_cont_eval_parse_aiff_header_bb2_in/5 
* CE 22: loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D) = 0+ eval_parse_aiff_header_bb8_in(A,B,C,D):1
     [E=4] 
* CE 23: loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D) = 0+ eval_parse_aiff_header_37(A,B,C,D):1
     [E=3] 
* CE 24: loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D) = 0
     [E=2] 

### Cost equations --> "Loop" of loop_cont_eval_parse_aiff_header_bb2_in/5 
* CEs [22] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [24] --> Loop 20 

#### Loops of loop_cont_eval_parse_aiff_header_bb2_in/5 
* Loop 18: loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D) [E=4] 
* Loop 19: loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D) [E=3] 
* Loop 20: loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D) [E=2] 

### Ranking functions of CR loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D) 

#### Partial ranking functions of CR loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D) 


### Resulting Chains:loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D) 
* [20]
* [19]
* [18]


### Merging Chains  loop_cont_eval_parse_aiff_header_bb2_in/5 into  External patterns of execution 
* [[20]] --> 1 
* [[19]] --> 2 
* [[18]] --> 3 


### Specialization of cost equations eval_parse_aiff_header_4/5 
* CE 3 is refined into CE [25] 
* CE 4 is refined into CE [26,27,28,29,30] 


#### Refined cost equations eval_parse_aiff_header_4/5 
* CE 25: eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) = 0
     [] 
* CE 26: eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) = 1+ eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_2,C,D,E,F):1+ loop_cont_eval_parse_aiff_header_bb2_in(G,D,E,F,B):1
     [V_2>=1,G=2,C=2] 
* CE 27: eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) = 1+ eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_2,C,V__num_samples,V__samp_freq,V__num_channels):2+ loop_cont_eval_parse_aiff_header_bb2_in(D,V__num_samples,V__samp_freq,V__num_channels,B):2
     [V_2>=1,D=3,C=3] 
* CE 28: eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) = 1+ eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_2,C,V__num_samples,V__samp_freq,V__num_channels):3+ loop_cont_eval_parse_aiff_header_bb2_in(D,V__num_samples,V__samp_freq,V__num_channels,B):3
     [0>=V_2,D=4,C=4] 
* CE 29: eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) = 1+ eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_2,C,V__num_samples,V__samp_freq,V__num_channels):4+ loop_cont_eval_parse_aiff_header_bb2_in(D,V__num_samples,V__samp_freq,V__num_channels,B):3
     [V_2>=1,D=4,C=4] 
* CE 30: eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) = 1+ eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_2,C,D,E,F):5
     [V_2>=1] 

### Cost equations --> "Loop" of eval_parse_aiff_header_4/5 
* CEs [30] --> Loop 21 
* CEs [25,26,27,28,29] --> Loop 22 

#### Loops of eval_parse_aiff_header_4/5 
* Loop 21: eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) [V_2>=1] 
* Loop 22: eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) [] 

### Ranking functions of CR eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) 

#### Partial ranking functions of CR eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) 


### Resulting Chains:eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B) 
* [22]
* [21]...


### Merging Chains  eval_parse_aiff_header_4/5 into  External patterns of execution 
* [[22]] --> 1 
* [[21]] --> 2 


### Specialization of cost equations eval_parse_aiff_header_start/4 
* CE 2 is refined into CE [31,32] 


#### Refined cost equations eval_parse_aiff_header_start/4 
* CE 31: eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B) = 0+ eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,C,B):1
     [] 
* CE 32: eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B) = 0+ eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,C,B):2
     [C>=1] 

### Cost equations --> "Loop" of eval_parse_aiff_header_start/4 
* CEs [32] --> Loop 23 
* CEs [31] --> Loop 24 

#### Loops of eval_parse_aiff_header_start/4 
* Loop 23: eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B) [] 
* Loop 24: eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B) [] 

### Ranking functions of CR eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B) 

#### Partial ranking functions of CR eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B) 


### Resulting Chains:eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B) 
* [24]
* [23]...


### Merging Chains  eval_parse_aiff_header_start/4 into  External patterns of execution 
* [[24]] --> 1 
* [[23]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [12] 

 * loop 12:eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) -> [eval_parse_aiff_header_bb2_in(V__num_samples',V__samp_freq',V__num_channels',V_chunkSize_0',B',C',D',E')] 
1
#### Cost of phase [12]:eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) -> [eval_parse_aiff_header_bb2_in(V__num_samples',V__samp_freq',V__num_channels',V_chunkSize_0',B',C',D',E')] 
1*it(12)+0
#### Cost of phase [12]:eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) -> [eval_parse_aiff_header_bb2_in(V__num_samples',V__samp_freq',V__num_channels',V_chunkSize_0',B',C',D',E')] 
1*it(12)+0
#### Cost of phase [12]:eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) -> [eval_parse_aiff_header_bb2_in(V__num_samples',V__samp_freq',V__num_channels',V_chunkSize_0',B',C',D',E')] 
1*it(12)+0
#### Cost of phase [12]:eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E) -> [eval_parse_aiff_header_bb2_in(V__num_samples',V__samp_freq',V__num_channels',V_chunkSize_0',B',C',D',E')] 
1*it(12)+0
#### Cost of chains of eval_parse_aiff_header_bb2_in(V__num_samples,V__samp_freq,V__num_channels,V_chunkSize_0,B,C,D,E):
* Chain [[12]]...: 1*it(12)+0
  with precondition: [V_chunkSize_0>=1] 

* Chain [[12],15]: 1*it(12)+0
  with precondition: [B=2,V_chunkSize_0>=1] 

* Chain [[12],14]: 1*it(12)+0
  with precondition: [B=3,V__num_samples=C,V__samp_freq=D,V__num_channels=E,V_chunkSize_0>=1] 

* Chain [[12],13]: 1*it(12)+0
  with precondition: [B=4,V__num_samples=C,V__samp_freq=D,V__num_channels=E,V_chunkSize_0>=1] 

* Chain [15]: 0
  with precondition: [B=2,V_chunkSize_0>=1] 

* Chain [14]: 0
  with precondition: [B=3,C=V__num_samples,D=V__samp_freq,E=V__num_channels,V_chunkSize_0>=1] 

* Chain [13]: 0
  with precondition: [B=4,C=V__num_samples,D=V__samp_freq,E=V__num_channels,0>=V_chunkSize_0] 


#### Cost of chains of eval_parse_aiff_header_bb8_in(V__num_samples,V__samp_freq,V__num_channels,B):
* Chain [16]: 0
  with precondition: [] 


#### Cost of chains of eval_parse_aiff_header_37(V__num_samples,V__samp_freq,V__num_channels,B):
* Chain [17]: 0
  with precondition: [] 


#### Cost of chains of loop_cont_eval_parse_aiff_header_bb2_in(E,A,B,C,D):
* Chain [20]: 0
  with precondition: [E=2] 

* Chain [19]: 0
  with precondition: [E=3] 

* Chain [18]: 0
  with precondition: [E=4] 


#### Cost of chains of eval_parse_aiff_header_4(V__num_samples,V__samp_freq,V__num_channels,V_2,B):
* Chain [22]: 1*aux(3)+0
  with precondition: [] 

* Chain [21]...: 1*s(6)+1
  with precondition: [V_2>=1] 


#### Cost of chains of eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B):
* Chain [24]: 1*s(7)+0
  with precondition: [] 

* Chain [23]...: 1*s(8)+1
  with precondition: [] 


Closed-form bounds of eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B): 
-------------------------------------
* Chain [24] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [23]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_parse_aiff_header_start(V__num_samples,V__samp_freq,V__num_channels,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 59 ms.
* Invariants computed in 12 ms.
   - Backward Invariants 9 ms.
   - Transitive Invariants 1 ms.
* Refinement performed in 32 ms.
* Termination proved in 2 ms.
* Upper bounds computed in 21 ms.
   - Equation cost structures 7 ms.
   - Phase cost structures 2 ms.
   - Chain cost structures 9 ms.
   - Solving cost expressions 1 ms.
* Total analysis performed in 181 ms.

