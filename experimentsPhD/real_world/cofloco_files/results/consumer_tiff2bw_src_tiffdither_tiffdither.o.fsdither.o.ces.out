Warning: Ignored call to eval_fsdither_stop/1 in equation eval_fsdither_bb24_in/1 

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_fsdither_bb1_in/15]
1. non_recursive  : [eval_fsdither_bb24_in/1]
2. recursive  : [eval_fsdither_bb5_in/17]
3. recursive  : [eval_fsdither_bb11_in/21,eval_fsdither_bb13_in/22,eval_fsdither_bb15_in/22,eval_fsdither_bb18_in/22,eval_fsdither_bb20_in/22,eval_fsdither_bb8_in/20]
4. recursive  : [eval_fsdither_30/11,eval_fsdither_31/11,eval_fsdither_39/12,eval_fsdither_40/12,eval_fsdither_95/14,eval_fsdither_96/14,eval_fsdither_bb3_in/11,loop_cont_eval_fsdither_bb5_in/13,loop_cont_eval_fsdither_bb8_in/15]
5. non_recursive  : [eval_fsdither_103/1]
6. non_recursive  : [eval_fsdither_102/4]
7. non_recursive  : [eval_fsdither_101/4]
8. non_recursive  : [eval_fsdither_100/4]
9. non_recursive  : [eval_fsdither_99/4]
10. non_recursive  : [eval_fsdither_bb23_in/4]
11. non_recursive  : [loop_cont_eval_fsdither_bb3_in/5]
12. non_recursive  : [loop_cont_eval_fsdither_bb1_in/9]
13. non_recursive  : [eval_fsdither_19/7]
14. non_recursive  : [eval_fsdither_18/7]
15. non_recursive  : [eval_fsdither_17/7]
16. non_recursive  : [eval_fsdither_16/6]
17. non_recursive  : [eval_fsdither_15/7]
18. non_recursive  : [eval_fsdither_11/6]
19. non_recursive  : [eval_fsdither_10/7]
20. non_recursive  : [eval_fsdither_6/6]
21. non_recursive  : [eval_fsdither_5/7]
22. non_recursive  : [eval_fsdither_4/6]
23. non_recursive  : [eval_fsdither_bb0_in/4]
24. non_recursive  : [eval_fsdither_start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_fsdither_bb1_in/15
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_fsdither_bb5_in/17
3. SCC is partially evaluated into eval_fsdither_bb8_in/20
4. SCC is partially evaluated into eval_fsdither_bb3_in/11
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into loop_cont_eval_fsdither_bb1_in/9
13. SCC is partially evaluated into eval_fsdither_19/7
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_fsdither_start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_fsdither_bb1_in/15 
* CE 6 is refined into CE [24] 
* CE 5 is refined into CE [25] 


#### Refined cost equations eval_fsdither_bb1_in/15 
* CE 24: eval_fsdither_bb1_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,I) = 0
     [G>=B,G>=0,I=1,H=5] 
* CE 25: eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_j_0,B,C,D,E,F,G,H,I) = 1+ eval_fsdither_bb1_in(J,K,L,V_1,V_3,V_18,M,B,C,D,E,F,G,H,I)
     [V__imagewidth>=V_j_0+1,V_j_0>=0,V_j_0+1=M] 

### Cost equations --> "Loop" of eval_fsdither_bb1_in/15 
* CEs [25] --> Loop 19 
* CEs [24] --> Loop 20 

#### Loops of eval_fsdither_bb1_in/15 
* Loop 19: eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_j_0,B,C,D,E,F,G,H,I)->  eval_fsdither_bb1_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_j_0',B,C,D,E,F,G,H,I)
                  [V__imagewidth>=V_j_0+1,V_j_0>=0,V_j_0+1=V_j_0'] 
* Loop 20: eval_fsdither_bb1_in(A,B,C,D,E,F,G,H,A,B,C,D,E,F,I) [G>=B,G>=0,I=1,H=5] 

### Ranking functions of CR eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_j_0,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_j_0,B,C,D,E,F,G,H,I) 


### Resulting Chains:eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_j_0,B,C,D,E,F,G,H,I) 
* [[19]]...
* [[19],20]
* [20]


### Merging Chains  eval_fsdither_bb1_in/15 into  External patterns of execution 
* [[20]] --> 1 
* [[20,[19]]] --> 2 
* [[[19]]] --> 3 


### Specialization of cost equations eval_fsdither_bb5_in/17 
* CE 19 is refined into CE [26] 
* CE 18 is refined into CE [27] 


#### Refined cost equations eval_fsdither_bb5_in/17 
* CE 26: eval_fsdither_bb5_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,G,H) = 0
     [H>=B,H>=0,I=2] 
* CE 27: eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,B,C,D,E,F,G,H,I,J) = 1+ eval_fsdither_bb5_in(K,L,M,V_1,V_3,V_18,V_i_0,N,O,C,D,E,F,G,H,I,J)
     [V__imagewidth>=V_j_1+1,V_j_1>=0,V_j_1+1=N,O=2,B=2] 

### Cost equations --> "Loop" of eval_fsdither_bb5_in/17 
* CEs [27] --> Loop 21 
* CEs [26] --> Loop 22 

#### Loops of eval_fsdither_bb5_in/17 
* Loop 21: eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,B,C,D,E,F,G,H,I,J)->  eval_fsdither_bb5_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_i_0,V_j_1',B',C,D,E,F,G,H,I,J)
                  [V__imagewidth>=V_j_1+1,V_j_1>=0,V_j_1+1=V_j_1',B'=2,B=2] 
* Loop 22: eval_fsdither_bb5_in(A,B,C,D,E,F,G,H,I,A,B,C,D,E,F,G,H) [H>=B,H>=0,I=2] 

### Ranking functions of CR eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,B,C,D,E,F,G,H,I,J) 


### Resulting Chains:eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,B,C,D,E,F,G,H,I,J) 
* [[21]]...
* [[21],22]
* [22]


### Merging Chains  eval_fsdither_bb5_in/17 into  External patterns of execution 
* [[22]] --> 1 
* [[22,[21]]] --> 2 
* [[[21]]] --> 3 


### Specialization of cost equations eval_fsdither_bb8_in/20 
* CE 23 is refined into CE [28] 
* CE 22 is refined into CE [29] 
* CE 21 is refined into CE [30] 
* CE 20 is refined into CE [31] 


#### Refined cost equations eval_fsdither_bb8_in/20 
* CE 28: eval_fsdither_bb8_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,G,H,I,K) = 0
     [I>=B,I>=0,G=K+1,J=3] 
* CE 29: eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) = 1+ eval_fsdither_bb8_in(M,N,O,V_1,V_3,V_18,V_i_0,V_j_1,P,Q,C,D,E,F,G,H,I,J,K,L)
     [V_3>=V_j_2+1,V__imagewidth>=V_j_2+1,V_j_2>=0,V_j_2+1=P,Q=3,B=3] 
* CE 30: eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) = 1+ eval_fsdither_bb8_in(M,N,O,V_1,V_3,V_18,V_i_0,V_j_1,P,Q,C,D,E,F,G,H,I,J,K,L)
     [V__imagewidth>=V_j_2+1,V_j_2>=V_3+1,V_j_2>=0,V_j_2+1=P,Q=3,B=3] 
* CE 31: eval_fsdither_bb8_in(A,B,C,D,E,F,G,H,E,I,J,K,L,M,N,O,P,Q,R,S) = 1+ eval_fsdither_bb8_in(T,U,V,D,E,F,G,H,W,X,J,K,L,M,N,O,P,Q,R,S)
     [B>=E+1,E>=0,E+1=W,X=3,I=3] 

### Cost equations --> "Loop" of eval_fsdither_bb8_in/20 
* CEs [29] --> Loop 23 
* CEs [30] --> Loop 24 
* CEs [31] --> Loop 25 
* CEs [28] --> Loop 26 

#### Loops of eval_fsdither_bb8_in/20 
* Loop 23: eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L)->  eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_i_0,V_j_1,V_j_2',B',C,D,E,F,G,H,I,J,K,L)
                  [V_3>=V_j_2+1,V__imagewidth>=V_j_2+1,V_j_2>=0,V_j_2+1=V_j_2',B'=3,B=3] 
* Loop 24: eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L)->  eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_i_0,V_j_1,V_j_2',B',C,D,E,F,G,H,I,J,K,L)
                  [V__imagewidth>=V_j_2+1,V_j_2>=V_3+1,V_j_2>=0,V_j_2+1=V_j_2',B'=3,B=3] 
* Loop 25: eval_fsdither_bb8_in(A,B,C,D,E,F,G,H,E,I,J,K,L,M,N,O,P,Q,R,S)->  eval_fsdither_bb8_in(A',B',C',D,E,F,G,H,D',E',J,K,L,M,N,O,P,Q,R,S)
                  [B>=E+1,E>=0,E+1=D',E'=3,I=3] 
* Loop 26: eval_fsdither_bb8_in(A,B,C,D,E,F,G,H,I,J,A,B,C,D,E,F,G,H,I,K) [I>=B,I>=0,G=K+1,J=3] 

### Ranking functions of CR eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) 
* RF of phase [23]: [V_3-V_j_2]

#### Partial ranking functions of CR eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    V_3-V_j_2


### Resulting Chains:eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) 
* [[24]]...
* [[24],26]
* [[23],26]
* [[23],25,[24]]...
* [[23],25,[24],26]
* [[23],25,26]
* [26]
* [25,[24]]...
* [25,[24],26]
* [25,26]


### Merging Chains  eval_fsdither_bb8_in/20 into  External patterns of execution 
* [[26]] --> 1 
* [[26,25]] --> 2 
* [[26,[24],25]] --> 3 
* [[26,25,[23]]] --> 4 
* [[26,[24]]] --> 5 
* [[26,[24],25,[23]]] --> 6 
* [[26,[23]]] --> 7 
* [[[24],25]] --> 8 
* [[[24],25,[23]]] --> 9 
* [[[24]]] --> 10 


### Specialization of cost equations eval_fsdither_bb3_in/11 
* CE 10 is refined into CE [32] 
* CE 13 is refined into CE [33,34,35,36,37,38,39,40,41,42,43,44] 
* CE 9 is refined into CE [45] 
* CE 12 is refined into CE [46,47,48,49,50,51,52,53,54,55,56,57] 
* CE 17 is refined into CE [58] 
* CE 8 is refined into CE [59] 
* CE 11 is refined into CE [60,61,62,63,64,65,66,67,68,69,70,71] 
* CE 16 is refined into CE [72,73,74,75,76,77,78,79,80,81,82,83] 
* CE 15 is refined into CE [84,85,86,87,88,89,90,91,92,93,94,95] 
* CE 14 is refined into CE [96,97,98,99,100,101,102,103,104,105,106,107] 


#### Refined cost equations eval_fsdither_bb3_in/11 
* CE 32: eval_fsdither_bb3_in(A,B,C,D,E,F,G,H,A,B,C) = 0
     [D>=G+1,C>=G+1,H=4] 
* CE 33: eval_fsdither_bb3_in(A,B,C,D,E,F,G,H,A,B,C) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,G,I,J,A,B,C,D,E,F,G,K):1+ eval_fsdither_bb8_in(A,B,C,D,E,F,G,L,M,N,A,B,C,D,E,F,G,O,P,Q):1
     [D>=G+1,C>=G+1,0>=B,G=Q+1,P=0,O=0,N=3,M=0,L=0,K=0,J=2,I=0,H=4] 
* CE 34: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,C,D,E,V_1,V_3,V_18,V_i_0,H):2+ eval_fsdither_bb8_in(C,D,E,V_1,V_3,V_18,V_i_0,H,I,J,C,D,E,V_1,V_3,V_18,V_i_0,H,K,L):1
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,H>=1,V__imagewidth>=1,0>=D,V_i_0=L+1,K=0,J=3,I=0,G=2,F=0,B=4] 
* CE 35: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,C,D,E,V_1,Q,V_18,V_i_0,M,R,S):2
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,M>=J,J>=1,V__imagewidth>=1,1>=D,V_i_0=S+1,R=1,Q=0,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 36: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,C,D,E,V_1,Q,V_18,V_i_0,M,R,S):3
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,R>=D,M>=J,R>=2,J>=1,V__imagewidth>=1,V_i_0=S+1,Q=0,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 37: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,V_1,V_3,V_18,V_i_0,K,N,O):4
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V_3+1>=D,K>=I,V_3>=1,I>=1,V__imagewidth>=1,V_i_0=O+1,V_3+1=N,M=3,L=0,G=2,F=0,B=4] 
* CE 38: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,V_1,V_3,V_18,V_i_0,K,N,O):5
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,N>=D,K>=I,N>=1,I>=1,V__imagewidth>=1,0>=V_3+1,V_i_0=O+1,M=3,L=0,G=2,F=0,B=4] 
* CE 39: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,V_1,V_3,V_18,V_i_0,K,N,O):6
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,N>=V_3+2,N>=D,K>=I,V_3>=1,I>=1,V__imagewidth>=1,V_i_0=O+1,M=3,L=0,G=2,F=0,B=4] 
* CE 40: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,V_1,V_3,V_18,V_i_0,K,N,O):7
     [V_3>=N,V_1>=V_i_0+1,V__imagelength>=V_i_0+1,N>=D,K>=I,N>=1,I>=1,V__imagewidth>=1,V_i_0=O+1,M=3,L=0,G=2,F=0,B=4] 
* CE 41: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,C,D,E,Q,R,S,T,U,V,W):8
     [M>=J,V_1>=V_i_0+1,V__imagelength>=V_i_0+1,J>=1,V__imagewidth>=1,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 42: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,N,O,P,Q,R,S,T):9
     [K>=I,V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V_3>=1,I>=1,V__imagewidth>=1,M=3,L=0,G=2,F=0,B=4] 
* CE 43: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,N,O,P,Q,R,S,T):10
     [K>=I,V_1>=V_i_0+1,V__imagelength>=V_i_0+1,I>=1,V__imagewidth>=1,0>=V_3+1,M=3,L=0,G=2,F=0,B=4] 
* CE 44: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,K,L,M,N,O):3
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,P=3,Q=0,G=2,F=0,B=4] 
* CE 45: eval_fsdither_bb3_in(A,B,C,D,E,F,G,H,A,B,C) = 0
     [C>=G+1,G>=D+1,H=4] 
* CE 46: eval_fsdither_bb3_in(A,B,C,D,E,F,G,H,A,B,C) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,G,I,J,A,B,C,D,E,F,G,K):1+ eval_fsdither_bb8_in(A,B,C,D,E,F,G,L,M,N,A,B,C,D,E,F,G,O,P,Q):1
     [C>=G+1,G>=D+1,0>=B,G=Q+1,P=0,O=0,N=3,M=0,L=0,K=0,J=2,I=0,H=4] 
* CE 47: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,C,D,E,V_1,V_3,V_18,V_i_0,H):2+ eval_fsdither_bb8_in(C,D,E,V_1,V_3,V_18,V_i_0,H,I,J,C,D,E,V_1,V_3,V_18,V_i_0,H,K,L):1
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,H>=1,V__imagewidth>=1,0>=D,V_i_0=L+1,K=0,J=3,I=0,G=2,F=0,B=4] 
* CE 48: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,C,D,E,V_1,Q,V_18,V_i_0,M,R,S):2
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,M>=J,J>=1,V__imagewidth>=1,1>=D,V_i_0=S+1,R=1,Q=0,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 49: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,C,D,E,V_1,Q,V_18,V_i_0,M,R,S):3
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,R>=D,M>=J,R>=2,J>=1,V__imagewidth>=1,V_i_0=S+1,Q=0,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 50: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,V_1,V_3,V_18,V_i_0,K,N,O):4
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V_3+1>=D,K>=I,V_3>=1,I>=1,V__imagewidth>=1,V_i_0=O+1,V_3+1=N,M=3,L=0,G=2,F=0,B=4] 
* CE 51: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,V_1,V_3,V_18,V_i_0,K,N,O):5
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,N>=D,K>=I,N>=1,I>=1,V__imagewidth>=1,0>=V_3+1,V_i_0=O+1,M=3,L=0,G=2,F=0,B=4] 
* CE 52: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,V_1,V_3,V_18,V_i_0,K,N,O):6
     [V__imagelength>=V_i_0+1,N>=V_3+2,V_i_0>=V_1+1,N>=D,K>=I,V_3>=1,I>=1,V__imagewidth>=1,V_i_0=O+1,M=3,L=0,G=2,F=0,B=4] 
* CE 53: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,V_1,V_3,V_18,V_i_0,K,N,O):7
     [V_3>=N,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,N>=D,K>=I,N>=1,I>=1,V__imagewidth>=1,V_i_0=O+1,M=3,L=0,G=2,F=0,B=4] 
* CE 54: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,C,D,E,Q,R,S,T,U,V,W):8
     [M>=J,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,J>=1,V__imagewidth>=1,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 55: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,N,O,P,Q,R,S,T):9
     [K>=I,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V_3>=1,I>=1,V__imagewidth>=1,M=3,L=0,G=2,F=0,B=4] 
* CE 56: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,C,D,E,N,O,P,Q,R,S,T):10
     [K>=I,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,I>=1,V__imagewidth>=1,0>=V_3+1,M=3,L=0,G=2,F=0,B=4] 
* CE 57: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 2+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,K,L,M,N,O):3
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,P=3,Q=0,G=2,F=0,B=4] 
* CE 58: eval_fsdither_bb3_in(A,B,C,D,E,F,G,H,A,B,C) = 0
     [G>=C,H=4] 
* CE 59: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,A,B,C) = 0
     [C>=D+1,G=4] 
* CE 60: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,A,B,C) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,H,I,A,B,C,D,E,F,D,J):1+ eval_fsdither_bb8_in(A,B,C,D,E,F,D,K,L,M,A,B,C,D,E,F,D,N,O,P):1
     [C>=D+1,0>=B,D=P+1,O=0,N=0,M=3,L=0,K=0,J=0,I=2,H=0,G=4] 
* CE 61: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,H,I,J,D,E,F,D,M):2+ eval_fsdither_bb8_in(H,I,J,D,E,F,D,M,N,O,H,I,J,D,E,F,D,M,P,Q):1
     [C>=D+1,M>=1,B>=1,0>=I,D=Q+1,P=0,O=3,N=0,L=2,K=0,G=4] 
* CE 62: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,K,F,D,L,M,N,O,P,D,Q,F,D,R):2+ eval_fsdither_bb8_in(N,O,P,D,S,F,D,R,T,U,H,I,J,D,V,F,D,R,W,X):2
     [C>=D+1,R>=O,O>=1,B>=1,1>=I,D=X+1,W=1,V=0,U=3,T=0,S=0,Q=0,M=2,L=0,K=0,G=4,E=0] 
* CE 63: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,K,F,D,L,M,N,O,P,D,Q,F,D,R):2+ eval_fsdither_bb8_in(N,O,P,D,S,F,D,R,T,U,H,I,J,D,V,F,D,R,W,X):3
     [C>=D+1,W>=I,R>=O,W>=2,O>=1,B>=1,D=X+1,V=0,U=3,T=0,S=0,Q=0,M=2,L=0,K=0,G=4,E=0] 
* CE 64: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,H,I,J,D,E,F,D,P,S,T):4
     [C>=D+1,E+1>=I,P>=N,E>=1,N>=1,B>=1,D=T+1,E+1=S,R=3,Q=0,L=2,K=0,G=4] 
* CE 65: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,H,I,J,D,E,F,D,P,S,T):5
     [C>=D+1,S>=I,P>=N,S>=1,N>=1,B>=1,0>=E+1,D=T+1,R=3,Q=0,L=2,K=0,G=4] 
* CE 66: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,H,I,J,D,E,F,D,P,S,T):6
     [S>=E+2,C>=D+1,S>=I,P>=N,E>=1,N>=1,B>=1,D=T+1,R=3,Q=0,L=2,K=0,G=4] 
* CE 67: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,H,I,J,D,E,F,D,P,S,T):7
     [E>=S,C>=D+1,S>=I,P>=N,S>=1,N>=1,B>=1,D=T+1,R=3,Q=0,L=2,K=0,G=4] 
* CE 68: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,K,F,D,L,M,N,O,P,D,Q,F,D,R):2+ eval_fsdither_bb8_in(N,O,P,D,S,F,D,R,T,U,H,I,J,V,W,X,Y,Z,A1,B1):8
     [R>=O,C>=D+1,O>=1,B>=1,U=3,T=0,S=0,Q=0,M=2,L=0,K=0,G=4,E=0] 
* CE 69: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,H,I,J,S,T,U,V,W,X,Y):9
     [P>=N,C>=D+1,E>=1,N>=1,B>=1,R=3,Q=0,L=2,K=0,G=4] 
* CE 70: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,H,I,J,S,T,U,V,W,X,Y):10
     [P>=N,C>=D+1,N>=1,B>=1,0>=E+1,R=3,Q=0,L=2,K=0,G=4] 
* CE 71: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 2+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,P,Q,R,S,T):3
     [C>=D+1,B>=1,U=3,V=0,L=2,K=0,G=4] 
* CE 72: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,H):1+ eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,I,J,K,V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,L,M,N):1+ eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,O,P,C,D,E)
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,0>=V__imagewidth,V_i_0+1=O,V_i_0=N+1,P=4,M=0,L=0,K=3,J=0,I=0,H=0,G=2,F=0,B=4] 
* CE 73: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,H,I,J,V_1,V_3,V_18,V_i_0,K,N,O):1+ eval_fsdither_bb3_in(H,I,J,V_1,V_3,V_18,P,Q,C,D,E)
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,K>=1,V__imagewidth>=1,0>=I,V_i_0+1=P,V_i_0=O+1,Q=4,N=0,M=3,L=0,G=2,F=0,B=4] 
* CE 74: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,Q,R,S,V_1,T,V_18,V_i_0,M,U,V):2+ eval_fsdither_bb3_in(Q,R,S,V_1,W,V_18,X,Y,C,D,E)
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,M>=J,J>=1,V__imagewidth>=1,1>=R,V_i_0+1=X,V_i_0=V+1,Y=4,W=0,U=1,T=0,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 75: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,Q,R,S,V_1,T,V_18,V_i_0,M,U,V):3+ eval_fsdither_bb3_in(Q,R,S,V_1,W,V_18,X,Y,C,D,E)
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,U>=R,M>=J,U>=2,J>=1,V__imagewidth>=1,V_i_0+1=X,V_i_0=V+1,Y=4,W=0,T=0,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 76: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,V_1,V_3,V_18,V_i_0,K,Q,R):4+ eval_fsdither_bb3_in(N,O,P,V_1,V_3,V_18,S,T,C,D,E)
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V_3+1>=O,K>=I,V_3>=1,I>=1,V__imagewidth>=1,V_i_0+1=S,V_i_0=R+1,V_3+1=Q,T=4,M=3,L=0,G=2,F=0,B=4] 
* CE 77: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,V_1,V_3,V_18,V_i_0,K,Q,R):5+ eval_fsdither_bb3_in(N,O,P,V_1,V_3,V_18,S,T,C,D,E)
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,Q>=O,K>=I,Q>=1,I>=1,V__imagewidth>=1,0>=V_3+1,V_i_0+1=S,V_i_0=R+1,T=4,M=3,L=0,G=2,F=0,B=4] 
* CE 78: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,V_1,V_3,V_18,V_i_0,K,Q,R):6+ eval_fsdither_bb3_in(N,O,P,V_1,V_3,V_18,S,T,C,D,E)
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,Q>=V_3+2,Q>=O,K>=I,V_3>=1,I>=1,V__imagewidth>=1,V_i_0+1=S,V_i_0=R+1,T=4,M=3,L=0,G=2,F=0,B=4] 
* CE 79: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,V_1,V_3,V_18,V_i_0,K,Q,R):7+ eval_fsdither_bb3_in(N,O,P,V_1,V_3,V_18,S,T,C,D,E)
     [V_3>=Q,V_1>=V_i_0+1,V__imagelength>=V_i_0+1,Q>=O,K>=I,Q>=1,I>=1,V__imagewidth>=1,V_i_0+1=S,V_i_0=R+1,T=4,M=3,L=0,G=2,F=0,B=4] 
* CE 80: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,Q,R,S,T,U,V,W,X,Y,Z):8
     [M>=J,V_1>=V_i_0+1,V__imagelength>=V_i_0+1,J>=1,V__imagewidth>=1,A1=W+1,B1=4,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 81: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,Q,R,S,T,U,V,W):9
     [K>=I,V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V_3>=1,I>=1,V__imagewidth>=1,X=T+1,Y=4,M=3,L=0,G=2,F=0,B=4] 
* CE 82: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,Q,R,S,T,U,V,W):10
     [K>=I,V_1>=V_i_0+1,V__imagelength>=V_i_0+1,I>=1,V__imagewidth>=1,0>=V_3+1,X=T+1,Y=4,M=3,L=0,G=2,F=0,B=4] 
* CE 83: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,K,L,M,N,O):3
     [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,P=Q+1,R=4,S=3,T=0,G=2,F=0,B=4] 
* CE 84: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,H):1+ eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,I,J,K,V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,L,M,N):1+ eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,O,P,C,D,E)
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,0>=V__imagewidth,V_i_0+1=O,V_i_0=N+1,P=4,M=0,L=0,K=3,J=0,I=0,H=0,G=2,F=0,B=4] 
* CE 85: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,H,I,J,V_1,V_3,V_18,V_i_0,K,N,O):1+ eval_fsdither_bb3_in(H,I,J,V_1,V_3,V_18,P,Q,C,D,E)
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,K>=1,V__imagewidth>=1,0>=I,V_i_0+1=P,V_i_0=O+1,Q=4,N=0,M=3,L=0,G=2,F=0,B=4] 
* CE 86: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,Q,R,S,V_1,T,V_18,V_i_0,M,U,V):2+ eval_fsdither_bb3_in(Q,R,S,V_1,W,V_18,X,Y,C,D,E)
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,M>=J,J>=1,V__imagewidth>=1,1>=R,V_i_0+1=X,V_i_0=V+1,Y=4,W=0,U=1,T=0,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 87: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,Q,R,S,V_1,T,V_18,V_i_0,M,U,V):3+ eval_fsdither_bb3_in(Q,R,S,V_1,W,V_18,X,Y,C,D,E)
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,U>=R,M>=J,U>=2,J>=1,V__imagewidth>=1,V_i_0+1=X,V_i_0=V+1,Y=4,W=0,T=0,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 88: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,V_1,V_3,V_18,V_i_0,K,Q,R):4+ eval_fsdither_bb3_in(N,O,P,V_1,V_3,V_18,S,T,C,D,E)
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V_3+1>=O,K>=I,V_3>=1,I>=1,V__imagewidth>=1,V_i_0+1=S,V_i_0=R+1,V_3+1=Q,T=4,M=3,L=0,G=2,F=0,B=4] 
* CE 89: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,V_1,V_3,V_18,V_i_0,K,Q,R):5+ eval_fsdither_bb3_in(N,O,P,V_1,V_3,V_18,S,T,C,D,E)
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,Q>=O,K>=I,Q>=1,I>=1,V__imagewidth>=1,0>=V_3+1,V_i_0+1=S,V_i_0=R+1,T=4,M=3,L=0,G=2,F=0,B=4] 
* CE 90: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,V_1,V_3,V_18,V_i_0,K,Q,R):6+ eval_fsdither_bb3_in(N,O,P,V_1,V_3,V_18,S,T,C,D,E)
     [V__imagelength>=V_i_0+1,Q>=V_3+2,V_i_0>=V_1+1,Q>=O,K>=I,V_3>=1,I>=1,V__imagewidth>=1,V_i_0+1=S,V_i_0=R+1,T=4,M=3,L=0,G=2,F=0,B=4] 
* CE 91: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,V_1,V_3,V_18,V_i_0,K,Q,R):7+ eval_fsdither_bb3_in(N,O,P,V_1,V_3,V_18,S,T,C,D,E)
     [V_3>=Q,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,Q>=O,K>=I,Q>=1,I>=1,V__imagewidth>=1,V_i_0+1=S,V_i_0=R+1,T=4,M=3,L=0,G=2,F=0,B=4] 
* CE 92: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,F,V_18,V_i_0,G,H,I,J,K,V_1,L,V_18,V_i_0,M):2+ eval_fsdither_bb8_in(I,J,K,V_1,N,V_18,V_i_0,M,O,P,Q,R,S,T,U,V,W,X,Y,Z):8
     [M>=J,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,J>=1,V__imagewidth>=1,A1=W+1,B1=4,P=3,O=0,N=0,L=0,H=2,G=0,F=0,B=4,V_3=0] 
* CE 93: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,Q,R,S,T,U,V,W):9
     [K>=I,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V_3>=1,I>=1,V__imagewidth>=1,X=T+1,Y=4,M=3,L=0,G=2,F=0,B=4] 
* CE 94: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,V_1,V_3,V_18,V_i_0,K):2+ eval_fsdither_bb8_in(H,I,J,V_1,V_3,V_18,V_i_0,K,L,M,N,O,P,Q,R,S,T,U,V,W):10
     [K>=I,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,I>=1,V__imagewidth>=1,0>=V_3+1,X=T+1,Y=4,M=3,L=0,G=2,F=0,B=4] 
* CE 95: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) = 3+ eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,F,G,H,I,J,K,L,M,N,O):3
     [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,P=Q+1,R=4,S=3,T=0,G=2,F=0,B=4] 
* CE 96: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,A,B,C,D,E,F,D,M):1+ eval_fsdither_bb8_in(A,B,C,D,E,F,D,N,O,P,A,B,C,D,E,F,D,Q,R,S):1+ eval_fsdither_bb3_in(A,B,C,D,E,F,T,U,H,I,J)
     [C>=D+1,0>=B,D+1=T,D=S+1,U=4,R=0,Q=0,P=3,O=0,N=0,M=0,L=2,K=0,G=4] 
* CE 97: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,M,N,O,D,E,F,D,P,S,T):1+ eval_fsdither_bb3_in(M,N,O,D,E,F,U,V,H,I,J)
     [C>=D+1,P>=1,B>=1,0>=N,D+1=U,D=T+1,V=4,S=0,R=3,Q=0,L=2,K=0,G=4] 
* CE 98: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,K,F,D,L,M,N,O,P,D,Q,F,D,R):2+ eval_fsdither_bb8_in(N,O,P,D,S,F,D,R,T,U,V,W,X,D,Y,F,D,R,Z,A1):2+ eval_fsdither_bb3_in(V,W,X,D,B1,F,C1,D1,H,I,J)
     [C>=D+1,R>=O,O>=1,B>=1,1>=W,D+1=C1,D=A1+1,D1=4,B1=0,Z=1,Y=0,U=3,T=0,S=0,Q=0,M=2,L=0,K=0,G=4,E=0] 
* CE 99: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,K,F,D,L,M,N,O,P,D,Q,F,D,R):2+ eval_fsdither_bb8_in(N,O,P,D,S,F,D,R,T,U,V,W,X,D,Y,F,D,R,Z,A1):3+ eval_fsdither_bb3_in(V,W,X,D,B1,F,C1,D1,H,I,J)
     [C>=D+1,Z>=W,R>=O,Z>=2,O>=1,B>=1,D+1=C1,D=A1+1,D1=4,B1=0,Y=0,U=3,T=0,S=0,Q=0,M=2,L=0,K=0,G=4,E=0] 
* CE 100: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,S,T,U,D,E,F,D,P,V,W):4+ eval_fsdither_bb3_in(S,T,U,D,E,F,X,Y,H,I,J)
     [C>=D+1,E+1>=T,P>=N,E>=1,N>=1,B>=1,D+1=X,D=W+1,E+1=V,Y=4,R=3,Q=0,L=2,K=0,G=4] 
* CE 101: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,S,T,U,D,E,F,D,P,V,W):5+ eval_fsdither_bb3_in(S,T,U,D,E,F,X,Y,H,I,J)
     [C>=D+1,V>=T,P>=N,V>=1,N>=1,B>=1,0>=E+1,D+1=X,D=W+1,Y=4,R=3,Q=0,L=2,K=0,G=4] 
* CE 102: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,S,T,U,D,E,F,D,P,V,W):6+ eval_fsdither_bb3_in(S,T,U,D,E,F,X,Y,H,I,J)
     [V>=E+2,C>=D+1,V>=T,P>=N,E>=1,N>=1,B>=1,D+1=X,D=W+1,Y=4,R=3,Q=0,L=2,K=0,G=4] 
* CE 103: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,S,T,U,D,E,F,D,P,V,W):7+ eval_fsdither_bb3_in(S,T,U,D,E,F,X,Y,H,I,J)
     [E>=V,C>=D+1,V>=T,P>=N,V>=1,N>=1,B>=1,D+1=X,D=W+1,Y=4,R=3,Q=0,L=2,K=0,G=4] 
* CE 104: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,K,F,D,L,M,N,O,P,D,Q,F,D,R):2+ eval_fsdither_bb8_in(N,O,P,D,S,F,D,R,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1):8
     [R>=O,C>=D+1,O>=1,B>=1,F1=B1+1,G1=4,U=3,T=0,S=0,Q=0,M=2,L=0,K=0,G=4,E=0] 
* CE 105: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):9
     [P>=N,C>=D+1,E>=1,N>=1,B>=1,C1=Y+1,D1=4,R=3,Q=0,L=2,K=0,G=4] 
* CE 106: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,D,E,F,D,P):2+ eval_fsdither_bb8_in(M,N,O,D,E,F,D,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1):10
     [P>=N,C>=D+1,N>=1,B>=1,0>=E+1,C1=Y+1,D1=4,R=3,Q=0,L=2,K=0,G=4] 
* CE 107: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) = 3+ eval_fsdither_bb5_in(A,B,C,D,E,F,D,K,L,M,N,O,P,Q,R,S,T):3
     [C>=D+1,B>=1,U=V+1,W=4,X=3,Y=0,L=2,K=0,G=4] 

### Cost equations --> "Loop" of eval_fsdither_bb3_in/11 
* CEs [42,81] --> Loop 27 
* CEs [55,93] --> Loop 28 
* CEs [43,82] --> Loop 29 
* CEs [56,94] --> Loop 30 
* CEs [69,105] --> Loop 31 
* CEs [70,106] --> Loop 32 
* CEs [41,44,80,83] --> Loop 33 
* CEs [54,57,92,95] --> Loop 34 
* CEs [68,71,104,107] --> Loop 35 
* CEs [88,90,91] --> Loop 36 
* CEs [85] --> Loop 37 
* CEs [89] --> Loop 38 
* CEs [84] --> Loop 39 
* CEs [76,78,79] --> Loop 40 
* CEs [73] --> Loop 41 
* CEs [77] --> Loop 42 
* CEs [72] --> Loop 43 
* CEs [100,102,103] --> Loop 44 
* CEs [97] --> Loop 45 
* CEs [101] --> Loop 46 
* CEs [96] --> Loop 47 
* CEs [86,87] --> Loop 48 
* CEs [74,75] --> Loop 49 
* CEs [98,99] --> Loop 50 
* CEs [37,39,40] --> Loop 51 
* CEs [50,52,53] --> Loop 52 
* CEs [34] --> Loop 53 
* CEs [47] --> Loop 54 
* CEs [38] --> Loop 55 
* CEs [51] --> Loop 56 
* CEs [58] --> Loop 57 
* CEs [32,33] --> Loop 58 
* CEs [45,46] --> Loop 59 
* CEs [64,66,67] --> Loop 60 
* CEs [61] --> Loop 61 
* CEs [65] --> Loop 62 
* CEs [59,60] --> Loop 63 
* CEs [35,36] --> Loop 64 
* CEs [48,49] --> Loop 65 
* CEs [62,63] --> Loop 66 

#### Loops of eval_fsdither_bb3_in/11 
* Loop 27: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V_3>=1,V__imagewidth>=1,B=4] 
* Loop 28: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V_3>=1,V__imagewidth>=1,B=4] 
* Loop 29: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,0>=V_3+1,B=4] 
* Loop 30: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,0>=V_3+1,B=4] 
* Loop 31: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) [C>=D+1,E>=1,B>=1,G=4] 
* Loop 32: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) [C>=D+1,B>=1,0>=E+1,G=4] 
* Loop 33: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,B=4] 
* Loop 34: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,B=4] 
* Loop 35: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) [C>=D+1,B>=1,G=4] 
* Loop 36: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_i_0',B',C,D,E)
                  [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V_3>=1,V__imagewidth>=1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 37: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_i_0',B',C,D,E)
                  [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,0>=V__imagewidth',V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 38: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_i_0',B',C,D,E)
                  [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,0>=V_3+1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 39: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0',B',C,D,E)
                  [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,0>=V__imagewidth,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 40: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_i_0',B',C,D,E)
                  [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V_3>=1,V__imagewidth>=1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 41: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_i_0',B',C,D,E)
                  [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,0>=V__imagewidth',V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 42: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3,V_18,V_i_0',B',C,D,E)
                  [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,0>=V_3+1,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 43: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0',B',C,D,E)
                  [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,0>=V__imagewidth,V_i_0+1=V_i_0',B'=4,B=4] 
* Loop 44: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J)->  eval_fsdither_bb3_in(A',B',C',D,E,F,D',E',H,I,J)
                  [C>=D+1,E>=1,B>=1,D+1=D',E'=4,G=4] 
* Loop 45: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J)->  eval_fsdither_bb3_in(A',B',C',D,E,F,D',E',H,I,J)
                  [C>=D+1,B>=1,0>=B',D+1=D',E'=4,G=4] 
* Loop 46: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J)->  eval_fsdither_bb3_in(A',B',C',D,E,F,D',E',H,I,J)
                  [C>=D+1,B>=1,0>=E+1,D+1=D',E'=4,G=4] 
* Loop 47: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J)->  eval_fsdither_bb3_in(A,B,C,D,E,F,A',B',H,I,J)
                  [C>=D+1,0>=B,D+1=A',B'=4,G=4] 
* Loop 48: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3',V_18,V_i_0',B',C,D,E)
                  [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,V_i_0+1=V_i_0',B'=4,V_3'=0,B=4,V_3=0] 
* Loop 49: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E)->  eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1,V_3',V_18,V_i_0',B',C,D,E)
                  [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,V_i_0+1=V_i_0',B'=4,V_3'=0,B=4,V_3=0] 
* Loop 50: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J)->  eval_fsdither_bb3_in(A',B',C',D,D',F,E',F',H,I,J)
                  [C>=D+1,B>=1,D+1=E',F'=4,D'=0,G=4,E=0] 
* Loop 51: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V_3>=1,V__imagewidth>=1,B=4] 
* Loop 52: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V_3>=1,V__imagewidth>=1,B=4] 
* Loop 53: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,0>=D,B=4] 
* Loop 54: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,0>=D,B=4] 
* Loop 55: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,0>=V_3+1,B=4] 
* Loop 56: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,0>=V_3+1,B=4] 
* Loop 57: eval_fsdither_bb3_in(A,B,C,D,E,F,G,H,A,B,C) [G>=C,H=4] 
* Loop 58: eval_fsdither_bb3_in(A,B,C,D,E,F,G,H,A,B,C) [D>=G+1,C>=G+1,H=4] 
* Loop 59: eval_fsdither_bb3_in(A,B,C,D,E,F,G,H,A,B,C) [C>=G+1,G>=D+1,H=4] 
* Loop 60: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) [C>=D+1,E>=1,B>=1,G=4] 
* Loop 61: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) [C>=D+1,B>=1,0>=I,G=4] 
* Loop 62: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) [C>=D+1,B>=1,0>=E+1,G=4] 
* Loop 63: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,A,B,C) [C>=D+1,G=4] 
* Loop 64: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V_1>=V_i_0+1,V__imagelength>=V_i_0+1,V__imagewidth>=1,B=4,V_3=0] 
* Loop 65: eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) [V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V__imagewidth>=1,B=4,V_3=0] 
* Loop 66: eval_fsdither_bb3_in(A,B,C,D,E,F,D,G,H,I,J) [C>=D+1,B>=1,G=4,E=0] 

### Ranking functions of CR eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) 
* RF of phase [39]: [V__imagelength-V_i_0]
* RF of phase [40]: [V_1-V_i_0]
* RF of phase [42]: [V_1-V_i_0]
* RF of phase [43]: [V_1-V_i_0,V__imagelength-V_i_0]
* RF of phase [49]: [V_1-V_i_0]

#### Partial ranking functions of CR eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) 
* Partial RF of phase [39]:
  - RF of loop [39:1]:
    V__imagelength-V_i_0
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    V_1-V_i_0
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    V_1-V_i_0
* Partial RF of phase [43]:
  - RF of loop [43:1]:
    V_1-V_i_0
    V__imagelength-V_i_0
* Partial RF of phase [49]:
  - RF of loop [49:1]:
    V_1-V_i_0


### Resulting Chains:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) 
* [[49],[43],63]
* [[49],[43],58]
* [[49],[43],57]
* [[49],[43],47,[39],59]
* [[49],[43],47,[39],57]
* [[49],[43],47,59]
* [[49],[43],47,57]
* [[49],66]
* [[49],64]
* [[49],63]
* [[49],61]
* [[49],58]
* [[49],57]
* [[49],53]
* [[49],50,[48]]...
* [[49],50,[48],[39],59]
* [[49],50,[48],[39],57]
* [[49],50,[48],65]
* [[49],50,[48],59]
* [[49],50,[48],57]
* [[49],50,[48],54]
* [[49],50,[48],37,[39],59]
* [[49],50,[48],37,[39],57]
* [[49],50,[48],37,59]
* [[49],50,[48],37,57]
* [[49],50,[48],34]...
* [[49],50,[39],59]
* [[49],50,[39],57]
* [[49],50,65]
* [[49],50,59]
* [[49],50,57]
* [[49],50,54]
* [[49],50,37,[39],59]
* [[49],50,37,[39],57]
* [[49],50,37,59]
* [[49],50,37,57]
* [[49],50,34]...
* [[49],47,[39],59]
* [[49],47,[39],57]
* [[49],47,59]
* [[49],47,57]
* [[49],45,[39],59]
* [[49],45,[39],57]
* [[49],45,59]
* [[49],45,57]
* [[49],41,[43],63]
* [[49],41,[43],58]
* [[49],41,[43],57]
* [[49],41,[43],47,[39],59]
* [[49],41,[43],47,[39],57]
* [[49],41,[43],47,59]
* [[49],41,[43],47,57]
* [[49],41,63]
* [[49],41,58]
* [[49],41,57]
* [[49],41,47,[39],59]
* [[49],41,47,[39],57]
* [[49],41,47,59]
* [[49],41,47,57]
* [[49],35]...
* [[49],33]...
* [[48]]...
* [[48],[39],59]
* [[48],[39],57]
* [[48],65]
* [[48],59]
* [[48],57]
* [[48],54]
* [[48],37,[39],59]
* [[48],37,[39],57]
* [[48],37,59]
* [[48],37,57]
* [[48],34]...
* [[43],63]
* [[43],58]
* [[43],57]
* [[43],47,[39],59]
* [[43],47,[39],57]
* [[43],47,59]
* [[43],47,57]
* [[42],[43],63]
* [[42],[43],58]
* [[42],[43],57]
* [[42],[43],47,[39],59]
* [[42],[43],47,[39],57]
* [[42],[43],47,59]
* [[42],[43],47,57]
* [[42],63]
* [[42],62]
* [[42],61]
* [[42],58]
* [[42],57]
* [[42],55]
* [[42],53]
* [[42],47,[39],59]
* [[42],47,[39],57]
* [[42],47,59]
* [[42],47,57]
* [[42],46,[39],59]
* [[42],46,[39],57]
* [[42],46,[38]]...
* [[42],46,[38],[39],59]
* [[42],46,[38],[39],57]
* [[42],46,[38],59]
* [[42],46,[38],57]
* [[42],46,[38],56]
* [[42],46,[38],54]
* [[42],46,[38],37,[39],59]
* [[42],46,[38],37,[39],57]
* [[42],46,[38],37,59]
* [[42],46,[38],37,57]
* [[42],46,[38],34]...
* [[42],46,[38],30]...
* [[42],46,59]
* [[42],46,57]
* [[42],46,56]
* [[42],46,54]
* [[42],46,37,[39],59]
* [[42],46,37,[39],57]
* [[42],46,37,59]
* [[42],46,37,57]
* [[42],46,34]...
* [[42],46,30]...
* [[42],45,[39],59]
* [[42],45,[39],57]
* [[42],45,59]
* [[42],45,57]
* [[42],41,[43],63]
* [[42],41,[43],58]
* [[42],41,[43],57]
* [[42],41,[43],47,[39],59]
* [[42],41,[43],47,[39],57]
* [[42],41,[43],47,59]
* [[42],41,[43],47,57]
* [[42],41,63]
* [[42],41,58]
* [[42],41,57]
* [[42],41,47,[39],59]
* [[42],41,47,[39],57]
* [[42],41,47,59]
* [[42],41,47,57]
* [[42],35]...
* [[42],33]...
* [[42],32]...
* [[42],29]...
* [[40],[43],63]
* [[40],[43],58]
* [[40],[43],57]
* [[40],[43],47,[39],59]
* [[40],[43],47,[39],57]
* [[40],[43],47,59]
* [[40],[43],47,57]
* [[40],63]
* [[40],61]
* [[40],60]
* [[40],58]
* [[40],57]
* [[40],53]
* [[40],51]
* [[40],47,[39],59]
* [[40],47,[39],57]
* [[40],47,59]
* [[40],47,57]
* [[40],45,[39],59]
* [[40],45,[39],57]
* [[40],45,59]
* [[40],45,57]
* [[40],44,[39],59]
* [[40],44,[39],57]
* [[40],44,[36]]...
* [[40],44,[36],[39],59]
* [[40],44,[36],[39],57]
* [[40],44,[36],59]
* [[40],44,[36],57]
* [[40],44,[36],54]
* [[40],44,[36],52]
* [[40],44,[36],37,[39],59]
* [[40],44,[36],37,[39],57]
* [[40],44,[36],37,59]
* [[40],44,[36],37,57]
* [[40],44,[36],34]...
* [[40],44,[36],28]...
* [[40],44,59]
* [[40],44,57]
* [[40],44,54]
* [[40],44,52]
* [[40],44,37,[39],59]
* [[40],44,37,[39],57]
* [[40],44,37,59]
* [[40],44,37,57]
* [[40],44,34]...
* [[40],44,28]...
* [[40],41,[43],63]
* [[40],41,[43],58]
* [[40],41,[43],57]
* [[40],41,[43],47,[39],59]
* [[40],41,[43],47,[39],57]
* [[40],41,[43],47,59]
* [[40],41,[43],47,57]
* [[40],41,63]
* [[40],41,58]
* [[40],41,57]
* [[40],41,47,[39],59]
* [[40],41,47,[39],57]
* [[40],41,47,59]
* [[40],41,47,57]
* [[40],35]...
* [[40],33]...
* [[40],31]...
* [[40],27]...
* [[39],59]
* [[39],57]
* [[38]]...
* [[38],[39],59]
* [[38],[39],57]
* [[38],59]
* [[38],57]
* [[38],56]
* [[38],54]
* [[38],37,[39],59]
* [[38],37,[39],57]
* [[38],37,59]
* [[38],37,57]
* [[38],34]...
* [[38],30]...
* [[36]]...
* [[36],[39],59]
* [[36],[39],57]
* [[36],59]
* [[36],57]
* [[36],54]
* [[36],52]
* [[36],37,[39],59]
* [[36],37,[39],57]
* [[36],37,59]
* [[36],37,57]
* [[36],34]...
* [[36],28]...
* [66]
* [65]
* [64]
* [63]
* [62]
* [61]
* [60]
* [59]
* [58]
* [57]
* [56]
* [55]
* [54]
* [53]
* [52]
* [51]
* [50,[48]]...
* [50,[48],[39],59]
* [50,[48],[39],57]
* [50,[48],65]
* [50,[48],59]
* [50,[48],57]
* [50,[48],54]
* [50,[48],37,[39],59]
* [50,[48],37,[39],57]
* [50,[48],37,59]
* [50,[48],37,57]
* [50,[48],34]...
* [50,[39],59]
* [50,[39],57]
* [50,65]
* [50,59]
* [50,57]
* [50,54]
* [50,37,[39],59]
* [50,37,[39],57]
* [50,37,59]
* [50,37,57]
* [50,34]...
* [47,[39],59]
* [47,[39],57]
* [47,59]
* [47,57]
* [46,[39],59]
* [46,[39],57]
* [46,[38]]...
* [46,[38],[39],59]
* [46,[38],[39],57]
* [46,[38],59]
* [46,[38],57]
* [46,[38],56]
* [46,[38],54]
* [46,[38],37,[39],59]
* [46,[38],37,[39],57]
* [46,[38],37,59]
* [46,[38],37,57]
* [46,[38],34]...
* [46,[38],30]...
* [46,59]
* [46,57]
* [46,56]
* [46,54]
* [46,37,[39],59]
* [46,37,[39],57]
* [46,37,59]
* [46,37,57]
* [46,34]...
* [46,30]...
* [45,[39],59]
* [45,[39],57]
* [45,59]
* [45,57]
* [44,[39],59]
* [44,[39],57]
* [44,[36]]...
* [44,[36],[39],59]
* [44,[36],[39],57]
* [44,[36],59]
* [44,[36],57]
* [44,[36],54]
* [44,[36],52]
* [44,[36],37,[39],59]
* [44,[36],37,[39],57]
* [44,[36],37,59]
* [44,[36],37,57]
* [44,[36],34]...
* [44,[36],28]...
* [44,59]
* [44,57]
* [44,54]
* [44,52]
* [44,37,[39],59]
* [44,37,[39],57]
* [44,37,59]
* [44,37,57]
* [44,34]...
* [44,28]...
* [41,[43],63]
* [41,[43],58]
* [41,[43],57]
* [41,[43],47,[39],59]
* [41,[43],47,[39],57]
* [41,[43],47,59]
* [41,[43],47,57]
* [41,63]
* [41,58]
* [41,57]
* [41,47,[39],59]
* [41,47,[39],57]
* [41,47,59]
* [41,47,57]
* [37,[39],59]
* [37,[39],57]
* [37,59]
* [37,57]
* [35]...
* [34]...
* [33]...
* [32]...
* [31]...
* [30]...
* [29]...
* [28]...
* [27]...


### Merging Chains  eval_fsdither_bb3_in/11 into  External patterns of execution 
* [[57,37,50],[59,37,50],[57,[39],37,50],[59,[39],37,50],[54,50],[57,50],[59,50],[65,50],[57,[39],50],[59,[39],50],[57,37,[48],50],[59,37,[48],50],[57,[39],37,[48],50],[59,[39],37,[48],50],[54,[48],50],[57,[48],50],[59,[48],50],[65,[48],50],[57,[39],[48],50],[59,[39],[48],50],[66]] --> 1 
* [[64],[57,47,41,[49]],[57,41,[49]],[58,41,[49]],[57,47,[43],41,[49]],[57,[43],41,[49]],[58,[43],41,[49]],[57,45,[49]],[57,47,[49]],[57,37,50,[49]],[54,50,[49]],[57,50,[49]],[65,50,[49]],[57,37,[48],50,[49]],[54,[48],50,[49]],[57,[48],50,[49]],[65,[48],50,[49]],[53,[49]],[57,[49]],[58,[49]],[61,[49]],[64,[49]],[66,[49]],[57,47,[43],[49]],[57,[43],[49]],[58,[43],[49]]] --> 2 
* [[65],[57,37,[48]],[59,37,[48]],[57,[39],37,[48]],[59,[39],37,[48]],[54,[48]],[57,[48]],[59,[48]],[65,[48]],[57,[39],[48]],[59,[39],[48]]] --> 3 
* [[59,47,41,[49]],[57,[39],47,41,[49]],[59,[39],47,41,[49]],[63,41,[49]],[59,47,[43],41,[49]],[57,[39],47,[43],41,[49]],[59,[39],47,[43],41,[49]],[63,[43],41,[49]],[59,50,[49]],[59,[48],50,[49]],[63,[49]],[59,47,[43],[49]],[57,[39],47,[43],[49]],[59,[39],47,[43],[49]],[63,[43],[49]]] --> 4 
* [[57,41],[58,41],[57,[43],41],[58,[43],41],[53],[59,45,[49]],[57,[39],45,[49]],[59,[39],45,[49]],[59,47,[49]],[57,[39],47,[49]],[59,[39],47,[49]],[59,37,50,[49]],[57,[39],37,50,[49]],[59,[39],37,50,[49]],[57,[39],50,[49]],[59,[39],50,[49]],[59,37,[48],50,[49]],[57,[39],37,[48],50,[49]],[59,[39],37,[48],50,[49]],[57,[39],[48],50,[49]],[59,[39],[48],50,[49]]] --> 5 
* [[57,47],[59,47],[57,[39],47],[59,[39],47],[63]] --> 6 
* [[57]] --> 7 
* [[59],[57,[39]],[59,[39]]] --> 8 
* [[58],[57,47,[43]],[59,47,[43]],[57,[39],47,[43]],[59,[39],47,[43]],[57,[43]],[58,[43]],[63,[43]]] --> 9 
* [[57,47,41],[59,47,41],[57,[39],47,41],[59,[39],47,41],[63,41]] --> 10 
* [[57,47,[43],41],[59,47,[43],41],[57,[39],47,[43],41],[59,[39],47,[43],41],[63,[43],41],[57,47,41,[40]],[57,47,[43],41,[40]],[57,47,[43],[40]],[57,47,41,[42]],[57,47,[43],41,[42]],[57,47,[43],[42]]] --> 11 
* [[57,37,46],[59,37,46],[57,[39],37,46],[59,[39],37,46],[54,46],[56,46],[57,46],[59,46],[57,37,[38],46],[59,37,[38],46],[57,[39],37,[38],46],[59,[39],37,[38],46],[54,[38],46],[56,[38],46],[57,[38],46],[59,[38],46],[57,[39],[38],46],[59,[39],[38],46],[57,[39],46],[59,[39],46],[62]] --> 12 
* [[57,37,44],[59,37,44],[57,[39],37,44],[59,[39],37,44],[54,44],[57,37,[36],44],[59,37,[36],44],[57,[39],37,[36],44],[59,[39],37,[36],44],[54,[36],44],[57,[39],[36],44],[59,[39],[36],44],[57,[39],44],[59,[39],44],[57,45],[59,45],[57,[39],45],[59,[39],45],[61]] --> 13 
* [[52,44],[57,44],[59,44],[52,[36],44],[57,[36],44],[59,[36],44],[60]] --> 14 
* [[55],[57,41,[42]],[58,41,[42]],[57,[43],41,[42]],[58,[43],41,[42]],[57,45,[42]],[57,37,46,[42]],[54,46,[42]],[56,46,[42]],[57,46,[42]],[57,37,[38],46,[42]],[54,[38],46,[42]],[56,[38],46,[42]],[57,[38],46,[42]],[57,47,[42]],[53,[42]],[55,[42]],[57,[42]],[58,[42]],[61,[42]],[62,[42]],[57,[43],[42]],[58,[43],[42]]] --> 15 
* [[51],[57,41,[40]],[58,41,[40]],[57,[43],41,[40]],[58,[43],41,[40]],[57,37,44,[40]],[52,44,[40]],[54,44,[40]],[57,44,[40]],[57,37,[36],44,[40]],[52,[36],44,[40]],[54,[36],44,[40]],[57,[36],44,[40]],[57,45,[40]],[57,47,[40]],[51,[40]],[53,[40]],[57,[40]],[58,[40]],[60,[40]],[61,[40]],[57,[43],[40]],[58,[43],[40]]] --> 16 
* [[56],[57,37,[38]],[59,37,[38]],[57,[39],37,[38]],[59,[39],37,[38]],[54,[38]],[56,[38]],[57,[38]],[59,[38]],[57,[39],[38]],[59,[39],[38]]] --> 17 
* [[59,47,41,[42]],[57,[39],47,41,[42]],[59,[39],47,41,[42]],[63,41,[42]],[59,47,[43],41,[42]],[57,[39],47,[43],41,[42]],[59,[39],47,[43],41,[42]],[63,[43],41,[42]],[59,46,[42]],[59,[38],46,[42]],[63,[42]],[59,47,[43],[42]],[57,[39],47,[43],[42]],[59,[39],47,[43],[42]],[63,[43],[42]]] --> 18 
* [[59,45,[42]],[57,[39],45,[42]],[59,[39],45,[42]],[59,37,46,[42]],[57,[39],37,46,[42]],[59,[39],37,46,[42]],[59,37,[38],46,[42]],[57,[39],37,[38],46,[42]],[59,[39],37,[38],46,[42]],[57,[39],[38],46,[42]],[59,[39],[38],46,[42]],[57,[39],46,[42]],[59,[39],46,[42]],[59,47,[42]],[57,[39],47,[42]],[59,[39],47,[42]]] --> 19 
* [[57,37],[59,37],[57,[39],37],[59,[39],37],[54],[57,37,[36]],[59,37,[36]],[57,[39],37,[36]],[59,[39],37,[36]],[54,[36]],[57,[39],[36]],[59,[39],[36]]] --> 20 
* [[59,47,41,[40]],[57,[39],47,41,[40]],[59,[39],47,41,[40]],[63,41,[40]],[59,47,[43],41,[40]],[57,[39],47,[43],41,[40]],[59,[39],47,[43],41,[40]],[63,[43],41,[40]],[59,44,[40]],[59,[36],44,[40]],[63,[40]],[59,47,[43],[40]],[57,[39],47,[43],[40]],[59,[39],47,[43],[40]],[63,[43],[40]]] --> 21 
* [[59,37,44,[40]],[57,[39],37,44,[40]],[59,[39],37,44,[40]],[59,37,[36],44,[40]],[57,[39],37,[36],44,[40]],[59,[39],37,[36],44,[40]],[57,[39],[36],44,[40]],[59,[39],[36],44,[40]],[57,[39],44,[40]],[59,[39],44,[40]],[59,45,[40]],[57,[39],45,[40]],[59,[39],45,[40]],[59,47,[40]],[57,[39],47,[40]],[59,[39],47,[40]]] --> 22 
* [[52],[52,[36]],[57,[36]],[59,[36]]] --> 23 
* [[34,50],[[48],50],[34,[48],50]] --> 24 
* [[34,[48]]] --> 25 
* [[35,[49]],[34,50,[49]],[[48],50,[49]],[34,[48],50,[49]]] --> 26 
* [[33,[49]]] --> 27 
* [[32],[30,46],[34,46],[[38],46],[30,[38],46],[34,[38],46]] --> 28 
* [[31],[28,44],[34,44],[[36],44],[28,[36],44],[34,[36],44]] --> 29 
* [[35]] --> 30 
* [[30],[30,[38]],[34,[38]]] --> 31 
* [[29],[32,[42]],[35,[42]],[30,46,[42]],[34,46,[42]],[[38],46,[42]],[30,[38],46,[42]],[34,[38],46,[42]]] --> 32 
* [[29,[42]],[33,[42]]] --> 33 
* [[28],[28,[36]],[34,[36]]] --> 34 
* [[27],[31,[40]],[35,[40]],[28,44,[40]],[34,44,[40]],[[36],44,[40]],[28,[36],44,[40]],[34,[36],44,[40]]] --> 35 
* [[27,[40]],[33,[40]]] --> 36 
* [[34]] --> 37 
* [[33]] --> 38 
* [[[48]]] --> 39 
* [[[38]]] --> 40 
* [[[36]]] --> 41 


### Specialization of cost equations loop_cont_eval_fsdither_bb1_in/9 
* CE 7 is refined into CE [108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148] 


#### Refined cost equations loop_cont_eval_fsdither_bb1_in/9 
* CE 108: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) = 1+ eval_fsdither_bb3_in(B,C,D,E,I,G,E,J,K,L,M):1
     [D>=E+1,C>=1,J=4,I=0,F=0,A=5] 
* CE 109: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,P,F,G,Q,R,S,T):2
     [D>=G+1,C>=G+1,B>=1,Q=4,P=0,E=0,O=5] 
* CE 110: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,P,F,G,Q,R,S,T):3
     [C>=G+1,G>=D+1,B>=1,Q=4,P=0,E=0,O=5] 
* CE 111: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,P,F,G,Q,R,S,T):4
     [D>=G+1,C>=G+1,T>=D+1,B>=1,Q=4,P=0,E=0,O=5] 
* CE 112: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):5
     [D>=G+1,C>=G+1,B>=1,0>=R,P=4,O=5] 
* CE 113: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) = 1+ eval_fsdither_bb3_in(B,C,D,E,F,G,E,I,B,C,D):6
     [D>=E+1,I=4,A=5] 
* CE 114: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,A,B,C):7
     [G>=C,P=4,O=5] 
* CE 115: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,A,B,C):8
     [C>=G+1,G>=D+1,P=4,O=5] 
* CE 116: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,A,B,C):9
     [C>=G+1,D>=G+1,P=4,O=5] 
* CE 117: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,P,E,F,G,Q,R,S,T):10
     [T>=G+2,C>=G+1,B>=1,0>=S,G+1=P,G+1=D,Q=4,O=5] 
* CE 118: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):11
     [D>=G+2,C>=G+1,S>=D+1,B>=1,0>=R,P=4,O=5] 
* CE 119: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) = 1+ eval_fsdither_bb3_in(B,C,D,E,F,G,E,I,J,K,L):12
     [D>=E+1,C>=1,0>=F+1,I=4,A=5] 
* CE 120: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) = 1+ eval_fsdither_bb3_in(B,C,D,E,F,G,E,I,J,K,L):13
     [D>=E+1,C>=1,0>=K,I=4,A=5] 
* CE 121: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) = 1+ eval_fsdither_bb3_in(B,C,D,E,F,G,E,I,J,K,L):14
     [D>=E+1,F>=1,C>=1,I=4,A=5] 
* CE 122: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):15
     [D>=G+1,C>=G+1,B>=1,0>=E+1,P=4,O=5] 
* CE 123: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):16
     [D>=G+1,C>=G+1,E>=1,B>=1,P=4,O=5] 
* CE 124: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):17
     [C>=G+1,G>=D+1,B>=1,0>=E+1,P=4,O=5] 
* CE 125: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):18
     [D>=G+1,C>=G+1,S>=D+1,B>=1,0>=E+1,P=4,O=5] 
* CE 126: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):19
     [D>=G+1,C>=G+1,S>=D+2,B>=1,0>=R,0>=E+1,P=4,O=5] 
* CE 127: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):20
     [C>=G+1,G>=D+1,B>=1,0>=R,P=4,O=5] 
* CE 128: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):21
     [D>=G+1,C>=G+1,S>=D+1,E>=1,B>=1,P=4,O=5] 
* CE 129: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):22
     [D>=G+1,C>=G+1,S>=D+2,E>=1,B>=1,0>=R,P=4,O=5] 
* CE 130: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):23
     [C>=G+1,G>=D+1,E>=1,B>=1,P=4,O=5] 
* CE 131: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) = 1+ eval_fsdither_bb3_in(B,C,D,E,I,G,E,J,K,L,M):24
     [D>=E+1,C>=1,J=4,I=0,F=0,A=5] 
* CE 132: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,P,F,G,Q,R,S,T):25
     [C>=G+1,G>=D+1,B>=1,Q=4,P=0,E=0,O=5] 
* CE 133: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,P,F,G,Q,R,S,T):26
     [D>=G+1,C>=G+1,B>=1,Q=4,P=0,E=0,O=5] 
* CE 134: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,P,F,G,Q,R,S,T):27
     [D>=G+2,C>=G+1,B>=1,Q=4,P=0,E=0,O=5] 
* CE 135: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) = 1+ eval_fsdither_bb3_in(B,C,D,E,F,G,E,I,J,K,L):28
     [D>=E+1,C>=1,0>=F+1,I=4,A=5] 
* CE 136: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) = 1+ eval_fsdither_bb3_in(B,C,D,E,F,G,E,I,J,K,L):29
     [D>=E+1,F>=1,C>=1,I=4,A=5] 
* CE 137: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) = 1+ eval_fsdither_bb3_in(B,C,D,E,F,G,E,I,J,K,L):30
     [D>=E+1,C>=1,I=4,A=5] 
* CE 138: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):31
     [C>=G+1,G>=D+1,B>=1,0>=E+1,P=4,O=5] 
* CE 139: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):32
     [D>=G+1,C>=G+1,B>=1,0>=E+1,P=4,O=5] 
* CE 140: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):33
     [D>=G+2,C>=G+1,B>=1,0>=E+1,P=4,O=5] 
* CE 141: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):34
     [C>=G+1,G>=D+1,E>=1,B>=1,P=4,O=5] 
* CE 142: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):35
     [D>=G+1,C>=G+1,E>=1,B>=1,P=4,O=5] 
* CE 143: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):36
     [D>=G+2,C>=G+1,E>=1,B>=1,P=4,O=5] 
* CE 144: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):37
     [C>=G+1,G>=D+1,B>=1,P=4,O=5] 
* CE 145: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):38
     [D>=G+1,C>=G+1,B>=1,P=4,O=5] 
* CE 146: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,P,F,G,Q,R,S,T):39
     [C>=G+1,G>=D+1,B>=1,Q=4,P=0,E=0,O=5] 
* CE 147: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):40
     [C>=G+1,G>=D+1,B>=1,0>=E+1,P=4,O=5] 
* CE 148: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) = 1+ eval_fsdither_bb3_in(A,B,C,D,E,F,G,P,Q,R,S):41
     [C>=G+1,G>=D+1,E>=1,B>=1,P=4,O=5] 

### Cost equations --> "Loop" of loop_cont_eval_fsdither_bb1_in/9 
* CEs [142,143] --> Loop 67 
* CEs [141,148] --> Loop 68 
* CEs [139,140] --> Loop 69 
* CEs [138,147] --> Loop 70 
* CEs [136] --> Loop 71 
* CEs [135] --> Loop 72 
* CEs [133,134,145] --> Loop 73 
* CEs [132,144,146] --> Loop 74 
* CEs [131,137] --> Loop 75 
* CEs [114] --> Loop 76 
* CEs [123,128,129] --> Loop 77 
* CEs [130] --> Loop 78 
* CEs [122,125,126] --> Loop 79 
* CEs [124] --> Loop 80 
* CEs [121] --> Loop 81 
* CEs [119] --> Loop 82 
* CEs [117] --> Loop 83 
* CEs [109,111,112,116,118] --> Loop 84 
* CEs [110,115,127] --> Loop 85 
* CEs [108,113,120] --> Loop 86 

#### Loops of loop_cont_eval_fsdither_bb1_in/9 
* Loop 67: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [D>=G+1,C>=G+1,E>=1,B>=1,O=5] 
* Loop 68: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [C>=G+1,G>=D+1,E>=1,B>=1,O=5] 
* Loop 69: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [D>=G+1,C>=G+1,B>=1,0>=E+1,O=5] 
* Loop 70: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [C>=G+1,G>=D+1,B>=1,0>=E+1,O=5] 
* Loop 71: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) [D>=E+1,F>=1,C>=1,A=5] 
* Loop 72: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) [D>=E+1,C>=1,0>=F+1,A=5] 
* Loop 73: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [D>=G+1,C>=G+1,B>=1,O=5] 
* Loop 74: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [C>=G+1,G>=D+1,B>=1,O=5] 
* Loop 75: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) [D>=E+1,C>=1,A=5] 
* Loop 76: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [G>=C,O=5] 
* Loop 77: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [D>=G+1,C>=G+1,E>=1,B>=1,O=5] 
* Loop 78: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [C>=G+1,G>=D+1,E>=1,B>=1,O=5] 
* Loop 79: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [D>=G+1,C>=G+1,B>=1,0>=E+1,O=5] 
* Loop 80: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [C>=G+1,G>=D+1,B>=1,0>=E+1,O=5] 
* Loop 81: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) [D>=E+1,F>=1,C>=1,A=5] 
* Loop 82: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) [D>=E+1,C>=1,0>=F+1,A=5] 
* Loop 83: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [C>=D,B>=1,D=G+1,O=5] 
* Loop 84: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [D>=G+1,C>=G+1,O=5] 
* Loop 85: loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) [C>=G+1,G>=D+1,O=5] 
* Loop 86: loop_cont_eval_fsdither_bb1_in(A,B,C,D,E,F,G,E,H) [D>=E+1,A=5] 

### Ranking functions of CR loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) 


### Resulting Chains:loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H) 
* [86]
* [85]
* [84]
* [83]
* [82]
* [81]
* [80]
* [79]
* [78]
* [77]
* [76]
* [75]...
* [74]...
* [73]...
* [72]...
* [71]...
* [70]...
* [69]...
* [68]...
* [67]...


### Merging Chains  loop_cont_eval_fsdither_bb1_in/9 into  External patterns of execution 
* [[82],[86]] --> 1 
* [[81]] --> 2 
* [[83],[84]] --> 3 
* [[80],[85]] --> 4 
* [[79]] --> 5 
* [[78]] --> 6 
* [[77]] --> 7 
* [[76]] --> 8 
* [[72]] --> 9 
* [[71]] --> 10 
* [[75]] --> 11 
* [[70]] --> 12 
* [[69]] --> 13 
* [[68]] --> 14 
* [[67]] --> 15 
* [[74]] --> 16 
* [[73]] --> 17 


### Specialization of cost equations eval_fsdither_19/7 
* CE 3 is refined into CE [149] 
* CE 4 is refined into CE [150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166] 


#### Refined cost equations eval_fsdither_19/7 
* CE 149: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 0
     [V_1+1=V__imagelength,V_3+1=V__imagewidth] 
* CE 150: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,V__imagewidth,C,D,E,V_18,F,G,V__threshold,V__imagewidth,H,I,J,V_18,K):1+ loop_cont_eval_fsdither_bb1_in(L,V__threshold,V__imagewidth,M,N,O,V_18,P,B):1
     [0>=V__imagewidth,V__imagewidth=O+1,V__imagewidth=J+1,V__imagewidth=E+1,V__imagewidth=V_3+1,P=1,N=1,M=2,L=5,K=1,I=1,H=2,G=5,F=0,D=1,C=2,V_1=1,V__imagelength=2] 
* CE 151: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,C,D,V_18,E,F,V__threshold,V__imagewidth,V__imagelength,G,H,V_18,I):1+ loop_cont_eval_fsdither_bb1_in(J,V__threshold,V__imagewidth,V__imagelength,K,L,V_18,M,B):3
     [V__imagelength>=3,0>=V__imagewidth,V__imagewidth=L+1,V__imagelength=K+1,V__imagewidth=H+1,V__imagelength=G+1,V__imagewidth=D+1,V__imagelength=C+1,V__imagewidth=V_3+1,V__imagelength=V_1+1,M=1,J=5,I=1,F=5,E=0] 
* CE 152: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,C,D,V_18,E,F,V__threshold,V__imagewidth,V__imagelength,G,H,V_18,I):1+ loop_cont_eval_fsdither_bb1_in(J,V__threshold,V__imagewidth,V__imagelength,K,L,V_18,M,B):8
     [1>=V__imagelength,0>=V__imagewidth,V__imagewidth=L+1,V__imagelength=K+1,V__imagewidth=H+1,V__imagelength=G+1,V__imagewidth=D+1,V__imagelength=C+1,V__imagewidth=V_3+1,V__imagelength=V_1+1,M=1,J=5,I=1,F=5,E=0] 
* CE 153: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,E,V_3,V_18,F,G,H,I,J,K,V_3,V_18,L):2+ loop_cont_eval_fsdither_bb1_in(M,H,I,J,N,V_3,V_18,O,B):1
     [J>=2,V_3>=0,V_3+1=C,V_3+1=V__imagewidth,O=1,N=1,M=5,L=1,K=1,G=5,F=0,E=1,D=2,V_1=1,V__imagelength=2] 
* CE 154: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,E,V_3,V_18,F,G,H,I,J,K,V_3,V_18,L):2+ loop_cont_eval_fsdither_bb1_in(M,H,I,J,N,V_3,V_18,O,B):2
     [V_3>=1,J>=2,I>=1,V_3+1=C,V_3+1=V__imagewidth,O=1,N=1,M=5,L=1,K=1,G=5,F=0,E=1,D=2,V_1=1,V__imagelength=2] 
* CE 155: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,V_1,V_3,V_18,E,F,G,H,I,V_1,V_3,V_18,J):2+ loop_cont_eval_fsdither_bb1_in(K,G,H,I,V_1,V_3,V_18,L,B):3
     [V_1>=2,I>=2,V_3>=0,V_1+1=D,V_3+1=C,V_1+1=V__imagelength,V_3+1=V__imagewidth,L=1,K=5,J=1,F=5,E=0] 
* CE 156: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,V_1,V_3,V_18,E,F,G,H,I,V_1,V_3,V_18,J):2+ loop_cont_eval_fsdither_bb1_in(K,G,H,I,V_1,V_3,V_18,L,B):4
     [I>=2,V_3>=0,0>=V_1,V_1+1=D,V_3+1=C,V_1+1=V__imagelength,V_3+1=V__imagewidth,L=1,K=5,J=1,F=5,E=0] 
* CE 157: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,V_1,V_3,V_18,E,F,G,H,I,V_1,V_3,V_18,J):2+ loop_cont_eval_fsdither_bb1_in(K,G,H,I,V_1,V_3,V_18,L,B):6
     [V_3>=1,I>=2,H>=1,0>=V_1,V_1+1=D,V_3+1=C,V_1+1=V__imagelength,V_3+1=V__imagewidth,L=1,K=5,J=1,F=5,E=0] 
* CE 158: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,V_1,V_3,V_18,E,F,G,H,I,V_1,V_3,V_18,J):2+ loop_cont_eval_fsdither_bb1_in(K,G,H,I,V_1,V_3,V_18,L,B):7
     [V_3>=1,V_1>=2,I>=2,H>=1,V_1+1=D,V_3+1=C,V_1+1=V__imagelength,V_3+1=V__imagewidth,L=1,K=5,J=1,F=5,E=0] 
* CE 159: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,V_1,V_3,V_18,E,F,G,H,I,V_1,V_3,V_18,J):2+ loop_cont_eval_fsdither_bb1_in(K,G,H,I,V_1,V_3,V_18,L,B):8
     [V_3>=0,1>=I,V_1+1=D,V_3+1=C,V_1+1=V__imagelength,V_3+1=V__imagewidth,L=1,K=5,J=1,F=5,E=0] 
* CE 160: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,E,V_3,V_18,F,G,H,I,J,K,V_3,V_18,L):2+ loop_cont_eval_fsdither_bb1_in(M,H,I,J,N,V_3,V_18,O,B):10
     [V_3>=1,J>=2,I>=1,V_3+1=C,V_3+1=V__imagewidth,O=1,N=1,M=5,L=1,K=1,G=5,F=0,E=1,D=2,V_1=1,V__imagelength=2] 
* CE 161: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,E,V_3,V_18,F,G,H,I,J,K,V_3,V_18,L):2+ loop_cont_eval_fsdither_bb1_in(M,H,I,J,N,V_3,V_18,O,B):11
     [J>=2,I>=1,V_3>=0,V_3+1=C,V_3+1=V__imagewidth,O=1,N=1,M=5,L=1,K=1,G=5,F=0,E=1,D=2,V_1=1,V__imagelength=2] 
* CE 162: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,V_1,V_3,V_18,E,F,G,H,I,V_1,V_3,V_18,J):2+ loop_cont_eval_fsdither_bb1_in(K,G,H,I,V_1,V_3,V_18,L,B):14
     [V_3>=1,I>=2,H>=1,0>=V_1,V_1+1=D,V_3+1=C,V_1+1=V__imagelength,V_3+1=V__imagewidth,L=1,K=5,J=1,F=5,E=0] 
* CE 163: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,V_1,V_3,V_18,E,F,G,H,I,V_1,V_3,V_18,J):2+ loop_cont_eval_fsdither_bb1_in(K,G,H,I,V_1,V_3,V_18,L,B):15
     [V_3>=1,V_1>=2,I>=2,H>=1,V_1+1=D,V_3+1=C,V_1+1=V__imagelength,V_3+1=V__imagewidth,L=1,K=5,J=1,F=5,E=0] 
* CE 164: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,V_1,V_3,V_18,E,F,G,H,I,V_1,V_3,V_18,J):2+ loop_cont_eval_fsdither_bb1_in(K,G,H,I,V_1,V_3,V_18,L,B):16
     [I>=2,H>=1,V_3>=0,0>=V_1,V_1+1=D,V_3+1=C,V_1+1=V__imagelength,V_3+1=V__imagewidth,L=1,K=5,J=1,F=5,E=0] 
* CE 165: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,C,D,V_1,V_3,V_18,E,F,G,H,I,V_1,V_3,V_18,J):2+ loop_cont_eval_fsdither_bb1_in(K,G,H,I,V_1,V_3,V_18,L,B):17
     [V_1>=2,I>=2,H>=1,V_3>=0,V_1+1=D,V_3+1=C,V_1+1=V__imagelength,V_3+1=V__imagewidth,L=1,K=5,J=1,F=5,E=0] 
* CE 166: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) = 1+ eval_fsdither_bb1_in(V__threshold,V__imagewidth,C,V_1,D,V_18,E,F,G,H,I,J,K,L,M):3
     [V__imagewidth>=1,V__imagewidth=D+1,V_1+1=C,V__imagewidth=V_3+1,V_1+1=V__imagelength,E=0] 

### Cost equations --> "Loop" of eval_fsdither_19/7 
* CEs [165] --> Loop 87 
* CEs [164] --> Loop 88 
* CEs [160,161,162,163,166] --> Loop 89 
* CEs [155] --> Loop 90 
* CEs [156] --> Loop 91 
* CEs [150] --> Loop 92 
* CEs [149,151,152,153,154,157,158,159] --> Loop 93 

#### Loops of eval_fsdither_19/7 
* Loop 87: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) [V__imagelength>=3,V__imagewidth>=1,V__imagewidth=V_3+1,V__imagelength=V_1+1] 
* Loop 88: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) [V__imagewidth>=1,1>=V__imagelength,V__imagewidth=V_3+1,V__imagelength=V_1+1] 
* Loop 89: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) [V__imagewidth>=1,V__imagewidth=V_3+1,V__imagelength=V_1+1] 
* Loop 90: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) [V__imagelength>=3,V__imagewidth>=1,V__imagewidth=V_3+1,V__imagelength=V_1+1] 
* Loop 91: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) [V__imagewidth>=1,1>=V__imagelength,V__imagewidth=V_3+1,V__imagelength=V_1+1] 
* Loop 92: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) [0>=V__imagewidth,V__imagewidth=V_3+1,V_1=1,V__imagelength=2] 
* Loop 93: eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) [V__imagewidth=V_3+1,V__imagelength=V_1+1] 

### Ranking functions of CR eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) 

#### Partial ranking functions of CR eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) 


### Resulting Chains:eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B) 
* [93]
* [92]
* [91]
* [90]
* [89]...
* [88]...
* [87]...


### Merging Chains  eval_fsdither_19/7 into  External patterns of execution 
* [[90],[91],[92],[93]] --> 1 
* [[88]] --> 2 
* [[87]] --> 3 
* [[89]] --> 4 


### Specialization of cost equations eval_fsdither_start/4 
* CE 2 is refined into CE [167,168,169,170] 


#### Refined cost equations eval_fsdither_start/4 
* CE 167: eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B) = 0+ eval_fsdither_19(V__threshold,C,D,E,F,G,B):1
     [E+1=D,F+1=C,E+1=V__imagelength,F+1=V__imagewidth] 
* CE 168: eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B) = 0+ eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,C,D,E,B):2
     [V__imagewidth>=1,1>=V__imagelength,V__imagewidth=D+1,V__imagelength=C+1] 
* CE 169: eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B) = 0+ eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,C,D,E,B):3
     [V__imagelength>=3,V__imagewidth>=1,V__imagewidth=D+1,V__imagelength=C+1] 
* CE 170: eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B) = 0+ eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,C,D,E,B):4
     [V__imagewidth>=1,V__imagewidth=D+1,V__imagelength=C+1] 

### Cost equations --> "Loop" of eval_fsdither_start/4 
* CEs [168,169,170] --> Loop 94 
* CEs [167] --> Loop 95 

#### Loops of eval_fsdither_start/4 
* Loop 94: eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B) [V__imagewidth>=1] 
* Loop 95: eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B) [] 

### Ranking functions of CR eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B) 

#### Partial ranking functions of CR eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B) 


### Resulting Chains:eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B) 
* [95]
* [94]...


### Merging Chains  eval_fsdither_start/4 into  External patterns of execution 
* [[95]] --> 1 
* [[94]] --> 2 


Computing Bounds
=====================================

#### Cost of loops [19] 

 * loop 19:eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_j_0,B,C,D,E,F,G,H,I) -> [eval_fsdither_bb1_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_j_0',B',C',D',E',F',G',H',I')] 
1
#### Cost of phase [19]:eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_j_0,B,C,D,E,F,G,H,I) -> [eval_fsdither_bb1_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_j_0',B',C',D',E',F',G',H',I')] 
1*it(19)+0
#### Cost of phase [19]:eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_j_0,B,C,D,E,F,G,H,I) -> [eval_fsdither_bb1_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_j_0',B',C',D',E',F',G',H',I')] 
1*it(19)+0
#### Cost of chains of eval_fsdither_bb1_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_j_0,B,C,D,E,F,G,H,I):
* Chain [[19]]...: 1*it(19)+0
  with precondition: [V__imagewidth>=V_j_0+1,V_j_0>=0] 

* Chain [[19],20]: 1*it(19)+0
  with precondition: [B=5,I=1,V_1=F,V_3=G,V_18=H,V_j_0>=0,V__imagewidth>=V_j_0+1] 

* Chain [20]: 0
  with precondition: [B=5,I=1,C=V__threshold,E=V__imagelength,F=V_1,G=V_3,H=V_18,V__imagewidth=D,V_j_0>=0,V_j_0>=V__imagewidth] 


#### Cost of loops [21] 

 * loop 21:eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,B,C,D,E,F,G,H,I,J) -> [eval_fsdither_bb5_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',B',C',D',E',F',G',H',I',J')] 
1
#### Cost of phase [21]:eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,B,C,D,E,F,G,H,I,J) -> [eval_fsdither_bb5_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',B',C',D',E',F',G',H',I',J')] 
1*it(21)+0
#### Cost of phase [21]:eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,B,C,D,E,F,G,H,I,J) -> [eval_fsdither_bb5_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',B',C',D',E',F',G',H',I',J')] 
1*it(21)+0
#### Cost of chains of eval_fsdither_bb5_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,B,C,D,E,F,G,H,I,J):
* Chain [[21]]...: 1*it(21)+0
  with precondition: [V__imagewidth>=V_j_1+1,V_j_1>=0,B=2] 

* Chain [[21],22]: 1*it(21)+0
  with precondition: [B=2,V_1=F,V_3=G,V_18=H,V_i_0=I,V_j_1>=0,V__imagewidth>=V_j_1+1,J>=V_j_1+1,J>=D] 

* Chain [22]: 0
  with precondition: [B=2,C=V__threshold,E=V__imagelength,F=V_1,G=V_3,H=V_18,I=V_i_0,V__imagewidth=D,V_j_1=J,V_j_1>=0,V_j_1>=V__imagewidth] 


#### Cost of loops [24] 

 * loop 24:eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) -> [eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',V_j_2',B',C',D',E',F',G',H',I',J',K',L')] 
1
#### Cost of phase [24]:eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) -> [eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',V_j_2',B',C',D',E',F',G',H',I',J',K',L')] 
1*it(24)+0
#### Cost of phase [24]:eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) -> [eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',V_j_2',B',C',D',E',F',G',H',I',J',K',L')] 
1*it(24)+0
#### Cost of loops [23] 

 * loop 23:eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) -> [eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',V_j_2',B',C',D',E',F',G',H',I',J',K',L')] 
1
#### Cost of phase [23]:eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) -> [eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',V_j_2',B',C',D',E',F',G',H',I',J',K',L')] 
1*it(23)+0
  Such that:it(23) =< V_3-V_j_2
it(23) =< V_3-V_j_2-V_3'+V_j_2'

#### Cost of phase [23]:eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) -> [eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',V_j_2',B',C',D',E',F',G',H',I',J',K',L')] 
1*it(23)+0
  Such that:it(23) =< V_3-V_j_2
it(23) =< V_3-V_j_2-V_3'+V_j_2'

#### Cost of phase [23]:eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) -> [eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',V_j_2',B',C',D',E',F',G',H',I',J',K',L')] 
1*it(23)+0
  Such that:it(23) =< V_3-V_j_2
it(23) =< V_3-V_j_2-V_3'+V_j_2'

#### Cost of phase [23]:eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L) -> [eval_fsdither_bb8_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',V_j_1',V_j_2',B',C',D',E',F',G',H',I',J',K',L')] 
1*it(23)+0
  Such that:it(23) =< V_3-V_j_2
it(23) =< V_3-V_j_2-V_3'+V_j_2'

#### Cost of chains of eval_fsdither_bb8_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,V_j_1,V_j_2,B,C,D,E,F,G,H,I,J,K,L):
* Chain [[24]]...: 1*it(24)+0
  with precondition: [V_j_2>=V_3+1,V__imagewidth>=V_j_2+1,V_j_2>=0,B=3] 

* Chain [[24],26]: 1*it(24)+0
  with precondition: [B=3,V_1=F,V_3=G,V_18=H,V_i_0=I,V_j_1=J,V_i_0=L+1,V_j_2>=0,V_j_2>=V_3+1,V__imagewidth>=V_j_2+1,K>=V_j_2+1,K>=D] 

* Chain [[23],26]: 1*it(23)+0
  Such that:it(23) =< -V_j_2+K

  with precondition: [B=3,V_1=F,V_3=G,V_18=H,V_i_0=I,V_j_1=J,V_i_0=L+1,V_j_2>=0,V__imagewidth>=V_j_2+1,K>=V_j_2+1,K>=D,V_3>=K] 

* Chain [[23],25,[24]]...: 1*it(23)+1*it(24)+1
  Such that:it(23) =< V_3-V_j_2

  with precondition: [B=3,V_j_2>=0,V__imagewidth>=V_j_2+1,V_3>=V_j_2+1] 

* Chain [[23],25,[24],26]: 1*it(23)+1*it(24)+1
  Such that:it(23) =< -V_j_2+G

  with precondition: [B=3,V_1=F,V_3=G,V_18=H,V_i_0=I,V_j_1=J,V_i_0=L+1,V_j_2>=0,K>=V_3+2,V__imagewidth>=V_j_2+1,V_3>=V_j_2+1,K>=D] 

* Chain [[23],25,26]: 1*it(23)+1
  Such that:it(23) =< -V_j_2+K

  with precondition: [B=3,V_1=F,V_3=G,V_18=H,V_i_0=I,V_j_1=J,V_3+1=K,V_i_0=L+1,V_j_2>=0,V__imagewidth>=V_j_2+1,V_3>=V_j_2+1,V_3+1>=D] 

* Chain [26]: 0
  with precondition: [B=3,C=V__threshold,E=V__imagelength,F=V_1,G=V_3,H=V_18,J=V_j_1,V__imagewidth=D,V_i_0=I,V_j_2=K,V_i_0=L+1,V_j_2>=0,V_j_2>=V__imagewidth] 

* Chain [25,[24]]...: 1*it(24)+1
  with precondition: [B=3,V_3=V_j_2,V_3>=0,V__imagewidth>=V_3+1] 

* Chain [25,[24],26]: 1*it(24)+1
  with precondition: [B=3,V_3=V_j_2,V_1=F,V_3=G,V_18=H,V_i_0=I,V_j_1=J,V_i_0=L+1,V_3>=0,V__imagewidth>=V_3+1,K>=V_3+2,K>=D] 

* Chain [25,26]: 1
  with precondition: [B=3,V_3=V_j_2,V_1=F,V_3=G,V_18=H,V_i_0=I,V_j_1=J,V_3+1=K,V_i_0=L+1,V_3>=0,V__imagewidth>=V_3+1,V_3+1>=D] 


#### Cost of loops [43] 

 * loop 43:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3
#### Cost of phase [43]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(43)+0
  Such that:it(43) =< V__imagelength-V_i_0
it(43) =< V__imagelength-V_i_0-V__imagelength'+V_i_0'
it(43) =< V_1-V_i_0
it(43) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of loops [49] 

 * loop 49:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(4)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [43]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(43)+0
  Such that:it(43) =< V__imagelength-V_i_0
it(43) =< V__imagelength-V_i_0-V__imagelength'+V_i_0'
it(43) =< V_1-V_i_0
it(43) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [43]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(43)+0
  Such that:it(43) =< V__imagelength-V_i_0
it(43) =< V__imagelength-V_i_0-V__imagelength'+V_i_0'
it(43) =< V_1-V_i_0
it(43) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of loops [39] 

 * loop 39:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3
#### Cost of phase [39]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(39)+0
  Such that:it(39) =< V__imagelength-V_i_0
it(39) =< V__imagelength-V_i_0-V__imagelength'+V_i_0'

#### Cost of phase [43]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(43)+0
  Such that:it(43) =< V__imagelength-V_i_0
it(43) =< V__imagelength-V_i_0-V__imagelength'+V_i_0'
it(43) =< V_1-V_i_0
it(43) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [39]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(39)+0
  Such that:it(39) =< V__imagelength-V_i_0
it(39) =< V__imagelength-V_i_0-V__imagelength'+V_i_0'

#### Cost of phase [43]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(43)+0
  Such that:it(43) =< V__imagelength-V_i_0
it(43) =< V__imagelength-V_i_0-V__imagelength'+V_i_0'
it(43) =< V_1-V_i_0
it(43) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [43]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(43)+0
  Such that:it(43) =< V__imagelength-V_i_0
it(43) =< V__imagelength-V_i_0-V__imagelength'+V_i_0'
it(43) =< V_1-V_i_0
it(43) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [43]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(43)+0
  Such that:it(43) =< V__imagelength-V_i_0
it(43) =< V__imagelength-V_i_0-V__imagelength'+V_i_0'
it(43) =< V_1-V_i_0
it(43) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of loops [48] 

 * loop 48:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(17)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [48]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(18)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of phase [49]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
1*s(5)+0
#### Cost of loops [42] 

 * loop 42:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
2*s(49)+3
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of loops [38] 

 * loop 38:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
2*s(59)+3
#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [38]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
5*it(38)+0
#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of phase [42]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0
it(42) =< V_1-V_i_0-V_1'+V_i_0'

#### Cost of loops [40] 

 * loop 40:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*s(85)+1*s(84)+1*s(83)+1*s(82)+4
  Such that:s(82) =< V_3
s(83) =< V_3'
s(84) =< V_3'+1

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of loops [36] 

 * loop 36:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*s(121)+1*s(118)+2*s(120)+4
  Such that:s(118) =< V_3'+1
s(119) =< V_3'
s(120) =< s(119)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [36]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
8*it(36)+1*s(123)+2*s(124)+0
#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of phase [40]:eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E) -> [eval_fsdither_bb3_in(V__threshold',V__imagewidth',V__imagelength',V_1',V_3',V_18',V_i_0',B',C',D',E')] 
4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
it(40) =< V_1-V_i_0-V_1'+V_i_0'
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

#### Cost of chains of eval_fsdither_bb3_in(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,V_i_0,B,C,D,E):
* Chain [[49],[43],63]: 3*it(43)+1*s(5)+2
  Such that:it(43) =< V_1-V_i_0

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],[43],58]: 3*it(43)+1*s(5)+2
  Such that:it(43) =< -V_i_0+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3,E>=V_i_0+3] 

* Chain [[49],[43],57]: 3*it(43)+1*s(5)+0
  Such that:it(43) =< -V_i_0+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,E>=V_i_0+2,V_1>=E] 

* Chain [[49],[43],47,[39],59]: 3*it(39)+3*it(43)+1*s(5)+5
  Such that:it(39) =< -V_1+E
it(43) =< V_1-V_i_0

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],[43],47,[39],57]: 3*it(39)+3*it(43)+1*s(5)+3
  Such that:it(39) =< -V_1+E
it(43) =< V_1-V_i_0

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],[43],47,59]: 3*it(43)+1*s(5)+5
  Such that:it(43) =< V_1-V_i_0

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],[43],47,57]: 3*it(43)+1*s(5)+3
  Such that:it(43) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1+1=E,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],66]: 2*aux(2)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],64]: 2*aux(3)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],63]: 1*s(5)+2
  with precondition: [V_3=0,B=4,V__imagewidth>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],61]: 2*s(5)+2
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],58]: 1*s(5)+2
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2,E>=V_i_0+2] 

* Chain [[49],57]: 1*s(5)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1>=E] 

* Chain [[49],53]: 2*s(5)+2
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],50,[48]]...: 3*aux(5)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],[39],59]: 3*aux(5)+3*it(39)+2
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],[39],57]: 3*aux(5)+3*it(39)+0
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],65]: 4*aux(5)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],59]: 3*aux(5)+2
  with precondition: [V_3=0,B=4,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],57]: 3*aux(5)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],54]: 4*aux(5)+2
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],37,[39],59]: 4*aux(5)+3*it(39)+5
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+5,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],37,[39],57]: 4*aux(5)+3*it(39)+3
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],37,59]: 4*aux(5)+5
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],37,57]: 4*aux(5)+3
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[48],34]...: 4*aux(5)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[39],59]: 2*aux(5)+3*it(39)+2
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,[39],57]: 2*aux(5)+3*it(39)+0
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,65]: 3*aux(5)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,59]: 2*aux(5)+2
  with precondition: [V_3=0,B=4,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,57]: 2*aux(5)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1+1>=E] 

* Chain [[49],50,54]: 3*aux(5)+2
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,37,[39],59]: 3*aux(5)+3*it(39)+5
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,37,[39],57]: 3*aux(5)+3*it(39)+3
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,37,59]: 3*aux(5)+5
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],50,37,57]: 3*aux(5)+3
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1+2>=E] 

* Chain [[49],50,34]...: 3*aux(5)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],47,[39],59]: 3*it(39)+1*s(5)+5
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],47,[39],57]: 3*it(39)+1*s(5)+3
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],47,59]: 1*s(5)+5
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],47,57]: 1*s(5)+3
  with precondition: [V_3=0,B=4,V_1+1=E,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],45,[39],59]: 3*it(39)+2*s(5)+5
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],45,[39],57]: 3*it(39)+2*s(5)+3
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],45,59]: 2*s(5)+5
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],45,57]: 2*s(5)+3
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1+1>=E] 

* Chain [[49],41,[43],63]: 3*it(43)+2*s(5)+5
  Such that:it(43) =< V_1-V_i_0

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[49],41,[43],58]: 3*it(43)+2*s(5)+5
  Such that:it(43) =< -V_i_0+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+4,E>=V_i_0+4] 

* Chain [[49],41,[43],57]: 3*it(43)+2*s(5)+3
  Such that:it(43) =< -V_i_0+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,E>=V_i_0+3,V_1>=E] 

* Chain [[49],41,[43],47,[39],59]: 3*it(39)+3*it(43)+2*s(5)+8
  Such that:it(39) =< -V_1+E
it(43) =< V_1-V_i_0

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[49],41,[43],47,[39],57]: 3*it(39)+3*it(43)+2*s(5)+6
  Such that:it(39) =< -V_1+E
it(43) =< V_1-V_i_0

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[49],41,[43],47,59]: 3*it(43)+2*s(5)+8
  Such that:it(43) =< V_1-V_i_0

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[49],41,[43],47,57]: 3*it(43)+2*s(5)+6
  Such that:it(43) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1+1=E,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[49],41,63]: 2*s(5)+5
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],41,58]: 2*s(5)+5
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3,E>=V_i_0+3] 

* Chain [[49],41,57]: 2*s(5)+3
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2,V_1>=E] 

* Chain [[49],41,47,[39],59]: 3*it(39)+2*s(5)+8
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],41,47,[39],57]: 3*it(39)+2*s(5)+6
  Such that:it(39) =< -V_1+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],41,47,59]: 2*s(5)+8
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],41,47,57]: 2*s(5)+6
  with precondition: [V_3=0,B=4,V_1+1=E,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[49],35]...: 2*aux(8)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[49],33]...: 2*aux(9)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[48]]...: 1*s(18)+0
  with precondition: [V__imagewidth>=1,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V_3=0,B=4] 

* Chain [[48],[39],59]: 3*it(39)+1*s(18)+2
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [[48],[39],57]: 3*it(39)+1*s(18)+0
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+2] 

* Chain [[48],65]: 2*aux(6)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[48],59]: 1*s(18)+2
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+2] 

* Chain [[48],57]: 1*s(18)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[48],54]: 2*s(18)+2
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[48],37,[39],59]: 3*it(39)+2*s(18)+5
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+4] 

* Chain [[48],37,[39],57]: 3*it(39)+2*s(18)+3
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [[48],37,59]: 2*s(18)+5
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [[48],37,57]: 2*s(18)+3
  with precondition: [V_3=0,B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[48],34]...: 2*aux(7)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[43],63]: 3*it(43)+2
  Such that:it(43) =< V_1-V_i_0

  with precondition: [B=4,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V__imagelength>=V_1+1,V_1>=V_i_0+1] 

* Chain [[43],58]: 3*it(43)+2
  Such that:it(43) =< V__imagelength-V_i_0

  with precondition: [B=4,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V__imagelength>=V_i_0+2,V_1>=V_i_0+2] 

* Chain [[43],57]: 3*it(43)+0
  Such that:it(43) =< V__imagelength-V_i_0

  with precondition: [B=4,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V_1>=V__imagelength,V__imagelength>=V_i_0+1] 

* Chain [[43],47,[39],59]: 3*it(39)+3*it(43)+5
  Such that:it(39) =< V__imagelength-V_1
it(43) =< V_1-V_i_0

  with precondition: [B=4,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V__imagelength>=V_1+3,V_1>=V_i_0+1] 

* Chain [[43],47,[39],57]: 3*it(39)+3*it(43)+3
  Such that:it(39) =< V__imagelength-V_1
it(43) =< V_1-V_i_0

  with precondition: [B=4,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V__imagelength>=V_1+2,V_1>=V_i_0+1] 

* Chain [[43],47,59]: 3*it(43)+5
  Such that:it(43) =< V_1-V_i_0

  with precondition: [B=4,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V__imagelength>=V_1+2,V_1>=V_i_0+1] 

* Chain [[43],47,57]: 3*it(43)+3
  Such that:it(43) =< V__imagelength-V_i_0

  with precondition: [B=4,V__imagelength=V_1+1,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V__imagelength>=V_i_0+2] 

* Chain [[42],[43],63]: 6*it(42)+2*s(50)+2
  Such that:aux(10) =< V_1-V_i_0
it(42) =< aux(10)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],[43],58]: 6*it(42)+2*s(50)+2
  Such that:aux(11) =< -V_i_0+E
it(42) =< aux(11)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3,E>=V_i_0+3] 

* Chain [[42],[43],57]: 6*it(42)+2*s(50)+0
  Such that:aux(12) =< -V_i_0+E
it(42) =< aux(12)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,E>=V_i_0+2,V_1>=E] 

* Chain [[42],[43],47,[39],59]: 3*it(39)+6*it(42)+2*s(50)+5
  Such that:it(39) =< -V_1+E
aux(13) =< V_1-V_i_0
it(42) =< aux(13)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],[43],47,[39],57]: 3*it(39)+6*it(42)+2*s(50)+3
  Such that:it(39) =< -V_1+E
aux(14) =< V_1-V_i_0
it(42) =< aux(14)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],[43],47,59]: 6*it(42)+2*s(50)+5
  Such that:aux(15) =< V_1-V_i_0
it(42) =< aux(15)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],[43],47,57]: 6*it(42)+2*s(50)+3
  Such that:aux(16) =< V_1-V_i_0+1
it(42) =< aux(16)

  with precondition: [B=4,V_1+1=E,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],63]: 3*it(42)+2*s(50)+2
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],62]: 3*it(42)+4*s(50)+2
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],61]: 3*it(42)+3*s(12)+2
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],58]: 3*it(42)+2*s(50)+2
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2,E>=V_i_0+2] 

* Chain [[42],57]: 3*it(42)+2*s(50)+0
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1>=E] 

* Chain [[42],55]: 3*it(42)+4*s(50)+2
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],53]: 3*it(42)+3*s(13)+2
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],47,[39],59]: 3*it(39)+3*it(42)+2*s(50)+5
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],47,[39],57]: 3*it(39)+3*it(42)+2*s(50)+3
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],47,59]: 3*it(42)+2*s(50)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],47,57]: 3*it(42)+2*s(50)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,V_1+1=E,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[39],59]: 3*it(39)+3*it(42)+4*s(50)+5
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[39],57]: 3*it(39)+3*it(42)+4*s(50)+3
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38]]...: 9*it(38)+3*it(42)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],[39],59]: 9*it(38)+3*it(39)+3*it(42)+5
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],[39],57]: 9*it(38)+3*it(39)+3*it(42)+3
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],59]: 9*it(38)+3*it(42)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],57]: 9*it(38)+3*it(42)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],56]: 11*it(38)+3*it(42)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],54]: 10*it(38)+3*it(42)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],37,[39],59]: 10*it(38)+3*it(39)+3*it(42)+8
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+5,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],37,[39],57]: 10*it(38)+3*it(39)+3*it(42)+6
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],37,59]: 10*it(38)+3*it(42)+8
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],37,57]: 10*it(38)+3*it(42)+6
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],34]...: 10*aux(7)+3*it(42)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,[38],30]...: 10*aux(17)+3*it(42)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,59]: 3*it(42)+4*s(50)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,57]: 3*it(42)+4*s(50)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1+1>=E] 

* Chain [[42],46,56]: 3*it(42)+6*s(50)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,54]: 3*it(42)+5*s(25)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,37,[39],59]: 3*it(39)+3*it(42)+5*s(26)+8
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,37,[39],57]: 3*it(39)+3*it(42)+5*s(26)+6
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,37,59]: 3*it(42)+5*s(26)+8
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,37,57]: 3*it(42)+5*s(26)+6
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1+2>=E] 

* Chain [[42],46,34]...: 5*aux(7)+3*it(42)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],46,30]...: 5*aux(17)+3*it(42)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],45,[39],59]: 3*it(39)+3*it(42)+3*s(33)+5
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],45,[39],57]: 3*it(39)+3*it(42)+3*s(33)+3
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],45,59]: 3*it(42)+3*s(33)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],45,57]: 3*it(42)+3*s(33)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1+1>=E] 

* Chain [[42],41,[43],63]: 6*it(42)+3*s(34)+5
  Such that:aux(18) =< V_1-V_i_0
it(42) =< aux(18)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[42],41,[43],58]: 6*it(42)+3*s(34)+5
  Such that:aux(19) =< -V_i_0+E
it(42) =< aux(19)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+4,E>=V_i_0+4] 

* Chain [[42],41,[43],57]: 6*it(42)+3*s(34)+3
  Such that:aux(20) =< -V_i_0+E
it(42) =< aux(20)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,E>=V_i_0+3,V_1>=E] 

* Chain [[42],41,[43],47,[39],59]: 3*it(39)+6*it(42)+3*s(34)+8
  Such that:it(39) =< -V_1+E
aux(21) =< V_1-V_i_0
it(42) =< aux(21)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[42],41,[43],47,[39],57]: 3*it(39)+6*it(42)+3*s(34)+6
  Such that:it(39) =< -V_1+E
aux(22) =< V_1-V_i_0
it(42) =< aux(22)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[42],41,[43],47,59]: 6*it(42)+3*s(34)+8
  Such that:aux(23) =< V_1-V_i_0
it(42) =< aux(23)

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[42],41,[43],47,57]: 6*it(42)+3*s(34)+6
  Such that:aux(24) =< V_1-V_i_0+1
it(42) =< aux(24)

  with precondition: [B=4,V_1+1=E,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[42],41,63]: 3*it(42)+3*s(34)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],41,58]: 3*it(42)+3*s(34)+5
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3,E>=V_i_0+3] 

* Chain [[42],41,57]: 3*it(42)+3*s(34)+3
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2,V_1>=E] 

* Chain [[42],41,47,[39],59]: 3*it(39)+3*it(42)+3*s(34)+8
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],41,47,[39],57]: 3*it(39)+3*it(42)+3*s(34)+6
  Such that:it(39) =< -V_1+E
it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],41,47,59]: 3*it(42)+3*s(34)+8
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],41,47,57]: 3*it(42)+3*s(34)+6
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,V_1+1=E,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],35]...: 3*aux(8)+3*it(42)+0
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],33]...: 3*aux(9)+3*it(42)+0
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[42],32]...: 3*aux(25)+3*it(42)+0
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[42],29]...: 3*aux(26)+3*it(42)+0
  Such that:it(42) =< V_1-V_i_0

  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],[43],63]: 7*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+2
  Such that:aux(27) =< V_3
aux(30) =< V_1-V_i_0
it(40) =< aux(30)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],[43],58]: 7*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+2
  Such that:aux(27) =< V_3
aux(31) =< -V_i_0+E
it(40) =< aux(31)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3,E>=V_i_0+3] 

* Chain [[40],[43],57]: 7*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:aux(27) =< V_3
aux(32) =< -V_i_0+E
it(40) =< aux(32)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,E>=V_i_0+2,V_1>=E] 

* Chain [[40],[43],47,[39],59]: 3*it(39)+7*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:it(39) =< -V_1+E
aux(27) =< V_3
aux(33) =< V_1-V_i_0
it(40) =< aux(33)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],[43],47,[39],57]: 3*it(39)+7*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+3
  Such that:it(39) =< -V_1+E
aux(27) =< V_3
aux(34) =< V_1-V_i_0
it(40) =< aux(34)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],[43],47,59]: 7*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:aux(27) =< V_3
aux(35) =< V_1-V_i_0
it(40) =< aux(35)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],[43],47,57]: 7*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+3
  Such that:aux(27) =< V_3
aux(36) =< -V_i_0+E
it(40) =< aux(36)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V_1+1=E,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],63]: 4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+2
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],61]: 4*it(40)+5*s(12)+1*s(87)+1*s(88)+1*s(89)+2
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],60]: 4*it(40)+8*s(86)+1*s(87)+1*s(88)+1*s(89)+1*s(91)+2*s(93)+3
  Such that:it(40) =< V_1-V_i_0
s(91) =< V_3+1
aux(38) =< V_3
s(93) =< aux(38)
aux(29) =< aux(38)+1
aux(28) =< aux(38)
s(89) =< it(40)*aux(38)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],58]: 4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+2
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2,E>=V_i_0+2] 

* Chain [[40],57]: 4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1>=E] 

* Chain [[40],53]: 4*it(40)+5*s(13)+1*s(87)+1*s(88)+1*s(89)+2
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],51]: 4*it(40)+8*s(86)+1*s(87)+1*s(88)+1*s(89)+1*s(98)+2*s(100)+3
  Such that:it(40) =< V_1-V_i_0
s(98) =< V_3+1
aux(40) =< V_3
s(100) =< aux(40)
aux(29) =< aux(40)+1
aux(28) =< aux(40)
s(89) =< it(40)*aux(40)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],47,[39],59]: 3*it(39)+4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],47,[39],57]: 3*it(39)+4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+3
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],47,59]: 4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],47,57]: 4*it(40)+4*s(86)+1*s(87)+1*s(88)+1*s(89)+3
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V_1+1=E,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],45,[39],59]: 3*it(39)+4*it(40)+5*s(33)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],45,[39],57]: 3*it(39)+4*it(40)+5*s(33)+1*s(87)+1*s(88)+1*s(89)+3
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],45,59]: 4*it(40)+5*s(33)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],45,57]: 4*it(40)+5*s(33)+1*s(87)+1*s(88)+1*s(89)+3
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1+1>=E] 

* Chain [[40],44,[39],59]: 3*it(39)+4*it(40)+8*s(86)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+6
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(42) =< V_3
s(107) =< aux(42)
aux(29) =< aux(42)+1
aux(28) =< aux(42)
s(89) =< it(40)*aux(42)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[39],57]: 3*it(39)+4*it(40)+8*s(86)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+4
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(44) =< V_3
s(107) =< aux(44)
aux(29) =< aux(44)+1
aux(28) =< aux(44)
s(89) =< it(40)*aux(44)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36]]...: 19*it(36)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+4
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(49) =< V_3
s(107) =< aux(49)
aux(29) =< aux(49)+1
aux(28) =< aux(49)
s(89) =< it(40)*aux(49)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],[39],59]: 19*it(36)+3*it(39)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+6
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(51) =< V_3
s(107) =< aux(51)
aux(29) =< aux(51)+1
aux(28) =< aux(51)
s(89) =< it(40)*aux(51)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],[39],57]: 19*it(36)+3*it(39)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+4
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(53) =< V_3
s(107) =< aux(53)
aux(29) =< aux(53)+1
aux(28) =< aux(53)
s(89) =< it(40)*aux(53)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],59]: 19*it(36)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+6
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(55) =< V_3
s(107) =< aux(55)
aux(29) =< aux(55)+1
aux(28) =< aux(55)
s(89) =< it(40)*aux(55)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],57]: 19*it(36)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+4
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(57) =< V_3
s(107) =< aux(57)
aux(29) =< aux(57)+1
aux(28) =< aux(57)
s(89) =< it(40)*aux(57)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],54]: 20*it(36)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+6
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(59) =< V_3
s(107) =< aux(59)
aux(29) =< aux(59)+1
aux(28) =< aux(59)
s(89) =< it(40)*aux(59)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],52]: 23*it(36)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+2*s(105)+4*s(107)+7
  Such that:it(40) =< V_1-V_i_0
aux(62) =< V_3+1
aux(63) =< V_3
s(107) =< aux(63)
s(105) =< aux(62)
aux(29) =< aux(63)+1
aux(28) =< aux(63)
s(89) =< it(40)*aux(63)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],37,[39],59]: 20*it(36)+3*it(39)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+9
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(65) =< V_3
s(107) =< aux(65)
aux(29) =< aux(65)+1
aux(28) =< aux(65)
s(89) =< it(40)*aux(65)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+5,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],37,[39],57]: 20*it(36)+3*it(39)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+7
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(67) =< V_3
s(107) =< aux(67)
aux(29) =< aux(67)+1
aux(28) =< aux(67)
s(89) =< it(40)*aux(67)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],37,59]: 20*it(36)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+9
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(69) =< V_3
s(107) =< aux(69)
aux(29) =< aux(69)+1
aux(28) =< aux(69)
s(89) =< it(40)*aux(69)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],37,57]: 20*it(36)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+7
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(71) =< V_3
s(107) =< aux(71)
aux(29) =< aux(71)+1
aux(28) =< aux(71)
s(89) =< it(40)*aux(71)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],34]...: 20*aux(7)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+4
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(73) =< V_3
s(107) =< aux(73)
aux(29) =< aux(73)+1
aux(28) =< aux(73)
s(89) =< it(40)*aux(73)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,[36],28]...: 23*it(36)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+4*s(107)+8
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(76) =< V_3
s(107) =< aux(76)
aux(29) =< aux(76)+1
aux(28) =< aux(76)
s(89) =< it(40)*aux(76)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,59]: 4*it(40)+8*s(86)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+6
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(78) =< V_3
s(107) =< aux(78)
aux(29) =< aux(78)+1
aux(28) =< aux(78)
s(89) =< it(40)*aux(78)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,57]: 4*it(40)+8*s(86)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+4
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(80) =< V_3
s(107) =< aux(80)
aux(29) =< aux(80)+1
aux(28) =< aux(80)
s(89) =< it(40)*aux(80)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1+1>=E] 

* Chain [[40],44,54]: 4*it(40)+9*s(25)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+6
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(82) =< V_3
s(107) =< aux(82)
aux(29) =< aux(82)+1
aux(28) =< aux(82)
s(89) =< it(40)*aux(82)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,52]: 4*it(40)+12*s(86)+1*s(87)+1*s(88)+1*s(89)+2*s(105)+4*s(107)+7
  Such that:it(40) =< V_1-V_i_0
aux(84) =< V_3+1
aux(85) =< V_3
s(107) =< aux(85)
s(105) =< aux(84)
aux(29) =< aux(85)+1
aux(28) =< aux(85)
s(89) =< it(40)*aux(85)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,37,[39],59]: 3*it(39)+4*it(40)+9*s(26)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+9
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(87) =< V_3
s(107) =< aux(87)
aux(29) =< aux(87)+1
aux(28) =< aux(87)
s(89) =< it(40)*aux(87)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+4,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,37,[39],57]: 3*it(39)+4*it(40)+9*s(26)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+7
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(89) =< V_3
s(107) =< aux(89)
aux(29) =< aux(89)+1
aux(28) =< aux(89)
s(89) =< it(40)*aux(89)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,37,59]: 4*it(40)+9*s(26)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+9
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(91) =< V_3
s(107) =< aux(91)
aux(29) =< aux(91)+1
aux(28) =< aux(91)
s(89) =< it(40)*aux(91)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,37,57]: 4*it(40)+9*s(26)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+7
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(93) =< V_3
s(107) =< aux(93)
aux(29) =< aux(93)+1
aux(28) =< aux(93)
s(89) =< it(40)*aux(93)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_1+2>=E] 

* Chain [[40],44,34]...: 9*aux(7)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+2*s(107)+4
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(95) =< V_3
s(107) =< aux(95)
aux(29) =< aux(95)+1
aux(28) =< aux(95)
s(89) =< it(40)*aux(95)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],44,28]...: 4*it(40)+12*s(86)+1*s(87)+1*s(88)+1*s(89)+1*s(105)+4*s(107)+8
  Such that:it(40) =< V_1-V_i_0
s(105) =< V_3+1
aux(97) =< V_3
s(107) =< aux(97)
aux(29) =< aux(97)+1
aux(28) =< aux(97)
s(89) =< it(40)*aux(97)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],41,[43],63]: 7*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:aux(27) =< V_3
aux(98) =< V_1-V_i_0
it(40) =< aux(98)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[40],41,[43],58]: 7*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:aux(27) =< V_3
aux(99) =< -V_i_0+E
it(40) =< aux(99)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+4,E>=V_i_0+4] 

* Chain [[40],41,[43],57]: 7*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+3
  Such that:aux(27) =< V_3
aux(100) =< -V_i_0+E
it(40) =< aux(100)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,E>=V_i_0+3,V_1>=E] 

* Chain [[40],41,[43],47,[39],59]: 3*it(39)+7*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+8
  Such that:it(39) =< -V_1+E
aux(27) =< V_3
aux(101) =< V_1-V_i_0
it(40) =< aux(101)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[40],41,[43],47,[39],57]: 3*it(39)+7*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+6
  Such that:it(39) =< -V_1+E
aux(27) =< V_3
aux(102) =< V_1-V_i_0
it(40) =< aux(102)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[40],41,[43],47,59]: 7*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+8
  Such that:aux(27) =< V_3
aux(103) =< V_1-V_i_0
it(40) =< aux(103)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[40],41,[43],47,57]: 7*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+6
  Such that:aux(27) =< V_3
aux(104) =< -V_i_0+E
it(40) =< aux(104)
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V_1+1=E,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3] 

* Chain [[40],41,63]: 4*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],41,58]: 4*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+5
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3,E>=V_i_0+3] 

* Chain [[40],41,57]: 4*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+3
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2,V_1>=E] 

* Chain [[40],41,47,[39],59]: 3*it(39)+4*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+8
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],41,47,[39],57]: 3*it(39)+4*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+6
  Such that:it(39) =< -V_1+E
it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],41,47,59]: 4*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+8
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],41,47,57]: 4*it(40)+5*s(34)+1*s(87)+1*s(88)+1*s(89)+6
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V_1+1=E,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],35]...: 5*aux(8)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],33]...: 5*aux(9)+4*it(40)+1*s(87)+1*s(88)+1*s(89)+0
  Such that:it(40) =< V_1-V_i_0
aux(27) =< V_3
aux(29) =< aux(27)+1
aux(28) =< aux(27)
s(89) =< it(40)*aux(27)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[40],31]...: 4*it(40)+8*s(86)+1*s(87)+1*s(88)+1*s(89)+2*s(140)+4
  Such that:it(40) =< V_1-V_i_0
aux(106) =< V_3
s(140) =< aux(106)
aux(29) =< aux(106)+1
aux(28) =< aux(106)
s(89) =< it(40)*aux(106)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [[40],27]...: 4*it(40)+8*s(86)+1*s(87)+1*s(88)+1*s(89)+2*s(146)+4
  Such that:it(40) =< V_1-V_i_0
aux(108) =< V_3
s(146) =< aux(108)
aux(29) =< aux(108)+1
aux(28) =< aux(108)
s(89) =< it(40)*aux(108)
s(87) =< it(40)*aux(29)
s(88) =< it(40)*aux(28)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [[39],59]: 3*it(39)+2
  Such that:it(39) =< V__imagelength-V_i_0

  with precondition: [B=4,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V_i_0>=V_1+1,V__imagelength>=V_i_0+2] 

* Chain [[39],57]: 3*it(39)+0
  Such that:it(39) =< V__imagelength-V_i_0

  with precondition: [B=4,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[38]]...: 5*it(38)+0
  with precondition: [V__imagewidth>=1,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,0>=V_3+1,B=4] 

* Chain [[38],[39],59]: 5*it(38)+3*it(39)+2
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [[38],[39],57]: 5*it(38)+3*it(39)+0
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+2] 

* Chain [[38],59]: 5*it(38)+2
  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+2] 

* Chain [[38],57]: 5*it(38)+0
  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[38],56]: 7*it(38)+2
  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[38],54]: 6*it(38)+2
  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[38],37,[39],59]: 6*it(38)+3*it(39)+5
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+4] 

* Chain [[38],37,[39],57]: 6*it(38)+3*it(39)+3
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [[38],37,59]: 6*it(38)+5
  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [[38],37,57]: 6*it(38)+3
  with precondition: [B=4,0>=V_3+1,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[38],34]...: 6*aux(7)+0
  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[38],30]...: 6*aux(17)+0
  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[36]]...: 11*it(36)+0
  with precondition: [V__imagewidth>=1,V__imagelength>=V_i_0+1,V_i_0>=V_1+1,V_3>=1,B=4] 

* Chain [[36],[39],59]: 11*it(36)+3*it(39)+2
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [[36],[39],57]: 11*it(36)+3*it(39)+0
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+2] 

* Chain [[36],59]: 11*it(36)+2
  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+2] 

* Chain [[36],57]: 11*it(36)+0
  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[36],54]: 12*it(36)+2
  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[36],52]: 15*it(36)+1*s(127)+2*s(129)+3
  Such that:aux(60) =< V_3
s(127) =< V_3+1
s(129) =< aux(60)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[36],37,[39],59]: 12*it(36)+3*it(39)+5
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+4] 

* Chain [[36],37,[39],57]: 12*it(36)+3*it(39)+3
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [[36],37,59]: 12*it(36)+5
  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [[36],37,57]: 12*it(36)+3
  with precondition: [B=4,0>=D,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[36],34]...: 12*aux(7)+0
  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [[36],28]...: 15*it(36)+2*s(134)+4
  Such that:aux(74) =< V_3
s(134) =< aux(74)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [66]: 1*aux(2)+0
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [65]: 1*aux(6)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [64]: 1*aux(3)+0
  with precondition: [V_3=0,B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [63]: 2
  with precondition: [B=4,C=V__threshold,D=V__imagewidth,V_1=V_i_0,V__imagelength=E,V__imagelength>=V_1+1] 

* Chain [62]: 2*s(51)+2
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [61]: 1*s(12)+2
  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [60]: 4*s(90)+1*s(91)+2*s(93)+3
  Such that:s(91) =< V_3+1
aux(37) =< V_3
s(93) =< aux(37)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [59]: 2
  with precondition: [B=4,C=V__threshold,D=V__imagewidth,V__imagelength=E,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [58]: 2
  with precondition: [B=4,C=V__threshold,D=V__imagewidth,V__imagelength=E,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [57]: 0
  with precondition: [B=4,C=V__threshold,D=V__imagewidth,V__imagelength=E,V_i_0>=V__imagelength] 

* Chain [56]: 2*s(61)+2
  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [55]: 2*s(53)+2
  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [54]: 1*s(25)+2
  with precondition: [B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [53]: 1*s(13)+2
  with precondition: [B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [52]: 4*s(126)+1*s(127)+2*s(129)+3
  Such that:s(127) =< V_3+1
aux(60) =< V_3
s(129) =< aux(60)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [51]: 4*s(97)+1*s(98)+2*s(100)+3
  Such that:s(98) =< V_3+1
aux(39) =< V_3
s(100) =< aux(39)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [50,[48]]...: 2*aux(5)+0
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [50,[48],[39],59]: 2*aux(5)+3*it(39)+2
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [50,[48],[39],57]: 2*aux(5)+3*it(39)+0
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [50,[48],65]: 3*aux(5)+0
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [50,[48],59]: 2*aux(5)+2
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [50,[48],57]: 2*aux(5)+0
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [50,[48],54]: 3*aux(5)+2
  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [50,[48],37,[39],59]: 3*aux(5)+3*it(39)+5
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+5] 

* Chain [50,[48],37,[39],57]: 3*aux(5)+3*it(39)+3
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [50,[48],37,59]: 3*aux(5)+5
  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [50,[48],37,57]: 3*aux(5)+3
  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [50,[48],34]...: 3*aux(5)+0
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [50,[39],59]: 1*aux(5)+3*it(39)+2
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [50,[39],57]: 1*aux(5)+3*it(39)+0
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+2] 

* Chain [50,65]: 2*aux(5)+0
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [50,59]: 1*aux(5)+2
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+2] 

* Chain [50,57]: 1*aux(5)+0
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1,V_1+1>=E] 

* Chain [50,54]: 2*aux(5)+2
  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [50,37,[39],59]: 2*aux(5)+3*it(39)+5
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [50,37,[39],57]: 2*aux(5)+3*it(39)+3
  Such that:it(39) =< -V_i_0+E

  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [50,37,59]: 2*aux(5)+5
  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [50,37,57]: 2*aux(5)+3
  with precondition: [V_3=0,B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,V_1+2>=E] 

* Chain [50,34]...: 2*aux(5)+0
  with precondition: [V_3=0,B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [47,[39],59]: 3*it(39)+5
  Such that:it(39) =< V__imagelength-V_i_0

  with precondition: [B=4,V_1=V_i_0,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V__imagelength>=V_1+3] 

* Chain [47,[39],57]: 3*it(39)+3
  Such that:it(39) =< V__imagelength-V_i_0

  with precondition: [B=4,V_1=V_i_0,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V__imagelength>=V_1+2] 

* Chain [47,59]: 5
  with precondition: [B=4,V_1=V_i_0,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth,V__imagelength>=V_1+2] 

* Chain [47,57]: 3
  with precondition: [B=4,V__imagelength=V_1+1,V__imagelength=V_i_0+1,V__threshold=C,V__imagewidth=D,V__imagelength=E,0>=V__imagewidth] 

* Chain [46,[39],59]: 3*it(39)+2*s(55)+5
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [46,[39],57]: 3*it(39)+2*s(55)+3
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+2] 

* Chain [46,[38]]...: 7*it(38)+3
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,[38],[39],59]: 7*it(38)+3*it(39)+5
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [46,[38],[39],57]: 7*it(38)+3*it(39)+3
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [46,[38],59]: 7*it(38)+5
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [46,[38],57]: 7*it(38)+3
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,[38],56]: 9*it(38)+5
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,[38],54]: 8*it(38)+5
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,[38],37,[39],59]: 8*it(38)+3*it(39)+8
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+5] 

* Chain [46,[38],37,[39],57]: 8*it(38)+3*it(39)+6
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [46,[38],37,59]: 8*it(38)+8
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [46,[38],37,57]: 8*it(38)+6
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,[38],34]...: 8*aux(7)+3
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,[38],30]...: 8*aux(17)+3
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,59]: 2*s(55)+5
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+2] 

* Chain [46,57]: 2*s(55)+3
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1,V_1+1>=E] 

* Chain [46,56]: 4*s(55)+5
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,54]: 3*s(25)+5
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,37,[39],59]: 3*it(39)+3*s(26)+8
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [46,37,[39],57]: 3*it(39)+3*s(26)+6
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [46,37,59]: 3*s(26)+8
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [46,37,57]: 3*s(26)+6
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,V_1+2>=E] 

* Chain [46,34]...: 3*aux(7)+3
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [46,30]...: 3*aux(17)+3
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [45,[39],59]: 3*it(39)+1*s(33)+5
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [45,[39],57]: 3*it(39)+1*s(33)+3
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+2] 

* Chain [45,59]: 1*s(33)+5
  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,E>=V_1+2] 

* Chain [45,57]: 1*s(33)+3
  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V__imagelength>=V_1+1,V_1+1>=E] 

* Chain [44,[39],59]: 3*it(39)+4*s(104)+1*s(105)+2*s(107)+6
  Such that:s(105) =< V_3+1
it(39) =< -V_i_0+E
aux(41) =< V_3
s(107) =< aux(41)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [44,[39],57]: 3*it(39)+4*s(104)+1*s(105)+2*s(107)+4
  Such that:s(105) =< V_3+1
it(39) =< -V_i_0+E
aux(43) =< V_3
s(107) =< aux(43)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+2] 

* Chain [44,[36]]...: 15*it(36)+1*s(105)+2*s(107)+4
  Such that:s(105) =< V_3+1
aux(48) =< V_3
s(107) =< aux(48)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,[36],[39],59]: 15*it(36)+3*it(39)+1*s(105)+2*s(107)+6
  Such that:s(105) =< V_3+1
it(39) =< -V_i_0+E
aux(50) =< V_3
s(107) =< aux(50)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [44,[36],[39],57]: 15*it(36)+3*it(39)+1*s(105)+2*s(107)+4
  Such that:s(105) =< V_3+1
it(39) =< -V_i_0+E
aux(52) =< V_3
s(107) =< aux(52)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [44,[36],59]: 15*it(36)+1*s(105)+2*s(107)+6
  Such that:s(105) =< V_3+1
aux(54) =< V_3
s(107) =< aux(54)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [44,[36],57]: 15*it(36)+1*s(105)+2*s(107)+4
  Such that:s(105) =< V_3+1
aux(56) =< V_3
s(107) =< aux(56)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,[36],54]: 16*it(36)+1*s(105)+2*s(107)+6
  Such that:s(105) =< V_3+1
aux(58) =< V_3
s(107) =< aux(58)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,[36],52]: 19*it(36)+2*s(105)+4*s(107)+7
  Such that:aux(61) =< V_3
aux(62) =< V_3+1
s(107) =< aux(61)
s(105) =< aux(62)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,[36],37,[39],59]: 16*it(36)+3*it(39)+1*s(105)+2*s(107)+9
  Such that:s(105) =< V_3+1
it(39) =< -V_i_0+E
aux(64) =< V_3
s(107) =< aux(64)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+5] 

* Chain [44,[36],37,[39],57]: 16*it(36)+3*it(39)+1*s(105)+2*s(107)+7
  Such that:s(105) =< V_3+1
it(39) =< -V_i_0+E
aux(66) =< V_3
s(107) =< aux(66)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [44,[36],37,59]: 16*it(36)+1*s(105)+2*s(107)+9
  Such that:s(105) =< V_3+1
aux(68) =< V_3
s(107) =< aux(68)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [44,[36],37,57]: 16*it(36)+1*s(105)+2*s(107)+7
  Such that:s(105) =< V_3+1
aux(70) =< V_3
s(107) =< aux(70)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,[36],34]...: 16*aux(7)+1*s(105)+2*s(107)+4
  Such that:s(105) =< V_3+1
aux(72) =< V_3
s(107) =< aux(72)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,[36],28]...: 19*it(36)+1*s(105)+4*s(107)+8
  Such that:s(105) =< V_3+1
aux(75) =< V_3
s(107) =< aux(75)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,59]: 4*s(104)+1*s(105)+2*s(107)+6
  Such that:s(105) =< V_3+1
aux(77) =< V_3
s(107) =< aux(77)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+2] 

* Chain [44,57]: 4*s(104)+1*s(105)+2*s(107)+4
  Such that:s(105) =< V_3+1
aux(79) =< V_3
s(107) =< aux(79)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,V_1+1>=E] 

* Chain [44,54]: 5*s(25)+1*s(105)+2*s(107)+6
  Such that:s(105) =< V_3+1
aux(81) =< V_3
s(107) =< aux(81)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,52]: 8*s(104)+2*s(105)+4*s(107)+7
  Such that:aux(83) =< V_3
aux(84) =< V_3+1
s(107) =< aux(83)
s(105) =< aux(84)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,37,[39],59]: 3*it(39)+5*s(26)+1*s(105)+2*s(107)+9
  Such that:s(105) =< V_3+1
it(39) =< -V_i_0+E
aux(86) =< V_3
s(107) =< aux(86)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+4] 

* Chain [44,37,[39],57]: 3*it(39)+5*s(26)+1*s(105)+2*s(107)+7
  Such that:s(105) =< V_3+1
it(39) =< -V_i_0+E
aux(88) =< V_3
s(107) =< aux(88)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [44,37,59]: 5*s(26)+1*s(105)+2*s(107)+9
  Such that:s(105) =< V_3+1
aux(90) =< V_3
s(107) =< aux(90)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,E>=V_1+3] 

* Chain [44,37,57]: 5*s(26)+1*s(105)+2*s(107)+7
  Such that:s(105) =< V_3+1
aux(92) =< V_3
s(107) =< aux(92)

  with precondition: [B=4,V_1=V_i_0,0>=D,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1,V_1+2>=E] 

* Chain [44,34]...: 5*aux(7)+1*s(105)+2*s(107)+4
  Such that:s(105) =< V_3+1
aux(94) =< V_3
s(107) =< aux(94)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [44,28]...: 8*s(104)+1*s(105)+4*s(107)+8
  Such that:s(105) =< V_3+1
aux(96) =< V_3
s(107) =< aux(96)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [41,[43],63]: 3*it(43)+1*s(34)+5
  Such that:it(43) =< V_1-V_i_0

  with precondition: [B=4,0>=D,V__imagewidth>=1,E>=V_1+1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [41,[43],58]: 3*it(43)+1*s(34)+5
  Such that:it(43) =< -V_i_0+E

  with precondition: [B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+3,E>=V_i_0+3] 

* Chain [41,[43],57]: 3*it(43)+1*s(34)+3
  Such that:it(43) =< -V_i_0+E

  with precondition: [B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,E>=V_i_0+2,V_1>=E] 

* Chain [41,[43],47,[39],59]: 3*it(39)+3*it(43)+1*s(34)+8
  Such that:it(39) =< -V_1+E
it(43) =< V_1-V_i_0

  with precondition: [B=4,0>=D,V__imagewidth>=1,E>=V_1+3,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [41,[43],47,[39],57]: 3*it(39)+3*it(43)+1*s(34)+6
  Such that:it(39) =< -V_1+E
it(43) =< V_1-V_i_0

  with precondition: [B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [41,[43],47,59]: 3*it(43)+1*s(34)+8
  Such that:it(43) =< V_1-V_i_0

  with precondition: [B=4,0>=D,V__imagewidth>=1,E>=V_1+2,V__imagelength>=V_i_0+1,V_1>=V_i_0+2] 

* Chain [41,[43],47,57]: 3*it(43)+1*s(34)+6
  Such that:it(43) =< -V_i_0+E

  with precondition: [B=4,E=V_1+1,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [41,63]: 1*s(34)+5
  with precondition: [B=4,V_1=V_i_0+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1,E>=V_1+1] 

* Chain [41,58]: 1*s(34)+5
  with precondition: [B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+2,E>=V_i_0+2] 

* Chain [41,57]: 1*s(34)+3
  with precondition: [B=4,0>=D,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1,V_i_0+1>=E] 

* Chain [41,47,[39],59]: 3*it(39)+1*s(34)+8
  Such that:it(39) =< -V_1+E

  with precondition: [B=4,V_1=V_i_0+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1,E>=V_1+3] 

* Chain [41,47,[39],57]: 3*it(39)+1*s(34)+6
  Such that:it(39) =< -V_1+E

  with precondition: [B=4,V_1=V_i_0+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1,E>=V_1+2] 

* Chain [41,47,59]: 1*s(34)+8
  with precondition: [B=4,V_1=V_i_0+1,0>=D,V__imagewidth>=1,V__imagelength>=V_1,E>=V_1+2] 

* Chain [41,47,57]: 1*s(34)+6
  with precondition: [B=4,E=V_1+1,E=V_i_0+2,0>=D,V__imagewidth>=1,V__imagelength+1>=E] 

* Chain [37,[39],59]: 3*it(39)+1*s(26)+5
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+3] 

* Chain [37,[39],57]: 3*it(39)+1*s(26)+3
  Such that:it(39) =< -V_i_0+E

  with precondition: [B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+2] 

* Chain [37,59]: 1*s(26)+5
  with precondition: [B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,E>=V_i_0+2] 

* Chain [37,57]: 1*s(26)+3
  with precondition: [B=4,0>=D,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1,V_i_0+1>=E] 

* Chain [35]...: 1*aux(8)+0
  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [34]...: 1*aux(7)+0
  with precondition: [B=4,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [33]...: 1*aux(9)+0
  with precondition: [B=4,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [32]...: 1*aux(25)+0
  with precondition: [B=4,V_1=V_i_0,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_1+1] 

* Chain [31]...: 4*s(139)+2*s(140)+4
  Such that:aux(105) =< V_3
s(140) =< aux(105)

  with precondition: [B=4,V_1=V_i_0,V__imagewidth>=1,V_3>=1,V__imagelength>=V_1+1] 

* Chain [30]...: 1*aux(17)+0
  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [29]...: 1*aux(26)+0
  with precondition: [B=4,0>=V_3+1,V__imagewidth>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 

* Chain [28]...: 4*s(133)+2*s(134)+4
  Such that:aux(74) =< V_3
s(134) =< aux(74)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V_i_0>=V_1+1,V__imagelength>=V_i_0+1] 

* Chain [27]...: 4*s(145)+2*s(146)+4
  Such that:aux(107) =< V_3
s(146) =< aux(107)

  with precondition: [B=4,V__imagewidth>=1,V_3>=1,V__imagelength>=V_i_0+1,V_1>=V_i_0+1] 


#### Cost of chains of loop_cont_eval_fsdither_bb1_in(O,A,B,C,D,E,F,G,H):
* Chain [86]: 245*s(1324)+6*s(1327)+14*s(1331)+28*s(1333)+10
  Such that:s(1326) =< C-D
s(1328) =< E
s(1329) =< E+1
s(1327) =< s(1326)
s(1331) =< s(1329)
s(1333) =< s(1328)

  with precondition: [O=5,D=G,C>=D+1] 

* Chain [85]: 134*s(1336)+6*s(1339)+6
  Such that:s(1338) =< C-G
s(1339) =< s(1338)

  with precondition: [O=5,G>=D+1,C>=G+1] 

* Chain [84]: 260*s(1344)+55*s(1349)+6*s(1359)+9*s(1360)+1*s(1372)+1*s(1373)+1*s(1374)+12*s(1375)+9
  Such that:s(1356) =< C-D
s(1357) =< C-G
s(1364) =< D-G+1
s(1365) =< E
aux(169) =< D-G
s(1359) =< s(1356)
s(1360) =< s(1357)
s(1349) =< aux(169)
s(1370) =< s(1365)+1
s(1371) =< s(1365)
s(1372) =< s(1349)*s(1365)
s(1373) =< s(1349)*s(1370)
s(1374) =< s(1349)*s(1371)
s(1375) =< s(1364)

  with precondition: [O=5,C>=G+1,D>=G+1] 

* Chain [83]: 6*s(1381)+5*s(1382)+9
  with precondition: [O=5,D=G+1,B>=1,C>=D] 

* Chain [82]: 24*s(1384)+106*s(1385)+9
  with precondition: [O=5,D=G,0>=E+1,B>=1,C>=D+1] 

* Chain [81]: 9*s(1388)+18*s(1389)+69*s(1390)+8
  Such that:s(1386) =< E
s(1387) =< E+1
s(1388) =< s(1387)
s(1389) =< s(1386)

  with precondition: [O=5,D=G,B>=1,E>=1,C>=D+1] 

* Chain [80]: 12*s(1392)+59*s(1393)+6
  with precondition: [O=5,0>=E+1,B>=1,G>=D+1,C>=G+1] 

* Chain [79]: 171*s(1396)+312*s(1397)+9
  Such that:aux(170) =< D-G
s(1396) =< aux(170)

  with precondition: [O=5,0>=E+1,B>=1,C>=G+1,D>=G+1] 

* Chain [78]: 2*s(1411)+4*s(1412)+41*s(1413)+4
  Such that:s(1409) =< E
s(1410) =< E+1
s(1411) =< s(1410)
s(1412) =< s(1409)

  with precondition: [O=5,B>=1,E>=1,G>=D+1,C>=G+1] 

* Chain [77]: 220*s(1418)+25*s(1419)+49*s(1422)+49*s(1423)+49*s(1424)+50*s(1425)+544*s(1426)+10
  Such that:aux(171) =< D-G
aux(172) =< E
aux(173) =< E+1
s(1418) =< aux(171)
s(1419) =< aux(173)
s(1420) =< aux(172)+1
s(1421) =< aux(172)
s(1422) =< s(1418)*aux(172)
s(1423) =< s(1418)*s(1420)
s(1424) =< s(1418)*s(1421)
s(1425) =< aux(172)

  with precondition: [O=5,B>=1,E>=1,C>=G+1,D>=G+1] 

* Chain [76]: 1
  with precondition: [O=5,G>=C] 

* Chain [75]...: 1*aux(174)+0
  with precondition: [O=5,D=G,B>=1,C>=D+1] 

* Chain [74]...: 1*aux(175)+0
  with precondition: [O=5,B>=1,G>=D+1,C>=G+1] 

* Chain [73]...: 1*aux(176)+0
  with precondition: [O=5,B>=1,C>=G+1,D>=G+1] 

* Chain [72]...: 1*s(1467)+1
  with precondition: [O=5,D=G,0>=E+1,B>=1,C>=D+1] 

* Chain [71]...: 5*s(1470)+16*s(1471)+67*s(1472)+9
  Such that:s(1468) =< E
s(1469) =< E+1
s(1470) =< s(1469)
s(1471) =< s(1468)

  with precondition: [O=5,D=G,B>=1,E>=1,C>=D+1] 

* Chain [70]...: 1*aux(177)+0
  with precondition: [O=5,0>=E+1,B>=1,G>=D+1,C>=G+1] 

* Chain [69]...: 27*s(1476)+52*s(1477)+4
  Such that:aux(178) =< D-G
s(1476) =< aux(178)

  with precondition: [O=5,0>=E+1,B>=1,C>=G+1,D>=G+1] 

* Chain [68]...: 4*s(1482)+42*s(1483)+5
  Such that:s(1481) =< E
s(1482) =< s(1481)

  with precondition: [O=5,B>=1,E>=1,G>=D+1,C>=G+1] 

* Chain [67]...: 36*s(1488)+5*s(1489)+20*s(1490)+9*s(1493)+9*s(1494)+9*s(1495)+113*s(1496)+9
  Such that:s(1487) =< E+1
aux(179) =< D-G
aux(180) =< E
s(1488) =< aux(179)
s(1489) =< s(1487)
s(1490) =< aux(180)
s(1491) =< aux(180)+1
s(1492) =< aux(180)
s(1493) =< s(1488)*aux(180)
s(1494) =< s(1488)*s(1491)
s(1495) =< s(1488)*s(1492)

  with precondition: [O=5,B>=1,E>=1,C>=G+1,D>=G+1] 


#### Cost of chains of eval_fsdither_19(V__threshold,V__imagewidth,V__imagelength,V_1,V_3,V_18,B):
* Chain [93]: 6*s(1543)+76*s(1544)+1*s(1548)+1*s(1549)+1*s(1550)+1311*s(1552)+123*s(1558)+9*s(1564)+18*s(1565)+220*s(1577)+49*s(1581)+49*s(1582)+49*s(1583)+11
  Such that:s(1538) =< 1
aux(181) =< V__imagelength
s(1574) =< V_1
s(1563) =< V_3+1
aux(185) =< V__imagewidth
aux(186) =< V_3
s(1543) =< s(1538)
s(1544) =< aux(181)
s(1546) =< aux(186)+1
s(1547) =< aux(186)
s(1548) =< s(1544)*aux(186)
s(1549) =< s(1544)*s(1546)
s(1550) =< s(1544)*s(1547)
s(1558) =< aux(185)
s(1577) =< s(1574)
s(1579) =< aux(185)+1
s(1580) =< aux(185)
s(1581) =< s(1577)*aux(185)
s(1582) =< s(1577)*s(1579)
s(1583) =< s(1577)*s(1580)
s(1564) =< s(1563)
s(1565) =< aux(186)

  with precondition: [V_3+1=V__imagewidth,V_1+1=V__imagelength] 

* Chain [92]: 6*s(1590)+14*s(1591)+28*s(1592)+375*s(1593)+11
  Such that:s(1587) =< 1
s(1588) =< V_3
s(1589) =< V_3+1
s(1590) =< s(1587)
s(1591) =< s(1589)
s(1592) =< s(1588)

  with precondition: [V__imagelength=2,V_1=1,V_3+1=V__imagewidth,0>=V_3+1] 

* Chain [91]: 206*s(1594)+6*s(1596)+7
  with precondition: [V_3+1=V__imagewidth,V_1+1=V__imagelength,0>=V_1,V_3>=0] 

* Chain [90]: 272*s(1598)+6*s(1604)+9*s(1605)+67*s(1606)+1*s(1609)+1*s(1610)+1*s(1611)+10
  Such that:s(1603) =< V__imagewidth
aux(187) =< V_1
s(1606) =< aux(187)
s(1607) =< s(1603)+1
s(1608) =< s(1603)
s(1609) =< s(1606)*s(1603)
s(1610) =< s(1606)*s(1607)
s(1611) =< s(1606)*s(1608)

  with precondition: [V_3+1=V__imagewidth,V_1+1=V__imagelength,V_1>=2,V_3>=0] 

* Chain [89]...: 228*s(1614)+10*s(1617)+40*s(1618)+36*s(1630)+9*s(1635)+9*s(1636)+9*s(1637)+10
  Such that:s(1628) =< V_1
aux(188) =< V_3
aux(189) =< V_3+1
s(1630) =< s(1628)
s(1617) =< aux(189)
s(1618) =< aux(188)
s(1633) =< aux(188)+1
s(1634) =< aux(188)
s(1635) =< s(1630)*aux(188)
s(1636) =< s(1630)*s(1633)
s(1637) =< s(1630)*s(1634)

  with precondition: [V_3+1=V__imagewidth,V_1+1=V__imagelength,V_3>=0] 

* Chain [88]...: 2*s(1640)+1
  with precondition: [V_3+1=V__imagewidth,V_1+1=V__imagelength,0>=V_1,V_3>=0] 

* Chain [87]...: 2*s(1642)+1
  with precondition: [V_3+1=V__imagewidth,V_1+1=V__imagelength,V_1>=2,V_3>=0] 


#### Cost of chains of eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B):
* Chain [95]: 12*s(1693)+192*s(1694)+363*s(1696)+51*s(1699)+51*s(1700)+51*s(1701)+2185*s(1709)+11
  Such that:s(1688) =< 1
aux(195) =< V__imagewidth
aux(196) =< V__imagelength
s(1693) =< s(1688)
s(1694) =< aux(195)
s(1696) =< aux(196)
s(1697) =< aux(195)+1
s(1698) =< aux(195)
s(1699) =< s(1696)*aux(195)
s(1700) =< s(1696)*s(1697)
s(1701) =< s(1696)*s(1698)

  with precondition: [] 

* Chain [94]...: 232*s(1710)+36*s(1715)+50*s(1716)+9*s(1720)+9*s(1721)+9*s(1722)+10
  Such that:aux(197) =< V__imagewidth
s(1712) =< V__imagelength
s(1715) =< s(1712)
s(1716) =< aux(197)
s(1718) =< aux(197)+1
s(1719) =< aux(197)
s(1720) =< s(1715)*aux(197)
s(1721) =< s(1715)*s(1718)
s(1722) =< s(1715)*s(1719)

  with precondition: [V__imagewidth>=1] 


Closed-form bounds of eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B): 
-------------------------------------
* Chain [95] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [94]... with precondition: [V__imagewidth>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_fsdither_start(V__threshold,V__imagewidth,V__imagelength,B): inf 
Asymptotic class: infinity 

Time statistics: 
-------------------------------------
* Partial evaluation computed in 2729 ms.
* Invariants computed in 2268 ms.
   - Backward Invariants 1285 ms.
   - Transitive Invariants 96 ms.
* Refinement performed in 3531 ms.
* Termination proved in 88 ms.
* Upper bounds computed in 5662 ms.
   - Equation cost structures 675 ms.
   - Phase cost structures 527 ms.
   - Chain cost structures 2918 ms.
   - Solving cost expressions 2 ms.
* Total analysis performed in 14860 ms.

