This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_select_colors_start(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_select_colors_start(B) -> eval_select_colors_start(C)

  * Ranking function: N/A

  * Invariants eval_select_colors_start(A) -> eval_select_colors_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_select_colors_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_select_colors_bb0_in(B) -> eval_select_colors_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_select_colors_bb0_in(A) -> eval_select_colors_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_select_colors_2(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_select_colors_2(B) -> eval_select_colors_2(C)

  * Ranking function: N/A

  * Invariants eval_select_colors_2(A) -> eval_select_colors_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_select_colors_3(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_select_colors_3(B) -> eval_select_colors_3(C)

  * Ranking function: N/A

  * Invariants eval_select_colors_3(A) -> eval_select_colors_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_select_colors_9(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_select_colors_9(B) -> eval_select_colors_9(C)

  * Ranking function: N/A

  * Invariants eval_select_colors_9(A) -> eval_select_colors_9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_select_colors_10(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_select_colors_10(B) -> eval_select_colors_10(C)

  * Ranking function: N/A

  * Invariants eval_select_colors_10(A) -> eval_select_colors_10(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_select_colors_11(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_select_colors_11(B) -> eval_select_colors_11(C)

  * Ranking function: N/A

  * Invariants eval_select_colors_11(A) -> eval_select_colors_11(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_select_colors_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_select_colors_bb1_in(C,D) -> loop_cont_eval_select_colors_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_select_colors_bb1_in(A,B) -> loop_cont_eval_select_colors_bb1_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_select_colors_19

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_select_colors_19 -> eval_select_colors_19

  * Ranking function: N/A

  * Invariants eval_select_colors_19 -> eval_select_colors_19

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_select_colors_20

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_select_colors_20 -> eval_select_colors_20

  * Ranking function: N/A

  * Invariants eval_select_colors_20 -> eval_select_colors_20

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_select_colors_bb1_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_select_colors_bb1_in(C,D) -> eval_select_colors_bb1_in(E,F)
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_select_colors_bb1_in(A,B) -> eval_select_colors_bb1_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]


