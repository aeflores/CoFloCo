This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_set_wraparound_pointers_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_set_wraparound_pointers_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_set_wraparound_pointers_bb1_in/1])) 

  * LOOPS eval_set_wraparound_pointers_start -> eval_set_wraparound_pointers_start

  * Ranking function: N/A

  * Invariants eval_set_wraparound_pointers_start -> eval_set_wraparound_pointers_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_set_wraparound_pointers_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_set_wraparound_pointers_bb1_in/1])) 

  * LOOPS eval_set_wraparound_pointers_bb0_in -> eval_set_wraparound_pointers_bb0_in

  * Ranking function: N/A

  * Invariants eval_set_wraparound_pointers_bb0_in -> eval_set_wraparound_pointers_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_set_wraparound_pointers_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_set_wraparound_pointers_bb1_in(C,D) -> loop_cont_eval_set_wraparound_pointers_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_set_wraparound_pointers_bb1_in(A,B) -> loop_cont_eval_set_wraparound_pointers_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_set_wraparound_pointers_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_set_wraparound_pointers_bb1_in/1])) 

  * LOOPS eval_set_wraparound_pointers_bb1_in(B) -> eval_set_wraparound_pointers_bb1_in(C)
     - []
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_set_wraparound_pointers_bb1_in/1]))

  * Invariants eval_set_wraparound_pointers_bb1_in(A) -> eval_set_wraparound_pointers_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0]
     inv    : [A=0]

CRS eval_set_wraparound_pointers_bb3_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(B-C) 

  * LOOPS eval_set_wraparound_pointers_bb3_in(D,E,F) -> eval_set_wraparound_pointers_bb3_in(G,H,I)
     - [F+1=I,E=H,D=G,E>=I]

  * Ranking function: nat(E-F)

  * Invariants eval_set_wraparound_pointers_bb3_in(A,B,C) -> eval_set_wraparound_pointers_bb3_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,B>=F,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]


