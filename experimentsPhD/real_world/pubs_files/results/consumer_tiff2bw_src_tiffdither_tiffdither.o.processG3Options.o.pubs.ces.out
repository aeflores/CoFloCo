This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_processG3Options_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_processG3Options_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_processG3Options_bb1_in/1])) 

  * LOOPS eval_processG3Options_start(B) -> eval_processG3Options_start(C)

  * Ranking function: N/A

  * Invariants eval_processG3Options_start(A) -> eval_processG3Options_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_processG3Options_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_processG3Options_bb1_in/1])) 

  * LOOPS eval_processG3Options_bb0_in(B) -> eval_processG3Options_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_processG3Options_bb0_in(A) -> eval_processG3Options_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_processG3Options_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_processG3Options_bb1_in/1])) 

  * LOOPS eval_processG3Options_0(B) -> eval_processG3Options_0(C)

  * Ranking function: N/A

  * Invariants eval_processG3Options_0(A) -> eval_processG3Options_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_processG3Options_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_processG3Options_bb1_in/1])) 

  * LOOPS eval_processG3Options_1(B) -> eval_processG3Options_1(C)

  * Ranking function: N/A

  * Invariants eval_processG3Options_1(A) -> eval_processG3Options_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_processG3Options_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_processG3Options_bb1_in(C,D) -> loop_cont_eval_processG3Options_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_processG3Options_bb1_in(A,B) -> loop_cont_eval_processG3Options_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_processG3Options_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_processG3Options_bb9_in -> eval_processG3Options_bb9_in

  * Ranking function: N/A

  * Invariants eval_processG3Options_bb9_in -> eval_processG3Options_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_processG3Options_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_processG3Options_bb1_in/1])) 

  * LOOPS eval_processG3Options_bb1_in(B) -> eval_processG3Options_bb1_in(C)
     - []
     - []
     - []
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_processG3Options_bb1_in/1]))

  * Invariants eval_processG3Options_bb1_in(A) -> eval_processG3Options_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []


