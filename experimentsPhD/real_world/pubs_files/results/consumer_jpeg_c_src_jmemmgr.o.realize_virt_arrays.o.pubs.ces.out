This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 4+c(failed(schemes_failed,[scc=0,cr=eval_realize_virt_arrays_bb1_in/2]))+c(failed(schemes_failed,[scc=1,cr=eval_realize_virt_arrays_bb6_in/2]))+c(failed(schemes_failed,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_realize_virt_arrays_start

  * Non Asymptotic Upper Bound: 4+c(failed(schemes_failed,[scc=0,cr=eval_realize_virt_arrays_bb1_in/2]))+c(failed(schemes_failed,[scc=1,cr=eval_realize_virt_arrays_bb6_in/2]))+c(failed(schemes_failed,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS eval_realize_virt_arrays_start -> eval_realize_virt_arrays_start

  * Ranking function: N/A

  * Invariants eval_realize_virt_arrays_start -> eval_realize_virt_arrays_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_realize_virt_arrays_bb0_in

  * Non Asymptotic Upper Bound: 4+c(failed(schemes_failed,[scc=0,cr=eval_realize_virt_arrays_bb1_in/2]))+c(failed(schemes_failed,[scc=1,cr=eval_realize_virt_arrays_bb6_in/2]))+c(failed(schemes_failed,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS eval_realize_virt_arrays_bb0_in -> eval_realize_virt_arrays_bb0_in

  * Ranking function: N/A

  * Invariants eval_realize_virt_arrays_bb0_in -> eval_realize_virt_arrays_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_realize_virt_arrays_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=1,cr=eval_realize_virt_arrays_bb6_in/2]))+c(failed(schemes_failed,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS loop_cont_eval_realize_virt_arrays_bb1_in(E,F,G,H) -> loop_cont_eval_realize_virt_arrays_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_realize_virt_arrays_bb1_in(A,B,C,D) -> loop_cont_eval_realize_virt_arrays_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_realize_virt_arrays_bb6_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS loop_cont_eval_realize_virt_arrays_bb6_in(F,G,H,I,J) -> loop_cont_eval_realize_virt_arrays_bb6_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_realize_virt_arrays_bb6_in(A,B,C,D,E) -> loop_cont_eval_realize_virt_arrays_bb6_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_realize_virt_arrays_31(A,B,C)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS eval_realize_virt_arrays_31(D,E,F) -> eval_realize_virt_arrays_31(G,H,I)

  * Ranking function: N/A

  * Invariants eval_realize_virt_arrays_31(A,B,C) -> eval_realize_virt_arrays_31(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_realize_virt_arrays_32(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS eval_realize_virt_arrays_32(C,D) -> eval_realize_virt_arrays_32(E,F)

  * Ranking function: N/A

  * Invariants eval_realize_virt_arrays_32(A,B) -> eval_realize_virt_arrays_32(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_realize_virt_arrays_bb13_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS eval_realize_virt_arrays_bb13_in -> eval_realize_virt_arrays_bb13_in

  * Ranking function: N/A

  * Invariants eval_realize_virt_arrays_bb13_in -> eval_realize_virt_arrays_bb13_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_realize_virt_arrays_bb14_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS loop_cont_eval_realize_virt_arrays_bb14_in(C,D) -> loop_cont_eval_realize_virt_arrays_bb14_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_realize_virt_arrays_bb14_in(A,B) -> loop_cont_eval_realize_virt_arrays_bb14_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_realize_virt_arrays_bb22_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_realize_virt_arrays_bb22_in(C,D) -> loop_cont_eval_realize_virt_arrays_bb22_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_realize_virt_arrays_bb22_in(A,B) -> loop_cont_eval_realize_virt_arrays_bb22_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_realize_virt_arrays_bb29_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_realize_virt_arrays_bb29_in -> eval_realize_virt_arrays_bb29_in

  * Ranking function: N/A

  * Invariants eval_realize_virt_arrays_bb29_in -> eval_realize_virt_arrays_bb29_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_realize_virt_arrays_bb22_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0])) 

  * LOOPS eval_realize_virt_arrays_bb22_in -> eval_realize_virt_arrays_bb22_in
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_realize_virt_arrays_bb22_in/0]))

  * Invariants eval_realize_virt_arrays_bb22_in -> eval_realize_virt_arrays_bb22_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_realize_virt_arrays_bb14_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0])) 

  * LOOPS eval_realize_virt_arrays_bb14_in -> eval_realize_virt_arrays_bb14_in
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_realize_virt_arrays_bb14_in/0]))

  * Invariants eval_realize_virt_arrays_bb14_in -> eval_realize_virt_arrays_bb14_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_realize_virt_arrays_bb6_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_realize_virt_arrays_bb6_in/2])) 

  * LOOPS eval_realize_virt_arrays_bb6_in(C,D) -> eval_realize_virt_arrays_bb6_in(E,F)
     - []
     - [C=E,D=F]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_realize_virt_arrays_bb6_in/2]))

  * Invariants eval_realize_virt_arrays_bb6_in(A,B) -> eval_realize_virt_arrays_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : []
     inv    : []

CRS eval_realize_virt_arrays_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_realize_virt_arrays_bb1_in/2])) 

  * LOOPS eval_realize_virt_arrays_bb1_in(C,D) -> eval_realize_virt_arrays_bb1_in(E,F)
     - []
     - [C=E,D=F]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_realize_virt_arrays_bb1_in/2]))

  * Invariants eval_realize_virt_arrays_bb1_in(A,B) -> eval_realize_virt_arrays_bb1_in(C,D)

     entry  : [B=0,A=0]
     non-rec: [A=C,B=D,B=0,A=0]
     rec    : [B=0,A=0]
     inv    : [B=0,A=0]


