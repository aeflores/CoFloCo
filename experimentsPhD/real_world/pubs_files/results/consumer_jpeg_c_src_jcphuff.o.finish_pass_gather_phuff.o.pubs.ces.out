This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_finish_pass_gather_phuff_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_finish_pass_gather_phuff_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_finish_pass_gather_phuff_bb1_in/1])) 

  * LOOPS eval_finish_pass_gather_phuff_start -> eval_finish_pass_gather_phuff_start

  * Ranking function: N/A

  * Invariants eval_finish_pass_gather_phuff_start -> eval_finish_pass_gather_phuff_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_finish_pass_gather_phuff_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_finish_pass_gather_phuff_bb1_in/1])) 

  * LOOPS eval_finish_pass_gather_phuff_bb0_in -> eval_finish_pass_gather_phuff_bb0_in

  * Ranking function: N/A

  * Invariants eval_finish_pass_gather_phuff_bb0_in -> eval_finish_pass_gather_phuff_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_finish_pass_gather_phuff_0

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_finish_pass_gather_phuff_bb1_in/1])) 

  * LOOPS eval_finish_pass_gather_phuff_0 -> eval_finish_pass_gather_phuff_0

  * Ranking function: N/A

  * Invariants eval_finish_pass_gather_phuff_0 -> eval_finish_pass_gather_phuff_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_finish_pass_gather_phuff_1

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_finish_pass_gather_phuff_bb1_in/1])) 

  * LOOPS eval_finish_pass_gather_phuff_1 -> eval_finish_pass_gather_phuff_1

  * Ranking function: N/A

  * Invariants eval_finish_pass_gather_phuff_1 -> eval_finish_pass_gather_phuff_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_finish_pass_gather_phuff_3

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_finish_pass_gather_phuff_bb1_in/1])) 

  * LOOPS eval_finish_pass_gather_phuff_3 -> eval_finish_pass_gather_phuff_3

  * Ranking function: N/A

  * Invariants eval_finish_pass_gather_phuff_3 -> eval_finish_pass_gather_phuff_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_finish_pass_gather_phuff_4

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_finish_pass_gather_phuff_bb1_in/1])) 

  * LOOPS eval_finish_pass_gather_phuff_4 -> eval_finish_pass_gather_phuff_4

  * Ranking function: N/A

  * Invariants eval_finish_pass_gather_phuff_4 -> eval_finish_pass_gather_phuff_4

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_finish_pass_gather_phuff_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_finish_pass_gather_phuff_bb1_in(C,D) -> loop_cont_eval_finish_pass_gather_phuff_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_finish_pass_gather_phuff_bb1_in(A,B) -> loop_cont_eval_finish_pass_gather_phuff_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_finish_pass_gather_phuff_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_finish_pass_gather_phuff_bb1_in/1])) 

  * LOOPS eval_finish_pass_gather_phuff_bb1_in(B) -> eval_finish_pass_gather_phuff_bb1_in(C)
     - [B+1=C]
     - [B+1=C]
     - [B+1=C]
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_finish_pass_gather_phuff_bb1_in/1]))

  * Invariants eval_finish_pass_gather_phuff_bb1_in(A) -> eval_finish_pass_gather_phuff_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


