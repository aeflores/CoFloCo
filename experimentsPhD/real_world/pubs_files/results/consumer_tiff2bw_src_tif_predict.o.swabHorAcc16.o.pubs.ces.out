This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_swabHorAcc16_bb2_in/2])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_swabHorAcc16_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_swabHorAcc16_bb2_in/2])) 

  * LOOPS eval_swabHorAcc16_start(B) -> eval_swabHorAcc16_start(C)

  * Ranking function: N/A

  * Invariants eval_swabHorAcc16_start(A) -> eval_swabHorAcc16_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_swabHorAcc16_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_swabHorAcc16_bb2_in/2])) 

  * LOOPS eval_swabHorAcc16_bb0_in(B) -> eval_swabHorAcc16_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_swabHorAcc16_bb0_in(A) -> eval_swabHorAcc16_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_swabHorAcc16_4(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_swabHorAcc16_bb2_in/2])) 

  * LOOPS eval_swabHorAcc16_4(D,E,F) -> eval_swabHorAcc16_4(G,H,I)

  * Ranking function: N/A

  * Invariants eval_swabHorAcc16_4(A,B,C) -> eval_swabHorAcc16_4(D,E,F)

     entry  : [B=C]
     non-rec: [A=D,B=E,C=F,B=C]
     rec    : [0=1]
     inv    : [B=C,A=D,B=E,B=F]

CRS eval_swabHorAcc16_5(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_swabHorAcc16_bb2_in/2])) 

  * LOOPS eval_swabHorAcc16_5(C,D) -> eval_swabHorAcc16_5(E,F)

  * Ranking function: N/A

  * Invariants eval_swabHorAcc16_5(A,B) -> eval_swabHorAcc16_5(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_swabHorAcc16_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_swabHorAcc16_bb2_in(C,D) -> loop_cont_eval_swabHorAcc16_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_swabHorAcc16_bb2_in(A,B) -> loop_cont_eval_swabHorAcc16_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_swabHorAcc16_bb11_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_swabHorAcc16_bb11_in -> eval_swabHorAcc16_bb11_in

  * Ranking function: N/A

  * Invariants eval_swabHorAcc16_bb11_in -> eval_swabHorAcc16_bb11_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_swabHorAcc16_bb2_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_swabHorAcc16_bb2_in/2])) 

  * LOOPS eval_swabHorAcc16_bb2_in(C,D) -> eval_swabHorAcc16_bb2_in(E,F)
     - [C+F=D,C=E,D>=C+1]
     - [F>=1]
     - [C+F=D,C=E,D>=C+1]
     - [C+F=D,C=E,D>=C+1]
     - [C+F=D,C=E,D>=C+1]
     - [C+F=D,C=E,D>=C+1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_swabHorAcc16_bb2_in/2]))

  * Invariants eval_swabHorAcc16_bb2_in(A,B) -> eval_swabHorAcc16_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [D>=1]
     inv    : []

CRS eval_swabHorAcc16_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(C) 

  * LOOPS eval_swabHorAcc16_bb4_in(D,E,F) -> eval_swabHorAcc16_bb4_in(G,H,I)
     - [D=G,E=H,F=I+1,I>=0]

  * Ranking function: nat(F)

  * Invariants eval_swabHorAcc16_bb4_in(A,B,C) -> eval_swabHorAcc16_bb4_in(D,E,F)

     entry  : [A=C+4]
     non-rec: [A=D,B=E,C=F,A=C+4]
     rec    : [B=E,A=D,A=C+4,F>=0,A>=F+5]
     inv    : [A>=F+4,A=D,B=E,A=C+4]


