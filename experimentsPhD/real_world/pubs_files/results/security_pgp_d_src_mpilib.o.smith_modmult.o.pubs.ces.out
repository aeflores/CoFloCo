This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_smith_modmult_start(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_start(D,E,F) -> eval_smith_modmult_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_start(A,B,C) -> eval_smith_modmult_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_smith_modmult_bb0_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_bb0_in(D,E,F) -> eval_smith_modmult_bb0_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_bb0_in(A,B,C) -> eval_smith_modmult_bb0_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_smith_modmult_1(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_1(E,F,G,H) -> eval_smith_modmult_1(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_1(A,B,C,D) -> eval_smith_modmult_1(E,F,G,H)

     entry  : [A=D]
     non-rec: [A=E,B=F,C=G,D=H,A=D]
     rec    : [0=1]
     inv    : [A=D,A=E,B=F,C=G,A=H]

CRS eval_smith_modmult_2(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_2(E,F,G,H) -> eval_smith_modmult_2(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_2(A,B,C,D) -> eval_smith_modmult_2(E,F,G,H)

     entry  : [A=D]
     non-rec: [A=E,B=F,C=G,D=H,A=D]
     rec    : [0=1]
     inv    : [A=D,A=E,B=F,C=G,A=H]

CRS eval_smith_modmult_11(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_11(E,F,G,H) -> eval_smith_modmult_11(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_11(A,B,C,D) -> eval_smith_modmult_11(E,F,G,H)

     entry  : [A=2*D+1]
     non-rec: [A=E,B=F,C=G,D=H,A=2*D+1]
     rec    : [0=1]
     inv    : [A=2*D+1,A=E,B=F,C=G,A=2*H+1]

CRS eval_smith_modmult_12(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_12(F,G,H,I,J) -> eval_smith_modmult_12(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_12(A,B,C,D,E) -> eval_smith_modmult_12(F,G,H,I,J)

     entry  : [A=2*D+1]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A=2*D+1]
     rec    : [0=1]
     inv    : [A=2*D+1,A=F,B=G,C=H,A=2*I+1,E=J]

CRS eval_smith_modmult_19(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_19(F,G,H,I,J) -> eval_smith_modmult_19(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_19(A,B,C,D,E) -> eval_smith_modmult_19(F,G,H,I,J)

     entry  : [A=2*D+1]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A=2*D+1]
     rec    : [0=1]
     inv    : [A=2*D+1,A=F,B=G,C=H,A=2*I+1,E=J]

CRS eval_smith_modmult_20(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_20(F,G,H,I,J) -> eval_smith_modmult_20(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_20(A,B,C,D,E) -> eval_smith_modmult_20(F,G,H,I,J)

     entry  : [A=2*D+1]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A=2*D+1]
     rec    : [0=1]
     inv    : [A=2*D+1,A=F,B=G,C=H,A=2*I+1,E=J]

CRS eval_smith_modmult_21(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_21(F,G,H,I,J) -> eval_smith_modmult_21(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_21(A,B,C,D,E) -> eval_smith_modmult_21(F,G,H,I,J)

     entry  : [A=2*D+1]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A=2*D+1]
     rec    : [0=1]
     inv    : [A=2*D+1,A=F,B=G,C=H,A=2*I+1,E=J]

CRS loop_cont_eval_smith_modmult_bb2_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_smith_modmult_bb2_in(F,G,H,I,J) -> loop_cont_eval_smith_modmult_bb2_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_smith_modmult_bb2_in(A,B,C,D,E) -> loop_cont_eval_smith_modmult_bb2_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_smith_modmult_58(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_smith_modmult_58(D,E,F) -> eval_smith_modmult_58(G,H,I)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_58(A,B,C) -> eval_smith_modmult_58(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_smith_modmult_59(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_smith_modmult_59(D,E,F) -> eval_smith_modmult_59(G,H,I)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_59(A,B,C) -> eval_smith_modmult_59(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_smith_modmult_60(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_smith_modmult_60(D,E,F) -> eval_smith_modmult_60(G,H,I)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_60(A,B,C) -> eval_smith_modmult_60(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_smith_modmult_bb10_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_smith_modmult_bb10_in(D,E,F) -> eval_smith_modmult_bb10_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_bb10_in(A,B,C) -> eval_smith_modmult_bb10_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_smith_modmult_67(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_smith_modmult_67(E,F,G,H) -> eval_smith_modmult_67(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_smith_modmult_67(A,B,C,D) -> eval_smith_modmult_67(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_smith_modmult_68

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_smith_modmult_68 -> eval_smith_modmult_68

  * Ranking function: N/A

  * Invariants eval_smith_modmult_68 -> eval_smith_modmult_68

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_smith_modmult_bb2_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_smith_modmult_bb2_in/5])) 

  * LOOPS eval_smith_modmult_bb2_in(F,G,H,I,J) -> eval_smith_modmult_bb2_in(K,L,M,N,O)
     - [J=O+1,F=K,G=L,H=M,I=N,0>=O+2]
     - [I=N,J=O+1,0>=O+2]
     - [J=O+1,F=K,G=L,H=M,I=N,0>=O+2]
     - [J=O+1,F=K,G=L,H=M,I=N,0>=O+2]
     - [J=O+1,F=K,G=L,H=M,I=N,O>=0]
     - [I=N,J=O+1,O>=0]
     - [J=O+1,F=K,G=L,H=M,I=N,O>=0]
     - [J=O+1,F=K,G=L,H=M,I=N,O>=0]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_smith_modmult_bb2_in/5]))

  * Invariants eval_smith_modmult_bb2_in(A,B,C,D,E) -> eval_smith_modmult_bb2_in(F,G,H,I,J)

     entry  : [16*B+15>=16*A,16*A+15>=16*B,A=D]
     non-rec: [A=F,B=G,C=H,D=I,E=J,16*B+15>=16*A,16*A+15>=16*B,A=D]
     rec    : [A=I,A=D,16*A+15>=16*B,16*B+15>=16*A,E>=J+1]
     inv    : [16*B+15>=16*A,E>=J,16*A+15>=16*B,A=I,A=D]


