This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LANG_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_start(B) -> eval_LANG_start(C)

  * Ranking function: N/A

  * Invariants eval_LANG_start(A) -> eval_LANG_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LANG_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_bb0_in(B) -> eval_LANG_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_LANG_bb0_in(A) -> eval_LANG_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LANG_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_2(B) -> eval_LANG_2(C)

  * Ranking function: N/A

  * Invariants eval_LANG_2(A) -> eval_LANG_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LANG_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_3(B) -> eval_LANG_3(C)

  * Ranking function: N/A

  * Invariants eval_LANG_3(A) -> eval_LANG_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LANG_bb2_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_bb2_in(B) -> eval_LANG_bb2_in(C)

  * Ranking function: N/A

  * Invariants eval_LANG_bb2_in(A) -> eval_LANG_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LANG_6(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_6(B) -> eval_LANG_6(C)

  * Ranking function: N/A

  * Invariants eval_LANG_6(A) -> eval_LANG_6(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LANG_7(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_7(C,D) -> eval_LANG_7(E,F)

  * Ranking function: N/A

  * Invariants eval_LANG_7(A,B) -> eval_LANG_7(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LANG_8(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_8(C,D) -> eval_LANG_8(E,F)

  * Ranking function: N/A

  * Invariants eval_LANG_8(A,B) -> eval_LANG_8(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LANG_9(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_9(C,D) -> eval_LANG_9(E,F)

  * Ranking function: N/A

  * Invariants eval_LANG_9(A,B) -> eval_LANG_9(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LANG_10(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_10(B) -> eval_LANG_10(C)

  * Ranking function: N/A

  * Invariants eval_LANG_10(A) -> eval_LANG_10(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LANG_11(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_11(B) -> eval_LANG_11(C)

  * Ranking function: N/A

  * Invariants eval_LANG_11(A) -> eval_LANG_11(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_LANG_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_LANG_bb6_in(C,D) -> loop_cont_eval_LANG_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_LANG_bb6_in(A,B) -> loop_cont_eval_LANG_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LANG_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LANG_bb9_in -> eval_LANG_bb9_in

  * Ranking function: N/A

  * Invariants eval_LANG_bb9_in -> eval_LANG_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LANG_bb6_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_LANG_bb6_in/1])) 

  * LOOPS eval_LANG_bb6_in(B) -> eval_LANG_bb6_in(C)
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_LANG_bb6_in/1]))

  * Invariants eval_LANG_bb6_in(A) -> eval_LANG_bb6_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []


