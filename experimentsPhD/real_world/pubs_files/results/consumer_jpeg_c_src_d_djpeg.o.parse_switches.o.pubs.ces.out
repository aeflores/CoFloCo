This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D,E) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_parse_switches_bb1_in/4])) 

  * LOOPS $pubs_aux_entry$(F,G,H,I,J) -> $pubs_aux_entry$(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D,E) -> $pubs_aux_entry$(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_parse_switches_start(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_parse_switches_bb1_in/4])) 

  * LOOPS eval_parse_switches_start(F,G,H,I,J) -> eval_parse_switches_start(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_parse_switches_start(A,B,C,D,E) -> eval_parse_switches_start(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_parse_switches_bb0_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_parse_switches_bb1_in/4])) 

  * LOOPS eval_parse_switches_bb0_in(D,E,F) -> eval_parse_switches_bb0_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_parse_switches_bb0_in(A,B,C) -> eval_parse_switches_bb0_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_parse_switches_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_parse_switches_bb1_in(E,F,G,H) -> loop_cont_eval_parse_switches_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_parse_switches_bb1_in(A,B,C,D) -> loop_cont_eval_parse_switches_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_parse_switches_bb90_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_parse_switches_bb90_in -> eval_parse_switches_bb90_in

  * Ranking function: N/A

  * Invariants eval_parse_switches_bb90_in -> eval_parse_switches_bb90_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_switches_125(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_parse_switches_125(C,D) -> eval_parse_switches_125(E,F)

  * Ranking function: N/A

  * Invariants eval_parse_switches_125(A,B) -> eval_parse_switches_125(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_parse_switches_126(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_parse_switches_126(C,D) -> eval_parse_switches_126(E,F)

  * Ranking function: N/A

  * Invariants eval_parse_switches_126(A,B) -> eval_parse_switches_126(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_parse_switches_127

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_parse_switches_127 -> eval_parse_switches_127

  * Ranking function: N/A

  * Invariants eval_parse_switches_127 -> eval_parse_switches_127

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_switches_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_parse_switches_bb1_in/4])) 

  * LOOPS eval_parse_switches_bb1_in(E,F,G,H) -> eval_parse_switches_bb1_in(I,J,K,L)
     - [H+1=L,E=I,F=J,G=K,E>=H+1]
     - [H+1=L,E=I,J=0,G=K,E>=L]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [H+1=L,E=I,E>=H+1]
     - [H+1=L,E=I,E>=H+1]
     - [H+1=L,E=I,E>=H+1]
     - [H+1=L,E=I,E>=H+1]
     - [H+1=L,E=I,E>=H+1]
     - [H+1=L,E=I,E>=H+1]
     - [H+1=L,E=I,J=1,G=K,E>=L]
     - [H+1=L,E=I,E>=H+1]
     - [H+1=L,E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [E=I,E>=H+1]
     - [H+1=L,E=I,E>=H+1]
     - [H+1=L,E=I,E>=H+1]
     - [H+1=L,E=I,J=2,G=K,E>=L]
     - [F=J,G=K,E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [H+1=L,E=I,J=3,G=K,E>=L]
     - [H+1=L,E=I,J=3,G=K,E>=L]
     - [H+1=L,E=I,J=4,G=K,E>=L]
     - [F=J,G=K,E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [F=J,G=K,E=I,E>=H+1]
     - [H+1=L,E=I,J=5,G=K,E>=L]
     - [H+1=L,E=I,F=J,G=K,E>=H+1]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_parse_switches_bb1_in/4]))

  * Invariants eval_parse_switches_bb1_in(A,B,C,D) -> eval_parse_switches_bb1_in(E,F,G,H)

     entry  : [D=1]
     non-rec: [A=E,B=F,C=G,D=H,D=1]
     rec    : [A>=2,A=E,D=1]
     inv    : [A=E,D=1]


