This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 32770+c(failed(schemes_failed,[scc=6,cr=eval_get_histogram_bb6_in/3])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_get_histogram_start(A,B)

  * Non Asymptotic Upper Bound: 32770+c(failed(schemes_failed,[scc=6,cr=eval_get_histogram_bb6_in/3])) 

  * LOOPS eval_get_histogram_start(C,D) -> eval_get_histogram_start(E,F)

  * Ranking function: N/A

  * Invariants eval_get_histogram_start(A,B) -> eval_get_histogram_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_get_histogram_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 32770+c(failed(schemes_failed,[scc=6,cr=eval_get_histogram_bb6_in/3])) 

  * LOOPS eval_get_histogram_bb0_in(C,D) -> eval_get_histogram_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_get_histogram_bb0_in(A,B) -> eval_get_histogram_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_get_histogram_0(A,B)

  * Non Asymptotic Upper Bound: 32770+c(failed(schemes_failed,[scc=6,cr=eval_get_histogram_bb6_in/3])) 

  * LOOPS eval_get_histogram_0(C,D) -> eval_get_histogram_0(E,F)

  * Ranking function: N/A

  * Invariants eval_get_histogram_0(A,B) -> eval_get_histogram_0(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_get_histogram_1(A,B,C)

  * Non Asymptotic Upper Bound: 32770+c(failed(schemes_failed,[scc=6,cr=eval_get_histogram_bb6_in/3])) 

  * LOOPS eval_get_histogram_1(D,E,F) -> eval_get_histogram_1(G,H,I)

  * Ranking function: N/A

  * Invariants eval_get_histogram_1(A,B,C) -> eval_get_histogram_1(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_get_histogram_2(A,B)

  * Non Asymptotic Upper Bound: 32770+c(failed(schemes_failed,[scc=6,cr=eval_get_histogram_bb6_in/3])) 

  * LOOPS eval_get_histogram_2(C,D) -> eval_get_histogram_2(E,F)

  * Ranking function: N/A

  * Invariants eval_get_histogram_2(A,B) -> eval_get_histogram_2(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_get_histogram_bb3_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=6,cr=eval_get_histogram_bb6_in/3])) 

  * LOOPS loop_cont_eval_get_histogram_bb3_in(F,G,H,I,J) -> loop_cont_eval_get_histogram_bb3_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_get_histogram_bb3_in(A,B,C,D,E) -> loop_cont_eval_get_histogram_bb3_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS loop_cont_eval_get_histogram_bb6_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_get_histogram_bb6_in(E,F,G,H) -> loop_cont_eval_get_histogram_bb6_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_get_histogram_bb6_in(A,B,C,D) -> loop_cont_eval_get_histogram_bb6_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_get_histogram_bb24_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_get_histogram_bb24_in(C,D) -> eval_get_histogram_bb24_in(E,F)

  * Ranking function: N/A

  * Invariants eval_get_histogram_bb24_in(A,B) -> eval_get_histogram_bb24_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_get_histogram_71(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_get_histogram_71(C,D) -> eval_get_histogram_71(E,F)

  * Ranking function: N/A

  * Invariants eval_get_histogram_71(A,B) -> eval_get_histogram_71(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_get_histogram_72

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_get_histogram_72 -> eval_get_histogram_72

  * Ranking function: N/A

  * Invariants eval_get_histogram_72 -> eval_get_histogram_72

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_get_histogram_bb6_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=6,cr=eval_get_histogram_bb6_in/3])) 

  * LOOPS eval_get_histogram_bb6_in(D,E,F) -> eval_get_histogram_bb6_in(G,H,I)
     - [E>=F+1]

  * Ranking function: c(failed(no_rf,[scc=6,cr=eval_get_histogram_bb6_in/3]))

  * Invariants eval_get_histogram_bb6_in(A,B,C) -> eval_get_histogram_bb6_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [B>=C+1]
     inv    : []

CRS eval_get_histogram_bb9_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 64*nat(D) 

  * LOOPS eval_get_histogram_bb9_in(E,F,G,H) -> eval_get_histogram_bb9_in(I,J,K,L)
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [G=K,H=L+1,H>=1]
     - [H=L+1,E=I,F=J,G=K,L>=0]

  * Ranking function: nat(H)

  * Invariants eval_get_histogram_bb9_in(A,B,C,D) -> eval_get_histogram_bb9_in(E,F,G,H)

     entry  : [B>=C+1,A=D]
     non-rec: [A=E,B=F,C=G,D=H,B>=C+1,A=D]
     rec    : [C=G,A=D,B>=C+1,H>=0,A>=H+1]
     inv    : [A>=H,B>=C+1,C=G,A=D]

CRS eval_get_histogram_bb3_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(C) 

  * LOOPS eval_get_histogram_bb3_in(D,E,F) -> eval_get_histogram_bb3_in(G,H,I)
     - [F=I+1,I>=0]

  * Ranking function: nat(F)

  * Invariants eval_get_histogram_bb3_in(A,B,C) -> eval_get_histogram_bb3_in(D,E,F)

     entry  : [C=32768]
     non-rec: [A=D,B=E,C=F,C=32768]
     rec    : [C=32768,32767>=F]
     inv    : [32768>=F,C=32768]

CRS eval_get_histogram_3(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_get_histogram_3(C,D) -> eval_get_histogram_3(E,F)

  * Ranking function: N/A

  * Invariants eval_get_histogram_3(A,B) -> eval_get_histogram_3(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_get_histogram_4(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_get_histogram_4(C,D) -> eval_get_histogram_4(E,F)

  * Ranking function: N/A

  * Invariants eval_get_histogram_4(A,B) -> eval_get_histogram_4(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_get_histogram_5

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_get_histogram_5 -> eval_get_histogram_5

  * Ranking function: N/A

  * Invariants eval_get_histogram_5 -> eval_get_histogram_5

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


