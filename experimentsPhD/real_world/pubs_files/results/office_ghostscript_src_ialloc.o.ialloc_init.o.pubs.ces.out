This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 5 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ialloc_init_start(A,B)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ialloc_init_start(C,D) -> eval_ialloc_init_start(E,F)

  * Ranking function: N/A

  * Invariants eval_ialloc_init_start(A,B) -> eval_ialloc_init_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ialloc_init_bb0_in(A)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ialloc_init_bb0_in(B) -> eval_ialloc_init_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_ialloc_init_bb0_in(A) -> eval_ialloc_init_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ialloc_init_0(A)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ialloc_init_0(B) -> eval_ialloc_init_0(C)

  * Ranking function: N/A

  * Invariants eval_ialloc_init_0(A) -> eval_ialloc_init_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ialloc_init_1(A)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ialloc_init_1(B) -> eval_ialloc_init_1(C)

  * Ranking function: N/A

  * Invariants eval_ialloc_init_1(A) -> eval_ialloc_init_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ialloc_init_2(A)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ialloc_init_2(B) -> eval_ialloc_init_2(C)

  * Ranking function: N/A

  * Invariants eval_ialloc_init_2(A) -> eval_ialloc_init_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ialloc_init_3(A)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ialloc_init_3(B) -> eval_ialloc_init_3(C)

  * Ranking function: N/A

  * Invariants eval_ialloc_init_3(A) -> eval_ialloc_init_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ialloc_init_bb2_in(A)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ialloc_init_bb2_in(B) -> eval_ialloc_init_bb2_in(C)

  * Ranking function: N/A

  * Invariants eval_ialloc_init_bb2_in(A) -> eval_ialloc_init_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ialloc_init_4(A)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ialloc_init_4(B) -> eval_ialloc_init_4(C)

  * Ranking function: N/A

  * Invariants eval_ialloc_init_4(A) -> eval_ialloc_init_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ialloc_init_5

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ialloc_init_5 -> eval_ialloc_init_5

  * Ranking function: N/A

  * Invariants eval_ialloc_init_5 -> eval_ialloc_init_5

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_ialloc_init_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_ialloc_init_bb3_in(C,D) -> loop_cont_eval_ialloc_init_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_ialloc_init_bb3_in(A,B) -> loop_cont_eval_ialloc_init_bb3_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_ialloc_init_21

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ialloc_init_21 -> eval_ialloc_init_21

  * Ranking function: N/A

  * Invariants eval_ialloc_init_21 -> eval_ialloc_init_21

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ialloc_init_22

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ialloc_init_22 -> eval_ialloc_init_22

  * Ranking function: N/A

  * Invariants eval_ialloc_init_22 -> eval_ialloc_init_22

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ialloc_init_bb3_in(A)

  * Non Asymptotic Upper Bound: nat(-A+4) 

  * LOOPS eval_ialloc_init_bb3_in(B) -> eval_ialloc_init_bb3_in(C)
     - [B+1=C,3>=B]

  * Ranking function: nat(-B+4)

  * Invariants eval_ialloc_init_bb3_in(A) -> eval_ialloc_init_bb3_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


