This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_init_block_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_init_block_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_init_block_bb1_in/1])) 

  * LOOPS eval_init_block_start(B) -> eval_init_block_start(C)

  * Ranking function: N/A

  * Invariants eval_init_block_start(A) -> eval_init_block_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_init_block_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_init_block_bb1_in/1])) 

  * LOOPS eval_init_block_bb0_in -> eval_init_block_bb0_in

  * Ranking function: N/A

  * Invariants eval_init_block_bb0_in -> eval_init_block_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_init_block_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_init_block_bb1_in(D,E,F) -> loop_cont_eval_init_block_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_init_block_bb1_in(A,B,C) -> loop_cont_eval_init_block_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_init_block_13(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_init_block_13(B) -> eval_init_block_13(C)

  * Ranking function: N/A

  * Invariants eval_init_block_13(A) -> eval_init_block_13(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_init_block_14

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_init_block_14 -> eval_init_block_14

  * Ranking function: N/A

  * Invariants eval_init_block_14 -> eval_init_block_14

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_init_block_bb5_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_init_block_bb5_in -> eval_init_block_bb5_in

  * Ranking function: N/A

  * Invariants eval_init_block_bb5_in -> eval_init_block_bb5_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_init_block_15

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_init_block_15 -> eval_init_block_15

  * Ranking function: N/A

  * Invariants eval_init_block_15 -> eval_init_block_15

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_init_block_16

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_init_block_16 -> eval_init_block_16

  * Ranking function: N/A

  * Invariants eval_init_block_16 -> eval_init_block_16

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_init_block_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_init_block_bb1_in/1])) 

  * LOOPS eval_init_block_bb1_in(B) -> eval_init_block_bb1_in(C)
     - [B=C+1,0>=C+2]
     - [B=C+1,C>=0]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_init_block_bb1_in/1]))

  * Invariants eval_init_block_bb1_in(A) -> eval_init_block_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=B+1]
     inv    : [A>=B]


