This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_decodeMP3_start(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_start(D,E,F) -> eval_decodeMP3_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_start(A,B,C) -> eval_decodeMP3_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_decodeMP3_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_bb0_in(C,D) -> eval_decodeMP3_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_bb0_in(A,B) -> eval_decodeMP3_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_decodeMP3_4(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_4(C,D) -> eval_decodeMP3_4(E,F)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_4(A,B) -> eval_decodeMP3_4(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_decodeMP3_5(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_5(B) -> eval_decodeMP3_5(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_5(A) -> eval_decodeMP3_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_bb4_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_bb4_in(B) -> eval_decodeMP3_bb4_in(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_bb4_in(A) -> eval_decodeMP3_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_10(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_10(B) -> eval_decodeMP3_10(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_10(A) -> eval_decodeMP3_10(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_11(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_11(B) -> eval_decodeMP3_11(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_11(A) -> eval_decodeMP3_11(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_12(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_12(C,D) -> eval_decodeMP3_12(E,F)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_12(A,B) -> eval_decodeMP3_12(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_decodeMP3_13(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_13(B) -> eval_decodeMP3_13(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_13(A) -> eval_decodeMP3_13(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_bb7_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_bb7_in(B) -> eval_decodeMP3_bb7_in(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_bb7_in(A) -> eval_decodeMP3_bb7_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_decodeMP3_bb9_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_decodeMP3_bb9_in(D,E,F) -> loop_cont_eval_decodeMP3_bb9_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_decodeMP3_bb9_in(A,B,C) -> loop_cont_eval_decodeMP3_bb9_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_decodeMP3_60(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decodeMP3_60(B) -> eval_decodeMP3_60(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_60(A) -> eval_decodeMP3_60(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_61(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decodeMP3_61(B) -> eval_decodeMP3_61(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_61(A) -> eval_decodeMP3_61(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_bb16_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decodeMP3_bb16_in(B) -> eval_decodeMP3_bb16_in(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_bb16_in(A) -> eval_decodeMP3_bb16_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_62(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decodeMP3_62(B) -> eval_decodeMP3_62(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_62(A) -> eval_decodeMP3_62(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_63

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decodeMP3_63 -> eval_decodeMP3_63

  * Ranking function: N/A

  * Invariants eval_decodeMP3_63 -> eval_decodeMP3_63

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decodeMP3_bb9_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_decodeMP3_bb9_in/2])) 

  * LOOPS eval_decodeMP3_bb9_in(C,D) -> eval_decodeMP3_bb9_in(E,F)
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_decodeMP3_bb9_in/2]))

  * Invariants eval_decodeMP3_bb9_in(A,B) -> eval_decodeMP3_bb9_in(C,D)

     entry  : [A=0,B=0]
     non-rec: [A=C,B=D,A=0,B=0]
     rec    : [A=0,B=0]
     inv    : [B=0,A=0]

CRS eval_decodeMP3_2(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decodeMP3_2(B) -> eval_decodeMP3_2(C)

  * Ranking function: N/A

  * Invariants eval_decodeMP3_2(A) -> eval_decodeMP3_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_decodeMP3_3

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decodeMP3_3 -> eval_decodeMP3_3

  * Ranking function: N/A

  * Invariants eval_decodeMP3_3 -> eval_decodeMP3_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decodeMP3_bb17_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decodeMP3_bb17_in -> eval_decodeMP3_bb17_in

  * Ranking function: N/A

  * Invariants eval_decodeMP3_bb17_in -> eval_decodeMP3_bb17_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


