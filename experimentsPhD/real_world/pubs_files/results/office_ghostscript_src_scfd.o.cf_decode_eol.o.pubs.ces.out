This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 35+c(failed(schemes_failed,[scc=1,cr=eval_cf_decode_eol_bb16_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cf_decode_eol_start

  * Non Asymptotic Upper Bound: 35+c(failed(schemes_failed,[scc=1,cr=eval_cf_decode_eol_bb16_in/0])) 

  * LOOPS eval_cf_decode_eol_start -> eval_cf_decode_eol_start

  * Ranking function: N/A

  * Invariants eval_cf_decode_eol_start -> eval_cf_decode_eol_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cf_decode_eol_bb0_in

  * Non Asymptotic Upper Bound: 35+c(failed(schemes_failed,[scc=1,cr=eval_cf_decode_eol_bb16_in/0])) 

  * LOOPS eval_cf_decode_eol_bb0_in -> eval_cf_decode_eol_bb0_in

  * Ranking function: N/A

  * Invariants eval_cf_decode_eol_bb0_in -> eval_cf_decode_eol_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_cf_decode_eol_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_cf_decode_eol_bb16_in/0])) 

  * LOOPS loop_cont_eval_cf_decode_eol_bb1_in(C,D) -> loop_cont_eval_cf_decode_eol_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_cf_decode_eol_bb1_in(A,B) -> loop_cont_eval_cf_decode_eol_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_cf_decode_eol_bb16_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_cf_decode_eol_bb16_in(C,D) -> loop_cont_eval_cf_decode_eol_bb16_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_cf_decode_eol_bb16_in(A,B) -> loop_cont_eval_cf_decode_eol_bb16_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_cf_decode_eol_bb29_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cf_decode_eol_bb29_in -> eval_cf_decode_eol_bb29_in

  * Ranking function: N/A

  * Invariants eval_cf_decode_eol_bb29_in -> eval_cf_decode_eol_bb29_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cf_decode_eol_bb16_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_cf_decode_eol_bb16_in/0])) 

  * LOOPS eval_cf_decode_eol_bb16_in -> eval_cf_decode_eol_bb16_in
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_cf_decode_eol_bb16_in/0]))

  * Invariants eval_cf_decode_eol_bb16_in -> eval_cf_decode_eol_bb16_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_cf_decode_eol_bb1_in(A)

  * Non Asymptotic Upper Bound: 3*nat(-A+11) 

  * LOOPS eval_cf_decode_eol_bb1_in(B) -> eval_cf_decode_eol_bb1_in(C)
     - [B+1=C,10>=B]
     - [B+1=C,10>=B]
     - [B+1=C,10>=B]

  * Ranking function: nat(-B+11)

  * Invariants eval_cf_decode_eol_bb1_in(A) -> eval_cf_decode_eol_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


