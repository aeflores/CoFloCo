This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_strsearch_bb1_in/4])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_strsearch_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_strsearch_bb1_in/4])) 

  * LOOPS eval_strsearch_start(B) -> eval_strsearch_start(C)

  * Ranking function: N/A

  * Invariants eval_strsearch_start(A) -> eval_strsearch_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_strsearch_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_strsearch_bb1_in/4])) 

  * LOOPS eval_strsearch_bb0_in(B) -> eval_strsearch_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_strsearch_bb0_in(A) -> eval_strsearch_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_strsearch_3(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_strsearch_bb1_in/4])) 

  * LOOPS eval_strsearch_3(D,E,F) -> eval_strsearch_3(G,H,I)

  * Ranking function: N/A

  * Invariants eval_strsearch_3(A,B,C) -> eval_strsearch_3(D,E,F)

     entry  : [A=C+1]
     non-rec: [A=D,B=E,C=F,A=C+1]
     rec    : [0=1]
     inv    : [A=C+1,A=D,B=E,A=F+1]

CRS eval_strsearch_4(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_strsearch_bb1_in/4])) 

  * LOOPS eval_strsearch_4(E,F,G,H) -> eval_strsearch_4(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_strsearch_4(A,B,C,D) -> eval_strsearch_4(E,F,G,H)

     entry  : [A=C+1]
     non-rec: [A=E,B=F,C=G,D=H,A=C+1]
     rec    : [0=1]
     inv    : [A=C+1,A=E,B=F,A=G+1,D=H]

CRS loop_cont_eval_strsearch_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_strsearch_bb1_in(C,D) -> loop_cont_eval_strsearch_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_strsearch_bb1_in(A,B) -> loop_cont_eval_strsearch_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_strsearch_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_strsearch_bb9_in -> eval_strsearch_bb9_in

  * Ranking function: N/A

  * Invariants eval_strsearch_bb9_in -> eval_strsearch_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_strsearch_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_strsearch_bb1_in/4])) 

  * LOOPS eval_strsearch_bb1_in(E,F,G,H) -> eval_strsearch_bb1_in(I,J,K,L)
     - [F>=G+1]
     - [F>=G+1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_strsearch_bb1_in/4]))

  * Invariants eval_strsearch_bb1_in(A,B,C,D) -> eval_strsearch_bb1_in(E,F,G,H)

     entry  : [A=C+1]
     non-rec: [A=E,B=F,C=G,D=H,A=C+1]
     rec    : [B>=A,A=C+1]
     inv    : [A=C+1]

CRS eval_strsearch_bb2_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_strsearch_bb2_in/6])) 

  * LOOPS eval_strsearch_bb2_in(G,H,I,J,K,L) -> eval_strsearch_bb2_in(M,N,O,P,Q,R)
     - [I=O,J=P,K+R=Q,G=M,H=N]
     - [K+L=Q,L=R,G=M,H=N,I=O,J=P]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_strsearch_bb2_in/6]))

  * Invariants eval_strsearch_bb2_in(A,B,C,D,E,F) -> eval_strsearch_bb2_in(G,H,I,J,K,L)

     entry  : [B>=E+1,D=F,C=E]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,B>=E+1,D=F,C=E]
     rec    : [B>=C+1,C=E,D=F,A=G,B=H,C=I,D=J]
     inv    : [B>=C+1,A=G,B=H,C=I,D=J,D=F,C=E]


