This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D,E,F) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_longest_match_bb3_in/0])) 

  * LOOPS $pubs_aux_entry$(G,H,I,J,K,L) -> $pubs_aux_entry$(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D,E,F) -> $pubs_aux_entry$(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS eval_longest_match_start(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_longest_match_bb3_in/0])) 

  * LOOPS eval_longest_match_start(G,H,I,J,K,L) -> eval_longest_match_start(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants eval_longest_match_start(A,B,C,D,E,F) -> eval_longest_match_start(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS eval_longest_match_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_longest_match_bb3_in/0])) 

  * LOOPS eval_longest_match_bb0_in -> eval_longest_match_bb0_in

  * Ranking function: N/A

  * Invariants eval_longest_match_bb0_in -> eval_longest_match_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_longest_match_bb2_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_longest_match_bb3_in/0])) 

  * LOOPS eval_longest_match_bb2_in -> eval_longest_match_bb2_in

  * Ranking function: N/A

  * Invariants eval_longest_match_bb2_in -> eval_longest_match_bb2_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_longest_match_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_longest_match_bb3_in(C,D) -> loop_cont_eval_longest_match_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_longest_match_bb3_in(A,B) -> loop_cont_eval_longest_match_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_longest_match_bb12_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_longest_match_bb12_in -> eval_longest_match_bb12_in

  * Ranking function: N/A

  * Invariants eval_longest_match_bb12_in -> eval_longest_match_bb12_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_longest_match_bb3_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_longest_match_bb3_in/0])) 

  * LOOPS eval_longest_match_bb3_in -> eval_longest_match_bb3_in
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_longest_match_bb3_in/0]))

  * Invariants eval_longest_match_bb3_in -> eval_longest_match_bb3_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_longest_match_bb5_in(A)

  * Non Asymptotic Upper Bound: nat(-A+254)/4 

  * LOOPS eval_longest_match_bb5_in(B) -> eval_longest_match_bb5_in(C)
     - [B+4=C,250>=B]

  * Ranking function: nat(-B/4+127/2)

  * Invariants eval_longest_match_bb5_in(A) -> eval_longest_match_bb5_in(B)

     entry  : [A+1=0]
     non-rec: [A=B,A+1=0]
     rec    : [A+1=0,B>=3]
     inv    : [B+1>=0,A+1=0]


