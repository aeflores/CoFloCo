This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_append_simple_bb2_in/2]))+c(failed(schemes_failed,[scc=4,cr=eval_append_simple_bb9_in/3])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_append_simple_start

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_append_simple_bb2_in/2]))+c(failed(schemes_failed,[scc=4,cr=eval_append_simple_bb9_in/3])) 

  * LOOPS eval_append_simple_start -> eval_append_simple_start

  * Ranking function: N/A

  * Invariants eval_append_simple_start -> eval_append_simple_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_append_simple_bb0_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_append_simple_bb2_in/2]))+c(failed(schemes_failed,[scc=4,cr=eval_append_simple_bb9_in/3])) 

  * LOOPS eval_append_simple_bb0_in -> eval_append_simple_bb0_in

  * Ranking function: N/A

  * Invariants eval_append_simple_bb0_in -> eval_append_simple_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_append_simple_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_append_simple_bb9_in/3])) 

  * LOOPS loop_cont_eval_append_simple_bb2_in(D,E,F) -> loop_cont_eval_append_simple_bb2_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_append_simple_bb2_in(A,B,C) -> loop_cont_eval_append_simple_bb2_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_append_simple_48(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_append_simple_bb9_in/3])) 

  * LOOPS eval_append_simple_48(B) -> eval_append_simple_48(C)

  * Ranking function: N/A

  * Invariants eval_append_simple_48(A) -> eval_append_simple_48(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_append_simple_49(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_append_simple_bb9_in/3])) 

  * LOOPS eval_append_simple_49(B) -> eval_append_simple_49(C)

  * Ranking function: N/A

  * Invariants eval_append_simple_49(A) -> eval_append_simple_49(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_append_simple_bb9_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_append_simple_bb9_in(C,D) -> loop_cont_eval_append_simple_bb9_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_append_simple_bb9_in(A,B) -> loop_cont_eval_append_simple_bb9_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_append_simple_bb9_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_append_simple_bb9_in/3])) 

  * LOOPS eval_append_simple_bb9_in(D,E,F) -> eval_append_simple_bb9_in(G,H,I)
     - [D>=F+1]
     - [D>=F+1]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_append_simple_bb9_in/3]))

  * Invariants eval_append_simple_bb9_in(A,B,C) -> eval_append_simple_bb9_in(D,E,F)

     entry  : [C=0,B=0]
     non-rec: [A=D,B=E,C=F,C=0,B=0]
     rec    : [A>=1,B=0,C=0]
     inv    : [C=0,B=0]

CRS eval_append_simple_bb11_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 14*nat(D-E+1) 

  * LOOPS eval_append_simple_bb11_in(F,G,H,I,J) -> eval_append_simple_bb11_in(K,L,M,N,O)
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I>=J]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]
     - [J+1=O,F=K,G=L,H=M,I=N,I+1>=O]

  * Ranking function: nat(I-J+1)

  * Invariants eval_append_simple_bb11_in(A,B,C,D,E) -> eval_append_simple_bb11_in(F,G,H,I,J)

     entry  : [A>=C+1,B=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A>=C+1,B=E]
     rec    : [D=I,C=H,B=G,A=F,B=E,A>=C+1,D+1>=J,J>=B+1]
     inv    : [J>=B,A>=C+1,A=F,B=G,C=H,D=I,B=E]

CRS eval_append_simple_bb41_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_append_simple_bb41_in -> eval_append_simple_bb41_in

  * Ranking function: N/A

  * Invariants eval_append_simple_bb41_in -> eval_append_simple_bb41_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_append_simple_bb2_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_append_simple_bb2_in/2])) 

  * LOOPS eval_append_simple_bb2_in(C,D) -> eval_append_simple_bb2_in(E,F)
     - [C=E,D>=1]
     - [D=F+1,C=E,F>=0]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_append_simple_bb2_in/2]))

  * Invariants eval_append_simple_bb2_in(A,B) -> eval_append_simple_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [B>=1,A=C]
     inv    : [A=C]


