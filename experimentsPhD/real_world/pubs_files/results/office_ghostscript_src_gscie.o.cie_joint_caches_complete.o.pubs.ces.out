This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 4 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_joint_caches_complete_start

  * Non Asymptotic Upper Bound: 4 

  * LOOPS eval_cie_joint_caches_complete_start -> eval_cie_joint_caches_complete_start

  * Ranking function: N/A

  * Invariants eval_cie_joint_caches_complete_start -> eval_cie_joint_caches_complete_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_joint_caches_complete_bb0_in

  * Non Asymptotic Upper Bound: 4 

  * LOOPS eval_cie_joint_caches_complete_bb0_in -> eval_cie_joint_caches_complete_bb0_in

  * Ranking function: N/A

  * Invariants eval_cie_joint_caches_complete_bb0_in -> eval_cie_joint_caches_complete_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_joint_caches_complete_0

  * Non Asymptotic Upper Bound: 4 

  * LOOPS eval_cie_joint_caches_complete_0 -> eval_cie_joint_caches_complete_0

  * Ranking function: N/A

  * Invariants eval_cie_joint_caches_complete_0 -> eval_cie_joint_caches_complete_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_joint_caches_complete_1

  * Non Asymptotic Upper Bound: 4 

  * LOOPS eval_cie_joint_caches_complete_1 -> eval_cie_joint_caches_complete_1

  * Ranking function: N/A

  * Invariants eval_cie_joint_caches_complete_1 -> eval_cie_joint_caches_complete_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_joint_caches_complete_2

  * Non Asymptotic Upper Bound: 4 

  * LOOPS eval_cie_joint_caches_complete_2 -> eval_cie_joint_caches_complete_2

  * Ranking function: N/A

  * Invariants eval_cie_joint_caches_complete_2 -> eval_cie_joint_caches_complete_2

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_joint_caches_complete_3

  * Non Asymptotic Upper Bound: 4 

  * LOOPS eval_cie_joint_caches_complete_3 -> eval_cie_joint_caches_complete_3

  * Ranking function: N/A

  * Invariants eval_cie_joint_caches_complete_3 -> eval_cie_joint_caches_complete_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_cie_joint_caches_complete_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_cie_joint_caches_complete_bb1_in(C,D) -> loop_cont_eval_cie_joint_caches_complete_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_cie_joint_caches_complete_bb1_in(A,B) -> loop_cont_eval_cie_joint_caches_complete_bb1_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_cie_joint_caches_complete_18

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cie_joint_caches_complete_18 -> eval_cie_joint_caches_complete_18

  * Ranking function: N/A

  * Invariants eval_cie_joint_caches_complete_18 -> eval_cie_joint_caches_complete_18

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_joint_caches_complete_19

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cie_joint_caches_complete_19 -> eval_cie_joint_caches_complete_19

  * Ranking function: N/A

  * Invariants eval_cie_joint_caches_complete_19 -> eval_cie_joint_caches_complete_19

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_joint_caches_complete_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(-A+3) 

  * LOOPS eval_cie_joint_caches_complete_bb1_in(B) -> eval_cie_joint_caches_complete_bb1_in(C)
     - [B+1=C,2>=B]

  * Ranking function: nat(-B+3)

  * Invariants eval_cie_joint_caches_complete_bb1_in(A) -> eval_cie_joint_caches_complete_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [B>=1,3>=B,A=0]
     inv    : [3>=B,B>=0,A=0]


