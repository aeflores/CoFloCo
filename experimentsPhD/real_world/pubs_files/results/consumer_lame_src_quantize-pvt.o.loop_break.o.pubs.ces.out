This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=4,cr=eval_loop_break_bb5_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_loop_break_start

  * Non Asymptotic Upper Bound: 2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=4,cr=eval_loop_break_bb5_in/1])) 

  * LOOPS eval_loop_break_start -> eval_loop_break_start

  * Ranking function: N/A

  * Invariants eval_loop_break_start -> eval_loop_break_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_loop_break_bb0_in

  * Non Asymptotic Upper Bound: 2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=4,cr=eval_loop_break_bb5_in/1])) 

  * LOOPS eval_loop_break_bb0_in -> eval_loop_break_bb0_in

  * Ranking function: N/A

  * Invariants eval_loop_break_bb0_in -> eval_loop_break_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_loop_break_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_loop_break_bb5_in/1])) 

  * LOOPS loop_cont_eval_loop_break_bb1_in(D,E,F) -> loop_cont_eval_loop_break_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_loop_break_bb1_in(A,B,C) -> loop_cont_eval_loop_break_bb1_in(D,E,F)

     entry  : [3>=A,A>=2]
     non-rec: [A=D,B=E,C=F,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=D,B=E,C=F]

CRS loop_cont_eval_loop_break_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_loop_break_bb5_in(C,D) -> loop_cont_eval_loop_break_bb5_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_loop_break_bb5_in(A,B) -> loop_cont_eval_loop_break_bb5_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_loop_break_bb5_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_loop_break_bb5_in/1])) 

  * LOOPS eval_loop_break_bb5_in(B) -> eval_loop_break_bb5_in(C)
     - [11>=B]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_loop_break_bb5_in/1]))

  * Invariants eval_loop_break_bb5_in(A) -> eval_loop_break_bb5_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [11>=A]
     inv    : []

CRS eval_loop_break_bb7_in(A,B)

  * Non Asymptotic Upper Bound: nat(-B+3) 

  * LOOPS eval_loop_break_bb7_in(C,D) -> eval_loop_break_bb7_in(E,F)
     - [D+1=F,C=E,3>=F]

  * Ranking function: nat(-D+3)

  * Invariants eval_loop_break_bb7_in(A,B) -> eval_loop_break_bb7_in(C,D)

     entry  : [11>=A,B=0]
     non-rec: [A=C,B=D,11>=A,B=0]
     rec    : [D>=1,3>=D,11>=A,B=0,A=C]
     inv    : [3>=D,D>=0,11>=A,A=C,B=0]

CRS eval_loop_break_bb11_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_loop_break_bb11_in -> eval_loop_break_bb11_in

  * Ranking function: N/A

  * Invariants eval_loop_break_bb11_in -> eval_loop_break_bb11_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_loop_break_bb1_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_loop_break_bb1_in(C,D) -> eval_loop_break_bb1_in(E,F)
     - [D+1=F,C=E,C>=F]

  * Ranking function: nat(C-D)

  * Invariants eval_loop_break_bb1_in(A,B) -> eval_loop_break_bb1_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]


