This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 3+nat(c(maximize_failed))/4+nat(c(maximize_failed))/4+c(failed(schemes_failed,[scc=5,cr=eval_inflate_stored_bb12_in/8])) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_inflate_stored_start(A,B,C,D)

  * Non Asymptotic Upper Bound: 3+nat(c(maximize_failed))/4+nat(c(maximize_failed))/4+c(failed(schemes_failed,[scc=5,cr=eval_inflate_stored_bb12_in/8])) 

  * LOOPS eval_inflate_stored_start(E,F,G,H) -> eval_inflate_stored_start(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_inflate_stored_start(A,B,C,D) -> eval_inflate_stored_start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_inflate_stored_bb0_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 3+nat(c(maximize_failed))/4+nat(c(maximize_failed))/4+c(failed(schemes_failed,[scc=5,cr=eval_inflate_stored_bb12_in/8])) 

  * LOOPS eval_inflate_stored_bb0_in(E,F,G,H) -> eval_inflate_stored_bb0_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_inflate_stored_bb0_in(A,B,C,D) -> eval_inflate_stored_bb0_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_inflate_stored_bb1_in(A,B,C,D,E,F,G,H,I)

  * Non Asymptotic Upper Bound: 2+nat(-1*H+23)/4+c(failed(schemes_failed,[scc=5,cr=eval_inflate_stored_bb12_in/8])) 

  * LOOPS loop_cont_eval_inflate_stored_bb1_in(J,K,L,M,N,O,P,Q,R) -> loop_cont_eval_inflate_stored_bb1_in(S,T,U,V,W,X,Y,Z,A1)

  * Ranking function: N/A

  * Invariants loop_cont_eval_inflate_stored_bb1_in(A,B,C,D,E,F,G,H,I) -> loop_cont_eval_inflate_stored_bb1_in(J,K,L,M,N,O,P,Q,R)

     entry  : []
     non-rec: [A=J,B=K,C=L,D=M,E=N,F=O,G=P,H=Q,I=R]
     rec    : [0=1]
     inv    : [A=J,B=K,C=L,D=M,E=N,F=O,G=P,H=Q,I=R]

CRS loop_cont_eval_inflate_stored_bb6_in(A,B,C,D,E,F,G,H,I,J)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_inflate_stored_bb12_in/8])) 

  * LOOPS loop_cont_eval_inflate_stored_bb6_in(K,L,M,N,O,P,Q,R,S,T) -> loop_cont_eval_inflate_stored_bb6_in(U,V,W,X,Y,Z,A1,B1,C1,D1)

  * Ranking function: N/A

  * Invariants loop_cont_eval_inflate_stored_bb6_in(A,B,C,D,E,F,G,H,I,J) -> loop_cont_eval_inflate_stored_bb6_in(K,L,M,N,O,P,Q,R,S,T)

     entry  : []
     non-rec: [A=K,B=L,C=M,D=N,E=O,F=P,G=Q,H=R,I=S,J=T]
     rec    : [0=1]
     inv    : [A=K,B=L,C=M,D=N,E=O,F=P,G=Q,H=R,I=S,J=T]

CRS loop_cont_eval_inflate_stored_bb12_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_inflate_stored_bb12_in(C,D) -> loop_cont_eval_inflate_stored_bb12_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_inflate_stored_bb12_in(A,B) -> loop_cont_eval_inflate_stored_bb12_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,H)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_inflate_stored_bb12_in/8])) 

  * LOOPS eval_inflate_stored_bb12_in(I,J,K,L,M,N,O,P) -> eval_inflate_stored_bb12_in(Q,R,S,T,U,V,W,X)
     - [0>=P+1,W=0]
     - [0>=P+1]
     - [P>=1,W=0]
     - [P>=1]

  * Ranking function: c(failed(no_rf,[scc=5,cr=eval_inflate_stored_bb12_in/8]))

  * Invariants eval_inflate_stored_bb12_in(A,B,C,D,E,F,G,H) -> eval_inflate_stored_bb12_in(I,J,K,L,M,N,O,P)

     entry  : []
     non-rec: [A=I,B=J,C=K,D=L,E=M,F=N,G=O,H=P]
     rec    : []
     inv    : []

CRS eval_inflate_stored_bb13_in(A,B,C,D,E,F,G,H,I,J)

  * Non Asymptotic Upper Bound: nat(7*H-7*I-J+8)/4 

  * LOOPS eval_inflate_stored_bb13_in(K,L,M,N,O,P,Q,R,S,T) -> eval_inflate_stored_bb13_in(U,V,W,X,Y,Z,A1,B1,C1,D1)
     - [T+8=D1,K=U,L=V,M=W,N=X+1,O=Y,P=Z,Q=A1,R=B1,S=C1,7>=T]
     - [T+8=D1,K=U,L=V,M=W,N=X+1,O=Y,P=Z,Q=A1,R=B1,S=C1,7>=T]

  * Ranking function: nat(-T/8+15/8)

  * Invariants eval_inflate_stored_bb13_in(A,B,C,D,E,F,G,H,I,J) -> eval_inflate_stored_bb13_in(K,L,M,N,O,P,Q,R,S,T)

     entry  : [H=I+1,E=J]
     non-rec: [A=K,B=L,C=M,D=N,E=O,F=P,G=Q,H=R,I=S,J=T,H=I+1,E=J]
     rec    : [8*D+E=8*N+T,H=S+1,H=R,G=Q,F=P,E=O,C=M,B=L,A=K,E=J,H=I+1,8*N+15>=8*D+E,D>=N+1]
     inv    : [T>=E,E=J,A=K,B=L,C=M,8*D+E=8*N+T,E=O,F=P,G=Q,H=R,H=S+1,H=I+1]

CRS eval_inflate_stored_bb6_in(A,B,C,D,E,F,G)

  * Non Asymptotic Upper Bound: nat(-G+23)/4 

  * LOOPS eval_inflate_stored_bb6_in(H,I,J,K,L,M,N) -> eval_inflate_stored_bb6_in(O,P,Q,R,S,T,U)
     - [N+8=U,H=O,I=P,J=Q,K=R+1,L=S,M=T,15>=N]
     - [N+8=U,H=O,I=P,J=Q,K=R+1,L=S,M=T,15>=N]

  * Ranking function: nat(-N/8+23/8)

  * Invariants eval_inflate_stored_bb6_in(A,B,C,D,E,F,G) -> eval_inflate_stored_bb6_in(H,I,J,K,L,M,N)

     entry  : []
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N]
     rec    : [8*D+G=8*K+N,F=M,E=L,C=J,B=I,A=H,8*K+23>=8*D+G,D>=K+1]
     inv    : [N>=G,B=I,C=J,8*D+G=8*K+N,E=L,F=M,A=H]

CRS eval_inflate_stored_bb21_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_inflate_stored_bb21_in -> eval_inflate_stored_bb21_in

  * Ranking function: N/A

  * Invariants eval_inflate_stored_bb21_in -> eval_inflate_stored_bb21_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_inflate_stored_bb1_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: nat(-F+23)/4 

  * LOOPS eval_inflate_stored_bb1_in(G,H,I,J,K,L) -> eval_inflate_stored_bb1_in(M,N,O,P,Q,R)
     - [L+8=R,G=M,H=N,I=O,J=P+1,K=Q,15>=L]
     - [L+8=R,G=M,H=N,I=O,J=P+1,K=Q,15>=L]

  * Ranking function: nat(-L/8+23/8)

  * Invariants eval_inflate_stored_bb1_in(A,B,C,D,E,F) -> eval_inflate_stored_bb1_in(G,H,I,J,K,L)

     entry  : [C=E]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,C=E]
     rec    : [8*D+F=8*J+L,C=K,C=I,B=H,A=G,C=E,8*J+23>=8*D+F,D>=J+1]
     inv    : [L>=F,A=G,B=H,C=I,8*D+F=8*J+L,C=K,C=E]


