This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_isheaderline_bb2_in/2])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_isheaderline_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_isheaderline_bb2_in/2])) 

  * LOOPS eval_isheaderline_start(B) -> eval_isheaderline_start(C)

  * Ranking function: N/A

  * Invariants eval_isheaderline_start(A) -> eval_isheaderline_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_isheaderline_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_isheaderline_bb2_in/2])) 

  * LOOPS eval_isheaderline_bb0_in(B) -> eval_isheaderline_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_isheaderline_bb0_in(A) -> eval_isheaderline_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_isheaderline_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_isheaderline_bb2_in/2])) 

  * LOOPS eval_isheaderline_3(B) -> eval_isheaderline_3(C)

  * Ranking function: N/A

  * Invariants eval_isheaderline_3(A) -> eval_isheaderline_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_isheaderline_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_isheaderline_bb2_in/2])) 

  * LOOPS eval_isheaderline_4(B) -> eval_isheaderline_4(C)

  * Ranking function: N/A

  * Invariants eval_isheaderline_4(A) -> eval_isheaderline_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_isheaderline_8(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_isheaderline_bb2_in/2])) 

  * LOOPS eval_isheaderline_8(B) -> eval_isheaderline_8(C)

  * Ranking function: N/A

  * Invariants eval_isheaderline_8(A) -> eval_isheaderline_8(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_isheaderline_9(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_isheaderline_bb2_in/2])) 

  * LOOPS eval_isheaderline_9(B) -> eval_isheaderline_9(C)

  * Ranking function: N/A

  * Invariants eval_isheaderline_9(A) -> eval_isheaderline_9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_isheaderline_bb2_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_isheaderline_bb2_in(F,G,H,I,J) -> loop_cont_eval_isheaderline_bb2_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_isheaderline_bb2_in(A,B,C,D,E) -> loop_cont_eval_isheaderline_bb2_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_isheaderline_30(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_isheaderline_30(D,E,F) -> eval_isheaderline_30(G,H,I)

  * Ranking function: N/A

  * Invariants eval_isheaderline_30(A,B,C) -> eval_isheaderline_30(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_isheaderline_31(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_isheaderline_31(C,D) -> eval_isheaderline_31(E,F)

  * Ranking function: N/A

  * Invariants eval_isheaderline_31(A,B) -> eval_isheaderline_31(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_isheaderline_37(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_isheaderline_37(D,E,F) -> eval_isheaderline_37(G,H,I)

  * Ranking function: N/A

  * Invariants eval_isheaderline_37(A,B,C) -> eval_isheaderline_37(D,E,F)

     entry  : [B=C]
     non-rec: [A=D,B=E,C=F,B=C]
     rec    : [0=1]
     inv    : [B=C,A=D,B=E,B=F]

CRS eval_isheaderline_38(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_isheaderline_38(C,D) -> eval_isheaderline_38(E,F)

  * Ranking function: N/A

  * Invariants eval_isheaderline_38(A,B) -> eval_isheaderline_38(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_isheaderline_40(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_isheaderline_40(C,D) -> eval_isheaderline_40(E,F)

  * Ranking function: N/A

  * Invariants eval_isheaderline_40(A,B) -> eval_isheaderline_40(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_isheaderline_41

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_isheaderline_41 -> eval_isheaderline_41

  * Ranking function: N/A

  * Invariants eval_isheaderline_41 -> eval_isheaderline_41

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_isheaderline_34(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_isheaderline_34(B) -> eval_isheaderline_34(C)

  * Ranking function: N/A

  * Invariants eval_isheaderline_34(A) -> eval_isheaderline_34(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_isheaderline_35

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_isheaderline_35 -> eval_isheaderline_35

  * Ranking function: N/A

  * Invariants eval_isheaderline_35 -> eval_isheaderline_35

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_isheaderline_bb11_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_isheaderline_bb11_in -> eval_isheaderline_bb11_in

  * Ranking function: N/A

  * Invariants eval_isheaderline_bb11_in -> eval_isheaderline_bb11_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_isheaderline_bb2_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_isheaderline_bb2_in/2])) 

  * LOOPS eval_isheaderline_bb2_in(C,D) -> eval_isheaderline_bb2_in(E,F)
     - [D+1=F,C=E]
     - [C=E,F=46,D=45]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_isheaderline_bb2_in/2]))

  * Invariants eval_isheaderline_bb2_in(A,B) -> eval_isheaderline_bb2_in(C,D)

     entry  : [B=1]
     non-rec: [A=C,B=D,B=1]
     rec    : [A=C,B=1,D>=2]
     inv    : [D>=1,A=C,B=1]


