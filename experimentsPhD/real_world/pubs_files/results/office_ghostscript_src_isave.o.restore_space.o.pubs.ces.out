This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_restore_space_bb1_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_restore_space_bb1_in/0])) 

  * LOOPS eval_restore_space_start -> eval_restore_space_start

  * Ranking function: N/A

  * Invariants eval_restore_space_start -> eval_restore_space_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_restore_space_bb1_in/0])) 

  * LOOPS eval_restore_space_bb0_in -> eval_restore_space_bb0_in

  * Ranking function: N/A

  * Invariants eval_restore_space_bb0_in -> eval_restore_space_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_restore_space_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_restore_space_bb1_in(C,D) -> loop_cont_eval_restore_space_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_restore_space_bb1_in(A,B) -> loop_cont_eval_restore_space_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_restore_space_9

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_restore_space_9 -> eval_restore_space_9

  * Ranking function: N/A

  * Invariants eval_restore_space_9 -> eval_restore_space_9

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_10

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_restore_space_10 -> eval_restore_space_10

  * Ranking function: N/A

  * Invariants eval_restore_space_10 -> eval_restore_space_10

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_11

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_restore_space_11 -> eval_restore_space_11

  * Ranking function: N/A

  * Invariants eval_restore_space_11 -> eval_restore_space_11

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_12

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_restore_space_12 -> eval_restore_space_12

  * Ranking function: N/A

  * Invariants eval_restore_space_12 -> eval_restore_space_12

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_13

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_restore_space_13 -> eval_restore_space_13

  * Ranking function: N/A

  * Invariants eval_restore_space_13 -> eval_restore_space_13

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_14

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_restore_space_14 -> eval_restore_space_14

  * Ranking function: N/A

  * Invariants eval_restore_space_14 -> eval_restore_space_14

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_15

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_restore_space_15 -> eval_restore_space_15

  * Ranking function: N/A

  * Invariants eval_restore_space_15 -> eval_restore_space_15

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_restore_space_bb8_in -> eval_restore_space_bb8_in

  * Ranking function: N/A

  * Invariants eval_restore_space_bb8_in -> eval_restore_space_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_restore_space_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_restore_space_bb1_in/0])) 

  * LOOPS eval_restore_space_bb1_in -> eval_restore_space_bb1_in
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_restore_space_bb1_in/0]))

  * Invariants eval_restore_space_bb1_in -> eval_restore_space_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


