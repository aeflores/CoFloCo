This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_refs_set_reloc_bb1_in/0]))+c(failed(schemes_failed,[scc=2,cr=eval_refs_set_reloc_bb16_in/0])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_refs_set_reloc_start(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_refs_set_reloc_bb1_in/0]))+c(failed(schemes_failed,[scc=2,cr=eval_refs_set_reloc_bb16_in/0])) 

  * LOOPS eval_refs_set_reloc_start(C,D) -> eval_refs_set_reloc_start(E,F)

  * Ranking function: N/A

  * Invariants eval_refs_set_reloc_start(A,B) -> eval_refs_set_reloc_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_refs_set_reloc_bb0_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_refs_set_reloc_bb1_in/0]))+c(failed(schemes_failed,[scc=2,cr=eval_refs_set_reloc_bb16_in/0])) 

  * LOOPS eval_refs_set_reloc_bb0_in -> eval_refs_set_reloc_bb0_in

  * Ranking function: N/A

  * Invariants eval_refs_set_reloc_bb0_in -> eval_refs_set_reloc_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_refs_set_reloc_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_refs_set_reloc_bb16_in/0])) 

  * LOOPS loop_cont_eval_refs_set_reloc_bb1_in(C,D) -> loop_cont_eval_refs_set_reloc_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_refs_set_reloc_bb1_in(A,B) -> loop_cont_eval_refs_set_reloc_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_refs_set_reloc_bb16_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_refs_set_reloc_bb16_in(C,D) -> loop_cont_eval_refs_set_reloc_bb16_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_refs_set_reloc_bb16_in(A,B) -> loop_cont_eval_refs_set_reloc_bb16_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_refs_set_reloc_bb27_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_refs_set_reloc_bb27_in -> eval_refs_set_reloc_bb27_in

  * Ranking function: N/A

  * Invariants eval_refs_set_reloc_bb27_in -> eval_refs_set_reloc_bb27_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_refs_set_reloc_bb16_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_refs_set_reloc_bb16_in/0])) 

  * LOOPS eval_refs_set_reloc_bb16_in -> eval_refs_set_reloc_bb16_in
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_refs_set_reloc_bb16_in/0]))

  * Invariants eval_refs_set_reloc_bb16_in -> eval_refs_set_reloc_bb16_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_refs_set_reloc_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_refs_set_reloc_bb1_in/0])) 

  * LOOPS eval_refs_set_reloc_bb1_in -> eval_refs_set_reloc_bb1_in
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_refs_set_reloc_bb1_in/0]))

  * Invariants eval_refs_set_reloc_bb1_in -> eval_refs_set_reloc_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_refs_set_reloc_bb6_in(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS eval_refs_set_reloc_bb6_in(B) -> eval_refs_set_reloc_bb6_in(C)
     - [B=C+1,0>=C+2]
     - [B=C+1,C>=0]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_refs_set_reloc_bb6_in/1]))

  * Invariants eval_refs_set_reloc_bb6_in(A) -> eval_refs_set_reloc_bb6_in(B)

     entry  : [A=2]
     non-rec: [A=B,A=2]
     rec    : [1>=B,B>=0,A=2]
     inv    : [B>=0,2>=B,A=2]


