This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_LogLuvEncode32_bb7_in/3])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LogLuvEncode32_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_LogLuvEncode32_bb7_in/3])) 

  * LOOPS eval_LogLuvEncode32_start(C,D) -> eval_LogLuvEncode32_start(E,F)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_start(A,B) -> eval_LogLuvEncode32_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LogLuvEncode32_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_LogLuvEncode32_bb7_in/3])) 

  * LOOPS eval_LogLuvEncode32_bb0_in(B) -> eval_LogLuvEncode32_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_bb0_in(A) -> eval_LogLuvEncode32_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LogLuvEncode32_9(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_LogLuvEncode32_bb7_in/3])) 

  * LOOPS eval_LogLuvEncode32_9(B) -> eval_LogLuvEncode32_9(C)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_9(A) -> eval_LogLuvEncode32_9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LogLuvEncode32_10(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_LogLuvEncode32_bb7_in/3])) 

  * LOOPS eval_LogLuvEncode32_10(B) -> eval_LogLuvEncode32_10(C)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_10(A) -> eval_LogLuvEncode32_10(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LogLuvEncode32_bb6_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_LogLuvEncode32_bb7_in/3])) 

  * LOOPS eval_LogLuvEncode32_bb6_in(B) -> eval_LogLuvEncode32_bb6_in(C)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_bb6_in(A) -> eval_LogLuvEncode32_bb6_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_LogLuvEncode32_bb7_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_LogLuvEncode32_bb7_in(C,D) -> loop_cont_eval_LogLuvEncode32_bb7_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_LogLuvEncode32_bb7_in(A,B) -> loop_cont_eval_LogLuvEncode32_bb7_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LogLuvEncode32_bb37_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode32_bb37_in -> eval_LogLuvEncode32_bb37_in

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_bb37_in -> eval_LogLuvEncode32_bb37_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode32_bb7_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=13,cr=eval_LogLuvEncode32_bb7_in/3])) 

  * LOOPS eval_LogLuvEncode32_bb7_in(D,E,F) -> eval_LogLuvEncode32_bb7_in(G,H,I)
     - [F>=8]

  * Ranking function: c(failed(no_rf,[scc=13,cr=eval_LogLuvEncode32_bb7_in/3]))

  * Invariants eval_LogLuvEncode32_bb7_in(A,B,C) -> eval_LogLuvEncode32_bb7_in(D,E,F)

     entry  : [C=32,B=0]
     non-rec: [A=D,B=E,C=F,C=32,B=0]
     rec    : [C=32,B=0]
     inv    : [C=32,B=0]

CRS eval_LogLuvEncode32_bb9_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=12,cr=eval_LogLuvEncode32_bb9_in/6])) 

  * LOOPS eval_LogLuvEncode32_bb9_in(G,H,I,J,K,L) -> eval_LogLuvEncode32_bb9_in(M,N,O,P,Q,R)
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]
     - [G>=L+1]

  * Ranking function: c(failed(no_rf,[scc=12,cr=eval_LogLuvEncode32_bb9_in/6]))

  * Invariants eval_LogLuvEncode32_bb9_in(A,B,C,D,E,F) -> eval_LogLuvEncode32_bb9_in(G,H,I,J,K,L)

     entry  : [C>=8,F=0,B=E,C=D+8]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,C>=8,F=0,B=E,C=D+8]
     rec    : [A>=1,C>=8,C=D+8,B=E,F=0]
     inv    : [C>=8,F=0,B=E,C=D+8]

CRS eval_LogLuvEncode32_bb26_in(A,B,C,D,E,F,G,H,I,J,K,L,M)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=11,cr=eval_LogLuvEncode32_bb26_in/13])) 

  * LOOPS eval_LogLuvEncode32_bb26_in(N,O,P,Q,R,S,T,U,V,W,X,Y,Z) -> eval_LogLuvEncode32_bb26_in(A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1)
     - [U>=Z+1]
     - [U>=Z+1]
     - [U>=Z+1]
     - [U>=Z+1]

  * Ranking function: c(failed(no_rf,[scc=11,cr=eval_LogLuvEncode32_bb26_in/13]))

  * Invariants eval_LogLuvEncode32_bb26_in(A,B,C,D,E,F,G,H,I,J,K,L,M) -> eval_LogLuvEncode32_bb26_in(N,O,P,Q,R,S,T,U,V,W,X,Y,Z)

     entry  : [L=M]
     non-rec: [A=N,B=O,C=P,D=Q,E=R,F=S,G=T,H=U,I=V,J=W,K=X,L=Y,M=Z,L=M]
     rec    : [H>=L+1,L=M]
     inv    : [L=M]

CRS eval_LogLuvEncode32_bb31_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P)

  * Non Asymptotic Upper Bound: nat(O) 

  * LOOPS eval_LogLuvEncode32_bb31_in(Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1) -> eval_LogLuvEncode32_bb31_in(G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1)
     - [Q=G1,R=H1,S=I1,T=J1,U=K1,V=L1,W=M1,X=N1,Y=O1,Z=P1,A1=Q1,B1=R1,C1=S1,D1=T1,F1+1=V1,E1=U1+1,0>=U1+2]
     - [Q=G1,R=H1,S=I1,T=J1,U=K1,V=L1,W=M1,X=N1,Y=O1,Z=P1,A1=Q1,B1=R1,C1=S1,D1=T1,F1+1=V1,E1=U1+1,U1>=0]

  * Ranking function: c(failed(no_rf,[scc=10,cr=eval_LogLuvEncode32_bb31_in/16]))

  * Invariants eval_LogLuvEncode32_bb31_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P) -> eval_LogLuvEncode32_bb31_in(Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1)

     entry  : [H>=M+1,H+126>=M+O,O>=1,N=O,M=P]
     non-rec: [A=Q,B=R,C=S,D=T,E=U,F=V,G=W,H=X,I=Y,J=Z,K=A1,L=B1,M=C1,N=D1,O=E1,P=F1,H>=M+1,H+126>=M+O,O>=1,N=O,M=P]
     rec    : [M+N=E1+F1,N=D1,M=C1,L=B1,K=A1,J=Z,I=Y,H=X,G=W,F=V,E=U,D=T,C=S,B=R,A=Q,M=P,N=O,H>=M+1,H+126>=M+N,N>=E1+1,E1>=0]
     inv    : [F1>=M,N>=1,M+N>=F1,H>=M+1,H+126>=M+N,M=P,A=Q,B=R,C=S,D=T,E=U,F=V,G=W,H=X,I=Y,J=Z,K=A1,L=B1,M=C1,N=D1,M+N=E1+F1,N=O]

CRS eval_LogLuvEncode32_bb22_in(A,B,C,D,E,F,G,H,I,J,K)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=9,cr=eval_LogLuvEncode32_bb22_in/11])) 

  * LOOPS eval_LogLuvEncode32_bb22_in(L,M,N,O,P,Q,R,S,T,U,V) -> eval_LogLuvEncode32_bb22_in(W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1)
     - [L=W,M=X,N=Y,O=Z,P=A1,Q=B1,R=C1,S=D1,T=E1,U=F1,V+1=G1,S>=G1+1]
     - [L=W,M=X,N=Y,O=Z,P=A1,Q=B1,R=C1,S=D1,T=E1,U=F1,V+1=G1,G1>=S+1]

  * Ranking function: c(failed(no_rf,[scc=9,cr=eval_LogLuvEncode32_bb22_in/11]))

  * Invariants eval_LogLuvEncode32_bb22_in(A,B,C,D,E,F,G,H,I,J,K) -> eval_LogLuvEncode32_bb22_in(L,M,N,O,P,Q,R,S,T,U,V)

     entry  : [F+1=K]
     non-rec: [A=L,B=M,C=N,D=O,E=P,F=Q,G=R,H=S,I=T,J=U,K=V,F+1=K]
     rec    : [J=U,I=T,H=S,G=R,F=Q,E=P,D=O,C=N,B=M,A=L,F+1=K,V>=F+2]
     inv    : [V>=F+1,A=L,B=M,C=N,D=O,E=P,F=Q,G=R,H=S,I=T,J=U,F+1=K]

CRS eval_LogLuvEncode32_bb14_in(A,B,C,D,E,F,G,H)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=8,cr=eval_LogLuvEncode32_bb14_in/8])) 

  * LOOPS eval_LogLuvEncode32_bb14_in(I,J,K,L,M,N,O,P) -> eval_LogLuvEncode32_bb14_in(Q,R,S,T,U,V,W,X)
     - [I>=P+1]
     - [I>=P+1]
     - [I>=P+1]

  * Ranking function: c(failed(no_rf,[scc=8,cr=eval_LogLuvEncode32_bb14_in/8]))

  * Invariants eval_LogLuvEncode32_bb14_in(A,B,C,D,E,F,G,H) -> eval_LogLuvEncode32_bb14_in(I,J,K,L,M,N,O,P)

     entry  : [A>=H+1,E=G,F=H]
     non-rec: [A=I,B=J,C=K,D=L,E=M,F=N,G=O,H=P,A>=H+1,E=G,F=H]
     rec    : [A>=F+1,E=G,F=H]
     inv    : [A>=F+1,F=H,E=G]

CRS eval_LogLuvEncode32_bb16_in(A,B,C,D,E,F,G,H,I)

  * Non Asymptotic Upper Bound: nat(-I+129) 

  * LOOPS eval_LogLuvEncode32_bb16_in(J,K,L,M,N,O,P,Q,R) -> eval_LogLuvEncode32_bb16_in(S,T,U,V,W,X,Y,Z,A1)
     - [R+1=A1,L=U,M=V,N=W,O=X,P=Y,K=T,J=S,Q=Z,J>=Z+A1,129>=A1]

  * Ranking function: nat(-R+129)

  * Invariants eval_LogLuvEncode32_bb16_in(A,B,C,D,E,F,G,H,I) -> eval_LogLuvEncode32_bb16_in(J,K,L,M,N,O,P,Q,R)

     entry  : [A>=H+1,I=1]
     non-rec: [A=J,B=K,C=L,D=M,E=N,F=O,G=P,H=Q,I=R,A>=H+1,I=1]
     rec    : [H=Q,G=P,F=O,E=N,D=M,C=L,B=K,A=J,I=1,A>=H+R,R>=2]
     inv    : [R>=1,A>=H+R,A=J,B=K,C=L,D=M,E=N,F=O,G=P,H=Q,I=1]

CRS eval_LogLuvEncode32_115

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode32_115 -> eval_LogLuvEncode32_115

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_115 -> eval_LogLuvEncode32_115

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode32_116

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode32_116 -> eval_LogLuvEncode32_116

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_116 -> eval_LogLuvEncode32_116

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode32_113

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode32_113 -> eval_LogLuvEncode32_113

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_113 -> eval_LogLuvEncode32_113

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode32_114

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode32_114 -> eval_LogLuvEncode32_114

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_114 -> eval_LogLuvEncode32_114

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode32_111

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode32_111 -> eval_LogLuvEncode32_111

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_111 -> eval_LogLuvEncode32_111

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode32_112

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode32_112 -> eval_LogLuvEncode32_112

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode32_112 -> eval_LogLuvEncode32_112

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


