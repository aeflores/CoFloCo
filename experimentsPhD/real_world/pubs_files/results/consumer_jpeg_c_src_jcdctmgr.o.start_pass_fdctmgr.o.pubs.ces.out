This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_start_pass_fdctmgr_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_start_pass_fdctmgr_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_start_pass_fdctmgr_bb1_in/1])) 

  * LOOPS eval_start_pass_fdctmgr_start -> eval_start_pass_fdctmgr_start

  * Ranking function: N/A

  * Invariants eval_start_pass_fdctmgr_start -> eval_start_pass_fdctmgr_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_start_pass_fdctmgr_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_start_pass_fdctmgr_bb1_in/1])) 

  * LOOPS eval_start_pass_fdctmgr_bb0_in -> eval_start_pass_fdctmgr_bb0_in

  * Ranking function: N/A

  * Invariants eval_start_pass_fdctmgr_bb0_in -> eval_start_pass_fdctmgr_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_start_pass_fdctmgr_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_start_pass_fdctmgr_bb1_in(C,D) -> loop_cont_eval_start_pass_fdctmgr_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_start_pass_fdctmgr_bb1_in(A,B) -> loop_cont_eval_start_pass_fdctmgr_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_start_pass_fdctmgr_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_start_pass_fdctmgr_bb1_in/1])) 

  * LOOPS eval_start_pass_fdctmgr_bb1_in(B) -> eval_start_pass_fdctmgr_bb1_in(C)
     - []
     - []
     - [B+1=C]
     - []
     - []
     - []
     - []
     - []
     - []
     - [B+1=C]
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_start_pass_fdctmgr_bb1_in/1]))

  * Invariants eval_start_pass_fdctmgr_bb1_in(A) -> eval_start_pass_fdctmgr_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0]
     inv    : [A=0]

CRS eval_start_pass_fdctmgr_bb19_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_start_pass_fdctmgr_bb19_in/2])) 

  * LOOPS eval_start_pass_fdctmgr_bb19_in(C,D) -> eval_start_pass_fdctmgr_bb19_in(E,F)
     - [7>=D]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_start_pass_fdctmgr_bb19_in/2]))

  * Invariants eval_start_pass_fdctmgr_bb19_in(A,B) -> eval_start_pass_fdctmgr_bb19_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [B=0]
     inv    : [B=0]

CRS eval_start_pass_fdctmgr_bb21_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(-C+8) 

  * LOOPS eval_start_pass_fdctmgr_bb21_in(D,E,F) -> eval_start_pass_fdctmgr_bb21_in(G,H,I)
     - [F+1=I,E=H,D=G,8>=I]

  * Ranking function: nat(-F+8)

  * Invariants eval_start_pass_fdctmgr_bb21_in(A,B,C) -> eval_start_pass_fdctmgr_bb21_in(D,E,F)

     entry  : [7>=B,C=0]
     non-rec: [A=D,B=E,C=F,7>=B,C=0]
     rec    : [B=E,A=D,C=0,7>=B,F>=1]
     inv    : [F>=0,7>=B,A=D,B=E,C=0]

CRS eval_start_pass_fdctmgr_bb14_in(A,B)

  * Non Asymptotic Upper Bound: nat(-B+64) 

  * LOOPS eval_start_pass_fdctmgr_bb14_in(C,D) -> eval_start_pass_fdctmgr_bb14_in(E,F)
     - [D+1=F,C=E,64>=F]

  * Ranking function: nat(-D+64)

  * Invariants eval_start_pass_fdctmgr_bb14_in(A,B) -> eval_start_pass_fdctmgr_bb14_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_start_pass_fdctmgr_bb9_in(A,B)

  * Non Asymptotic Upper Bound: nat(-B+64) 

  * LOOPS eval_start_pass_fdctmgr_bb9_in(C,D) -> eval_start_pass_fdctmgr_bb9_in(E,F)
     - [D+1=F,C=E,64>=F]

  * Ranking function: nat(-D+64)

  * Invariants eval_start_pass_fdctmgr_bb9_in(A,B) -> eval_start_pass_fdctmgr_bb9_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,D>=1]
     inv    : [D>=0,A=C,B=0]


