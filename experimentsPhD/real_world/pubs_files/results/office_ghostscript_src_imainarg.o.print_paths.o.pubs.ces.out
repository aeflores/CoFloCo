This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_print_paths_bb1_in/3])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_print_paths_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_print_paths_bb1_in/3])) 

  * LOOPS eval_print_paths_start(B) -> eval_print_paths_start(C)

  * Ranking function: N/A

  * Invariants eval_print_paths_start(A) -> eval_print_paths_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_print_paths_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_print_paths_bb1_in/3])) 

  * LOOPS eval_print_paths_bb0_in(B) -> eval_print_paths_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_print_paths_bb0_in(A) -> eval_print_paths_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_print_paths_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_print_paths_bb1_in/3])) 

  * LOOPS eval_print_paths_0(B) -> eval_print_paths_0(C)

  * Ranking function: N/A

  * Invariants eval_print_paths_0(A) -> eval_print_paths_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_print_paths_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_print_paths_bb1_in/3])) 

  * LOOPS eval_print_paths_1(B) -> eval_print_paths_1(C)

  * Ranking function: N/A

  * Invariants eval_print_paths_1(A) -> eval_print_paths_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_print_paths_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_print_paths_bb1_in/3])) 

  * LOOPS eval_print_paths_2(B) -> eval_print_paths_2(C)

  * Ranking function: N/A

  * Invariants eval_print_paths_2(A) -> eval_print_paths_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_print_paths_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_print_paths_bb1_in(D,E,F) -> loop_cont_eval_print_paths_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_print_paths_bb1_in(A,B,C) -> loop_cont_eval_print_paths_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_print_paths_39(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_print_paths_39(B) -> eval_print_paths_39(C)

  * Ranking function: N/A

  * Invariants eval_print_paths_39(A) -> eval_print_paths_39(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_print_paths_40

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_print_paths_40 -> eval_print_paths_40

  * Ranking function: N/A

  * Invariants eval_print_paths_40 -> eval_print_paths_40

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_print_paths_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_print_paths_bb1_in/3])) 

  * LOOPS eval_print_paths_bb1_in(D,E,F) -> eval_print_paths_bb1_in(G,H,I)
     - [E>=F+1]
     - [E>=F+1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_print_paths_bb1_in/3]))

  * Invariants eval_print_paths_bb1_in(A,B,C) -> eval_print_paths_bb1_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B>=1,C=0]
     inv    : [C=0]

CRS eval_print_paths_bb5_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_print_paths_bb5_in/5])) 

  * LOOPS eval_print_paths_bb5_in(F,G,H,I,J) -> eval_print_paths_bb5_in(K,L,M,N,O)
     - [J=O+1,F=K,G=L,H=M,I=N,0>=O+2]
     - [J=O+1,F=K,G=L,H=M,I=N,O>=0]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_print_paths_bb5_in/5]))

  * Invariants eval_print_paths_bb5_in(A,B,C,D,E) -> eval_print_paths_bb5_in(F,G,H,I,J)

     entry  : [B>=C+1,D=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,B>=C+1,D=E]
     rec    : [D=I,C=H,B=G,A=F,D=E,B>=C+1,D>=J+1]
     inv    : [D>=J,B>=C+1,A=F,B=G,C=H,D=I,D=E]


