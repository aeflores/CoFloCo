This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_phone_to_elm_bb2_in/3])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_phone_to_elm_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_phone_to_elm_bb2_in/3])) 

  * LOOPS eval_phone_to_elm_start(C,D) -> eval_phone_to_elm_start(E,F)

  * Ranking function: N/A

  * Invariants eval_phone_to_elm_start(A,B) -> eval_phone_to_elm_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_phone_to_elm_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_phone_to_elm_bb2_in/3])) 

  * LOOPS eval_phone_to_elm_bb0_in(C,D) -> eval_phone_to_elm_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_phone_to_elm_bb0_in(A,B) -> eval_phone_to_elm_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_phone_to_elm_3(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_phone_to_elm_bb2_in/3])) 

  * LOOPS eval_phone_to_elm_3(C,D) -> eval_phone_to_elm_3(E,F)

  * Ranking function: N/A

  * Invariants eval_phone_to_elm_3(A,B) -> eval_phone_to_elm_3(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_phone_to_elm_4(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_phone_to_elm_bb2_in/3])) 

  * LOOPS eval_phone_to_elm_4(C,D) -> eval_phone_to_elm_4(E,F)

  * Ranking function: N/A

  * Invariants eval_phone_to_elm_4(A,B) -> eval_phone_to_elm_4(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_phone_to_elm_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_phone_to_elm_bb2_in(C,D) -> loop_cont_eval_phone_to_elm_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_phone_to_elm_bb2_in(A,B) -> loop_cont_eval_phone_to_elm_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_phone_to_elm__critedge_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_phone_to_elm__critedge_in -> eval_phone_to_elm__critedge_in

  * Ranking function: N/A

  * Invariants eval_phone_to_elm__critedge_in -> eval_phone_to_elm__critedge_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_phone_to_elm_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_phone_to_elm_bb2_in/3])) 

  * LOOPS eval_phone_to_elm_bb2_in(D,E,F) -> eval_phone_to_elm_bb2_in(G,H,I)
     - []
     - [E=H,I=3,D=G]
     - [E=H,F=I,D=G]
     - [E=H,I=1,D=G]
     - [E=H,I=2,D=G]
     - [E=H,F=I,D=G]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_phone_to_elm_bb2_in/3]))

  * Invariants eval_phone_to_elm_bb2_in(A,B,C) -> eval_phone_to_elm_bb2_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [C=0]
     inv    : [C=0]

CRS eval_phone_to_elm_bb6_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 6*nat(D) 

  * LOOPS eval_phone_to_elm_bb6_in(F,G,H,I,J) -> eval_phone_to_elm_bb6_in(K,L,M,N,O)
     - [J=O,F=K,G=L,H=M,I=N+1,I>=1]
     - [J=O,F=K,G=L,H=M,I=N+1,I>=1]
     - [J=O,F=K,G=L,H=M,I=N+1,I>=1]
     - [O=0,F=K,G=L,H=M,I=N+1,I>=1]
     - [O=0,F=K,G=L,H=M,I=N+1,I>=1]
     - [O=0,F=K,G=L,H=M,I=N+1,I>=1]

  * Ranking function: nat(I)

  * Invariants eval_phone_to_elm_bb6_in(A,B,C,D,E) -> eval_phone_to_elm_bb6_in(F,G,H,I,J)

     entry  : [C=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,C=E]
     rec    : [C=H,B=G,A=F,C=E,I>=0,D>=I+1]
     inv    : [D>=I,B=G,C=H,A=F,C=E]


