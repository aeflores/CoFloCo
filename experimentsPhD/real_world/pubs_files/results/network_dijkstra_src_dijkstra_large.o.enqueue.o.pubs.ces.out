This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_enqueue_bb2_in/0])) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_enqueue_start(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_enqueue_bb2_in/0])) 

  * LOOPS eval_enqueue_start(E,F,G,H) -> eval_enqueue_start(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_enqueue_start(A,B,C,D) -> eval_enqueue_start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_enqueue_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_enqueue_bb2_in/0])) 

  * LOOPS eval_enqueue_bb0_in(B) -> eval_enqueue_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_enqueue_bb0_in(A) -> eval_enqueue_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_enqueue_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_enqueue_bb2_in/0])) 

  * LOOPS eval_enqueue_0(B) -> eval_enqueue_0(C)

  * Ranking function: N/A

  * Invariants eval_enqueue_0(A) -> eval_enqueue_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_enqueue_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_enqueue_bb2_in/0])) 

  * LOOPS eval_enqueue_1(B) -> eval_enqueue_1(C)

  * Ranking function: N/A

  * Invariants eval_enqueue_1(A) -> eval_enqueue_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_enqueue_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_enqueue_bb2_in(C,D) -> loop_cont_eval_enqueue_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_enqueue_bb2_in(A,B) -> loop_cont_eval_enqueue_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_enqueue_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enqueue_bb6_in -> eval_enqueue_bb6_in

  * Ranking function: N/A

  * Invariants eval_enqueue_bb6_in -> eval_enqueue_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enqueue_bb2_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_enqueue_bb2_in/0])) 

  * LOOPS eval_enqueue_bb2_in -> eval_enqueue_bb2_in
     - []

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_enqueue_bb2_in/0]))

  * Invariants eval_enqueue_bb2_in -> eval_enqueue_bb2_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_enqueue_15(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enqueue_15(B) -> eval_enqueue_15(C)

  * Ranking function: N/A

  * Invariants eval_enqueue_15(A) -> eval_enqueue_15(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_enqueue_16(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enqueue_16(B) -> eval_enqueue_16(C)

  * Ranking function: N/A

  * Invariants eval_enqueue_16(A) -> eval_enqueue_16(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_enqueue_17

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enqueue_17 -> eval_enqueue_17

  * Ranking function: N/A

  * Invariants eval_enqueue_17 -> eval_enqueue_17

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


