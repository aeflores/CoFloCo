This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_get_word_gray_row_start

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_get_word_gray_row_start -> eval_get_word_gray_row_start

  * Ranking function: N/A

  * Invariants eval_get_word_gray_row_start -> eval_get_word_gray_row_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_get_word_gray_row_bb0_in

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_get_word_gray_row_bb0_in -> eval_get_word_gray_row_bb0_in

  * Ranking function: N/A

  * Invariants eval_get_word_gray_row_bb0_in -> eval_get_word_gray_row_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_get_word_gray_row_1(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_get_word_gray_row_1(B) -> eval_get_word_gray_row_1(C)

  * Ranking function: N/A

  * Invariants eval_get_word_gray_row_1(A) -> eval_get_word_gray_row_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_get_word_gray_row_2

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_get_word_gray_row_2 -> eval_get_word_gray_row_2

  * Ranking function: N/A

  * Invariants eval_get_word_gray_row_2 -> eval_get_word_gray_row_2

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_get_word_gray_row_5

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_get_word_gray_row_5 -> eval_get_word_gray_row_5

  * Ranking function: N/A

  * Invariants eval_get_word_gray_row_5 -> eval_get_word_gray_row_5

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_get_word_gray_row_6

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_get_word_gray_row_6 -> eval_get_word_gray_row_6

  * Ranking function: N/A

  * Invariants eval_get_word_gray_row_6 -> eval_get_word_gray_row_6

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_get_word_gray_row_bb2_in

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_get_word_gray_row_bb2_in -> eval_get_word_gray_row_bb2_in

  * Ranking function: N/A

  * Invariants eval_get_word_gray_row_bb2_in -> eval_get_word_gray_row_bb2_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_get_word_gray_row_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_get_word_gray_row_bb3_in(C,D) -> loop_cont_eval_get_word_gray_row_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_get_word_gray_row_bb3_in(A,B) -> loop_cont_eval_get_word_gray_row_bb3_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_get_word_gray_row_bb3_in(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS eval_get_word_gray_row_bb3_in(B) -> eval_get_word_gray_row_bb3_in(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants eval_get_word_gray_row_bb3_in(A) -> eval_get_word_gray_row_bb3_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B]


