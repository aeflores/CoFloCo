This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_debug_dump_stack_bb1_in/2])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_debug_dump_stack_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_debug_dump_stack_bb1_in/2])) 

  * LOOPS eval_debug_dump_stack_start -> eval_debug_dump_stack_start

  * Ranking function: N/A

  * Invariants eval_debug_dump_stack_start -> eval_debug_dump_stack_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_debug_dump_stack_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_debug_dump_stack_bb1_in/2])) 

  * LOOPS eval_debug_dump_stack_bb0_in -> eval_debug_dump_stack_bb0_in

  * Ranking function: N/A

  * Invariants eval_debug_dump_stack_bb0_in -> eval_debug_dump_stack_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_debug_dump_stack_0

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_debug_dump_stack_bb1_in/2])) 

  * LOOPS eval_debug_dump_stack_0 -> eval_debug_dump_stack_0

  * Ranking function: N/A

  * Invariants eval_debug_dump_stack_0 -> eval_debug_dump_stack_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_debug_dump_stack_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_debug_dump_stack_bb1_in/2])) 

  * LOOPS eval_debug_dump_stack_1(B) -> eval_debug_dump_stack_1(C)

  * Ranking function: N/A

  * Invariants eval_debug_dump_stack_1(A) -> eval_debug_dump_stack_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_debug_dump_stack_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_debug_dump_stack_bb1_in(C,D) -> loop_cont_eval_debug_dump_stack_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_debug_dump_stack_bb1_in(A,B) -> loop_cont_eval_debug_dump_stack_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_debug_dump_stack_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_debug_dump_stack_bb1_in/2])) 

  * LOOPS eval_debug_dump_stack_bb1_in(C,D) -> eval_debug_dump_stack_bb1_in(E,F)
     - [D=F+1,C=E,0>=F+2]
     - [D=F+1,C=E,0>=F+2]
     - [D=F+1,C=E,F>=0]
     - [D=F+1,C=E,F>=0]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_debug_dump_stack_bb1_in/2]))

  * Invariants eval_debug_dump_stack_bb1_in(A,B) -> eval_debug_dump_stack_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,B>=D+1]
     inv    : [B>=D,A=C]


