This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D,E,F) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_cmd_put_path_bb1_in/2])) 

  * LOOPS $pubs_aux_entry$(G,H,I,J,K,L) -> $pubs_aux_entry$(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D,E,F) -> $pubs_aux_entry$(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS eval_cmd_put_path_start(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_cmd_put_path_bb1_in/2])) 

  * LOOPS eval_cmd_put_path_start(G,H,I,J,K,L) -> eval_cmd_put_path_start(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants eval_cmd_put_path_start(A,B,C,D,E,F) -> eval_cmd_put_path_start(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS eval_cmd_put_path_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_cmd_put_path_bb1_in/2])) 

  * LOOPS eval_cmd_put_path_bb0_in(B) -> eval_cmd_put_path_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_cmd_put_path_bb0_in(A) -> eval_cmd_put_path_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cmd_put_path_10(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_cmd_put_path_bb1_in/2])) 

  * LOOPS eval_cmd_put_path_10(C,D) -> eval_cmd_put_path_10(E,F)

  * Ranking function: N/A

  * Invariants eval_cmd_put_path_10(A,B) -> eval_cmd_put_path_10(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_cmd_put_path_11(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_cmd_put_path_bb1_in/2])) 

  * LOOPS eval_cmd_put_path_11(C,D) -> eval_cmd_put_path_11(E,F)

  * Ranking function: N/A

  * Invariants eval_cmd_put_path_11(A,B) -> eval_cmd_put_path_11(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_cmd_put_path_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_cmd_put_path_bb1_in(D,E,F) -> loop_cont_eval_cmd_put_path_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_cmd_put_path_bb1_in(A,B,C) -> loop_cont_eval_cmd_put_path_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_cmd_put_path_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cmd_put_path_NewDefault_in -> eval_cmd_put_path_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_cmd_put_path_NewDefault_in -> eval_cmd_put_path_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cmd_put_path_24(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cmd_put_path_24(B) -> eval_cmd_put_path_24(C)

  * Ranking function: N/A

  * Invariants eval_cmd_put_path_24(A) -> eval_cmd_put_path_24(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cmd_put_path_25

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cmd_put_path_25 -> eval_cmd_put_path_25

  * Ranking function: N/A

  * Invariants eval_cmd_put_path_25 -> eval_cmd_put_path_25

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cmd_put_path_bb77_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cmd_put_path_bb77_in -> eval_cmd_put_path_bb77_in

  * Ranking function: N/A

  * Invariants eval_cmd_put_path_bb77_in -> eval_cmd_put_path_bb77_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cmd_put_path_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_cmd_put_path_bb1_in/2])) 

  * LOOPS eval_cmd_put_path_bb1_in(C,D) -> eval_cmd_put_path_bb1_in(E,F)
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]
     - [C=E,D=F]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_cmd_put_path_bb1_in/2]))

  * Invariants eval_cmd_put_path_bb1_in(A,B) -> eval_cmd_put_path_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C]
     inv    : [A=C]


