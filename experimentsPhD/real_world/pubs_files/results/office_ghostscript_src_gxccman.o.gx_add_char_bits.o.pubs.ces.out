This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=14,cr=eval_gx_add_char_bits_bb6_in/2])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_add_char_bits_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=14,cr=eval_gx_add_char_bits_bb6_in/2])) 

  * LOOPS eval_gx_add_char_bits_start -> eval_gx_add_char_bits_start

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_start -> eval_gx_add_char_bits_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_add_char_bits_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=14,cr=eval_gx_add_char_bits_bb6_in/2])) 

  * LOOPS eval_gx_add_char_bits_bb0_in -> eval_gx_add_char_bits_bb0_in

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_bb0_in -> eval_gx_add_char_bits_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_add_char_bits_8(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=14,cr=eval_gx_add_char_bits_bb6_in/2])) 

  * LOOPS eval_gx_add_char_bits_8(D,E,F) -> eval_gx_add_char_bits_8(G,H,I)

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_8(A,B,C) -> eval_gx_add_char_bits_8(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_gx_add_char_bits_9(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=14,cr=eval_gx_add_char_bits_bb6_in/2])) 

  * LOOPS eval_gx_add_char_bits_9(C,D) -> eval_gx_add_char_bits_9(E,F)

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_9(A,B) -> eval_gx_add_char_bits_9(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_gx_add_char_bits_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_gx_add_char_bits_bb6_in(C,D) -> loop_cont_eval_gx_add_char_bits_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gx_add_char_bits_bb6_in(A,B) -> loop_cont_eval_gx_add_char_bits_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_gx_add_char_bits_bb6_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=14,cr=eval_gx_add_char_bits_bb6_in/2])) 

  * LOOPS eval_gx_add_char_bits_bb6_in(C,D) -> eval_gx_add_char_bits_bb6_in(E,F)
     - [D=F+1,C=E,0>=F+2]
     - [D=F+1,C=E,F>=0]

  * Ranking function: c(failed(no_rf,[scc=14,cr=eval_gx_add_char_bits_bb6_in/2]))

  * Invariants eval_gx_add_char_bits_bb6_in(A,B) -> eval_gx_add_char_bits_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,B>=D+1]
     inv    : [B>=D,A=C]

CRS eval_gx_add_char_bits_16(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_16(D,E,F) -> eval_gx_add_char_bits_16(G,H,I)

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_16(A,B,C) -> eval_gx_add_char_bits_16(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_gx_add_char_bits_17(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_17(C,D) -> eval_gx_add_char_bits_17(E,F)

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_17(A,B) -> eval_gx_add_char_bits_17(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_gx_add_char_bits_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_bb3_in(C,D) -> eval_gx_add_char_bits_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_bb3_in(A,B) -> eval_gx_add_char_bits_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_gx_add_char_bits_68(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_68(G,H,I,J,K,L) -> eval_gx_add_char_bits_68(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_68(A,B,C,D,E,F) -> eval_gx_add_char_bits_68(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS eval_gx_add_char_bits_69

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_69 -> eval_gx_add_char_bits_69

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_69 -> eval_gx_add_char_bits_69

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_add_char_bits_127(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_127(B) -> eval_gx_add_char_bits_127(C)

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_127(A) -> eval_gx_add_char_bits_127(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gx_add_char_bits_128

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_128 -> eval_gx_add_char_bits_128

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_128 -> eval_gx_add_char_bits_128

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_add_char_bits_bb10_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_bb10_in -> eval_gx_add_char_bits_bb10_in

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_bb10_in -> eval_gx_add_char_bits_bb10_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_add_char_bits_155(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_155(B) -> eval_gx_add_char_bits_155(C)

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_155(A) -> eval_gx_add_char_bits_155(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gx_add_char_bits_156

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_156 -> eval_gx_add_char_bits_156

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_156 -> eval_gx_add_char_bits_156

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_add_char_bits_bb12_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_bb12_in -> eval_gx_add_char_bits_bb12_in

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_bb12_in -> eval_gx_add_char_bits_bb12_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_add_char_bits_157

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_157 -> eval_gx_add_char_bits_157

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_157 -> eval_gx_add_char_bits_157

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_add_char_bits_158

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_add_char_bits_158 -> eval_gx_add_char_bits_158

  * Ranking function: N/A

  * Invariants eval_gx_add_char_bits_158 -> eval_gx_add_char_bits_158

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


