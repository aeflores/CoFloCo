This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=3,cr=eval_alloc_is_since_save_bb1_in/0]))+c(failed(schemes_failed,[scc=4,cr=eval_alloc_is_since_save_bb10_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_is_since_save_start

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=3,cr=eval_alloc_is_since_save_bb1_in/0]))+c(failed(schemes_failed,[scc=4,cr=eval_alloc_is_since_save_bb10_in/0])) 

  * LOOPS eval_alloc_is_since_save_start -> eval_alloc_is_since_save_start

  * Ranking function: N/A

  * Invariants eval_alloc_is_since_save_start -> eval_alloc_is_since_save_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_is_since_save_bb0_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=3,cr=eval_alloc_is_since_save_bb1_in/0]))+c(failed(schemes_failed,[scc=4,cr=eval_alloc_is_since_save_bb10_in/0])) 

  * LOOPS eval_alloc_is_since_save_bb0_in -> eval_alloc_is_since_save_bb0_in

  * Ranking function: N/A

  * Invariants eval_alloc_is_since_save_bb0_in -> eval_alloc_is_since_save_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_alloc_is_since_save_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_alloc_is_since_save_bb10_in/0])) 

  * LOOPS loop_cont_eval_alloc_is_since_save_bb1_in(C,D) -> loop_cont_eval_alloc_is_since_save_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_alloc_is_since_save_bb1_in(A,B) -> loop_cont_eval_alloc_is_since_save_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_alloc_is_since_save_bb10_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_alloc_is_since_save_bb10_in(C,D) -> loop_cont_eval_alloc_is_since_save_bb10_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_alloc_is_since_save_bb10_in(A,B) -> loop_cont_eval_alloc_is_since_save_bb10_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_is_since_save_bb10_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_alloc_is_since_save_bb10_in/0])) 

  * LOOPS eval_alloc_is_since_save_bb10_in -> eval_alloc_is_since_save_bb10_in
     - []

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_alloc_is_since_save_bb10_in/0]))

  * Invariants eval_alloc_is_since_save_bb10_in -> eval_alloc_is_since_save_bb10_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_alloc_is_since_save_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_alloc_is_since_save_bb1_in/0])) 

  * LOOPS eval_alloc_is_since_save_bb1_in -> eval_alloc_is_since_save_bb1_in
     - []

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_alloc_is_since_save_bb1_in/0]))

  * Invariants eval_alloc_is_since_save_bb1_in -> eval_alloc_is_since_save_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_alloc_is_since_save_bb2_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_alloc_is_since_save_bb2_in/0])) 

  * LOOPS eval_alloc_is_since_save_bb2_in -> eval_alloc_is_since_save_bb2_in
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_alloc_is_since_save_bb2_in/0]))

  * Invariants eval_alloc_is_since_save_bb2_in -> eval_alloc_is_since_save_bb2_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_alloc_is_since_save_bb14_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_is_since_save_bb14_in -> eval_alloc_is_since_save_bb14_in

  * Ranking function: N/A

  * Invariants eval_alloc_is_since_save_bb14_in -> eval_alloc_is_since_save_bb14_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


