This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_addFlagsFromEnvVar_bb2_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_addFlagsFromEnvVar_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_addFlagsFromEnvVar_bb2_in/0])) 

  * LOOPS eval_addFlagsFromEnvVar_start -> eval_addFlagsFromEnvVar_start

  * Ranking function: N/A

  * Invariants eval_addFlagsFromEnvVar_start -> eval_addFlagsFromEnvVar_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_addFlagsFromEnvVar_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_addFlagsFromEnvVar_bb2_in/0])) 

  * LOOPS eval_addFlagsFromEnvVar_bb0_in -> eval_addFlagsFromEnvVar_bb0_in

  * Ranking function: N/A

  * Invariants eval_addFlagsFromEnvVar_bb0_in -> eval_addFlagsFromEnvVar_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_addFlagsFromEnvVar_0

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_addFlagsFromEnvVar_bb2_in/0])) 

  * LOOPS eval_addFlagsFromEnvVar_0 -> eval_addFlagsFromEnvVar_0

  * Ranking function: N/A

  * Invariants eval_addFlagsFromEnvVar_0 -> eval_addFlagsFromEnvVar_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_addFlagsFromEnvVar_1

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_addFlagsFromEnvVar_bb2_in/0])) 

  * LOOPS eval_addFlagsFromEnvVar_1 -> eval_addFlagsFromEnvVar_1

  * Ranking function: N/A

  * Invariants eval_addFlagsFromEnvVar_1 -> eval_addFlagsFromEnvVar_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_addFlagsFromEnvVar_2

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_addFlagsFromEnvVar_bb2_in/0])) 

  * LOOPS eval_addFlagsFromEnvVar_2 -> eval_addFlagsFromEnvVar_2

  * Ranking function: N/A

  * Invariants eval_addFlagsFromEnvVar_2 -> eval_addFlagsFromEnvVar_2

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_addFlagsFromEnvVar_3

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_addFlagsFromEnvVar_bb2_in/0])) 

  * LOOPS eval_addFlagsFromEnvVar_3 -> eval_addFlagsFromEnvVar_3

  * Ranking function: N/A

  * Invariants eval_addFlagsFromEnvVar_3 -> eval_addFlagsFromEnvVar_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_addFlagsFromEnvVar_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_addFlagsFromEnvVar_bb2_in(C,D) -> loop_cont_eval_addFlagsFromEnvVar_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_addFlagsFromEnvVar_bb2_in(A,B) -> loop_cont_eval_addFlagsFromEnvVar_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_addFlagsFromEnvVar_bb14_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_addFlagsFromEnvVar_bb14_in -> eval_addFlagsFromEnvVar_bb14_in

  * Ranking function: N/A

  * Invariants eval_addFlagsFromEnvVar_bb14_in -> eval_addFlagsFromEnvVar_bb14_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_addFlagsFromEnvVar_bb2_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_addFlagsFromEnvVar_bb2_in/0])) 

  * LOOPS eval_addFlagsFromEnvVar_bb2_in -> eval_addFlagsFromEnvVar_bb2_in
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_addFlagsFromEnvVar_bb2_in/0]))

  * Invariants eval_addFlagsFromEnvVar_bb2_in -> eval_addFlagsFromEnvVar_bb2_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_addFlagsFromEnvVar_bb11_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(B-C) 

  * LOOPS eval_addFlagsFromEnvVar_bb11_in(D,E,F) -> eval_addFlagsFromEnvVar_bb11_in(G,H,I)
     - [D=G,E=H,F+1=I,E>=I]

  * Ranking function: nat(E-F)

  * Invariants eval_addFlagsFromEnvVar_bb11_in(A,B,C) -> eval_addFlagsFromEnvVar_bb11_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,B>=F,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]

CRS eval_addFlagsFromEnvVar_bb7_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_addFlagsFromEnvVar_bb7_in/1])) 

  * LOOPS eval_addFlagsFromEnvVar_bb7_in(B) -> eval_addFlagsFromEnvVar_bb7_in(C)
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_addFlagsFromEnvVar_bb7_in/1]))

  * Invariants eval_addFlagsFromEnvVar_bb7_in(A) -> eval_addFlagsFromEnvVar_bb7_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]

CRS eval_addFlagsFromEnvVar_bb4_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_addFlagsFromEnvVar_bb4_in/0])) 

  * LOOPS eval_addFlagsFromEnvVar_bb4_in -> eval_addFlagsFromEnvVar_bb4_in
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_addFlagsFromEnvVar_bb4_in/0]))

  * Invariants eval_addFlagsFromEnvVar_bb4_in -> eval_addFlagsFromEnvVar_bb4_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


