This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_decompress_data_bb1_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_decompress_data_bb4_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decompress_data_start

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_decompress_data_bb1_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_decompress_data_bb4_in/1])) 

  * LOOPS eval_decompress_data_start -> eval_decompress_data_start

  * Ranking function: N/A

  * Invariants eval_decompress_data_start -> eval_decompress_data_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decompress_data_bb0_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_decompress_data_bb1_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_decompress_data_bb4_in/1])) 

  * LOOPS eval_decompress_data_bb0_in -> eval_decompress_data_bb0_in

  * Ranking function: N/A

  * Invariants eval_decompress_data_bb0_in -> eval_decompress_data_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_decompress_data_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_decompress_data_bb4_in/1])) 

  * LOOPS loop_cont_eval_decompress_data_bb1_in(C,D) -> loop_cont_eval_decompress_data_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_decompress_data_bb1_in(A,B) -> loop_cont_eval_decompress_data_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_decompress_data__critedge1_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_decompress_data_bb4_in/1])) 

  * LOOPS eval_decompress_data__critedge1_in -> eval_decompress_data__critedge1_in

  * Ranking function: N/A

  * Invariants eval_decompress_data__critedge1_in -> eval_decompress_data__critedge1_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_decompress_data_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_decompress_data_bb4_in(C,D) -> loop_cont_eval_decompress_data_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_decompress_data_bb4_in(A,B) -> loop_cont_eval_decompress_data_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_decompress_data_bb18_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decompress_data_bb18_in -> eval_decompress_data_bb18_in

  * Ranking function: N/A

  * Invariants eval_decompress_data_bb18_in -> eval_decompress_data_bb18_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decompress_data_bb4_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_decompress_data_bb4_in/1])) 

  * LOOPS eval_decompress_data_bb4_in(B) -> eval_decompress_data_bb4_in(C)
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_decompress_data_bb4_in/1]))

  * Invariants eval_decompress_data_bb4_in(A) -> eval_decompress_data_bb4_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0]
     inv    : [A=0]

CRS eval_decompress_data_bb11_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_decompress_data_bb11_in/3])) 

  * LOOPS eval_decompress_data_bb11_in(D,E,F) -> eval_decompress_data_bb11_in(G,H,I)
     - [E>=F+1]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_decompress_data_bb11_in/3]))

  * Invariants eval_decompress_data_bb11_in(A,B,C) -> eval_decompress_data_bb11_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B>=1,C=0]
     inv    : [C=0]

CRS eval_decompress_data_bb13_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_decompress_data_bb13_in/4])) 

  * LOOPS eval_decompress_data_bb13_in(E,F,G,H) -> eval_decompress_data_bb13_in(I,J,K,L)
     - [G=K,H+1=L,E=I,F=J]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_decompress_data_bb13_in/4]))

  * Invariants eval_decompress_data_bb13_in(A,B,C,D) -> eval_decompress_data_bb13_in(E,F,G,H)

     entry  : [B>=C+1,D=0]
     non-rec: [A=E,B=F,C=G,D=H,B>=C+1,D=0]
     rec    : [C=G,B=F,A=E,D=0,B>=C+1,H>=1]
     inv    : [H>=0,B>=C+1,A=E,B=F,C=G,D=0]

CRS eval_decompress_data_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_decompress_data_bb1_in/0])) 

  * LOOPS eval_decompress_data_bb1_in -> eval_decompress_data_bb1_in
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_decompress_data_bb1_in/0]))

  * Invariants eval_decompress_data_bb1_in -> eval_decompress_data_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


