This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 3 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_reduce_side_start(A)

  * Non Asymptotic Upper Bound: 3 

  * LOOPS eval_reduce_side_start(B) -> eval_reduce_side_start(C)

  * Ranking function: N/A

  * Invariants eval_reduce_side_start(A) -> eval_reduce_side_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_reduce_side_bb0_in(A)

  * Non Asymptotic Upper Bound: 3 

  * LOOPS eval_reduce_side_bb0_in(B) -> eval_reduce_side_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_reduce_side_bb0_in(A) -> eval_reduce_side_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_reduce_side_bb4_in(A)

  * Non Asymptotic Upper Bound: 3 

  * LOOPS eval_reduce_side_bb4_in(B) -> eval_reduce_side_bb4_in(C)

  * Ranking function: N/A

  * Invariants eval_reduce_side_bb4_in(A) -> eval_reduce_side_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_reduce_side_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_reduce_side_bb5_in(C,D) -> loop_cont_eval_reduce_side_bb5_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_reduce_side_bb5_in(A,B) -> loop_cont_eval_reduce_side_bb5_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_reduce_side_bb5_in(A)

  * Non Asymptotic Upper Bound: nat(-A+2) 

  * LOOPS eval_reduce_side_bb5_in(B) -> eval_reduce_side_bb5_in(C)
     - [B+1=C,1>=B]

  * Ranking function: nat(-B+2)

  * Invariants eval_reduce_side_bb5_in(A) -> eval_reduce_side_bb5_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [B>=1,2>=B,A=0]
     inv    : [2>=B,B>=0,A=0]


