This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([3+c(failed(schemes_failed,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])),4+c(failed(schemes_failed,[scc=19,cr=eval_LZWDecodeCompat_bb8_in/2]))+c(failed(schemes_failed,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])),2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=20,cr=eval_LZWDecodeCompat_bb6_in/1]))]) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LZWDecodeCompat_start(A,B)

  * Non Asymptotic Upper Bound: max([3+c(failed(schemes_failed,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])),4+c(failed(schemes_failed,[scc=19,cr=eval_LZWDecodeCompat_bb8_in/2]))+c(failed(schemes_failed,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])),2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=20,cr=eval_LZWDecodeCompat_bb6_in/1]))]) 

  * LOOPS eval_LZWDecodeCompat_start(C,D) -> eval_LZWDecodeCompat_start(E,F)

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_start(A,B) -> eval_LZWDecodeCompat_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LZWDecodeCompat_bb0_in(A)

  * Non Asymptotic Upper Bound: max([3+c(failed(schemes_failed,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])),4+c(failed(schemes_failed,[scc=19,cr=eval_LZWDecodeCompat_bb8_in/2]))+c(failed(schemes_failed,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])),2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=20,cr=eval_LZWDecodeCompat_bb6_in/1]))]) 

  * LOOPS eval_LZWDecodeCompat_bb0_in(B) -> eval_LZWDecodeCompat_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_bb0_in(A) -> eval_LZWDecodeCompat_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_LZWDecodeCompat_bb8_in(A,B,C)

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])) 

  * LOOPS loop_cont_eval_LZWDecodeCompat_bb8_in(D,E,F) -> loop_cont_eval_LZWDecodeCompat_bb8_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_LZWDecodeCompat_bb8_in(A,B,C) -> loop_cont_eval_LZWDecodeCompat_bb8_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_LZWDecodeCompat_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=20,cr=eval_LZWDecodeCompat_bb6_in/1])) 

  * LOOPS loop_cont_eval_LZWDecodeCompat_bb4_in(D,E,F) -> loop_cont_eval_LZWDecodeCompat_bb4_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_LZWDecodeCompat_bb4_in(A,B,C) -> loop_cont_eval_LZWDecodeCompat_bb4_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_LZWDecodeCompat_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_LZWDecodeCompat_bb6_in(C,D) -> loop_cont_eval_LZWDecodeCompat_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_LZWDecodeCompat_bb6_in(A,B) -> loop_cont_eval_LZWDecodeCompat_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LZWDecodeCompat_bb6_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=20,cr=eval_LZWDecodeCompat_bb6_in/1])) 

  * LOOPS eval_LZWDecodeCompat_bb6_in(B) -> eval_LZWDecodeCompat_bb6_in(C)
     - [B=C+1,0>=B]
     - [B=C+1,B>=2]

  * Ranking function: c(failed(no_rf,[scc=20,cr=eval_LZWDecodeCompat_bb6_in/1]))

  * Invariants eval_LZWDecodeCompat_bb6_in(A) -> eval_LZWDecodeCompat_bb6_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=B+1]
     inv    : [A>=B]

CRS eval_LZWDecodeCompat_bb8_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=19,cr=eval_LZWDecodeCompat_bb8_in/2])) 

  * LOOPS eval_LZWDecodeCompat_bb8_in(C,D) -> eval_LZWDecodeCompat_bb8_in(E,F)
     - [D=F+1,C=E,0>=F+1]
     - [D=F+1,C=E,F>=1]

  * Ranking function: c(failed(no_rf,[scc=19,cr=eval_LZWDecodeCompat_bb8_in/2]))

  * Invariants eval_LZWDecodeCompat_bb8_in(A,B) -> eval_LZWDecodeCompat_bb8_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,B>=D+1]
     inv    : [B>=D,A=C]

CRS eval_LZWDecodeCompat_bb4_in(A,B)

  * Non Asymptotic Upper Bound: nat(-A+B-1) 

  * LOOPS eval_LZWDecodeCompat_bb4_in(C,D) -> eval_LZWDecodeCompat_bb4_in(E,F)
     - [D=F+1,C=E,F>=C+1]

  * Ranking function: nat(-C+D-1)

  * Invariants eval_LZWDecodeCompat_bb4_in(A,B) -> eval_LZWDecodeCompat_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,D>=A+1,B>=D+1]
     inv    : [B>=D,A=C]

CRS eval_LZWDecodeCompat_bb10_in(A)

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])) 

  * LOOPS eval_LZWDecodeCompat_bb10_in(B) -> eval_LZWDecodeCompat_bb10_in(C)

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_bb10_in(A) -> eval_LZWDecodeCompat_bb10_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_LZWDecodeCompat_bb11_in(A,B,C)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])) 

  * LOOPS loop_cont_eval_LZWDecodeCompat_bb11_in(D,E,F) -> loop_cont_eval_LZWDecodeCompat_bb11_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_LZWDecodeCompat_bb11_in(A,B,C) -> loop_cont_eval_LZWDecodeCompat_bb11_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_LZWDecodeCompat_bb35_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])) 

  * LOOPS loop_cont_eval_LZWDecodeCompat_bb35_in(D,E,F) -> loop_cont_eval_LZWDecodeCompat_bb35_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_LZWDecodeCompat_bb35_in(A,B,C) -> loop_cont_eval_LZWDecodeCompat_bb35_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_LZWDecodeCompat_bb37_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_LZWDecodeCompat_bb37_in(D,E,F) -> loop_cont_eval_LZWDecodeCompat_bb37_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_LZWDecodeCompat_bb37_in(A,B,C) -> loop_cont_eval_LZWDecodeCompat_bb37_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_LZWDecodeCompat_bb37_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1])) 

  * LOOPS eval_LZWDecodeCompat_bb37_in(B) -> eval_LZWDecodeCompat_bb37_in(C)
     - [B=C+1,0>=B]
     - [B=C+1,B>=2]

  * Ranking function: c(failed(no_rf,[scc=13,cr=eval_LZWDecodeCompat_bb37_in/1]))

  * Invariants eval_LZWDecodeCompat_bb37_in(A) -> eval_LZWDecodeCompat_bb37_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=B+1]
     inv    : [A>=B]

CRS eval_LZWDecodeCompat_bb42_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LZWDecodeCompat_bb42_in(B) -> eval_LZWDecodeCompat_bb42_in(C)

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_bb42_in(A) -> eval_LZWDecodeCompat_bb42_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LZWDecodeCompat_166(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LZWDecodeCompat_166(C,D) -> eval_LZWDecodeCompat_166(E,F)

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_166(A,B) -> eval_LZWDecodeCompat_166(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LZWDecodeCompat_167

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LZWDecodeCompat_167 -> eval_LZWDecodeCompat_167

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_167 -> eval_LZWDecodeCompat_167

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LZWDecodeCompat_bb44_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LZWDecodeCompat_bb44_in -> eval_LZWDecodeCompat_bb44_in

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_bb44_in -> eval_LZWDecodeCompat_bb44_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LZWDecodeCompat_bb41_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LZWDecodeCompat_bb41_in -> eval_LZWDecodeCompat_bb41_in

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_bb41_in -> eval_LZWDecodeCompat_bb41_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LZWDecodeCompat_153

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LZWDecodeCompat_153 -> eval_LZWDecodeCompat_153

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_153 -> eval_LZWDecodeCompat_153

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LZWDecodeCompat_154

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LZWDecodeCompat_154 -> eval_LZWDecodeCompat_154

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_154 -> eval_LZWDecodeCompat_154

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LZWDecodeCompat_bb35_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1])) 

  * LOOPS eval_LZWDecodeCompat_bb35_in(B) -> eval_LZWDecodeCompat_bb35_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=5,cr=eval_LZWDecodeCompat_bb35_in/1]))

  * Invariants eval_LZWDecodeCompat_bb35_in(A) -> eval_LZWDecodeCompat_bb35_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]

CRS eval_LZWDecodeCompat_bb11_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1])) 

  * LOOPS eval_LZWDecodeCompat_bb11_in(B) -> eval_LZWDecodeCompat_bb11_in(C)
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]
     - [B>=1]
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]
     - [B>=1]
     - [B=C+1,C>=0]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_LZWDecodeCompat_bb11_in/1]))

  * Invariants eval_LZWDecodeCompat_bb11_in(A) -> eval_LZWDecodeCompat_bb11_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=1]
     inv    : []

CRS eval_LZWDecodeCompat_bb39_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_LZWDecodeCompat_bb39_in/3])) 

  * LOOPS eval_LZWDecodeCompat_bb39_in(D,E,F) -> eval_LZWDecodeCompat_bb39_in(G,H,I)
     - [F=I,D=G,E=H]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_LZWDecodeCompat_bb39_in/3]))

  * Invariants eval_LZWDecodeCompat_bb39_in(A,B,C) -> eval_LZWDecodeCompat_bb39_in(D,E,F)

     entry  : [A>=1]
     non-rec: [A=D,B=E,C=F,A>=1]
     rec    : [A>=1,B=E,A=D,C=F]
     inv    : [A>=1,A=D,B=E,C=F]

CRS eval_LZWDecodeCompat_168

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LZWDecodeCompat_168 -> eval_LZWDecodeCompat_168

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_168 -> eval_LZWDecodeCompat_168

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LZWDecodeCompat_169

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LZWDecodeCompat_169 -> eval_LZWDecodeCompat_169

  * Ranking function: N/A

  * Invariants eval_LZWDecodeCompat_169 -> eval_LZWDecodeCompat_169

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


