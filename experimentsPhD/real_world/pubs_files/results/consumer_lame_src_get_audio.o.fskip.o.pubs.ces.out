This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_fskip_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_fskip_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_fskip_bb1_in/1])) 

  * LOOPS eval_fskip_start(C,D) -> eval_fskip_start(E,F)

  * Ranking function: N/A

  * Invariants eval_fskip_start(A,B) -> eval_fskip_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_fskip_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_fskip_bb1_in/1])) 

  * LOOPS eval_fskip_bb0_in(B) -> eval_fskip_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_fskip_bb0_in(A) -> eval_fskip_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_fskip_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_fskip_bb1_in(C,D) -> loop_cont_eval_fskip_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_fskip_bb1_in(A,B) -> loop_cont_eval_fskip_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_fskip_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_fskip_bb1_in/1])) 

  * LOOPS eval_fskip_bb1_in(B) -> eval_fskip_bb1_in(C)
     - [B>=1]
     - [B>=1]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_fskip_bb1_in/1]))

  * Invariants eval_fskip_bb1_in(A) -> eval_fskip_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=1]
     inv    : []


