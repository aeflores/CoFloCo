This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_gs_copyscanlines_start(A,B)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_gs_copyscanlines_start(C,D) -> eval_gs_copyscanlines_start(E,F)

  * Ranking function: N/A

  * Invariants eval_gs_copyscanlines_start(A,B) -> eval_gs_copyscanlines_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_gs_copyscanlines_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_gs_copyscanlines_bb0_in(B) -> eval_gs_copyscanlines_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_gs_copyscanlines_bb0_in(A) -> eval_gs_copyscanlines_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gs_copyscanlines_0(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_gs_copyscanlines_0(B) -> eval_gs_copyscanlines_0(C)

  * Ranking function: N/A

  * Invariants eval_gs_copyscanlines_0(A) -> eval_gs_copyscanlines_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gs_copyscanlines_1(A,B)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_gs_copyscanlines_1(C,D) -> eval_gs_copyscanlines_1(E,F)

  * Ranking function: N/A

  * Invariants eval_gs_copyscanlines_1(A,B) -> eval_gs_copyscanlines_1(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_gs_copyscanlines_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_gs_copyscanlines_bb1_in(C,D) -> loop_cont_eval_gs_copyscanlines_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gs_copyscanlines_bb1_in(A,B) -> loop_cont_eval_gs_copyscanlines_bb1_in(C,D)

     entry  : [3>=A,A>=2]
     non-rec: [A=C,B=D,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=C,B=D]

CRS eval_gs_copyscanlines_bb5_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gs_copyscanlines_bb5_in -> eval_gs_copyscanlines_bb5_in

  * Ranking function: N/A

  * Invariants eval_gs_copyscanlines_bb5_in -> eval_gs_copyscanlines_bb5_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gs_copyscanlines_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gs_copyscanlines_bb7_in -> eval_gs_copyscanlines_bb7_in

  * Ranking function: N/A

  * Invariants eval_gs_copyscanlines_bb7_in -> eval_gs_copyscanlines_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gs_copyscanlines_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gs_copyscanlines_bb9_in -> eval_gs_copyscanlines_bb9_in

  * Ranking function: N/A

  * Invariants eval_gs_copyscanlines_bb9_in -> eval_gs_copyscanlines_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gs_copyscanlines_bb1_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_gs_copyscanlines_bb1_in(C,D) -> eval_gs_copyscanlines_bb1_in(E,F)
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_gs_copyscanlines_bb1_in(A,B) -> eval_gs_copyscanlines_bb1_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]


