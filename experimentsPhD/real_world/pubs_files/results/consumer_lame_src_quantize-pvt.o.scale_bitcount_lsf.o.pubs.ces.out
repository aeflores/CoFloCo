This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 5+max([12+c(failed(schemes_failed,[scc=2,cr=eval_scale_bitcount_lsf_bb16_in/1]))+nat(c(maximize_failed)),12+c(failed(schemes_failed,[scc=5,cr=eval_scale_bitcount_lsf_bb5_in/1]))+nat(c(maximize_failed))]) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scale_bitcount_lsf_start

  * Non Asymptotic Upper Bound: 5+max([12+c(failed(schemes_failed,[scc=2,cr=eval_scale_bitcount_lsf_bb16_in/1]))+nat(c(maximize_failed)),12+c(failed(schemes_failed,[scc=5,cr=eval_scale_bitcount_lsf_bb5_in/1]))+nat(c(maximize_failed))]) 

  * LOOPS eval_scale_bitcount_lsf_start -> eval_scale_bitcount_lsf_start

  * Ranking function: N/A

  * Invariants eval_scale_bitcount_lsf_start -> eval_scale_bitcount_lsf_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scale_bitcount_lsf_bb0_in

  * Non Asymptotic Upper Bound: 5+max([12+c(failed(schemes_failed,[scc=2,cr=eval_scale_bitcount_lsf_bb16_in/1]))+nat(c(maximize_failed)),12+c(failed(schemes_failed,[scc=5,cr=eval_scale_bitcount_lsf_bb5_in/1]))+nat(c(maximize_failed))]) 

  * LOOPS eval_scale_bitcount_lsf_bb0_in -> eval_scale_bitcount_lsf_bb0_in

  * Ranking function: N/A

  * Invariants eval_scale_bitcount_lsf_bb0_in -> eval_scale_bitcount_lsf_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_scale_bitcount_lsf_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: max([12+c(failed(schemes_failed,[scc=2,cr=eval_scale_bitcount_lsf_bb16_in/1]))+nat(c(maximize_failed)),12+c(failed(schemes_failed,[scc=5,cr=eval_scale_bitcount_lsf_bb5_in/1]))+nat(c(maximize_failed))]) 

  * LOOPS loop_cont_eval_scale_bitcount_lsf_bb1_in(D,E,F) -> loop_cont_eval_scale_bitcount_lsf_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_scale_bitcount_lsf_bb1_in(A,B,C) -> loop_cont_eval_scale_bitcount_lsf_bb1_in(D,E,F)

     entry  : [4>=A,A>=3,B=0]
     non-rec: [A=D,B=E,C=F,4>=A,A>=3,B=0]
     rec    : [0=1]
     inv    : [A>=3,4>=A,B=0,A=D,E=0,C=F]

CRS loop_cont_eval_scale_bitcount_lsf_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 11+nat(c(maximize_failed)) 

  * LOOPS loop_cont_eval_scale_bitcount_lsf_bb5_in(C,D) -> loop_cont_eval_scale_bitcount_lsf_bb5_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_scale_bitcount_lsf_bb5_in(A,B) -> loop_cont_eval_scale_bitcount_lsf_bb5_in(C,D)

     entry  : [A=5]
     non-rec: [A=C,B=D,A=5]
     rec    : [0=1]
     inv    : [A=5,C=5,B=D]

CRS loop_cont_eval_scale_bitcount_lsf_bb16_in(A,B)

  * Non Asymptotic Upper Bound: 11+nat(c(maximize_failed)) 

  * LOOPS loop_cont_eval_scale_bitcount_lsf_bb16_in(C,D) -> loop_cont_eval_scale_bitcount_lsf_bb16_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_scale_bitcount_lsf_bb16_in(A,B) -> loop_cont_eval_scale_bitcount_lsf_bb16_in(C,D)

     entry  : [A=5]
     non-rec: [A=C,B=D,A=5]
     rec    : [0=1]
     inv    : [A=5,C=5,B=D]

CRS eval_scale_bitcount_lsf_bb23_in

  * Non Asymptotic Upper Bound: 11+nat(c(maximize_failed)) 

  * LOOPS eval_scale_bitcount_lsf_bb23_in -> eval_scale_bitcount_lsf_bb23_in

  * Ranking function: N/A

  * Invariants eval_scale_bitcount_lsf_bb23_in -> eval_scale_bitcount_lsf_bb23_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_scale_bitcount_lsf_bb24_in(A,B,C)

  * Non Asymptotic Upper Bound: 6+nat(-B+4) 

  * LOOPS loop_cont_eval_scale_bitcount_lsf_bb24_in(D,E,F) -> loop_cont_eval_scale_bitcount_lsf_bb24_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_scale_bitcount_lsf_bb24_in(A,B,C) -> loop_cont_eval_scale_bitcount_lsf_bb24_in(D,E,F)

     entry  : [8>=A,A>=6]
     non-rec: [A=D,B=E,C=F,8>=A,A>=6]
     rec    : [0=1]
     inv    : [A>=6,8>=A,A=D,B=E,C=F]

CRS loop_cont_eval_scale_bitcount_lsf_bb28_in(A,B)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS loop_cont_eval_scale_bitcount_lsf_bb28_in(C,D) -> loop_cont_eval_scale_bitcount_lsf_bb28_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_scale_bitcount_lsf_bb28_in(A,B) -> loop_cont_eval_scale_bitcount_lsf_bb28_in(C,D)

     entry  : [A=7]
     non-rec: [A=C,B=D,A=7]
     rec    : [0=1]
     inv    : [A=7,C=7,B=D]

CRS eval_scale_bitcount_lsf_bb33_in

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_scale_bitcount_lsf_bb33_in -> eval_scale_bitcount_lsf_bb33_in

  * Ranking function: N/A

  * Invariants eval_scale_bitcount_lsf_bb33_in -> eval_scale_bitcount_lsf_bb33_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_scale_bitcount_lsf_bb36_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_scale_bitcount_lsf_bb36_in(C,D) -> loop_cont_eval_scale_bitcount_lsf_bb36_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_scale_bitcount_lsf_bb36_in(A,B) -> loop_cont_eval_scale_bitcount_lsf_bb36_in(C,D)

     entry  : [A=6]
     non-rec: [A=C,B=D,A=6]
     rec    : [0=1]
     inv    : [A=6,C=6,B=D]

CRS eval_scale_bitcount_lsf_bb36_in(A)

  * Non Asymptotic Upper Bound: nat(-A+4) 

  * LOOPS eval_scale_bitcount_lsf_bb36_in(B) -> eval_scale_bitcount_lsf_bb36_in(C)
     - [B+1=C,3>=B]

  * Ranking function: nat(-B+4)

  * Invariants eval_scale_bitcount_lsf_bb36_in(A) -> eval_scale_bitcount_lsf_bb36_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]

CRS eval_scale_bitcount_lsf_109

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_scale_bitcount_lsf_109 -> eval_scale_bitcount_lsf_109

  * Ranking function: N/A

  * Invariants eval_scale_bitcount_lsf_109 -> eval_scale_bitcount_lsf_109

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scale_bitcount_lsf_110

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_scale_bitcount_lsf_110 -> eval_scale_bitcount_lsf_110

  * Ranking function: N/A

  * Invariants eval_scale_bitcount_lsf_110 -> eval_scale_bitcount_lsf_110

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scale_bitcount_lsf_bb39_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_scale_bitcount_lsf_bb39_in -> eval_scale_bitcount_lsf_bb39_in

  * Ranking function: N/A

  * Invariants eval_scale_bitcount_lsf_bb39_in -> eval_scale_bitcount_lsf_bb39_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scale_bitcount_lsf_bb28_in(A)

  * Non Asymptotic Upper Bound: nat(-A+4) 

  * LOOPS eval_scale_bitcount_lsf_bb28_in(B) -> eval_scale_bitcount_lsf_bb28_in(C)
     - [B+1=C,3>=B]

  * Ranking function: nat(-B+4)

  * Invariants eval_scale_bitcount_lsf_bb28_in(A) -> eval_scale_bitcount_lsf_bb28_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [4>=B,B>=A+1]
     inv    : [B>=A]

CRS eval_scale_bitcount_lsf_bb24_in(A)

  * Non Asymptotic Upper Bound: nat(-A+4) 

  * LOOPS eval_scale_bitcount_lsf_bb24_in(B) -> eval_scale_bitcount_lsf_bb24_in(C)
     - [B+1=C,3>=B]

  * Ranking function: nat(-B+4)

  * Invariants eval_scale_bitcount_lsf_bb24_in(A) -> eval_scale_bitcount_lsf_bb24_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]

CRS eval_scale_bitcount_lsf_bb5_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_scale_bitcount_lsf_bb5_in/1])) 

  * LOOPS eval_scale_bitcount_lsf_bb5_in(B) -> eval_scale_bitcount_lsf_bb5_in(C)
     - [3>=B,B+1=C]
     - [3>=B,B+1=C]
     - [3>=B,B+1=C]

  * Ranking function: nat(-B+4)

  * Invariants eval_scale_bitcount_lsf_bb5_in(A) -> eval_scale_bitcount_lsf_bb5_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]

CRS eval_scale_bitcount_lsf_bb7_in(A,B,C)

  * Non Asymptotic Upper Bound: 5*nat(B-C) 

  * LOOPS eval_scale_bitcount_lsf_bb7_in(D,E,F) -> eval_scale_bitcount_lsf_bb7_in(G,H,I)
     - [E>=I,D=G,E=H,F+1=I]

  * Ranking function: nat(E-F)

  * Invariants eval_scale_bitcount_lsf_bb7_in(A,B,C) -> eval_scale_bitcount_lsf_bb7_in(D,E,F)

     entry  : [A>=0,3>=A,C=0]
     non-rec: [A=D,B=E,C=F,A>=0,3>=A,C=0]
     rec    : [B=E,A=D,C=0,B>=F,3>=A,A>=0,F>=1]
     inv    : [F>=0,A>=0,3>=A,A=D,B=E,C=0]

CRS eval_scale_bitcount_lsf_bb9_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(-D+3) 

  * LOOPS eval_scale_bitcount_lsf_bb9_in(E,F,G,H) -> eval_scale_bitcount_lsf_bb9_in(I,J,K,L)
     - [H+1=L,E=I,F=J,G=K,2>=H]

  * Ranking function: nat(-H+3)

  * Invariants eval_scale_bitcount_lsf_bb9_in(A,B,C,D) -> eval_scale_bitcount_lsf_bb9_in(E,F,G,H)

     entry  : [B>=C+1,3>=A,C>=0,A>=0,D=0]
     non-rec: [A=E,B=F,C=G,D=H,B>=C+1,3>=A,C>=0,A>=0,D=0]
     rec    : [H>=1,A>=0,3>=H,3>=A,C>=0,B>=C+1,D=0,A=E,B=F,C=G]
     inv    : [3>=H,A>=0,H>=0,3>=A,C>=0,B>=C+1,A=E,B=F,C=G,D=0]

CRS eval_scale_bitcount_lsf_bb16_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_scale_bitcount_lsf_bb16_in/1])) 

  * LOOPS eval_scale_bitcount_lsf_bb16_in(B) -> eval_scale_bitcount_lsf_bb16_in(C)
     - [3>=B,B+1=C]

  * Ranking function: nat(-B+4)

  * Invariants eval_scale_bitcount_lsf_bb16_in(A) -> eval_scale_bitcount_lsf_bb16_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]

CRS eval_scale_bitcount_lsf_bb18_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(B-C) 

  * LOOPS eval_scale_bitcount_lsf_bb18_in(D,E,F) -> eval_scale_bitcount_lsf_bb18_in(G,H,I)
     - [F+1=I,D=G,E=H,E>=F+1]

  * Ranking function: nat(E-F)

  * Invariants eval_scale_bitcount_lsf_bb18_in(A,B,C) -> eval_scale_bitcount_lsf_bb18_in(D,E,F)

     entry  : [3>=A,A>=0,C=0]
     non-rec: [A=D,B=E,C=F,3>=A,A>=0,C=0]
     rec    : [B=E,A=D,C=0,B>=F,3>=A,A>=0,F>=1]
     inv    : [F>=0,A>=0,3>=A,A=D,B=E,C=0]

CRS eval_scale_bitcount_lsf_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(-A+4) 

  * LOOPS eval_scale_bitcount_lsf_bb1_in(B) -> eval_scale_bitcount_lsf_bb1_in(C)
     - [B+1=C,3>=B]

  * Ranking function: nat(-B+4)

  * Invariants eval_scale_bitcount_lsf_bb1_in(A) -> eval_scale_bitcount_lsf_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


