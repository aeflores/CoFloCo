This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_alloc_obj_bb4_in/1])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_obj_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_alloc_obj_bb4_in/1])) 

  * LOOPS eval_alloc_obj_start(C,D) -> eval_alloc_obj_start(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_obj_start(A,B) -> eval_alloc_obj_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_obj_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_alloc_obj_bb4_in/1])) 

  * LOOPS eval_alloc_obj_bb0_in -> eval_alloc_obj_bb0_in

  * Ranking function: N/A

  * Invariants eval_alloc_obj_bb0_in -> eval_alloc_obj_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_alloc_obj_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_alloc_obj_bb4_in(C,D) -> loop_cont_eval_alloc_obj_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_alloc_obj_bb4_in(A,B) -> loop_cont_eval_alloc_obj_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_obj_bb4_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_alloc_obj_bb4_in/1])) 

  * LOOPS eval_alloc_obj_bb4_in(B) -> eval_alloc_obj_bb4_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=5,cr=eval_alloc_obj_bb4_in/1]))

  * Invariants eval_alloc_obj_bb4_in(A) -> eval_alloc_obj_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]

CRS eval_alloc_obj_7(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_obj_7(B) -> eval_alloc_obj_7(C)

  * Ranking function: N/A

  * Invariants eval_alloc_obj_7(A) -> eval_alloc_obj_7(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_obj_8

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_obj_8 -> eval_alloc_obj_8

  * Ranking function: N/A

  * Invariants eval_alloc_obj_8 -> eval_alloc_obj_8

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_obj_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_obj_bb8_in -> eval_alloc_obj_bb8_in

  * Ranking function: N/A

  * Invariants eval_alloc_obj_bb8_in -> eval_alloc_obj_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_obj_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_obj_bb9_in -> eval_alloc_obj_bb9_in

  * Ranking function: N/A

  * Invariants eval_alloc_obj_bb9_in -> eval_alloc_obj_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


