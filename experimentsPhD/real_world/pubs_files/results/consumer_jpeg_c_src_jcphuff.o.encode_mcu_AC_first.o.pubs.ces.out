This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_encode_mcu_AC_first_bb4_in/3])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_AC_first_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_encode_mcu_AC_first_bb4_in/3])) 

  * LOOPS eval_encode_mcu_AC_first_start -> eval_encode_mcu_AC_first_start

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_start -> eval_encode_mcu_AC_first_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_AC_first_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_encode_mcu_AC_first_bb4_in/3])) 

  * LOOPS eval_encode_mcu_AC_first_bb0_in -> eval_encode_mcu_AC_first_bb0_in

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_bb0_in -> eval_encode_mcu_AC_first_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_AC_first_10(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_encode_mcu_AC_first_bb4_in/3])) 

  * LOOPS eval_encode_mcu_AC_first_10(C,D) -> eval_encode_mcu_AC_first_10(E,F)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_10(A,B) -> eval_encode_mcu_AC_first_10(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_first_11(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_encode_mcu_AC_first_bb4_in/3])) 

  * LOOPS eval_encode_mcu_AC_first_11(B) -> eval_encode_mcu_AC_first_11(C)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_11(A) -> eval_encode_mcu_AC_first_11(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_encode_mcu_AC_first_bb3_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_encode_mcu_AC_first_bb4_in/3])) 

  * LOOPS eval_encode_mcu_AC_first_bb3_in(B) -> eval_encode_mcu_AC_first_bb3_in(C)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_bb3_in(A) -> eval_encode_mcu_AC_first_bb3_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_encode_mcu_AC_first_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_encode_mcu_AC_first_bb4_in(C,D) -> loop_cont_eval_encode_mcu_AC_first_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_encode_mcu_AC_first_bb4_in(A,B) -> loop_cont_eval_encode_mcu_AC_first_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_AC_first_55

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_encode_mcu_AC_first_55 -> eval_encode_mcu_AC_first_55

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_55 -> eval_encode_mcu_AC_first_55

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_AC_first_56

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_encode_mcu_AC_first_56 -> eval_encode_mcu_AC_first_56

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_56 -> eval_encode_mcu_AC_first_56

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_AC_first_bb23_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_encode_mcu_AC_first_bb23_in -> eval_encode_mcu_AC_first_bb23_in

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_bb23_in -> eval_encode_mcu_AC_first_bb23_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_AC_first_bb26_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_encode_mcu_AC_first_bb26_in -> eval_encode_mcu_AC_first_bb26_in

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_bb26_in -> eval_encode_mcu_AC_first_bb26_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_AC_first_bb27_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_encode_mcu_AC_first_bb27_in -> eval_encode_mcu_AC_first_bb27_in

  * Ranking function: N/A

  * Invariants eval_encode_mcu_AC_first_bb27_in -> eval_encode_mcu_AC_first_bb27_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_AC_first_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_encode_mcu_AC_first_bb4_in/3])) 

  * LOOPS eval_encode_mcu_AC_first_bb4_in(D,E,F) -> eval_encode_mcu_AC_first_bb4_in(G,H,I)
     - [F+1=I,D=G,E+1=H,D>=E]
     - [F+1=I,D=G,E+1=H,D>=E]
     - [D>=E,I=0]
     - [D>=E,I=0]
     - [F+1=I,D=G,E+1=H,D>=E]
     - [D>=E,I=0]
     - [D>=E,I=0]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_encode_mcu_AC_first_bb4_in/3]))

  * Invariants eval_encode_mcu_AC_first_bb4_in(A,B,C) -> eval_encode_mcu_AC_first_bb4_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [C=0,A>=B,F>=0]
     inv    : [F>=0,C=0]

CRS eval_encode_mcu_AC_first_bb16_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_encode_mcu_AC_first_bb16_in/6])) 

  * LOOPS eval_encode_mcu_AC_first_bb16_in(G,H,I,J,K,L) -> eval_encode_mcu_AC_first_bb16_in(M,N,O,P,Q,R)
     - [L+1=R,G=M,H=N,I=O,J=P,K=Q]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_encode_mcu_AC_first_bb16_in/6]))

  * Invariants eval_encode_mcu_AC_first_bb16_in(A,B,C,D,E,F) -> eval_encode_mcu_AC_first_bb16_in(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [E=K,D=J,C=I,B=H,A=G,L>=F+1]
     inv    : [L>=F,B=H,C=I,D=J,E=K,A=G]

CRS eval_encode_mcu_AC_first_bb14_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: nat(E)/16 

  * LOOPS eval_encode_mcu_AC_first_bb14_in(F,G,H,I,J) -> eval_encode_mcu_AC_first_bb14_in(K,L,M,N,O)
     - [J=O+16,F=K,G=L,H=M,I=N,J>=16]

  * Ranking function: nat(J/16)

  * Invariants eval_encode_mcu_AC_first_bb14_in(A,B,C,D,E) -> eval_encode_mcu_AC_first_bb14_in(F,G,H,I,J)

     entry  : [C>=0,A>=B,C=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,C>=0,A>=B,C=E]
     rec    : [D=I,C=H,B=G,A=F,C=E,A>=B,J>=0,C>=J+16]
     inv    : [A>=B,C>=J,J>=0,A=F,B=G,C=H,D=I,C=E]


