This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_scan_bin_num_array_continue_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scan_bin_num_array_continue_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_scan_bin_num_array_continue_bb1_in/1])) 

  * LOOPS eval_scan_bin_num_array_continue_start -> eval_scan_bin_num_array_continue_start

  * Ranking function: N/A

  * Invariants eval_scan_bin_num_array_continue_start -> eval_scan_bin_num_array_continue_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scan_bin_num_array_continue_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_scan_bin_num_array_continue_bb1_in/1])) 

  * LOOPS eval_scan_bin_num_array_continue_bb0_in -> eval_scan_bin_num_array_continue_bb0_in

  * Ranking function: N/A

  * Invariants eval_scan_bin_num_array_continue_bb0_in -> eval_scan_bin_num_array_continue_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_scan_bin_num_array_continue_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_scan_bin_num_array_continue_bb1_in(C,D) -> loop_cont_eval_scan_bin_num_array_continue_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_scan_bin_num_array_continue_bb1_in(A,B) -> loop_cont_eval_scan_bin_num_array_continue_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_scan_bin_num_array_continue_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_scan_bin_num_array_continue_NewDefault_in -> eval_scan_bin_num_array_continue_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_scan_bin_num_array_continue_NewDefault_in -> eval_scan_bin_num_array_continue_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scan_bin_num_array_continue_29

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_scan_bin_num_array_continue_29 -> eval_scan_bin_num_array_continue_29

  * Ranking function: N/A

  * Invariants eval_scan_bin_num_array_continue_29 -> eval_scan_bin_num_array_continue_29

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scan_bin_num_array_continue_30

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_scan_bin_num_array_continue_30 -> eval_scan_bin_num_array_continue_30

  * Ranking function: N/A

  * Invariants eval_scan_bin_num_array_continue_30 -> eval_scan_bin_num_array_continue_30

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scan_bin_num_array_continue_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_scan_bin_num_array_continue_bb8_in -> eval_scan_bin_num_array_continue_bb8_in

  * Ranking function: N/A

  * Invariants eval_scan_bin_num_array_continue_bb8_in -> eval_scan_bin_num_array_continue_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_scan_bin_num_array_continue_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_scan_bin_num_array_continue_bb1_in/1])) 

  * LOOPS eval_scan_bin_num_array_continue_bb1_in(B) -> eval_scan_bin_num_array_continue_bb1_in(C)
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_scan_bin_num_array_continue_bb1_in/1]))

  * Invariants eval_scan_bin_num_array_continue_bb1_in(A) -> eval_scan_bin_num_array_continue_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=A+1]
     inv    : [B>=A]


