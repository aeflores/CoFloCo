This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_wipeout_bb1_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_wipeout_bb5_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_wipeout_start

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_wipeout_bb1_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_wipeout_bb5_in/1])) 

  * LOOPS eval_wipeout_start -> eval_wipeout_start

  * Ranking function: N/A

  * Invariants eval_wipeout_start -> eval_wipeout_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_wipeout_bb0_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_wipeout_bb1_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_wipeout_bb5_in/1])) 

  * LOOPS eval_wipeout_bb0_in -> eval_wipeout_bb0_in

  * Ranking function: N/A

  * Invariants eval_wipeout_bb0_in -> eval_wipeout_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_wipeout_0

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_wipeout_bb1_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_wipeout_bb5_in/1])) 

  * LOOPS eval_wipeout_0 -> eval_wipeout_0

  * Ranking function: N/A

  * Invariants eval_wipeout_0 -> eval_wipeout_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_wipeout_1

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_wipeout_bb1_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_wipeout_bb5_in/1])) 

  * LOOPS eval_wipeout_1 -> eval_wipeout_1

  * Ranking function: N/A

  * Invariants eval_wipeout_1 -> eval_wipeout_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_wipeout_2(A)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_wipeout_bb1_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_wipeout_bb5_in/1])) 

  * LOOPS eval_wipeout_2(B) -> eval_wipeout_2(C)

  * Ranking function: N/A

  * Invariants eval_wipeout_2(A) -> eval_wipeout_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_wipeout_3(A)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_wipeout_bb1_in/1]))+c(failed(schemes_failed,[scc=5,cr=eval_wipeout_bb5_in/1])) 

  * LOOPS eval_wipeout_3(B) -> eval_wipeout_3(C)

  * Ranking function: N/A

  * Invariants eval_wipeout_3(A) -> eval_wipeout_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_wipeout_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_wipeout_bb5_in/1])) 

  * LOOPS loop_cont_eval_wipeout_bb1_in(D,E,F) -> loop_cont_eval_wipeout_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_wipeout_bb1_in(A,B,C) -> loop_cont_eval_wipeout_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_wipeout_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_wipeout_bb5_in(C,D) -> loop_cont_eval_wipeout_bb5_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_wipeout_bb5_in(A,B) -> loop_cont_eval_wipeout_bb5_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_wipeout_bb5_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_wipeout_bb5_in/1])) 

  * LOOPS eval_wipeout_bb5_in(B) -> eval_wipeout_bb5_in(C)
     - [0>=B+1]
     - [0>=B+1,C=0]
     - [B>=1]
     - [B>=1,C=0]

  * Ranking function: c(failed(no_rf,[scc=5,cr=eval_wipeout_bb5_in/1]))

  * Invariants eval_wipeout_bb5_in(A) -> eval_wipeout_bb5_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []

CRS eval_wipeout_bb8_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_wipeout_bb8_in/1])) 

  * LOOPS eval_wipeout_bb8_in(B) -> eval_wipeout_bb8_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_wipeout_bb8_in/1]))

  * Invariants eval_wipeout_bb8_in(A) -> eval_wipeout_bb8_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]

CRS eval_wipeout_bb7_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_wipeout_bb7_in/1])) 

  * LOOPS eval_wipeout_bb7_in(B) -> eval_wipeout_bb7_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_wipeout_bb7_in/1]))

  * Invariants eval_wipeout_bb7_in(A) -> eval_wipeout_bb7_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]

CRS eval_wipeout_bb6_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_wipeout_bb6_in/1])) 

  * LOOPS eval_wipeout_bb6_in(B) -> eval_wipeout_bb6_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_wipeout_bb6_in/1]))

  * Invariants eval_wipeout_bb6_in(A) -> eval_wipeout_bb6_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]

CRS eval_wipeout_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_wipeout_bb1_in/1])) 

  * LOOPS eval_wipeout_bb1_in(B) -> eval_wipeout_bb1_in(C)
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_wipeout_bb1_in/1]))

  * Invariants eval_wipeout_bb1_in(A) -> eval_wipeout_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []

CRS eval_wipeout_bb2_in(A,B)

  * Non Asymptotic Upper Bound: nat(-B+32) 

  * LOOPS eval_wipeout_bb2_in(C,D) -> eval_wipeout_bb2_in(E,F)
     - [D+1=F,C=E,32>=F]

  * Ranking function: nat(-D+32)

  * Invariants eval_wipeout_bb2_in(A,B) -> eval_wipeout_bb2_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,D>=1]
     inv    : [D>=0,A=C,B=0]


