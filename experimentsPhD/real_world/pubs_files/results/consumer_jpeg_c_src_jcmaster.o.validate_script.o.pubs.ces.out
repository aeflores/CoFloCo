This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]),2+c(failed(schemes_failed,[scc=2,cr=eval_validate_script_bb5_in/1]))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))])]) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_validate_script_start

  * Non Asymptotic Upper Bound: max([2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]),2+c(failed(schemes_failed,[scc=2,cr=eval_validate_script_bb5_in/1]))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))])]) 

  * LOOPS eval_validate_script_start -> eval_validate_script_start

  * Ranking function: N/A

  * Invariants eval_validate_script_start -> eval_validate_script_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_validate_script_bb0_in

  * Non Asymptotic Upper Bound: max([2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]),2+c(failed(schemes_failed,[scc=2,cr=eval_validate_script_bb5_in/1]))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))])]) 

  * LOOPS eval_validate_script_bb0_in -> eval_validate_script_bb0_in

  * Ranking function: N/A

  * Invariants eval_validate_script_bb0_in -> eval_validate_script_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_validate_script_4

  * Non Asymptotic Upper Bound: max([2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]),2+c(failed(schemes_failed,[scc=2,cr=eval_validate_script_bb5_in/1]))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))])]) 

  * LOOPS eval_validate_script_4 -> eval_validate_script_4

  * Ranking function: N/A

  * Invariants eval_validate_script_4 -> eval_validate_script_4

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_validate_script_5

  * Non Asymptotic Upper Bound: max([2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]),2+c(failed(schemes_failed,[scc=2,cr=eval_validate_script_bb5_in/1]))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))])]) 

  * LOOPS eval_validate_script_5 -> eval_validate_script_5

  * Ranking function: N/A

  * Invariants eval_validate_script_5 -> eval_validate_script_5

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_validate_script_bb2_in

  * Non Asymptotic Upper Bound: max([2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]),2+c(failed(schemes_failed,[scc=2,cr=eval_validate_script_bb5_in/1]))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))])]) 

  * LOOPS eval_validate_script_bb2_in -> eval_validate_script_bb2_in

  * Ranking function: N/A

  * Invariants eval_validate_script_bb2_in -> eval_validate_script_bb2_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_validate_script_bb10_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]) 

  * LOOPS loop_cont_eval_validate_script_bb10_in(C,D) -> loop_cont_eval_validate_script_bb10_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_validate_script_bb10_in(A,B) -> loop_cont_eval_validate_script_bb10_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_validate_script_bb4_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_validate_script_bb5_in/1]))+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]) 

  * LOOPS eval_validate_script_bb4_in -> eval_validate_script_bb4_in

  * Ranking function: N/A

  * Invariants eval_validate_script_bb4_in -> eval_validate_script_bb4_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_validate_script_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]) 

  * LOOPS loop_cont_eval_validate_script_bb5_in(C,D) -> loop_cont_eval_validate_script_bb5_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_validate_script_bb5_in(A,B) -> loop_cont_eval_validate_script_bb5_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_validate_script_bb12_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1]))+max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]) 

  * LOOPS eval_validate_script_bb12_in -> eval_validate_script_bb12_in

  * Ranking function: N/A

  * Invariants eval_validate_script_bb12_in -> eval_validate_script_bb12_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_validate_script_bb13_in(A,B,C)

  * Non Asymptotic Upper Bound: max([1+c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])),1+c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1]))]) 

  * LOOPS loop_cont_eval_validate_script_bb13_in(D,E,F) -> loop_cont_eval_validate_script_bb13_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_validate_script_bb13_in(A,B,C) -> loop_cont_eval_validate_script_bb13_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_validate_script_bb59_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_validate_script_bb59_in(C,D) -> loop_cont_eval_validate_script_bb59_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_validate_script_bb59_in(A,B) -> loop_cont_eval_validate_script_bb59_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_validate_script_bb55_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_validate_script_bb55_in(C,D) -> loop_cont_eval_validate_script_bb55_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_validate_script_bb55_in(A,B) -> loop_cont_eval_validate_script_bb55_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_validate_script_bb63_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_validate_script_bb63_in -> eval_validate_script_bb63_in

  * Ranking function: N/A

  * Invariants eval_validate_script_bb63_in -> eval_validate_script_bb63_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_validate_script_bb59_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=9,cr=eval_validate_script_bb59_in/1])) 

  * LOOPS eval_validate_script_bb59_in(B) -> eval_validate_script_bb59_in(C)
     - [B+1=C]
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=9,cr=eval_validate_script_bb59_in/1]))

  * Invariants eval_validate_script_bb59_in(A) -> eval_validate_script_bb59_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=A+1]
     inv    : [B>=A]

CRS eval_validate_script_bb55_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=8,cr=eval_validate_script_bb55_in/1])) 

  * LOOPS eval_validate_script_bb55_in(B) -> eval_validate_script_bb55_in(C)
     - [B+1=C]
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=8,cr=eval_validate_script_bb55_in/1]))

  * Invariants eval_validate_script_bb55_in(A) -> eval_validate_script_bb55_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=A+1]
     inv    : [B>=A]

CRS eval_validate_script_bb13_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=7,cr=eval_validate_script_bb13_in/1])) 

  * LOOPS eval_validate_script_bb13_in(B) -> eval_validate_script_bb13_in(C)
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=7,cr=eval_validate_script_bb13_in/1]))

  * Invariants eval_validate_script_bb13_in(A) -> eval_validate_script_bb13_in(B)

     entry  : [A=1]
     non-rec: [A=B,A=1]
     rec    : [A=1]
     inv    : [A=1]

CRS eval_validate_script_bb34_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=6,cr=eval_validate_script_bb34_in/6])) 

  * LOOPS eval_validate_script_bb34_in(G,H,I,J,K,L) -> eval_validate_script_bb34_in(M,N,O,P,Q,R)
     - [H>=L+1]
     - [H>=L+1]

  * Ranking function: c(failed(no_rf,[scc=6,cr=eval_validate_script_bb34_in/6]))

  * Invariants eval_validate_script_bb34_in(A,B,C,D,E,F) -> eval_validate_script_bb34_in(G,H,I,J,K,L)

     entry  : [F=0]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,F=0]
     rec    : [B>=1,F=0]
     inv    : [F=0]

CRS eval_validate_script_bb38_in(A,B,C,D,E,F,G)

  * Non Asymptotic Upper Bound: 3*nat(E-G+1) 

  * LOOPS eval_validate_script_bb38_in(H,I,J,K,L,M,N) -> eval_validate_script_bb38_in(O,P,Q,R,S,T,U)
     - [N+1=U,H=O,I=P,J=Q,K=R,L=S,M=T,L+1>=U]
     - [N+1=U,H=O,I=P,J=Q,K=R,L=S,M=T,L+1>=U]
     - [N+1=U,H=O,I=P,J=Q,K=R,L=S,M=T,L+1>=U]

  * Ranking function: nat(L-N+1)

  * Invariants eval_validate_script_bb38_in(A,B,C,D,E,F,G) -> eval_validate_script_bb38_in(H,I,J,K,L,M,N)

     entry  : [B>=F+1,D=G]
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N,B>=F+1,D=G]
     rec    : [F=M,E=L,D=K,C=J,B=I,A=H,D=G,B>=F+1,E+1>=N,N>=D+1]
     inv    : [N>=D,B>=F+1,A=H,B=I,C=J,D=K,E=L,F=M,D=G]

CRS eval_validate_script_bb49_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 2*nat(B-F) 

  * LOOPS eval_validate_script_bb49_in(G,H,I,J,K,L) -> eval_validate_script_bb49_in(M,N,O,P,Q,R)
     - [L+1=R,G=M,H=N,I=O,J=P,K=Q,H>=L+1]
     - [L+1=R,G=M,H=N,I=O,J=P,K=Q,H>=L+1]

  * Ranking function: nat(H-L)

  * Invariants eval_validate_script_bb49_in(A,B,C,D,E,F) -> eval_validate_script_bb49_in(G,H,I,J,K,L)

     entry  : [F=0]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,F=0]
     rec    : [E=K,D=J,C=I,B=H,A=G,F=0,B>=L,L>=1]
     inv    : [L>=0,A=G,B=H,C=I,D=J,E=K,F=0]

CRS eval_validate_script_bb17_in(A,B,C)

  * Non Asymptotic Upper Bound: 4*nat(B-C) 

  * LOOPS eval_validate_script_bb17_in(D,E,F) -> eval_validate_script_bb17_in(G,H,I)
     - [F+1=I,D=G,E=H,E>=F+1]
     - [F+1=I,D=G,E=H,E>=F+1]
     - [F+1=I,D=G,E=H,E>=F+1]
     - [F+1=I,D=G,E=H,E>=F+1]

  * Ranking function: nat(E-F)

  * Invariants eval_validate_script_bb17_in(A,B,C) -> eval_validate_script_bb17_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,B>=F,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]

CRS eval_validate_script_bb5_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_validate_script_bb5_in/1])) 

  * LOOPS eval_validate_script_bb5_in(B) -> eval_validate_script_bb5_in(C)
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_validate_script_bb5_in/1]))

  * Invariants eval_validate_script_bb5_in(A) -> eval_validate_script_bb5_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0]
     inv    : [A=0]

CRS eval_validate_script_bb6_in(A,B)

  * Non Asymptotic Upper Bound: nat(-B+64) 

  * LOOPS eval_validate_script_bb6_in(C,D) -> eval_validate_script_bb6_in(E,F)
     - [D+1=F,C=E,64>=F]

  * Ranking function: nat(-D+64)

  * Invariants eval_validate_script_bb6_in(A,B) -> eval_validate_script_bb6_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_validate_script_bb10_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_validate_script_bb10_in(C,D) -> eval_validate_script_bb10_in(E,F)
     - [D+1=F,C=E,C>=F]

  * Ranking function: nat(C-D)

  * Invariants eval_validate_script_bb10_in(A,B) -> eval_validate_script_bb10_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]


