This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_save_set_new_bb1_in/0])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_save_set_new_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_save_set_new_bb1_in/0])) 

  * LOOPS eval_save_set_new_start(B) -> eval_save_set_new_start(C)

  * Ranking function: N/A

  * Invariants eval_save_set_new_start(A) -> eval_save_set_new_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_save_set_new_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_save_set_new_bb1_in/0])) 

  * LOOPS eval_save_set_new_bb0_in(B) -> eval_save_set_new_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_save_set_new_bb0_in(A) -> eval_save_set_new_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_save_set_new_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_save_set_new_bb1_in/0])) 

  * LOOPS eval_save_set_new_0(B) -> eval_save_set_new_0(C)

  * Ranking function: N/A

  * Invariants eval_save_set_new_0(A) -> eval_save_set_new_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_save_set_new_1

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_save_set_new_bb1_in/0])) 

  * LOOPS eval_save_set_new_1 -> eval_save_set_new_1

  * Ranking function: N/A

  * Invariants eval_save_set_new_1 -> eval_save_set_new_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_save_set_new_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_save_set_new_bb1_in(C,D) -> loop_cont_eval_save_set_new_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_save_set_new_bb1_in(A,B) -> loop_cont_eval_save_set_new_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_save_set_new_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_save_set_new_bb1_in/0])) 

  * LOOPS eval_save_set_new_bb1_in -> eval_save_set_new_bb1_in
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_save_set_new_bb1_in/0]))

  * Invariants eval_save_set_new_bb1_in -> eval_save_set_new_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_save_set_new_bb4_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_save_set_new_bb4_in/0])) 

  * LOOPS eval_save_set_new_bb4_in -> eval_save_set_new_bb4_in
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_save_set_new_bb4_in/0]))

  * Invariants eval_save_set_new_bb4_in -> eval_save_set_new_bb4_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_save_set_new_bb7_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_save_set_new_bb7_in/0])) 

  * LOOPS eval_save_set_new_bb7_in -> eval_save_set_new_bb7_in
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_save_set_new_bb7_in/0]))

  * Invariants eval_save_set_new_bb7_in -> eval_save_set_new_bb7_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_save_set_new_bb10_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_save_set_new_bb10_in/0])) 

  * LOOPS eval_save_set_new_bb10_in -> eval_save_set_new_bb10_in
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_save_set_new_bb10_in/0]))

  * Invariants eval_save_set_new_bb10_in -> eval_save_set_new_bb10_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


