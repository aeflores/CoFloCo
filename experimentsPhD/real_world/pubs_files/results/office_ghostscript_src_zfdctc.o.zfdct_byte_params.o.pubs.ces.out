This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([2+nat(A)+nat(B),1+nat(B)]) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_zfdct_byte_params_start(A,B)

  * Non Asymptotic Upper Bound: max([2+nat(A)+nat(B),1+nat(B)]) 

  * LOOPS eval_zfdct_byte_params_start(C,D) -> eval_zfdct_byte_params_start(E,F)

  * Ranking function: N/A

  * Invariants eval_zfdct_byte_params_start(A,B) -> eval_zfdct_byte_params_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_zfdct_byte_params_bb0_in(A,B)

  * Non Asymptotic Upper Bound: max([2+nat(A)+nat(B),1+nat(B)]) 

  * LOOPS eval_zfdct_byte_params_bb0_in(C,D) -> eval_zfdct_byte_params_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_zfdct_byte_params_bb0_in(A,B) -> eval_zfdct_byte_params_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_zfdct_byte_params_bb5_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+nat(B) 

  * LOOPS loop_cont_eval_zfdct_byte_params_bb5_in(D,E,F) -> loop_cont_eval_zfdct_byte_params_bb5_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_zfdct_byte_params_bb5_in(A,B,C) -> loop_cont_eval_zfdct_byte_params_bb5_in(D,E,F)

     entry  : [A=4]
     non-rec: [A=D,B=E,C=F,A=4]
     rec    : [0=1]
     inv    : [A=4,D=4,B=E,C=F]

CRS loop_cont_eval_zfdct_byte_params_bb19_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_zfdct_byte_params_bb19_in(C,D) -> loop_cont_eval_zfdct_byte_params_bb19_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_zfdct_byte_params_bb19_in(A,B) -> loop_cont_eval_zfdct_byte_params_bb19_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_zfdct_byte_params_bb7_in(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_zfdct_byte_params_bb7_in(B) -> eval_zfdct_byte_params_bb7_in(C)

  * Ranking function: N/A

  * Invariants eval_zfdct_byte_params_bb7_in(A) -> eval_zfdct_byte_params_bb7_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_zfdct_byte_params_bb8_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_zfdct_byte_params_bb8_in(C,D) -> loop_cont_eval_zfdct_byte_params_bb8_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_zfdct_byte_params_bb8_in(A,B) -> loop_cont_eval_zfdct_byte_params_bb8_in(C,D)

     entry  : [3>=A,A>=2]
     non-rec: [A=C,B=D,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=C,B=D]

CRS eval_zfdct_byte_params_NewDefault7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zfdct_byte_params_NewDefault7_in -> eval_zfdct_byte_params_NewDefault7_in

  * Ranking function: N/A

  * Invariants eval_zfdct_byte_params_NewDefault7_in -> eval_zfdct_byte_params_NewDefault7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zfdct_byte_params_bb8_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_zfdct_byte_params_bb8_in(C,D) -> eval_zfdct_byte_params_bb8_in(E,F)
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_zfdct_byte_params_bb8_in(A,B) -> eval_zfdct_byte_params_bb8_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_zfdct_byte_params_bb5_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(A-C) 

  * LOOPS eval_zfdct_byte_params_bb5_in(D,E,F) -> eval_zfdct_byte_params_bb5_in(G,H,I)
     - [F+1=I,E=H,D=G,D>=I]

  * Ranking function: nat(D-F)

  * Invariants eval_zfdct_byte_params_bb5_in(A,B,C) -> eval_zfdct_byte_params_bb5_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,A>=F,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]

CRS eval_zfdct_byte_params_bb19_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_zfdct_byte_params_bb19_in(C,D) -> eval_zfdct_byte_params_bb19_in(E,F)
     - [D+1=F,C=E,C>=F]

  * Ranking function: nat(C-D)

  * Invariants eval_zfdct_byte_params_bb19_in(A,B) -> eval_zfdct_byte_params_bb19_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_zfdct_byte_params_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zfdct_byte_params_NewDefault_in -> eval_zfdct_byte_params_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_zfdct_byte_params_NewDefault_in -> eval_zfdct_byte_params_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zfdct_byte_params_bb21_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zfdct_byte_params_bb21_in -> eval_zfdct_byte_params_bb21_in

  * Ranking function: N/A

  * Invariants eval_zfdct_byte_params_bb21_in -> eval_zfdct_byte_params_bb21_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


