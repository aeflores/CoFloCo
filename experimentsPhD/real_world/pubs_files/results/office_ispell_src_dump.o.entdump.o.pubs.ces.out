This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_entdump_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_entdump_bb1_in/1])) 

  * LOOPS eval_entdump_start -> eval_entdump_start

  * Ranking function: N/A

  * Invariants eval_entdump_start -> eval_entdump_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_entdump_bb1_in/1])) 

  * LOOPS eval_entdump_bb0_in -> eval_entdump_bb0_in

  * Ranking function: N/A

  * Invariants eval_entdump_bb0_in -> eval_entdump_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_6(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_entdump_bb1_in/1])) 

  * LOOPS eval_entdump_6(B) -> eval_entdump_6(C)

  * Ranking function: N/A

  * Invariants eval_entdump_6(A) -> eval_entdump_6(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_entdump_7

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_entdump_bb1_in/1])) 

  * LOOPS eval_entdump_7 -> eval_entdump_7

  * Ranking function: N/A

  * Invariants eval_entdump_7 -> eval_entdump_7

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_entdump_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_entdump_bb1_in(C,D) -> loop_cont_eval_entdump_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_entdump_bb1_in(A,B) -> loop_cont_eval_entdump_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_entdump_21

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_21 -> eval_entdump_21

  * Ranking function: N/A

  * Invariants eval_entdump_21 -> eval_entdump_21

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_22

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_22 -> eval_entdump_22

  * Ranking function: N/A

  * Invariants eval_entdump_22 -> eval_entdump_22

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_bb7_in -> eval_entdump_bb7_in

  * Ranking function: N/A

  * Invariants eval_entdump_bb7_in -> eval_entdump_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_23

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_23 -> eval_entdump_23

  * Ranking function: N/A

  * Invariants eval_entdump_23 -> eval_entdump_23

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_24

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_24 -> eval_entdump_24

  * Ranking function: N/A

  * Invariants eval_entdump_24 -> eval_entdump_24

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_25

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_25 -> eval_entdump_25

  * Ranking function: N/A

  * Invariants eval_entdump_25 -> eval_entdump_25

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_27

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_27 -> eval_entdump_27

  * Ranking function: N/A

  * Invariants eval_entdump_27 -> eval_entdump_27

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_28

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_28 -> eval_entdump_28

  * Ranking function: N/A

  * Invariants eval_entdump_28 -> eval_entdump_28

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_29

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_29 -> eval_entdump_29

  * Ranking function: N/A

  * Invariants eval_entdump_29 -> eval_entdump_29

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_bb9_in -> eval_entdump_bb9_in

  * Ranking function: N/A

  * Invariants eval_entdump_bb9_in -> eval_entdump_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_33

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_33 -> eval_entdump_33

  * Ranking function: N/A

  * Invariants eval_entdump_33 -> eval_entdump_33

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_34

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_34 -> eval_entdump_34

  * Ranking function: N/A

  * Invariants eval_entdump_34 -> eval_entdump_34

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_bb11_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_bb11_in -> eval_entdump_bb11_in

  * Ranking function: N/A

  * Invariants eval_entdump_bb11_in -> eval_entdump_bb11_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_35

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_35 -> eval_entdump_35

  * Ranking function: N/A

  * Invariants eval_entdump_35 -> eval_entdump_35

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_36

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_entdump_36 -> eval_entdump_36

  * Ranking function: N/A

  * Invariants eval_entdump_36 -> eval_entdump_36

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_entdump_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_entdump_bb1_in/1])) 

  * LOOPS eval_entdump_bb1_in(B) -> eval_entdump_bb1_in(C)
     - [B+1=C]
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_entdump_bb1_in/1]))

  * Invariants eval_entdump_bb1_in(A) -> eval_entdump_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


