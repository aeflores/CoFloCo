This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+1581/47+c(failed(schemes_failed,[scc=4,cr=eval_find_scalefac_bb10_in/2])) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_find_scalefac_start(A,B,C)

  * Non Asymptotic Upper Bound: 2+1581/47+c(failed(schemes_failed,[scc=4,cr=eval_find_scalefac_bb10_in/2])) 

  * LOOPS eval_find_scalefac_start(D,E,F) -> eval_find_scalefac_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_find_scalefac_start(A,B,C) -> eval_find_scalefac_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_find_scalefac_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 2+1581/47+c(failed(schemes_failed,[scc=4,cr=eval_find_scalefac_bb10_in/2])) 

  * LOOPS eval_find_scalefac_bb0_in(C,D) -> eval_find_scalefac_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_find_scalefac_bb0_in(A,B) -> eval_find_scalefac_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_find_scalefac_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_find_scalefac_bb10_in/2])) 

  * LOOPS loop_cont_eval_find_scalefac_bb1_in(E,F,G,H) -> loop_cont_eval_find_scalefac_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_find_scalefac_bb1_in(A,B,C,D) -> loop_cont_eval_find_scalefac_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_find_scalefac_bb10_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_find_scalefac_bb10_in(C,D) -> loop_cont_eval_find_scalefac_bb10_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_find_scalefac_bb10_in(A,B) -> loop_cont_eval_find_scalefac_bb10_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_find_scalefac_bb15_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_find_scalefac_bb15_in -> eval_find_scalefac_bb15_in

  * Ranking function: N/A

  * Invariants eval_find_scalefac_bb15_in -> eval_find_scalefac_bb15_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_find_scalefac_bb10_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_find_scalefac_bb10_in/2])) 

  * LOOPS eval_find_scalefac_bb10_in(C,D) -> eval_find_scalefac_bb10_in(E,F)
     - [C=E,D=F]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_find_scalefac_bb10_in/2]))

  * Invariants eval_find_scalefac_bb10_in(A,B) -> eval_find_scalefac_bb10_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,B=D]
     inv    : [A=C,B=D]

CRS eval_find_scalefac_27

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_find_scalefac_27 -> eval_find_scalefac_27

  * Ranking function: N/A

  * Invariants eval_find_scalefac_27 -> eval_find_scalefac_27

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_find_scalefac_28

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_find_scalefac_28 -> eval_find_scalefac_28

  * Ranking function: N/A

  * Invariants eval_find_scalefac_28 -> eval_find_scalefac_28

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_find_scalefac_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 2*nat(-D+7)+nat(8*C-137*D+1745)/141 

  * LOOPS eval_find_scalefac_bb1_in(E,F,G,H) -> eval_find_scalefac_bb1_in(I,J,K,L)
     - [H+1=L,F=J,K=0,G=0,E=I,6>=H]
     - [H+1=L,F=J,E=I,2*K+1>=G,G>=1,G>=2*K,6>=H]
     - [H+1=L,F=J,E=I,7>=L,2*K>=G,G+1>=2*K,0>=G+1]

  * Ranking function: nat(-H+7)

  * Invariants eval_find_scalefac_bb1_in(A,B,C,D) -> eval_find_scalefac_bb1_in(E,F,G,H)

     entry  : [C=128,D=0]
     non-rec: [A=E,B=F,C=G,D=H,C=128,D=0]
     rec    : [B=F,A=E,D=0,C=128,8*G+129*H>=508,H>=1,4*G+129*H>=383]
     inv    : [8*G+129*H>=508,4*G+129*H>=383,2*G+129*H>=256,H>=0,A=E,B=F,D=0,C=128]


