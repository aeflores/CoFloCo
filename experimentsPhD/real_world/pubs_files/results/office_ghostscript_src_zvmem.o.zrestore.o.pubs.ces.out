This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_start -> eval_zrestore_start

  * Ranking function: N/A

  * Invariants eval_zrestore_start -> eval_zrestore_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_bb0_in -> eval_zrestore_bb0_in

  * Ranking function: N/A

  * Invariants eval_zrestore_bb0_in -> eval_zrestore_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_0

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_0 -> eval_zrestore_0

  * Ranking function: N/A

  * Invariants eval_zrestore_0 -> eval_zrestore_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_1

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_1 -> eval_zrestore_1

  * Ranking function: N/A

  * Invariants eval_zrestore_1 -> eval_zrestore_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_3

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_3 -> eval_zrestore_3

  * Ranking function: N/A

  * Invariants eval_zrestore_3 -> eval_zrestore_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_4

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_4 -> eval_zrestore_4

  * Ranking function: N/A

  * Invariants eval_zrestore_4 -> eval_zrestore_4

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_5

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_5 -> eval_zrestore_5

  * Ranking function: N/A

  * Invariants eval_zrestore_5 -> eval_zrestore_5

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_6

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_6 -> eval_zrestore_6

  * Ranking function: N/A

  * Invariants eval_zrestore_6 -> eval_zrestore_6

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_7

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_7 -> eval_zrestore_7

  * Ranking function: N/A

  * Invariants eval_zrestore_7 -> eval_zrestore_7

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_8

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_8 -> eval_zrestore_8

  * Ranking function: N/A

  * Invariants eval_zrestore_8 -> eval_zrestore_8

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_bb4_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zrestore_bb4_in -> eval_zrestore_bb4_in

  * Ranking function: N/A

  * Invariants eval_zrestore_bb4_in -> eval_zrestore_bb4_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_11

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_11 -> eval_zrestore_11

  * Ranking function: N/A

  * Invariants eval_zrestore_11 -> eval_zrestore_11

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_12

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_12 -> eval_zrestore_12

  * Ranking function: N/A

  * Invariants eval_zrestore_12 -> eval_zrestore_12

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_13

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_13 -> eval_zrestore_13

  * Ranking function: N/A

  * Invariants eval_zrestore_13 -> eval_zrestore_13

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_14

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_14 -> eval_zrestore_14

  * Ranking function: N/A

  * Invariants eval_zrestore_14 -> eval_zrestore_14

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_zrestore_bb6_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_zrestore_bb6_in(D,E,F) -> loop_cont_eval_zrestore_bb6_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_zrestore_bb6_in(A,B,C) -> loop_cont_eval_zrestore_bb6_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_zrestore_26(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zrestore_26(B) -> eval_zrestore_26(C)

  * Ranking function: N/A

  * Invariants eval_zrestore_26(A) -> eval_zrestore_26(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_zrestore_27(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zrestore_27(B) -> eval_zrestore_27(C)

  * Ranking function: N/A

  * Invariants eval_zrestore_27(A) -> eval_zrestore_27(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_zrestore_28(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zrestore_28(B) -> eval_zrestore_28(C)

  * Ranking function: N/A

  * Invariants eval_zrestore_28(A) -> eval_zrestore_28(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_zrestore_29

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zrestore_29 -> eval_zrestore_29

  * Ranking function: N/A

  * Invariants eval_zrestore_29 -> eval_zrestore_29

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_30

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zrestore_30 -> eval_zrestore_30

  * Ranking function: N/A

  * Invariants eval_zrestore_30 -> eval_zrestore_30

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zrestore_bb8_in -> eval_zrestore_bb8_in

  * Ranking function: N/A

  * Invariants eval_zrestore_bb8_in -> eval_zrestore_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zrestore_bb6_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_zrestore_bb6_in/0])) 

  * LOOPS eval_zrestore_bb6_in -> eval_zrestore_bb6_in
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_zrestore_bb6_in/0]))

  * Invariants eval_zrestore_bb6_in -> eval_zrestore_bb6_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


