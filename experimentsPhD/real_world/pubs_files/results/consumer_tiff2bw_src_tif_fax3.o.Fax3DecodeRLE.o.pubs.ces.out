This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=4,cr=eval_Fax3DecodeRLE_bb1_in/2]))+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Fax3DecodeRLE_start(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=4,cr=eval_Fax3DecodeRLE_bb1_in/2]))+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_start(C,D) -> eval_Fax3DecodeRLE_start(E,F)

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_start(A,B) -> eval_Fax3DecodeRLE_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Fax3DecodeRLE_bb0_in(A)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=4,cr=eval_Fax3DecodeRLE_bb1_in/2]))+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_bb0_in(B) -> eval_Fax3DecodeRLE_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_bb0_in(A) -> eval_Fax3DecodeRLE_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_Fax3DecodeRLE_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS loop_cont_eval_Fax3DecodeRLE_bb1_in(E,F,G,H) -> loop_cont_eval_Fax3DecodeRLE_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_Fax3DecodeRLE_bb1_in(A,B,C,D) -> loop_cont_eval_Fax3DecodeRLE_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_Fax3DecodeRLE_bb14_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_bb14_in(C,D) -> eval_Fax3DecodeRLE_bb14_in(E,F)

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_bb14_in(A,B) -> eval_Fax3DecodeRLE_bb14_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Fax3DecodeRLE_43(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_43(C,D) -> eval_Fax3DecodeRLE_43(E,F)

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_43(A,B) -> eval_Fax3DecodeRLE_43(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Fax3DecodeRLE_44(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_44(C,D) -> eval_Fax3DecodeRLE_44(E,F)

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_44(A,B) -> eval_Fax3DecodeRLE_44(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Fax3DecodeRLE_bb16_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_bb16_in(C,D) -> eval_Fax3DecodeRLE_bb16_in(E,F)

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_bb16_in(A,B) -> eval_Fax3DecodeRLE_bb16_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Fax3DecodeRLE_49(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_49(C,D) -> eval_Fax3DecodeRLE_49(E,F)

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_49(A,B) -> eval_Fax3DecodeRLE_49(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Fax3DecodeRLE_50(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_50(C,D) -> eval_Fax3DecodeRLE_50(E,F)

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_50(A,B) -> eval_Fax3DecodeRLE_50(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_Fax3DecodeRLE_bb18_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_Fax3DecodeRLE_bb18_in(C,D) -> loop_cont_eval_Fax3DecodeRLE_bb18_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_Fax3DecodeRLE_bb18_in(A,B) -> loop_cont_eval_Fax3DecodeRLE_bb18_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_Fax3DecodeRLE_bb23_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_Fax3DecodeRLE_bb23_in -> eval_Fax3DecodeRLE_bb23_in

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_bb23_in -> eval_Fax3DecodeRLE_bb23_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_Fax3DecodeRLE_bb26_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_Fax3DecodeRLE_bb26_in -> eval_Fax3DecodeRLE_bb26_in

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_bb26_in -> eval_Fax3DecodeRLE_bb26_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_Fax3DecodeRLE_74

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_Fax3DecodeRLE_74 -> eval_Fax3DecodeRLE_74

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_74 -> eval_Fax3DecodeRLE_74

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_Fax3DecodeRLE_75

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_Fax3DecodeRLE_75 -> eval_Fax3DecodeRLE_75

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_75 -> eval_Fax3DecodeRLE_75

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_Fax3DecodeRLE_bb56_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_Fax3DecodeRLE_bb56_in -> eval_Fax3DecodeRLE_bb56_in

  * Ranking function: N/A

  * Invariants eval_Fax3DecodeRLE_bb56_in -> eval_Fax3DecodeRLE_bb56_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_Fax3DecodeRLE_bb18_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_bb18_in(C,D) -> eval_Fax3DecodeRLE_bb18_in(E,F)
     - [C=E,D>=C+1]

  * Ranking function: c(failed(no_rf,[scc=5,cr=eval_Fax3DecodeRLE_bb18_in/2]))

  * Invariants eval_Fax3DecodeRLE_bb18_in(A,B) -> eval_Fax3DecodeRLE_bb18_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [B>=A+1,A=C]
     inv    : [A=C]

CRS eval_Fax3DecodeRLE_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_Fax3DecodeRLE_bb1_in/2])) 

  * LOOPS eval_Fax3DecodeRLE_bb1_in(C,D) -> eval_Fax3DecodeRLE_bb1_in(E,F)
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]
     - [D>=1]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_Fax3DecodeRLE_bb1_in/2]))

  * Invariants eval_Fax3DecodeRLE_bb1_in(A,B) -> eval_Fax3DecodeRLE_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [B>=1]
     inv    : []

CRS eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,F,G)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_Fax3DecodeRLE_bb40_in/7])) 

  * LOOPS eval_Fax3DecodeRLE_bb40_in(H,I,J,K,L,M,N) -> eval_Fax3DecodeRLE_bb40_in(O,P,Q,R,S,T,U)
     - [H=O,I=P,J=Q,K=R,L=S,M=T,N>=H+1]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_Fax3DecodeRLE_bb40_in/7]))

  * Invariants eval_Fax3DecodeRLE_bb40_in(A,B,C,D,E,F,G) -> eval_Fax3DecodeRLE_bb40_in(H,I,J,K,L,M,N)

     entry  : [E=G,E=F]
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N,E=G,E=F]
     rec    : [L>=A+1,G=L,F=L,E=L,L=M,B=I,D=K,C=J,A=H]
     inv    : [E=G,A=H,B=I,C=J,D=K,E=L,E=M,E=F]

CRS eval_Fax3DecodeRLE_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_Fax3DecodeRLE_bb2_in/3])) 

  * LOOPS eval_Fax3DecodeRLE_bb2_in(D,E,F) -> eval_Fax3DecodeRLE_bb2_in(G,H,I)
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_Fax3DecodeRLE_bb2_in/3]))

  * Invariants eval_Fax3DecodeRLE_bb2_in(A,B,C) -> eval_Fax3DecodeRLE_bb2_in(D,E,F)

     entry  : [B>=1,C=0]
     non-rec: [A=D,B=E,C=F,B>=1,C=0]
     rec    : [B>=1,C=0]
     inv    : [B>=1,C=0]

CRS eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_Fax3DecodeRLE_bb11_in/5])) 

  * LOOPS eval_Fax3DecodeRLE_bb11_in(F,G,H,I,J) -> eval_Fax3DecodeRLE_bb11_in(K,L,M,N,O)
     - [G=L,H=M,I=N,F=K]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_Fax3DecodeRLE_bb11_in/5]))

  * Invariants eval_Fax3DecodeRLE_bb11_in(A,B,C,D,E) -> eval_Fax3DecodeRLE_bb11_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [B=G,A=F,D=I,C=H]
     inv    : [B=G,C=H,D=I,A=F]

CRS eval_Fax3DecodeRLE_bb3_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_Fax3DecodeRLE_bb3_in/4])) 

  * LOOPS eval_Fax3DecodeRLE_bb3_in(E,F,G,H) -> eval_Fax3DecodeRLE_bb3_in(I,J,K,L)
     - [E=I,F=J,G=K]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_Fax3DecodeRLE_bb3_in/4]))

  * Invariants eval_Fax3DecodeRLE_bb3_in(A,B,C,D) -> eval_Fax3DecodeRLE_bb3_in(E,F,G,H)

     entry  : [C=D]
     non-rec: [A=E,B=F,C=G,D=H,C=D]
     rec    : [C=G,B=F,A=E,C=D]
     inv    : [A=E,B=F,C=G,C=D]


