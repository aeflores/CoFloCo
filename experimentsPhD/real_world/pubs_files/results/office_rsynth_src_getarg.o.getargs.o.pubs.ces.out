This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_getargs_bb1_in/3])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_getargs_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_getargs_bb1_in/3])) 

  * LOOPS eval_getargs_start(C,D) -> eval_getargs_start(E,F)

  * Ranking function: N/A

  * Invariants eval_getargs_start(A,B) -> eval_getargs_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_getargs_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_getargs_bb1_in/3])) 

  * LOOPS eval_getargs_bb0_in(C,D) -> eval_getargs_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_getargs_bb0_in(A,B) -> eval_getargs_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_getargs_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_getargs_bb1_in(D,E,F) -> loop_cont_eval_getargs_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_getargs_bb1_in(A,B,C) -> loop_cont_eval_getargs_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_getargs_145(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getargs_145(B) -> eval_getargs_145(C)

  * Ranking function: N/A

  * Invariants eval_getargs_145(A) -> eval_getargs_145(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_getargs_146

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getargs_146 -> eval_getargs_146

  * Ranking function: N/A

  * Invariants eval_getargs_146 -> eval_getargs_146

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_getargs_bb69_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getargs_bb69_in -> eval_getargs_bb69_in

  * Ranking function: N/A

  * Invariants eval_getargs_bb69_in -> eval_getargs_bb69_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_getargs_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_getargs_bb1_in/3])) 

  * LOOPS eval_getargs_bb1_in(D,E,F) -> eval_getargs_bb1_in(G,H,I)
     - [F>=E+1]
     - [F>=E+1]
     - [F>=E+1]
     - [F>=E+1]
     - [F=I,D=G,E+1=H,F>=E+1]
     - [F=I,D=G,E+1=H,F>=E+1]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_getargs_bb1_in/3]))

  * Invariants eval_getargs_bb1_in(A,B,C) -> eval_getargs_bb1_in(D,E,F)

     entry  : [B=0]
     non-rec: [A=D,B=E,C=F,B=0]
     rec    : [C>=1,B=0]
     inv    : [B=0]

CRS eval_getargs_bb63_in(A,B,C,D,E,F,G,H)

  * Non Asymptotic Upper Bound: nat(C-F-H+1) 

  * LOOPS eval_getargs_bb63_in(I,J,K,L,M,N,O,P) -> eval_getargs_bb63_in(Q,R,S,T,U,V,W,X)
     - [O=W,P+1=X,J=R,K=S,L=T,M=U,N=V,O>=P]

  * Ranking function: nat(O-P+1)

  * Invariants eval_getargs_bb63_in(A,B,C,D,E,F,G,H) -> eval_getargs_bb63_in(I,J,K,L,M,N,O,P)

     entry  : [B=H,C=F+G]
     non-rec: [A=I,B=J,C=K,D=L,E=M,F=N,G=O,H=P,B=H,C=F+G]
     rec    : [C=F+O,F=N,E=M,D=L,C=K,B=J,B=H,C=F+G,C+1>=F+P,P>=B+1]
     inv    : [P>=B,C=F+G,B=J,C=K,D=L,E=M,F=N,C=F+O,B=H]

CRS eval_getargs_bb4_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_getargs_bb4_in/5])) 

  * LOOPS eval_getargs_bb4_in(F,G,H,I,J) -> eval_getargs_bb4_in(K,L,M,N,O)
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_getargs_bb4_in/5]))

  * Invariants eval_getargs_bb4_in(A,B,C,D,E) -> eval_getargs_bb4_in(F,G,H,I,J)

     entry  : [C>=B+1,E=1]
     non-rec: [A=F,B=G,C=H,D=I,E=J,C>=B+1,E=1]
     rec    : [C>=B+1,E=1]
     inv    : [C>=B+1,E=1]

CRS eval_getargs_bb6_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_getargs_bb6_in/5])) 

  * LOOPS eval_getargs_bb6_in(F,G,H,I,J) -> eval_getargs_bb6_in(K,L,M,N,O)
     - [I=N,J=O,F=K,G=L,H=M]
     - [I=N,J=O,F=K,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]
     - [I=N,J=O,K=1,G=L,H=M]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_getargs_bb6_in/5]))

  * Invariants eval_getargs_bb6_in(A,B,C,D,E) -> eval_getargs_bb6_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [B=G,C=H,D=I,E=J]
     inv    : [B=G,C=H,D=I,E=J]


