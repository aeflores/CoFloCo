This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_pre_process_data_bb1_in/2]))+c(failed(schemes_failed,[scc=4,cr=eval_pre_process_data_bb13_in/2])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_pre_process_data_start(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_pre_process_data_bb1_in/2]))+c(failed(schemes_failed,[scc=4,cr=eval_pre_process_data_bb13_in/2])) 

  * LOOPS eval_pre_process_data_start(C,D) -> eval_pre_process_data_start(E,F)

  * Ranking function: N/A

  * Invariants eval_pre_process_data_start(A,B) -> eval_pre_process_data_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_pre_process_data_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=1,cr=eval_pre_process_data_bb1_in/2]))+c(failed(schemes_failed,[scc=4,cr=eval_pre_process_data_bb13_in/2])) 

  * LOOPS eval_pre_process_data_bb0_in(C,D) -> eval_pre_process_data_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_pre_process_data_bb0_in(A,B) -> eval_pre_process_data_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_pre_process_data_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_pre_process_data_bb13_in/2])) 

  * LOOPS loop_cont_eval_pre_process_data_bb1_in(E,F,G,H) -> loop_cont_eval_pre_process_data_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_pre_process_data_bb1_in(A,B,C,D) -> loop_cont_eval_pre_process_data_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_pre_process_data_bb13_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_pre_process_data_bb13_in(C,D) -> loop_cont_eval_pre_process_data_bb13_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_pre_process_data_bb13_in(A,B) -> loop_cont_eval_pre_process_data_bb13_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_pre_process_data_bb13_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_pre_process_data_bb13_in/2])) 

  * LOOPS eval_pre_process_data_bb13_in(C,D) -> eval_pre_process_data_bb13_in(E,F)
     - [C=E,D+1=F]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_pre_process_data_bb13_in/2]))

  * Invariants eval_pre_process_data_bb13_in(A,B) -> eval_pre_process_data_bb13_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,D>=B+1]
     inv    : [D>=B,A=C]

CRS eval_pre_process_data__critedge_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_pre_process_data__critedge_in -> eval_pre_process_data__critedge_in

  * Ranking function: N/A

  * Invariants eval_pre_process_data__critedge_in -> eval_pre_process_data__critedge_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_pre_process_data_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_pre_process_data_bb1_in/2])) 

  * LOOPS eval_pre_process_data_bb1_in(C,D) -> eval_pre_process_data_bb1_in(E,F)
     - []
     - []
     - [C=E,D=F]
     - [C=E,D=F]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_pre_process_data_bb1_in/2]))

  * Invariants eval_pre_process_data_bb1_in(A,B) -> eval_pre_process_data_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : []
     inv    : []

CRS eval_pre_process_data_bb5_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_pre_process_data_bb5_in/3])) 

  * LOOPS eval_pre_process_data_bb5_in(D,E,F) -> eval_pre_process_data_bb5_in(G,H,I)
     - [E=H,F+1=I,D=G]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_pre_process_data_bb5_in/3]))

  * Invariants eval_pre_process_data_bb5_in(A,B,C) -> eval_pre_process_data_bb5_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]


