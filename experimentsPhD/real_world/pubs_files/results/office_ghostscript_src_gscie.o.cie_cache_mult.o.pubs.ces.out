This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 513 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_cache_mult_start

  * Non Asymptotic Upper Bound: 513 

  * LOOPS eval_cie_cache_mult_start -> eval_cie_cache_mult_start

  * Ranking function: N/A

  * Invariants eval_cie_cache_mult_start -> eval_cie_cache_mult_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_cache_mult_bb0_in

  * Non Asymptotic Upper Bound: 513 

  * LOOPS eval_cie_cache_mult_bb0_in -> eval_cie_cache_mult_bb0_in

  * Ranking function: N/A

  * Invariants eval_cie_cache_mult_bb0_in -> eval_cie_cache_mult_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_cie_cache_mult_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_cie_cache_mult_bb1_in(C,D) -> loop_cont_eval_cie_cache_mult_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_cie_cache_mult_bb1_in(A,B) -> loop_cont_eval_cie_cache_mult_bb1_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_cie_cache_mult_16

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cie_cache_mult_16 -> eval_cie_cache_mult_16

  * Ranking function: N/A

  * Invariants eval_cie_cache_mult_16 -> eval_cie_cache_mult_16

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_cache_mult_17

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cie_cache_mult_17 -> eval_cie_cache_mult_17

  * Ranking function: N/A

  * Invariants eval_cie_cache_mult_17 -> eval_cie_cache_mult_17

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cie_cache_mult_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS eval_cie_cache_mult_bb1_in(B) -> eval_cie_cache_mult_bb1_in(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants eval_cie_cache_mult_bb1_in(A) -> eval_cie_cache_mult_bb1_in(B)

     entry  : [A=512]
     non-rec: [A=B,A=512]
     rec    : [A=512,511>=B]
     inv    : [512>=B,A=512]


