This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 145 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_quantize_xrpow_start

  * Non Asymptotic Upper Bound: 145 

  * LOOPS eval_quantize_xrpow_start -> eval_quantize_xrpow_start

  * Ranking function: N/A

  * Invariants eval_quantize_xrpow_start -> eval_quantize_xrpow_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_quantize_xrpow_bb0_in

  * Non Asymptotic Upper Bound: 145 

  * LOOPS eval_quantize_xrpow_bb0_in -> eval_quantize_xrpow_bb0_in

  * Ranking function: N/A

  * Invariants eval_quantize_xrpow_bb0_in -> eval_quantize_xrpow_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_quantize_xrpow_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_quantize_xrpow_bb1_in(C,D) -> loop_cont_eval_quantize_xrpow_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_quantize_xrpow_bb1_in(A,B) -> loop_cont_eval_quantize_xrpow_bb1_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_quantize_xrpow_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS eval_quantize_xrpow_bb1_in(B) -> eval_quantize_xrpow_bb1_in(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants eval_quantize_xrpow_bb1_in(A) -> eval_quantize_xrpow_bb1_in(B)

     entry  : [A=144]
     non-rec: [A=B,A=144]
     rec    : [A=144,143>=B]
     inv    : [144>=B,A=144]


