This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_array_get_bb4_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_array_get_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_array_get_bb4_in/1])) 

  * LOOPS eval_array_get_start(B) -> eval_array_get_start(C)

  * Ranking function: N/A

  * Invariants eval_array_get_start(A) -> eval_array_get_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_array_get_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_array_get_bb4_in/1])) 

  * LOOPS eval_array_get_bb0_in(B) -> eval_array_get_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_array_get_bb0_in(A) -> eval_array_get_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_array_get_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_array_get_bb4_in(C,D) -> loop_cont_eval_array_get_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_array_get_bb4_in(A,B) -> loop_cont_eval_array_get_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_array_get_17

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_array_get_17 -> eval_array_get_17

  * Ranking function: N/A

  * Invariants eval_array_get_17 -> eval_array_get_17

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_array_get_18

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_array_get_18 -> eval_array_get_18

  * Ranking function: N/A

  * Invariants eval_array_get_18 -> eval_array_get_18

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_array_get_bb4_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=7,cr=eval_array_get_bb4_in/1])) 

  * LOOPS eval_array_get_bb4_in(B) -> eval_array_get_bb4_in(C)
     - [B=C+1,0>=C+2]
     - [B=C+1,C>=0]

  * Ranking function: c(failed(no_rf,[scc=7,cr=eval_array_get_bb4_in/1]))

  * Invariants eval_array_get_bb4_in(A) -> eval_array_get_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=B+1]
     inv    : [A>=B]

CRS eval_array_get_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_array_get_NewDefault_in -> eval_array_get_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_array_get_NewDefault_in -> eval_array_get_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_array_get_8

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_array_get_8 -> eval_array_get_8

  * Ranking function: N/A

  * Invariants eval_array_get_8 -> eval_array_get_8

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_array_get_9

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_array_get_9 -> eval_array_get_9

  * Ranking function: N/A

  * Invariants eval_array_get_9 -> eval_array_get_9

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_array_get_21

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_array_get_21 -> eval_array_get_21

  * Ranking function: N/A

  * Invariants eval_array_get_21 -> eval_array_get_21

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_array_get_22

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_array_get_22 -> eval_array_get_22

  * Ranking function: N/A

  * Invariants eval_array_get_22 -> eval_array_get_22

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_array_get_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_array_get_bb8_in -> eval_array_get_bb8_in

  * Ranking function: N/A

  * Invariants eval_array_get_bb8_in -> eval_array_get_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


