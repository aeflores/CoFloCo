This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=0,cr=eval_getaString_bb1_in/4]))+c(failed(schemes_failed,[scc=3,cr=eval_getaString_bb8_in/5]))+nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_getaString_start(A,B,C)

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=0,cr=eval_getaString_bb1_in/4]))+c(failed(schemes_failed,[scc=3,cr=eval_getaString_bb8_in/5]))+nat(c(maximize_failed)) 

  * LOOPS eval_getaString_start(D,E,F) -> eval_getaString_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_getaString_start(A,B,C) -> eval_getaString_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_getaString_bb0_in(A,B,C)

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=0,cr=eval_getaString_bb1_in/4]))+c(failed(schemes_failed,[scc=3,cr=eval_getaString_bb8_in/5]))+nat(c(maximize_failed)) 

  * LOOPS eval_getaString_bb0_in(D,E,F) -> eval_getaString_bb0_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_getaString_bb0_in(A,B,C) -> eval_getaString_bb0_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_getaString_bb1_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=3,cr=eval_getaString_bb8_in/5]))+nat(c(maximize_failed)) 

  * LOOPS loop_cont_eval_getaString_bb1_in(G,H,I,J,K,L) -> loop_cont_eval_getaString_bb1_in(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants loop_cont_eval_getaString_bb1_in(A,B,C,D,E,F) -> loop_cont_eval_getaString_bb1_in(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS eval_getaString__critedge_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=3,cr=eval_getaString_bb8_in/5]))+nat(c(maximize_failed)) 

  * LOOPS eval_getaString__critedge_in(E,F,G,H) -> eval_getaString__critedge_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_getaString__critedge_in(A,B,C,D) -> eval_getaString__critedge_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_getaString_bb5_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=3,cr=eval_getaString_bb8_in/5]))+nat(c(maximize_failed)) 

  * LOOPS eval_getaString_bb5_in(E,F,G,H) -> eval_getaString_bb5_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_getaString_bb5_in(A,B,C,D) -> eval_getaString_bb5_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_getaString_bb7_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=3,cr=eval_getaString_bb8_in/5]))+nat(c(maximize_failed)) 

  * LOOPS eval_getaString_bb7_in(E,F,G,H) -> eval_getaString_bb7_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_getaString_bb7_in(A,B,C,D) -> eval_getaString_bb7_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_getaString_bb8_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 1+nat(E) 

  * LOOPS loop_cont_eval_getaString_bb8_in(G,H,I,J,K,L) -> loop_cont_eval_getaString_bb8_in(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants loop_cont_eval_getaString_bb8_in(A,B,C,D,E,F) -> loop_cont_eval_getaString_bb8_in(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS eval_getaString__critedge2_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+nat(D) 

  * LOOPS eval_getaString__critedge2_in(E,F,G,H) -> eval_getaString__critedge2_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_getaString__critedge2_in(A,B,C,D) -> eval_getaString__critedge2_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_getaString_bb11_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_getaString_bb11_in(F,G,H,I,J) -> loop_cont_eval_getaString_bb11_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_getaString_bb11_in(A,B,C,D,E) -> loop_cont_eval_getaString_bb11_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_getaString_bb11_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(D) 

  * LOOPS eval_getaString_bb11_in(E,F,G,H) -> eval_getaString_bb11_in(I,J,K,L)
     - [E=I,F=J,G=K,H=L+1,L>=0]

  * Ranking function: nat(H)

  * Invariants eval_getaString_bb11_in(A,B,C,D) -> eval_getaString_bb11_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [C=G,B=F,A=E,H>=0,D>=H+1]
     inv    : [D>=H,B=F,C=G,A=E]

CRS eval_getaString__critedge4_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getaString__critedge4_in(D,E,F) -> eval_getaString__critedge4_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_getaString__critedge4_in(A,B,C) -> eval_getaString__critedge4_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_getaString_56(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getaString_56(D,E,F) -> eval_getaString_56(G,H,I)

  * Ranking function: N/A

  * Invariants eval_getaString_56(A,B,C) -> eval_getaString_56(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_getaString_57(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getaString_57(B) -> eval_getaString_57(C)

  * Ranking function: N/A

  * Invariants eval_getaString_57(A) -> eval_getaString_57(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_getaString_54(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getaString_54(E,F,G,H) -> eval_getaString_54(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_getaString_54(A,B,C,D) -> eval_getaString_54(E,F,G,H)

     entry  : [A=D]
     non-rec: [A=E,B=F,C=G,D=H,A=D]
     rec    : [0=1]
     inv    : [A=D,A=E,B=F,C=G,A=H]

CRS eval_getaString_55(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getaString_55(B) -> eval_getaString_55(C)

  * Ranking function: N/A

  * Invariants eval_getaString_55(A) -> eval_getaString_55(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_getaString_bb17_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getaString_bb17_in(B) -> eval_getaString_bb17_in(C)

  * Ranking function: N/A

  * Invariants eval_getaString_bb17_in(A) -> eval_getaString_bb17_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_getaString_bb8_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_getaString_bb8_in/5])) 

  * LOOPS eval_getaString_bb8_in(F,G,H,I,J) -> eval_getaString_bb8_in(K,L,M,N,O)
     - [J+1=O,F=K,G=L,H=M,0>=I+1]
     - [J+1=O,F=K,G=L,H=M,I>=1,33>=I]
     - [J+1=O,F=K,G=L,H=M,I>=35]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_getaString_bb8_in/5]))

  * Invariants eval_getaString_bb8_in(A,B,C,D,E) -> eval_getaString_bb8_in(F,G,H,I,J)

     entry  : [E=0]
     non-rec: [A=F,B=G,C=H,D=I,E=J,E=0]
     rec    : [C=H,B=G,A=F,E=0,J>=1]
     inv    : [J>=0,B=G,C=H,E=0,A=F]

CRS eval_getaString_bb18_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getaString_bb18_in -> eval_getaString_bb18_in

  * Ranking function: N/A

  * Invariants eval_getaString_bb18_in -> eval_getaString_bb18_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_getaString_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_getaString_bb1_in/4])) 

  * LOOPS eval_getaString_bb1_in(E,F,G,H) -> eval_getaString_bb1_in(I,J,K,L)
     - [G=K,E=I,F=J,0>=H+1]
     - [G=K,E=I,F=J,H>=1]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_getaString_bb1_in/4]))

  * Invariants eval_getaString_bb1_in(A,B,C,D) -> eval_getaString_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [A=E,B=F,C=G]
     inv    : [B=F,C=G,A=E]


