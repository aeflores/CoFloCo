This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D,E,F,G,H,I,J) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 31 

  * LOOPS $pubs_aux_entry$(K,L,M,N,O,P,Q,R,S,T) -> $pubs_aux_entry$(U,V,W,X,Y,Z,A1,B1,C1,D1)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D,E,F,G,H,I,J) -> $pubs_aux_entry$(K,L,M,N,O,P,Q,R,S,T)

     entry  : []
     non-rec: [A=K,B=L,C=M,D=N,E=O,F=P,G=Q,H=R,I=S,J=T]
     rec    : [0=1]
     inv    : [A=K,B=L,C=M,D=N,E=O,F=P,G=Q,H=R,I=S,J=T]

CRS eval_ct_tally_start(A,B,C,D,E,F,G,H,I,J)

  * Non Asymptotic Upper Bound: 31 

  * LOOPS eval_ct_tally_start(K,L,M,N,O,P,Q,R,S,T) -> eval_ct_tally_start(U,V,W,X,Y,Z,A1,B1,C1,D1)

  * Ranking function: N/A

  * Invariants eval_ct_tally_start(A,B,C,D,E,F,G,H,I,J) -> eval_ct_tally_start(K,L,M,N,O,P,Q,R,S,T)

     entry  : []
     non-rec: [A=K,B=L,C=M,D=N,E=O,F=P,G=Q,H=R,I=S,J=T]
     rec    : [0=1]
     inv    : [A=K,B=L,C=M,D=N,E=O,F=P,G=Q,H=R,I=S,J=T]

CRS eval_ct_tally_bb0_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 31 

  * LOOPS eval_ct_tally_bb0_in(F,G,H,I,J) -> eval_ct_tally_bb0_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_ct_tally_bb0_in(A,B,C,D,E) -> eval_ct_tally_bb0_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_ct_tally_bb5_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 31 

  * LOOPS eval_ct_tally_bb5_in(F,G,H,I,J) -> eval_ct_tally_bb5_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_ct_tally_bb5_in(A,B,C,D,E) -> eval_ct_tally_bb5_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_ct_tally_bb6_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 31 

  * LOOPS eval_ct_tally_bb6_in(E,F,G,H) -> eval_ct_tally_bb6_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_ct_tally_bb6_in(A,B,C,D) -> eval_ct_tally_bb6_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_ct_tally_bb8_in(A,B,C)

  * Non Asymptotic Upper Bound: 31 

  * LOOPS eval_ct_tally_bb8_in(D,E,F) -> eval_ct_tally_bb8_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_ct_tally_bb8_in(A,B,C) -> eval_ct_tally_bb8_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_ct_tally_bb11_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_ct_tally_bb11_in(C,D) -> loop_cont_eval_ct_tally_bb11_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_ct_tally_bb11_in(A,B) -> loop_cont_eval_ct_tally_bb11_in(C,D)

     entry  : [3>=A,A>=2]
     non-rec: [A=C,B=D,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=C,B=D]

CRS eval_ct_tally_bb14_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ct_tally_bb14_in -> eval_ct_tally_bb14_in

  * Ranking function: N/A

  * Invariants eval_ct_tally_bb14_in -> eval_ct_tally_bb14_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ct_tally_bb16_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ct_tally_bb16_in -> eval_ct_tally_bb16_in

  * Ranking function: N/A

  * Invariants eval_ct_tally_bb16_in -> eval_ct_tally_bb16_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ct_tally_bb17_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ct_tally_bb17_in -> eval_ct_tally_bb17_in

  * Ranking function: N/A

  * Invariants eval_ct_tally_bb17_in -> eval_ct_tally_bb17_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ct_tally_bb11_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(-C+30) 

  * LOOPS eval_ct_tally_bb11_in(D,E,F) -> eval_ct_tally_bb11_in(G,H,I)
     - [F+1=I,E=H,D=G,30>=I]

  * Ranking function: nat(-F+30)

  * Invariants eval_ct_tally_bb11_in(A,B,C) -> eval_ct_tally_bb11_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]


