This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_LogLuvEncode24_bb7_in/1])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LogLuvEncode24_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_LogLuvEncode24_bb7_in/1])) 

  * LOOPS eval_LogLuvEncode24_start(C,D) -> eval_LogLuvEncode24_start(E,F)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_start(A,B) -> eval_LogLuvEncode24_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LogLuvEncode24_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_LogLuvEncode24_bb7_in/1])) 

  * LOOPS eval_LogLuvEncode24_bb0_in(B) -> eval_LogLuvEncode24_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_bb0_in(A) -> eval_LogLuvEncode24_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LogLuvEncode24_9(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_LogLuvEncode24_bb7_in/1])) 

  * LOOPS eval_LogLuvEncode24_9(B) -> eval_LogLuvEncode24_9(C)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_9(A) -> eval_LogLuvEncode24_9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LogLuvEncode24_10(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_LogLuvEncode24_bb7_in/1])) 

  * LOOPS eval_LogLuvEncode24_10(B) -> eval_LogLuvEncode24_10(C)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_10(A) -> eval_LogLuvEncode24_10(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_LogLuvEncode24_bb6_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_LogLuvEncode24_bb7_in/1])) 

  * LOOPS eval_LogLuvEncode24_bb6_in(B) -> eval_LogLuvEncode24_bb6_in(C)

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_bb6_in(A) -> eval_LogLuvEncode24_bb6_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_LogLuvEncode24_bb7_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_LogLuvEncode24_bb7_in(C,D) -> loop_cont_eval_LogLuvEncode24_bb7_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_LogLuvEncode24_bb7_in(A,B) -> loop_cont_eval_LogLuvEncode24_bb7_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_LogLuvEncode24_bb13_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode24_bb13_in -> eval_LogLuvEncode24_bb13_in

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_bb13_in -> eval_LogLuvEncode24_bb13_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode24_bb7_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=7,cr=eval_LogLuvEncode24_bb7_in/1])) 

  * LOOPS eval_LogLuvEncode24_bb7_in(B) -> eval_LogLuvEncode24_bb7_in(C)
     - [B=C+1,0>=C+2]
     - [B=C+1,C>=0]
     - [B=C+1,0>=C+2]
     - [B=C+1,C>=0]

  * Ranking function: c(failed(no_rf,[scc=7,cr=eval_LogLuvEncode24_bb7_in/1]))

  * Invariants eval_LogLuvEncode24_bb7_in(A) -> eval_LogLuvEncode24_bb7_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=B+1]
     inv    : [A>=B]

CRS eval_LogLuvEncode24_51

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode24_51 -> eval_LogLuvEncode24_51

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_51 -> eval_LogLuvEncode24_51

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode24_52

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode24_52 -> eval_LogLuvEncode24_52

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_52 -> eval_LogLuvEncode24_52

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode24_49

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode24_49 -> eval_LogLuvEncode24_49

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_49 -> eval_LogLuvEncode24_49

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode24_50

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode24_50 -> eval_LogLuvEncode24_50

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_50 -> eval_LogLuvEncode24_50

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode24_47

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode24_47 -> eval_LogLuvEncode24_47

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_47 -> eval_LogLuvEncode24_47

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_LogLuvEncode24_48

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_LogLuvEncode24_48 -> eval_LogLuvEncode24_48

  * Ranking function: N/A

  * Invariants eval_LogLuvEncode24_48 -> eval_LogLuvEncode24_48

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


