This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_readPhantomInput_bb4_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_readPhantomInput_bb4_in/1])) 

  * LOOPS eval_readPhantomInput_start(B) -> eval_readPhantomInput_start(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_start(A) -> eval_readPhantomInput_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_readPhantomInput_bb4_in/1])) 

  * LOOPS eval_readPhantomInput_bb0_in(B) -> eval_readPhantomInput_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_bb0_in(A) -> eval_readPhantomInput_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_readPhantomInput_bb4_in/1])) 

  * LOOPS eval_readPhantomInput_2(B) -> eval_readPhantomInput_2(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_2(A) -> eval_readPhantomInput_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_readPhantomInput_bb4_in/1])) 

  * LOOPS eval_readPhantomInput_3(B) -> eval_readPhantomInput_3(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_3(A) -> eval_readPhantomInput_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_bb2_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_readPhantomInput_bb4_in/1])) 

  * LOOPS eval_readPhantomInput_bb2_in(B) -> eval_readPhantomInput_bb2_in(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_bb2_in(A) -> eval_readPhantomInput_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_readPhantomInput_bb4_in/1])) 

  * LOOPS eval_readPhantomInput_4(B) -> eval_readPhantomInput_4(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_4(A) -> eval_readPhantomInput_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_5(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_readPhantomInput_bb4_in/1])) 

  * LOOPS eval_readPhantomInput_5(B) -> eval_readPhantomInput_5(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_5(A) -> eval_readPhantomInput_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_readPhantomInput_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_readPhantomInput_bb4_in(D,E,F) -> loop_cont_eval_readPhantomInput_bb4_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_readPhantomInput_bb4_in(A,B,C) -> loop_cont_eval_readPhantomInput_bb4_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_readPhantomInput_bb6_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_readPhantomInput_bb6_in(B) -> eval_readPhantomInput_bb6_in(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_bb6_in(A) -> eval_readPhantomInput_bb6_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_13(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_readPhantomInput_13(B) -> eval_readPhantomInput_13(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_13(A) -> eval_readPhantomInput_13(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_14(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_readPhantomInput_14(B) -> eval_readPhantomInput_14(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_14(A) -> eval_readPhantomInput_14(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_15(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_readPhantomInput_15(B) -> eval_readPhantomInput_15(C)

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_15(A) -> eval_readPhantomInput_15(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_readPhantomInput_16

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_readPhantomInput_16 -> eval_readPhantomInput_16

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_16 -> eval_readPhantomInput_16

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_readPhantomInput_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_readPhantomInput_bb7_in -> eval_readPhantomInput_bb7_in

  * Ranking function: N/A

  * Invariants eval_readPhantomInput_bb7_in -> eval_readPhantomInput_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_readPhantomInput_bb4_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_readPhantomInput_bb4_in/1])) 

  * LOOPS eval_readPhantomInput_bb4_in(B) -> eval_readPhantomInput_bb4_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_readPhantomInput_bb4_in/1]))

  * Invariants eval_readPhantomInput_bb4_in(A) -> eval_readPhantomInput_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]


