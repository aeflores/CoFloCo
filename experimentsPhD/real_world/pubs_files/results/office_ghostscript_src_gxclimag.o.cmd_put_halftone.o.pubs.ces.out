This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cmd_put_halftone_start(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_cmd_put_halftone_start(B) -> eval_cmd_put_halftone_start(C)

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_start(A) -> eval_cmd_put_halftone_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cmd_put_halftone_bb0_in

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_cmd_put_halftone_bb0_in -> eval_cmd_put_halftone_bb0_in

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_bb0_in -> eval_cmd_put_halftone_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cmd_put_halftone_bb2_in(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_cmd_put_halftone_bb2_in(B) -> eval_cmd_put_halftone_bb2_in(C)

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_bb2_in(A) -> eval_cmd_put_halftone_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cmd_put_halftone_4(A,B)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_cmd_put_halftone_4(C,D) -> eval_cmd_put_halftone_4(E,F)

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_4(A,B) -> eval_cmd_put_halftone_4(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_cmd_put_halftone_5(A,B,C)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_cmd_put_halftone_5(D,E,F) -> eval_cmd_put_halftone_5(G,H,I)

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_5(A,B,C) -> eval_cmd_put_halftone_5(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_cmd_put_halftone_6(A,B,C)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_cmd_put_halftone_6(D,E,F) -> eval_cmd_put_halftone_6(G,H,I)

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_6(A,B,C) -> eval_cmd_put_halftone_6(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_cmd_put_halftone_7(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_cmd_put_halftone_7(B) -> eval_cmd_put_halftone_7(C)

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_7(A) -> eval_cmd_put_halftone_7(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cmd_put_halftone_14(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_cmd_put_halftone_14(B) -> eval_cmd_put_halftone_14(C)

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_14(A) -> eval_cmd_put_halftone_14(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cmd_put_halftone_15(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_cmd_put_halftone_15(B) -> eval_cmd_put_halftone_15(C)

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_15(A) -> eval_cmd_put_halftone_15(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_cmd_put_halftone_bb7_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_cmd_put_halftone_bb7_in(C,D) -> loop_cont_eval_cmd_put_halftone_bb7_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_cmd_put_halftone_bb7_in(A,B) -> loop_cont_eval_cmd_put_halftone_bb7_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_cmd_put_halftone_bb7_in(A)

  * Non Asymptotic Upper Bound: nat(A) 

  * LOOPS eval_cmd_put_halftone_bb7_in(B) -> eval_cmd_put_halftone_bb7_in(C)
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants eval_cmd_put_halftone_bb7_in(A) -> eval_cmd_put_halftone_bb7_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B]

CRS eval_cmd_put_halftone_16

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cmd_put_halftone_16 -> eval_cmd_put_halftone_16

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_16 -> eval_cmd_put_halftone_16

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cmd_put_halftone_17

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cmd_put_halftone_17 -> eval_cmd_put_halftone_17

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_17 -> eval_cmd_put_halftone_17

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cmd_put_halftone_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cmd_put_halftone_bb9_in -> eval_cmd_put_halftone_bb9_in

  * Ranking function: N/A

  * Invariants eval_cmd_put_halftone_bb9_in -> eval_cmd_put_halftone_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


