This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_gc_unmark_names_bb1_in/1]))+c(failed(schemes_failed,[scc=1,cr=eval_gc_unmark_names_bb3_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_unmark_names_start

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_gc_unmark_names_bb1_in/1]))+c(failed(schemes_failed,[scc=1,cr=eval_gc_unmark_names_bb3_in/1])) 

  * LOOPS eval_gc_unmark_names_start -> eval_gc_unmark_names_start

  * Ranking function: N/A

  * Invariants eval_gc_unmark_names_start -> eval_gc_unmark_names_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_unmark_names_bb0_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_gc_unmark_names_bb1_in/1]))+c(failed(schemes_failed,[scc=1,cr=eval_gc_unmark_names_bb3_in/1])) 

  * LOOPS eval_gc_unmark_names_bb0_in -> eval_gc_unmark_names_bb0_in

  * Ranking function: N/A

  * Invariants eval_gc_unmark_names_bb0_in -> eval_gc_unmark_names_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_unmark_names_0

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_gc_unmark_names_bb1_in/1]))+c(failed(schemes_failed,[scc=1,cr=eval_gc_unmark_names_bb3_in/1])) 

  * LOOPS eval_gc_unmark_names_0 -> eval_gc_unmark_names_0

  * Ranking function: N/A

  * Invariants eval_gc_unmark_names_0 -> eval_gc_unmark_names_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_unmark_names_1

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_gc_unmark_names_bb1_in/1]))+c(failed(schemes_failed,[scc=1,cr=eval_gc_unmark_names_bb3_in/1])) 

  * LOOPS eval_gc_unmark_names_1 -> eval_gc_unmark_names_1

  * Ranking function: N/A

  * Invariants eval_gc_unmark_names_1 -> eval_gc_unmark_names_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_gc_unmark_names_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_gc_unmark_names_bb3_in/1])) 

  * LOOPS loop_cont_eval_gc_unmark_names_bb1_in(D,E,F) -> loop_cont_eval_gc_unmark_names_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gc_unmark_names_bb1_in(A,B,C) -> loop_cont_eval_gc_unmark_names_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_gc_unmark_names_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_gc_unmark_names_bb3_in(C,D) -> loop_cont_eval_gc_unmark_names_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gc_unmark_names_bb3_in(A,B) -> loop_cont_eval_gc_unmark_names_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_gc_unmark_names_bb3_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_gc_unmark_names_bb3_in/1])) 

  * LOOPS eval_gc_unmark_names_bb3_in(B) -> eval_gc_unmark_names_bb3_in(C)
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_gc_unmark_names_bb3_in/1]))

  * Invariants eval_gc_unmark_names_bb3_in(A) -> eval_gc_unmark_names_bb3_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=A+1]
     inv    : [B>=A]

CRS eval_gc_unmark_names_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_gc_unmark_names_bb1_in/1])) 

  * LOOPS eval_gc_unmark_names_bb1_in(B) -> eval_gc_unmark_names_bb1_in(C)
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_gc_unmark_names_bb1_in/1]))

  * Invariants eval_gc_unmark_names_bb1_in(A) -> eval_gc_unmark_names_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


