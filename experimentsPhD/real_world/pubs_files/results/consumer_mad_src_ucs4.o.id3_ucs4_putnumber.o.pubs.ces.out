This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_id3_ucs4_putnumber_bb1_in/1]))+c(failed(schemes_failed,[scc=1,cr=eval_id3_ucs4_putnumber_bb3_in/0])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_id3_ucs4_putnumber_start(A)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_id3_ucs4_putnumber_bb1_in/1]))+c(failed(schemes_failed,[scc=1,cr=eval_id3_ucs4_putnumber_bb3_in/0])) 

  * LOOPS eval_id3_ucs4_putnumber_start(B) -> eval_id3_ucs4_putnumber_start(C)

  * Ranking function: N/A

  * Invariants eval_id3_ucs4_putnumber_start(A) -> eval_id3_ucs4_putnumber_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_id3_ucs4_putnumber_bb0_in(A)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_id3_ucs4_putnumber_bb1_in/1]))+c(failed(schemes_failed,[scc=1,cr=eval_id3_ucs4_putnumber_bb3_in/0])) 

  * LOOPS eval_id3_ucs4_putnumber_bb0_in(B) -> eval_id3_ucs4_putnumber_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_id3_ucs4_putnumber_bb0_in(A) -> eval_id3_ucs4_putnumber_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_id3_ucs4_putnumber_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_id3_ucs4_putnumber_bb3_in/0])) 

  * LOOPS loop_cont_eval_id3_ucs4_putnumber_bb1_in(C,D) -> loop_cont_eval_id3_ucs4_putnumber_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_id3_ucs4_putnumber_bb1_in(A,B) -> loop_cont_eval_id3_ucs4_putnumber_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_id3_ucs4_putnumber_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_id3_ucs4_putnumber_bb3_in(C,D) -> loop_cont_eval_id3_ucs4_putnumber_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_id3_ucs4_putnumber_bb3_in(A,B) -> loop_cont_eval_id3_ucs4_putnumber_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_id3_ucs4_putnumber_bb3_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_id3_ucs4_putnumber_bb3_in/0])) 

  * LOOPS eval_id3_ucs4_putnumber_bb3_in -> eval_id3_ucs4_putnumber_bb3_in
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_id3_ucs4_putnumber_bb3_in/0]))

  * Invariants eval_id3_ucs4_putnumber_bb3_in -> eval_id3_ucs4_putnumber_bb3_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_id3_ucs4_putnumber_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_id3_ucs4_putnumber_bb1_in/1])) 

  * LOOPS eval_id3_ucs4_putnumber_bb1_in(B) -> eval_id3_ucs4_putnumber_bb1_in(C)
     - [B>=10*C,10*C+9>=B,C>=1]
     - [B+9>=10*C,0>=C+1,10*C>=B]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_id3_ucs4_putnumber_bb1_in/1]))

  * Invariants eval_id3_ucs4_putnumber_bb1_in(A) -> eval_id3_ucs4_putnumber_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []


