This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_NRL_start(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_NRL_start(B) -> eval_NRL_start(C)

  * Ranking function: N/A

  * Invariants eval_NRL_start(A) -> eval_NRL_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_NRL_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_NRL_bb0_in(B) -> eval_NRL_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_NRL_bb0_in(A) -> eval_NRL_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_NRL_3(A,B)

  * Non Asymptotic Upper Bound: 1+2*nat(B-3) 

  * LOOPS eval_NRL_3(C,D) -> eval_NRL_3(E,F)

  * Ranking function: N/A

  * Invariants eval_NRL_3(A,B) -> eval_NRL_3(C,D)

     entry  : [A+3=B]
     non-rec: [A=C,B=D,A+3=B]
     rec    : [0=1]
     inv    : [A+3=B,A=C,A+3=D]

CRS eval_NRL_4(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_NRL_4(B) -> eval_NRL_4(C)

  * Ranking function: N/A

  * Invariants eval_NRL_4(A) -> eval_NRL_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_NRL_5(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_NRL_5(B) -> eval_NRL_5(C)

  * Ranking function: N/A

  * Invariants eval_NRL_5(A) -> eval_NRL_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_NRL_6(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_NRL_6(B) -> eval_NRL_6(C)

  * Ranking function: N/A

  * Invariants eval_NRL_6(A) -> eval_NRL_6(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_NRL_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_NRL_bb1_in(C,D) -> loop_cont_eval_NRL_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_NRL_bb1_in(A,B) -> loop_cont_eval_NRL_bb1_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_NRL_24

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_NRL_24 -> eval_NRL_24

  * Ranking function: N/A

  * Invariants eval_NRL_24 -> eval_NRL_24

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_NRL_25

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_NRL_25 -> eval_NRL_25

  * Ranking function: N/A

  * Invariants eval_NRL_25 -> eval_NRL_25

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_NRL_26

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_NRL_26 -> eval_NRL_26

  * Ranking function: N/A

  * Invariants eval_NRL_26 -> eval_NRL_26

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_NRL_bb1_in(A)

  * Non Asymptotic Upper Bound: 2*nat(A) 

  * LOOPS eval_NRL_bb1_in(B) -> eval_NRL_bb1_in(C)
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants eval_NRL_bb1_in(A) -> eval_NRL_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B]


