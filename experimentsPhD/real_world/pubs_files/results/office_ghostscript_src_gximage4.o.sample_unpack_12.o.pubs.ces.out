This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed))/3 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_sample_unpack_12_start(A,B,C)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed))/3 

  * LOOPS eval_sample_unpack_12_start(D,E,F) -> eval_sample_unpack_12_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_sample_unpack_12_start(A,B,C) -> eval_sample_unpack_12_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_sample_unpack_12_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed))/3 

  * LOOPS eval_sample_unpack_12_bb0_in(B) -> eval_sample_unpack_12_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_sample_unpack_12_bb0_in(A) -> eval_sample_unpack_12_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_sample_unpack_12_NewDefault_in(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A+ -3)/3 

  * LOOPS eval_sample_unpack_12_NewDefault_in(B) -> eval_sample_unpack_12_NewDefault_in(C)

  * Ranking function: N/A

  * Invariants eval_sample_unpack_12_NewDefault_in(A) -> eval_sample_unpack_12_NewDefault_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_sample_unpack_12_bb4_in(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/3 

  * LOOPS eval_sample_unpack_12_bb4_in(B) -> eval_sample_unpack_12_bb4_in(C)

  * Ranking function: N/A

  * Invariants eval_sample_unpack_12_bb4_in(A) -> eval_sample_unpack_12_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_sample_unpack_12_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_sample_unpack_12_bb5_in(C,D) -> loop_cont_eval_sample_unpack_12_bb5_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_sample_unpack_12_bb5_in(A,B) -> loop_cont_eval_sample_unpack_12_bb5_in(C,D)

     entry  : [3>=A,A>=2]
     non-rec: [A=C,B=D,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=C,B=D]

CRS eval_sample_unpack_12_NewDefault3_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_sample_unpack_12_NewDefault3_in -> eval_sample_unpack_12_NewDefault3_in

  * Ranking function: N/A

  * Invariants eval_sample_unpack_12_NewDefault3_in -> eval_sample_unpack_12_NewDefault3_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_sample_unpack_12_bb10_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_sample_unpack_12_bb10_in -> eval_sample_unpack_12_bb10_in

  * Ranking function: N/A

  * Invariants eval_sample_unpack_12_bb10_in -> eval_sample_unpack_12_bb10_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_sample_unpack_12_bb5_in(A)

  * Non Asymptotic Upper Bound: nat(A)/3 

  * LOOPS eval_sample_unpack_12_bb5_in(B) -> eval_sample_unpack_12_bb5_in(C)
     - [B=C+3,B>=3]

  * Ranking function: nat(B/3)

  * Invariants eval_sample_unpack_12_bb5_in(A) -> eval_sample_unpack_12_bb5_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=0,A>=B+3]
     inv    : [A>=B]


