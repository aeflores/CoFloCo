This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=1,cr=eval_rsa_public_encrypt_bb5_in/3])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_rsa_public_encrypt_start(A,B)

  * Non Asymptotic Upper Bound: 2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=1,cr=eval_rsa_public_encrypt_bb5_in/3])) 

  * LOOPS eval_rsa_public_encrypt_start(C,D) -> eval_rsa_public_encrypt_start(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_start(A,B) -> eval_rsa_public_encrypt_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_rsa_public_encrypt_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=1,cr=eval_rsa_public_encrypt_bb5_in/3])) 

  * LOOPS eval_rsa_public_encrypt_bb0_in(C,D) -> eval_rsa_public_encrypt_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_bb0_in(A,B) -> eval_rsa_public_encrypt_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_rsa_public_encrypt_0(A,B)

  * Non Asymptotic Upper Bound: 2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=1,cr=eval_rsa_public_encrypt_bb5_in/3])) 

  * LOOPS eval_rsa_public_encrypt_0(C,D) -> eval_rsa_public_encrypt_0(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_0(A,B) -> eval_rsa_public_encrypt_0(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_rsa_public_encrypt_1(A,B)

  * Non Asymptotic Upper Bound: 2+nat(c(maximize_failed))+c(failed(schemes_failed,[scc=1,cr=eval_rsa_public_encrypt_bb5_in/3])) 

  * LOOPS eval_rsa_public_encrypt_1(C,D) -> eval_rsa_public_encrypt_1(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_1(A,B) -> eval_rsa_public_encrypt_1(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_rsa_public_encrypt_bb1_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_rsa_public_encrypt_bb5_in/3])) 

  * LOOPS loop_cont_eval_rsa_public_encrypt_bb1_in(F,G,H,I,J) -> loop_cont_eval_rsa_public_encrypt_bb1_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_rsa_public_encrypt_bb1_in(A,B,C,D,E) -> loop_cont_eval_rsa_public_encrypt_bb1_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS loop_cont_eval_rsa_public_encrypt_bb5_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_rsa_public_encrypt_bb5_in(E,F,G,H) -> loop_cont_eval_rsa_public_encrypt_bb5_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_rsa_public_encrypt_bb5_in(A,B,C,D) -> loop_cont_eval_rsa_public_encrypt_bb5_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_rsa_public_encrypt_25(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_encrypt_25(C,D) -> eval_rsa_public_encrypt_25(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_25(A,B) -> eval_rsa_public_encrypt_25(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_rsa_public_encrypt_26(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_encrypt_26(B) -> eval_rsa_public_encrypt_26(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_26(A) -> eval_rsa_public_encrypt_26(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_encrypt_30(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_encrypt_30(C,D) -> eval_rsa_public_encrypt_30(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_30(A,B) -> eval_rsa_public_encrypt_30(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_rsa_public_encrypt_31(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_encrypt_31(B) -> eval_rsa_public_encrypt_31(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_31(A) -> eval_rsa_public_encrypt_31(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_encrypt_32(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_encrypt_32(B) -> eval_rsa_public_encrypt_32(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_32(A) -> eval_rsa_public_encrypt_32(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_encrypt_33(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_encrypt_33(B) -> eval_rsa_public_encrypt_33(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_33(A) -> eval_rsa_public_encrypt_33(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_encrypt_34

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_encrypt_34 -> eval_rsa_public_encrypt_34

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_34 -> eval_rsa_public_encrypt_34

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_rsa_public_encrypt_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_encrypt_bb9_in -> eval_rsa_public_encrypt_bb9_in

  * Ranking function: N/A

  * Invariants eval_rsa_public_encrypt_bb9_in -> eval_rsa_public_encrypt_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_rsa_public_encrypt_bb5_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_rsa_public_encrypt_bb5_in/3])) 

  * LOOPS eval_rsa_public_encrypt_bb5_in(D,E,F) -> eval_rsa_public_encrypt_bb5_in(G,H,I)
     - [D=G,F=I+1,0>=F+1]
     - [D=G,F=I,0>=I+1]
     - [D=G,F=I+1,F>=1]
     - [D=G,F=I,I>=1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_rsa_public_encrypt_bb5_in/3]))

  * Invariants eval_rsa_public_encrypt_bb5_in(A,B,C) -> eval_rsa_public_encrypt_bb5_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [A=D,C>=F]
     inv    : [C>=F,A=D]

CRS eval_rsa_public_encrypt_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(D) 

  * LOOPS eval_rsa_public_encrypt_bb1_in(E,F,G,H) -> eval_rsa_public_encrypt_bb1_in(I,J,K,L)
     - [G=K,E=I,H=L+1,H>=1]

  * Ranking function: nat(H)

  * Invariants eval_rsa_public_encrypt_bb1_in(A,B,C,D) -> eval_rsa_public_encrypt_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [C=G,A=E,H>=0,D>=H+1]
     inv    : [D>=H,C=G,A=E]


