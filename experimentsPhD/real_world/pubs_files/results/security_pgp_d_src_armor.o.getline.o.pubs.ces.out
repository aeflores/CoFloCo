This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_getline_bb1_in/0])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_getline_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_getline_bb1_in/0])) 

  * LOOPS eval_getline_start(B) -> eval_getline_start(C)

  * Ranking function: N/A

  * Invariants eval_getline_start(A) -> eval_getline_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_getline_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_getline_bb1_in/0])) 

  * LOOPS eval_getline_bb0_in -> eval_getline_bb0_in

  * Ranking function: N/A

  * Invariants eval_getline_bb0_in -> eval_getline_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_getline_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_getline_bb1_in(D,E,F) -> loop_cont_eval_getline_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_getline_bb1_in(A,B,C) -> loop_cont_eval_getline_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_getline_4(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getline_4(B) -> eval_getline_4(C)

  * Ranking function: N/A

  * Invariants eval_getline_4(A) -> eval_getline_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_getline_5

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getline_5 -> eval_getline_5

  * Ranking function: N/A

  * Invariants eval_getline_5 -> eval_getline_5

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_getline_15(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getline_15(B) -> eval_getline_15(C)

  * Ranking function: N/A

  * Invariants eval_getline_15(A) -> eval_getline_15(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_getline_16

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getline_16 -> eval_getline_16

  * Ranking function: N/A

  * Invariants eval_getline_16 -> eval_getline_16

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_getline_bb10_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_getline_bb10_in -> eval_getline_bb10_in

  * Ranking function: N/A

  * Invariants eval_getline_bb10_in -> eval_getline_bb10_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_getline_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_getline_bb1_in/0])) 

  * LOOPS eval_getline_bb1_in -> eval_getline_bb1_in
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_getline_bb1_in/0]))

  * Invariants eval_getline_bb1_in -> eval_getline_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


