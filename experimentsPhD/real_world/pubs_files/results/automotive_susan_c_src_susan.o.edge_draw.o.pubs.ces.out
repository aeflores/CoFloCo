This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: max([1+c(failed(schemes_failed,[scc=1,cr=eval_edge_draw_bb7_in/3])),2+c(failed(schemes_failed,[scc=0,cr=eval_edge_draw_bb2_in/3]))+c(failed(schemes_failed,[scc=1,cr=eval_edge_draw_bb7_in/3]))]) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_edge_draw_start(A,B,C)

  * Non Asymptotic Upper Bound: max([1+c(failed(schemes_failed,[scc=1,cr=eval_edge_draw_bb7_in/3])),2+c(failed(schemes_failed,[scc=0,cr=eval_edge_draw_bb2_in/3]))+c(failed(schemes_failed,[scc=1,cr=eval_edge_draw_bb7_in/3]))]) 

  * LOOPS eval_edge_draw_start(D,E,F) -> eval_edge_draw_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_edge_draw_start(A,B,C) -> eval_edge_draw_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_edge_draw_bb0_in(A,B)

  * Non Asymptotic Upper Bound: max([1+c(failed(schemes_failed,[scc=1,cr=eval_edge_draw_bb7_in/3])),2+c(failed(schemes_failed,[scc=0,cr=eval_edge_draw_bb2_in/3]))+c(failed(schemes_failed,[scc=1,cr=eval_edge_draw_bb7_in/3]))]) 

  * LOOPS eval_edge_draw_bb0_in(C,D) -> eval_edge_draw_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_edge_draw_bb0_in(A,B) -> eval_edge_draw_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_edge_draw_bb2_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_edge_draw_bb7_in/3])) 

  * LOOPS loop_cont_eval_edge_draw_bb2_in(E,F,G,H) -> loop_cont_eval_edge_draw_bb2_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_edge_draw_bb2_in(A,B,C,D) -> loop_cont_eval_edge_draw_bb2_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_edge_draw_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_edge_draw_bb7_in/3])) 

  * LOOPS eval_edge_draw_bb6_in(C,D) -> eval_edge_draw_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants eval_edge_draw_bb6_in(A,B) -> eval_edge_draw_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_edge_draw_bb7_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_edge_draw_bb7_in(C,D) -> loop_cont_eval_edge_draw_bb7_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_edge_draw_bb7_in(A,B) -> loop_cont_eval_edge_draw_bb7_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_edge_draw_bb7_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_edge_draw_bb7_in/3])) 

  * LOOPS eval_edge_draw_bb7_in(D,E,F) -> eval_edge_draw_bb7_in(G,H,I)
     - [E=H,F+1=I,D=G]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_edge_draw_bb7_in/3]))

  * Invariants eval_edge_draw_bb7_in(A,B,C) -> eval_edge_draw_bb7_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]

CRS eval_edge_draw_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_edge_draw_bb2_in/3])) 

  * LOOPS eval_edge_draw_bb2_in(D,E,F) -> eval_edge_draw_bb2_in(G,H,I)
     - [E=H,F+1=I,D=G]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_edge_draw_bb2_in/3]))

  * Invariants eval_edge_draw_bb2_in(A,B,C) -> eval_edge_draw_bb2_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]


