This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_dict_int_array_param_start(A)

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_dict_int_array_param_start(B) -> eval_dict_int_array_param_start(C)

  * Ranking function: N/A

  * Invariants eval_dict_int_array_param_start(A) -> eval_dict_int_array_param_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_dict_int_array_param_bb0_in

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_dict_int_array_param_bb0_in -> eval_dict_int_array_param_bb0_in

  * Ranking function: N/A

  * Invariants eval_dict_int_array_param_bb0_in -> eval_dict_int_array_param_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_dict_int_array_param_0

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_dict_int_array_param_0 -> eval_dict_int_array_param_0

  * Ranking function: N/A

  * Invariants eval_dict_int_array_param_0 -> eval_dict_int_array_param_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_dict_int_array_param_1

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_dict_int_array_param_1 -> eval_dict_int_array_param_1

  * Ranking function: N/A

  * Invariants eval_dict_int_array_param_1 -> eval_dict_int_array_param_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_dict_int_array_param_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_dict_int_array_param_bb5_in(C,D) -> loop_cont_eval_dict_int_array_param_bb5_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_dict_int_array_param_bb5_in(A,B) -> loop_cont_eval_dict_int_array_param_bb5_in(C,D)

     entry  : [3>=A,A>=2]
     non-rec: [A=C,B=D,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=C,B=D]

CRS eval_dict_int_array_param_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_dict_int_array_param_NewDefault_in -> eval_dict_int_array_param_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_dict_int_array_param_NewDefault_in -> eval_dict_int_array_param_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_dict_int_array_param_bb5_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_dict_int_array_param_bb5_in(C,D) -> eval_dict_int_array_param_bb5_in(E,F)
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_dict_int_array_param_bb5_in(A,B) -> eval_dict_int_array_param_bb5_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_dict_int_array_param_bb14_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_dict_int_array_param_bb14_in -> eval_dict_int_array_param_bb14_in

  * Ranking function: N/A

  * Invariants eval_dict_int_array_param_bb14_in -> eval_dict_int_array_param_bb14_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


