This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_arg_next_bb1_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_arg_next_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_arg_next_bb1_in/0])) 

  * LOOPS eval_arg_next_start -> eval_arg_next_start

  * Ranking function: N/A

  * Invariants eval_arg_next_start -> eval_arg_next_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_arg_next_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_arg_next_bb1_in/0])) 

  * LOOPS eval_arg_next_bb0_in -> eval_arg_next_bb0_in

  * Ranking function: N/A

  * Invariants eval_arg_next_bb0_in -> eval_arg_next_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_arg_next_0

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_arg_next_bb1_in/0])) 

  * LOOPS eval_arg_next_0 -> eval_arg_next_0

  * Ranking function: N/A

  * Invariants eval_arg_next_0 -> eval_arg_next_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_arg_next_1

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_arg_next_bb1_in/0])) 

  * LOOPS eval_arg_next_1 -> eval_arg_next_1

  * Ranking function: N/A

  * Invariants eval_arg_next_1 -> eval_arg_next_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_arg_next_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_arg_next_bb1_in(C,D) -> loop_cont_eval_arg_next_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_arg_next_bb1_in(A,B) -> loop_cont_eval_arg_next_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_arg_next_bb40_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_arg_next_bb40_in -> eval_arg_next_bb40_in

  * Ranking function: N/A

  * Invariants eval_arg_next_bb40_in -> eval_arg_next_bb40_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_arg_next_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_arg_next_bb1_in/0])) 

  * LOOPS eval_arg_next_bb1_in -> eval_arg_next_bb1_in
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_arg_next_bb1_in/0]))

  * Invariants eval_arg_next_bb1_in -> eval_arg_next_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_arg_next_bb18_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_arg_next_bb18_in/1])) 

  * LOOPS eval_arg_next_bb18_in(B) -> eval_arg_next_bb18_in(C)
     - [C=0,0>=B+1]
     - [C=0,0>=B+1]
     - [C=0,B>=1]
     - [C=0,B>=1]
     - [C=1,B=0]
     - [C=1,B=0]
     - [C=1,B=0]
     - [C=1,B=0]
     - [B=C]
     - [B=C,0>=B+1]
     - [B=C,B>=1]
     - [B=C]
     - [B=C,0>=B+1]
     - [B=C,B>=1]
     - [C=0,0>=B+1]
     - [C=0,0>=B+1]
     - [C=0,B>=1]
     - [C=0,B>=1]
     - [C=1,B=0]
     - [C=1,B=0]
     - [C=1,B=0]
     - [C=1,B=0]
     - [B=C]
     - [B=C,0>=B+1]
     - [B=C,B>=1]
     - [B=C]
     - [B=C,0>=B+1]
     - [B=C,B>=1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_arg_next_bb18_in/1]))

  * Invariants eval_arg_next_bb18_in(A) -> eval_arg_next_bb18_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [1>=B,B>=0,A=0]
     inv    : [1>=B,B>=0,A=0]

CRS eval_arg_next_bb8_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_arg_next_bb8_in/0])) 

  * LOOPS eval_arg_next_bb8_in -> eval_arg_next_bb8_in
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_arg_next_bb8_in/0]))

  * Invariants eval_arg_next_bb8_in -> eval_arg_next_bb8_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


