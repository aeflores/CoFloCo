This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 193 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_jpeg_add_quant_table_start(A,B,C)

  * Non Asymptotic Upper Bound: 193 

  * LOOPS eval_jpeg_add_quant_table_start(D,E,F) -> eval_jpeg_add_quant_table_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_jpeg_add_quant_table_start(A,B,C) -> eval_jpeg_add_quant_table_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_jpeg_add_quant_table_bb0_in(A)

  * Non Asymptotic Upper Bound: 193 

  * LOOPS eval_jpeg_add_quant_table_bb0_in(B) -> eval_jpeg_add_quant_table_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_jpeg_add_quant_table_bb0_in(A) -> eval_jpeg_add_quant_table_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_jpeg_add_quant_table_6(A)

  * Non Asymptotic Upper Bound: 193 

  * LOOPS eval_jpeg_add_quant_table_6(B) -> eval_jpeg_add_quant_table_6(C)

  * Ranking function: N/A

  * Invariants eval_jpeg_add_quant_table_6(A) -> eval_jpeg_add_quant_table_6(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_jpeg_add_quant_table_7(A)

  * Non Asymptotic Upper Bound: 193 

  * LOOPS eval_jpeg_add_quant_table_7(B) -> eval_jpeg_add_quant_table_7(C)

  * Ranking function: N/A

  * Invariants eval_jpeg_add_quant_table_7(A) -> eval_jpeg_add_quant_table_7(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_jpeg_add_quant_table_bb2_in(A)

  * Non Asymptotic Upper Bound: 193 

  * LOOPS eval_jpeg_add_quant_table_bb2_in(B) -> eval_jpeg_add_quant_table_bb2_in(C)

  * Ranking function: N/A

  * Invariants eval_jpeg_add_quant_table_bb2_in(A) -> eval_jpeg_add_quant_table_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_jpeg_add_quant_table_8(A)

  * Non Asymptotic Upper Bound: 193 

  * LOOPS eval_jpeg_add_quant_table_8(B) -> eval_jpeg_add_quant_table_8(C)

  * Ranking function: N/A

  * Invariants eval_jpeg_add_quant_table_8(A) -> eval_jpeg_add_quant_table_8(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_jpeg_add_quant_table_9(A)

  * Non Asymptotic Upper Bound: 193 

  * LOOPS eval_jpeg_add_quant_table_9(B) -> eval_jpeg_add_quant_table_9(C)

  * Ranking function: N/A

  * Invariants eval_jpeg_add_quant_table_9(A) -> eval_jpeg_add_quant_table_9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_jpeg_add_quant_table_bb4_in(A)

  * Non Asymptotic Upper Bound: 193 

  * LOOPS eval_jpeg_add_quant_table_bb4_in(B) -> eval_jpeg_add_quant_table_bb4_in(C)

  * Ranking function: N/A

  * Invariants eval_jpeg_add_quant_table_bb4_in(A) -> eval_jpeg_add_quant_table_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_jpeg_add_quant_table_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_jpeg_add_quant_table_bb5_in(C,D) -> loop_cont_eval_jpeg_add_quant_table_bb5_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_jpeg_add_quant_table_bb5_in(A,B) -> loop_cont_eval_jpeg_add_quant_table_bb5_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_jpeg_add_quant_table_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 3*nat(-B+64) 

  * LOOPS eval_jpeg_add_quant_table_bb5_in(C,D) -> eval_jpeg_add_quant_table_bb5_in(E,F)
     - [D+1=F,C=E,64>=F]
     - [D+1=F,C=E,64>=F]
     - [D+1=F,C=E,64>=F]

  * Ranking function: nat(-D+64)

  * Invariants eval_jpeg_add_quant_table_bb5_in(A,B) -> eval_jpeg_add_quant_table_bb5_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,D>=1]
     inv    : [D>=0,A=C,B=0]


