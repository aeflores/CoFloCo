This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_compress_byte_bb6_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_compress_byte_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_compress_byte_bb6_in/1])) 

  * LOOPS eval_compress_byte_start(B) -> eval_compress_byte_start(C)

  * Ranking function: N/A

  * Invariants eval_compress_byte_start(A) -> eval_compress_byte_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_compress_byte_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_compress_byte_bb6_in/1])) 

  * LOOPS eval_compress_byte_bb0_in -> eval_compress_byte_bb0_in

  * Ranking function: N/A

  * Invariants eval_compress_byte_bb0_in -> eval_compress_byte_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_compress_byte_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_compress_byte_bb6_in(C,D) -> loop_cont_eval_compress_byte_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_compress_byte_bb6_in(A,B) -> loop_cont_eval_compress_byte_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_compress_byte_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_compress_byte_bb9_in -> eval_compress_byte_bb9_in

  * Ranking function: N/A

  * Invariants eval_compress_byte_bb9_in -> eval_compress_byte_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_compress_byte_46(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_compress_byte_46(B) -> eval_compress_byte_46(C)

  * Ranking function: N/A

  * Invariants eval_compress_byte_46(A) -> eval_compress_byte_46(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_compress_byte_47

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_compress_byte_47 -> eval_compress_byte_47

  * Ranking function: N/A

  * Invariants eval_compress_byte_47 -> eval_compress_byte_47

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_compress_byte_58

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_compress_byte_58 -> eval_compress_byte_58

  * Ranking function: N/A

  * Invariants eval_compress_byte_58 -> eval_compress_byte_58

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_compress_byte_59

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_compress_byte_59 -> eval_compress_byte_59

  * Ranking function: N/A

  * Invariants eval_compress_byte_59 -> eval_compress_byte_59

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_compress_byte_bb12_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_compress_byte_bb12_in -> eval_compress_byte_bb12_in

  * Ranking function: N/A

  * Invariants eval_compress_byte_bb12_in -> eval_compress_byte_bb12_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_compress_byte_bb6_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_compress_byte_bb6_in/1])) 

  * LOOPS eval_compress_byte_bb6_in(B) -> eval_compress_byte_bb6_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_compress_byte_bb6_in/1]))

  * Invariants eval_compress_byte_bb6_in(A) -> eval_compress_byte_bb6_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]

CRS eval_compress_byte_bb13_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_compress_byte_bb13_in -> eval_compress_byte_bb13_in

  * Ranking function: N/A

  * Invariants eval_compress_byte_bb13_in -> eval_compress_byte_bb13_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


