This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+2*nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ref_param_write_name_array_start

  * Non Asymptotic Upper Bound: 1+2*nat(c(maximize_failed)) 

  * LOOPS eval_ref_param_write_name_array_start -> eval_ref_param_write_name_array_start

  * Ranking function: N/A

  * Invariants eval_ref_param_write_name_array_start -> eval_ref_param_write_name_array_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ref_param_write_name_array_bb0_in

  * Non Asymptotic Upper Bound: 1+2*nat(c(maximize_failed)) 

  * LOOPS eval_ref_param_write_name_array_bb0_in -> eval_ref_param_write_name_array_bb0_in

  * Ranking function: N/A

  * Invariants eval_ref_param_write_name_array_bb0_in -> eval_ref_param_write_name_array_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ref_param_write_name_array_1(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_ref_param_write_name_array_1(B) -> eval_ref_param_write_name_array_1(C)

  * Ranking function: N/A

  * Invariants eval_ref_param_write_name_array_1(A) -> eval_ref_param_write_name_array_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ref_param_write_name_array_2(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_ref_param_write_name_array_2(B) -> eval_ref_param_write_name_array_2(C)

  * Ranking function: N/A

  * Invariants eval_ref_param_write_name_array_2(A) -> eval_ref_param_write_name_array_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_ref_param_write_name_array_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_ref_param_write_name_array_bb2_in(C,D) -> loop_cont_eval_ref_param_write_name_array_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_ref_param_write_name_array_bb2_in(A,B) -> loop_cont_eval_ref_param_write_name_array_bb2_in(C,D)

     entry  : [3>=A,A>=2]
     non-rec: [A=C,B=D,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=C,B=D]

CRS eval_ref_param_write_name_array_10

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ref_param_write_name_array_10 -> eval_ref_param_write_name_array_10

  * Ranking function: N/A

  * Invariants eval_ref_param_write_name_array_10 -> eval_ref_param_write_name_array_10

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ref_param_write_name_array_11

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ref_param_write_name_array_11 -> eval_ref_param_write_name_array_11

  * Ranking function: N/A

  * Invariants eval_ref_param_write_name_array_11 -> eval_ref_param_write_name_array_11

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ref_param_write_name_array_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ref_param_write_name_array_bb6_in -> eval_ref_param_write_name_array_bb6_in

  * Ranking function: N/A

  * Invariants eval_ref_param_write_name_array_bb6_in -> eval_ref_param_write_name_array_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ref_param_write_name_array_bb2_in(A)

  * Non Asymptotic Upper Bound: 2*nat(A) 

  * LOOPS eval_ref_param_write_name_array_bb2_in(B) -> eval_ref_param_write_name_array_bb2_in(C)
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]

  * Ranking function: nat(B)

  * Invariants eval_ref_param_write_name_array_bb2_in(A) -> eval_ref_param_write_name_array_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=0,A>=B+1]
     inv    : [A>=B]


