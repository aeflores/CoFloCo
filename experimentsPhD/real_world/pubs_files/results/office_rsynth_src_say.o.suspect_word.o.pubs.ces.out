This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_suspect_word_start(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_suspect_word_start(B) -> eval_suspect_word_start(C)

  * Ranking function: N/A

  * Invariants eval_suspect_word_start(A) -> eval_suspect_word_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_suspect_word_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_suspect_word_bb0_in(B) -> eval_suspect_word_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_suspect_word_bb0_in(A) -> eval_suspect_word_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_suspect_word_0(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_suspect_word_0(B) -> eval_suspect_word_0(C)

  * Ranking function: N/A

  * Invariants eval_suspect_word_0(A) -> eval_suspect_word_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_suspect_word_1(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_suspect_word_1(B) -> eval_suspect_word_1(C)

  * Ranking function: N/A

  * Invariants eval_suspect_word_1(A) -> eval_suspect_word_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_suspect_word_2(A)

  * Non Asymptotic Upper Bound: 1+2*nat(A) 

  * LOOPS eval_suspect_word_2(B) -> eval_suspect_word_2(C)

  * Ranking function: N/A

  * Invariants eval_suspect_word_2(A) -> eval_suspect_word_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_suspect_word_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_suspect_word_bb1_in(C,D) -> loop_cont_eval_suspect_word_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_suspect_word_bb1_in(A,B) -> loop_cont_eval_suspect_word_bb1_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_suspect_word_bb10_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_suspect_word_bb10_in -> eval_suspect_word_bb10_in

  * Ranking function: N/A

  * Invariants eval_suspect_word_bb10_in -> eval_suspect_word_bb10_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_suspect_word_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 2*nat(A-B) 

  * LOOPS eval_suspect_word_bb1_in(C,D) -> eval_suspect_word_bb1_in(E,F)
     - [D+1=F,C=E,C>=D+1]
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_suspect_word_bb1_in(A,B) -> eval_suspect_word_bb1_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]


