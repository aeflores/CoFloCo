This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D,E) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_freebufpool_bb3_in/5])) 

  * LOOPS $pubs_aux_entry$(F,G,H,I,J) -> $pubs_aux_entry$(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D,E) -> $pubs_aux_entry$(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_freebufpool_start(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_freebufpool_bb3_in/5])) 

  * LOOPS eval_freebufpool_start(F,G,H,I,J) -> eval_freebufpool_start(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_freebufpool_start(A,B,C,D,E) -> eval_freebufpool_start(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_freebufpool_bb0_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_freebufpool_bb3_in/5])) 

  * LOOPS eval_freebufpool_bb0_in(F,G,H,I,J) -> eval_freebufpool_bb0_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_freebufpool_bb0_in(A,B,C,D,E) -> eval_freebufpool_bb0_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_freebufpool_4(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_freebufpool_bb3_in/5])) 

  * LOOPS eval_freebufpool_4(G,H,I,J,K,L) -> eval_freebufpool_4(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants eval_freebufpool_4(A,B,C,D,E,F) -> eval_freebufpool_4(G,H,I,J,K,L)

     entry  : [C+1023>=1024*F,1024*F+1023>=C]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,C+1023>=1024*F,1024*F+1023>=C]
     rec    : [0=1]
     inv    : [C+1023>=1024*F,1024*F+1023>=C,A=G,B=H,C=I,D=J,E=K,F=L]

CRS eval_freebufpool_5(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_freebufpool_bb3_in/5])) 

  * LOOPS eval_freebufpool_5(F,G,H,I,J) -> eval_freebufpool_5(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_freebufpool_5(A,B,C,D,E) -> eval_freebufpool_5(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_freebufpool_bb2_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_freebufpool_bb3_in/5])) 

  * LOOPS eval_freebufpool_bb2_in(F,G,H,I,J) -> eval_freebufpool_bb2_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_freebufpool_bb2_in(A,B,C,D,E) -> eval_freebufpool_bb2_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS loop_cont_eval_freebufpool_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_freebufpool_bb3_in(C,D) -> loop_cont_eval_freebufpool_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_freebufpool_bb3_in(A,B) -> loop_cont_eval_freebufpool_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_freebufpool_bb3_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_freebufpool_bb3_in/5])) 

  * LOOPS eval_freebufpool_bb3_in(F,G,H,I,J) -> eval_freebufpool_bb3_in(K,L,M,N,O)
     - [I=N,J=O,F=K,G=L,H=M]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_freebufpool_bb3_in/5]))

  * Invariants eval_freebufpool_bb3_in(A,B,C,D,E) -> eval_freebufpool_bb3_in(F,G,H,I,J)

     entry  : [C=0]
     non-rec: [A=F,B=G,C=H,D=I,E=J,C=0]
     rec    : [E=J,D=I,C=0,H=0,B=G,A=F]
     inv    : [C=0,A=F,B=G,H=0,D=I,E=J]


