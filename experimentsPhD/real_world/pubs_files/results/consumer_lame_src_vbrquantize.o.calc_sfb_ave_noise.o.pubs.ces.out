This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_calc_sfb_ave_noise_bb1_in/3])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_calc_sfb_ave_noise_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_calc_sfb_ave_noise_bb1_in/3])) 

  * LOOPS eval_calc_sfb_ave_noise_start(C,D) -> eval_calc_sfb_ave_noise_start(E,F)

  * Ranking function: N/A

  * Invariants eval_calc_sfb_ave_noise_start(A,B) -> eval_calc_sfb_ave_noise_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_calc_sfb_ave_noise_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_calc_sfb_ave_noise_bb1_in/3])) 

  * LOOPS eval_calc_sfb_ave_noise_bb0_in(C,D) -> eval_calc_sfb_ave_noise_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_calc_sfb_ave_noise_bb0_in(A,B) -> eval_calc_sfb_ave_noise_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_calc_sfb_ave_noise_0(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_calc_sfb_ave_noise_bb1_in/3])) 

  * LOOPS eval_calc_sfb_ave_noise_0(C,D) -> eval_calc_sfb_ave_noise_0(E,F)

  * Ranking function: N/A

  * Invariants eval_calc_sfb_ave_noise_0(A,B) -> eval_calc_sfb_ave_noise_0(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_calc_sfb_ave_noise_1(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_calc_sfb_ave_noise_bb1_in/3])) 

  * LOOPS eval_calc_sfb_ave_noise_1(C,D) -> eval_calc_sfb_ave_noise_1(E,F)

  * Ranking function: N/A

  * Invariants eval_calc_sfb_ave_noise_1(A,B) -> eval_calc_sfb_ave_noise_1(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_calc_sfb_ave_noise_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_calc_sfb_ave_noise_bb1_in(C,D) -> loop_cont_eval_calc_sfb_ave_noise_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_calc_sfb_ave_noise_bb1_in(A,B) -> loop_cont_eval_calc_sfb_ave_noise_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_calc_sfb_ave_noise_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_calc_sfb_ave_noise_bb7_in -> eval_calc_sfb_ave_noise_bb7_in

  * Ranking function: N/A

  * Invariants eval_calc_sfb_ave_noise_bb7_in -> eval_calc_sfb_ave_noise_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_calc_sfb_ave_noise_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_calc_sfb_ave_noise_bb1_in/3])) 

  * LOOPS eval_calc_sfb_ave_noise_bb1_in(D,E,F) -> eval_calc_sfb_ave_noise_bb1_in(G,H,I)
     - [E=H,D+F=I,D=G]
     - [E=H,D+F=I,D=G]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_calc_sfb_ave_noise_bb1_in/3]))

  * Invariants eval_calc_sfb_ave_noise_bb1_in(A,B,C) -> eval_calc_sfb_ave_noise_bb1_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [A=D,B=E,C=0]
     inv    : [A=D,B=E,C=0]


