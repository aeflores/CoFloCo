This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_s_A85D_process_bb1_in/2])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_s_A85D_process_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_s_A85D_process_bb1_in/2])) 

  * LOOPS eval_s_A85D_process_start(B) -> eval_s_A85D_process_start(C)

  * Ranking function: N/A

  * Invariants eval_s_A85D_process_start(A) -> eval_s_A85D_process_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_s_A85D_process_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_s_A85D_process_bb1_in/2])) 

  * LOOPS eval_s_A85D_process_bb0_in -> eval_s_A85D_process_bb0_in

  * Ranking function: N/A

  * Invariants eval_s_A85D_process_bb0_in -> eval_s_A85D_process_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_s_A85D_process_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_s_A85D_process_bb1_in(E,F,G,H) -> loop_cont_eval_s_A85D_process_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_s_A85D_process_bb1_in(A,B,C,D) -> loop_cont_eval_s_A85D_process_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_s_A85D_process_54(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_A85D_process_54(C,D) -> eval_s_A85D_process_54(E,F)

  * Ranking function: N/A

  * Invariants eval_s_A85D_process_54(A,B) -> eval_s_A85D_process_54(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_s_A85D_process_55(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_A85D_process_55(C,D) -> eval_s_A85D_process_55(E,F)

  * Ranking function: N/A

  * Invariants eval_s_A85D_process_55(A,B) -> eval_s_A85D_process_55(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_s_A85D_process_bb19_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_A85D_process_bb19_in(C,D) -> eval_s_A85D_process_bb19_in(E,F)

  * Ranking function: N/A

  * Invariants eval_s_A85D_process_bb19_in(A,B) -> eval_s_A85D_process_bb19_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_s_A85D_process_64(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_A85D_process_64(C,D) -> eval_s_A85D_process_64(E,F)

  * Ranking function: N/A

  * Invariants eval_s_A85D_process_64(A,B) -> eval_s_A85D_process_64(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_s_A85D_process_65

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_A85D_process_65 -> eval_s_A85D_process_65

  * Ranking function: N/A

  * Invariants eval_s_A85D_process_65 -> eval_s_A85D_process_65

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_s_A85D_process_bb22_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_A85D_process_bb22_in -> eval_s_A85D_process_bb22_in

  * Ranking function: N/A

  * Invariants eval_s_A85D_process_bb22_in -> eval_s_A85D_process_bb22_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_s_A85D_process_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_s_A85D_process_bb1_in/2])) 

  * LOOPS eval_s_A85D_process_bb1_in(C,D) -> eval_s_A85D_process_bb1_in(E,F)
     - [F=0,E=0]
     - [D+1=F]
     - [D=F,C=E]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_s_A85D_process_bb1_in/2]))

  * Invariants eval_s_A85D_process_bb1_in(A,B) -> eval_s_A85D_process_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : []
     inv    : []


