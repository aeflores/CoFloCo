This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 20+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=3,cr=eval_gen_bitlen_bb11_in/2]))+c(failed(schemes_failed,[scc=7,cr=eval_gen_bitlen_bb15_in/1])) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_gen_bitlen_start(A,B,C)

  * Non Asymptotic Upper Bound: 20+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=3,cr=eval_gen_bitlen_bb11_in/2]))+c(failed(schemes_failed,[scc=7,cr=eval_gen_bitlen_bb15_in/1])) 

  * LOOPS eval_gen_bitlen_start(D,E,F) -> eval_gen_bitlen_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_gen_bitlen_start(A,B,C) -> eval_gen_bitlen_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_gen_bitlen_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 20+6*nat(c(maximize_failed))+c(failed(schemes_failed,[scc=3,cr=eval_gen_bitlen_bb11_in/2]))+c(failed(schemes_failed,[scc=7,cr=eval_gen_bitlen_bb15_in/1])) 

  * LOOPS eval_gen_bitlen_bb0_in(C,D) -> eval_gen_bitlen_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_gen_bitlen_bb0_in(A,B) -> eval_gen_bitlen_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_gen_bitlen_bb1_in(A,B,C,D,E,F,G)

  * Non Asymptotic Upper Bound: 3+6*nat(-E+572)+c(failed(schemes_failed,[scc=3,cr=eval_gen_bitlen_bb11_in/2]))+c(failed(schemes_failed,[scc=7,cr=eval_gen_bitlen_bb15_in/1])) 

  * LOOPS loop_cont_eval_gen_bitlen_bb1_in(H,I,J,K,L,M,N) -> loop_cont_eval_gen_bitlen_bb1_in(O,P,Q,R,S,T,U)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gen_bitlen_bb1_in(A,B,C,D,E,F,G) -> loop_cont_eval_gen_bitlen_bb1_in(H,I,J,K,L,M,N)

     entry  : []
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N]
     rec    : [0=1]
     inv    : [A=H,B=I,C=J,D=K,E=L,F=M,G=N]

CRS loop_cont_eval_gen_bitlen_bb4_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=3,cr=eval_gen_bitlen_bb11_in/2]))+c(failed(schemes_failed,[scc=7,cr=eval_gen_bitlen_bb15_in/1])) 

  * LOOPS loop_cont_eval_gen_bitlen_bb4_in(E,F,G,H) -> loop_cont_eval_gen_bitlen_bb4_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gen_bitlen_bb4_in(A,B,C,D) -> loop_cont_eval_gen_bitlen_bb4_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_gen_bitlen_bb11_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_gen_bitlen_bb15_in/1])) 

  * LOOPS loop_cont_eval_gen_bitlen_bb11_in(D,E,F) -> loop_cont_eval_gen_bitlen_bb11_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gen_bitlen_bb11_in(A,B,C) -> loop_cont_eval_gen_bitlen_bb11_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_gen_bitlen_bb15_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_gen_bitlen_bb15_in(C,D) -> loop_cont_eval_gen_bitlen_bb15_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gen_bitlen_bb15_in(A,B) -> loop_cont_eval_gen_bitlen_bb15_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_gen_bitlen_bb15_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=7,cr=eval_gen_bitlen_bb15_in/1])) 

  * LOOPS eval_gen_bitlen_bb15_in(B) -> eval_gen_bitlen_bb15_in(C)
     - [0>=B+1]
     - [B>=1]

  * Ranking function: c(failed(no_rf,[scc=7,cr=eval_gen_bitlen_bb15_in/1]))

  * Invariants eval_gen_bitlen_bb15_in(A) -> eval_gen_bitlen_bb15_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []

CRS eval_gen_bitlen_bb17_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=6,cr=eval_gen_bitlen_bb17_in/2])) 

  * LOOPS eval_gen_bitlen_bb17_in(C,D) -> eval_gen_bitlen_bb17_in(E,F)
     - [D=F,C=E,0>=F+1]
     - [D=F,C=E,F>=1]
     - [D=F+1,C=E,0>=F+2]
     - [D=F+1,C=E,F>=0]

  * Ranking function: c(failed(no_rf,[scc=6,cr=eval_gen_bitlen_bb17_in/2]))

  * Invariants eval_gen_bitlen_bb17_in(A,B) -> eval_gen_bitlen_bb17_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,B>=D]
     inv    : [B>=D,A=C]

CRS eval_gen_bitlen_bb23_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gen_bitlen_bb23_in -> eval_gen_bitlen_bb23_in

  * Ranking function: N/A

  * Invariants eval_gen_bitlen_bb23_in -> eval_gen_bitlen_bb23_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gen_bitlen_bb11_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_gen_bitlen_bb11_in/2])) 

  * LOOPS eval_gen_bitlen_bb11_in(C,D) -> eval_gen_bitlen_bb11_in(E,F)
     - []

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_gen_bitlen_bb11_in/2]))

  * Invariants eval_gen_bitlen_bb11_in(A,B) -> eval_gen_bitlen_bb11_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : []
     inv    : []

CRS eval_gen_bitlen_bb12_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_gen_bitlen_bb12_in/2])) 

  * LOOPS eval_gen_bitlen_bb12_in(C,D) -> eval_gen_bitlen_bb12_in(E,F)
     - [D=F,C=E]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_gen_bitlen_bb12_in/2]))

  * Invariants eval_gen_bitlen_bb12_in(A,B) -> eval_gen_bitlen_bb12_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,B=D]
     inv    : [A=C,B=D]

CRS eval_gen_bitlen_bb4_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 6*nat(-D+572) 

  * LOOPS eval_gen_bitlen_bb4_in(F,G,H,I,J) -> eval_gen_bitlen_bb4_in(K,L,M,N,O)
     - [J+1=O,H=M,I+1=N,572>=N]
     - [I+1=N,J+1=O,H=M,572>=N]
     - [I+1=N,J+1=O,H=M,572>=N]
     - [J=O,H=M,I+1=N,572>=N]
     - [I+1=N,J=O,H=M,572>=N]
     - [I+1=N,J=O,H=M,572>=N]

  * Ranking function: nat(-I+572)

  * Invariants eval_gen_bitlen_bb4_in(A,B,C,D,E) -> eval_gen_bitlen_bb4_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [C=H,572>=I,E+I>=D+J,J>=E,I>=D+1]
     inv    : [J>=E,E+I>=D+J,C=H]

CRS eval_gen_bitlen_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(-D+16) 

  * LOOPS eval_gen_bitlen_bb1_in(E,F,G,H) -> eval_gen_bitlen_bb1_in(I,J,K,L)
     - [H+1=L,F=J,G=K,E=I,16>=L]

  * Ranking function: nat(-H+16)

  * Invariants eval_gen_bitlen_bb1_in(A,B,C,D) -> eval_gen_bitlen_bb1_in(E,F,G,H)

     entry  : [D=0]
     non-rec: [A=E,B=F,C=G,D=H,D=0]
     rec    : [C=G,B=F,A=E,D=0,H>=1]
     inv    : [H>=0,A=E,B=F,C=G,D=0]


