This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_checkInkNamesString_bb2_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_checkInkNamesString_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_checkInkNamesString_bb2_in/1])) 

  * LOOPS eval_checkInkNamesString_start(B) -> eval_checkInkNamesString_start(C)

  * Ranking function: N/A

  * Invariants eval_checkInkNamesString_start(A) -> eval_checkInkNamesString_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_checkInkNamesString_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_checkInkNamesString_bb2_in/1])) 

  * LOOPS eval_checkInkNamesString_bb0_in -> eval_checkInkNamesString_bb0_in

  * Ranking function: N/A

  * Invariants eval_checkInkNamesString_bb0_in -> eval_checkInkNamesString_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_checkInkNamesString_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_checkInkNamesString_bb2_in(D,E,F) -> loop_cont_eval_checkInkNamesString_bb2_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_checkInkNamesString_bb2_in(A,B,C) -> loop_cont_eval_checkInkNamesString_bb2_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_checkInkNamesString_bb8_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_checkInkNamesString_bb8_in(B) -> eval_checkInkNamesString_bb8_in(C)

  * Ranking function: N/A

  * Invariants eval_checkInkNamesString_bb8_in(A) -> eval_checkInkNamesString_bb8_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_checkInkNamesString_20(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_checkInkNamesString_20(C,D) -> eval_checkInkNamesString_20(E,F)

  * Ranking function: N/A

  * Invariants eval_checkInkNamesString_20(A,B) -> eval_checkInkNamesString_20(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_checkInkNamesString_21

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_checkInkNamesString_21 -> eval_checkInkNamesString_21

  * Ranking function: N/A

  * Invariants eval_checkInkNamesString_21 -> eval_checkInkNamesString_21

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_checkInkNamesString_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_checkInkNamesString_bb9_in -> eval_checkInkNamesString_bb9_in

  * Ranking function: N/A

  * Invariants eval_checkInkNamesString_bb9_in -> eval_checkInkNamesString_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_checkInkNamesString_bb2_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_checkInkNamesString_bb2_in/1])) 

  * LOOPS eval_checkInkNamesString_bb2_in(B) -> eval_checkInkNamesString_bb2_in(C)
     - [B>=1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_checkInkNamesString_bb2_in/1]))

  * Invariants eval_checkInkNamesString_bb2_in(A) -> eval_checkInkNamesString_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=1]
     inv    : []

CRS eval_checkInkNamesString_bb3_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_checkInkNamesString_bb3_in/1])) 

  * LOOPS eval_checkInkNamesString_bb3_in(B) -> eval_checkInkNamesString_bb3_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_checkInkNamesString_bb3_in/1]))

  * Invariants eval_checkInkNamesString_bb3_in(A) -> eval_checkInkNamesString_bb3_in(B)

     entry  : [A>=1]
     non-rec: [A=B,A>=1]
     rec    : [A>=1,A=B]
     inv    : [A>=1,A=B]


