This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_read_scan_integer_bb2_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_read_scan_integer_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_read_scan_integer_bb2_in/1])) 

  * LOOPS eval_read_scan_integer_start -> eval_read_scan_integer_start

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_start -> eval_read_scan_integer_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_read_scan_integer_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_read_scan_integer_bb2_in/1])) 

  * LOOPS eval_read_scan_integer_bb0_in -> eval_read_scan_integer_bb0_in

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_bb0_in -> eval_read_scan_integer_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_read_scan_integer_0

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_read_scan_integer_bb2_in/1])) 

  * LOOPS eval_read_scan_integer_0 -> eval_read_scan_integer_0

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_0 -> eval_read_scan_integer_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_read_scan_integer_1

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_read_scan_integer_bb2_in/1])) 

  * LOOPS eval_read_scan_integer_1 -> eval_read_scan_integer_1

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_1 -> eval_read_scan_integer_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_read_scan_integer_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_read_scan_integer_bb2_in/1])) 

  * LOOPS eval_read_scan_integer_3(B) -> eval_read_scan_integer_3(C)

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_3(A) -> eval_read_scan_integer_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_read_scan_integer_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_read_scan_integer_bb2_in/1])) 

  * LOOPS eval_read_scan_integer_4(B) -> eval_read_scan_integer_4(C)

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_4(A) -> eval_read_scan_integer_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_read_scan_integer_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_read_scan_integer_bb2_in(D,E,F) -> loop_cont_eval_read_scan_integer_bb2_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_read_scan_integer_bb2_in(A,B,C) -> loop_cont_eval_read_scan_integer_bb2_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_read_scan_integer__critedge_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_read_scan_integer__critedge_in(B) -> eval_read_scan_integer__critedge_in(C)

  * Ranking function: N/A

  * Invariants eval_read_scan_integer__critedge_in(A) -> eval_read_scan_integer__critedge_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_read_scan_integer_13(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_read_scan_integer_13(B) -> eval_read_scan_integer_13(C)

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_13(A) -> eval_read_scan_integer_13(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_read_scan_integer_14(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_read_scan_integer_14(B) -> eval_read_scan_integer_14(C)

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_14(A) -> eval_read_scan_integer_14(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_read_scan_integer_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_read_scan_integer_NewDefault_in -> eval_read_scan_integer_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_NewDefault_in -> eval_read_scan_integer_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_read_scan_integer_18(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_read_scan_integer_18(B) -> eval_read_scan_integer_18(C)

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_18(A) -> eval_read_scan_integer_18(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_read_scan_integer_19

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_read_scan_integer_19 -> eval_read_scan_integer_19

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_19 -> eval_read_scan_integer_19

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_read_scan_integer_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_read_scan_integer_bb8_in -> eval_read_scan_integer_bb8_in

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_bb8_in -> eval_read_scan_integer_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_read_scan_integer_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_read_scan_integer_bb9_in -> eval_read_scan_integer_bb9_in

  * Ranking function: N/A

  * Invariants eval_read_scan_integer_bb9_in -> eval_read_scan_integer_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_read_scan_integer_bb2_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_read_scan_integer_bb2_in/1])) 

  * LOOPS eval_read_scan_integer_bb2_in(B) -> eval_read_scan_integer_bb2_in(C)
     - [0>=B+2]
     - [B>=0]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_read_scan_integer_bb2_in/1]))

  * Invariants eval_read_scan_integer_bb2_in(A) -> eval_read_scan_integer_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []


