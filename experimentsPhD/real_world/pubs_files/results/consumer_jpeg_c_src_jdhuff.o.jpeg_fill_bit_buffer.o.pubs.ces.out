This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_jpeg_fill_bit_buffer_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_jpeg_fill_bit_buffer_start(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_jpeg_fill_bit_buffer_bb1_in/1])) 

  * LOOPS eval_jpeg_fill_bit_buffer_start(D,E,F) -> eval_jpeg_fill_bit_buffer_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_jpeg_fill_bit_buffer_start(A,B,C) -> eval_jpeg_fill_bit_buffer_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_jpeg_fill_bit_buffer_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_jpeg_fill_bit_buffer_bb1_in/1])) 

  * LOOPS eval_jpeg_fill_bit_buffer_bb0_in(B) -> eval_jpeg_fill_bit_buffer_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_jpeg_fill_bit_buffer_bb0_in(A) -> eval_jpeg_fill_bit_buffer_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_jpeg_fill_bit_buffer_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_jpeg_fill_bit_buffer_bb1_in(C,D) -> loop_cont_eval_jpeg_fill_bit_buffer_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_jpeg_fill_bit_buffer_bb1_in(A,B) -> loop_cont_eval_jpeg_fill_bit_buffer_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_jpeg_fill_bit_buffer_bb16_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_jpeg_fill_bit_buffer_bb16_in -> eval_jpeg_fill_bit_buffer_bb16_in

  * Ranking function: N/A

  * Invariants eval_jpeg_fill_bit_buffer_bb16_in -> eval_jpeg_fill_bit_buffer_bb16_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_jpeg_fill_bit_buffer_bb17_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_jpeg_fill_bit_buffer_bb17_in -> eval_jpeg_fill_bit_buffer_bb17_in

  * Ranking function: N/A

  * Invariants eval_jpeg_fill_bit_buffer_bb17_in -> eval_jpeg_fill_bit_buffer_bb17_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_jpeg_fill_bit_buffer_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_jpeg_fill_bit_buffer_bb1_in/1])) 

  * LOOPS eval_jpeg_fill_bit_buffer_bb1_in(B) -> eval_jpeg_fill_bit_buffer_bb1_in(C)
     - [B+8=C,24>=B]
     - [B+8=C,24>=B]
     - [24>=B]
     - [24>=B]
     - [24>=B]
     - [B+8=C,24>=B]
     - [24>=B]
     - [24>=B]
     - [24>=B]
     - [B+8=C,24>=B]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_jpeg_fill_bit_buffer_bb1_in/1]))

  * Invariants eval_jpeg_fill_bit_buffer_bb1_in(A) -> eval_jpeg_fill_bit_buffer_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [24>=A]
     inv    : []

CRS eval_jpeg_fill_bit_buffer_bb7_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_jpeg_fill_bit_buffer_bb7_in/1])) 

  * LOOPS eval_jpeg_fill_bit_buffer_bb7_in(B) -> eval_jpeg_fill_bit_buffer_bb7_in(C)
     - [B=C]
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_jpeg_fill_bit_buffer_bb7_in/1]))

  * Invariants eval_jpeg_fill_bit_buffer_bb7_in(A) -> eval_jpeg_fill_bit_buffer_bb7_in(B)

     entry  : [24>=A]
     non-rec: [A=B,24>=A]
     rec    : [24>=A,A=B]
     inv    : [24>=A,A=B]


