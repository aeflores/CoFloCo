This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 463 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_best_huffman_divide_start(A,B)

  * Non Asymptotic Upper Bound: 463 

  * LOOPS eval_best_huffman_divide_start(C,D) -> eval_best_huffman_divide_start(E,F)

  * Ranking function: N/A

  * Invariants eval_best_huffman_divide_start(A,B) -> eval_best_huffman_divide_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_best_huffman_divide_bb0_in

  * Non Asymptotic Upper Bound: 463 

  * LOOPS eval_best_huffman_divide_bb0_in -> eval_best_huffman_divide_bb0_in

  * Ranking function: N/A

  * Invariants eval_best_huffman_divide_bb0_in -> eval_best_huffman_divide_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_best_huffman_divide_0

  * Non Asymptotic Upper Bound: 463 

  * LOOPS eval_best_huffman_divide_0 -> eval_best_huffman_divide_0

  * Ranking function: N/A

  * Invariants eval_best_huffman_divide_0 -> eval_best_huffman_divide_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_best_huffman_divide_1

  * Non Asymptotic Upper Bound: 463 

  * LOOPS eval_best_huffman_divide_1 -> eval_best_huffman_divide_1

  * Ranking function: N/A

  * Invariants eval_best_huffman_divide_1 -> eval_best_huffman_divide_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_best_huffman_divide_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 418+nat(-B+25) 

  * LOOPS loop_cont_eval_best_huffman_divide_bb1_in(D,E,F) -> loop_cont_eval_best_huffman_divide_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_best_huffman_divide_bb1_in(A,B,C) -> loop_cont_eval_best_huffman_divide_bb1_in(D,E,F)

     entry  : [B>=2,A=4]
     non-rec: [A=D,B=E,C=F,B>=2,A=4]
     rec    : [0=1]
     inv    : [B>=2,A=4,D=4,B=E,C=F]

CRS loop_cont_eval_best_huffman_divide_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: 417 

  * LOOPS loop_cont_eval_best_huffman_divide_bb4_in(D,E,F) -> loop_cont_eval_best_huffman_divide_bb4_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_best_huffman_divide_bb4_in(A,B,C) -> loop_cont_eval_best_huffman_divide_bb4_in(D,E,F)

     entry  : [A=2,B=0]
     non-rec: [A=D,B=E,C=F,A=2,B=0]
     rec    : [0=1]
     inv    : [A=2,B=0,D=2,E=0,C=F]

CRS loop_cont_eval_best_huffman_divide_bb7_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_best_huffman_divide_bb7_in(C,D) -> loop_cont_eval_best_huffman_divide_bb7_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_best_huffman_divide_bb7_in(A,B) -> loop_cont_eval_best_huffman_divide_bb7_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_best_huffman_divide_bb17_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_best_huffman_divide_bb17_in -> eval_best_huffman_divide_bb17_in

  * Ranking function: N/A

  * Invariants eval_best_huffman_divide_bb17_in -> eval_best_huffman_divide_bb17_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_best_huffman_divide_bb7_in(A)

  * Non Asymptotic Upper Bound: 26*nat(-A+16) 

  * LOOPS eval_best_huffman_divide_bb7_in(B) -> eval_best_huffman_divide_bb7_in(C)
     - [15>=B,B+1=C]

  * Ranking function: nat(-B+16)

  * Invariants eval_best_huffman_divide_bb7_in(A) -> eval_best_huffman_divide_bb7_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]

CRS eval_best_huffman_divide_bb11_in(A,B)

  * Non Asymptotic Upper Bound: 3*nat(-B+8) 

  * LOOPS eval_best_huffman_divide_bb11_in(C,D) -> eval_best_huffman_divide_bb11_in(E,F)
     - [D+1=F,C=E,7>=D]
     - [D+1=F,C=E,7>=D]
     - [D+1=F,C=E,7>=D]

  * Ranking function: nat(-D+8)

  * Invariants eval_best_huffman_divide_bb11_in(A,B) -> eval_best_huffman_divide_bb11_in(C,D)

     entry  : [15>=A,A>=0,B=0]
     non-rec: [A=C,B=D,15>=A,A>=0,B=0]
     rec    : [A=C,B=0,15>=A,A>=0,D>=1]
     inv    : [D>=0,A>=0,15>=A,A=C,B=0]

CRS eval_best_huffman_divide_bb4_in(A)

  * Non Asymptotic Upper Bound: nat(-A+25) 

  * LOOPS eval_best_huffman_divide_bb4_in(B) -> eval_best_huffman_divide_bb4_in(C)
     - [B+1=C,24>=B]

  * Ranking function: nat(-B+25)

  * Invariants eval_best_huffman_divide_bb4_in(A) -> eval_best_huffman_divide_bb4_in(B)

     entry  : [A>=2]
     non-rec: [A=B,A>=2]
     rec    : [25>=B,A>=2,B>=A+1]
     inv    : [A+23>=B,B>=A,A>=2]

CRS eval_best_huffman_divide_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(-A+23) 

  * LOOPS eval_best_huffman_divide_bb1_in(B) -> eval_best_huffman_divide_bb1_in(C)
     - [B+1=C,22>=B]

  * Ranking function: nat(-B+23)

  * Invariants eval_best_huffman_divide_bb1_in(A) -> eval_best_huffman_divide_bb1_in(B)

     entry  : [A=2]
     non-rec: [A=B,A=2]
     rec    : [A=2,B>=3]
     inv    : [B>=2,A=2]


