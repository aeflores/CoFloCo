This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+nat(A)+c(failed(schemes_failed,[scc=3,cr=eval_NeXTDecode_bb4_in/2])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_NeXTDecode_start(A,B)

  * Non Asymptotic Upper Bound: 2+nat(A)+c(failed(schemes_failed,[scc=3,cr=eval_NeXTDecode_bb4_in/2])) 

  * LOOPS eval_NeXTDecode_start(C,D) -> eval_NeXTDecode_start(E,F)

  * Ranking function: N/A

  * Invariants eval_NeXTDecode_start(A,B) -> eval_NeXTDecode_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_NeXTDecode_bb0_in(A)

  * Non Asymptotic Upper Bound: 2+nat(A)+c(failed(schemes_failed,[scc=3,cr=eval_NeXTDecode_bb4_in/2])) 

  * LOOPS eval_NeXTDecode_bb0_in(B) -> eval_NeXTDecode_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_NeXTDecode_bb0_in(A) -> eval_NeXTDecode_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_NeXTDecode_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_NeXTDecode_bb4_in/2])) 

  * LOOPS loop_cont_eval_NeXTDecode_bb1_in(E,F,G,H) -> loop_cont_eval_NeXTDecode_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_NeXTDecode_bb1_in(A,B,C,D) -> loop_cont_eval_NeXTDecode_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_NeXTDecode_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_NeXTDecode_bb4_in(C,D) -> loop_cont_eval_NeXTDecode_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_NeXTDecode_bb4_in(A,B) -> loop_cont_eval_NeXTDecode_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_NeXTDecode_bb21_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_NeXTDecode_bb21_in -> eval_NeXTDecode_bb21_in

  * Ranking function: N/A

  * Invariants eval_NeXTDecode_bb21_in -> eval_NeXTDecode_bb21_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_NeXTDecode_81(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_NeXTDecode_81(B) -> eval_NeXTDecode_81(C)

  * Ranking function: N/A

  * Invariants eval_NeXTDecode_81(A) -> eval_NeXTDecode_81(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_NeXTDecode_82

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_NeXTDecode_82 -> eval_NeXTDecode_82

  * Ranking function: N/A

  * Invariants eval_NeXTDecode_82 -> eval_NeXTDecode_82

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_NeXTDecode_bb24_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_NeXTDecode_bb24_in -> eval_NeXTDecode_bb24_in

  * Ranking function: N/A

  * Invariants eval_NeXTDecode_bb24_in -> eval_NeXTDecode_bb24_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_NeXTDecode_bb4_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_NeXTDecode_bb4_in/2])) 

  * LOOPS eval_NeXTDecode_bb4_in(C,D) -> eval_NeXTDecode_bb4_in(E,F)
     - [C+F=D,C=E,D>=1]
     - [D>=1]
     - [C+F=D,C=E,D>=1]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_NeXTDecode_bb4_in/2]))

  * Invariants eval_NeXTDecode_bb4_in(A,B) -> eval_NeXTDecode_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [B>=1]
     inv    : []

CRS eval_NeXTDecode_bb11_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_NeXTDecode_bb11_in/2])) 

  * LOOPS eval_NeXTDecode_bb11_in(C,D) -> eval_NeXTDecode_bb11_in(E,F)
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_NeXTDecode_bb11_in/2]))

  * Invariants eval_NeXTDecode_bb11_in(A,B) -> eval_NeXTDecode_bb11_in(C,D)

     entry  : [B>=1]
     non-rec: [A=C,B=D,B>=1]
     rec    : [B>=1]
     inv    : [B>=1]

CRS eval_NeXTDecode_bb12_in(A,B,C)

  * Non Asymptotic Upper Bound: 2*nat(C) 

  * LOOPS eval_NeXTDecode_bb12_in(D,E,F) -> eval_NeXTDecode_bb12_in(G,H,I)
     - [D=G,E=H,F=I+1,I>=0]
     - [F=I+1,D=G,E=H,I>=0]

  * Ranking function: nat(F)

  * Invariants eval_NeXTDecode_bb12_in(A,B,C) -> eval_NeXTDecode_bb12_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [B=E,A=D,F>=0,C>=F+1]
     inv    : [C>=F,B=E,A=D]

CRS eval_NeXTDecode_bb1_in(A,B)

  * Non Asymptotic Upper Bound: nat(B) 

  * LOOPS eval_NeXTDecode_bb1_in(C,D) -> eval_NeXTDecode_bb1_in(E,F)
     - [C=E,D=F+1,F>=0]

  * Ranking function: nat(D)

  * Invariants eval_NeXTDecode_bb1_in(A,B) -> eval_NeXTDecode_bb1_in(C,D)

     entry  : [A=B]
     non-rec: [A=C,B=D,A=B]
     rec    : [A=C,A=B,D>=0,A>=D+1]
     inv    : [A>=D,A=C,A=B]


