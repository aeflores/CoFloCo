This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=11,cr=eval_zgetinterval_bb9_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=11,cr=eval_zgetinterval_bb9_in/1])) 

  * LOOPS eval_zgetinterval_start -> eval_zgetinterval_start

  * Ranking function: N/A

  * Invariants eval_zgetinterval_start -> eval_zgetinterval_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=11,cr=eval_zgetinterval_bb9_in/1])) 

  * LOOPS eval_zgetinterval_bb0_in -> eval_zgetinterval_bb0_in

  * Ranking function: N/A

  * Invariants eval_zgetinterval_bb0_in -> eval_zgetinterval_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_bb1_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=11,cr=eval_zgetinterval_bb9_in/1])) 

  * LOOPS eval_zgetinterval_bb1_in -> eval_zgetinterval_bb1_in

  * Ranking function: N/A

  * Invariants eval_zgetinterval_bb1_in -> eval_zgetinterval_bb1_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_zgetinterval_bb9_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_zgetinterval_bb9_in(C,D) -> loop_cont_eval_zgetinterval_bb9_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_zgetinterval_bb9_in(A,B) -> loop_cont_eval_zgetinterval_bb9_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_zgetinterval_bb9_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=11,cr=eval_zgetinterval_bb9_in/1])) 

  * LOOPS eval_zgetinterval_bb9_in(B) -> eval_zgetinterval_bb9_in(C)
     - [B=C+1,0>=C+2]
     - [B=C+1,C>=0]

  * Ranking function: c(failed(no_rf,[scc=11,cr=eval_zgetinterval_bb9_in/1]))

  * Invariants eval_zgetinterval_bb9_in(A) -> eval_zgetinterval_bb9_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=B+1]
     inv    : [A>=B]

CRS eval_zgetinterval_NewDefault3_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_NewDefault3_in -> eval_zgetinterval_NewDefault3_in

  * Ranking function: N/A

  * Invariants eval_zgetinterval_NewDefault3_in -> eval_zgetinterval_NewDefault3_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_bb14_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_bb14_in -> eval_zgetinterval_bb14_in

  * Ranking function: N/A

  * Invariants eval_zgetinterval_bb14_in -> eval_zgetinterval_bb14_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_54

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_54 -> eval_zgetinterval_54

  * Ranking function: N/A

  * Invariants eval_zgetinterval_54 -> eval_zgetinterval_54

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_55

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_55 -> eval_zgetinterval_55

  * Ranking function: N/A

  * Invariants eval_zgetinterval_55 -> eval_zgetinterval_55

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_52

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_52 -> eval_zgetinterval_52

  * Ranking function: N/A

  * Invariants eval_zgetinterval_52 -> eval_zgetinterval_52

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_53

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_53 -> eval_zgetinterval_53

  * Ranking function: N/A

  * Invariants eval_zgetinterval_53 -> eval_zgetinterval_53

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_NewDefault_in -> eval_zgetinterval_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_zgetinterval_NewDefault_in -> eval_zgetinterval_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_56

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_56 -> eval_zgetinterval_56

  * Ranking function: N/A

  * Invariants eval_zgetinterval_56 -> eval_zgetinterval_56

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_57

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_57 -> eval_zgetinterval_57

  * Ranking function: N/A

  * Invariants eval_zgetinterval_57 -> eval_zgetinterval_57

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zgetinterval_bb18_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zgetinterval_bb18_in -> eval_zgetinterval_bb18_in

  * Ranking function: N/A

  * Invariants eval_zgetinterval_bb18_in -> eval_zgetinterval_bb18_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


