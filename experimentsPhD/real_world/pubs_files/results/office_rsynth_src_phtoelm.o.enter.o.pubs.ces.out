This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_enter_bb1_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enter_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_enter_bb1_in/0])) 

  * LOOPS eval_enter_start -> eval_enter_start

  * Ranking function: N/A

  * Invariants eval_enter_start -> eval_enter_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enter_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_enter_bb1_in/0])) 

  * LOOPS eval_enter_bb0_in -> eval_enter_bb0_in

  * Ranking function: N/A

  * Invariants eval_enter_bb0_in -> eval_enter_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enter_0

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_enter_bb1_in/0])) 

  * LOOPS eval_enter_0 -> eval_enter_0

  * Ranking function: N/A

  * Invariants eval_enter_0 -> eval_enter_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enter_1

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_enter_bb1_in/0])) 

  * LOOPS eval_enter_1 -> eval_enter_1

  * Ranking function: N/A

  * Invariants eval_enter_1 -> eval_enter_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_enter_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_enter_bb1_in(C,D) -> loop_cont_eval_enter_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_enter_bb1_in(A,B) -> loop_cont_eval_enter_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_enter_20

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enter_20 -> eval_enter_20

  * Ranking function: N/A

  * Invariants eval_enter_20 -> eval_enter_20

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enter_21

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enter_21 -> eval_enter_21

  * Ranking function: N/A

  * Invariants eval_enter_21 -> eval_enter_21

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enter_31(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enter_31(B) -> eval_enter_31(C)

  * Ranking function: N/A

  * Invariants eval_enter_31(A) -> eval_enter_31(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_enter_32

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enter_32 -> eval_enter_32

  * Ranking function: N/A

  * Invariants eval_enter_32 -> eval_enter_32

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enter_36(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enter_36(B) -> eval_enter_36(C)

  * Ranking function: N/A

  * Invariants eval_enter_36(A) -> eval_enter_36(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_enter_37

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enter_37 -> eval_enter_37

  * Ranking function: N/A

  * Invariants eval_enter_37 -> eval_enter_37

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enter_38

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_enter_38 -> eval_enter_38

  * Ranking function: N/A

  * Invariants eval_enter_38 -> eval_enter_38

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_enter_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_enter_bb1_in/0])) 

  * LOOPS eval_enter_bb1_in -> eval_enter_bb1_in
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_enter_bb1_in/0]))

  * Invariants eval_enter_bb1_in -> eval_enter_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


