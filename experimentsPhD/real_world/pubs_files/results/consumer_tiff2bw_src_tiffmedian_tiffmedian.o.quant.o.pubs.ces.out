This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_quant_bb1_in/3])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_quant_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_quant_bb1_in/3])) 

  * LOOPS eval_quant_start(C,D) -> eval_quant_start(E,F)

  * Ranking function: N/A

  * Invariants eval_quant_start(A,B) -> eval_quant_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_quant_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_quant_bb1_in/3])) 

  * LOOPS eval_quant_bb0_in(C,D) -> eval_quant_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_quant_bb0_in(A,B) -> eval_quant_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_quant_0(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_quant_bb1_in/3])) 

  * LOOPS eval_quant_0(C,D) -> eval_quant_0(E,F)

  * Ranking function: N/A

  * Invariants eval_quant_0(A,B) -> eval_quant_0(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_quant_1(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_quant_bb1_in/3])) 

  * LOOPS eval_quant_1(D,E,F) -> eval_quant_1(G,H,I)

  * Ranking function: N/A

  * Invariants eval_quant_1(A,B,C) -> eval_quant_1(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_quant_2(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_quant_bb1_in/3])) 

  * LOOPS eval_quant_2(C,D) -> eval_quant_2(E,F)

  * Ranking function: N/A

  * Invariants eval_quant_2(A,B) -> eval_quant_2(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_quant_3(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_quant_bb1_in/3])) 

  * LOOPS eval_quant_3(D,E,F) -> eval_quant_3(G,H,I)

  * Ranking function: N/A

  * Invariants eval_quant_3(A,B,C) -> eval_quant_3(D,E,F)

     entry  : [A=C]
     non-rec: [A=D,B=E,C=F,A=C]
     rec    : [0=1]
     inv    : [A=C,A=D,B=E,A=F]

CRS eval_quant_4(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_quant_bb1_in/3])) 

  * LOOPS eval_quant_4(C,D) -> eval_quant_4(E,F)

  * Ranking function: N/A

  * Invariants eval_quant_4(A,B) -> eval_quant_4(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_quant_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_quant_bb1_in(E,F,G,H) -> loop_cont_eval_quant_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_quant_bb1_in(A,B,C,D) -> loop_cont_eval_quant_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_quant_bb7_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_quant_bb7_in(C,D) -> eval_quant_bb7_in(E,F)

  * Ranking function: N/A

  * Invariants eval_quant_bb7_in(A,B) -> eval_quant_bb7_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_quant_32(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_quant_32(C,D) -> eval_quant_32(E,F)

  * Ranking function: N/A

  * Invariants eval_quant_32(A,B) -> eval_quant_32(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_quant_33(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_quant_33(C,D) -> eval_quant_33(E,F)

  * Ranking function: N/A

  * Invariants eval_quant_33(A,B) -> eval_quant_33(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_quant_34

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_quant_34 -> eval_quant_34

  * Ranking function: N/A

  * Invariants eval_quant_34 -> eval_quant_34

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_quant_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_quant_bb1_in/3])) 

  * LOOPS eval_quant_bb1_in(D,E,F) -> eval_quant_bb1_in(G,H,I)
     - [E>=F+1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_quant_bb1_in/3]))

  * Invariants eval_quant_bb1_in(A,B,C) -> eval_quant_bb1_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B>=1,C=0]
     inv    : [C=0]

CRS eval_quant_bb3_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_quant_bb3_in/4])) 

  * LOOPS eval_quant_bb3_in(E,F,G,H) -> eval_quant_bb3_in(I,J,K,L)
     - [G=K,H+1=L,E>=L]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_quant_bb3_in/4]))

  * Invariants eval_quant_bb3_in(A,B,C,D) -> eval_quant_bb3_in(E,F,G,H)

     entry  : [B>=C+1,D=0]
     non-rec: [A=E,B=F,C=G,D=H,B>=C+1,D=0]
     rec    : [C=G,D=0,A>=1,B>=C+1,H>=1]
     inv    : [H>=0,B>=C+1,C=G,D=0]


