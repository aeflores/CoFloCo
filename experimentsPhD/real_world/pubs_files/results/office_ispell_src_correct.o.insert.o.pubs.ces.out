This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(B) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_insert_start(A,B)

  * Non Asymptotic Upper Bound: 1+nat(B) 

  * LOOPS eval_insert_start(C,D) -> eval_insert_start(E,F)

  * Ranking function: N/A

  * Invariants eval_insert_start(A,B) -> eval_insert_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_insert_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+nat(B) 

  * LOOPS eval_insert_bb0_in(C,D) -> eval_insert_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_insert_bb0_in(A,B) -> eval_insert_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_insert_0(A,B)

  * Non Asymptotic Upper Bound: 1+nat(B) 

  * LOOPS eval_insert_0(C,D) -> eval_insert_0(E,F)

  * Ranking function: N/A

  * Invariants eval_insert_0(A,B) -> eval_insert_0(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_insert_1(A,B)

  * Non Asymptotic Upper Bound: 1+nat(B) 

  * LOOPS eval_insert_1(C,D) -> eval_insert_1(E,F)

  * Ranking function: N/A

  * Invariants eval_insert_1(A,B) -> eval_insert_1(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_insert_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_insert_bb1_in(E,F,G,H) -> loop_cont_eval_insert_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_insert_bb1_in(A,B,C,D) -> loop_cont_eval_insert_bb1_in(E,F,G,H)

     entry  : [3>=A,A>=2]
     non-rec: [A=E,B=F,C=G,D=H,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=E,B=F,C=G,D=H]

CRS eval_insert_12(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_insert_12(C,D) -> eval_insert_12(E,F)

  * Ranking function: N/A

  * Invariants eval_insert_12(A,B) -> eval_insert_12(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_insert_13(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_insert_13(C,D) -> eval_insert_13(E,F)

  * Ranking function: N/A

  * Invariants eval_insert_13(A,B) -> eval_insert_13(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_insert_14(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_insert_14(B) -> eval_insert_14(C)

  * Ranking function: N/A

  * Invariants eval_insert_14(A) -> eval_insert_14(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_insert_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_insert_bb6_in -> eval_insert_bb6_in

  * Ranking function: N/A

  * Invariants eval_insert_bb6_in -> eval_insert_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_insert_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_insert_bb7_in -> eval_insert_bb7_in

  * Ranking function: N/A

  * Invariants eval_insert_bb7_in -> eval_insert_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_insert_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(B-D) 

  * LOOPS eval_insert_bb1_in(E,F,G,H) -> eval_insert_bb1_in(I,J,K,L)
     - [H+1=L,E=I,F=J,G=K,G>=H+1]

  * Ranking function: nat(G-H)

  * Invariants eval_insert_bb1_in(A,B,C,D) -> eval_insert_bb1_in(E,F,G,H)

     entry  : [B=C,D=0]
     non-rec: [A=E,B=F,C=G,D=H,B=C,D=0]
     rec    : [B=G,B=F,A=E,D=0,B=C,B>=H,H>=1]
     inv    : [H>=0,D=0,A=E,B=F,B=G,B=C]


