This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 201 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_fill_inverse_cmap_start(A,B,C)

  * Non Asymptotic Upper Bound: 201 

  * LOOPS eval_fill_inverse_cmap_start(D,E,F) -> eval_fill_inverse_cmap_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_fill_inverse_cmap_start(A,B,C) -> eval_fill_inverse_cmap_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_fill_inverse_cmap_bb0_in

  * Non Asymptotic Upper Bound: 201 

  * LOOPS eval_fill_inverse_cmap_bb0_in -> eval_fill_inverse_cmap_bb0_in

  * Ranking function: N/A

  * Invariants eval_fill_inverse_cmap_bb0_in -> eval_fill_inverse_cmap_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_fill_inverse_cmap_9(A,B,C)

  * Non Asymptotic Upper Bound: 201 

  * LOOPS eval_fill_inverse_cmap_9(D,E,F) -> eval_fill_inverse_cmap_9(G,H,I)

  * Ranking function: N/A

  * Invariants eval_fill_inverse_cmap_9(A,B,C) -> eval_fill_inverse_cmap_9(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_fill_inverse_cmap_10(A,B,C,D)

  * Non Asymptotic Upper Bound: 201 

  * LOOPS eval_fill_inverse_cmap_10(E,F,G,H) -> eval_fill_inverse_cmap_10(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_fill_inverse_cmap_10(A,B,C,D) -> eval_fill_inverse_cmap_10(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_fill_inverse_cmap_11

  * Non Asymptotic Upper Bound: 201 

  * LOOPS eval_fill_inverse_cmap_11 -> eval_fill_inverse_cmap_11

  * Ranking function: N/A

  * Invariants eval_fill_inverse_cmap_11 -> eval_fill_inverse_cmap_11

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_fill_inverse_cmap_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_fill_inverse_cmap_bb1_in(C,D) -> loop_cont_eval_fill_inverse_cmap_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_fill_inverse_cmap_bb1_in(A,B) -> loop_cont_eval_fill_inverse_cmap_bb1_in(C,D)

     entry  : [A=4]
     non-rec: [A=C,B=D,A=4]
     rec    : [0=1]
     inv    : [A=4,C=4,B=D]

CRS eval_fill_inverse_cmap_bb1_in(A)

  * Non Asymptotic Upper Bound: 50*nat(-A+4) 

  * LOOPS eval_fill_inverse_cmap_bb1_in(B) -> eval_fill_inverse_cmap_bb1_in(C)
     - [3>=B,B+1=C]

  * Ranking function: nat(-B+4)

  * Invariants eval_fill_inverse_cmap_bb1_in(A) -> eval_fill_inverse_cmap_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]

CRS eval_fill_inverse_cmap_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 6*nat(-B+8) 

  * LOOPS eval_fill_inverse_cmap_bb2_in(C,D) -> eval_fill_inverse_cmap_bb2_in(E,F)
     - [8>=F,C=E,D+1=F]

  * Ranking function: nat(-D+8)

  * Invariants eval_fill_inverse_cmap_bb2_in(A,B) -> eval_fill_inverse_cmap_bb2_in(C,D)

     entry  : [3>=A,A>=0,B=0]
     non-rec: [A=C,B=D,3>=A,A>=0,B=0]
     rec    : [A=C,B=0,3>=A,A>=0,D>=1]
     inv    : [D>=0,A>=0,3>=A,A=C,B=0]

CRS eval_fill_inverse_cmap_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(-C+4) 

  * LOOPS eval_fill_inverse_cmap_bb4_in(D,E,F) -> eval_fill_inverse_cmap_bb4_in(G,H,I)
     - [F+1=I,E=H,D=G,4>=I]

  * Ranking function: nat(-F+4)

  * Invariants eval_fill_inverse_cmap_bb4_in(A,B,C) -> eval_fill_inverse_cmap_bb4_in(D,E,F)

     entry  : [7>=B,3>=A,B>=0,A>=0,C=0]
     non-rec: [A=D,B=E,C=F,7>=B,3>=A,B>=0,A>=0,C=0]
     rec    : [B=E,A=D,C=0,3>=A,7>=B,F>=1,A>=0,B>=0]
     inv    : [B>=0,F>=0,A>=0,7>=B,3>=A,A=D,B=E,C=0]


