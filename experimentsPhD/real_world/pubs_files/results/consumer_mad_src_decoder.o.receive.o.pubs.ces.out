This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_receive_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_start(B) -> eval_receive_start(C)

  * Ranking function: N/A

  * Invariants eval_receive_start(A) -> eval_receive_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_receive_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_bb0_in(B) -> eval_receive_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_receive_bb0_in(A) -> eval_receive_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_receive_bb2_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_bb2_in(B) -> eval_receive_bb2_in(C)

  * Ranking function: N/A

  * Invariants eval_receive_bb2_in(A) -> eval_receive_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_receive_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_2(B) -> eval_receive_2(C)

  * Ranking function: N/A

  * Invariants eval_receive_2(A) -> eval_receive_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_receive_3(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_3(C,D) -> eval_receive_3(E,F)

  * Ranking function: N/A

  * Invariants eval_receive_3(A,B) -> eval_receive_3(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_receive_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_bb6_in(C,D) -> eval_receive_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants eval_receive_bb6_in(A,B) -> eval_receive_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_receive_20(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_20(C,D) -> eval_receive_20(E,F)

  * Ranking function: N/A

  * Invariants eval_receive_20(A,B) -> eval_receive_20(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_receive_21(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_21(B) -> eval_receive_21(C)

  * Ranking function: N/A

  * Invariants eval_receive_21(A) -> eval_receive_21(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_receive_bb9_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_bb9_in(B) -> eval_receive_bb9_in(C)

  * Ranking function: N/A

  * Invariants eval_receive_bb9_in(A) -> eval_receive_bb9_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_receive_25(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_25(C,D) -> eval_receive_25(E,F)

  * Ranking function: N/A

  * Invariants eval_receive_25(A,B) -> eval_receive_25(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_receive_26(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_26(C,D) -> eval_receive_26(E,F)

  * Ranking function: N/A

  * Invariants eval_receive_26(A,B) -> eval_receive_26(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_receive_bb10_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_bb10_in(C,D) -> eval_receive_bb10_in(E,F)

  * Ranking function: N/A

  * Invariants eval_receive_bb10_in(A,B) -> eval_receive_bb10_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_receive_bb11_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_receive_bb11_in(C,D) -> loop_cont_eval_receive_bb11_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_receive_bb11_in(A,B) -> loop_cont_eval_receive_bb11_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_receive_bb11_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_receive_bb11_in/2])) 

  * LOOPS eval_receive_bb11_in(C,D) -> eval_receive_bb11_in(E,F)
     - [D=0,C=E]
     - [D=0,C=E]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_receive_bb11_in/2]))

  * Invariants eval_receive_bb11_in(A,B) -> eval_receive_bb11_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [B=0,A=C]
     inv    : [A=C]

CRS eval_receive_bb15_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_receive_bb15_in -> eval_receive_bb15_in

  * Ranking function: N/A

  * Invariants eval_receive_bb15_in -> eval_receive_bb15_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


