This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_set_sample_factors_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_set_sample_factors_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_set_sample_factors_bb1_in/1])) 

  * LOOPS eval_set_sample_factors_start -> eval_set_sample_factors_start

  * Ranking function: N/A

  * Invariants eval_set_sample_factors_start -> eval_set_sample_factors_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_set_sample_factors_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_set_sample_factors_bb1_in/1])) 

  * LOOPS eval_set_sample_factors_bb0_in -> eval_set_sample_factors_bb0_in

  * Ranking function: N/A

  * Invariants eval_set_sample_factors_bb0_in -> eval_set_sample_factors_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_set_sample_factors_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_set_sample_factors_bb1_in(C,D) -> loop_cont_eval_set_sample_factors_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_set_sample_factors_bb1_in(A,B) -> loop_cont_eval_set_sample_factors_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_set_sample_factors_19

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_set_sample_factors_19 -> eval_set_sample_factors_19

  * Ranking function: N/A

  * Invariants eval_set_sample_factors_19 -> eval_set_sample_factors_19

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_set_sample_factors_20

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_set_sample_factors_20 -> eval_set_sample_factors_20

  * Ranking function: N/A

  * Invariants eval_set_sample_factors_20 -> eval_set_sample_factors_20

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_set_sample_factors_bb15_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_set_sample_factors_bb15_in -> eval_set_sample_factors_bb15_in

  * Ranking function: N/A

  * Invariants eval_set_sample_factors_bb15_in -> eval_set_sample_factors_bb15_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_set_sample_factors_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_set_sample_factors_bb1_in/1])) 

  * LOOPS eval_set_sample_factors_bb1_in(B) -> eval_set_sample_factors_bb1_in(C)
     - [9>=B]
     - [B+1=C,9>=B]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_set_sample_factors_bb1_in/1]))

  * Invariants eval_set_sample_factors_bb1_in(A) -> eval_set_sample_factors_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0]
     inv    : [A=0]

CRS eval_set_sample_factors_bb10_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_set_sample_factors_bb10_in/1])) 

  * LOOPS eval_set_sample_factors_bb10_in(B) -> eval_set_sample_factors_bb10_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_set_sample_factors_bb10_in/1]))

  * Invariants eval_set_sample_factors_bb10_in(A) -> eval_set_sample_factors_bb10_in(B)

     entry  : [9>=A]
     non-rec: [A=B,9>=A]
     rec    : [9>=A,A=B]
     inv    : [9>=A,A=B]


