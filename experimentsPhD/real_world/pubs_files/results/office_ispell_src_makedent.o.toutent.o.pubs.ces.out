This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_toutent_bb3_in/1])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_toutent_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_toutent_bb3_in/1])) 

  * LOOPS eval_toutent_start(C,D) -> eval_toutent_start(E,F)

  * Ranking function: N/A

  * Invariants eval_toutent_start(A,B) -> eval_toutent_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_toutent_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_toutent_bb3_in/1])) 

  * LOOPS eval_toutent_bb0_in(B) -> eval_toutent_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_toutent_bb0_in(A) -> eval_toutent_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_toutent_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_toutent_bb3_in/1])) 

  * LOOPS eval_toutent_0(B) -> eval_toutent_0(C)

  * Ranking function: N/A

  * Invariants eval_toutent_0(A) -> eval_toutent_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_toutent_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_toutent_bb3_in/1])) 

  * LOOPS eval_toutent_1(B) -> eval_toutent_1(C)

  * Ranking function: N/A

  * Invariants eval_toutent_1(A) -> eval_toutent_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_toutent_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_toutent_bb3_in/1])) 

  * LOOPS eval_toutent_3(B) -> eval_toutent_3(C)

  * Ranking function: N/A

  * Invariants eval_toutent_3(A) -> eval_toutent_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_toutent_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_toutent_bb3_in/1])) 

  * LOOPS eval_toutent_4(B) -> eval_toutent_4(C)

  * Ranking function: N/A

  * Invariants eval_toutent_4(A) -> eval_toutent_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_toutent_bb2_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_toutent_bb3_in/1])) 

  * LOOPS eval_toutent_bb2_in(B) -> eval_toutent_bb2_in(C)

  * Ranking function: N/A

  * Invariants eval_toutent_bb2_in(A) -> eval_toutent_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_toutent_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_toutent_bb3_in(C,D) -> loop_cont_eval_toutent_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_toutent_bb3_in(A,B) -> loop_cont_eval_toutent_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_toutent_bb3_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_toutent_bb3_in/1])) 

  * LOOPS eval_toutent_bb3_in(B) -> eval_toutent_bb3_in(C)
     - [B=C]
     - [B=C]
     - [B=C]
     - [B=C]
     - [B=C]
     - [B=C]
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_toutent_bb3_in/1]))

  * Invariants eval_toutent_bb3_in(A) -> eval_toutent_bb3_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]


