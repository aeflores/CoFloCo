This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_gx_pattern_alloc_cache_start(A,B)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_gx_pattern_alloc_cache_start(C,D) -> eval_gx_pattern_alloc_cache_start(E,F)

  * Ranking function: N/A

  * Invariants eval_gx_pattern_alloc_cache_start(A,B) -> eval_gx_pattern_alloc_cache_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_gx_pattern_alloc_cache_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_gx_pattern_alloc_cache_bb0_in(B) -> eval_gx_pattern_alloc_cache_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_gx_pattern_alloc_cache_bb0_in(A) -> eval_gx_pattern_alloc_cache_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gx_pattern_alloc_cache_0(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_gx_pattern_alloc_cache_0(B) -> eval_gx_pattern_alloc_cache_0(C)

  * Ranking function: N/A

  * Invariants eval_gx_pattern_alloc_cache_0(A) -> eval_gx_pattern_alloc_cache_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gx_pattern_alloc_cache_1(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_gx_pattern_alloc_cache_1(B) -> eval_gx_pattern_alloc_cache_1(C)

  * Ranking function: N/A

  * Invariants eval_gx_pattern_alloc_cache_1(A) -> eval_gx_pattern_alloc_cache_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gx_pattern_alloc_cache_2(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_gx_pattern_alloc_cache_2(B) -> eval_gx_pattern_alloc_cache_2(C)

  * Ranking function: N/A

  * Invariants eval_gx_pattern_alloc_cache_2(A) -> eval_gx_pattern_alloc_cache_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_gx_pattern_alloc_cache_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_gx_pattern_alloc_cache_bb3_in(C,D) -> loop_cont_eval_gx_pattern_alloc_cache_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gx_pattern_alloc_cache_bb3_in(A,B) -> loop_cont_eval_gx_pattern_alloc_cache_bb3_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_gx_pattern_alloc_cache_bb3_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_gx_pattern_alloc_cache_bb3_in(C,D) -> eval_gx_pattern_alloc_cache_bb3_in(E,F)
     - [D+1=F,C=E,C>=F]

  * Ranking function: nat(C-D)

  * Invariants eval_gx_pattern_alloc_cache_bb3_in(A,B) -> eval_gx_pattern_alloc_cache_bb3_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_gx_pattern_alloc_cache_3

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_pattern_alloc_cache_3 -> eval_gx_pattern_alloc_cache_3

  * Ranking function: N/A

  * Invariants eval_gx_pattern_alloc_cache_3 -> eval_gx_pattern_alloc_cache_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_pattern_alloc_cache_4

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_pattern_alloc_cache_4 -> eval_gx_pattern_alloc_cache_4

  * Ranking function: N/A

  * Invariants eval_gx_pattern_alloc_cache_4 -> eval_gx_pattern_alloc_cache_4

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_pattern_alloc_cache_5

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_pattern_alloc_cache_5 -> eval_gx_pattern_alloc_cache_5

  * Ranking function: N/A

  * Invariants eval_gx_pattern_alloc_cache_5 -> eval_gx_pattern_alloc_cache_5

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gx_pattern_alloc_cache_bb5_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gx_pattern_alloc_cache_bb5_in -> eval_gx_pattern_alloc_cache_bb5_in

  * Ranking function: N/A

  * Invariants eval_gx_pattern_alloc_cache_bb5_in -> eval_gx_pattern_alloc_cache_bb5_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


