This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_count_to_stopped_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_count_to_stopped_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_count_to_stopped_bb1_in/1])) 

  * LOOPS eval_count_to_stopped_start(B) -> eval_count_to_stopped_start(C)

  * Ranking function: N/A

  * Invariants eval_count_to_stopped_start(A) -> eval_count_to_stopped_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_count_to_stopped_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_count_to_stopped_bb1_in/1])) 

  * LOOPS eval_count_to_stopped_bb0_in -> eval_count_to_stopped_bb0_in

  * Ranking function: N/A

  * Invariants eval_count_to_stopped_bb0_in -> eval_count_to_stopped_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_count_to_stopped_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_count_to_stopped_bb1_in(C,D) -> loop_cont_eval_count_to_stopped_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_count_to_stopped_bb1_in(A,B) -> loop_cont_eval_count_to_stopped_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_count_to_stopped_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_count_to_stopped_bb9_in -> eval_count_to_stopped_bb9_in

  * Ranking function: N/A

  * Invariants eval_count_to_stopped_bb9_in -> eval_count_to_stopped_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_count_to_stopped_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_count_to_stopped_bb1_in/1])) 

  * LOOPS eval_count_to_stopped_bb1_in(B) -> eval_count_to_stopped_bb1_in(C)
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_count_to_stopped_bb1_in/1]))

  * Invariants eval_count_to_stopped_bb1_in(A) -> eval_count_to_stopped_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []

CRS eval_count_to_stopped_bb2_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_count_to_stopped_bb2_in/2])) 

  * LOOPS eval_count_to_stopped_bb2_in(C,D) -> eval_count_to_stopped_bb2_in(E,F)
     - [D=F+1,C=E,0>=F+2]
     - [D=F+1,C=E,F>=0]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_count_to_stopped_bb2_in/2]))

  * Invariants eval_count_to_stopped_bb2_in(A,B) -> eval_count_to_stopped_bb2_in(C,D)

     entry  : [A=B]
     non-rec: [A=C,B=D,A=B]
     rec    : [A=C,A=B,A>=D+1]
     inv    : [A>=D,A=C,A=B]


