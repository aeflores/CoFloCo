This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_parse_decibels_bb1_in/0]))+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_start

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_parse_decibels_bb1_in/0]))+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_start -> eval_parse_decibels_start

  * Ranking function: N/A

  * Invariants eval_parse_decibels_start -> eval_parse_decibels_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_bb0_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_parse_decibels_bb1_in/0]))+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_bb0_in -> eval_parse_decibels_bb0_in

  * Ranking function: N/A

  * Invariants eval_parse_decibels_bb0_in -> eval_parse_decibels_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_1

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_parse_decibels_bb1_in/0]))+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_1 -> eval_parse_decibels_1

  * Ranking function: N/A

  * Invariants eval_parse_decibels_1 -> eval_parse_decibels_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_2

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_parse_decibels_bb1_in/0]))+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_2 -> eval_parse_decibels_2

  * Ranking function: N/A

  * Invariants eval_parse_decibels_2 -> eval_parse_decibels_2

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_3

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_parse_decibels_bb1_in/0]))+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_3 -> eval_parse_decibels_3

  * Ranking function: N/A

  * Invariants eval_parse_decibels_3 -> eval_parse_decibels_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_4

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_parse_decibels_bb1_in/0]))+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_4 -> eval_parse_decibels_4

  * Ranking function: N/A

  * Invariants eval_parse_decibels_4 -> eval_parse_decibels_4

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_parse_decibels_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS loop_cont_eval_parse_decibels_bb1_in(C,D) -> loop_cont_eval_parse_decibels_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_parse_decibels_bb1_in(A,B) -> loop_cont_eval_parse_decibels_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_parse_decibels_14

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_14 -> eval_parse_decibels_14

  * Ranking function: N/A

  * Invariants eval_parse_decibels_14 -> eval_parse_decibels_14

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_15

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_15 -> eval_parse_decibels_15

  * Ranking function: N/A

  * Invariants eval_parse_decibels_15 -> eval_parse_decibels_15

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_17

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_17 -> eval_parse_decibels_17

  * Ranking function: N/A

  * Invariants eval_parse_decibels_17 -> eval_parse_decibels_17

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_18

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_18 -> eval_parse_decibels_18

  * Ranking function: N/A

  * Invariants eval_parse_decibels_18 -> eval_parse_decibels_18

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_parse_decibels_bb5_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_parse_decibels_bb5_in(C,D) -> loop_cont_eval_parse_decibels_bb5_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_parse_decibels_bb5_in(A,B) -> loop_cont_eval_parse_decibels_bb5_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_parse_decibels_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_parse_decibels_bb7_in -> eval_parse_decibels_bb7_in

  * Ranking function: N/A

  * Invariants eval_parse_decibels_bb7_in -> eval_parse_decibels_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_parse_decibels_bb5_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_parse_decibels_bb5_in/0])) 

  * LOOPS eval_parse_decibels_bb5_in -> eval_parse_decibels_bb5_in
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_parse_decibels_bb5_in/0]))

  * Invariants eval_parse_decibels_bb5_in -> eval_parse_decibels_bb5_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_parse_decibels_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_parse_decibels_bb1_in/0])) 

  * LOOPS eval_parse_decibels_bb1_in -> eval_parse_decibels_bb1_in
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_parse_decibels_bb1_in/0]))

  * Invariants eval_parse_decibels_bb1_in -> eval_parse_decibels_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


