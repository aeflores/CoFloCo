This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_alloc_forget_save_bb1_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_alloc_forget_save_bb1_in/0])) 

  * LOOPS eval_alloc_forget_save_start -> eval_alloc_forget_save_start

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_start -> eval_alloc_forget_save_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_alloc_forget_save_bb1_in/0])) 

  * LOOPS eval_alloc_forget_save_bb0_in -> eval_alloc_forget_save_bb0_in

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_bb0_in -> eval_alloc_forget_save_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_alloc_forget_save_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_alloc_forget_save_bb1_in(C,D) -> loop_cont_eval_alloc_forget_save_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_alloc_forget_save_bb1_in(A,B) -> loop_cont_eval_alloc_forget_save_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_forget_save_17

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_17 -> eval_alloc_forget_save_17

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_17 -> eval_alloc_forget_save_17

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_18

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_18 -> eval_alloc_forget_save_18

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_18 -> eval_alloc_forget_save_18

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_19

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_19 -> eval_alloc_forget_save_19

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_19 -> eval_alloc_forget_save_19

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_20

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_20 -> eval_alloc_forget_save_20

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_20 -> eval_alloc_forget_save_20

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_21

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_21 -> eval_alloc_forget_save_21

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_21 -> eval_alloc_forget_save_21

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_22

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_22 -> eval_alloc_forget_save_22

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_22 -> eval_alloc_forget_save_22

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_23

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_23 -> eval_alloc_forget_save_23

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_23 -> eval_alloc_forget_save_23

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_24

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_24 -> eval_alloc_forget_save_24

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_24 -> eval_alloc_forget_save_24

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_25

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_25 -> eval_alloc_forget_save_25

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_25 -> eval_alloc_forget_save_25

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_bb13_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_bb13_in -> eval_alloc_forget_save_bb13_in

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_bb13_in -> eval_alloc_forget_save_bb13_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_bb14_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_forget_save_bb14_in -> eval_alloc_forget_save_bb14_in

  * Ranking function: N/A

  * Invariants eval_alloc_forget_save_bb14_in -> eval_alloc_forget_save_bb14_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_forget_save_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_alloc_forget_save_bb1_in/0])) 

  * LOOPS eval_alloc_forget_save_bb1_in -> eval_alloc_forget_save_bb1_in
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_alloc_forget_save_bb1_in/0]))

  * Invariants eval_alloc_forget_save_bb1_in -> eval_alloc_forget_save_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_alloc_forget_save_bb6_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_alloc_forget_save_bb6_in/0])) 

  * LOOPS eval_alloc_forget_save_bb6_in -> eval_alloc_forget_save_bb6_in
     - []

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_alloc_forget_save_bb6_in/0]))

  * Invariants eval_alloc_forget_save_bb6_in -> eval_alloc_forget_save_bb6_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []


