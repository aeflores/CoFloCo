This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=6,cr=eval_zsearch_bb6_in/2])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zsearch_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=6,cr=eval_zsearch_bb6_in/2])) 

  * LOOPS eval_zsearch_start -> eval_zsearch_start

  * Ranking function: N/A

  * Invariants eval_zsearch_start -> eval_zsearch_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zsearch_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=6,cr=eval_zsearch_bb6_in/2])) 

  * LOOPS eval_zsearch_bb0_in -> eval_zsearch_bb0_in

  * Ranking function: N/A

  * Invariants eval_zsearch_bb0_in -> eval_zsearch_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_zsearch_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_zsearch_bb6_in(C,D) -> loop_cont_eval_zsearch_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_zsearch_bb6_in(A,B) -> loop_cont_eval_zsearch_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_zsearch_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zsearch_bb9_in -> eval_zsearch_bb9_in

  * Ranking function: N/A

  * Invariants eval_zsearch_bb9_in -> eval_zsearch_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zsearch_38

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zsearch_38 -> eval_zsearch_38

  * Ranking function: N/A

  * Invariants eval_zsearch_38 -> eval_zsearch_38

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zsearch_39

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zsearch_39 -> eval_zsearch_39

  * Ranking function: N/A

  * Invariants eval_zsearch_39 -> eval_zsearch_39

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zsearch_bb6_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=6,cr=eval_zsearch_bb6_in/2])) 

  * LOOPS eval_zsearch_bb6_in(C,D) -> eval_zsearch_bb6_in(E,F)
     - [D=F+1,C=E,0>=F+2]
     - [D=F+1,C=E,F>=0]
     - [D=F+1,C=E,0>=F+2]
     - [D=F+1,C=E,F>=0]

  * Ranking function: c(failed(no_rf,[scc=6,cr=eval_zsearch_bb6_in/2]))

  * Invariants eval_zsearch_bb6_in(A,B) -> eval_zsearch_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,B>=D+1]
     inv    : [B>=D,A=C]

CRS eval_zsearch_64

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zsearch_64 -> eval_zsearch_64

  * Ranking function: N/A

  * Invariants eval_zsearch_64 -> eval_zsearch_64

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zsearch_65

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zsearch_65 -> eval_zsearch_65

  * Ranking function: N/A

  * Invariants eval_zsearch_65 -> eval_zsearch_65

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zsearch_59

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zsearch_59 -> eval_zsearch_59

  * Ranking function: N/A

  * Invariants eval_zsearch_59 -> eval_zsearch_59

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zsearch_60

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zsearch_60 -> eval_zsearch_60

  * Ranking function: N/A

  * Invariants eval_zsearch_60 -> eval_zsearch_60

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zsearch_bb18_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zsearch_bb18_in -> eval_zsearch_bb18_in

  * Ranking function: N/A

  * Invariants eval_zsearch_bb18_in -> eval_zsearch_bb18_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


