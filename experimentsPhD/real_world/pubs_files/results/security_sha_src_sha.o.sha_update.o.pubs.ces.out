This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(1*A)/64 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_sha_update_start(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/64 

  * LOOPS eval_sha_update_start(B) -> eval_sha_update_start(C)

  * Ranking function: N/A

  * Invariants eval_sha_update_start(A) -> eval_sha_update_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_sha_update_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/64 

  * LOOPS eval_sha_update_bb0_in(B) -> eval_sha_update_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_sha_update_bb0_in(A) -> eval_sha_update_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_sha_update_bb2_in(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/64 

  * LOOPS eval_sha_update_bb2_in(B) -> eval_sha_update_bb2_in(C)

  * Ranking function: N/A

  * Invariants eval_sha_update_bb2_in(A) -> eval_sha_update_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_sha_update_bb3_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_sha_update_bb3_in(D,E,F) -> loop_cont_eval_sha_update_bb3_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_sha_update_bb3_in(A,B,C) -> loop_cont_eval_sha_update_bb3_in(D,E,F)

     entry  : [63>=B,A=2]
     non-rec: [A=D,B=E,C=F,63>=B,A=2]
     rec    : [0=1]
     inv    : [63>=B,A=2,D=2,B=E,C=F]

CRS eval_sha_update_27(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_sha_update_27(B) -> eval_sha_update_27(C)

  * Ranking function: N/A

  * Invariants eval_sha_update_27(A) -> eval_sha_update_27(B)

     entry  : [63>=A]
     non-rec: [A=B,63>=A]
     rec    : [0=1]
     inv    : [63>=A,A=B]

CRS eval_sha_update_28

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_sha_update_28 -> eval_sha_update_28

  * Ranking function: N/A

  * Invariants eval_sha_update_28 -> eval_sha_update_28

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_sha_update_bb3_in(A)

  * Non Asymptotic Upper Bound: nat(A)/64 

  * LOOPS eval_sha_update_bb3_in(B) -> eval_sha_update_bb3_in(C)
     - [B=C+64,B>=64]

  * Ranking function: nat(B/64)

  * Invariants eval_sha_update_bb3_in(A) -> eval_sha_update_bb3_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=0,A>=B+64]
     inv    : [A>=B]


