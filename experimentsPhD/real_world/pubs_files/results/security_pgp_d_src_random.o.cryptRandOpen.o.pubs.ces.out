This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_start(B) -> eval_cryptRandOpen_start(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_start(A) -> eval_cryptRandOpen_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_bb0_in(B) -> eval_cryptRandOpen_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_bb0_in(A) -> eval_cryptRandOpen_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_2(B) -> eval_cryptRandOpen_2(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_2(A) -> eval_cryptRandOpen_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_3(B) -> eval_cryptRandOpen_3(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_3(A) -> eval_cryptRandOpen_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_4(B) -> eval_cryptRandOpen_4(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_4(A) -> eval_cryptRandOpen_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_5(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_5(B) -> eval_cryptRandOpen_5(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_5(A) -> eval_cryptRandOpen_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_7(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_7(B) -> eval_cryptRandOpen_7(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_7(A) -> eval_cryptRandOpen_7(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_8(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_8(B) -> eval_cryptRandOpen_8(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_8(A) -> eval_cryptRandOpen_8(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_bb4_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_bb4_in(B) -> eval_cryptRandOpen_bb4_in(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_bb4_in(A) -> eval_cryptRandOpen_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_9(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_9(B) -> eval_cryptRandOpen_9(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_9(A) -> eval_cryptRandOpen_9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_10(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_10(B) -> eval_cryptRandOpen_10(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_10(A) -> eval_cryptRandOpen_10(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_cryptRandOpen_bb7_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_cryptRandOpen_bb7_in(D,E,F) -> loop_cont_eval_cryptRandOpen_bb7_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_cryptRandOpen_bb7_in(A,B,C) -> loop_cont_eval_cryptRandOpen_bb7_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_cryptRandOpen_17(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cryptRandOpen_17(B) -> eval_cryptRandOpen_17(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_17(A) -> eval_cryptRandOpen_17(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_18(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cryptRandOpen_18(B) -> eval_cryptRandOpen_18(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_18(A) -> eval_cryptRandOpen_18(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_cryptRandOpen_19

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cryptRandOpen_19 -> eval_cryptRandOpen_19

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_19 -> eval_cryptRandOpen_19

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cryptRandOpen_bb7_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_cryptRandOpen_bb7_in/1])) 

  * LOOPS eval_cryptRandOpen_bb7_in(B) -> eval_cryptRandOpen_bb7_in(C)
     - [B=C]
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_cryptRandOpen_bb7_in/1]))

  * Invariants eval_cryptRandOpen_bb7_in(A) -> eval_cryptRandOpen_bb7_in(B)

     entry  : [A=1]
     non-rec: [A=B,A=1]
     rec    : [A=1,B=1]
     inv    : [A=1,B=1]

CRS eval_cryptRandOpen_12(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cryptRandOpen_12(B) -> eval_cryptRandOpen_12(C)

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_12(A) -> eval_cryptRandOpen_12(B)

     entry  : [A=1]
     non-rec: [A=B,A=1]
     rec    : [0=1]
     inv    : [A=1,B=1]

CRS eval_cryptRandOpen_13

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cryptRandOpen_13 -> eval_cryptRandOpen_13

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_13 -> eval_cryptRandOpen_13

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_cryptRandOpen_bb12_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_cryptRandOpen_bb12_in -> eval_cryptRandOpen_bb12_in

  * Ranking function: N/A

  * Invariants eval_cryptRandOpen_bb12_in -> eval_cryptRandOpen_bb12_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


