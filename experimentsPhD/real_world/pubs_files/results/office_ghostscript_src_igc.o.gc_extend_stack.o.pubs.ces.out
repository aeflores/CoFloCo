This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_gc_extend_stack_bb2_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_gc_extend_stack_bb2_in/1])) 

  * LOOPS eval_gc_extend_stack_start -> eval_gc_extend_stack_start

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_start -> eval_gc_extend_stack_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_gc_extend_stack_bb2_in/1])) 

  * LOOPS eval_gc_extend_stack_bb0_in -> eval_gc_extend_stack_bb0_in

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_bb0_in -> eval_gc_extend_stack_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_gc_extend_stack_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_gc_extend_stack_bb2_in(D,E,F) -> loop_cont_eval_gc_extend_stack_bb2_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_gc_extend_stack_bb2_in(A,B,C) -> loop_cont_eval_gc_extend_stack_bb2_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_gc_extend_stack_bb5_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_bb5_in(B) -> eval_gc_extend_stack_bb5_in(C)

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_bb5_in(A) -> eval_gc_extend_stack_bb5_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gc_extend_stack_22(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_22(B) -> eval_gc_extend_stack_22(C)

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_22(A) -> eval_gc_extend_stack_22(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gc_extend_stack_23

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_23 -> eval_gc_extend_stack_23

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_23 -> eval_gc_extend_stack_23

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_11

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_11 -> eval_gc_extend_stack_11

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_11 -> eval_gc_extend_stack_11

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_12

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_12 -> eval_gc_extend_stack_12

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_12 -> eval_gc_extend_stack_12

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_13

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_13 -> eval_gc_extend_stack_13

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_13 -> eval_gc_extend_stack_13

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_14

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_14 -> eval_gc_extend_stack_14

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_14 -> eval_gc_extend_stack_14

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_15(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_15(B) -> eval_gc_extend_stack_15(C)

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_15(A) -> eval_gc_extend_stack_15(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_gc_extend_stack_16

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_16 -> eval_gc_extend_stack_16

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_16 -> eval_gc_extend_stack_16

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_17

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_17 -> eval_gc_extend_stack_17

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_17 -> eval_gc_extend_stack_17

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_bb8_in -> eval_gc_extend_stack_bb8_in

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_bb8_in -> eval_gc_extend_stack_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_bb10_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_bb10_in -> eval_gc_extend_stack_bb10_in

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_bb10_in -> eval_gc_extend_stack_bb10_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_gc_extend_stack_bb2_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_gc_extend_stack_bb2_in/1])) 

  * LOOPS eval_gc_extend_stack_bb2_in(B) -> eval_gc_extend_stack_bb2_in(C)
     - [B>=50]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_gc_extend_stack_bb2_in/1]))

  * Invariants eval_gc_extend_stack_bb2_in(A) -> eval_gc_extend_stack_bb2_in(B)

     entry  : [A=4083]
     non-rec: [A=B,A=4083]
     rec    : [A=4083]
     inv    : [A=4083]

CRS eval_gc_extend_stack_bb13_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_gc_extend_stack_bb13_in -> eval_gc_extend_stack_bb13_in

  * Ranking function: N/A

  * Invariants eval_gc_extend_stack_bb13_in -> eval_gc_extend_stack_bb13_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


