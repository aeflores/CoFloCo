This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_stack_param_read_bb1_in/2])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_stack_param_read_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_stack_param_read_bb1_in/2])) 

  * LOOPS eval_stack_param_read_start -> eval_stack_param_read_start

  * Ranking function: N/A

  * Invariants eval_stack_param_read_start -> eval_stack_param_read_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_stack_param_read_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_stack_param_read_bb1_in/2])) 

  * LOOPS eval_stack_param_read_bb0_in -> eval_stack_param_read_bb0_in

  * Ranking function: N/A

  * Invariants eval_stack_param_read_bb0_in -> eval_stack_param_read_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_stack_param_read_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_stack_param_read_bb1_in(D,E,F) -> loop_cont_eval_stack_param_read_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_stack_param_read_bb1_in(A,B,C) -> loop_cont_eval_stack_param_read_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_stack_param_read_11(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_stack_param_read_11(B) -> eval_stack_param_read_11(C)

  * Ranking function: N/A

  * Invariants eval_stack_param_read_11(A) -> eval_stack_param_read_11(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_stack_param_read_12

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_stack_param_read_12 -> eval_stack_param_read_12

  * Ranking function: N/A

  * Invariants eval_stack_param_read_12 -> eval_stack_param_read_12

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_stack_param_read_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_stack_param_read_bb6_in -> eval_stack_param_read_bb6_in

  * Ranking function: N/A

  * Invariants eval_stack_param_read_bb6_in -> eval_stack_param_read_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_stack_param_read_bb1_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_stack_param_read_bb1_in/2])) 

  * LOOPS eval_stack_param_read_bb1_in(C,D) -> eval_stack_param_read_bb1_in(E,F)
     - [D+2=F,C=E+1,0>=C+1]
     - [D+2=F,C=E+1,C>=1]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_stack_param_read_bb1_in/2]))

  * Invariants eval_stack_param_read_bb1_in(A,B) -> eval_stack_param_read_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [2*A+B=2*C+D,A>=C+1]
     inv    : [D>=B,2*A+B=2*C+D]


