This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1]))+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_mp_mod_start

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1]))+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS eval_mp_mod_start -> eval_mp_mod_start

  * Ranking function: N/A

  * Invariants eval_mp_mod_start -> eval_mp_mod_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_mp_mod_bb0_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1]))+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS eval_mp_mod_bb0_in -> eval_mp_mod_bb0_in

  * Ranking function: N/A

  * Invariants eval_mp_mod_bb0_in -> eval_mp_mod_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_mp_mod_3

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1]))+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS eval_mp_mod_3 -> eval_mp_mod_3

  * Ranking function: N/A

  * Invariants eval_mp_mod_3 -> eval_mp_mod_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_mp_mod_4

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1]))+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS eval_mp_mod_4 -> eval_mp_mod_4

  * Ranking function: N/A

  * Invariants eval_mp_mod_4 -> eval_mp_mod_4

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_mp_mod_bb2_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1]))+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS eval_mp_mod_bb2_in -> eval_mp_mod_bb2_in

  * Ranking function: N/A

  * Invariants eval_mp_mod_bb2_in -> eval_mp_mod_bb2_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_mp_mod_6

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1]))+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS eval_mp_mod_6 -> eval_mp_mod_6

  * Ranking function: N/A

  * Invariants eval_mp_mod_6 -> eval_mp_mod_6

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_mp_mod_7

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1]))+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS eval_mp_mod_7 -> eval_mp_mod_7

  * Ranking function: N/A

  * Invariants eval_mp_mod_7 -> eval_mp_mod_7

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_mp_mod_8

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1]))+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS eval_mp_mod_8 -> eval_mp_mod_8

  * Ranking function: N/A

  * Invariants eval_mp_mod_8 -> eval_mp_mod_8

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_mp_mod_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS loop_cont_eval_mp_mod_bb4_in(D,E,F) -> loop_cont_eval_mp_mod_bb4_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_mp_mod_bb4_in(A,B,C) -> loop_cont_eval_mp_mod_bb4_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_mp_mod_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_mp_mod_bb6_in(C,D) -> loop_cont_eval_mp_mod_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_mp_mod_bb6_in(A,B) -> loop_cont_eval_mp_mod_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_mp_mod_bb6_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_mp_mod_bb6_in/1])) 

  * LOOPS eval_mp_mod_bb6_in(B) -> eval_mp_mod_bb6_in(C)
     - [B=C+1,0>=C+2]
     - [B=C+1,0>=C+2]
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]
     - [B=C+1,0>=C+2]
     - [B=C+1,0>=C+2]
     - [B=C+1,C>=0]
     - [B=C+1,C>=0]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_mp_mod_bb6_in/1]))

  * Invariants eval_mp_mod_bb6_in(A) -> eval_mp_mod_bb6_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=B+1]
     inv    : [A>=B]

CRS eval_mp_mod_bb4_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_mp_mod_bb4_in/1])) 

  * LOOPS eval_mp_mod_bb4_in(B) -> eval_mp_mod_bb4_in(C)
     - [B=C+1]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_mp_mod_bb4_in/1]))

  * Invariants eval_mp_mod_bb4_in(A) -> eval_mp_mod_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A>=B+1]
     inv    : [A>=B]

CRS eval_mp_mod_bb10_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_mp_mod_bb10_in -> eval_mp_mod_bb10_in

  * Ranking function: N/A

  * Invariants eval_mp_mod_bb10_in -> eval_mp_mod_bb10_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


