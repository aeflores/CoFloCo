This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_treelookup_bb2_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_treelookup_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_treelookup_bb2_in/1])) 

  * LOOPS eval_treelookup_start(B) -> eval_treelookup_start(C)

  * Ranking function: N/A

  * Invariants eval_treelookup_start(A) -> eval_treelookup_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_treelookup_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_treelookup_bb2_in/1])) 

  * LOOPS eval_treelookup_bb0_in(B) -> eval_treelookup_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_treelookup_bb0_in(A) -> eval_treelookup_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_treelookup_2(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_treelookup_bb2_in/1])) 

  * LOOPS eval_treelookup_2(B) -> eval_treelookup_2(C)

  * Ranking function: N/A

  * Invariants eval_treelookup_2(A) -> eval_treelookup_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_treelookup_3(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_treelookup_bb2_in/1])) 

  * LOOPS eval_treelookup_3(B) -> eval_treelookup_3(C)

  * Ranking function: N/A

  * Invariants eval_treelookup_3(A) -> eval_treelookup_3(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_treelookup_4(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_treelookup_bb2_in/1])) 

  * LOOPS eval_treelookup_4(C,D) -> eval_treelookup_4(E,F)

  * Ranking function: N/A

  * Invariants eval_treelookup_4(A,B) -> eval_treelookup_4(C,D)

     entry  : [A=B]
     non-rec: [A=C,B=D,A=B]
     rec    : [0=1]
     inv    : [A=B,A=C,A=D]

CRS eval_treelookup_5(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval_treelookup_bb2_in/1])) 

  * LOOPS eval_treelookup_5(B) -> eval_treelookup_5(C)

  * Ranking function: N/A

  * Invariants eval_treelookup_5(A) -> eval_treelookup_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_treelookup_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_treelookup_bb2_in(C,D) -> loop_cont_eval_treelookup_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_treelookup_bb2_in(A,B) -> loop_cont_eval_treelookup_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_treelookup__critedge_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_treelookup__critedge_in -> eval_treelookup__critedge_in

  * Ranking function: N/A

  * Invariants eval_treelookup__critedge_in -> eval_treelookup__critedge_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_treelookup_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_treelookup_bb7_in -> eval_treelookup_bb7_in

  * Ranking function: N/A

  * Invariants eval_treelookup_bb7_in -> eval_treelookup_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_treelookup_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_treelookup_bb8_in -> eval_treelookup_bb8_in

  * Ranking function: N/A

  * Invariants eval_treelookup_bb8_in -> eval_treelookup_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_treelookup_bb2_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_treelookup_bb2_in/1])) 

  * LOOPS eval_treelookup_bb2_in(B) -> eval_treelookup_bb2_in(C)
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_treelookup_bb2_in/1]))

  * Invariants eval_treelookup_bb2_in(A) -> eval_treelookup_bb2_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []

CRS eval_treelookup_bb5_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_treelookup_bb5_in/1])) 

  * LOOPS eval_treelookup_bb5_in(B) -> eval_treelookup_bb5_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_treelookup_bb5_in/1]))

  * Invariants eval_treelookup_bb5_in(A) -> eval_treelookup_bb5_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]


