This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D,E) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+2*nat(c(maximize_failed))+nat(c(maximize_failed))*nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$(F,G,H,I,J) -> $pubs_aux_entry$(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D,E) -> $pubs_aux_entry$(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_zoom_y_start(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 1+2*nat(c(maximize_failed))+nat(c(maximize_failed))*nat(c(maximize_failed)) 

  * LOOPS eval_zoom_y_start(F,G,H,I,J) -> eval_zoom_y_start(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants eval_zoom_y_start(A,B,C,D,E) -> eval_zoom_y_start(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_zoom_y_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+2*nat(c(maximize_failed))+nat(c(maximize_failed))*nat(c(maximize_failed)) 

  * LOOPS eval_zoom_y_bb0_in(C,D) -> eval_zoom_y_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_zoom_y_bb0_in(A,B) -> eval_zoom_y_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_zoom_y_bb8_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_zoom_y_bb8_in(C,D) -> loop_cont_eval_zoom_y_bb8_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_zoom_y_bb8_in(A,B) -> loop_cont_eval_zoom_y_bb8_in(C,D)

     entry  : [A=4]
     non-rec: [A=C,B=D,A=4]
     rec    : [0=1]
     inv    : [A=4,C=4,B=D]

CRS loop_cont_eval_zoom_y_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_zoom_y_bb1_in(C,D) -> loop_cont_eval_zoom_y_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_zoom_y_bb1_in(A,B) -> loop_cont_eval_zoom_y_bb1_in(C,D)

     entry  : [A=4]
     non-rec: [A=C,B=D,A=4]
     rec    : [0=1]
     inv    : [A=4,C=4,B=D]

CRS eval_zoom_y_bb15_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_zoom_y_bb15_in -> eval_zoom_y_bb15_in

  * Ranking function: N/A

  * Invariants eval_zoom_y_bb15_in -> eval_zoom_y_bb15_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_zoom_y_bb8_in(A,B,C)

  * Non Asymptotic Upper Bound: 2*nat(A-C)+nat(B)*nat(A-C) 

  * LOOPS eval_zoom_y_bb8_in(D,E,F) -> eval_zoom_y_bb8_in(G,H,I)
     - [D>=I,F+1=I,E=H,D=G]

  * Ranking function: nat(D-F)

  * Invariants eval_zoom_y_bb8_in(A,B,C) -> eval_zoom_y_bb8_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,A>=F,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]

CRS eval_zoom_y_bb10_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(D) 

  * LOOPS eval_zoom_y_bb10_in(E,F,G,H) -> eval_zoom_y_bb10_in(I,J,K,L)
     - [E=I,F=J,G=K,H=L+1,L>=0]

  * Ranking function: nat(H)

  * Invariants eval_zoom_y_bb10_in(A,B,C,D) -> eval_zoom_y_bb10_in(E,F,G,H)

     entry  : [A>=C+1,C>=0,B=D]
     non-rec: [A=E,B=F,C=G,D=H,A>=C+1,C>=0,B=D]
     rec    : [C=G,B=F,A=E,B=D,A>=C+1,H>=0,C>=0,B>=H+1]
     inv    : [B>=H,A>=C+1,C>=0,A=E,B=F,C=G,B=D]

CRS eval_zoom_y_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 2*nat(A-C)+nat(B)*nat(A-C) 

  * LOOPS eval_zoom_y_bb1_in(D,E,F) -> eval_zoom_y_bb1_in(G,H,I)
     - [D>=I,F+1=I,E=H,D=G]

  * Ranking function: nat(D-F)

  * Invariants eval_zoom_y_bb1_in(A,B,C) -> eval_zoom_y_bb1_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [B=E,A=D,C=0,A>=F,F>=1]
     inv    : [F>=0,A=D,B=E,C=0]

CRS eval_zoom_y_bb3_in(A,B,C,D)

  * Non Asymptotic Upper Bound: nat(D) 

  * LOOPS eval_zoom_y_bb3_in(E,F,G,H) -> eval_zoom_y_bb3_in(I,J,K,L)
     - [E=I,F=J,G=K,H=L+1,L>=0]

  * Ranking function: nat(H)

  * Invariants eval_zoom_y_bb3_in(A,B,C,D) -> eval_zoom_y_bb3_in(E,F,G,H)

     entry  : [A>=C+1,C>=0,B=D]
     non-rec: [A=E,B=F,C=G,D=H,A>=C+1,C>=0,B=D]
     rec    : [C=G,B=F,A=E,B=D,A>=C+1,H>=0,C>=0,B>=H+1]
     inv    : [B>=H,A>=C+1,C>=0,A=E,B=F,C=G,B=D]


