This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_add_chunk_start(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS eval_alloc_add_chunk_start(C,D) -> eval_alloc_add_chunk_start(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_start(A,B) -> eval_alloc_add_chunk_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_add_chunk_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS eval_alloc_add_chunk_bb0_in(C,D) -> eval_alloc_add_chunk_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_bb0_in(A,B) -> eval_alloc_add_chunk_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_add_chunk_0(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS eval_alloc_add_chunk_0(C,D) -> eval_alloc_add_chunk_0(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_0(A,B) -> eval_alloc_add_chunk_0(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_add_chunk_1(A,B)

  * Non Asymptotic Upper Bound: 1 

  * LOOPS eval_alloc_add_chunk_1(C,D) -> eval_alloc_add_chunk_1(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_1(A,B) -> eval_alloc_add_chunk_1(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_alloc_add_chunk_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_alloc_add_chunk_bb4_in(D,E,F) -> loop_cont_eval_alloc_add_chunk_bb4_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_alloc_add_chunk_bb4_in(A,B,C) -> loop_cont_eval_alloc_add_chunk_bb4_in(D,E,F)

     entry  : [A=2]
     non-rec: [A=D,B=E,C=F,A=2]
     rec    : [0=1]
     inv    : [A=2,D=2,B=E,C=F]

CRS eval_alloc_add_chunk_23(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_23(B) -> eval_alloc_add_chunk_23(C)

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_23(A) -> eval_alloc_add_chunk_23(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_add_chunk_24(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_24(B) -> eval_alloc_add_chunk_24(C)

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_24(A) -> eval_alloc_add_chunk_24(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_add_chunk_29(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_29(B) -> eval_alloc_add_chunk_29(C)

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_29(A) -> eval_alloc_add_chunk_29(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_add_chunk_30

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_30 -> eval_alloc_add_chunk_30

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_30 -> eval_alloc_add_chunk_30

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_add_chunk_31

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_31 -> eval_alloc_add_chunk_31

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_31 -> eval_alloc_add_chunk_31

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_add_chunk_32

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_32 -> eval_alloc_add_chunk_32

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_32 -> eval_alloc_add_chunk_32

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_add_chunk_33

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_33 -> eval_alloc_add_chunk_33

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_33 -> eval_alloc_add_chunk_33

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_add_chunk_25

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_25 -> eval_alloc_add_chunk_25

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_25 -> eval_alloc_add_chunk_25

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_add_chunk_26

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_26 -> eval_alloc_add_chunk_26

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_26 -> eval_alloc_add_chunk_26

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_add_chunk_27

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_27 -> eval_alloc_add_chunk_27

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_27 -> eval_alloc_add_chunk_27

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_add_chunk_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_bb9_in -> eval_alloc_add_chunk_bb9_in

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_bb9_in -> eval_alloc_add_chunk_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_add_chunk_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_add_chunk_bb4_in(C,D) -> eval_alloc_add_chunk_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_add_chunk_bb4_in(A,B) -> eval_alloc_add_chunk_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]


