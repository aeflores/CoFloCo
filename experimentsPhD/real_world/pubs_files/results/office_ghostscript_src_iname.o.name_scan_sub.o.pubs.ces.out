This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_name_scan_sub_bb2_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_name_scan_sub_bb9_in/0])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_name_scan_sub_start(A,B)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_name_scan_sub_bb2_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_name_scan_sub_bb9_in/0])) 

  * LOOPS eval_name_scan_sub_start(C,D) -> eval_name_scan_sub_start(E,F)

  * Ranking function: N/A

  * Invariants eval_name_scan_sub_start(A,B) -> eval_name_scan_sub_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_name_scan_sub_bb0_in(A)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=2,cr=eval_name_scan_sub_bb2_in/0]))+c(failed(schemes_failed,[scc=3,cr=eval_name_scan_sub_bb9_in/0])) 

  * LOOPS eval_name_scan_sub_bb0_in(B) -> eval_name_scan_sub_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_name_scan_sub_bb0_in(A) -> eval_name_scan_sub_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_name_scan_sub_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_name_scan_sub_bb9_in/0])) 

  * LOOPS loop_cont_eval_name_scan_sub_bb2_in(C,D) -> loop_cont_eval_name_scan_sub_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_name_scan_sub_bb2_in(A,B) -> loop_cont_eval_name_scan_sub_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_name_scan_sub_25

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_name_scan_sub_bb9_in/0])) 

  * LOOPS eval_name_scan_sub_25 -> eval_name_scan_sub_25

  * Ranking function: N/A

  * Invariants eval_name_scan_sub_25 -> eval_name_scan_sub_25

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_name_scan_sub_26

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_name_scan_sub_bb9_in/0])) 

  * LOOPS eval_name_scan_sub_26 -> eval_name_scan_sub_26

  * Ranking function: N/A

  * Invariants eval_name_scan_sub_26 -> eval_name_scan_sub_26

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_name_scan_sub_bb9_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_name_scan_sub_bb9_in(C,D) -> loop_cont_eval_name_scan_sub_bb9_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_name_scan_sub_bb9_in(A,B) -> loop_cont_eval_name_scan_sub_bb9_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_name_scan_sub_bb9_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_name_scan_sub_bb9_in/0])) 

  * LOOPS eval_name_scan_sub_bb9_in -> eval_name_scan_sub_bb9_in
     - []

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_name_scan_sub_bb9_in/0]))

  * Invariants eval_name_scan_sub_bb9_in -> eval_name_scan_sub_bb9_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_name_scan_sub_bb2_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_name_scan_sub_bb2_in/0])) 

  * LOOPS eval_name_scan_sub_bb2_in -> eval_name_scan_sub_bb2_in
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_name_scan_sub_bb2_in/0]))

  * Invariants eval_name_scan_sub_bb2_in -> eval_name_scan_sub_bb2_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval_name_scan_sub_bb14_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_name_scan_sub_bb14_in -> eval_name_scan_sub_bb14_in

  * Ranking function: N/A

  * Invariants eval_name_scan_sub_bb14_in -> eval_name_scan_sub_bb14_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


