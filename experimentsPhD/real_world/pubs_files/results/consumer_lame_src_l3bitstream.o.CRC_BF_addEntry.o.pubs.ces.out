This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_CRC_BF_addEntry_bb1_in/3])) 

  * LOOPS $pubs_aux_entry$(D,E,F) -> $pubs_aux_entry$(G,H,I)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C) -> $pubs_aux_entry$(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_CRC_BF_addEntry_start(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_CRC_BF_addEntry_bb1_in/3])) 

  * LOOPS eval_CRC_BF_addEntry_start(D,E,F) -> eval_CRC_BF_addEntry_start(G,H,I)

  * Ranking function: N/A

  * Invariants eval_CRC_BF_addEntry_start(A,B,C) -> eval_CRC_BF_addEntry_start(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_CRC_BF_addEntry_bb0_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_CRC_BF_addEntry_bb1_in/3])) 

  * LOOPS eval_CRC_BF_addEntry_bb0_in(D,E,F) -> eval_CRC_BF_addEntry_bb0_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_CRC_BF_addEntry_bb0_in(A,B,C) -> eval_CRC_BF_addEntry_bb0_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_CRC_BF_addEntry_bb1_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_CRC_BF_addEntry_bb1_in(F,G,H,I,J) -> loop_cont_eval_CRC_BF_addEntry_bb1_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_CRC_BF_addEntry_bb1_in(A,B,C,D,E) -> loop_cont_eval_CRC_BF_addEntry_bb1_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_CRC_BF_addEntry_20(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_CRC_BF_addEntry_20(D,E,F) -> eval_CRC_BF_addEntry_20(G,H,I)

  * Ranking function: N/A

  * Invariants eval_CRC_BF_addEntry_20(A,B,C) -> eval_CRC_BF_addEntry_20(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_CRC_BF_addEntry_21

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_CRC_BF_addEntry_21 -> eval_CRC_BF_addEntry_21

  * Ranking function: N/A

  * Invariants eval_CRC_BF_addEntry_21 -> eval_CRC_BF_addEntry_21

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_CRC_BF_addEntry_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_CRC_BF_addEntry_bb1_in/3])) 

  * LOOPS eval_CRC_BF_addEntry_bb1_in(D,E,F) -> eval_CRC_BF_addEntry_bb1_in(G,H,I)
     - [D=G,E=H]
     - [D=G,E=H]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_CRC_BF_addEntry_bb1_in/3]))

  * Invariants eval_CRC_BF_addEntry_bb1_in(A,B,C) -> eval_CRC_BF_addEntry_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [A=D,B=E]
     inv    : [B=E,A=D]


