This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS eval_rsa_public_decrypt_start(B) -> eval_rsa_public_decrypt_start(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_start(A) -> eval_rsa_public_decrypt_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS eval_rsa_public_decrypt_bb0_in(B) -> eval_rsa_public_decrypt_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_bb0_in(A) -> eval_rsa_public_decrypt_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS eval_rsa_public_decrypt_0(B) -> eval_rsa_public_decrypt_0(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_0(A) -> eval_rsa_public_decrypt_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS eval_rsa_public_decrypt_1(B) -> eval_rsa_public_decrypt_1(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_1(A) -> eval_rsa_public_decrypt_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_8(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS eval_rsa_public_decrypt_8(C,D) -> eval_rsa_public_decrypt_8(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_8(A,B) -> eval_rsa_public_decrypt_8(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_rsa_public_decrypt_9(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS eval_rsa_public_decrypt_9(B) -> eval_rsa_public_decrypt_9(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_9(A) -> eval_rsa_public_decrypt_9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_10(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS eval_rsa_public_decrypt_10(B) -> eval_rsa_public_decrypt_10(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_10(A) -> eval_rsa_public_decrypt_10(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_14(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS eval_rsa_public_decrypt_14(C,D) -> eval_rsa_public_decrypt_14(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_14(A,B) -> eval_rsa_public_decrypt_14(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_rsa_public_decrypt_15(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))+max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS eval_rsa_public_decrypt_15(C,D) -> eval_rsa_public_decrypt_15(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_15(A,B) -> eval_rsa_public_decrypt_15(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_rsa_public_decrypt_bb3_in(A,B,C)

  * Non Asymptotic Upper Bound: max([1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])),1+c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))]) 

  * LOOPS loop_cont_eval_rsa_public_decrypt_bb3_in(D,E,F) -> loop_cont_eval_rsa_public_decrypt_bb3_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_rsa_public_decrypt_bb3_in(A,B,C) -> loop_cont_eval_rsa_public_decrypt_bb3_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_rsa_public_decrypt_bb11_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_rsa_public_decrypt_bb11_in(D,E,F) -> loop_cont_eval_rsa_public_decrypt_bb11_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_rsa_public_decrypt_bb11_in(A,B,C) -> loop_cont_eval_rsa_public_decrypt_bb11_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_rsa_public_decrypt_bb13_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])) 

  * LOOPS eval_rsa_public_decrypt_bb13_in(B) -> eval_rsa_public_decrypt_bb13_in(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_bb13_in(A) -> eval_rsa_public_decrypt_bb13_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_rsa_public_decrypt_bb14_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_rsa_public_decrypt_bb14_in(D,E,F) -> loop_cont_eval_rsa_public_decrypt_bb14_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_rsa_public_decrypt_bb14_in(A,B,C) -> loop_cont_eval_rsa_public_decrypt_bb14_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_rsa_public_decrypt_54(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_54(B) -> eval_rsa_public_decrypt_54(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_54(A) -> eval_rsa_public_decrypt_54(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_55(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_55(B) -> eval_rsa_public_decrypt_55(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_55(A) -> eval_rsa_public_decrypt_55(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_bb19_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_bb19_in(B) -> eval_rsa_public_decrypt_bb19_in(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_bb19_in(A) -> eval_rsa_public_decrypt_bb19_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_65(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_65(C,D) -> eval_rsa_public_decrypt_65(E,F)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_65(A,B) -> eval_rsa_public_decrypt_65(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_rsa_public_decrypt_66(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_66(B) -> eval_rsa_public_decrypt_66(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_66(A) -> eval_rsa_public_decrypt_66(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_67

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_67 -> eval_rsa_public_decrypt_67

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_67 -> eval_rsa_public_decrypt_67

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_rsa_public_decrypt_56(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_56(B) -> eval_rsa_public_decrypt_56(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_56(A) -> eval_rsa_public_decrypt_56(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_57

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_57 -> eval_rsa_public_decrypt_57

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_57 -> eval_rsa_public_decrypt_57

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_rsa_public_decrypt_bb14_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1])) 

  * LOOPS eval_rsa_public_decrypt_bb14_in(B) -> eval_rsa_public_decrypt_bb14_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=11,cr=eval_rsa_public_decrypt_bb14_in/1]))

  * Invariants eval_rsa_public_decrypt_bb14_in(A) -> eval_rsa_public_decrypt_bb14_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_bb11_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1])) 

  * LOOPS eval_rsa_public_decrypt_bb11_in(B) -> eval_rsa_public_decrypt_bb11_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=10,cr=eval_rsa_public_decrypt_bb11_in/1]))

  * Invariants eval_rsa_public_decrypt_bb11_in(A) -> eval_rsa_public_decrypt_bb11_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_39(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_39(B) -> eval_rsa_public_decrypt_39(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_39(A) -> eval_rsa_public_decrypt_39(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_40

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_40 -> eval_rsa_public_decrypt_40

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_40 -> eval_rsa_public_decrypt_40

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_rsa_public_decrypt_bb3_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2])) 

  * LOOPS eval_rsa_public_decrypt_bb3_in(C,D) -> eval_rsa_public_decrypt_bb3_in(E,F)
     - [C=E,D=F+1,0>=F+2]
     - [C=E,D=F+1,F>=0]

  * Ranking function: c(failed(no_rf,[scc=7,cr=eval_rsa_public_decrypt_bb3_in/2]))

  * Invariants eval_rsa_public_decrypt_bb3_in(A,B) -> eval_rsa_public_decrypt_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,B>=D+1]
     inv    : [B>=D,A=C]

CRS eval_rsa_public_decrypt_bb20_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_bb20_in(B) -> eval_rsa_public_decrypt_bb20_in(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_bb20_in(A) -> eval_rsa_public_decrypt_bb20_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_58(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_58(B) -> eval_rsa_public_decrypt_58(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_58(A) -> eval_rsa_public_decrypt_58(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_59

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_59 -> eval_rsa_public_decrypt_59

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_59 -> eval_rsa_public_decrypt_59

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_rsa_public_decrypt_2(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_2(B) -> eval_rsa_public_decrypt_2(C)

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_2(A) -> eval_rsa_public_decrypt_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_rsa_public_decrypt_3

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_3 -> eval_rsa_public_decrypt_3

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_3 -> eval_rsa_public_decrypt_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_rsa_public_decrypt_bb22_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_rsa_public_decrypt_bb22_in -> eval_rsa_public_decrypt_bb22_in

  * Ranking function: N/A

  * Invariants eval_rsa_public_decrypt_bb22_in -> eval_rsa_public_decrypt_bb22_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


