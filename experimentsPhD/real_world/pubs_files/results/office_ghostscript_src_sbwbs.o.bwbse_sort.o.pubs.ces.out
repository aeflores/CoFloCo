This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 516+nat(A)+nat(A) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_bwbse_sort_start(A)

  * Non Asymptotic Upper Bound: 516+nat(A)+nat(A) 

  * LOOPS eval_bwbse_sort_start(B) -> eval_bwbse_sort_start(C)

  * Ranking function: N/A

  * Invariants eval_bwbse_sort_start(A) -> eval_bwbse_sort_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_bwbse_sort_bb0_in(A)

  * Non Asymptotic Upper Bound: 516+nat(A)+nat(A) 

  * LOOPS eval_bwbse_sort_bb0_in(B) -> eval_bwbse_sort_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_bwbse_sort_bb0_in(A) -> eval_bwbse_sort_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_bwbse_sort_0(A)

  * Non Asymptotic Upper Bound: 516+nat(A)+nat(A) 

  * LOOPS eval_bwbse_sort_0(B) -> eval_bwbse_sort_0(C)

  * Ranking function: N/A

  * Invariants eval_bwbse_sort_0(A) -> eval_bwbse_sort_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_bwbse_sort_1(A)

  * Non Asymptotic Upper Bound: 516+nat(A)+nat(A) 

  * LOOPS eval_bwbse_sort_1(B) -> eval_bwbse_sort_1(C)

  * Ranking function: N/A

  * Invariants eval_bwbse_sort_1(A) -> eval_bwbse_sort_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_bwbse_sort_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 515+nat(B) 

  * LOOPS loop_cont_eval_bwbse_sort_bb1_in(E,F,G,H) -> loop_cont_eval_bwbse_sort_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_bwbse_sort_bb1_in(A,B,C,D) -> loop_cont_eval_bwbse_sort_bb1_in(E,F,G,H)

     entry  : [A=4,C=0]
     non-rec: [A=E,B=F,C=G,D=H,A=4,C=0]
     rec    : [0=1]
     inv    : [A=4,C=0,E=4,B=F,G=0,D=H]

CRS loop_cont_eval_bwbse_sort_bb4_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 258+nat(B) 

  * LOOPS loop_cont_eval_bwbse_sort_bb4_in(E,F,G,H) -> loop_cont_eval_bwbse_sort_bb4_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_bwbse_sort_bb4_in(A,B,C,D) -> loop_cont_eval_bwbse_sort_bb4_in(E,F,G,H)

     entry  : [A=3,C=0]
     non-rec: [A=E,B=F,C=G,D=H,A=3,C=0]
     rec    : [0=1]
     inv    : [A=3,C=0,E=3,B=F,G=0,D=H]

CRS loop_cont_eval_bwbse_sort_bb7_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 257 

  * LOOPS loop_cont_eval_bwbse_sort_bb7_in(E,F,G,H) -> loop_cont_eval_bwbse_sort_bb7_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_bwbse_sort_bb7_in(A,B,C,D) -> loop_cont_eval_bwbse_sort_bb7_in(E,F,G,H)

     entry  : [B=0,A=2,C=0]
     non-rec: [A=E,B=F,C=G,D=H,B=0,A=2,C=0]
     rec    : [0=1]
     inv    : [A=2,B=0,C=0,E=2,F=0,G=0,D=H]

CRS loop_cont_eval_bwbse_sort_bb10_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_bwbse_sort_bb10_in(C,D) -> loop_cont_eval_bwbse_sort_bb10_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_bwbse_sort_bb10_in(A,B) -> loop_cont_eval_bwbse_sort_bb10_in(C,D)

     entry  : [A=5]
     non-rec: [A=C,B=D,A=5]
     rec    : [0=1]
     inv    : [A=5,C=5,B=D]

CRS eval_bwbse_sort_bb10_in(A,B)

  * Non Asymptotic Upper Bound: nat(-A+256) 

  * LOOPS eval_bwbse_sort_bb10_in(C,D) -> eval_bwbse_sort_bb10_in(E,F)
     - [C+1=E,255>=C]

  * Ranking function: nat(-C+256)

  * Invariants eval_bwbse_sort_bb10_in(A,B) -> eval_bwbse_sort_bb10_in(C,D)

     entry  : [A=0,B=0]
     non-rec: [A=C,B=D,A=0,B=0]
     rec    : [B=0,A=0,C>=1]
     inv    : [C>=0,B=0,A=0]

CRS eval_bwbse_sort_bb7_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_bwbse_sort_bb7_in(C,D) -> eval_bwbse_sort_bb7_in(E,F)
     - [D+1=F,C=E,C>=F]

  * Ranking function: nat(C-D)

  * Invariants eval_bwbse_sort_bb7_in(A,B) -> eval_bwbse_sort_bb7_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_bwbse_sort_bb4_in(A,B)

  * Non Asymptotic Upper Bound: nat(-B+256) 

  * LOOPS eval_bwbse_sort_bb4_in(C,D) -> eval_bwbse_sort_bb4_in(E,F)
     - [D+1=F,C=E,256>=F]

  * Ranking function: nat(-D+256)

  * Invariants eval_bwbse_sort_bb4_in(A,B) -> eval_bwbse_sort_bb4_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_bwbse_sort_bb1_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_bwbse_sort_bb1_in(C,D) -> eval_bwbse_sort_bb1_in(E,F)
     - [D+1=F,C=E,C>=F]

  * Ranking function: nat(C-D)

  * Invariants eval_bwbse_sort_bb1_in(A,B) -> eval_bwbse_sort_bb1_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]


