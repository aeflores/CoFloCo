This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval__TIFFprintAscii_bb1_in/0])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval__TIFFprintAscii_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval__TIFFprintAscii_bb1_in/0])) 

  * LOOPS eval__TIFFprintAscii_start -> eval__TIFFprintAscii_start

  * Ranking function: N/A

  * Invariants eval__TIFFprintAscii_start -> eval__TIFFprintAscii_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval__TIFFprintAscii_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval__TIFFprintAscii_bb1_in/0])) 

  * LOOPS eval__TIFFprintAscii_bb0_in -> eval__TIFFprintAscii_bb0_in

  * Ranking function: N/A

  * Invariants eval__TIFFprintAscii_bb0_in -> eval__TIFFprintAscii_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval__TIFFprintAscii_0

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval__TIFFprintAscii_bb1_in/0])) 

  * LOOPS eval__TIFFprintAscii_0 -> eval__TIFFprintAscii_0

  * Ranking function: N/A

  * Invariants eval__TIFFprintAscii_0 -> eval__TIFFprintAscii_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval__TIFFprintAscii_1

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=1,cr=eval__TIFFprintAscii_bb1_in/0])) 

  * LOOPS eval__TIFFprintAscii_1 -> eval__TIFFprintAscii_1

  * Ranking function: N/A

  * Invariants eval__TIFFprintAscii_1 -> eval__TIFFprintAscii_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval__TIFFprintAscii_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval__TIFFprintAscii_bb1_in(C,D) -> loop_cont_eval__TIFFprintAscii_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval__TIFFprintAscii_bb1_in(A,B) -> loop_cont_eval__TIFFprintAscii_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval__TIFFprintAscii_bb1_in

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval__TIFFprintAscii_bb1_in/0])) 

  * LOOPS eval__TIFFprintAscii_bb1_in -> eval__TIFFprintAscii_bb1_in
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval__TIFFprintAscii_bb1_in/0]))

  * Invariants eval__TIFFprintAscii_bb1_in -> eval__TIFFprintAscii_bb1_in

     entry  : []
     non-rec: []
     rec    : []
     inv    : []

CRS eval__TIFFprintAscii_bb4_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval__TIFFprintAscii_bb4_in/1])) 

  * LOOPS eval__TIFFprintAscii_bb4_in(B) -> eval__TIFFprintAscii_bb4_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval__TIFFprintAscii_bb4_in/1]))

  * Invariants eval__TIFFprintAscii_bb4_in(A) -> eval__TIFFprintAscii_bb4_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]


