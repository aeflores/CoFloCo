This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 18 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_printKeyHash_start(A)

  * Non Asymptotic Upper Bound: 18 

  * LOOPS eval_printKeyHash_start(B) -> eval_printKeyHash_start(C)

  * Ranking function: N/A

  * Invariants eval_printKeyHash_start(A) -> eval_printKeyHash_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_printKeyHash_bb0_in

  * Non Asymptotic Upper Bound: 18 

  * LOOPS eval_printKeyHash_bb0_in -> eval_printKeyHash_bb0_in

  * Ranking function: N/A

  * Invariants eval_printKeyHash_bb0_in -> eval_printKeyHash_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_printKeyHash_2(A)

  * Non Asymptotic Upper Bound: 18 

  * LOOPS eval_printKeyHash_2(B) -> eval_printKeyHash_2(C)

  * Ranking function: N/A

  * Invariants eval_printKeyHash_2(A) -> eval_printKeyHash_2(B)

     entry  : [29>=A,A>=1]
     non-rec: [A=B,29>=A,A>=1]
     rec    : [0=1]
     inv    : [A>=1,29>=A,A=B]

CRS eval_printKeyHash_3(A)

  * Non Asymptotic Upper Bound: 18 

  * LOOPS eval_printKeyHash_3(B) -> eval_printKeyHash_3(C)

  * Ranking function: N/A

  * Invariants eval_printKeyHash_3(A) -> eval_printKeyHash_3(B)

     entry  : [29>=A,A>=1]
     non-rec: [A=B,29>=A,A>=1]
     rec    : [0=1]
     inv    : [A>=1,29>=A,A=B]

CRS eval_printKeyHash_4

  * Non Asymptotic Upper Bound: 18 

  * LOOPS eval_printKeyHash_4 -> eval_printKeyHash_4

  * Ranking function: N/A

  * Invariants eval_printKeyHash_4 -> eval_printKeyHash_4

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_printKeyHash_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 9 

  * LOOPS loop_cont_eval_printKeyHash_bb1_in(C,D) -> loop_cont_eval_printKeyHash_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_printKeyHash_bb1_in(A,B) -> loop_cont_eval_printKeyHash_bb1_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_printKeyHash_11

  * Non Asymptotic Upper Bound: 9 

  * LOOPS eval_printKeyHash_11 -> eval_printKeyHash_11

  * Ranking function: N/A

  * Invariants eval_printKeyHash_11 -> eval_printKeyHash_11

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_printKeyHash_12

  * Non Asymptotic Upper Bound: 9 

  * LOOPS eval_printKeyHash_12 -> eval_printKeyHash_12

  * Ranking function: N/A

  * Invariants eval_printKeyHash_12 -> eval_printKeyHash_12

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_printKeyHash_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_printKeyHash_bb4_in(C,D) -> loop_cont_eval_printKeyHash_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_printKeyHash_bb4_in(A,B) -> loop_cont_eval_printKeyHash_bb4_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_printKeyHash_19

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_printKeyHash_19 -> eval_printKeyHash_19

  * Ranking function: N/A

  * Invariants eval_printKeyHash_19 -> eval_printKeyHash_19

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_printKeyHash_20

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_printKeyHash_20 -> eval_printKeyHash_20

  * Ranking function: N/A

  * Invariants eval_printKeyHash_20 -> eval_printKeyHash_20

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_printKeyHash_bb4_in(A)

  * Non Asymptotic Upper Bound: nat(-A+16) 

  * LOOPS eval_printKeyHash_bb4_in(B) -> eval_printKeyHash_bb4_in(C)
     - [B+1=C,15>=B]

  * Ranking function: nat(-B+16)

  * Invariants eval_printKeyHash_bb4_in(A) -> eval_printKeyHash_bb4_in(B)

     entry  : [A=8]
     non-rec: [A=B,A=8]
     rec    : [A=8,B>=9]
     inv    : [B>=8,A=8]

CRS eval_printKeyHash_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(-A+8) 

  * LOOPS eval_printKeyHash_bb1_in(B) -> eval_printKeyHash_bb1_in(C)
     - [B+1=C,7>=B]

  * Ranking function: nat(-B+8)

  * Invariants eval_printKeyHash_bb1_in(A) -> eval_printKeyHash_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


