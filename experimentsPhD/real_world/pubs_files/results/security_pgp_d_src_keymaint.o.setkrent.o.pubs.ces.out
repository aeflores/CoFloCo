This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_setkrent_start(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_setkrent_start(B) -> eval_setkrent_start(C)

  * Ranking function: N/A

  * Invariants eval_setkrent_start(A) -> eval_setkrent_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_setkrent_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_setkrent_bb0_in(B) -> eval_setkrent_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_setkrent_bb0_in(A) -> eval_setkrent_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_setkrent_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_setkrent_bb2_in(D,E,F) -> loop_cont_eval_setkrent_bb2_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_setkrent_bb2_in(A,B,C) -> loop_cont_eval_setkrent_bb2_in(D,E,F)

     entry  : [3>=A,A>=2]
     non-rec: [A=D,B=E,C=F,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=D,B=E,C=F]

CRS eval_setkrent_9(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_setkrent_9(B) -> eval_setkrent_9(C)

  * Ranking function: N/A

  * Invariants eval_setkrent_9(A) -> eval_setkrent_9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_setkrent_10(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_setkrent_10(B) -> eval_setkrent_10(C)

  * Ranking function: N/A

  * Invariants eval_setkrent_10(A) -> eval_setkrent_10(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_setkrent_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_setkrent_bb6_in -> eval_setkrent_bb6_in

  * Ranking function: N/A

  * Invariants eval_setkrent_bb6_in -> eval_setkrent_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_setkrent_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: nat(A-C) 

  * LOOPS eval_setkrent_bb2_in(D,E,F) -> eval_setkrent_bb2_in(G,H,I)
     - [F+1=I,D=G,E=H,E>=F+1]

  * Ranking function: nat(E-F)

  * Invariants eval_setkrent_bb2_in(A,B,C) -> eval_setkrent_bb2_in(D,E,F)

     entry  : [C=0,A=B]
     non-rec: [A=D,B=E,C=F,C=0,A=B]
     rec    : [A=E,A=D,C=0,A=B,A>=F,F>=1]
     inv    : [F>=0,C=0,A=D,A=E,A=B]

CRS eval_setkrent_16(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_setkrent_16(B) -> eval_setkrent_16(C)

  * Ranking function: N/A

  * Invariants eval_setkrent_16(A) -> eval_setkrent_16(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_setkrent_17

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_setkrent_17 -> eval_setkrent_17

  * Ranking function: N/A

  * Invariants eval_setkrent_17 -> eval_setkrent_17

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


