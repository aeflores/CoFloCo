This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_subpath_expand_dashes_bb4_in/5])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_subpath_expand_dashes_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_subpath_expand_dashes_bb4_in/5])) 

  * LOOPS eval_subpath_expand_dashes_start -> eval_subpath_expand_dashes_start

  * Ranking function: N/A

  * Invariants eval_subpath_expand_dashes_start -> eval_subpath_expand_dashes_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_subpath_expand_dashes_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_subpath_expand_dashes_bb4_in/5])) 

  * LOOPS eval_subpath_expand_dashes_bb0_in -> eval_subpath_expand_dashes_bb0_in

  * Ranking function: N/A

  * Invariants eval_subpath_expand_dashes_bb0_in -> eval_subpath_expand_dashes_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_subpath_expand_dashes_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_subpath_expand_dashes_bb4_in/5])) 

  * LOOPS eval_subpath_expand_dashes_bb2_in(C,D) -> eval_subpath_expand_dashes_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants eval_subpath_expand_dashes_bb2_in(A,B) -> eval_subpath_expand_dashes_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_subpath_expand_dashes_8(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_subpath_expand_dashes_bb4_in/5])) 

  * LOOPS eval_subpath_expand_dashes_8(D,E,F) -> eval_subpath_expand_dashes_8(G,H,I)

  * Ranking function: N/A

  * Invariants eval_subpath_expand_dashes_8(A,B,C) -> eval_subpath_expand_dashes_8(D,E,F)

     entry  : [C+1>=0,0>=C]
     non-rec: [A=D,B=E,C=F,C+1>=0,0>=C]
     rec    : [0=1]
     inv    : [C+1>=0,0>=C,A=D,B=E,C=F]

CRS eval_subpath_expand_dashes_9(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=5,cr=eval_subpath_expand_dashes_bb4_in/5])) 

  * LOOPS eval_subpath_expand_dashes_9(E,F,G,H) -> eval_subpath_expand_dashes_9(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_subpath_expand_dashes_9(A,B,C,D) -> eval_subpath_expand_dashes_9(E,F,G,H)

     entry  : [0>=C,C+1>=0]
     non-rec: [A=E,B=F,C=G,D=H,0>=C,C+1>=0]
     rec    : [0=1]
     inv    : [C+1>=0,0>=C,A=E,B=F,C=G,D=H]

CRS loop_cont_eval_subpath_expand_dashes_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_subpath_expand_dashes_bb4_in(C,D) -> loop_cont_eval_subpath_expand_dashes_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_subpath_expand_dashes_bb4_in(A,B) -> loop_cont_eval_subpath_expand_dashes_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_subpath_expand_dashes_bb4_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_subpath_expand_dashes_bb4_in/5])) 

  * LOOPS eval_subpath_expand_dashes_bb4_in(F,G,H,I,J) -> eval_subpath_expand_dashes_bb4_in(K,L,M,N,O)
     - [0>=M+1,O=1]
     - [M>=1,O=1]

  * Ranking function: c(failed(no_rf,[scc=5,cr=eval_subpath_expand_dashes_bb4_in/5]))

  * Invariants eval_subpath_expand_dashes_bb4_in(A,B,C,D,E) -> eval_subpath_expand_dashes_bb4_in(F,G,H,I,J)

     entry  : [0>=E,E+1>=0,C=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,0>=E,E+1>=0,C=E]
     rec    : [C+1>=0,0>=C,C=E,J=1]
     inv    : [0>=C,1>=J,C+1>=0,J>=C,C=E]

CRS eval_subpath_expand_dashes_bb5_in(A,B,C,D,E,F,G,H,I,J)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_subpath_expand_dashes_bb5_in/10])) 

  * LOOPS eval_subpath_expand_dashes_bb5_in(K,L,M,N,O,P,Q,R,S,T) -> eval_subpath_expand_dashes_bb5_in(U,V,W,X,Y,Z,A1,B1,C1,D1)
     - [Z>=0,A1=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0,A1=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0,A1=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]
     - [Z>=0]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_subpath_expand_dashes_bb5_in/10]))

  * Invariants eval_subpath_expand_dashes_bb5_in(A,B,C,D,E,F,G,H,I,J) -> eval_subpath_expand_dashes_bb5_in(K,L,M,N,O,P,Q,R,S,T)

     entry  : [1>=E,E+1>=0,B=H,E=G,D=F,A=I]
     non-rec: [A=K,B=L,C=M,D=N,E=O,F=P,G=Q,H=R,I=S,J=T,1>=E,E+1>=0,B=H,E=G,D=F,A=I]
     rec    : [P>=0,E+1>=0,1>=E,D=F,E=G,B=H,A=I]
     inv    : [E+1>=0,1>=E,A=I,B=H,E=G,D=F]

CRS eval_subpath_expand_dashes_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T)

  * Non Asymptotic Upper Bound: nat(-T+1) 

  * LOOPS eval_subpath_expand_dashes_bb21_in(U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1) -> eval_subpath_expand_dashes_bb21_in(O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2)
     - [N1=0,H2=1,U=O1,V=P1,W=Q1,X=R1,Y=S1,Z=T1,A1=U1,B1=V1,C1=W1,D1=X1,E1=Y1,F1=Z1,G1=A2,H1=B2,I1=C2,J1=D2,K1=E2,L1=F2]

  * Ranking function: log(4,nat(-N1+1)+3)

  * Invariants eval_subpath_expand_dashes_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T) -> eval_subpath_expand_dashes_bb21_in(U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1)

     entry  : []
     non-rec: [A=U,B=V,C=W,D=X,E=Y,F=Z,G=A1,H=B1,I=C1,J=D1,K=E1,L=F1,M=G1,N=H1,O=I1,P=J1,Q=K1,R=L1,S=M1,T=N1]
     rec    : [N1=1,R=L1,Q=K1,P=J1,O=I1,N=H1,M=G1,L=F1,K=E1,J=D1,I=C1,H=B1,G=A1,F=Z,E=Y,D=X,C=W,B=V,A=U,T=0]
     inv    : [T+1>=N1,N1>=T,C=W,D=X,E=Y,F=Z,G=A1,H=B1,I=C1,J=D1,K=E1,L=F1,M=G1,N=H1,O=I1,P=J1,Q=K1,R=L1,A=U,B=V]

CRS eval_subpath_expand_dashes_bb11_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_subpath_expand_dashes_bb11_in/18])) 

  * LOOPS eval_subpath_expand_dashes_bb11_in(S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1) -> eval_subpath_expand_dashes_bb11_in(K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2)
     - [D1=V1,B2=0,E1=W1,G1=Y1,S=K1,T=L1,U=M1,V=N1,W=O1,X=P1,Y=Q1,Z=R1,A1=S1,B1=T1,C1=U1,0>=J1+1]
     - [D1=V1,B2=0,E1=W1,G1=Y1,S=K1,T=L1,U=M1,V=N1,W=O1,X=P1,Y=Q1,Z=R1,A1=S1,B1=T1,C1=U1,J1>=1]
     - [E1=W1,B2=1,J1=0,G1=Y1,S=K1,T=L1,U=M1,V=N1,W=O1,X=P1,Y=Q1,Z=R1,A1=S1,B1=T1,C1=U1,D1=V1]
     - [F1=X1,G1=Y1,B2=0,S=K1,T=L1,U=M1,V=N1,W=O1,X=P1,Y=Q1,Z=R1,A1=S1,B1=T1,C1=U1,D1=V1,E1=W1,0>=J1+1]
     - [F1=X1,G1=Y1,B2=0,S=K1,T=L1,U=M1,V=N1,W=O1,X=P1,Y=Q1,Z=R1,A1=S1,B1=T1,C1=U1,D1=V1,E1=W1,J1>=1]
     - [G1=Y1,J1=0,B2=1,S=K1,T=L1,U=M1,V=N1,W=O1,X=P1,Y=Q1,Z=R1,A1=S1,B1=T1,C1=U1,D1=V1,E1=W1,F1=X1]
     - [D1=V1,B2=0,E1=W1,Y1=0,S=K1,T=L1,U=M1,V=N1,W=O1,X=P1,Y=Q1,Z=R1,A1=S1,B1=T1,C1=U1,0>=J1+1]
     - [D1=V1,B2=0,E1=W1,Y1=0,S=K1,T=L1,U=M1,V=N1,W=O1,X=P1,Y=Q1,Z=R1,A1=S1,B1=T1,C1=U1,J1>=1]
     - [E1=W1,B2=1,J1=0,Y1=0,S=K1,T=L1,U=M1,V=N1,W=O1,X=P1,Y=Q1,Z=R1,A1=S1,B1=T1,C1=U1,D1=V1]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_subpath_expand_dashes_bb11_in/18]))

  * Invariants eval_subpath_expand_dashes_bb11_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R) -> eval_subpath_expand_dashes_bb11_in(S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1)

     entry  : [F=N,M=R,I=Q,H=P,G=O]
     non-rec: [A=S,B=T,C=U,D=V,E=W,F=X,G=Y,H=Z,I=A1,J=B1,K=C1,L=D1,M=E1,N=F1,O=G1,P=H1,Q=I1,R=J1,F=N,M=R,I=Q,H=P,G=O]
     rec    : [J1>=0,1>=J1,H=P,I=Q,M=R,A=S,B=T,C=U,D=V,E=W,F=X,G=Y,H=Z,I=A1,J=B1,K=C1,L=D1,M=E1,F=N,G=O]
     inv    : [A=S,B=T,C=U,D=V,E=W,F=X,G=Y,H=Z,I=A1,J=B1,K=C1,L=D1,M=E1,I=Q,H=P,G=O,F=N,M=R]

CRS eval_subpath_expand_dashes_bb34_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_subpath_expand_dashes_bb34_in -> eval_subpath_expand_dashes_bb34_in

  * Ranking function: N/A

  * Invariants eval_subpath_expand_dashes_bb34_in -> eval_subpath_expand_dashes_bb34_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


