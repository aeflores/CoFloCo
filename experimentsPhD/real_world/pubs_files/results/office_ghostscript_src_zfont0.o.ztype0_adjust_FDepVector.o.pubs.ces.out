This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ztype0_adjust_FDepVector_start

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_ztype0_adjust_FDepVector_start -> eval_ztype0_adjust_FDepVector_start

  * Ranking function: N/A

  * Invariants eval_ztype0_adjust_FDepVector_start -> eval_ztype0_adjust_FDepVector_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ztype0_adjust_FDepVector_bb0_in

  * Non Asymptotic Upper Bound: 1+nat(c(maximize_failed)) 

  * LOOPS eval_ztype0_adjust_FDepVector_bb0_in -> eval_ztype0_adjust_FDepVector_bb0_in

  * Ranking function: N/A

  * Invariants eval_ztype0_adjust_FDepVector_bb0_in -> eval_ztype0_adjust_FDepVector_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ztype0_adjust_FDepVector_1(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_ztype0_adjust_FDepVector_1(B) -> eval_ztype0_adjust_FDepVector_1(C)

  * Ranking function: N/A

  * Invariants eval_ztype0_adjust_FDepVector_1(A) -> eval_ztype0_adjust_FDepVector_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ztype0_adjust_FDepVector_2(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_ztype0_adjust_FDepVector_2(B) -> eval_ztype0_adjust_FDepVector_2(C)

  * Ranking function: N/A

  * Invariants eval_ztype0_adjust_FDepVector_2(A) -> eval_ztype0_adjust_FDepVector_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_ztype0_adjust_FDepVector_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_ztype0_adjust_FDepVector_bb2_in(C,D) -> loop_cont_eval_ztype0_adjust_FDepVector_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_ztype0_adjust_FDepVector_bb2_in(A,B) -> loop_cont_eval_ztype0_adjust_FDepVector_bb2_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_ztype0_adjust_FDepVector_13

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ztype0_adjust_FDepVector_13 -> eval_ztype0_adjust_FDepVector_13

  * Ranking function: N/A

  * Invariants eval_ztype0_adjust_FDepVector_13 -> eval_ztype0_adjust_FDepVector_13

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ztype0_adjust_FDepVector_14

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ztype0_adjust_FDepVector_14 -> eval_ztype0_adjust_FDepVector_14

  * Ranking function: N/A

  * Invariants eval_ztype0_adjust_FDepVector_14 -> eval_ztype0_adjust_FDepVector_14

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ztype0_adjust_FDepVector_bb5_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ztype0_adjust_FDepVector_bb5_in -> eval_ztype0_adjust_FDepVector_bb5_in

  * Ranking function: N/A

  * Invariants eval_ztype0_adjust_FDepVector_bb5_in -> eval_ztype0_adjust_FDepVector_bb5_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ztype0_adjust_FDepVector_bb2_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_ztype0_adjust_FDepVector_bb2_in(C,D) -> eval_ztype0_adjust_FDepVector_bb2_in(E,F)
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_ztype0_adjust_FDepVector_bb2_in(A,B) -> eval_ztype0_adjust_FDepVector_bb2_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]


