This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+nat(A)+c(failed(schemes_failed,[scc=10,cr=eval_BZ2_hbMakeCodeLengths_bb6_in/1])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_BZ2_hbMakeCodeLengths_start(A,B)

  * Non Asymptotic Upper Bound: 2+nat(A)+c(failed(schemes_failed,[scc=10,cr=eval_BZ2_hbMakeCodeLengths_bb6_in/1])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_start(C,D) -> eval_BZ2_hbMakeCodeLengths_start(E,F)

  * Ranking function: N/A

  * Invariants eval_BZ2_hbMakeCodeLengths_start(A,B) -> eval_BZ2_hbMakeCodeLengths_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_BZ2_hbMakeCodeLengths_bb0_in(A)

  * Non Asymptotic Upper Bound: 2+nat(A)+c(failed(schemes_failed,[scc=10,cr=eval_BZ2_hbMakeCodeLengths_bb6_in/1])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb0_in(B) -> eval_BZ2_hbMakeCodeLengths_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_BZ2_hbMakeCodeLengths_bb0_in(A) -> eval_BZ2_hbMakeCodeLengths_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=10,cr=eval_BZ2_hbMakeCodeLengths_bb6_in/1])) 

  * LOOPS loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(D,E,F) -> loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(A,B,C) -> loop_cont_eval_BZ2_hbMakeCodeLengths_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_BZ2_hbMakeCodeLengths_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_BZ2_hbMakeCodeLengths_bb6_in(C,D) -> loop_cont_eval_BZ2_hbMakeCodeLengths_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_BZ2_hbMakeCodeLengths_bb6_in(A,B) -> loop_cont_eval_BZ2_hbMakeCodeLengths_bb6_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_BZ2_hbMakeCodeLengths_bb6_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=10,cr=eval_BZ2_hbMakeCodeLengths_bb6_in/1])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb6_in(B) -> eval_BZ2_hbMakeCodeLengths_bb6_in(C)
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=10,cr=eval_BZ2_hbMakeCodeLengths_bb6_in/1]))

  * Invariants eval_BZ2_hbMakeCodeLengths_bb6_in(A) -> eval_BZ2_hbMakeCodeLengths_bb6_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : []
     inv    : []

CRS eval_BZ2_hbMakeCodeLengths_bb42_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 3*nat(A-F+1) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb42_in(G,H,I,J,K,L) -> eval_BZ2_hbMakeCodeLengths_bb42_in(M,N,O,P,Q,R)
     - [L+1=R,H=N,I=O,J=P,K=Q,G=M,G+1>=R]
     - [L+1=R,H=N,I=O,J=P,K=Q,G=M,G+1>=R]
     - [L+1=R,H=N,I=O,J=P,K=Q,G=M,G+1>=R]

  * Ranking function: nat(G-L+1)

  * Invariants eval_BZ2_hbMakeCodeLengths_bb42_in(A,B,C,D,E,F) -> eval_BZ2_hbMakeCodeLengths_bb42_in(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [E=K,D=J,C=I,B=H,A=G,A+1>=L,L>=F+1]
     inv    : [L>=F,B=H,C=I,D=J,E=K,A=G]

CRS eval_BZ2_hbMakeCodeLengths_bb37_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=8,cr=eval_BZ2_hbMakeCodeLengths_bb37_in/5])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb37_in(F,G,H,I,J) -> eval_BZ2_hbMakeCodeLengths_bb37_in(K,L,M,N,O)
     - [F>=J]

  * Ranking function: c(failed(no_rf,[scc=8,cr=eval_BZ2_hbMakeCodeLengths_bb37_in/5]))

  * Invariants eval_BZ2_hbMakeCodeLengths_bb37_in(A,B,C,D,E) -> eval_BZ2_hbMakeCodeLengths_bb37_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [A>=E]
     inv    : []

CRS eval_BZ2_hbMakeCodeLengths_bb38_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=7,cr=eval_BZ2_hbMakeCodeLengths_bb38_in/5])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb38_in(F,G,H,I,J) -> eval_BZ2_hbMakeCodeLengths_bb38_in(K,L,M,N,O)
     - [J=O,F=K,G=L,H=M,I=N]

  * Ranking function: c(failed(no_rf,[scc=7,cr=eval_BZ2_hbMakeCodeLengths_bb38_in/5]))

  * Invariants eval_BZ2_hbMakeCodeLengths_bb38_in(A,B,C,D,E) -> eval_BZ2_hbMakeCodeLengths_bb38_in(F,G,H,I,J)

     entry  : [A>=E]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A>=E]
     rec    : [A>=J,A=F,D=I,C=H,B=G,E=J]
     inv    : [A>=E,A=F,B=G,C=H,D=I,E=J]

CRS eval_BZ2_hbMakeCodeLengths_bb15_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=6,cr=eval_BZ2_hbMakeCodeLengths_bb15_in/4])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb15_in(E,F,G,H) -> eval_BZ2_hbMakeCodeLengths_bb15_in(I,J,K,L)
     - [H>=2]
     - [H>=2]
     - [H>=2]
     - [H>=2]

  * Ranking function: c(failed(no_rf,[scc=6,cr=eval_BZ2_hbMakeCodeLengths_bb15_in/4]))

  * Invariants eval_BZ2_hbMakeCodeLengths_bb15_in(A,B,C,D) -> eval_BZ2_hbMakeCodeLengths_bb15_in(E,F,G,H)

     entry  : [C=D]
     non-rec: [A=E,B=F,C=G,D=H,C=D]
     rec    : [C>=2,C=D]
     inv    : [C=D]

CRS eval_BZ2_hbMakeCodeLengths_bb30_in(A,B,C,D,E,F,G,H)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_BZ2_hbMakeCodeLengths_bb30_in/8])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb30_in(I,J,K,L,M,N,O,P) -> eval_BZ2_hbMakeCodeLengths_bb30_in(Q,R,S,T,U,V,W,X)
     - [P=X,I=Q,J=R,K=S,L=T,M=U,N=V,O=W]

  * Ranking function: c(failed(no_rf,[scc=5,cr=eval_BZ2_hbMakeCodeLengths_bb30_in/8]))

  * Invariants eval_BZ2_hbMakeCodeLengths_bb30_in(A,B,C,D,E,F,G,H) -> eval_BZ2_hbMakeCodeLengths_bb30_in(I,J,K,L,M,N,O,P)

     entry  : [F+1=G]
     non-rec: [A=I,B=J,C=K,D=L,E=M,F=N,G=O,H=P,F+1=G]
     rec    : [H=P,F+1=G,F+1=O,F=N,E=M,D=L,C=K,B=J,A=I]
     inv    : [F+1=G,A=I,B=J,C=K,D=L,E=M,F=N,F+1=O,H=P]

CRS eval_BZ2_hbMakeCodeLengths_bb22_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_BZ2_hbMakeCodeLengths_bb22_in/6])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb22_in(G,H,I,J,K,L) -> eval_BZ2_hbMakeCodeLengths_bb22_in(M,N,O,P,Q,R)
     - [K=Q,L=R,G=M,H=N,I=O,J=P]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_BZ2_hbMakeCodeLengths_bb22_in/6]))

  * Invariants eval_BZ2_hbMakeCodeLengths_bb22_in(A,B,C,D,E,F) -> eval_BZ2_hbMakeCodeLengths_bb22_in(G,H,I,J,K,L)

     entry  : [E=F+1]
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L,E=F+1]
     rec    : [E=F+1,E=L+1,E=K,D=J,C=I,B=H,A=G]
     inv    : [E=F+1,A=G,B=H,C=I,D=J,E=K,E=L+1]

CRS eval_BZ2_hbMakeCodeLengths_bb17_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_BZ2_hbMakeCodeLengths_bb17_in/5])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb17_in(F,G,H,I,J) -> eval_BZ2_hbMakeCodeLengths_bb17_in(K,L,M,N,O)
     - [I=N,J=O,F=K,G=L,H=M]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_BZ2_hbMakeCodeLengths_bb17_in/5]))

  * Invariants eval_BZ2_hbMakeCodeLengths_bb17_in(A,B,C,D,E) -> eval_BZ2_hbMakeCodeLengths_bb17_in(F,G,H,I,J)

     entry  : [E>=1,D=E+1]
     non-rec: [A=F,B=G,C=H,D=I,E=J,E>=1,D=E+1]
     rec    : [I>=2,E+1=I,D=I,I=J+1,B=G,C=H,A=F]
     inv    : [D>=2,D=E+1,A=F,B=G,C=H,D=I,D=J+1]

CRS eval_BZ2_hbMakeCodeLengths_bb7_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_BZ2_hbMakeCodeLengths_bb7_in/3])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb7_in(D,E,F) -> eval_BZ2_hbMakeCodeLengths_bb7_in(G,H,I)
     - [D>=E]

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_BZ2_hbMakeCodeLengths_bb7_in/3]))

  * Invariants eval_BZ2_hbMakeCodeLengths_bb7_in(A,B,C) -> eval_BZ2_hbMakeCodeLengths_bb7_in(D,E,F)

     entry  : [C=0,B=1]
     non-rec: [A=D,B=E,C=F,C=0,B=1]
     rec    : [A>=1,C=0,B=1]
     inv    : [C=0,B=1]

CRS eval_BZ2_hbMakeCodeLengths_bb9_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_BZ2_hbMakeCodeLengths_bb9_in/5])) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb9_in(F,G,H,I,J) -> eval_BZ2_hbMakeCodeLengths_bb9_in(K,L,M,N,O)
     - [J=O,F=K,G=L,H=M,I=N]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_BZ2_hbMakeCodeLengths_bb9_in/5]))

  * Invariants eval_BZ2_hbMakeCodeLengths_bb9_in(A,B,C,D,E) -> eval_BZ2_hbMakeCodeLengths_bb9_in(F,G,H,I,J)

     entry  : [A>=B,C+1=D]
     non-rec: [A=F,B=G,C=H,D=I,E=J,A>=B,C+1=D]
     rec    : [A>=G,E=J,C+1=D,C+1=I,B=G,C=H,A=F]
     inv    : [A>=B,C+1=D,A=F,B=G,C=H,C+1=I,E=J]

CRS eval_BZ2_hbMakeCodeLengths_bb1_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_BZ2_hbMakeCodeLengths_bb1_in(C,D) -> eval_BZ2_hbMakeCodeLengths_bb1_in(E,F)
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_BZ2_hbMakeCodeLengths_bb1_in(A,B) -> eval_BZ2_hbMakeCodeLengths_bb1_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]


