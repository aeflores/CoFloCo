This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_uInt64_toAscii_bb1_in/1]))+nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_uInt64_toAscii_start

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_uInt64_toAscii_bb1_in/1]))+nat(c(maximize_failed)) 

  * LOOPS eval_uInt64_toAscii_start -> eval_uInt64_toAscii_start

  * Ranking function: N/A

  * Invariants eval_uInt64_toAscii_start -> eval_uInt64_toAscii_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_uInt64_toAscii_bb0_in

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_uInt64_toAscii_bb1_in/1]))+nat(c(maximize_failed)) 

  * LOOPS eval_uInt64_toAscii_bb0_in -> eval_uInt64_toAscii_bb0_in

  * Ranking function: N/A

  * Invariants eval_uInt64_toAscii_bb0_in -> eval_uInt64_toAscii_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_uInt64_toAscii_0

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_uInt64_toAscii_bb1_in/1]))+nat(c(maximize_failed)) 

  * LOOPS eval_uInt64_toAscii_0 -> eval_uInt64_toAscii_0

  * Ranking function: N/A

  * Invariants eval_uInt64_toAscii_0 -> eval_uInt64_toAscii_0

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_uInt64_toAscii_1

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=0,cr=eval_uInt64_toAscii_bb1_in/1]))+nat(c(maximize_failed)) 

  * LOOPS eval_uInt64_toAscii_1 -> eval_uInt64_toAscii_1

  * Ranking function: N/A

  * Invariants eval_uInt64_toAscii_1 -> eval_uInt64_toAscii_1

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_uInt64_toAscii_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+nat(B-C) 

  * LOOPS loop_cont_eval_uInt64_toAscii_bb1_in(E,F,G,H) -> loop_cont_eval_uInt64_toAscii_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_uInt64_toAscii_bb1_in(A,B,C,D) -> loop_cont_eval_uInt64_toAscii_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_uInt64_toAscii_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_uInt64_toAscii_bb3_in(C,D) -> loop_cont_eval_uInt64_toAscii_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_uInt64_toAscii_bb3_in(A,B) -> loop_cont_eval_uInt64_toAscii_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_uInt64_toAscii_bb3_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_uInt64_toAscii_bb3_in(C,D) -> eval_uInt64_toAscii_bb3_in(E,F)
     - [D+1=F,C=E,C>=F]

  * Ranking function: nat(C-D)

  * Invariants eval_uInt64_toAscii_bb3_in(A,B) -> eval_uInt64_toAscii_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [A=C,A>=D,D>=B+1]
     inv    : [D>=B,A=C]

CRS eval_uInt64_toAscii_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_uInt64_toAscii_bb1_in/1])) 

  * LOOPS eval_uInt64_toAscii_bb1_in(B) -> eval_uInt64_toAscii_bb1_in(C)
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_uInt64_toAscii_bb1_in/1]))

  * Invariants eval_uInt64_toAscii_bb1_in(A) -> eval_uInt64_toAscii_bb1_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


