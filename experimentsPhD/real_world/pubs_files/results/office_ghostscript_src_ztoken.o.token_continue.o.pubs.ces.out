This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_token_continue_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_token_continue_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_token_continue_bb1_in/1])) 

  * LOOPS eval_token_continue_start(B) -> eval_token_continue_start(C)

  * Ranking function: N/A

  * Invariants eval_token_continue_start(A) -> eval_token_continue_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_token_continue_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_token_continue_bb1_in/1])) 

  * LOOPS eval_token_continue_bb0_in(B) -> eval_token_continue_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_token_continue_bb0_in(A) -> eval_token_continue_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_token_continue_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_token_continue_bb1_in/1])) 

  * LOOPS eval_token_continue_0(B) -> eval_token_continue_0(C)

  * Ranking function: N/A

  * Invariants eval_token_continue_0(A) -> eval_token_continue_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_token_continue_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_token_continue_bb1_in/1])) 

  * LOOPS eval_token_continue_1(B) -> eval_token_continue_1(C)

  * Ranking function: N/A

  * Invariants eval_token_continue_1(A) -> eval_token_continue_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_token_continue_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_token_continue_bb1_in(C,D) -> loop_cont_eval_token_continue_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_token_continue_bb1_in(A,B) -> loop_cont_eval_token_continue_bb1_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_token_continue_bb3_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_bb3_in -> eval_token_continue_bb3_in

  * Ranking function: N/A

  * Invariants eval_token_continue_bb3_in -> eval_token_continue_bb3_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_8

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_8 -> eval_token_continue_8

  * Ranking function: N/A

  * Invariants eval_token_continue_8 -> eval_token_continue_8

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_9

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_9 -> eval_token_continue_9

  * Ranking function: N/A

  * Invariants eval_token_continue_9 -> eval_token_continue_9

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_NewDefault_in -> eval_token_continue_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_token_continue_NewDefault_in -> eval_token_continue_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_27

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_27 -> eval_token_continue_27

  * Ranking function: N/A

  * Invariants eval_token_continue_27 -> eval_token_continue_27

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_28

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_28 -> eval_token_continue_28

  * Ranking function: N/A

  * Invariants eval_token_continue_28 -> eval_token_continue_28

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_NewDefault11_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_NewDefault11_in -> eval_token_continue_NewDefault11_in

  * Ranking function: N/A

  * Invariants eval_token_continue_NewDefault11_in -> eval_token_continue_NewDefault11_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_bb15_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_bb15_in -> eval_token_continue_bb15_in

  * Ranking function: N/A

  * Invariants eval_token_continue_bb15_in -> eval_token_continue_bb15_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_29

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_29 -> eval_token_continue_29

  * Ranking function: N/A

  * Invariants eval_token_continue_29 -> eval_token_continue_29

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_30

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_30 -> eval_token_continue_30

  * Ranking function: N/A

  * Invariants eval_token_continue_30 -> eval_token_continue_30

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_bb17_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_token_continue_bb17_in -> eval_token_continue_bb17_in

  * Ranking function: N/A

  * Invariants eval_token_continue_bb17_in -> eval_token_continue_bb17_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_token_continue_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_token_continue_bb1_in/1])) 

  * LOOPS eval_token_continue_bb1_in(B) -> eval_token_continue_bb1_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_token_continue_bb1_in/1]))

  * Invariants eval_token_continue_bb1_in(A) -> eval_token_continue_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]


