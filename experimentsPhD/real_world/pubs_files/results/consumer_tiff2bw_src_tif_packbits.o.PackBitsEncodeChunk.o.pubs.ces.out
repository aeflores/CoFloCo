This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_PackBitsEncodeChunk_bb2_in/3])) 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_PackBitsEncodeChunk_start(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_PackBitsEncodeChunk_bb2_in/3])) 

  * LOOPS eval_PackBitsEncodeChunk_start(C,D) -> eval_PackBitsEncodeChunk_start(E,F)

  * Ranking function: N/A

  * Invariants eval_PackBitsEncodeChunk_start(A,B) -> eval_PackBitsEncodeChunk_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_PackBitsEncodeChunk_bb0_in(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=3,cr=eval_PackBitsEncodeChunk_bb2_in/3])) 

  * LOOPS eval_PackBitsEncodeChunk_bb0_in(C,D) -> eval_PackBitsEncodeChunk_bb0_in(E,F)

  * Ranking function: N/A

  * Invariants eval_PackBitsEncodeChunk_bb0_in(A,B) -> eval_PackBitsEncodeChunk_bb0_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_PackBitsEncodeChunk_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_PackBitsEncodeChunk_bb2_in(C,D) -> loop_cont_eval_PackBitsEncodeChunk_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_PackBitsEncodeChunk_bb2_in(A,B) -> loop_cont_eval_PackBitsEncodeChunk_bb2_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_PackBitsEncodeChunk_bb5_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_PackBitsEncodeChunk_bb5_in -> eval_PackBitsEncodeChunk_bb5_in

  * Ranking function: N/A

  * Invariants eval_PackBitsEncodeChunk_bb5_in -> eval_PackBitsEncodeChunk_bb5_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_PackBitsEncodeChunk_bb2_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=3,cr=eval_PackBitsEncodeChunk_bb2_in/3])) 

  * LOOPS eval_PackBitsEncodeChunk_bb2_in(D,E,F) -> eval_PackBitsEncodeChunk_bb2_in(G,H,I)
     - [E+I=F,D=G,E=H,F>=1]

  * Ranking function: c(failed(no_rf,[scc=3,cr=eval_PackBitsEncodeChunk_bb2_in/3]))

  * Invariants eval_PackBitsEncodeChunk_bb2_in(A,B,C) -> eval_PackBitsEncodeChunk_bb2_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [B+F>=1,C>=1,B=E,A=D]
     inv    : [B=E,A=D]

CRS eval_PackBitsEncodeChunk_10

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_PackBitsEncodeChunk_10 -> eval_PackBitsEncodeChunk_10

  * Ranking function: N/A

  * Invariants eval_PackBitsEncodeChunk_10 -> eval_PackBitsEncodeChunk_10

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_PackBitsEncodeChunk_11

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_PackBitsEncodeChunk_11 -> eval_PackBitsEncodeChunk_11

  * Ranking function: N/A

  * Invariants eval_PackBitsEncodeChunk_11 -> eval_PackBitsEncodeChunk_11

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


