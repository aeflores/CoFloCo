This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_alloc_char_bb8_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_char_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_alloc_char_bb8_in/1])) 

  * LOOPS eval_alloc_char_start(B) -> eval_alloc_char_start(C)

  * Ranking function: N/A

  * Invariants eval_alloc_char_start(A) -> eval_alloc_char_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_char_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_alloc_char_bb8_in/1])) 

  * LOOPS eval_alloc_char_bb0_in(B) -> eval_alloc_char_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_alloc_char_bb0_in(A) -> eval_alloc_char_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_char_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_alloc_char_bb8_in/1])) 

  * LOOPS eval_alloc_char_0(B) -> eval_alloc_char_0(C)

  * Ranking function: N/A

  * Invariants eval_alloc_char_0(A) -> eval_alloc_char_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_char_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=13,cr=eval_alloc_char_bb8_in/1])) 

  * LOOPS eval_alloc_char_1(B) -> eval_alloc_char_1(C)

  * Ranking function: N/A

  * Invariants eval_alloc_char_1(A) -> eval_alloc_char_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_alloc_char_bb8_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_alloc_char_bb8_in(D,E,F) -> loop_cont_eval_alloc_char_bb8_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_alloc_char_bb8_in(A,B,C) -> loop_cont_eval_alloc_char_bb8_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_alloc_char_bb8_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=13,cr=eval_alloc_char_bb8_in/1])) 

  * LOOPS eval_alloc_char_bb8_in(B) -> eval_alloc_char_bb8_in(C)
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=13,cr=eval_alloc_char_bb8_in/1]))

  * Invariants eval_alloc_char_bb8_in(A) -> eval_alloc_char_bb8_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]

CRS eval_alloc_char_15(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_15(C,D) -> eval_alloc_char_15(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_char_15(A,B) -> eval_alloc_char_15(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_char_16(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_16(C,D) -> eval_alloc_char_16(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_char_16(A,B) -> eval_alloc_char_16(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_char_17(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_17(C,D) -> eval_alloc_char_17(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_char_17(A,B) -> eval_alloc_char_17(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_char_18(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_18(C,D) -> eval_alloc_char_18(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_char_18(A,B) -> eval_alloc_char_18(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_char_21(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_21(C,D) -> eval_alloc_char_21(E,F)

  * Ranking function: N/A

  * Invariants eval_alloc_char_21(A,B) -> eval_alloc_char_21(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_alloc_char_22(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_22(B) -> eval_alloc_char_22(C)

  * Ranking function: N/A

  * Invariants eval_alloc_char_22(A) -> eval_alloc_char_22(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_char_bb10_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_bb10_in(B) -> eval_alloc_char_bb10_in(C)

  * Ranking function: N/A

  * Invariants eval_alloc_char_bb10_in(A) -> eval_alloc_char_bb10_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_char_35(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_35(B) -> eval_alloc_char_35(C)

  * Ranking function: N/A

  * Invariants eval_alloc_char_35(A) -> eval_alloc_char_35(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_alloc_char_36

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_36 -> eval_alloc_char_36

  * Ranking function: N/A

  * Invariants eval_alloc_char_36 -> eval_alloc_char_36

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_char_19

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_19 -> eval_alloc_char_19

  * Ranking function: N/A

  * Invariants eval_alloc_char_19 -> eval_alloc_char_19

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_char_20

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_20 -> eval_alloc_char_20

  * Ranking function: N/A

  * Invariants eval_alloc_char_20 -> eval_alloc_char_20

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_alloc_char_bb11_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_alloc_char_bb11_in -> eval_alloc_char_bb11_in

  * Ranking function: N/A

  * Invariants eval_alloc_char_bb11_in -> eval_alloc_char_bb11_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


