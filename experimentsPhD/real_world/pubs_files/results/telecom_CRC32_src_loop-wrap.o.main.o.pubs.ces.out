This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_main_bb3_in/2])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_main_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_main_bb3_in/2])) 

  * LOOPS eval_main_start(B) -> eval_main_start(C)

  * Ranking function: N/A

  * Invariants eval_main_start(A) -> eval_main_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_main_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_main_bb3_in/2])) 

  * LOOPS eval_main_bb0_in(B) -> eval_main_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_main_bb0_in(A) -> eval_main_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_main_0(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_main_bb3_in/2])) 

  * LOOPS eval_main_0(B) -> eval_main_0(C)

  * Ranking function: N/A

  * Invariants eval_main_0(A) -> eval_main_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_main_1(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_main_bb3_in/2])) 

  * LOOPS eval_main_1(B) -> eval_main_1(C)

  * Ranking function: N/A

  * Invariants eval_main_1(A) -> eval_main_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_main_4(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_main_bb3_in/2])) 

  * LOOPS eval_main_4(B) -> eval_main_4(C)

  * Ranking function: N/A

  * Invariants eval_main_4(A) -> eval_main_4(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_main_5(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_main_bb3_in/2])) 

  * LOOPS eval_main_5(B) -> eval_main_5(C)

  * Ranking function: N/A

  * Invariants eval_main_5(A) -> eval_main_5(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_main_6(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=4,cr=eval_main_bb3_in/2])) 

  * LOOPS eval_main_6(B) -> eval_main_6(C)

  * Ranking function: N/A

  * Invariants eval_main_6(A) -> eval_main_6(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_main_bb3_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_main_bb3_in(C,D) -> loop_cont_eval_main_bb3_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_main_bb3_in(A,B) -> loop_cont_eval_main_bb3_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_main_bb3_in(A,B)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=4,cr=eval_main_bb3_in/2])) 

  * LOOPS eval_main_bb3_in(C,D) -> eval_main_bb3_in(E,F)
     - [C=E,D+1=F]
     - [C=E,D+1=F]

  * Ranking function: c(failed(no_rf,[scc=4,cr=eval_main_bb3_in/2]))

  * Invariants eval_main_bb3_in(A,B) -> eval_main_bb3_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_main_2

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_main_2 -> eval_main_2

  * Ranking function: N/A

  * Invariants eval_main_2 -> eval_main_2

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_main_3

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_main_3 -> eval_main_3

  * Ranking function: N/A

  * Invariants eval_main_3 -> eval_main_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_main_bb5_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_main_bb5_in -> eval_main_bb5_in

  * Ranking function: N/A

  * Invariants eval_main_bb5_in -> eval_main_bb5_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


