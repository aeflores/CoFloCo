This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 5 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ireclaim_start(A)

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ireclaim_start(B) -> eval_ireclaim_start(C)

  * Ranking function: N/A

  * Invariants eval_ireclaim_start(A) -> eval_ireclaim_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_ireclaim_bb0_in

  * Non Asymptotic Upper Bound: 5 

  * LOOPS eval_ireclaim_bb0_in -> eval_ireclaim_bb0_in

  * Ranking function: N/A

  * Invariants eval_ireclaim_bb0_in -> eval_ireclaim_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_ireclaim_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_ireclaim_bb2_in(C,D) -> loop_cont_eval_ireclaim_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_ireclaim_bb2_in(A,B) -> loop_cont_eval_ireclaim_bb2_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_ireclaim_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ireclaim_bb6_in -> eval_ireclaim_bb6_in

  * Ranking function: N/A

  * Invariants eval_ireclaim_bb6_in -> eval_ireclaim_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ireclaim_8

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ireclaim_8 -> eval_ireclaim_8

  * Ranking function: N/A

  * Invariants eval_ireclaim_8 -> eval_ireclaim_8

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ireclaim_9

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ireclaim_9 -> eval_ireclaim_9

  * Ranking function: N/A

  * Invariants eval_ireclaim_9 -> eval_ireclaim_9

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ireclaim_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ireclaim_bb8_in -> eval_ireclaim_bb8_in

  * Ranking function: N/A

  * Invariants eval_ireclaim_bb8_in -> eval_ireclaim_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ireclaim_17(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ireclaim_17(B) -> eval_ireclaim_17(C)

  * Ranking function: N/A

  * Invariants eval_ireclaim_17(A) -> eval_ireclaim_17(B)

     entry  : [A>=0,1>=A]
     non-rec: [A=B,A>=0,1>=A]
     rec    : [0=1]
     inv    : [A>=0,1>=A,A=B]

CRS eval_ireclaim_18

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ireclaim_18 -> eval_ireclaim_18

  * Ranking function: N/A

  * Invariants eval_ireclaim_18 -> eval_ireclaim_18

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ireclaim_19

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ireclaim_19 -> eval_ireclaim_19

  * Ranking function: N/A

  * Invariants eval_ireclaim_19 -> eval_ireclaim_19

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ireclaim_20

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ireclaim_20 -> eval_ireclaim_20

  * Ranking function: N/A

  * Invariants eval_ireclaim_20 -> eval_ireclaim_20

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ireclaim_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ireclaim_bb9_in -> eval_ireclaim_bb9_in

  * Ranking function: N/A

  * Invariants eval_ireclaim_bb9_in -> eval_ireclaim_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ireclaim_bb2_in(A)

  * Non Asymptotic Upper Bound: nat(-A+4) 

  * LOOPS eval_ireclaim_bb2_in(B) -> eval_ireclaim_bb2_in(C)
     - [B+1=C,3>=B]

  * Ranking function: nat(-B+4)

  * Invariants eval_ireclaim_bb2_in(A) -> eval_ireclaim_bb2_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


