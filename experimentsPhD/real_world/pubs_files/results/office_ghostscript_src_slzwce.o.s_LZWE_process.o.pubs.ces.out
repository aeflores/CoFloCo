This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_s_LZWE_process_bb1_in/1])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_s_LZWE_process_start(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_s_LZWE_process_bb1_in/1])) 

  * LOOPS eval_s_LZWE_process_start(B) -> eval_s_LZWE_process_start(C)

  * Ranking function: N/A

  * Invariants eval_s_LZWE_process_start(A) -> eval_s_LZWE_process_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_s_LZWE_process_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_s_LZWE_process_bb1_in/1])) 

  * LOOPS eval_s_LZWE_process_bb0_in -> eval_s_LZWE_process_bb0_in

  * Ranking function: N/A

  * Invariants eval_s_LZWE_process_bb0_in -> eval_s_LZWE_process_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_s_LZWE_process_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_s_LZWE_process_bb1_in(D,E,F) -> loop_cont_eval_s_LZWE_process_bb1_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_s_LZWE_process_bb1_in(A,B,C) -> loop_cont_eval_s_LZWE_process_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_s_LZWE_process_bb7_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_LZWE_process_bb7_in(B) -> eval_s_LZWE_process_bb7_in(C)

  * Ranking function: N/A

  * Invariants eval_s_LZWE_process_bb7_in(A) -> eval_s_LZWE_process_bb7_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_s_LZWE_process_30(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_LZWE_process_30(B) -> eval_s_LZWE_process_30(C)

  * Ranking function: N/A

  * Invariants eval_s_LZWE_process_30(A) -> eval_s_LZWE_process_30(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_s_LZWE_process_31

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_LZWE_process_31 -> eval_s_LZWE_process_31

  * Ranking function: N/A

  * Invariants eval_s_LZWE_process_31 -> eval_s_LZWE_process_31

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_s_LZWE_process_bb11_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_s_LZWE_process_bb11_in -> eval_s_LZWE_process_bb11_in

  * Ranking function: N/A

  * Invariants eval_s_LZWE_process_bb11_in -> eval_s_LZWE_process_bb11_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_s_LZWE_process_bb1_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_s_LZWE_process_bb1_in/1])) 

  * LOOPS eval_s_LZWE_process_bb1_in(B) -> eval_s_LZWE_process_bb1_in(C)
     - [B=C]
     - [B=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_s_LZWE_process_bb1_in/1]))

  * Invariants eval_s_LZWE_process_bb1_in(A) -> eval_s_LZWE_process_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [A=B]
     inv    : [A=B]


