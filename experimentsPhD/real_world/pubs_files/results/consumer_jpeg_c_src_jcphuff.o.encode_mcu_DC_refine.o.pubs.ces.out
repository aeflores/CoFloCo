This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_encode_mcu_DC_refine_bb4_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_DC_refine_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_encode_mcu_DC_refine_bb4_in/1])) 

  * LOOPS eval_encode_mcu_DC_refine_start -> eval_encode_mcu_DC_refine_start

  * Ranking function: N/A

  * Invariants eval_encode_mcu_DC_refine_start -> eval_encode_mcu_DC_refine_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_DC_refine_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_encode_mcu_DC_refine_bb4_in/1])) 

  * LOOPS eval_encode_mcu_DC_refine_bb0_in -> eval_encode_mcu_DC_refine_bb0_in

  * Ranking function: N/A

  * Invariants eval_encode_mcu_DC_refine_bb0_in -> eval_encode_mcu_DC_refine_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_DC_refine_9(A)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_encode_mcu_DC_refine_bb4_in/1])) 

  * LOOPS eval_encode_mcu_DC_refine_9(B) -> eval_encode_mcu_DC_refine_9(C)

  * Ranking function: N/A

  * Invariants eval_encode_mcu_DC_refine_9(A) -> eval_encode_mcu_DC_refine_9(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_encode_mcu_DC_refine_10

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_encode_mcu_DC_refine_bb4_in/1])) 

  * LOOPS eval_encode_mcu_DC_refine_10 -> eval_encode_mcu_DC_refine_10

  * Ranking function: N/A

  * Invariants eval_encode_mcu_DC_refine_10 -> eval_encode_mcu_DC_refine_10

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_DC_refine_bb3_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_encode_mcu_DC_refine_bb4_in/1])) 

  * LOOPS eval_encode_mcu_DC_refine_bb3_in -> eval_encode_mcu_DC_refine_bb3_in

  * Ranking function: N/A

  * Invariants eval_encode_mcu_DC_refine_bb3_in -> eval_encode_mcu_DC_refine_bb3_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_encode_mcu_DC_refine_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_encode_mcu_DC_refine_bb4_in(C,D) -> loop_cont_eval_encode_mcu_DC_refine_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_encode_mcu_DC_refine_bb4_in(A,B) -> loop_cont_eval_encode_mcu_DC_refine_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_encode_mcu_DC_refine_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_encode_mcu_DC_refine_bb9_in -> eval_encode_mcu_DC_refine_bb9_in

  * Ranking function: N/A

  * Invariants eval_encode_mcu_DC_refine_bb9_in -> eval_encode_mcu_DC_refine_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_DC_refine_bb10_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_encode_mcu_DC_refine_bb10_in -> eval_encode_mcu_DC_refine_bb10_in

  * Ranking function: N/A

  * Invariants eval_encode_mcu_DC_refine_bb10_in -> eval_encode_mcu_DC_refine_bb10_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_encode_mcu_DC_refine_bb4_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_encode_mcu_DC_refine_bb4_in/1])) 

  * LOOPS eval_encode_mcu_DC_refine_bb4_in(B) -> eval_encode_mcu_DC_refine_bb4_in(C)
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_encode_mcu_DC_refine_bb4_in/1]))

  * Invariants eval_encode_mcu_DC_refine_bb4_in(A) -> eval_encode_mcu_DC_refine_bb4_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


