This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_decode_mcu_bb4_in/3])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decode_mcu_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_decode_mcu_bb4_in/3])) 

  * LOOPS eval_decode_mcu_start -> eval_decode_mcu_start

  * Ranking function: N/A

  * Invariants eval_decode_mcu_start -> eval_decode_mcu_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decode_mcu_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_decode_mcu_bb4_in/3])) 

  * LOOPS eval_decode_mcu_bb0_in -> eval_decode_mcu_bb0_in

  * Ranking function: N/A

  * Invariants eval_decode_mcu_bb0_in -> eval_decode_mcu_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decode_mcu_4

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_decode_mcu_bb4_in/3])) 

  * LOOPS eval_decode_mcu_4 -> eval_decode_mcu_4

  * Ranking function: N/A

  * Invariants eval_decode_mcu_4 -> eval_decode_mcu_4

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decode_mcu_5

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_decode_mcu_bb4_in/3])) 

  * LOOPS eval_decode_mcu_5 -> eval_decode_mcu_5

  * Ranking function: N/A

  * Invariants eval_decode_mcu_5 -> eval_decode_mcu_5

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decode_mcu_bb3_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_decode_mcu_bb4_in/3])) 

  * LOOPS eval_decode_mcu_bb3_in -> eval_decode_mcu_bb3_in

  * Ranking function: N/A

  * Invariants eval_decode_mcu_bb3_in -> eval_decode_mcu_bb3_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decode_mcu_15(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_decode_mcu_bb4_in/3])) 

  * LOOPS eval_decode_mcu_15(C,D) -> eval_decode_mcu_15(E,F)

  * Ranking function: N/A

  * Invariants eval_decode_mcu_15(A,B) -> eval_decode_mcu_15(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_decode_mcu_16(A,B)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=2,cr=eval_decode_mcu_bb4_in/3])) 

  * LOOPS eval_decode_mcu_16(C,D) -> eval_decode_mcu_16(E,F)

  * Ranking function: N/A

  * Invariants eval_decode_mcu_16(A,B) -> eval_decode_mcu_16(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS loop_cont_eval_decode_mcu_bb4_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_decode_mcu_bb4_in(C,D) -> loop_cont_eval_decode_mcu_bb4_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_decode_mcu_bb4_in(A,B) -> loop_cont_eval_decode_mcu_bb4_in(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_decode_mcu_186

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decode_mcu_186 -> eval_decode_mcu_186

  * Ranking function: N/A

  * Invariants eval_decode_mcu_186 -> eval_decode_mcu_186

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decode_mcu_187

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decode_mcu_187 -> eval_decode_mcu_187

  * Ranking function: N/A

  * Invariants eval_decode_mcu_187 -> eval_decode_mcu_187

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decode_mcu_bb58_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_decode_mcu_bb58_in -> eval_decode_mcu_bb58_in

  * Ranking function: N/A

  * Invariants eval_decode_mcu_bb58_in -> eval_decode_mcu_bb58_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_decode_mcu_bb4_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=2,cr=eval_decode_mcu_bb4_in/3])) 

  * LOOPS eval_decode_mcu_bb4_in(D,E,F) -> eval_decode_mcu_bb4_in(G,H,I)
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []
     - []

  * Ranking function: c(failed(no_rf,[scc=2,cr=eval_decode_mcu_bb4_in/3]))

  * Invariants eval_decode_mcu_bb4_in(A,B,C) -> eval_decode_mcu_bb4_in(D,E,F)

     entry  : [C=0]
     non-rec: [A=D,B=E,C=F,C=0]
     rec    : [C=0]
     inv    : [C=0]

CRS eval_decode_mcu_bb40_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_decode_mcu_bb40_in/15])) 

  * LOOPS eval_decode_mcu_bb40_in(P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1) -> eval_decode_mcu_bb40_in(E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1)
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,D1+16=S1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,D1+16=S1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,D1+16=S1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,C1=R1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]
     - [D1+16=S1,C1=R1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,Z=O1,A1=P1,79>=S1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,D1+16=S1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_decode_mcu_bb40_in/15]))

  * Invariants eval_decode_mcu_bb40_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) -> eval_decode_mcu_bb40_in(P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1)

     entry  : [K=M,L=N,O=1]
     non-rec: [A=P,B=Q,C=R,D=S,E=T,F=U,G=V,H=W,I=X,J=Y,K=Z,L=A1,M=B1,N=C1,O=D1,K=M,L=N,O=1]
     rec    : [L=N,O=1,A=P,B=Q,C=R,D=S,E=T,F=U,G=V,H=W,I=X,J=Y,K=Z,L=A1,K=M]
     inv    : [A=P,B=Q,C=R,D=S,E=T,F=U,G=V,H=W,I=X,J=Y,K=Z,L=A1,O=1,L=N,K=M]

CRS eval_decode_mcu_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_decode_mcu_bb21_in/15])) 

  * LOOPS eval_decode_mcu_bb21_in(P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1) -> eval_decode_mcu_bb21_in(E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1)
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,D1+16=S1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,D1+16=S1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,D1+16=S1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,C1=R1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]
     - [D1+16=S1,C1=R1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,Z=O1,A1=P1,79>=S1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [X=M1,Z=O1,Y=N1,A1=P1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,63>=D1]
     - [Z=O1,A1=P1,D1+16=S1,P=E1,Q=F1,R=G1,S=H1,T=I1,U=J1,V=K1,W=L1,X=M1,Y=N1,63>=D1]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_decode_mcu_bb21_in/15]))

  * Invariants eval_decode_mcu_bb21_in(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) -> eval_decode_mcu_bb21_in(P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1)

     entry  : [K=M,L=N,O=1]
     non-rec: [A=P,B=Q,C=R,D=S,E=T,F=U,G=V,H=W,I=X,J=Y,K=Z,L=A1,M=B1,N=C1,O=D1,K=M,L=N,O=1]
     rec    : [L=N,O=1,A=P,B=Q,C=R,D=S,E=T,F=U,G=V,H=W,I=X,J=Y,K=Z,L=A1,K=M]
     inv    : [A=P,B=Q,C=R,D=S,E=T,F=U,G=V,H=W,I=X,J=Y,K=Z,L=A1,O=1,L=N,K=M]


