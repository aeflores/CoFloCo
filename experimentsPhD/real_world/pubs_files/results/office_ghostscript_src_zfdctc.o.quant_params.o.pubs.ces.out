This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_quant_params_start(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_quant_params_start(B) -> eval_quant_params_start(C)

  * Ranking function: N/A

  * Invariants eval_quant_params_start(A) -> eval_quant_params_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_quant_params_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_quant_params_bb0_in(B) -> eval_quant_params_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_quant_params_bb0_in(A) -> eval_quant_params_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_quant_params_bb13_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_quant_params_bb13_in(C,D) -> loop_cont_eval_quant_params_bb13_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_quant_params_bb13_in(A,B) -> loop_cont_eval_quant_params_bb13_in(C,D)

     entry  : [A=3]
     non-rec: [A=C,B=D,A=3]
     rec    : [0=1]
     inv    : [A=3,C=3,B=D]

CRS eval_quant_params_bb5_in(A)

  * Non Asymptotic Upper Bound: 1+nat(A) 

  * LOOPS eval_quant_params_bb5_in(B) -> eval_quant_params_bb5_in(C)

  * Ranking function: N/A

  * Invariants eval_quant_params_bb5_in(A) -> eval_quant_params_bb5_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_quant_params_bb6_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_quant_params_bb6_in(C,D) -> loop_cont_eval_quant_params_bb6_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_quant_params_bb6_in(A,B) -> loop_cont_eval_quant_params_bb6_in(C,D)

     entry  : [3>=A,A>=2]
     non-rec: [A=C,B=D,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=C,B=D]

CRS eval_quant_params_NewDefault7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_quant_params_NewDefault7_in -> eval_quant_params_NewDefault7_in

  * Ranking function: N/A

  * Invariants eval_quant_params_NewDefault7_in -> eval_quant_params_NewDefault7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_quant_params_bb6_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_quant_params_bb6_in(C,D) -> eval_quant_params_bb6_in(E,F)
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_quant_params_bb6_in(A,B) -> eval_quant_params_bb6_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_quant_params_bb13_in(A,B)

  * Non Asymptotic Upper Bound: nat(A-B) 

  * LOOPS eval_quant_params_bb13_in(C,D) -> eval_quant_params_bb13_in(E,F)
     - [D+1=F,C=E,C>=F]

  * Ranking function: nat(C-D)

  * Invariants eval_quant_params_bb13_in(A,B) -> eval_quant_params_bb13_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_quant_params_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_quant_params_NewDefault_in -> eval_quant_params_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_quant_params_NewDefault_in -> eval_quant_params_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_quant_params_bb15_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_quant_params_bb15_in -> eval_quant_params_bb15_in

  * Ranking function: N/A

  * Invariants eval_quant_params_bb15_in -> eval_quant_params_bb15_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


