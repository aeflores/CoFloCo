This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(1*A)/16 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_randombits_start(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/16 

  * LOOPS eval_randombits_start(B) -> eval_randombits_start(C)

  * Ranking function: N/A

  * Invariants eval_randombits_start(A) -> eval_randombits_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_randombits_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/16 

  * LOOPS eval_randombits_bb0_in(B) -> eval_randombits_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_randombits_bb0_in(A) -> eval_randombits_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_randombits_0(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/16 

  * LOOPS eval_randombits_0(B) -> eval_randombits_0(C)

  * Ranking function: N/A

  * Invariants eval_randombits_0(A) -> eval_randombits_0(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_randombits_1(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/16 

  * LOOPS eval_randombits_1(B) -> eval_randombits_1(C)

  * Ranking function: N/A

  * Invariants eval_randombits_1(A) -> eval_randombits_1(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_randombits_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_randombits_bb1_in(C,D) -> loop_cont_eval_randombits_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_randombits_bb1_in(A,B) -> loop_cont_eval_randombits_bb1_in(C,D)

     entry  : [3>=A,A>=2]
     non-rec: [A=C,B=D,3>=A,A>=2]
     rec    : [0=1]
     inv    : [A>=2,3>=A,A=C,B=D]

CRS eval_randombits_10

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_randombits_10 -> eval_randombits_10

  * Ranking function: N/A

  * Invariants eval_randombits_10 -> eval_randombits_10

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_randombits_11

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_randombits_11 -> eval_randombits_11

  * Ranking function: N/A

  * Invariants eval_randombits_11 -> eval_randombits_11

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_randombits_bb5_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_randombits_bb5_in -> eval_randombits_bb5_in

  * Ranking function: N/A

  * Invariants eval_randombits_bb5_in -> eval_randombits_bb5_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_randombits_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(A)/16 

  * LOOPS eval_randombits_bb1_in(B) -> eval_randombits_bb1_in(C)
     - [B=C+16,B>=16]

  * Ranking function: nat(B/16)

  * Invariants eval_randombits_bb1_in(A) -> eval_randombits_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B>=0,A>=B+16]
     inv    : [A>=B]


