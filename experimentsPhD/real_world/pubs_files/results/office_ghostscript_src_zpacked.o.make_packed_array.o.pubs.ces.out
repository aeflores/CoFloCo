This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 4+c(failed(schemes_failed,[scc=0,cr=eval_make_packed_array_bb1_in/4]))+c(failed(schemes_failed,[scc=1,cr=eval_make_packed_array_bb25_in/4]))+c(failed(schemes_failed,[scc=5,cr=eval_make_packed_array_bb27_in/4]))+c(failed(schemes_failed,[scc=6,cr=eval_make_packed_array_bb48_in/4])) 

  * LOOPS $pubs_aux_entry$(B) -> $pubs_aux_entry$(C)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A) -> $pubs_aux_entry$(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_make_packed_array_start(A)

  * Non Asymptotic Upper Bound: 4+c(failed(schemes_failed,[scc=0,cr=eval_make_packed_array_bb1_in/4]))+c(failed(schemes_failed,[scc=1,cr=eval_make_packed_array_bb25_in/4]))+c(failed(schemes_failed,[scc=5,cr=eval_make_packed_array_bb27_in/4]))+c(failed(schemes_failed,[scc=6,cr=eval_make_packed_array_bb48_in/4])) 

  * LOOPS eval_make_packed_array_start(B) -> eval_make_packed_array_start(C)

  * Ranking function: N/A

  * Invariants eval_make_packed_array_start(A) -> eval_make_packed_array_start(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_make_packed_array_bb0_in(A)

  * Non Asymptotic Upper Bound: 4+c(failed(schemes_failed,[scc=0,cr=eval_make_packed_array_bb1_in/4]))+c(failed(schemes_failed,[scc=1,cr=eval_make_packed_array_bb25_in/4]))+c(failed(schemes_failed,[scc=5,cr=eval_make_packed_array_bb27_in/4]))+c(failed(schemes_failed,[scc=6,cr=eval_make_packed_array_bb48_in/4])) 

  * LOOPS eval_make_packed_array_bb0_in(B) -> eval_make_packed_array_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_make_packed_array_bb0_in(A) -> eval_make_packed_array_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_make_packed_array_bb1_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=1,cr=eval_make_packed_array_bb25_in/4]))+c(failed(schemes_failed,[scc=5,cr=eval_make_packed_array_bb27_in/4]))+c(failed(schemes_failed,[scc=6,cr=eval_make_packed_array_bb48_in/4])) 

  * LOOPS loop_cont_eval_make_packed_array_bb1_in(G,H,I,J,K,L) -> loop_cont_eval_make_packed_array_bb1_in(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants loop_cont_eval_make_packed_array_bb1_in(A,B,C,D,E,F) -> loop_cont_eval_make_packed_array_bb1_in(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS eval_make_packed_array_71(A,B,C,D)

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=1,cr=eval_make_packed_array_bb25_in/4]))+c(failed(schemes_failed,[scc=5,cr=eval_make_packed_array_bb27_in/4]))+c(failed(schemes_failed,[scc=6,cr=eval_make_packed_array_bb48_in/4])) 

  * LOOPS eval_make_packed_array_71(E,F,G,H) -> eval_make_packed_array_71(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_make_packed_array_71(A,B,C,D) -> eval_make_packed_array_71(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_make_packed_array_72(A,B,C,D)

  * Non Asymptotic Upper Bound: 3+c(failed(schemes_failed,[scc=1,cr=eval_make_packed_array_bb25_in/4]))+c(failed(schemes_failed,[scc=5,cr=eval_make_packed_array_bb27_in/4]))+c(failed(schemes_failed,[scc=6,cr=eval_make_packed_array_bb48_in/4])) 

  * LOOPS eval_make_packed_array_72(E,F,G,H) -> eval_make_packed_array_72(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_make_packed_array_72(A,B,C,D) -> eval_make_packed_array_72(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS loop_cont_eval_make_packed_array_bb25_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 2+c(failed(schemes_failed,[scc=5,cr=eval_make_packed_array_bb27_in/4]))+c(failed(schemes_failed,[scc=6,cr=eval_make_packed_array_bb48_in/4])) 

  * LOOPS loop_cont_eval_make_packed_array_bb25_in(G,H,I,J,K,L) -> loop_cont_eval_make_packed_array_bb25_in(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants loop_cont_eval_make_packed_array_bb25_in(A,B,C,D,E,F) -> loop_cont_eval_make_packed_array_bb25_in(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS loop_cont_eval_make_packed_array_bb27_in(A,B,C,D,E,F)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=6,cr=eval_make_packed_array_bb48_in/4])) 

  * LOOPS loop_cont_eval_make_packed_array_bb27_in(G,H,I,J,K,L) -> loop_cont_eval_make_packed_array_bb27_in(M,N,O,P,Q,R)

  * Ranking function: N/A

  * Invariants loop_cont_eval_make_packed_array_bb27_in(A,B,C,D,E,F) -> loop_cont_eval_make_packed_array_bb27_in(G,H,I,J,K,L)

     entry  : []
     non-rec: [A=G,B=H,C=I,D=J,E=K,F=L]
     rec    : [0=1]
     inv    : [A=G,B=H,C=I,D=J,E=K,F=L]

CRS loop_cont_eval_make_packed_array_bb48_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_make_packed_array_bb48_in(F,G,H,I,J) -> loop_cont_eval_make_packed_array_bb48_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_make_packed_array_bb48_in(A,B,C,D,E) -> loop_cont_eval_make_packed_array_bb48_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_make_packed_array_152(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_make_packed_array_152(D,E,F) -> eval_make_packed_array_152(G,H,I)

  * Ranking function: N/A

  * Invariants eval_make_packed_array_152(A,B,C) -> eval_make_packed_array_152(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_make_packed_array_153(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_make_packed_array_153(C,D) -> eval_make_packed_array_153(E,F)

  * Ranking function: N/A

  * Invariants eval_make_packed_array_153(A,B) -> eval_make_packed_array_153(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_make_packed_array_bb48_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=6,cr=eval_make_packed_array_bb48_in/4])) 

  * LOOPS eval_make_packed_array_bb48_in(E,F,G,H) -> eval_make_packed_array_bb48_in(I,J,K,L)
     - [E=I,F=J,G=K,H=L+1,0>=L+2]
     - [E=I,F=J,G=K,H=L+1,L>=0]

  * Ranking function: c(failed(no_rf,[scc=6,cr=eval_make_packed_array_bb48_in/4]))

  * Invariants eval_make_packed_array_bb48_in(A,B,C,D) -> eval_make_packed_array_bb48_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [C=G,B=F,A=E,D>=H+1]
     inv    : [D>=H,B=F,C=G,A=E]

CRS eval_make_packed_array_bb27_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=5,cr=eval_make_packed_array_bb27_in/4])) 

  * LOOPS eval_make_packed_array_bb27_in(E,F,G,H) -> eval_make_packed_array_bb27_in(I,J,K,L)
     - [0>=H+1]
     - [0>=H+1]
     - [0>=H+1]
     - [H=L+1,E=I,F=J,G=K,0>=L+2]
     - [0>=H+1]
     - [0>=H+1]
     - [0>=H+1]
     - [0>=H+1]
     - [0>=H+1]
     - [0>=H+1]
     - [H=L+1,E=I,F=J,G=K,0>=L+2]
     - [0>=H+1]
     - [0>=H+1]
     - [0>=H+1]
     - [H=L+1,E=I,F=J,G=K,0>=L+2]
     - [0>=H+1]
     - [0>=H+1]
     - [0>=H+1]
     - [H=L+1,E=I,F=J,G=K,0>=L+2]
     - [0>=H+1]
     - [0>=H+1]
     - [0>=H+1]
     - [H>=1]
     - [H>=1]
     - [H>=1]
     - [H=L+1,E=I,F=J,G=K,L>=0]
     - [H>=1]
     - [H>=1]
     - [H>=1]
     - [H>=1]
     - [H>=1]
     - [H>=1]
     - [H=L+1,E=I,F=J,G=K,L>=0]
     - [H>=1]
     - [H>=1]
     - [H>=1]
     - [H=L+1,E=I,F=J,G=K,L>=0]
     - [H>=1]
     - [H>=1]
     - [H>=1]
     - [H=L+1,E=I,F=J,G=K,L>=0]
     - [H>=1]
     - [H>=1]
     - [H>=1]

  * Ranking function: c(failed(no_rf,[scc=5,cr=eval_make_packed_array_bb27_in/4]))

  * Invariants eval_make_packed_array_bb27_in(A,B,C,D) -> eval_make_packed_array_bb27_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : []
     inv    : []

CRS eval_make_packed_array_bb43_in(A,B,C,D,E,F,G)

  * Non Asymptotic Upper Bound: nat(G) 

  * LOOPS eval_make_packed_array_bb43_in(H,I,J,K,L,M,N) -> eval_make_packed_array_bb43_in(O,P,Q,R,S,T,U)
     - [N=U+1,H=O,I=P,J=Q,K=R,L=S,M=T,U>=0]

  * Ranking function: nat(N)

  * Invariants eval_make_packed_array_bb43_in(A,B,C,D,E,F,G) -> eval_make_packed_array_bb43_in(H,I,J,K,L,M,N)

     entry  : [D=E+1,F=G]
     non-rec: [A=H,B=I,C=J,D=K,E=L,F=M,G=N,D=E+1,F=G]
     rec    : [F=M,D=L+1,D=K,C=J,B=I,A=H,F=G,D=E+1,N>=0,F>=N+1]
     inv    : [F>=N,F=G,A=H,B=I,C=J,D=K,D=L+1,F=M,D=E+1]

CRS eval_make_packed_array_bb51_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_make_packed_array_bb51_in -> eval_make_packed_array_bb51_in

  * Ranking function: N/A

  * Invariants eval_make_packed_array_bb51_in -> eval_make_packed_array_bb51_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_make_packed_array_bb25_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=1,cr=eval_make_packed_array_bb25_in/4])) 

  * LOOPS eval_make_packed_array_bb25_in(E,F,G,H) -> eval_make_packed_array_bb25_in(I,J,K,L)
     - [E=I,F=J,G=K,H=L+1,0>=L+2]
     - [E=I,F=J,G=K,H=L+1,L>=0]

  * Ranking function: c(failed(no_rf,[scc=1,cr=eval_make_packed_array_bb25_in/4]))

  * Invariants eval_make_packed_array_bb25_in(A,B,C,D) -> eval_make_packed_array_bb25_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [C=G,B=F,A=E,D>=H+1]
     inv    : [D>=H,B=F,C=G,A=E]

CRS eval_make_packed_array_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_make_packed_array_bb1_in/4])) 

  * LOOPS eval_make_packed_array_bb1_in(E,F,G,H) -> eval_make_packed_array_bb1_in(I,J,K,L)
     - [H=L+1,E=I,0>=H+1]
     - [H=L+1,E=I,0>=H+1]
     - [H=L+1,E=I,F=J,G+1=K,0>=H+1]
     - [E=I,H=L+1,0>=H+1]
     - [E=I,H=L+1,0>=H+1]
     - [H=L+1,E=I,0>=H+1]
     - [H=L+1,E=I,0>=H+1]
     - [H=L+1,E=I,F=J,G+1=K,0>=H+1]
     - [E=I,H=L+1,0>=H+1]
     - [E=I,H=L+1,0>=H+1]
     - [H=L+1,E=I,F=J,G+1=K,0>=H+1]
     - [H=L+1,E=I,0>=H+1]
     - [H=L+1,E=I,0>=H+1]
     - [H=L+1,E=I,F=J,G+1=K,0>=H+1]
     - [E=I,H=L+1,0>=H+1]
     - [E=I,H=L+1,0>=H+1]
     - [H=L+1,E=I,H>=1]
     - [H=L+1,E=I,H>=1]
     - [H=L+1,E=I,F=J,G+1=K,H>=1]
     - [E=I,H=L+1,H>=1]
     - [E=I,H=L+1,H>=1]
     - [H=L+1,E=I,H>=1]
     - [H=L+1,E=I,H>=1]
     - [H=L+1,E=I,F=J,G+1=K,H>=1]
     - [E=I,H=L+1,H>=1]
     - [E=I,H=L+1,H>=1]
     - [H=L+1,E=I,F=J,G+1=K,H>=1]
     - [H=L+1,E=I,H>=1]
     - [H=L+1,E=I,H>=1]
     - [H=L+1,E=I,F=J,G+1=K,H>=1]
     - [E=I,H=L+1,H>=1]
     - [E=I,H=L+1,H>=1]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_make_packed_array_bb1_in/4]))

  * Invariants eval_make_packed_array_bb1_in(A,B,C,D) -> eval_make_packed_array_bb1_in(E,F,G,H)

     entry  : [B=0,A=D,C=0]
     non-rec: [A=E,B=F,C=G,D=H,B=0,A=D,C=0]
     rec    : [A=E,A=D,C=0,B=0,A>=H+1]
     inv    : [A>=H,A=E,C=0,B=0,A=D]


