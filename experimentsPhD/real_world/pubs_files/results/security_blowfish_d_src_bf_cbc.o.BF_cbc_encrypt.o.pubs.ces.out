This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+nat(1*A)/8 

  * LOOPS $pubs_aux_entry$(C,D) -> $pubs_aux_entry$(E,F)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B) -> $pubs_aux_entry$(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_BF_cbc_encrypt_start(A,B)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/8 

  * LOOPS eval_BF_cbc_encrypt_start(C,D) -> eval_BF_cbc_encrypt_start(E,F)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_start(A,B) -> eval_BF_cbc_encrypt_start(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_BF_cbc_encrypt_bb0_in(A)

  * Non Asymptotic Upper Bound: 1+nat(1*A)/8 

  * LOOPS eval_BF_cbc_encrypt_bb0_in(B) -> eval_BF_cbc_encrypt_bb0_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb0_in(A) -> eval_BF_cbc_encrypt_bb0_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS loop_cont_eval_BF_cbc_encrypt_bb1_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_BF_cbc_encrypt_bb1_in(C,D) -> loop_cont_eval_BF_cbc_encrypt_bb1_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_BF_cbc_encrypt_bb1_in(A,B) -> loop_cont_eval_BF_cbc_encrypt_bb1_in(C,D)

     entry  : [A>=2]
     non-rec: [A=C,B=D,A>=2]
     rec    : [0=1]
     inv    : [A>=2,A=C,B=D]

CRS eval_BF_cbc_encrypt_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb6_in -> eval_BF_cbc_encrypt_bb6_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb6_in -> eval_BF_cbc_encrypt_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb7_in -> eval_BF_cbc_encrypt_bb7_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb7_in -> eval_BF_cbc_encrypt_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_bb8_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb8_in -> eval_BF_cbc_encrypt_bb8_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb8_in -> eval_BF_cbc_encrypt_bb8_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_bb9_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb9_in -> eval_BF_cbc_encrypt_bb9_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb9_in -> eval_BF_cbc_encrypt_bb9_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_bb10_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb10_in -> eval_BF_cbc_encrypt_bb10_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb10_in -> eval_BF_cbc_encrypt_bb10_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_bb11_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb11_in -> eval_BF_cbc_encrypt_bb11_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb11_in -> eval_BF_cbc_encrypt_bb11_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_bb12_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb12_in -> eval_BF_cbc_encrypt_bb12_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb12_in -> eval_BF_cbc_encrypt_bb12_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_NewDefault_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_NewDefault_in -> eval_BF_cbc_encrypt_NewDefault_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_NewDefault_in -> eval_BF_cbc_encrypt_NewDefault_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_bb13_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb13_in -> eval_BF_cbc_encrypt_bb13_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb13_in -> eval_BF_cbc_encrypt_bb13_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_140

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_140 -> eval_BF_cbc_encrypt_140

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_140 -> eval_BF_cbc_encrypt_140

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_141

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_141 -> eval_BF_cbc_encrypt_141

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_141 -> eval_BF_cbc_encrypt_141

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_bb14_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb14_in -> eval_BF_cbc_encrypt_bb14_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb14_in -> eval_BF_cbc_encrypt_bb14_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_BF_cbc_encrypt_bb15_in(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_BF_cbc_encrypt_bb15_in(D,E,F) -> loop_cont_eval_BF_cbc_encrypt_bb15_in(G,H,I)

  * Ranking function: N/A

  * Invariants loop_cont_eval_BF_cbc_encrypt_bb15_in(A,B,C) -> loop_cont_eval_BF_cbc_encrypt_bb15_in(D,E,F)

     entry  : [0>=B+1,12>=A,A>=11]
     non-rec: [A=D,B=E,C=F,0>=B+1,12>=A,A>=11]
     rec    : [0=1]
     inv    : [A>=11,0>=B+1,12>=A,A=D,B=E,C=F]

CRS eval_BF_cbc_encrypt_302(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_302(B) -> eval_BF_cbc_encrypt_302(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_302(A) -> eval_BF_cbc_encrypt_302(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_303(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_303(B) -> eval_BF_cbc_encrypt_303(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_303(A) -> eval_BF_cbc_encrypt_303(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_bb20_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb20_in(B) -> eval_BF_cbc_encrypt_bb20_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb20_in(A) -> eval_BF_cbc_encrypt_bb20_in(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_bb21_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb21_in(B) -> eval_BF_cbc_encrypt_bb21_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb21_in(A) -> eval_BF_cbc_encrypt_bb21_in(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_bb22_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb22_in(B) -> eval_BF_cbc_encrypt_bb22_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb22_in(A) -> eval_BF_cbc_encrypt_bb22_in(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_bb23_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb23_in(B) -> eval_BF_cbc_encrypt_bb23_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb23_in(A) -> eval_BF_cbc_encrypt_bb23_in(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_bb24_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb24_in(B) -> eval_BF_cbc_encrypt_bb24_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb24_in(A) -> eval_BF_cbc_encrypt_bb24_in(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_bb25_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb25_in(B) -> eval_BF_cbc_encrypt_bb25_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb25_in(A) -> eval_BF_cbc_encrypt_bb25_in(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_bb26_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb26_in(B) -> eval_BF_cbc_encrypt_bb26_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb26_in(A) -> eval_BF_cbc_encrypt_bb26_in(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_NewDefault36_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_NewDefault36_in(B) -> eval_BF_cbc_encrypt_NewDefault36_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_NewDefault36_in(A) -> eval_BF_cbc_encrypt_NewDefault36_in(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_bb27_in(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb27_in(B) -> eval_BF_cbc_encrypt_bb27_in(C)

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb27_in(A) -> eval_BF_cbc_encrypt_bb27_in(B)

     entry  : [0>=A+1]
     non-rec: [A=B,0>=A+1]
     rec    : [0=1]
     inv    : [0>=A+1,A=B]

CRS eval_BF_cbc_encrypt_bb28_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_BF_cbc_encrypt_bb28_in -> eval_BF_cbc_encrypt_bb28_in

  * Ranking function: N/A

  * Invariants eval_BF_cbc_encrypt_bb28_in -> eval_BF_cbc_encrypt_bb28_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_BF_cbc_encrypt_bb1_in(A)

  * Non Asymptotic Upper Bound: nat(A+8)/8 

  * LOOPS eval_BF_cbc_encrypt_bb1_in(B) -> eval_BF_cbc_encrypt_bb1_in(C)
     - [B=C+8,C+8>=0]

  * Ranking function: nat(B/8+1)

  * Invariants eval_BF_cbc_encrypt_bb1_in(A) -> eval_BF_cbc_encrypt_bb1_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B+8>=0,A>=B+8]
     inv    : [A>=B]

CRS eval_BF_cbc_encrypt_bb15_in(A)

  * Non Asymptotic Upper Bound: nat(A+8)/8 

  * LOOPS eval_BF_cbc_encrypt_bb15_in(B) -> eval_BF_cbc_encrypt_bb15_in(C)
     - [B=C+8,C+8>=0]

  * Ranking function: nat(B/8+1)

  * Invariants eval_BF_cbc_encrypt_bb15_in(A) -> eval_BF_cbc_encrypt_bb15_in(B)

     entry  : []
     non-rec: [A=B]
     rec    : [B+8>=0,A>=B+8]
     inv    : [A>=B]


