This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$(A,B,C,D) -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ck_dup_output_bb1_in/3])) 

  * LOOPS $pubs_aux_entry$(E,F,G,H) -> $pubs_aux_entry$(I,J,K,L)

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$(A,B,C,D) -> $pubs_aux_entry$(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_ck_dup_output_start(A,B,C,D)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ck_dup_output_bb1_in/3])) 

  * LOOPS eval_ck_dup_output_start(E,F,G,H) -> eval_ck_dup_output_start(I,J,K,L)

  * Ranking function: N/A

  * Invariants eval_ck_dup_output_start(A,B,C,D) -> eval_ck_dup_output_start(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_ck_dup_output_bb0_in(A,B,C)

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_ck_dup_output_bb1_in/3])) 

  * LOOPS eval_ck_dup_output_bb0_in(D,E,F) -> eval_ck_dup_output_bb0_in(G,H,I)

  * Ranking function: N/A

  * Invariants eval_ck_dup_output_bb0_in(A,B,C) -> eval_ck_dup_output_bb0_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS loop_cont_eval_ck_dup_output_bb1_in(A,B,C,D)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_ck_dup_output_bb1_in(E,F,G,H) -> loop_cont_eval_ck_dup_output_bb1_in(I,J,K,L)

  * Ranking function: N/A

  * Invariants loop_cont_eval_ck_dup_output_bb1_in(A,B,C,D) -> loop_cont_eval_ck_dup_output_bb1_in(E,F,G,H)

     entry  : []
     non-rec: [A=E,B=F,C=G,D=H]
     rec    : [0=1]
     inv    : [A=E,B=F,C=G,D=H]

CRS eval_ck_dup_output_31(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ck_dup_output_31(C,D) -> eval_ck_dup_output_31(E,F)

  * Ranking function: N/A

  * Invariants eval_ck_dup_output_31(A,B) -> eval_ck_dup_output_31(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ck_dup_output_32(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ck_dup_output_32(C,D) -> eval_ck_dup_output_32(E,F)

  * Ranking function: N/A

  * Invariants eval_ck_dup_output_32(A,B) -> eval_ck_dup_output_32(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ck_dup_output_33

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ck_dup_output_33 -> eval_ck_dup_output_33

  * Ranking function: N/A

  * Invariants eval_ck_dup_output_33 -> eval_ck_dup_output_33

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ck_dup_output_10(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ck_dup_output_10(C,D) -> eval_ck_dup_output_10(E,F)

  * Ranking function: N/A

  * Invariants eval_ck_dup_output_10(A,B) -> eval_ck_dup_output_10(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_ck_dup_output_11

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ck_dup_output_11 -> eval_ck_dup_output_11

  * Ranking function: N/A

  * Invariants eval_ck_dup_output_11 -> eval_ck_dup_output_11

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ck_dup_output_bb15_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_ck_dup_output_bb15_in -> eval_ck_dup_output_bb15_in

  * Ranking function: N/A

  * Invariants eval_ck_dup_output_bb15_in -> eval_ck_dup_output_bb15_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_ck_dup_output_bb1_in(A,B,C)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_ck_dup_output_bb1_in/3])) 

  * LOOPS eval_ck_dup_output_bb1_in(D,E,F) -> eval_ck_dup_output_bb1_in(G,H,I)
     - [F=I,D=0,G=0,E=H]
     - [F=I,D=0,G=0,E=H]
     - [F=I,D=0,G=0,E=H]
     - [F=I,D=0,G=0,E=H]
     - [F=I,D=0,G=0,E=H]
     - [F=I,D=0,G=0,E=H]
     - [F=I,D=0,G=0,E=H]
     - [F=I,D=0,G=0,E=H]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_ck_dup_output_bb1_in/3]))

  * Invariants eval_ck_dup_output_bb1_in(A,B,C) -> eval_ck_dup_output_bb1_in(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [A=0,D=0,B=E,C=F]
     inv    : [A=D,B=E,C=F]


