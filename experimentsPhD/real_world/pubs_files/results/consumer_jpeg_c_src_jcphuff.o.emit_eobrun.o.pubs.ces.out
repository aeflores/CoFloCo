This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_emit_eobrun_bb2_in/1])) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_emit_eobrun_start

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_emit_eobrun_bb2_in/1])) 

  * LOOPS eval_emit_eobrun_start -> eval_emit_eobrun_start

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_start -> eval_emit_eobrun_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_emit_eobrun_bb0_in

  * Non Asymptotic Upper Bound: 1+c(failed(schemes_failed,[scc=0,cr=eval_emit_eobrun_bb2_in/1])) 

  * LOOPS eval_emit_eobrun_bb0_in -> eval_emit_eobrun_bb0_in

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_bb0_in -> eval_emit_eobrun_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_emit_eobrun_bb2_in(A,B,C,D,E)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_emit_eobrun_bb2_in(F,G,H,I,J) -> loop_cont_eval_emit_eobrun_bb2_in(K,L,M,N,O)

  * Ranking function: N/A

  * Invariants loop_cont_eval_emit_eobrun_bb2_in(A,B,C,D,E) -> loop_cont_eval_emit_eobrun_bb2_in(F,G,H,I,J)

     entry  : []
     non-rec: [A=F,B=G,C=H,D=I,E=J]
     rec    : [0=1]
     inv    : [A=F,B=G,C=H,D=I,E=J]

CRS eval_emit_eobrun_10(A,B,C)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_emit_eobrun_10(D,E,F) -> eval_emit_eobrun_10(G,H,I)

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_10(A,B,C) -> eval_emit_eobrun_10(D,E,F)

     entry  : []
     non-rec: [A=D,B=E,C=F]
     rec    : [0=1]
     inv    : [A=D,B=E,C=F]

CRS eval_emit_eobrun_11(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_emit_eobrun_11(B) -> eval_emit_eobrun_11(C)

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_11(A) -> eval_emit_eobrun_11(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_emit_eobrun_13(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_emit_eobrun_13(C,D) -> eval_emit_eobrun_13(E,F)

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_13(A,B) -> eval_emit_eobrun_13(C,D)

     entry  : []
     non-rec: [A=C,B=D]
     rec    : [0=1]
     inv    : [A=C,B=D]

CRS eval_emit_eobrun_14

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_emit_eobrun_14 -> eval_emit_eobrun_14

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_14 -> eval_emit_eobrun_14

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_emit_eobrun_bb6_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_emit_eobrun_bb6_in -> eval_emit_eobrun_bb6_in

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_bb6_in -> eval_emit_eobrun_bb6_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_emit_eobrun_17(A)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_emit_eobrun_17(B) -> eval_emit_eobrun_17(C)

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_17(A) -> eval_emit_eobrun_17(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_emit_eobrun_18

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_emit_eobrun_18 -> eval_emit_eobrun_18

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_18 -> eval_emit_eobrun_18

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_emit_eobrun_bb7_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_emit_eobrun_bb7_in -> eval_emit_eobrun_bb7_in

  * Ranking function: N/A

  * Invariants eval_emit_eobrun_bb7_in -> eval_emit_eobrun_bb7_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_emit_eobrun_bb2_in(A)

  * Non Asymptotic Upper Bound: c(failed(schemes_failed,[scc=0,cr=eval_emit_eobrun_bb2_in/1])) 

  * LOOPS eval_emit_eobrun_bb2_in(B) -> eval_emit_eobrun_bb2_in(C)
     - [B+1=C]

  * Ranking function: c(failed(no_rf,[scc=0,cr=eval_emit_eobrun_bb2_in/1]))

  * Invariants eval_emit_eobrun_bb2_in(A) -> eval_emit_eobrun_bb2_in(B)

     entry  : [A=0]
     non-rec: [A=B,A=0]
     rec    : [A=0,B>=1]
     inv    : [B>=0,A=0]


