This is PUBS, version 0.2.
Copyright (C) 2007, 2008, 2009 UPM, UCM.
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to
redistribute it under certain conditions.



CRS $pubs_aux_entry$ -- THE MAIN ENTRY

  * Non Asymptotic Upper Bound: 1+6*nat(c(maximize_failed)) 

  * LOOPS $pubs_aux_entry$ -> $pubs_aux_entry$

  * Ranking function: N/A

  * Invariants $pubs_aux_entry$ -> $pubs_aux_entry$

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_execstack_continue_start

  * Non Asymptotic Upper Bound: 1+6*nat(c(maximize_failed)) 

  * LOOPS eval_execstack_continue_start -> eval_execstack_continue_start

  * Ranking function: N/A

  * Invariants eval_execstack_continue_start -> eval_execstack_continue_start

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_execstack_continue_bb0_in

  * Non Asymptotic Upper Bound: 1+6*nat(c(maximize_failed)) 

  * LOOPS eval_execstack_continue_bb0_in -> eval_execstack_continue_bb0_in

  * Ranking function: N/A

  * Invariants eval_execstack_continue_bb0_in -> eval_execstack_continue_bb0_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS eval_execstack_continue_2(A)

  * Non Asymptotic Upper Bound: 1+6*nat(c(maximize_failed)) 

  * LOOPS eval_execstack_continue_2(B) -> eval_execstack_continue_2(C)

  * Ranking function: N/A

  * Invariants eval_execstack_continue_2(A) -> eval_execstack_continue_2(B)

     entry  : []
     non-rec: [A=B]
     rec    : [0=1]
     inv    : [A=B]

CRS eval_execstack_continue_3

  * Non Asymptotic Upper Bound: 1+6*nat(c(maximize_failed)) 

  * LOOPS eval_execstack_continue_3 -> eval_execstack_continue_3

  * Ranking function: N/A

  * Invariants eval_execstack_continue_3 -> eval_execstack_continue_3

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []

CRS loop_cont_eval_execstack_continue_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 0 

  * LOOPS loop_cont_eval_execstack_continue_bb2_in(C,D) -> loop_cont_eval_execstack_continue_bb2_in(E,F)

  * Ranking function: N/A

  * Invariants loop_cont_eval_execstack_continue_bb2_in(A,B) -> loop_cont_eval_execstack_continue_bb2_in(C,D)

     entry  : [A=2]
     non-rec: [A=C,B=D,A=2]
     rec    : [0=1]
     inv    : [A=2,C=2,B=D]

CRS eval_execstack_continue_bb2_in(A,B)

  * Non Asymptotic Upper Bound: 6*nat(A-B) 

  * LOOPS eval_execstack_continue_bb2_in(C,D) -> eval_execstack_continue_bb2_in(E,F)
     - [D+1=F,C=E,C>=D+1]
     - [D+1=F,C=E,C>=D+1]
     - [D+1=F,C=E,C>=D+1]
     - [D+1=F,C=E,C>=D+1]
     - [D+1=F,C=E,C>=D+1]
     - [D+1=F,C=E,C>=D+1]

  * Ranking function: nat(C-D)

  * Invariants eval_execstack_continue_bb2_in(A,B) -> eval_execstack_continue_bb2_in(C,D)

     entry  : [B=0]
     non-rec: [A=C,B=D,B=0]
     rec    : [A=C,B=0,A>=D,D>=1]
     inv    : [D>=0,A=C,B=0]

CRS eval_execstack_continue_bb12_in

  * Non Asymptotic Upper Bound: 0 

  * LOOPS eval_execstack_continue_bb12_in -> eval_execstack_continue_bb12_in

  * Ranking function: N/A

  * Invariants eval_execstack_continue_bb12_in -> eval_execstack_continue_bb12_in

     entry  : []
     non-rec: []
     rec    : [0=1]
     inv    : []


