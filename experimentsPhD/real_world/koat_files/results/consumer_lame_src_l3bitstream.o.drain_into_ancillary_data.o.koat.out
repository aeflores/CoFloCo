YES(?, pow(2, 2*v_lengthInBits + 63) + pow(2, 2*v_lengthInBits + 63) * 2 + 38)

Initial complexity problem:
1:	T:
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, nondef.1, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ v_lengthInBits > 0 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, nondef.1, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ v_lengthInBits < 0 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ v_lengthInBits = 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, nondef.1, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, nondef.1, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ v_lengthInBits < 0 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ v_lengthInBits = 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, nondef.1, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ v_lengthInBits > 0 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, nondef.1, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_1, v_i.0, v_lengthInBits)) [ v_i.0 < v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_8(v_0, v_1, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_1, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_1, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_1, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_1, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_1, v_i.0 + 1, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_8(v_0, v_1, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_1, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_1, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_9(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_1, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_1, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_1, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_0, v_i.0, v_lengthInBits].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 < v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ v_lengthInBits > 0 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ v_lengthInBits = 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ v_lengthInBits < 0 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ v_lengthInBits = 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ v_lengthInBits < 0 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ v_lengthInBits > 0 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 2:
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ v_lengthInBits > 0 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ v_lengthInBits = 0 ]
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ v_lengthInBits < 0 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ v_lengthInBits = 0 ]
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ v_lengthInBits < 0 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ v_lengthInBits > 0 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
We thus obtain the following problem:
3:	T:
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 < v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(?, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 < v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_drain_into_ancillary_data_5) = 4
	Pol(eval_drain_into_ancillary_data_bb1_in) = 4
	Pol(eval_drain_into_ancillary_data_9) = 2
	Pol(eval_drain_into_ancillary_data_bb5_in) = 1
	Pol(eval_drain_into_ancillary_data_4) = 4
	Pol(eval_BF_addEntry_start) = 0
	Pol(eval_drain_into_ancillary_data_8) = 3
	Pol(eval_drain_into_ancillary_data_stop) = 0
	Pol(eval_drain_into_ancillary_data_bb0_in) = 4
	Pol(eval_drain_into_ancillary_data_start) = 4
orients all transitions weakly and the transitions
	eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits))
	eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
	eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
	eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits))
	eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits))
strictly and produces the following problem:
5:	T:
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits))
		(4, 1)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits))
		(4, 1)    eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits))
		(4, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits))
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 < v_0 ]
		(4, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(4, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= v_0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

Applied AI with 'oct' on problem 5 to obtain the following invariants:
  For symbol eval_drain_into_ancillary_data_4: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_drain_into_ancillary_data_5: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_drain_into_ancillary_data_8: X_2 >= 0 /\ -X_1 + X_2 >= 0
  For symbol eval_drain_into_ancillary_data_9: X_2 >= 0 /\ -X_1 + X_2 >= 0
  For symbol eval_drain_into_ancillary_data_bb1_in: X_2 >= 0
  For symbol eval_drain_into_ancillary_data_bb5_in: X_2 >= 0 /\ -X_1 + X_2 >= 0


This yielded the following problem:
6:	T:
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(4, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 ]
		(4, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 ]
		(4, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 1)    eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 1)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

By chaining the transition eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
We thus obtain the following problem:
7:	T:
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(4, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 ]
		(4, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 1)    eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 1)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

By chaining the transition eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
We thus obtain the following problem:
8:	T:
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 ]
		(4, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 1)    eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 1)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_drain_into_ancillary_data_8(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
We thus obtain the following problem:
9:	T:
		(4, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 1)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

By chaining the transition eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ] with all transitions in problem 9, the following new transition is obtained:
	eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
We thus obtain the following problem:
10:	T:
		(4, 2)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 1)    eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_drain_into_ancillary_data_bb5_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

By chaining the transition eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 ] with all transitions in problem 11, the following new transition is obtained:
	eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_drain_into_ancillary_data_4(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
We thus obtain the following problem:
13:	T:
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

By chaining the transition eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 ] with all transitions in problem 13, the following new transitions are obtained:
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(0, 0, v_lengthInBits), eval_drain_into_ancillary_data_9(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ 0 >= 0 ]
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ 0 >= 0 ]
We thus obtain the following problem:
14:	T:
		(1, 3)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(0, 0, v_lengthInBits), eval_drain_into_ancillary_data_9(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ 0 >= 0 ]
		(1, 3)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ 0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

By chaining the transition eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 ] with all transitions in problem 14, the following new transitions are obtained:
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(nondef.0, 0, v_lengthInBits), eval_drain_into_ancillary_data_9(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 /\ 0 >= 0 /\ 0 >= nondef.0 /\ -nondef.0 >= 0 ]
	eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 /\ 0 >= 0 /\ 0 >= nondef.0 /\ -nondef.0 >= 0 ]
We thus obtain the following problem:
15:	T:
		(1, 3)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(nondef.0, 0, v_lengthInBits), eval_drain_into_ancillary_data_9(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 /\ 0 >= 0 /\ 0 >= nondef.0 /\ -nondef.0 >= 0 ]
		(1, 3)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 /\ 0 >= 0 /\ 0 >= nondef.0 /\ -nondef.0 >= 0 ]
		(1, 3)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(0, 0, v_lengthInBits), eval_drain_into_ancillary_data_9(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ 0 >= 0 ]
		(1, 3)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ 0 >= 0 ]
		(?, 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(?, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)    eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)    eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

A separated polynomial rank function for exponential bounds with
	Pol(eval_drain_into_ancillary_data_bb0_in) = 2*V_3 + 62
	Pol(eval_BF_addEntry_start) = 64*V_1 - 64*V_2 - 1
	Pol(eval_drain_into_ancillary_data_9) = 64*V_1 - 64*V_2
	Pol(eval_drain_into_ancillary_data_stop) = 64*V_1 - 64*V_2
	Pol(eval_drain_into_ancillary_data_5) = 64*V_1 - 64*V_2 - 32
	Pol(eval_drain_into_ancillary_data_bb1_in) = 64*V_1 - 64*V_2
	Pol(eval_drain_into_ancillary_data_start) = 2*V_3 + 62
orients all transitions weakly and the transitions
	eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
	eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
strictly and produces the following problem:
16:	T:
		(1, 3)                                eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(nondef.0, 0, v_lengthInBits), eval_drain_into_ancillary_data_9(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 /\ 0 >= 0 /\ 0 >= nondef.0 /\ -nondef.0 >= 0 ]
		(1, 3)                                eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits < 0 /\ nondef.0 <= 0 /\ -v_lengthInBits + 32*nondef.0 >= 0 /\ -v_lengthInBits + 32*nondef.0 < 32 /\ nondef.1 <= 0 /\ nondef.1 > -32 /\ 0 >= 0 /\ 0 >= nondef.0 /\ -nondef.0 >= 0 ]
		(1, 3)                                eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(0, 0, v_lengthInBits), eval_drain_into_ancillary_data_9(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ 0 >= 0 ]
		(1, 3)                                eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(0, 0, v_lengthInBits)) [ v_lengthInBits = 0 /\ 0 >= 0 ]
		(pow(2, 2*v_lengthInBits + 63), 1)    eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0 + 1, v_lengthInBits)) [ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)                                eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ -v_0 + v_i.0 >= 0 ]
		(pow(2, 2*v_lengthInBits + 63), 2)    eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_5(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 < v_0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - 1 >= 0 ]
		(4, 2)                                eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_2(eval_BF_addEntry_start(v_0, v_i.0, v_lengthInBits), eval_drain_into_ancillary_data_9(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(4, 2)                                eval_drain_into_ancillary_data_bb1_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_stop(v_0, v_i.0, v_lengthInBits)) [ v_i.0 >= 0 /\ v_i.0 >= v_0 /\ -v_0 + v_i.0 >= 0 ]
		(1, 1)                                eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb1_in(nondef.0, 0, v_lengthInBits)) [ v_lengthInBits > 0 /\ nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 >= 0 /\ v_lengthInBits - 32*nondef.0 < 32 /\ nondef.1 >= 0 /\ nondef.1 < 32 ]
		(1, 1)                                eval_drain_into_ancillary_data_start(v_0, v_i.0, v_lengthInBits) -> Com_1(eval_drain_into_ancillary_data_bb0_in(v_0, v_i.0, v_lengthInBits))
	start location:	eval_drain_into_ancillary_data_start
	leaf cost:	0

Complexity upper bound pow(2, 2*v_lengthInBits + 63) + pow(2, 2*v_lengthInBits + 63) * 2 + 38

Time: 0.449 sec (SMT: 0.349 sec)
