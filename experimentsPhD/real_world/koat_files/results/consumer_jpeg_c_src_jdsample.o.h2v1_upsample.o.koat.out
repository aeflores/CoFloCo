MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb0_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb0_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
		(?, 1)    eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_stop(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(v_inrow.0 + 1)
	start location:	eval_h2v1_upsample_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb0_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb0_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
		(?, 1)    eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(v_inrow.0 + 1)
	start location:	eval_h2v1_upsample_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb0_in(v_inrow.0)
		(1, 1)    eval_h2v1_upsample_bb0_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
		(?, 1)    eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(v_inrow.0 + 1)
	start location:	eval_h2v1_upsample_start
	leaf cost:	1

By chaining the transition eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb0_in(v_inrow.0) with all transitions in problem 3, the following new transition is obtained:
	eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
We thus obtain the following problem:
4:	T:
		(1, 2)    eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
		(1, 1)    eval_h2v1_upsample_bb0_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
		(?, 1)    eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(v_inrow.0 + 1)
	start location:	eval_h2v1_upsample_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 4:
	eval_h2v1_upsample_bb0_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
We thus obtain the following problem:
5:	T:
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(v_inrow.0 + 1)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(1, 2)    eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
	start location:	eval_h2v1_upsample_start
	leaf cost:	1

By chaining the transition eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb1_in(v_inrow.0 + 1) with all transitions in problem 5, the following new transition is obtained:
	eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0 + 1)
We thus obtain the following problem:
6:	T:
		(?, 2)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0 + 1)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(?, 1)    eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(1, 2)    eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
	start location:	eval_h2v1_upsample_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 6 produces the following problem:
7:	T:
		(?, 2)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0 + 1)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(1, 1)    eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(1, 2)    eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0)
	start location:	eval_h2v1_upsample_start
	leaf cost:	1

By chaining the transition eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb1_in(0) with all transitions in problem 7, the following new transition is obtained:
	eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb3_in(0)
We thus obtain the following problem:
8:	T:
		(1, 3)    eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb3_in(0)
		(?, 2)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0 + 1)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(1, 1)    eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
	start location:	eval_h2v1_upsample_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_h2v1_upsample_bb1_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0 + 1)
		(?, 1)    eval_h2v1_upsample_bb3_in(v_inrow.0) -> eval_h2v1_upsample_bb3_in(v_inrow.0)
		(1, 3)    eval_h2v1_upsample_start(v_inrow.0) -> eval_h2v1_upsample_bb3_in(0)
	start location:	eval_h2v1_upsample_start
	leaf cost:	1

Complexity upper bound ?

Time: 0.114 sec (SMT: 0.103 sec)
