MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_rsa_public_encrypt_start(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb0_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_bb0_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_0(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_1(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_'global_precision, v_24, v_30, nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_bb1_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.3, v_24, v_30, v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb1_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb1_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(nondef.4, v_24, v_30, v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb5_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 < 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb5_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 > 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb5_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(nondef.7, v_bytes, v_30, v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 = 0 ]
		(?, 1)    eval_rsa_public_encrypt_18(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_19(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(nondef.6, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1 - 1))
		(?, 1)    eval_rsa_public_encrypt_19(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(nondef.6, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_25(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_26(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_'global_precision, v_24, nondef.8, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_30(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_31(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_32(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_33(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_34(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_bb9_in(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_'global_precision, v_24, v_30, v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_5, v_bytes, v_i.0, v_i.1].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1))
		(?, 1)    eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 = 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 > 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 < 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(?, 1)    eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)    eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1))
		(?, 1)    eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 = 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 > 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 < 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)    eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)    eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)    eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)    eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_rsa_public_encrypt_bb9_in) = 1
	Pol(eval_rsa_public_encrypt_stop) = 0
	Pol(eval_rsa_public_encrypt_34) = 2
	Pol(eval_rsa_public_encrypt_33) = 3
	Pol(eval_mp_init_start) = 0
	Pol(eval_rsa_public_encrypt_32) = 4
	Pol(eval_rsa_public_encrypt_31) = 5
	Pol(eval_mp_modexp_start) = 0
	Pol(eval_rsa_public_encrypt_30) = 6
	Pol(eval_hiloswap_start) = 0
	Pol(eval_rsa_public_encrypt_26) = 7
	Pol(eval_rsa_public_encrypt_25) = 8
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_rsa_public_encrypt_19) = 9
	Pol(eval_rsa_public_encrypt_bb5_in) = 9
	Pol(eval_rsa_public_encrypt_18) = 9
	Pol(eval_cryptRandByte_start) = 0
	Pol(eval_rsa_public_encrypt_bb1_in) = 10
	Pol(eval_rsa_public_encrypt_1) = 10
	Pol(eval_rsa_public_encrypt_0) = 10
	Pol(eval_countbits_start) = 0
	Pol(eval_rsa_public_encrypt_bb0_in) = 10
	Pol(eval_rsa_public_encrypt_start) = 10
orients all transitions weakly and the transitions
	eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1))
	eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 = 0 ]
	eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
	eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
	eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1))
	eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1))
	eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1))
	eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1))
	eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1))
	eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1))
	eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1))
strictly and produces the following problem:
4:	T:
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1))
		(10, 1)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1))
		(10, 1)    eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1))
		(10, 1)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1))
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1))
		(10, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1))
		(10, 1)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1))
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1))
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1))
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1))
		(10, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 = 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 > 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_rsa_public_encrypt_18: -X_3 >= 0
  For symbol eval_rsa_public_encrypt_19: -X_3 >= 0
  For symbol eval_rsa_public_encrypt_25: -X_4 >= 0 /\ -X_3 - X_4 >= 0 /\ X_4 >= 0 /\ -X_3 + X_4 >= 0 /\ -X_3 >= 0
  For symbol eval_rsa_public_encrypt_26: -X_4 >= 0 /\ -X_3 - X_4 >= 0 /\ X_4 >= 0 /\ -X_3 + X_4 >= 0 /\ -X_3 >= 0
  For symbol eval_rsa_public_encrypt_30: -X_4 >= 0 /\ -X_3 - X_4 >= 0 /\ X_4 >= 0 /\ -X_3 + X_4 >= 0 /\ -X_3 >= 0
  For symbol eval_rsa_public_encrypt_31: -X_4 >= 0 /\ -X_3 - X_4 >= 0 /\ X_4 >= 0 /\ -X_3 + X_4 >= 0 /\ -X_3 >= 0
  For symbol eval_rsa_public_encrypt_32: -X_4 >= 0 /\ -X_3 - X_4 >= 0 /\ X_4 >= 0 /\ -X_3 + X_4 >= 0 /\ -X_3 >= 0
  For symbol eval_rsa_public_encrypt_33: -X_4 >= 0 /\ -X_3 - X_4 >= 0 /\ X_4 >= 0 /\ -X_3 + X_4 >= 0 /\ -X_3 >= 0
  For symbol eval_rsa_public_encrypt_34: -X_4 >= 0 /\ -X_3 - X_4 >= 0 /\ X_4 >= 0 /\ -X_3 + X_4 >= 0 /\ -X_3 >= 0
  For symbol eval_rsa_public_encrypt_bb5_in: -X_3 >= 0
  For symbol eval_rsa_public_encrypt_bb9_in: -X_3 >= 0


This yielded the following problem:
5:	T:
		(1, 1)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

By chaining the transition eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1)) with all transitions in problem 5, the following new transition is obtained:
	eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
We thus obtain the following problem:
6:	T:
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_rsa_public_encrypt_bb0_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
We thus obtain the following problem:
7:	T:
		(10, 1)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

By chaining the transition eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
We thus obtain the following problem:
8:	T:
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

By chaining the transition eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
We thus obtain the following problem:
9:	T:
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_rsa_public_encrypt_33(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
We thus obtain the following problem:
10:	T:
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

By chaining the transition eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
We thus obtain the following problem:
11:	T:
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_rsa_public_encrypt_30(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
We thus obtain the following problem:
12:	T:
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

By chaining the transition eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 ] with all transitions in problem 12, the following new transition is obtained:
	eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
We thus obtain the following problem:
13:	T:
		(10, 2)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_rsa_public_encrypt_25(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
We thus obtain the following problem:
14:	T:
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

By chaining the transition eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ] with all transitions in problem 14, the following new transition is obtained:
	eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
We thus obtain the following problem:
15:	T:
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

By chaining the transition eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ] with all transitions in problem 15, the following new transition is obtained:
	eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
We thus obtain the following problem:
16:	T:
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 16:
	eval_rsa_public_encrypt_18(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
We thus obtain the following problem:
17:	T:
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

By chaining the transition eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 ] with all transitions in problem 17, the following new transition is obtained:
	eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 /\ -v_i.0 >= 0 ]
We thus obtain the following problem:
18:	T:
		(10, 2)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 18:
	eval_rsa_public_encrypt_bb9_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
We thus obtain the following problem:
19:	T:
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(1, 2)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

By chaining the transition eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1)) with all transitions in problem 19, the following new transition is obtained:
	eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
We thus obtain the following problem:
20:	T:
		(1, 3)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 1)     eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 20:
	eval_rsa_public_encrypt_0(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
We thus obtain the following problem:
21:	T:
		(10, 2)    eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_init_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_34(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_mp_modexp_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_32(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 ]
		(?, 1)     eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1 - 1)) [ -v_i.0 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_hiloswap_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_31(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 /\ -v_i.0 >= 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 < 0 ]
		(?, 2)     eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_cryptRandByte_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_19(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 > 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_26(v_5, v_bytes, v_i.0, v_i.1)) [ -v_i.0 >= 0 /\ v_i.1 = 0 /\ -v_i.1 >= 0 /\ -v_i.0 - v_i.1 >= 0 /\ v_i.1 >= 0 /\ -v_i.0 + v_i.1 >= 0 ]
		(10, 2)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_stop(v_5, v_bytes, v_i.0, v_i.1)) [ v_i.0 <= 0 /\ -v_i.0 >= 0 ]
		(10, 1)    eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb5_in(v_5, v_bytes, v_i.0, v_5 - v_bytes - 2)) [ v_i.0 <= 0 ]
		(?, 1)     eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(v_5, v_bytes, v_i.0 - 1, v_i.1)) [ v_i.0 > 0 ]
		(1, 1)     eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1) -> Com_1(eval_rsa_public_encrypt_bb1_in(nondef.1 - 1, v_bytes, nondef.2 - nondef.1 + 1, v_i.1))
		(1, 3)     eval_rsa_public_encrypt_start(v_5, v_bytes, v_i.0, v_i.1) -> Com_2(eval_countbits_start(v_5, v_bytes, v_i.0, v_i.1), eval_rsa_public_encrypt_1(v_5, v_bytes, v_i.0, v_i.1))
	start location:	eval_rsa_public_encrypt_start
	leaf cost:	0

Complexity upper bound ?

Time: 1.060 sec (SMT: 0.729 sec)
