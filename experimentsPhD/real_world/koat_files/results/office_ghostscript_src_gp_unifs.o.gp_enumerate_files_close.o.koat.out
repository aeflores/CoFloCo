MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
		(?, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2))
		(?, 1)    eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_4(v_2))
		(?, 1)    eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_5(v_2))
		(?, 1)    eval_gp_enumerate_files_close_5(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2))
		(?, 1)    eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_4(v_2))
		(?, 1)    eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_5(v_2))
		(?, 1)    eval_gp_enumerate_files_close_5(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_gp_enumerate_files_close_start) = 5
	Pol(eval_gp_enumerate_files_close_bb0_in) = 5
	Pol(eval_gp_enumerate_files_close_bb1_in) = 5
	Pol(eval_gp_enumerate_files_close_0) = 5
	Pol(eval_popdir_start) = 0
	Pol(eval_gp_enumerate_files_close_1) = 5
	Pol(eval_gp_enumerate_files_close_2) = 4
	Pol(eval_gp_enumerate_files_close_3) = 3
	Pol(eval_gp_enumerate_files_close_4) = 2
	Pol(eval_gp_enumerate_files_close_5) = 1
	Pol(eval_gp_enumerate_files_close_stop) = 0
orients all transitions weakly and the transitions
	eval_gp_enumerate_files_close_5(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2))
	eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_5(v_2))
	eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_4(v_2))
	eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2))
	eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(5, 1)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2))
		(5, 1)    eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_4(v_2))
		(5, 1)    eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_5(v_2))
		(5, 1)    eval_gp_enumerate_files_close_5(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_gp_enumerate_files_close_2: -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_gp_enumerate_files_close_3: -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_gp_enumerate_files_close_4: -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_gp_enumerate_files_close_5: -X_1 >= 0 /\ X_1 >= 0


This yielded the following problem:
4:	T:
		(5, 1)    eval_gp_enumerate_files_close_5(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_5(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_4(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_5(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
We thus obtain the following problem:
5:	T:
		(5, 2)    eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_5(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_4(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 5:
	eval_gp_enumerate_files_close_5(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
We thus obtain the following problem:
6:	T:
		(5, 2)    eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_4(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_4(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
We thus obtain the following problem:
7:	T:
		(5, 3)    eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 2)    eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 7:
	eval_gp_enumerate_files_close_4(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
We thus obtain the following problem:
8:	T:
		(5, 3)    eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_3(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
We thus obtain the following problem:
9:	T:
		(5, 4)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 3)    eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_gp_enumerate_files_close_3(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
We thus obtain the following problem:
10:	T:
		(5, 4)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 < 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2)) [ v_2 < 0 ]
We thus obtain the following problem:
11:	T:
		(?, 2)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2)) [ v_2 < 0 ]
		(5, 4)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2)) [ v_2 < 0 ] with all transitions in problem 11, the following new transition is obtained:
	eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
We thus obtain the following problem:
12:	T:
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(5, 4)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) [ v_2 > 0 ] with all transitions in problem 12, the following new transition is obtained:
	eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2)) [ v_2 > 0 ]
We thus obtain the following problem:
13:	T:
		(?, 2)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(5, 4)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(?, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 13 produces the following problem:
14:	T:
		(?, 2)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(5, 4)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(1, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2)) [ v_2 > 0 ] with all transitions in problem 14, the following new transition is obtained:
	eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
We thus obtain the following problem:
15:	T:
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(5, 4)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(?, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(1, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 15 produces the following problem:
16:	T:
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(5, 4)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(5, 1)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ]
		(1, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(1, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_2(v_2)) [ v_2 = 0 ] with all transitions in problem 16, the following new transition is obtained:
	eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ v_2 = 0 /\ -v_2 >= 0 /\ v_2 >= 0 ]
We thus obtain the following problem:
17:	T:
		(5, 5)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ v_2 = 0 /\ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(5, 4)    eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
		(1, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(1, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_gp_enumerate_files_close_2(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ -v_2 >= 0 /\ v_2 >= 0 ]
We thus obtain the following problem:
18:	T:
		(5, 5)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ v_2 = 0 /\ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(1, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(1, 1)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_1(eval_gp_enumerate_files_close_0(v_2)) with all transitions in problem 18, the following new transition is obtained:
	eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
We thus obtain the following problem:
19:	T:
		(1, 2)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(5, 5)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ v_2 = 0 /\ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(1, 1)    eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_gp_enumerate_files_close_0(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
We thus obtain the following problem:
20:	T:
		(5, 5)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ v_2 = 0 /\ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(1, 2)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(1, 1)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_1(eval_gp_enumerate_files_close_bb1_in(v_2)) with all transitions in problem 20, the following new transition is obtained:
	eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
We thus obtain the following problem:
21:	T:
		(1, 3)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(5, 5)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ v_2 = 0 /\ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(1, 2)    eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 21:
	eval_gp_enumerate_files_close_bb1_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
We thus obtain the following problem:
22:	T:
		(5, 5)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ v_2 = 0 /\ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(1, 3)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(1, 1)    eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

By chaining the transition eval_gp_enumerate_files_close_start(v_2) -> Com_1(eval_gp_enumerate_files_close_bb0_in(v_2)) with all transitions in problem 22, the following new transition is obtained:
	eval_gp_enumerate_files_close_start(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
We thus obtain the following problem:
23:	T:
		(1, 4)    eval_gp_enumerate_files_close_start(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
		(5, 5)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ v_2 = 0 /\ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(1, 3)    eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 23:
	eval_gp_enumerate_files_close_bb0_in(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
We thus obtain the following problem:
24:	T:
		(5, 5)    eval_gp_enumerate_files_close_1(v_2) -> Com_1(eval_gp_enumerate_files_close_stop(v_2)) [ v_2 = 0 /\ -v_2 >= 0 /\ v_2 >= 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 > 0 ]
		(?, 3)    eval_gp_enumerate_files_close_1(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0)) [ v_2 < 0 ]
		(1, 4)    eval_gp_enumerate_files_close_start(v_2) -> Com_2(eval_popdir_start(v_2), eval_gp_enumerate_files_close_1(nondef.0))
	start location:	eval_gp_enumerate_files_close_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.246 sec (SMT: 0.225 sec)
