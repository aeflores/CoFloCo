MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0))
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 < v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= v_'Trynum ]
		(?, 1)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1))
		(?, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0))
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 < v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= v_'Trynum ]
		(?, 1)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1))
		(?, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_wrongletter_start) = 2
	Pol(eval_wrongletter_bb0_in) = 2
	Pol(eval_wrongletter_0) = 2
	Pol(eval_strlen_start) = 0
	Pol(eval_wrongletter_1) = 2
	Pol(eval_wrongletter_2) = 2
	Pol(eval_strcpy_start) = 0
	Pol(eval_wrongletter_3) = 2
	Pol(eval_upcase_start) = 0
	Pol(eval_wrongletter_4) = 2
	Pol(eval_wrongletter_bb1_in) = 2
	Pol(eval_wrongletter_bb3_in) = 2
	Pol(eval_wrongletter_bb11_in) = 1
	Pol(eval_wrongletter_bb9_in) = 2
	Pol(eval_wrongletter_bb7_in) = 2
	Pol(eval_wrongletter_27) = 2
	Pol(eval_good_start) = 0
	Pol(eval_wrongletter_28) = 2
	Pol(eval_wrongletter_29) = 2
	Pol(eval_ins_cap_start) = 0
	Pol(eval_wrongletter_30) = 2
	Pol(eval_wrongletter_stop) = 0
orients all transitions weakly and the transitions
	eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= v_1 ]
	eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0))
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 < v_1 ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= v_'Trynum ]
		(?, 1)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(2, 1)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1))
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_wrongletter_2: X_2 - X_3 >= 0 /\ -X_2 + X_3 >= 0
  For symbol eval_wrongletter_27: X_1 - X_5 - 1 >= 0 /\ X_5 >= 0 /\ X_4 + X_5 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 1 >= 0 /\ X_3 - X_4 - 1 >= 0 /\ X_2 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 - 1 >= 0 /\ X_2 + X_3 - 2 >= 0 /\ -X_2 + X_3 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_wrongletter_28: X_1 - X_5 - 1 >= 0 /\ X_5 >= 0 /\ X_4 + X_5 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 1 >= 0 /\ X_3 - X_4 - 1 >= 0 /\ X_2 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 - 1 >= 0 /\ X_2 + X_3 - 2 >= 0 /\ -X_2 + X_3 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_wrongletter_29: X_1 - X_5 - 1 >= 0 /\ X_5 >= 0 /\ X_4 + X_5 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 1 >= 0 /\ X_3 - X_4 - 1 >= 0 /\ X_2 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 - 1 >= 0 /\ X_2 + X_3 - 2 >= 0 /\ -X_2 + X_3 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_wrongletter_3: X_2 - X_3 >= 0 /\ -X_2 + X_3 >= 0
  For symbol eval_wrongletter_30: X_1 - X_5 - 1 >= 0 /\ X_5 >= 0 /\ X_4 + X_5 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 1 >= 0 /\ X_3 - X_4 - 1 >= 0 /\ X_2 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 - 1 >= 0 /\ X_2 + X_3 - 2 >= 0 /\ -X_2 + X_3 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_wrongletter_4: X_2 - X_3 >= 0 /\ -X_2 + X_3 >= 0
  For symbol eval_wrongletter_bb11_in: X_4 >= 0 /\ X_2 - X_3 >= 0 /\ -X_2 + X_3 >= 0
  For symbol eval_wrongletter_bb1_in: X_4 >= 0 /\ X_2 - X_3 >= 0 /\ -X_2 + X_3 >= 0
  For symbol eval_wrongletter_bb3_in: X_5 >= 0 /\ X_4 + X_5 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ X_3 - X_4 - 1 >= 0 /\ X_2 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 - 1 >= 0 /\ X_2 + X_3 - 2 >= 0 /\ -X_2 + X_3 >= 0 /\ X_2 - 1 >= 0
  For symbol eval_wrongletter_bb7_in: X_1 - X_5 - 1 >= 0 /\ X_5 >= 0 /\ X_4 + X_5 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 1 >= 0 /\ X_3 - X_4 - 1 >= 0 /\ X_2 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 - 1 >= 0 /\ X_2 + X_3 - 2 >= 0 /\ -X_2 + X_3 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_wrongletter_bb9_in: X_1 - X_5 - 1 >= 0 /\ X_5 >= 0 /\ X_4 + X_5 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 1 >= 0 /\ X_3 - X_4 - 1 >= 0 /\ X_2 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_2 - X_3 >= 0 /\ X_3 - 1 >= 0 /\ X_2 + X_3 - 2 >= 0 /\ -X_2 + X_3 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0


This yielded the following problem:
4:	T:
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 1)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 1)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
6:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
7:	T:
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
8:	T:
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_wrongletter_29(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ] with all transitions in problem 9, the following new transition is obtained:
	eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
10:	T:
		(?, 2)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_wrongletter_27(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
11:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ] with all transitions in problem 11, the following new transition is obtained:
	eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_wrongletter_bb9_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
13:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum ] with all transitions in problem 13, the following new transition is obtained:
	eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
14:	T:
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 14:
	eval_wrongletter_bb7_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
We thus obtain the following problem:
15:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(2, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ] with all transitions in problem 15, the following new transition is obtained:
	eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
We thus obtain the following problem:
16:	T:
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 1)    eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 16:
	eval_wrongletter_bb11_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
We thus obtain the following problem:
17:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_2(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) with all transitions in problem 17, the following new transition is obtained:
	eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
We thus obtain the following problem:
18:	T:
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 18:
	eval_wrongletter_2(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
We thus obtain the following problem:
19:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) with all transitions in problem 19, the following new transition is obtained:
	eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
We thus obtain the following problem:
20:	T:
		(1, 2)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 1)    eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 20:
	eval_wrongletter_0(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
We thus obtain the following problem:
21:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 2)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(1, 1)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) with all transitions in problem 21, the following new transition is obtained:
	eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
We thus obtain the following problem:
22:	T:
		(1, 3)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 2)    eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 22:
	eval_wrongletter_bb0_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
We thus obtain the following problem:
23:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 1)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 3)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum ] with all transitions in problem 23, the following new transitions are obtained:
	eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 >= v_1 ]
	eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0 + 1, 0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 < v_1 ]
We thus obtain the following problem:
24:	T:
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 >= v_1 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0 + 1, 0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 < v_1 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(?, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 3)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 24 produces the following problem:
25:	T:
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 >= v_1 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0 + 1, 0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 < v_1 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 3)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_wrongletter_bb3_in) = 1
	Pol(eval_wrongletter_stop) = 0
	Pol(eval_wrongletter_30) = 1
	Pol(eval_wrongletter_28) = 1
	Pol(eval_ins_cap_start) = 0
	Pol(eval_good_start) = 0
	Pol(eval_wrongletter_bb1_in) = 1
	Pol(eval_wrongletter_4) = 1
	Pol(eval_wrongletter_3) = 1
	Pol(eval_upcase_start) = 0
	Pol(eval_wrongletter_1) = 1
	Pol(eval_strcpy_start) = 0
	Pol(eval_wrongletter_start) = 1
	Pol(eval_strlen_start) = 0
orients all transitions weakly and the transition
	eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 >= v_1 ]
strictly and produces the following problem:
26:	T:
		(1, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 >= v_1 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0 + 1, 0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 < v_1 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 3)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

By chaining the transition eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ] with all transitions in problem 26, the following new transitions are obtained:
	eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ 0 >= 0 /\ 0 >= v_1 ]
	eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, 0, 0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ 0 >= 0 /\ 0 < v_1 ]
We thus obtain the following problem:
27:	T:
		(1, 3)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ 0 >= 0 /\ 0 >= v_1 ]
		(1, 2)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, 0, 0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ 0 >= 0 /\ 0 < v_1 ]
		(1, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 >= v_1 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0 + 1, 0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 < v_1 ]
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(2, 2)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
		(1, 1)    eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 3)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 27:
	eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 >= v_1 ]
	eval_wrongletter_bb1_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, 0)) [ v_i.0 >= 0 /\ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ v_i.0 < v_1 ]
We thus obtain the following problem:
28:	T:
		(2, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_ins_cap_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_30(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_'Trynum - v_j.0 - 1 >= 0 /\ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_0 - 1 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0 + 1, 0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 < v_1 ]
		(1, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, v_i.0 + 1, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 >= v_'Trynum /\ v_i.0 + 1 >= 0 /\ v_i.0 + 1 >= v_1 ]
		(?, 3)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_good_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_28(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(?, 2)    eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, v_i.0, v_j.0 + 1)) [ v_j.0 >= 0 /\ v_i.0 + v_j.0 >= 0 /\ v_1 + v_j.0 - 1 >= 0 /\ v_0 + v_j.0 - 1 >= 0 /\ v_1 - v_i.0 - 1 >= 0 /\ v_0 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_1 + v_i.0 - 1 >= 0 /\ v_0 + v_i.0 - 1 >= 0 /\ v_0 - v_1 >= 0 /\ v_1 - 1 >= 0 /\ v_0 + v_1 - 2 >= 0 /\ -v_0 + v_1 >= 0 /\ v_0 - 1 >= 0 /\ v_j.0 < v_'Trynum /\ v_'Trynum - v_j.0 - 1 >= 0 /\ v_'Trynum + v_j.0 - 1 >= 0 /\ v_'Trynum + v_i.0 - 1 >= 0 /\ v_'Trynum + v_1 - 2 >= 0 /\ v_'Trynum + v_0 - 2 >= 0 /\ v_'Trynum - 1 >= 0 ]
		(1, 2)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_bb3_in(v_'Trynum, v_0, v_1, 0, 0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ 0 >= 0 /\ 0 < v_1 ]
		(1, 3)    eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_1(eval_wrongletter_stop(v_'Trynum, v_0, v_1, 0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 /\ 0 >= 0 /\ 0 >= v_1 ]
		(1, 1)    eval_wrongletter_3(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_upcase_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_4(v_'Trynum, v_0, v_1, v_i.0, v_j.0)) [ v_0 - v_1 >= 0 /\ -v_0 + v_1 >= 0 ]
		(1, 2)    eval_wrongletter_1(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strcpy_start(v_'Trynum, v_0, v_0, v_i.0, v_j.0), eval_wrongletter_3(v_'Trynum, v_0, v_0, v_i.0, v_j.0)) [ 0 >= 0 ]
		(1, 3)    eval_wrongletter_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0) -> Com_2(eval_strlen_start(v_'Trynum, v_0, v_1, v_i.0, v_j.0), eval_wrongletter_1(v_'Trynum, nondef.0, v_1, v_i.0, v_j.0))
	start location:	eval_wrongletter_start
	leaf cost:	0

Complexity upper bound ?

Time: 3.865 sec (SMT: 2.558 sec)
