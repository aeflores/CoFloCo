MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
		(?, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(?, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(?, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(?, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(?, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(?, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3))
		(?, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3))
		(?, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3))
		(?, 1)    eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3))
		(?, 1)    eval_crc32file_21(v_3) -> Com_1(eval_crc32file_bb6_in(v_3))
		(?, 1)    eval_crc32file_bb6_in(v_3) -> Com_1(eval_crc32file_23(v_3))
		(?, 1)    eval_crc32file_23(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3))
		(?, 1)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(?, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3))
		(?, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3))
		(?, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3))
		(?, 1)    eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3))
		(?, 1)    eval_crc32file_21(v_3) -> Com_1(eval_crc32file_bb6_in(v_3))
		(?, 1)    eval_crc32file_bb6_in(v_3) -> Com_1(eval_crc32file_23(v_3))
		(?, 1)    eval_crc32file_23(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3))
		(?, 1)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_crc32file_start) = 9
	Pol(eval_crc32file_bb0_in) = 9
	Pol(eval_crc32file_1) = 9
	Pol(eval_fopen_start) = 0
	Pol(eval_crc32file_2) = 9
	Pol(eval_crc32file_3) = 1
	Pol(eval_crc32file_bb2_in) = 9
	Pol(eval_perror_start) = 0
	Pol(eval_crc32file_4) = 1
	Pol(eval_crc32file_bb7_in) = 1
	Pol(eval_crc32file_5) = 9
	Pol(eval__IO_getc_start) = 0
	Pol(eval_crc32file_6) = 9
	Pol(eval_crc32file_18) = 8
	Pol(eval_ferror_start) = 0
	Pol(eval_crc32file_19) = 7
	Pol(eval_crc32file_20) = 6
	Pol(eval_crc32file_bb6_in) = 4
	Pol(eval_crc32file_21) = 5
	Pol(eval_crc32file_23) = 3
	Pol(eval_fclose_start) = 0
	Pol(eval_crc32file_24) = 2
	Pol(eval_crc32file_stop) = 0
orients all transitions weakly and the transitions
	eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
	eval_crc32file_bb6_in(v_3) -> Com_1(eval_crc32file_23(v_3))
	eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
	eval_crc32file_24(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
	eval_crc32file_23(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3))
	eval_crc32file_21(v_3) -> Com_1(eval_crc32file_bb6_in(v_3))
	eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3))
	eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3))
	eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3))
	eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3))
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3))
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3))
		(9, 1)    eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3))
		(9, 1)    eval_crc32file_21(v_3) -> Com_1(eval_crc32file_bb6_in(v_3))
		(9, 1)    eval_crc32file_bb6_in(v_3) -> Com_1(eval_crc32file_23(v_3))
		(9, 1)    eval_crc32file_23(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3))
		(9, 1)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_crc32file_18: -X_1 - 1 >= 0 /\ X_1 + 1 >= 0
  For symbol eval_crc32file_19: -X_1 - 1 >= 0 /\ X_1 + 1 >= 0
  For symbol eval_crc32file_20: -X_1 - 1 >= 0 /\ X_1 + 1 >= 0
  For symbol eval_crc32file_21: -X_1 - 1 >= 0 /\ X_1 + 1 >= 0
  For symbol eval_crc32file_23: -X_1 - 1 >= 0 /\ X_1 + 1 >= 0
  For symbol eval_crc32file_24: -X_1 - 1 >= 0 /\ X_1 + 1 >= 0
  For symbol eval_crc32file_bb6_in: -X_1 - 1 >= 0 /\ X_1 + 1 >= 0


This yielded the following problem:
4:	T:
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 1)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_bb7_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_23(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb6_in(v_3) -> Com_1(eval_crc32file_23(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_21(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_24(v_3) -> Com_1(eval_crc32file_bb7_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
5:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 1)    eval_crc32file_23(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb6_in(v_3) -> Com_1(eval_crc32file_23(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_21(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_bb6_in(v_3) -> Com_1(eval_crc32file_23(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_crc32file_bb6_in(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
6:	T:
		(9, 2)    eval_crc32file_bb6_in(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 1)    eval_crc32file_23(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_21(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_crc32file_23(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
7:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_21(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_bb6_in(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_21(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
8:	T:
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_bb6_in(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_19(v_3) -> Com_1(eval_crc32file_20(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_bb6_in(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_crc32file_20(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
10:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_bb6_in(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_19(v_3) -> Com_1(eval_crc32file_bb6_in(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
11:	T:
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_bb6_in(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_crc32file_bb6_in(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
12:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ]
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 < -1 ] with all transitions in problem 12, the following new transition is obtained:
	eval_crc32file_6(v_3) -> Com_1(eval_crc32file_5(v_3)) [ v_3 < -1 ]
We thus obtain the following problem:
13:	T:
		(?, 2)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_5(v_3)) [ v_3 < -1 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_6(v_3) -> Com_1(eval_crc32file_5(v_3)) [ v_3 < -1 ] with all transitions in problem 13, the following new transition is obtained:
	eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
We thus obtain the following problem:
14:	T:
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(?, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ]
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_6(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) [ v_3 > -1 ] with all transitions in problem 14, the following new transition is obtained:
	eval_crc32file_6(v_3) -> Com_1(eval_crc32file_5(v_3)) [ v_3 > -1 ]
We thus obtain the following problem:
15:	T:
		(?, 2)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_5(v_3)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(?, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 15 produces the following problem:
16:	T:
		(?, 2)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_5(v_3)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_6(v_3) -> Com_1(eval_crc32file_5(v_3)) [ v_3 > -1 ] with all transitions in problem 16, the following new transition is obtained:
	eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
We thus obtain the following problem:
17:	T:
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(?, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 17 produces the following problem:
18:	T:
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 1)    eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(1, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_6(v_3) -> Com_1(eval_crc32file_18(v_3)) [ v_3 = -1 ] with all transitions in problem 18, the following new transition is obtained:
	eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
19:	T:
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(1, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_crc32file_18(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
We thus obtain the following problem:
20:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 1)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3))
		(1, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_4(v_3) -> Com_1(eval_crc32file_bb7_in(v_3)) with all transitions in problem 20, the following new transition is obtained:
	eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
We thus obtain the following problem:
21:	T:
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 1)    eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 21:
	eval_crc32file_bb7_in(v_3) -> Com_1(eval_crc32file_stop(v_3))
We thus obtain the following problem:
22:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_bb2_in(v_3) -> Com_1(eval_crc32file_5(v_3)) with all transitions in problem 22, the following new transition is obtained:
	eval_crc32file_bb2_in(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
We thus obtain the following problem:
23:	T:
		(1, 2)    eval_crc32file_bb2_in(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 1)    eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 23:
	eval_crc32file_5(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
We thus obtain the following problem:
24:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 2)    eval_crc32file_bb2_in(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_2(v_3) -> Com_1(eval_crc32file_3(v_3)) with all transitions in problem 24, the following new transition is obtained:
	eval_crc32file_2(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
We thus obtain the following problem:
25:	T:
		(1, 2)    eval_crc32file_2(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 1)    eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 2)    eval_crc32file_bb2_in(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 25:
	eval_crc32file_3(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
We thus obtain the following problem:
26:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 2)    eval_crc32file_bb2_in(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 2)    eval_crc32file_2(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_2(v_3) -> Com_1(eval_crc32file_bb2_in(v_3)) with all transitions in problem 26, the following new transition is obtained:
	eval_crc32file_2(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
We thus obtain the following problem:
27:	T:
		(1, 3)    eval_crc32file_2(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 2)    eval_crc32file_bb2_in(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 2)    eval_crc32file_2(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 27:
	eval_crc32file_bb2_in(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
We thus obtain the following problem:
28:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 3)    eval_crc32file_2(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 2)    eval_crc32file_2(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

By chaining the transition eval_crc32file_bb0_in(v_3) -> Com_1(eval_crc32file_1(v_3)) with all transitions in problem 28, the following new transition is obtained:
	eval_crc32file_bb0_in(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
We thus obtain the following problem:
29:	T:
		(1, 2)    eval_crc32file_bb0_in(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 3)    eval_crc32file_2(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 2)    eval_crc32file_2(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 1)    eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 29:
	eval_crc32file_1(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
We thus obtain the following problem:
30:	T:
		(9, 2)    eval_crc32file_24(v_3) -> Com_1(eval_crc32file_stop(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_21(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 3)    eval_crc32file_19(v_3) -> Com_2(eval_fclose_start(v_3), eval_crc32file_24(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_19(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_21(v_3)) [ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(9, 2)    eval_crc32file_6(v_3) -> Com_2(eval_ferror_start(v_3), eval_crc32file_19(v_3)) [ v_3 = -1 /\ -v_3 - 1 >= 0 /\ v_3 + 1 >= 0 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 > -1 ]
		(?, 3)    eval_crc32file_6(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0)) [ v_3 < -1 ]
		(1, 2)    eval_crc32file_4(v_3) -> Com_1(eval_crc32file_stop(v_3))
		(1, 3)    eval_crc32file_2(v_3) -> Com_2(eval__IO_getc_start(v_3), eval_crc32file_6(nondef.0))
		(1, 2)    eval_crc32file_2(v_3) -> Com_2(eval_perror_start(v_3), eval_crc32file_4(v_3))
		(1, 2)    eval_crc32file_bb0_in(v_3) -> Com_2(eval_fopen_start(v_3), eval_crc32file_2(v_3))
		(1, 1)    eval_crc32file_start(v_3) -> Com_1(eval_crc32file_bb0_in(v_3))
	start location:	eval_crc32file_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.511 sec (SMT: 0.425 sec)
