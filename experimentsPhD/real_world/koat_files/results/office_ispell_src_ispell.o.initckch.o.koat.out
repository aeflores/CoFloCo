MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= v_1 + 128 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1))
		(?, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum >= 128 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_83(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0))
		(?, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= v_1 + 128 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1))
		(?, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum >= 128 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_83(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0))
		(?, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_initckch_start) = 7
	Pol(eval_initckch_bb0_in) = 7
	Pol(eval_initckch_bb1_in) = 7
	Pol(eval_initckch_bb7_in) = 7
	Pol(eval_initckch_31) = 6
	Pol(eval_initckch_.critedge_in) = 1
	Pol(eval___ctype_b_loc_start) = 0
	Pol(eval_initckch_32) = 5
	Pol(eval_initckch_33) = 4
	Pol(eval_initckch_34) = 3
	Pol(eval_initckch_bb10_in) = 2
	Pol(eval_initckch_bb27_in) = 2
	Pol(eval_initckch_bb15_in) = 2
	Pol(eval_initckch_bb19_in) = 2
	Pol(eval_initckch_83) = 2
	Pol(eval_initckch_87) = 2
	Pol(eval_strlen_start) = 0
	Pol(eval_initckch_84) = 2
	Pol(eval_atoi_start) = 0
	Pol(eval_initckch_85) = 2
	Pol(eval_initckch_88) = 2
	Pol(eval_initckch_bb23_in) = 2
	Pol(eval_initckch_bb25_in) = 2
	Pol(eval_initckch_stop) = 0
orients all transitions weakly and the transitions
	eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= v_1 + 128 ]
	eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= v_1 + 128 ]
	eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
	eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum >= 128 ]
	eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0))
	eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0))
	eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0))
	eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0))
	eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= v_1 + 128 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1))
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0))
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0))
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0))
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_'Trynum >= 128 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_83(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0))
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0))
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_initckch_.critedge_in: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0
  For symbol eval_initckch_31: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0
  For symbol eval_initckch_32: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0
  For symbol eval_initckch_33: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0
  For symbol eval_initckch_34: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0
  For symbol eval_initckch_83: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_84: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_85: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_87: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_88: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_bb10_in: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0
  For symbol eval_initckch_bb15_in: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_bb19_in: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_bb1_in: X_3 >= 0
  For symbol eval_initckch_bb23_in: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_bb25_in: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_bb27_in: X_3 >= 0 /\ -X_2 + X_3 - 128 >= 0 /\ -X_1 + X_3 + 127 >= 0 /\ -X_1 + 127 >= 0
  For symbol eval_initckch_bb7_in: X_2 - X_3 + 127 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 + 127 >= 0 /\ X_2 + 127 >= 0


This yielded the following problem:
4:	T:
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_83(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_83(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 5:
	eval_initckch_bb25_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
6:	T:
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_83(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
7:	T:
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_83(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 7:
	eval_initckch_bb23_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
8:	T:
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_83(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_83(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_initckch_83(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
10:	T:
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_87(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_initckch_87(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ] with all transitions in problem 12, the following new transition is obtained:
	eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
13:	T:
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_initckch_bb15_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
14:	T:
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ] with all transitions in problem 14, the following new transition is obtained:
	eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
We thus obtain the following problem:
15:	T:
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ] with all transitions in problem 15, the following new transition is obtained:
	eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
We thus obtain the following problem:
16:	T:
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ] with all transitions in problem 16, the following new transition is obtained:
	eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
We thus obtain the following problem:
17:	T:
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb7_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 ] with all transitions in problem 17, the following new transition is obtained:
	eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
We thus obtain the following problem:
18:	T:
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 18:
	eval_initckch_bb7_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_1 - v_c.0 + 127 >= 0 /\ v_c.0 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
We thus obtain the following problem:
19:	T:
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_31(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ] with all transitions in problem 19, the following new transition is obtained:
	eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
We thus obtain the following problem:
20:	T:
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 20:
	eval_initckch_31(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
We thus obtain the following problem:
21:	T:
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(7, 1)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 ] with all transitions in problem 21, the following new transition is obtained:
	eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
We thus obtain the following problem:
22:	T:
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 22:
	eval_initckch_.critedge_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
We thus obtain the following problem:
23:	T:
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(1, 1)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0)) with all transitions in problem 23, the following new transition is obtained:
	eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
We thus obtain the following problem:
24:	T:
		(1, 2)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(1, 1)    eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 24:
	eval_initckch_bb0_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
We thus obtain the following problem:
25:	T:
		(?, 1)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(1, 2)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ] with all transitions in problem 25, the following new transitions are obtained:
	eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
	eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
26:	T:
		(?, 2)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 3)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(1, 2)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ] with all transitions in problem 26, the following new transitions are obtained:
	eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
	eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
27:	T:
		(?, 4)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(1, 2)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
	start location:	eval_initckch_start
	leaf cost:	0

By chaining the transition eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ] with all transitions in problem 27, the following new transitions are obtained:
	eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
	eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
28:	T:
		(?, 4)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(1, 2)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
	start location:	eval_initckch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 28:
	eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
	eval_initckch_bb19_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
We thus obtain the following problem:
29:	T:
		(?, 2)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)    eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)    eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)    eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)    eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(1, 2)    eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
	start location:	eval_initckch_start
	leaf cost:	0

A separated polynomial rank function for exponential bounds with
	Pol(eval_initckch_85) = -V_1 + 128
	Pol(eval_initckch_bb10_in) = -V_1 + 128
	Pol(eval_initckch_84) = -V_1 + 128
	Pol(eval_atoi_start) = -V_1 + 128
	Pol(eval_initckch_88) = -V_1 + 128
	Pol(eval_initckch_bb27_in) = -V_1 + 128
	Pol(eval_strlen_start) = -V_1 + 128
	Pol(eval_initckch_stop) = -V_1
	Pol(eval_initckch_34) = -V_1 + 128
	Pol(eval_initckch_33) = -V_1 + 128
	Pol(eval___ctype_b_loc_start) = -V_1
	Pol(eval_initckch_32) = -V_1 + 128
	Pol(eval_initckch_bb1_in) = -V_1 + 128
	Pol(eval_initckch_start) = -V_1 + 128
orients all transitions weakly and the transitions
	eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
	eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
	eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
strictly and produces the following problem:
30:	T:
		(pow(2, v_'Trynum + 129), 2)    eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 2)                          eval_initckch_85(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)                          eval_initckch_84(v_'Trynum, v_1, v_c.0) -> Com_2(eval_atoi_start(v_'Trynum, v_1, v_c.0), eval_initckch_85(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(pow(2, v_'Trynum + 129), 4)    eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)                          eval_initckch_88(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 1)                          eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(pow(2, v_'Trynum + 129), 1)    eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum + 1, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)                          eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_84(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(?, 4)                          eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval_strlen_start(v_'Trynum, v_1, v_c.0), eval_initckch_88(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 /\ -v_'Trynum + v_c.0 + 127 >= 0 /\ -v_'Trynum + 127 >= 0 ]
		(7, 2)                          eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum >= 128 ]
		(7, 2)                          eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(?, 1)                          eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb27_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 /\ v_'Trynum < 128 ]
		(7, 1)                          eval_initckch_34(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb10_in(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)                          eval_initckch_33(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_34(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 1)                          eval_initckch_32(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_33(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)                          eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_stop(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(7, 2)                          eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_2(eval___ctype_b_loc_start(v_'Trynum, v_1, v_c.0), eval_initckch_32(v_'Trynum, v_1, v_c.0)) [ v_c.0 >= 0 /\ v_c.0 >= v_1 + 128 /\ -v_1 + v_c.0 - 128 >= 0 ]
		(?, 2)                          eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum + 1, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(?, 2)                          eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, v_1, v_c.0 + 1)) [ v_c.0 >= 0 /\ v_c.0 < v_1 + 128 /\ v_1 - v_c.0 + 127 >= 0 /\ v_1 + v_c.0 + 127 >= 0 /\ v_1 + 127 >= 0 ]
		(1, 2)                          eval_initckch_start(v_'Trynum, v_1, v_c.0) -> Com_1(eval_initckch_bb1_in(v_'Trynum, nondef.0, 0))
	start location:	eval_initckch_start
	leaf cost:	0

Complexity upper bound ?

Time: 5.977 sec (SMT: 4.455 sec)
