MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3, v_s)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02, v_s)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0, v_s)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0, v_s), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_20(v_.02, v_.02 - v_n.0, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0, v_s), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0, v_s))
		(?, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0, v_s) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0, v_s))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.02, v_28, v_cc, v_n.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_20(v_.02, v_.02 - v_n.0, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
		(1, 1)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_20(v_.02, v_.02 - v_n.0, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 1)    eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
		(1, 1)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_DumpModeEncode_bb8_in) = 1
	Pol(eval_DumpModeEncode_stop) = 0
	Pol(eval_DumpModeEncode_21) = 2
	Pol(eval_DumpModeEncode_bb1_in) = 2
	Pol(eval_DumpModeEncode_20) = 2
	Pol(eval_TIFFFlushData1_start) = 0
	Pol(eval_DumpModeEncode_bb6_in) = 2
	Pol(eval_DumpModeEncode_9) = 2
	Pol(eval_DumpModeEncode_8) = 2
	Pol(eval__TIFFmemcpy_start) = 0
	Pol(eval_DumpModeEncode_bb4_in) = 2
	Pol(eval_DumpModeEncode_bb0_in) = 2
	Pol(eval_DumpModeEncode_start) = 2
orients all transitions weakly and the transitions
	eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
	eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
	eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0))
strictly and produces the following problem:
4:	T:
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(2, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_20(v_.02, v_.02 - v_n.0, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0))
		(2, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 1)    eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
		(1, 1)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_DumpModeEncode_20: X_2 + X_4 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_DumpModeEncode_21: X_2 + X_4 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_DumpModeEncode_8: X_1 - 1 >= 0
  For symbol eval_DumpModeEncode_9: X_1 - 1 >= 0
  For symbol eval_DumpModeEncode_bb4_in: X_1 - 1 >= 0
  For symbol eval_DumpModeEncode_bb6_in: X_1 - 1 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0))
		(1, 1)    eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(2, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_20(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

By chaining the transition eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0)) with all transitions in problem 5, the following new transition is obtained:
	eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
		(1, 1)    eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(2, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_20(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_DumpModeEncode_bb0_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
We thus obtain the following problem:
7:	T:
		(2, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_20(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

By chaining the transition eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
8:	T:
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_20(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

By chaining the transition eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_20(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_DumpModeEncode_20(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
10:	T:
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

By chaining the transition eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 2)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_DumpModeEncode_8(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
12:	T:
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(?, 2)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

By chaining the transition eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ] with all transitions in problem 12, the following new transition is obtained:
	eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
We thus obtain the following problem:
13:	T:
		(2, 2)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
		(?, 2)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_DumpModeEncode_bb8_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0))
We thus obtain the following problem:
14:	T:
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

By chaining the transition eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ] with all transitions in problem 14, the following new transitions are obtained:
	eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
	eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
15:	T:
		(?, 3)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

By chaining the transition eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ] with all transitions in problem 15, the following new transitions are obtained:
	eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
	eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
16:	T:
		(?, 3)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 3)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 16:
	eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
	eval_DumpModeEncode_bb6_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
17:	T:
		(2, 2)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_DumpModeEncode_21(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_28, v_28, v_cc, v_n.0)) [ v_28 + v_n.0 - 1 >= 0 /\ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 3)    eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_.02 - v_n.0, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 3)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval_TIFFFlushData1_start(v_.02, v_.02 - v_n.0, v_cc, v_n.0), eval_DumpModeEncode_21(v_.02, v_.02 - v_n.0, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_n.0) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_28, v_cc, v_n.0), eval_DumpModeEncode_9(v_.02, v_28, v_cc, v_n.0)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_stop(v_.02, v_28, v_cc, v_n.0)) [ v_.02 <= 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, v_.02)) [ v_.02 > 0 ]
		(?, 1)    eval_DumpModeEncode_bb1_in(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb4_in(v_.02, v_28, v_cc, nondef.2 - nondef.3)) [ v_.02 > 0 ]
		(1, 2)    eval_DumpModeEncode_start(v_.02, v_28, v_cc, v_n.0) -> Com_1(eval_DumpModeEncode_bb1_in(v_cc, v_28, v_cc, v_n.0))
	start location:	eval_DumpModeEncode_start
	leaf cost:	0

Complexity upper bound ?

Time: 2.392 sec (SMT: 1.893 sec)
