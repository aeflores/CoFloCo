MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_zoom_y_start(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width)
		(?, 1)    eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1, v_sizeofPixelOut, v_tmp_width)
		(?, 1)    eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0, v_sizeofPixelOut, v_tmp_width)
		(?, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) [ v_kc.0 < v_0 ]
		(?, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb15_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) [ v_kc.0 >= v_0 ]
		(?, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) [ v_j.0 > 0 ]
		(?, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) [ v_j.0 <= 0 ]
		(?, 1)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1, v_sizeofPixelOut, v_tmp_width)
		(?, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) [ v_kc.1 < v_0 ]
		(?, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb15_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) [ v_kc.1 >= v_0 ]
		(?, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) [ v_j3.0 > 0 ]
		(?, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) [ v_j3.0 <= 0 ]
		(?, 1)    eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1, v_sizeofPixelOut, v_tmp_width)
		(?, 1)    eval_zoom_y_bb15_in(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width) -> eval_zoom_y_stop(v_0, v_2, v_Colors, v_MaxValueOut, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1, v_sizeofPixelOut, v_tmp_width)
	start location:	eval_zoom_y_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_zoom_y_bb15_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_stop(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
		(?, 1)    eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)
		(?, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]
		(?, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(?, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb15_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_kc.1 >= v_0 ]
		(?, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(?, 1)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
		(?, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
		(?, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(?, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb15_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 >= v_0 ]
		(?, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(?, 1)    eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(?, 1)    eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)    eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)
		(?, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]
		(?, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(?, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(?, 1)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
		(?, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
		(?, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(?, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(?, 1)    eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(?, 1)    eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)    eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(?, 1)    eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)
		(?, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]
		(?, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(?, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(?, 1)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
		(?, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
		(?, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(?, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(1, 1)    eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)    eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)    eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

A polynomial rank function with
	Pol(eval_zoom_y_bb8_in) = V_1 - V_8 + 1
	Pol(eval_zoom_y_bb10_in) = V_1 - V_8
	Pol(eval_zoom_y_bb7_in) = V_1 - V_7 - 1
	Pol(eval_zoom_y_bb1_in) = V_1 - V_7
	Pol(eval_zoom_y_bb3_in) = V_1 - V_7 - 1
	Pol(eval_zoom_y_bb14_in) = V_1 - V_8
and size complexities
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-0) = v_0
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-1) = v_2
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-2) = v_Colors
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-3) = v_WidthOut
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-4) = v_j.0
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-5) = v_j3.0
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-6) = v_kc.0
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-7) = v_kc.1
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-1) = ?
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-2) = v_Colors
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-3) = v_WidthOut
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-4) = v_j.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-5) = v_j3.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-6) = 0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-7) = v_kc.1
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-1) = ?
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-2) = v_Colors
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-3) = v_WidthOut
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-4) = v_j.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-5) = v_j3.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-6) = v_kc.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-7) = 0
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-1) = ?
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-4) = ?
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-5) = v_j3.0
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-6) = ?
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-7) = v_kc.1
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-1) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-4) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-5) = v_j3.0
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-6) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-7) = v_kc.1
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-1) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-4) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-5) = v_j3.0
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-6) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-7) = v_kc.1
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-1) = ?
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-2) = v_Colors
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-3) = v_WidthOut
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-4) = ?
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-5) = v_j3.0
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-6) = ?
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-7) = v_kc.1
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-1) = ?
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-4) = v_j.0
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-5) = ?
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-6) = v_kc.0
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-7) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-1) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-4) = v_j.0
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-5) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-6) = v_kc.0
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-7) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-1) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-4) = v_j.0
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-5) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-6) = v_kc.0
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-7) = ?
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-1) = ?
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-2) = v_Colors
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-3) = v_WidthOut
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-4) = v_j.0
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-5) = ?
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-6) = v_kc.0
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-7) = ?
orients the transitions
	eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
	eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
	eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
	eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
	eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
	eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)
	eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]
	eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
weakly and the transitions
	eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
	eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
strictly and produces the following problem:
5:	T:
		(?, 1)                            eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

A polynomial rank function with
	Pol(eval_zoom_y_bb7_in) = 1
	Pol(eval_zoom_y_bb1_in) = 0
	Pol(eval_zoom_y_bb3_in) = 2
	Pol(eval_zoom_y_bb14_in) = 1
	Pol(eval_zoom_y_bb8_in) = 0
	Pol(eval_zoom_y_bb10_in) = 2
and size complexities
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-0) = v_0
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-1) = v_2
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-2) = v_Colors
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-3) = v_WidthOut
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-4) = v_j.0
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-5) = v_j3.0
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-6) = v_kc.0
	S("eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)", 0-7) = v_kc.1
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-1) = ?
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-2) = v_Colors
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-3) = v_WidthOut
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-4) = v_j.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-5) = v_j3.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-6) = 0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)", 0-7) = v_kc.1
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-1) = ?
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-2) = v_Colors
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-3) = v_WidthOut
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-4) = v_j.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-5) = v_j3.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-6) = v_kc.0
	S("eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)", 0-7) = 0
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-1) = ?
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-4) = ?
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-5) = v_j3.0
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-6) = ?
	S("eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]", 0-7) = v_kc.1
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-1) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-4) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-5) = v_j3.0
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-6) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]", 0-7) = v_kc.1
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-1) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-4) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-5) = v_j3.0
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-6) = ?
	S("eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]", 0-7) = v_kc.1
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-1) = ?
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-2) = v_Colors
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-3) = v_WidthOut
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-4) = ?
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-5) = v_j3.0
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-6) = ?
	S("eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)", 0-7) = v_kc.1
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-1) = ?
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-4) = v_j.0
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-5) = ?
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-6) = v_kc.0
	S("eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]", 0-7) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-1) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-4) = v_j.0
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-5) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-6) = v_kc.0
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]", 0-7) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-1) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-2) = v_Colors
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-3) = v_WidthOut
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-4) = v_j.0
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-5) = ?
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-6) = v_kc.0
	S("eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]", 0-7) = ?
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-0) = v_Colors*v_WidthOut
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-1) = ?
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-2) = v_Colors
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-3) = v_WidthOut
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-4) = v_j.0
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-5) = ?
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-6) = v_kc.0
	S("eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)", 0-7) = ?
orients the transitions
	eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
	eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
	eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
	eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)
	eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]
	eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
weakly and the transitions
	eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
	eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
	eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)
	eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]
strictly and produces the following problem:
6:	T:
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1)
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1 + 1) with all transitions in problem 6, the following new transition is obtained:
	eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_kc.1 + 1 < v_0 ]
We thus obtain the following problem:
7:	T:
		(8*v_Colors*v_WidthOut + 4, 2)    eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_kc.1 + 1 < v_0 ]
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j3.0 <= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
We thus obtain the following problem:
8:	T:
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(8*v_Colors*v_WidthOut + 4, 2)    eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_zoom_y_bb14_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_kc.1 + 1 < v_0 ]
We thus obtain the following problem:
9:	T:
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1)
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0 + 1, v_kc.1) with all transitions in problem 9, the following new transition is obtained:
	eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_kc.0 + 1 < v_0 ]
We thus obtain the following problem:
10:	T:
		(8*v_Colors*v_WidthOut + 4, 2)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 1)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 <= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
We thus obtain the following problem:
11:	T:
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(8*v_Colors*v_WidthOut + 4, 2)    eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_zoom_y_bb7_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_kc.0 + 1 < v_0 ]
We thus obtain the following problem:
12:	T:
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1)
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb1_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, 0, v_kc.1) with all transitions in problem 12, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
13:	T:
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_zoom_y_bb1_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0, v_kc.1) [ v_kc.0 < v_0 ]
We thus obtain the following problem:
14:	T:
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0)
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb8_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, 0) with all transitions in problem 14, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
15:	T:
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(2*v_Colors*v_WidthOut + 1, 1)    eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 15:
	eval_zoom_y_bb8_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1) [ v_kc.1 < v_0 ]
We thus obtain the following problem:
16:	T:
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut ] with all transitions in problem 16, the following new transitions are obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 1) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut ]
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
We thus obtain the following problem:
17:	T:
		(1, 5)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 1) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut ]
		(1, 3)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 1) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut ] with all transitions in problem 17, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 2) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
18:	T:
		(1, 8)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 2) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut ]
		(1, 3)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 2) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut ] with all transitions in problem 18, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 3) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
19:	T:
		(1, 11)                           eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 3) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut ]
		(1, 3)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 3) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut ] with all transitions in problem 19, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 4) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
20:	T:
		(1, 14)                           eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 4) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut ]
		(1, 3)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 4) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut ] with all transitions in problem 20, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 5) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
21:	T:
		(1, 17)                           eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 5) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut ]
		(1, 3)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 5) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut ] with all transitions in problem 21, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 6) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
22:	T:
		(1, 20)                           eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 6) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut ]
		(1, 3)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 6) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut ] with all transitions in problem 22, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 7) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut /\ 7 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
23:	T:
		(1, 23)                           eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 7) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut /\ 7 < v_Colors*v_WidthOut ]
		(1, 3)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 7) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut /\ 7 < v_Colors*v_WidthOut ] with all transitions in problem 23, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 8) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut /\ 7 < v_Colors*v_WidthOut /\ 8 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
24:	T:
		(1, 26)                           eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 8) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut /\ 7 < v_Colors*v_WidthOut /\ 8 < v_Colors*v_WidthOut ]
		(1, 3)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

By chaining the transition eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 8) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut /\ 7 < v_Colors*v_WidthOut /\ 8 < v_Colors*v_WidthOut ] with all transitions in problem 24, the following new transition is obtained:
	eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 9) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut /\ 7 < v_Colors*v_WidthOut /\ 8 < v_Colors*v_WidthOut /\ 9 < v_Colors*v_WidthOut ]
We thus obtain the following problem:
25:	T:
		(1, 29)                           eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0, v_kc.0, 9) [ 0 < v_Colors*v_WidthOut /\ nondef.0 <= 0 /\ 1 < v_Colors*v_WidthOut /\ 2 < v_Colors*v_WidthOut /\ 3 < v_Colors*v_WidthOut /\ 4 < v_Colors*v_WidthOut /\ 5 < v_Colors*v_WidthOut /\ 6 < v_Colors*v_WidthOut /\ 7 < v_Colors*v_WidthOut /\ 8 < v_Colors*v_WidthOut /\ 9 < v_Colors*v_WidthOut ]
		(1, 3)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, v_j.0, nondef.0 - 1, v_kc.0, 0) [ 0 < v_Colors*v_WidthOut /\ nondef.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_2, v_kc.0, v_kc.1 + 1) [ v_j3.0 <= 0 /\ v_kc.1 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb10_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0 - 1, v_kc.0, v_kc.1) [ v_j3.0 > 0 ]
		(8*v_Colors*v_WidthOut + 4, 3)    eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_2, v_j3.0, v_kc.0 + 1, v_kc.1) [ v_j.0 <= 0 /\ v_kc.0 + 1 < v_0 ]
		(?, 1)                            eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0 - 1, v_j3.0, v_kc.0, v_kc.1) [ v_j.0 > 0 ]
		(1, 2)                            eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb3_in(v_Colors*v_WidthOut, nondef.0, v_Colors, v_WidthOut, nondef.0, v_j3.0, 0, v_kc.1) [ 0 < v_Colors*v_WidthOut ]
		(1, 1)                            eval_zoom_y_start(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1) -> eval_zoom_y_bb0_in(v_0, v_2, v_Colors, v_WidthOut, v_j.0, v_j3.0, v_kc.0, v_kc.1)
	start location:	eval_zoom_y_start
	leaf cost:	3

Complexity upper bound ?

Time: 5.574 sec (SMT: 3.621 sec)
