MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
		(?, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_0())
		(?, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(?, 1)    eval_gx_add_cached_char_0() -> Com_1(eval_gx_add_cached_char_1())
		(?, 1)    eval_gx_add_cached_char_1() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(?, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(?, 1)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(?, 1)    eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
		(1, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_0())
		(1, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(1, 1)    eval_gx_add_cached_char_0() -> Com_1(eval_gx_add_cached_char_1())
		(1, 1)    eval_gx_add_cached_char_1() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(1, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(1, 1)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(2, 1)    eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_gx_add_cached_char_start) = 1
	Pol(eval_gx_add_cached_char_bb0_in) = 1
	Pol(eval_gx_add_cached_char_0) = 1
	Pol(eval_gx_add_cached_char_bb2_in) = 1
	Pol(eval_gx_add_cached_char_1) = 1
	Pol(eval_gs_device_is_abuf_start) = 0
	Pol(eval_gx_add_cached_char_2) = 1
	Pol(eval_gx_add_char_bits_start) = 0
	Pol(eval_gx_add_cached_char_3) = 1
	Pol(eval_gx_add_cached_char_bb3_in) = 1
	Pol(eval_gx_add_cached_char_stop) = 0
orients all transitions weakly and the transition
	eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
		(1, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_0())
		(1, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(1, 1)    eval_gx_add_cached_char_0() -> Com_1(eval_gx_add_cached_char_1())
		(1, 1)    eval_gx_add_cached_char_1() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(1, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(1, 1)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(2, 1)    eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

By chaining the transition eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_0()) with all transitions in problem 3, the following new transition is obtained:
	eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_1())
We thus obtain the following problem:
4:	T:
		(1, 2)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_1())
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
		(1, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(1, 1)    eval_gx_add_cached_char_0() -> Com_1(eval_gx_add_cached_char_1())
		(1, 1)    eval_gx_add_cached_char_1() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(1, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(1, 1)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(2, 1)    eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 4:
	eval_gx_add_cached_char_0() -> Com_1(eval_gx_add_cached_char_1())
We thus obtain the following problem:
5:	T:
		(1, 1)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(1, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(1, 1)    eval_gx_add_cached_char_1() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(2, 1)    eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 2)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_1())
		(1, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

By chaining the transition eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb2_in()) with all transitions in problem 5, the following new transition is obtained:
	eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb3_in())
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(1, 1)    eval_gx_add_cached_char_1() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(2, 1)    eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 2)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_1())
		(1, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

By chaining the transition eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_1()) with all transitions in problem 6, the following new transition is obtained:
	eval_gx_add_cached_char_bb0_in() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
We thus obtain the following problem:
7:	T:
		(1, 3)    eval_gx_add_cached_char_bb0_in() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(1, 2)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(1, 1)    eval_gx_add_cached_char_1() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(2, 1)    eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 7:
	eval_gx_add_cached_char_1() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
We thus obtain the following problem:
8:	T:
		(1, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 2)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(2, 1)    eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 3)    eval_gx_add_cached_char_bb0_in() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(1, 1)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb2_in())
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

By chaining the transition eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb2_in()) with all transitions in problem 8, the following new transition is obtained:
	eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
We thus obtain the following problem:
9:	T:
		(1, 2)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 2)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(2, 1)    eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 3)    eval_gx_add_cached_char_bb0_in() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_gx_add_cached_char_bb2_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
We thus obtain the following problem:
10:	T:
		(1, 2)    eval_gx_add_cached_char_3() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_stop())
		(?, 1)    eval_gx_add_cached_char_bb3_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 1)    eval_gx_add_cached_char_2() -> Com_2(eval_gx_add_char_bits_start(), eval_gx_add_cached_char_3())
		(1, 2)    eval_gx_add_cached_char_bb0_in() -> Com_1(eval_gx_add_cached_char_bb3_in())
		(1, 3)    eval_gx_add_cached_char_bb0_in() -> Com_2(eval_gs_device_is_abuf_start(), eval_gx_add_cached_char_2())
		(1, 1)    eval_gx_add_cached_char_start() -> Com_1(eval_gx_add_cached_char_bb0_in())
	start location:	eval_gx_add_cached_char_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.038 sec (SMT: 0.033 sec)
