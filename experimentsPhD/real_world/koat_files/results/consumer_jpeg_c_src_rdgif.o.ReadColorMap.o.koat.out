YES(?, 49*v_cmaplen + 10)

Initial complexity problem:
1:	T:
		(1, 1)    eval_ReadColorMap_start(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, 0))
		(?, 1)    eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_0(v_cmaplen, v_i.0)) [ v_i.0 < v_cmaplen ]
		(?, 1)    eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_stop(v_cmaplen, v_i.0)) [ v_i.0 >= v_cmaplen ]
		(?, 1)    eval_ReadColorMap_0(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_1(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_1(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_4(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_4(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_5(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_5(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_8(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_8(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_9(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_9(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0 + 1))
	start location:	eval_ReadColorMap_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_ReadColorMap_start(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0))
		(1, 1)    eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, 0))
		(?, 1)    eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_0(v_cmaplen, v_i.0)) [ v_i.0 < v_cmaplen ]
		(?, 1)    eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_stop(v_cmaplen, v_i.0)) [ v_i.0 >= v_cmaplen ]
		(?, 1)    eval_ReadColorMap_0(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_1(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_1(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_4(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_4(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_5(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_5(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_8(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_8(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_9(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_9(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0 + 1))
	start location:	eval_ReadColorMap_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_ReadColorMap_start) = 1
	Pol(eval_ReadColorMap_bb0_in) = 1
	Pol(eval_ReadColorMap_bb1_in) = 1
	Pol(eval_ReadColorMap_0) = 1
	Pol(eval_ReadColorMap_stop) = 0
	Pol(eval_ReadByte_start) = 0
	Pol(eval_ReadColorMap_1) = 1
	Pol(eval_ReadColorMap_4) = 1
	Pol(eval_ReadColorMap_5) = 1
	Pol(eval_ReadColorMap_8) = 1
	Pol(eval_ReadColorMap_9) = 1
orients all transitions weakly and the transition
	eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_stop(v_cmaplen, v_i.0)) [ v_i.0 >= v_cmaplen ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_ReadColorMap_start(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0))
		(1, 1)    eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, 0))
		(?, 1)    eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_0(v_cmaplen, v_i.0)) [ v_i.0 < v_cmaplen ]
		(1, 1)    eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_stop(v_cmaplen, v_i.0)) [ v_i.0 >= v_cmaplen ]
		(?, 1)    eval_ReadColorMap_0(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_1(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_1(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_4(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_4(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_5(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_5(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_8(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_8(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_9(v_cmaplen, v_i.0))
		(?, 1)    eval_ReadColorMap_9(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0 + 1))
	start location:	eval_ReadColorMap_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_ReadColorMap_0: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_ReadColorMap_1: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_ReadColorMap_4: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_ReadColorMap_5: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_ReadColorMap_8: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_ReadColorMap_9: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_ReadColorMap_bb1_in: X_2 >= 0


This yielded the following problem:
4:	T:
		(?, 1)    eval_ReadColorMap_9(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0 + 1)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(?, 1)    eval_ReadColorMap_8(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_9(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(?, 1)    eval_ReadColorMap_5(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_8(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(?, 1)    eval_ReadColorMap_4(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_5(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(?, 1)    eval_ReadColorMap_1(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_4(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(?, 1)    eval_ReadColorMap_0(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_1(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(1, 1)    eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_stop(v_cmaplen, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_cmaplen ]
		(?, 1)    eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_0(v_cmaplen, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_cmaplen ]
		(1, 1)    eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, 0))
		(1, 1)    eval_ReadColorMap_start(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0))
	start location:	eval_ReadColorMap_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_ReadColorMap_9) = 7*V_1 - 7*V_2 - 5
	Pol(eval_ReadColorMap_bb1_in) = 7*V_1 - 7*V_2 + 1
	Pol(eval_ReadColorMap_8) = 7*V_1 - 7*V_2 - 4
	Pol(eval_ReadByte_start) = 0
	Pol(eval_ReadColorMap_5) = 7*V_1 - 7*V_2 - 3
	Pol(eval_ReadColorMap_4) = 7*V_1 - 7*V_2 - 2
	Pol(eval_ReadColorMap_1) = 7*V_1 - 7*V_2 - 1
	Pol(eval_ReadColorMap_0) = 7*V_1 - 7*V_2
	Pol(eval_ReadColorMap_stop) = 7*V_1 - 7*V_2
	Pol(eval_ReadColorMap_bb0_in) = 7*V_1 + 1
	Pol(eval_ReadColorMap_start) = 7*V_1 + 1
orients all transitions weakly and the transitions
	eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_0(v_cmaplen, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_cmaplen ]
	eval_ReadColorMap_9(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0 + 1)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
	eval_ReadColorMap_8(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_9(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
	eval_ReadColorMap_5(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_8(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
	eval_ReadColorMap_4(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_5(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
	eval_ReadColorMap_1(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_4(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
	eval_ReadColorMap_0(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_1(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
strictly and produces the following problem:
5:	T:
		(7*v_cmaplen + 1, 1)    eval_ReadColorMap_9(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0 + 1)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(7*v_cmaplen + 1, 1)    eval_ReadColorMap_8(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_9(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(7*v_cmaplen + 1, 1)    eval_ReadColorMap_5(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_8(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(7*v_cmaplen + 1, 1)    eval_ReadColorMap_4(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_5(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(7*v_cmaplen + 1, 1)    eval_ReadColorMap_1(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_4(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(7*v_cmaplen + 1, 1)    eval_ReadColorMap_0(v_cmaplen, v_i.0) -> Com_2(eval_ReadByte_start(v_cmaplen, v_i.0), eval_ReadColorMap_1(v_cmaplen, v_i.0)) [ v_cmaplen - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_cmaplen + v_i.0 - 1 >= 0 /\ v_cmaplen - 1 >= 0 ]
		(1, 1)                  eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_stop(v_cmaplen, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_cmaplen ]
		(7*v_cmaplen + 1, 1)    eval_ReadColorMap_bb1_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_0(v_cmaplen, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_cmaplen ]
		(1, 1)                  eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb1_in(v_cmaplen, 0))
		(1, 1)                  eval_ReadColorMap_start(v_cmaplen, v_i.0) -> Com_1(eval_ReadColorMap_bb0_in(v_cmaplen, v_i.0))
	start location:	eval_ReadColorMap_start
	leaf cost:	0

Complexity upper bound 49*v_cmaplen + 10

Time: 0.102 sec (SMT: 0.090 sec)
