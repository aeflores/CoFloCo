MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_bmh_search_start(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_bb0_in(v_'patlen, v_'skip2, v_j.0, v_stringlen)
		(?, 1)    eval_bmh_search_bb0_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_bb8_in(v_'patlen, v_'skip2, v_j.0, v_stringlen)
		(?, 1)    eval_bmh_search_bb0_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_bb2_in(v_'patlen, v_'skip2, v_j.0, v_stringlen)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_bb2_in(v_'patlen, v_'skip2, v_j.0, v_stringlen)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_bb8_in(v_'patlen, v_'skip2, v_j.0, v_stringlen)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_bb5_in(v_'patlen, v_'skip2, v_'patlen - 1, v_stringlen)
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_bb5_in(v_'patlen, v_'skip2, v_j.0 - 1, v_stringlen) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_.critedge_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_.critedge_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) [ v_j.0 - 1 < 0 ]
		(?, 1)    eval_bmh_search_.critedge_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_bb8_in(v_'patlen, v_'skip2, v_j.0, v_stringlen)
		(?, 1)    eval_bmh_search_.critedge_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_bb2_in(v_'patlen, v_'skip2, v_j.0, v_stringlen)
		(?, 1)    eval_bmh_search_bb8_in(v_'patlen, v_'skip2, v_j.0, v_stringlen) -> eval_bmh_search_stop(v_'patlen, v_'skip2, v_j.0, v_stringlen)
	start location:	eval_bmh_search_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_'patlen, v_j.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_bmh_search_bb8_in(v_'patlen, v_j.0) -> eval_bmh_search_stop(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_.critedge_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_.critedge_in(v_'patlen, v_j.0) -> eval_bmh_search_bb8_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_.critedge_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_.critedge_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_j.0 - 1) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_'patlen - 1)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb8_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb0_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb0_in(v_'patlen, v_j.0) -> eval_bmh_search_bb8_in(v_'patlen, v_j.0)
		(1, 1)    eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb0_in(v_'patlen, v_j.0)
	start location:	eval_bmh_search_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_bmh_search_.critedge_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_.critedge_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_.critedge_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_j.0 - 1) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_'patlen - 1)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb0_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(1, 1)    eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb0_in(v_'patlen, v_j.0)
	start location:	eval_bmh_search_start
	leaf cost:	4

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(?, 1)    eval_bmh_search_.critedge_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_.critedge_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_.critedge_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_j.0 - 1) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_'patlen - 1)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(1, 1)    eval_bmh_search_bb0_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(1, 1)    eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb0_in(v_'patlen, v_j.0)
	start location:	eval_bmh_search_start
	leaf cost:	4

By chaining the transition eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_.critedge_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ]
		(?, 1)    eval_bmh_search_.critedge_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_.critedge_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_j.0 - 1) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_'patlen - 1)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(1, 1)    eval_bmh_search_bb0_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(1, 1)    eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb0_in(v_'patlen, v_j.0)
	start location:	eval_bmh_search_start
	leaf cost:	4

By chaining the transition eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_.critedge_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ]
We thus obtain the following problem:
6:	T:
		(?, 2)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ]
		(?, 2)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ]
		(?, 1)    eval_bmh_search_.critedge_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_j.0 - 1) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_'patlen - 1)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(1, 1)    eval_bmh_search_bb0_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(1, 1)    eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb0_in(v_'patlen, v_j.0)
	start location:	eval_bmh_search_start
	leaf cost:	4

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_bmh_search_.critedge_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
We thus obtain the following problem:
7:	T:
		(?, 2)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ]
		(?, 2)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_j.0 - 1) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_'patlen - 1)
		(1, 1)    eval_bmh_search_bb0_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(1, 1)    eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb0_in(v_'patlen, v_j.0)
	start location:	eval_bmh_search_start
	leaf cost:	4

By chaining the transition eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb0_in(v_'patlen, v_j.0) with all transitions in problem 7, the following new transition is obtained:
	eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
We thus obtain the following problem:
8:	T:
		(1, 2)    eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 2)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ]
		(?, 2)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_j.0 - 1) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_'patlen - 1)
		(1, 1)    eval_bmh_search_bb0_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
	start location:	eval_bmh_search_start
	leaf cost:	4

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_bmh_search_bb0_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 >= 0 ]
		(?, 2)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0) [ v_j.0 - 1 < 0 ]
		(?, 1)    eval_bmh_search_bb5_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_j.0 - 1) [ v_j.0 - 1 >= 0 ]
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
		(?, 1)    eval_bmh_search_bb2_in(v_'patlen, v_j.0) -> eval_bmh_search_bb5_in(v_'patlen, v_'patlen - 1)
		(1, 2)    eval_bmh_search_start(v_'patlen, v_j.0) -> eval_bmh_search_bb2_in(v_'patlen, v_j.0)
	start location:	eval_bmh_search_start
	leaf cost:	4

Complexity upper bound ?

Time: 0.764 sec (SMT: 0.640 sec)
