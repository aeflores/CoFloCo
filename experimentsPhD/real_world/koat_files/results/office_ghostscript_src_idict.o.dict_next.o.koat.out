YES(?, 9*v_index + 32)

Initial complexity problem:
1:	T:
		(1, 1)    eval_dict_next_start(v_.01, v_24, v_26, v_index) -> Com_1(eval_dict_next_bb0_in(v_.01, v_24, v_26, v_index))
		(?, 1)    eval_dict_next_bb0_in(v_.01, v_24, v_26, v_index) -> Com_1(eval_dict_next_bb1_in(v_index, v_24, v_26, v_index))
		(?, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_26, v_index) -> Com_1(eval_dict_next_5(v_.01, v_.01 - 1, v_.01 - 1, v_index)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_26, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_26, v_index)) [ v_.01 - 1 < 0 ]
		(?, 1)    eval_dict_next_5(v_.01, v_24, v_26, v_index) -> Com_2(eval_array_get_start(v_.01, v_24, v_26, v_index), eval_dict_next_6(v_.01, v_24, v_26, v_index))
		(?, 1)    eval_dict_next_6(v_.01, v_24, v_26, v_index) -> Com_1(eval_dict_next_bb5_in(v_.01, v_24, v_26, v_index))
		(?, 1)    eval_dict_next_6(v_.01, v_24, v_26, v_index) -> Com_1(eval_dict_next_bb1_in(v_24, v_24, v_26, v_index))
		(?, 1)    eval_dict_next_bb5_in(v_.01, v_24, v_26, v_index) -> Com_1(eval_dict_next_15(v_.01, v_24, v_26, v_index))
		(?, 1)    eval_dict_next_15(v_.01, v_24, v_26, v_index) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_24, v_26, v_index), eval_dict_next_16(v_.01, v_24, v_26, v_index))
		(?, 1)    eval_dict_next_16(v_.01, v_24, v_26, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_26, v_index))
		(?, 1)    eval_dict_next_bb6_in(v_.01, v_24, v_26, v_index) -> Com_1(eval_dict_next_stop(v_.01, v_24, v_26, v_index))
	start location:	eval_dict_next_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.01, v_24, v_index].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_dict_next_bb6_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_stop(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_16(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_15(v_.01, v_24, v_index) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_24, v_index), eval_dict_next_16(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_bb5_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_15(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_24, v_24, v_index))
		(?, 1)    eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb5_in(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_5(v_.01, v_24, v_index) -> Com_2(eval_array_get_start(v_.01, v_24, v_index), eval_dict_next_6(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index)) [ v_.01 - 1 < 0 ]
		(?, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_5(v_.01, v_.01 - 1, v_index)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_dict_next_bb0_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_index, v_24, v_index))
		(1, 1)    eval_dict_next_start(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb0_in(v_.01, v_24, v_index))
	start location:	eval_dict_next_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_dict_next_bb6_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_stop(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_16(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_15(v_.01, v_24, v_index) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_24, v_index), eval_dict_next_16(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_bb5_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_15(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_24, v_24, v_index))
		(?, 1)    eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb5_in(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_5(v_.01, v_24, v_index) -> Com_2(eval_array_get_start(v_.01, v_24, v_index), eval_dict_next_6(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index)) [ v_.01 - 1 < 0 ]
		(?, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_5(v_.01, v_.01 - 1, v_index)) [ v_.01 - 1 >= 0 ]
		(1, 1)    eval_dict_next_bb0_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_index, v_24, v_index))
		(1, 1)    eval_dict_next_start(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb0_in(v_.01, v_24, v_index))
	start location:	eval_dict_next_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_dict_next_bb6_in) = 1
	Pol(eval_dict_next_stop) = 0
	Pol(eval_dict_next_16) = 2
	Pol(eval_dict_next_15) = 3
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_dict_next_bb5_in) = 4
	Pol(eval_dict_next_6) = 5
	Pol(eval_dict_next_bb1_in) = 5
	Pol(eval_dict_next_5) = 5
	Pol(eval_array_get_start) = 0
	Pol(eval_dict_next_bb0_in) = 5
	Pol(eval_dict_next_start) = 5
orients all transitions weakly and the transitions
	eval_dict_next_bb6_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_stop(v_.01, v_24, v_index))
	eval_dict_next_bb5_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_15(v_.01, v_24, v_index))
	eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index)) [ v_.01 - 1 < 0 ]
	eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb5_in(v_.01, v_24, v_index))
	eval_dict_next_16(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index))
	eval_dict_next_15(v_.01, v_24, v_index) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_24, v_index), eval_dict_next_16(v_.01, v_24, v_index))
strictly and produces the following problem:
4:	T:
		(5, 1)    eval_dict_next_bb6_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_stop(v_.01, v_24, v_index))
		(5, 1)    eval_dict_next_16(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index))
		(5, 1)    eval_dict_next_15(v_.01, v_24, v_index) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_24, v_index), eval_dict_next_16(v_.01, v_24, v_index))
		(5, 1)    eval_dict_next_bb5_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_15(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_24, v_24, v_index))
		(5, 1)    eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb5_in(v_.01, v_24, v_index))
		(?, 1)    eval_dict_next_5(v_.01, v_24, v_index) -> Com_2(eval_array_get_start(v_.01, v_24, v_index), eval_dict_next_6(v_.01, v_24, v_index))
		(5, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index)) [ v_.01 - 1 < 0 ]
		(?, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_5(v_.01, v_.01 - 1, v_index)) [ v_.01 - 1 >= 0 ]
		(1, 1)    eval_dict_next_bb0_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_index, v_24, v_index))
		(1, 1)    eval_dict_next_start(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb0_in(v_.01, v_24, v_index))
	start location:	eval_dict_next_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_dict_next_15: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_dict_next_16: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_dict_next_5: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_dict_next_6: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_dict_next_bb1_in: -X_1 + X_3 >= 0
  For symbol eval_dict_next_bb5_in: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_dict_next_bb6_in: -X_1 + X_3 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_dict_next_start(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb0_in(v_.01, v_24, v_index))
		(1, 1)    eval_dict_next_bb0_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_index, v_24, v_index))
		(?, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_5(v_.01, v_.01 - 1, v_index)) [ -v_.01 + v_index >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index)) [ -v_.01 + v_index >= 0 /\ v_.01 - 1 < 0 ]
		(?, 1)    eval_dict_next_5(v_.01, v_24, v_index) -> Com_2(eval_array_get_start(v_.01, v_24, v_index), eval_dict_next_6(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)    eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb5_in(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(?, 1)    eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_24, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)    eval_dict_next_bb5_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_15(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)    eval_dict_next_15(v_.01, v_24, v_index) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_24, v_index), eval_dict_next_16(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)    eval_dict_next_16(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)    eval_dict_next_bb6_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_stop(v_.01, v_24, v_index)) [ -v_.01 + v_index >= 0 ]
	start location:	eval_dict_next_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_dict_next_start) = 3*V_3
	Pol(eval_dict_next_bb0_in) = 3*V_3
	Pol(eval_dict_next_bb1_in) = 3*V_1
	Pol(eval_dict_next_5) = 3*V_2 + 2
	Pol(eval_dict_next_bb6_in) = 3*V_1 - 3
	Pol(eval_array_get_start) = -V_1
	Pol(eval_dict_next_6) = V_1 + 2*V_2
	Pol(eval_dict_next_bb5_in) = 3*V_2
	Pol(eval_dict_next_15) = 3*V_2
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_dict_next_16) = 3*V_2
	Pol(eval_dict_next_stop) = 3*V_1 - 3
orients all transitions weakly and the transitions
	eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_5(v_.01, v_.01 - 1, v_index)) [ -v_.01 + v_index >= 0 /\ v_.01 - 1 >= 0 ]
	eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_24, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	eval_dict_next_5(v_.01, v_24, v_index) -> Com_2(eval_array_get_start(v_.01, v_24, v_index), eval_dict_next_6(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
strictly and produces the following problem:
6:	T:
		(1, 1)            eval_dict_next_start(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb0_in(v_.01, v_24, v_index))
		(1, 1)            eval_dict_next_bb0_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_index, v_24, v_index))
		(3*v_index, 1)    eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_5(v_.01, v_.01 - 1, v_index)) [ -v_.01 + v_index >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)            eval_dict_next_bb1_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index)) [ -v_.01 + v_index >= 0 /\ v_.01 - 1 < 0 ]
		(3*v_index, 1)    eval_dict_next_5(v_.01, v_24, v_index) -> Com_2(eval_array_get_start(v_.01, v_24, v_index), eval_dict_next_6(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)            eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb5_in(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(3*v_index, 1)    eval_dict_next_6(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb1_in(v_24, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)            eval_dict_next_bb5_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_15(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)            eval_dict_next_15(v_.01, v_24, v_index) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_24, v_index), eval_dict_next_16(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)            eval_dict_next_16(v_.01, v_24, v_index) -> Com_1(eval_dict_next_bb6_in(v_.01, v_24, v_index)) [ v_index - 1 >= 0 /\ v_24 + v_index - 1 >= 0 /\ -v_24 + v_index - 1 >= 0 /\ v_.01 + v_index - 2 >= 0 /\ -v_.01 + v_index >= 0 /\ v_.01 - v_24 - 1 >= 0 /\ v_24 >= 0 /\ v_.01 + v_24 - 1 >= 0 /\ -v_.01 + v_24 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5, 1)            eval_dict_next_bb6_in(v_.01, v_24, v_index) -> Com_1(eval_dict_next_stop(v_.01, v_24, v_index)) [ -v_.01 + v_index >= 0 ]
	start location:	eval_dict_next_start
	leaf cost:	0

Complexity upper bound 9*v_index + 32

Time: 0.132 sec (SMT: 0.107 sec)
