MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0)
		(?, 1)    eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 < 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 > 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 < 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 > 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 = 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0)
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_stop(v_h.0, v_h.1, v_hashtblsize, v_i.0) [ v_h.1 = 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_stop(v_h.0, v_h.1, v_hashtblsize, v_i.0) [ v_hashtblsize = 1 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_stop(v_h.0, v_h.1, v_hashtblsize, v_i.0) [ v_hashtblsize = -1 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_stop(v_h.0, v_h.1, v_hashtblsize, v_i.0) [ v_hashtblsize > 1 /\ v_h.1 > 0 /\ nondef.13 >= 0 /\ nondef.13 < v_hashtblsize ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_stop(v_h.0, v_h.1, v_hashtblsize, v_i.0) [ v_hashtblsize > 1 /\ v_h.1 < 0 /\ nondef.13 <= 0 /\ nondef.13 > -v_hashtblsize ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_stop(v_h.0, v_h.1, v_hashtblsize, v_i.0) [ v_hashtblsize < -1 /\ v_h.1 > 0 /\ nondef.13 >= 0 /\ nondef.13 < -v_hashtblsize ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_stop(v_h.0, v_h.1, v_hashtblsize, v_i.0) [ v_hashtblsize < -1 /\ v_h.1 < 0 /\ nondef.13 <= 0 /\ nondef.13 > v_hashtblsize ]
	start location:	eval_hash_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0)
		(?, 1)    eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 < 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 > 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 < 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 > 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 = 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0)
	start location:	eval_hash_start
	leaf cost:	7

Testing for reachability in the complexity graph removes the following transitions from problem 2:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 < 0 ]
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 < 0 ]
We thus obtain the following problem:
3:	T:
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0)
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 = 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 > 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 > 0 ]
		(?, 1)    eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
		(1, 1)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0)
	start location:	eval_hash_start
	leaf cost:	7

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0)
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 = 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 > 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 > 0 ]
		(1, 1)    eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
		(1, 1)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0)
	start location:	eval_hash_start
	leaf cost:	7

A polynomial rank function with
	Pol(eval_hash_bb4_in) = 0
	Pol(eval_hash_bb1_in) = 1
	Pol(eval_hash_bb0_in) = 1
	Pol(eval_hash_start) = 1
orients all transitions weakly and the transitions
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 > 0 ]
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 = 0 ]
strictly and produces the following problem:
5:	T:
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0)
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 = 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 > 0 ]
		(?, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 > 0 ]
		(1, 1)    eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
		(1, 1)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0)
	start location:	eval_hash_start
	leaf cost:	7

A polynomial rank function with
	Pol(eval_hash_bb4_in) = V_4
	Pol(eval_hash_bb1_in) = V_4
	Pol(eval_hash_bb0_in) = 4
	Pol(eval_hash_start) = 4
orients all transitions weakly and the transition
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 > 0 ]
strictly and produces the following problem:
6:	T:
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0)
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 = 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ v_i.0 > 0 ]
		(1, 1)    eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
		(1, 1)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0)
	start location:	eval_hash_start
	leaf cost:	7

Applied AI with 'oct' on problem 6 to obtain the following invariants:
  For symbol eval_hash_bb1_in: -X_4 + 4 >= 0
  For symbol eval_hash_bb4_in: -X_4 + 4 >= 0 /\ X_4 >= 0


This yielded the following problem:
7:	T:
		(1, 1)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0)
		(1, 1)    eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) with all transitions in problem 7, the following new transition is obtained:
	eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
We thus obtain the following problem:
8:	T:
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
		(1, 1)    eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
	start location:	eval_hash_start
	leaf cost:	7

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_hash_bb0_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
We thus obtain the following problem:
9:	T:
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 ] with all transitions in problem 9, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
10:	T:
		(1, 2)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
11:	T:
		(1, 3)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 11, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
12:	T:
		(1, 4)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 12, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
13:	T:
		(1, 5)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 13, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
14:	T:
		(1, 6)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 14, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
15:	T:
		(1, 7)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 15, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
16:	T:
		(1, 8)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 16, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
17:	T:
		(1, 9)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)    eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 17, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
18:	T:
		(1, 10)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)     eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)     eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 18, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
19:	T:
		(1, 11)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)     eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)     eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 19, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
20:	T:
		(1, 12)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)     eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)     eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 20, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
21:	T:
		(1, 13)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)     eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)     eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 21, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
22:	T:
		(1, 14)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)     eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)     eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

By chaining the transition eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ] with all transitions in problem 22, the following new transition is obtained:
	eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
We thus obtain the following problem:
23:	T:
		(1, 15)    eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12', v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 = 0 /\ v_i.0 >= 0 ]
		(?, 1)     eval_hash_bb4_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, nondef.12, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 >= 0 ]
		(1, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb4_in(v_h.0, v_h.0, v_hashtblsize, v_i.0) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(4, 1)     eval_hash_bb1_in(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(nondef.4, v_h.1, v_hashtblsize, v_i.0 - 1) [ -v_i.0 + 4 >= 0 /\ v_i.0 > 0 ]
		(1, 2)     eval_hash_start(v_h.0, v_h.1, v_hashtblsize, v_i.0) -> eval_hash_bb1_in(0, v_h.1, v_hashtblsize, 4)
	start location:	eval_hash_start
	leaf cost:	7

Complexity upper bound ?

Time: 0.389 sec (SMT: 0.308 sec)
