YES(?, 15021)

Initial complexity problem:
1:	T:
		(1, 1)    eval_printKeyHash_start(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_bb0_in(v_13, v_23, v_3, v_i.0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_bb0_in(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_2(v_13, v_23, 29, v_i.0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_bb0_in(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_2(v_13, v_23, 1, v_i.0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_2(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_2(eval_LANG_start(v_13, v_23, v_3, v_i.0, v_i.1, v_indent), eval_printKeyHash_3(v_13, v_23, v_3, v_i.0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_3(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_2(eval_fprintf_start(v_13, v_23, v_3, v_i.0, v_i.1, v_indent), eval_printKeyHash_4(v_13, v_23, v_3, v_i.0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_4(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_bb1_in(v_13, v_23, v_3, 0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_bb1_in(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_8(nondef.1, v_23, v_3, v_i.0, v_i.1, v_indent)) [ v_i.0 < 8 ]
		(?, 1)    eval_printKeyHash_bb1_in(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_11(v_13, v_23, v_3, v_i.0, v_i.1, v_indent)) [ v_i.0 >= 8 ]
		(?, 1)    eval_printKeyHash_8(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_2(eval_fprintf_start(v_13, v_23, v_3, v_i.0, v_i.1, v_indent), eval_printKeyHash_9(v_13, v_23, v_3, v_i.0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_9(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_bb1_in(v_13, v_23, v_3, v_i.0 + 1, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_11(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_2(eval__IO_putc_start(v_13, v_23, v_3, v_i.0, v_i.1, v_indent), eval_printKeyHash_12(v_13, v_23, v_3, v_i.0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_12(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_bb4_in(v_13, v_23, v_3, v_i.0, 8, v_indent))
		(?, 1)    eval_printKeyHash_bb4_in(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_16(v_13, nondef.4, v_3, v_i.0, v_i.1, v_indent)) [ v_i.1 < 16 ]
		(?, 1)    eval_printKeyHash_bb4_in(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_19(v_13, v_23, v_3, v_i.0, v_i.1, v_indent)) [ v_i.1 >= 16 ]
		(?, 1)    eval_printKeyHash_16(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_2(eval_fprintf_start(v_13, v_23, v_3, v_i.0, v_i.1, v_indent), eval_printKeyHash_17(v_13, v_23, v_3, v_i.0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_17(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_bb4_in(v_13, v_23, v_3, v_i.0, v_i.1 + 1, v_indent))
		(?, 1)    eval_printKeyHash_19(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_2(eval__IO_putc_start(v_13, v_23, v_3, v_i.0, v_i.1, v_indent), eval_printKeyHash_20(v_13, v_23, v_3, v_i.0, v_i.1, v_indent))
		(?, 1)    eval_printKeyHash_20(v_13, v_23, v_3, v_i.0, v_i.1, v_indent) -> Com_1(eval_printKeyHash_stop(v_13, v_23, v_3, v_i.0, v_i.1, v_indent))
	start location:	eval_printKeyHash_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_i.0, v_i.1].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_printKeyHash_20(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_stop(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_17(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, v_i.1 + 1))
		(?, 1)    eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_19(v_i.0, v_i.1)) [ v_i.1 >= 16 ]
		(?, 1)    eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_16(v_i.0, v_i.1)) [ v_i.1 < 16 ]
		(?, 1)    eval_printKeyHash_12(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, 8))
		(?, 1)    eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_9(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(v_i.0 + 1, v_i.1))
		(?, 1)    eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_11(v_i.0, v_i.1)) [ v_i.0 >= 8 ]
		(?, 1)    eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_8(v_i.0, v_i.1)) [ v_i.0 < 8 ]
		(?, 1)    eval_printKeyHash_4(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(0, v_i.1))
		(?, 1)    eval_printKeyHash_3(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_4(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_2(v_i.0, v_i.1) -> Com_2(eval_LANG_start(v_i.0, v_i.1), eval_printKeyHash_3(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(1, 1)    eval_printKeyHash_start(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb0_in(v_i.0, v_i.1))
	start location:	eval_printKeyHash_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_printKeyHash_20(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_stop(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_17(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, v_i.1 + 1))
		(?, 1)    eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_19(v_i.0, v_i.1)) [ v_i.1 >= 16 ]
		(?, 1)    eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_16(v_i.0, v_i.1)) [ v_i.1 < 16 ]
		(?, 1)    eval_printKeyHash_12(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, 8))
		(?, 1)    eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_9(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(v_i.0 + 1, v_i.1))
		(?, 1)    eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_11(v_i.0, v_i.1)) [ v_i.0 >= 8 ]
		(?, 1)    eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_8(v_i.0, v_i.1)) [ v_i.0 < 8 ]
		(2, 1)    eval_printKeyHash_4(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(0, v_i.1))
		(2, 1)    eval_printKeyHash_3(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_4(v_i.0, v_i.1))
		(2, 1)    eval_printKeyHash_2(v_i.0, v_i.1) -> Com_2(eval_LANG_start(v_i.0, v_i.1), eval_printKeyHash_3(v_i.0, v_i.1))
		(1, 1)    eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(1, 1)    eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(1, 1)    eval_printKeyHash_start(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb0_in(v_i.0, v_i.1))
	start location:	eval_printKeyHash_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_printKeyHash_20) = 1
	Pol(eval_printKeyHash_stop) = 0
	Pol(eval_printKeyHash_19) = 2
	Pol(eval__IO_putc_start) = 0
	Pol(eval_printKeyHash_17) = 3
	Pol(eval_printKeyHash_bb4_in) = 3
	Pol(eval_printKeyHash_16) = 3
	Pol(eval_fprintf_start) = 0
	Pol(eval_printKeyHash_12) = 4
	Pol(eval_printKeyHash_11) = 5
	Pol(eval_printKeyHash_9) = 6
	Pol(eval_printKeyHash_bb1_in) = 6
	Pol(eval_printKeyHash_8) = 6
	Pol(eval_printKeyHash_4) = 6
	Pol(eval_printKeyHash_3) = 6
	Pol(eval_printKeyHash_2) = 6
	Pol(eval_LANG_start) = 0
	Pol(eval_printKeyHash_bb0_in) = 6
	Pol(eval_printKeyHash_start) = 6
orients all transitions weakly and the transitions
	eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_19(v_i.0, v_i.1)) [ v_i.1 >= 16 ]
	eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_11(v_i.0, v_i.1)) [ v_i.0 >= 8 ]
	eval_printKeyHash_20(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_stop(v_i.0, v_i.1))
	eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1))
	eval_printKeyHash_12(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, 8))
	eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1))
strictly and produces the following problem:
4:	T:
		(6, 1)    eval_printKeyHash_20(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_stop(v_i.0, v_i.1))
		(6, 1)    eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_17(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, v_i.1 + 1))
		(?, 1)    eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1))
		(6, 1)    eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_19(v_i.0, v_i.1)) [ v_i.1 >= 16 ]
		(?, 1)    eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_16(v_i.0, v_i.1)) [ v_i.1 < 16 ]
		(6, 1)    eval_printKeyHash_12(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, 8))
		(6, 1)    eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1))
		(?, 1)    eval_printKeyHash_9(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(v_i.0 + 1, v_i.1))
		(?, 1)    eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1))
		(6, 1)    eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_11(v_i.0, v_i.1)) [ v_i.0 >= 8 ]
		(?, 1)    eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_8(v_i.0, v_i.1)) [ v_i.0 < 8 ]
		(2, 1)    eval_printKeyHash_4(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(0, v_i.1))
		(2, 1)    eval_printKeyHash_3(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_4(v_i.0, v_i.1))
		(2, 1)    eval_printKeyHash_2(v_i.0, v_i.1) -> Com_2(eval_LANG_start(v_i.0, v_i.1), eval_printKeyHash_3(v_i.0, v_i.1))
		(1, 1)    eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(1, 1)    eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(1, 1)    eval_printKeyHash_start(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb0_in(v_i.0, v_i.1))
	start location:	eval_printKeyHash_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_printKeyHash_11: X_1 - 8 >= 0
  For symbol eval_printKeyHash_12: X_1 - 8 >= 0
  For symbol eval_printKeyHash_16: -X_2 + 15 >= 0 /\ X_1 - X_2 + 7 >= 0 /\ X_2 - 8 >= 0 /\ X_1 + X_2 - 16 >= 0 /\ X_1 - 8 >= 0
  For symbol eval_printKeyHash_17: -X_2 + 15 >= 0 /\ X_1 - X_2 + 7 >= 0 /\ X_2 - 8 >= 0 /\ X_1 + X_2 - 16 >= 0 /\ X_1 - 8 >= 0
  For symbol eval_printKeyHash_19: X_2 - 16 >= 0 /\ X_1 + X_2 - 24 >= 0 /\ X_1 - 8 >= 0
  For symbol eval_printKeyHash_20: X_2 - 16 >= 0 /\ X_1 + X_2 - 24 >= 0 /\ X_1 - 8 >= 0
  For symbol eval_printKeyHash_8: -X_1 + 7 >= 0 /\ X_1 >= 0
  For symbol eval_printKeyHash_9: -X_1 + 7 >= 0 /\ X_1 >= 0
  For symbol eval_printKeyHash_bb1_in: X_1 >= 0
  For symbol eval_printKeyHash_bb4_in: X_2 - 8 >= 0 /\ X_1 + X_2 - 16 >= 0 /\ X_1 - 8 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_printKeyHash_start(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb0_in(v_i.0, v_i.1))
		(1, 1)    eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(1, 1)    eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(2, 1)    eval_printKeyHash_2(v_i.0, v_i.1) -> Com_2(eval_LANG_start(v_i.0, v_i.1), eval_printKeyHash_3(v_i.0, v_i.1))
		(2, 1)    eval_printKeyHash_3(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_4(v_i.0, v_i.1))
		(2, 1)    eval_printKeyHash_4(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(0, v_i.1))
		(?, 1)    eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_8(v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < 8 ]
		(6, 1)    eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_11(v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= 8 ]
		(?, 1)    eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1)) [ -v_i.0 + 7 >= 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_printKeyHash_9(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(v_i.0 + 1, v_i.1)) [ -v_i.0 + 7 >= 0 /\ v_i.0 >= 0 ]
		(6, 1)    eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1)) [ v_i.0 - 8 >= 0 ]
		(6, 1)    eval_printKeyHash_12(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, 8)) [ v_i.0 - 8 >= 0 ]
		(?, 1)    eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_16(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 /\ v_i.1 < 16 ]
		(6, 1)    eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_19(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 /\ v_i.1 >= 16 ]
		(?, 1)    eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1)) [ -v_i.1 + 15 >= 0 /\ v_i.0 - v_i.1 + 7 >= 0 /\ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 ]
		(?, 1)    eval_printKeyHash_17(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, v_i.1 + 1)) [ -v_i.1 + 15 >= 0 /\ v_i.0 - v_i.1 + 7 >= 0 /\ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 ]
		(6, 1)    eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\ v_i.0 + v_i.1 - 24 >= 0 /\ v_i.0 - 8 >= 0 ]
		(6, 1)    eval_printKeyHash_20(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_stop(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\ v_i.0 + v_i.1 - 24 >= 0 /\ v_i.0 - 8 >= 0 ]
	start location:	eval_printKeyHash_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_printKeyHash_bb4_in) = 33*V_1 - 17*V_2 + 8
	Pol(eval_printKeyHash_16) = 33*V_1 - 17*V_2
	Pol(eval_printKeyHash_bb1_in) = -3*V_1 + 24
	Pol(eval_printKeyHash_8) = -3*V_1 + 23
	Pol(eval_printKeyHash_9) = -3*V_1 + 22
	Pol(eval_fprintf_start) = 0
	Pol(eval_printKeyHash_17) = 33*V_1 - 17*V_2 - 1
and size complexities
	S("eval_printKeyHash_20(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_stop(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\\ v_i.0 + v_i.1 - 24 >= 0 /\\ v_i.0 - 8 >= 0 ]", 0-0) = 8
	S("eval_printKeyHash_20(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_stop(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\\ v_i.0 + v_i.1 - 24 >= 0 /\\ v_i.0 - 8 >= 0 ]", 0-1) = 16
	S("eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\\ v_i.0 + v_i.1 - 24 >= 0 /\\ v_i.0 - 8 >= 0 ]", 0-0) = 8
	S("eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\\ v_i.0 + v_i.1 - 24 >= 0 /\\ v_i.0 - 8 >= 0 ]", 0-1) = 16
	S("eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\\ v_i.0 + v_i.1 - 24 >= 0 /\\ v_i.0 - 8 >= 0 ]", 1-0) = 8
	S("eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\\ v_i.0 + v_i.1 - 24 >= 0 /\\ v_i.0 - 8 >= 0 ]", 1-1) = 16
	S("eval_printKeyHash_17(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, v_i.1 + 1)) [ -v_i.1 + 15 >= 0 /\\ v_i.0 - v_i.1 + 7 >= 0 /\\ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 ]", 0-0) = 8
	S("eval_printKeyHash_17(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, v_i.1 + 1)) [ -v_i.1 + 15 >= 0 /\\ v_i.0 - v_i.1 + 7 >= 0 /\\ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 ]", 0-1) = 16
	S("eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1)) [ -v_i.1 + 15 >= 0 /\\ v_i.0 - v_i.1 + 7 >= 0 /\\ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 ]", 0-0) = 8
	S("eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1)) [ -v_i.1 + 15 >= 0 /\\ v_i.0 - v_i.1 + 7 >= 0 /\\ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 ]", 0-1) = 15
	S("eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1)) [ -v_i.1 + 15 >= 0 /\\ v_i.0 - v_i.1 + 7 >= 0 /\\ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 ]", 1-0) = 8
	S("eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1)) [ -v_i.1 + 15 >= 0 /\\ v_i.0 - v_i.1 + 7 >= 0 /\\ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 ]", 1-1) = 15
	S("eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_19(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 /\\ v_i.1 >= 16 ]", 0-0) = 8
	S("eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_19(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 /\\ v_i.1 >= 16 ]", 0-1) = 16
	S("eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_16(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 /\\ v_i.1 < 16 ]", 0-0) = 8
	S("eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_16(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\\ v_i.0 + v_i.1 - 16 >= 0 /\\ v_i.0 - 8 >= 0 /\\ v_i.1 < 16 ]", 0-1) = 15
	S("eval_printKeyHash_12(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, 8)) [ v_i.0 - 8 >= 0 ]", 0-0) = 8
	S("eval_printKeyHash_12(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, 8)) [ v_i.0 - 8 >= 0 ]", 0-1) = 8
	S("eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1)) [ v_i.0 - 8 >= 0 ]", 0-0) = 8
	S("eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1)) [ v_i.0 - 8 >= 0 ]", 0-1) = v_i.1
	S("eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1)) [ v_i.0 - 8 >= 0 ]", 1-0) = 8
	S("eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1)) [ v_i.0 - 8 >= 0 ]", 1-1) = v_i.1
	S("eval_printKeyHash_9(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(v_i.0 + 1, v_i.1)) [ -v_i.0 + 7 >= 0 /\\ v_i.0 >= 0 ]", 0-0) = 8
	S("eval_printKeyHash_9(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(v_i.0 + 1, v_i.1)) [ -v_i.0 + 7 >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_i.1
	S("eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1)) [ -v_i.0 + 7 >= 0 /\\ v_i.0 >= 0 ]", 0-0) = 7
	S("eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1)) [ -v_i.0 + 7 >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_i.1
	S("eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1)) [ -v_i.0 + 7 >= 0 /\\ v_i.0 >= 0 ]", 1-0) = 7
	S("eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1)) [ -v_i.0 + 7 >= 0 /\\ v_i.0 >= 0 ]", 1-1) = v_i.1
	S("eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_11(v_i.0, v_i.1)) [ v_i.0 >= 0 /\\ v_i.0 >= 8 ]", 0-0) = 8
	S("eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_11(v_i.0, v_i.1)) [ v_i.0 >= 0 /\\ v_i.0 >= 8 ]", 0-1) = v_i.1
	S("eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_8(v_i.0, v_i.1)) [ v_i.0 >= 0 /\\ v_i.0 < 8 ]", 0-0) = 7
	S("eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_8(v_i.0, v_i.1)) [ v_i.0 >= 0 /\\ v_i.0 < 8 ]", 0-1) = v_i.1
	S("eval_printKeyHash_4(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(0, v_i.1))", 0-0) = 0
	S("eval_printKeyHash_4(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(0, v_i.1))", 0-1) = v_i.1
	S("eval_printKeyHash_3(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_4(v_i.0, v_i.1))", 0-0) = v_i.0
	S("eval_printKeyHash_3(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_4(v_i.0, v_i.1))", 0-1) = v_i.1
	S("eval_printKeyHash_3(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_4(v_i.0, v_i.1))", 1-0) = v_i.0
	S("eval_printKeyHash_3(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_4(v_i.0, v_i.1))", 1-1) = v_i.1
	S("eval_printKeyHash_2(v_i.0, v_i.1) -> Com_2(eval_LANG_start(v_i.0, v_i.1), eval_printKeyHash_3(v_i.0, v_i.1))", 0-0) = v_i.0
	S("eval_printKeyHash_2(v_i.0, v_i.1) -> Com_2(eval_LANG_start(v_i.0, v_i.1), eval_printKeyHash_3(v_i.0, v_i.1))", 0-1) = v_i.1
	S("eval_printKeyHash_2(v_i.0, v_i.1) -> Com_2(eval_LANG_start(v_i.0, v_i.1), eval_printKeyHash_3(v_i.0, v_i.1))", 1-0) = v_i.0
	S("eval_printKeyHash_2(v_i.0, v_i.1) -> Com_2(eval_LANG_start(v_i.0, v_i.1), eval_printKeyHash_3(v_i.0, v_i.1))", 1-1) = v_i.1
	S("eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))", 0-0) = v_i.0
	S("eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))", 0-1) = v_i.1
	S("eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))", 0-0) = v_i.0
	S("eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))", 0-1) = v_i.1
	S("eval_printKeyHash_start(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb0_in(v_i.0, v_i.1))", 0-0) = v_i.0
	S("eval_printKeyHash_start(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb0_in(v_i.0, v_i.1))", 0-1) = v_i.1
orients the transitions
	eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_16(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 /\ v_i.1 < 16 ]
	eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_8(v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < 8 ]
	eval_printKeyHash_9(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(v_i.0 + 1, v_i.1)) [ -v_i.0 + 7 >= 0 /\ v_i.0 >= 0 ]
	eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1)) [ -v_i.0 + 7 >= 0 /\ v_i.0 >= 0 ]
	eval_printKeyHash_17(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, v_i.1 + 1)) [ -v_i.1 + 15 >= 0 /\ v_i.0 - v_i.1 + 7 >= 0 /\ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 ]
	eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1)) [ -v_i.1 + 15 >= 0 /\ v_i.0 - v_i.1 + 7 >= 0 /\ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 ]
weakly and the transitions
	eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_16(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 /\ v_i.1 < 16 ]
	eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_8(v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < 8 ]
	eval_printKeyHash_9(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(v_i.0 + 1, v_i.1)) [ -v_i.0 + 7 >= 0 /\ v_i.0 >= 0 ]
	eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1)) [ -v_i.0 + 7 >= 0 /\ v_i.0 >= 0 ]
	eval_printKeyHash_17(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, v_i.1 + 1)) [ -v_i.1 + 15 >= 0 /\ v_i.0 - v_i.1 + 7 >= 0 /\ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 ]
	eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1)) [ -v_i.1 + 15 >= 0 /\ v_i.0 - v_i.1 + 7 >= 0 /\ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 ]
strictly and produces the following problem:
6:	T:
		(1, 1)       eval_printKeyHash_start(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb0_in(v_i.0, v_i.1))
		(1, 1)       eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(1, 1)       eval_printKeyHash_bb0_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_2(v_i.0, v_i.1))
		(2, 1)       eval_printKeyHash_2(v_i.0, v_i.1) -> Com_2(eval_LANG_start(v_i.0, v_i.1), eval_printKeyHash_3(v_i.0, v_i.1))
		(2, 1)       eval_printKeyHash_3(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_4(v_i.0, v_i.1))
		(2, 1)       eval_printKeyHash_4(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(0, v_i.1))
		(2496, 1)    eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_8(v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < 8 ]
		(6, 1)       eval_printKeyHash_bb1_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_11(v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= 8 ]
		(2496, 1)    eval_printKeyHash_8(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_9(v_i.0, v_i.1)) [ -v_i.0 + 7 >= 0 /\ v_i.0 >= 0 ]
		(2496, 1)    eval_printKeyHash_9(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb1_in(v_i.0 + 1, v_i.1)) [ -v_i.0 + 7 >= 0 /\ v_i.0 >= 0 ]
		(6, 1)       eval_printKeyHash_11(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_12(v_i.0, v_i.1)) [ v_i.0 - 8 >= 0 ]
		(6, 1)       eval_printKeyHash_12(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, 8)) [ v_i.0 - 8 >= 0 ]
		(2496, 1)    eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_16(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 /\ v_i.1 < 16 ]
		(6, 1)       eval_printKeyHash_bb4_in(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_19(v_i.0, v_i.1)) [ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 /\ v_i.1 >= 16 ]
		(2496, 1)    eval_printKeyHash_16(v_i.0, v_i.1) -> Com_2(eval_fprintf_start(v_i.0, v_i.1), eval_printKeyHash_17(v_i.0, v_i.1)) [ -v_i.1 + 15 >= 0 /\ v_i.0 - v_i.1 + 7 >= 0 /\ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 ]
		(2496, 1)    eval_printKeyHash_17(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_bb4_in(v_i.0, v_i.1 + 1)) [ -v_i.1 + 15 >= 0 /\ v_i.0 - v_i.1 + 7 >= 0 /\ v_i.1 - 8 >= 0 /\ v_i.0 + v_i.1 - 16 >= 0 /\ v_i.0 - 8 >= 0 ]
		(6, 1)       eval_printKeyHash_19(v_i.0, v_i.1) -> Com_2(eval__IO_putc_start(v_i.0, v_i.1), eval_printKeyHash_20(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\ v_i.0 + v_i.1 - 24 >= 0 /\ v_i.0 - 8 >= 0 ]
		(6, 1)       eval_printKeyHash_20(v_i.0, v_i.1) -> Com_1(eval_printKeyHash_stop(v_i.0, v_i.1)) [ v_i.1 - 16 >= 0 /\ v_i.0 + v_i.1 - 24 >= 0 /\ v_i.0 - 8 >= 0 ]
	start location:	eval_printKeyHash_start
	leaf cost:	0

Complexity upper bound 15021

Time: 0.189 sec (SMT: 0.161 sec)
