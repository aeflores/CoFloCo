MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_id3_utf8_deserialize_start(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_bb0_in(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_2(v_15, v_17, v_length + 1, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_2(v_15, v_17, v_3, v_6, v_length) -> Com_2(eval_malloc_start(v_15, v_17, v_3, v_6, v_length), eval_id3_utf8_deserialize_3(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_3(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_3(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_15, v_17, v_3, nondef.0, v_length))
		(?, 1)    eval_id3_utf8_deserialize_bb2_in(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_9(v_15, v_17, v_3, v_6, v_length)) [ v_6 - nondef.1 > 0 ]
		(?, 1)    eval_id3_utf8_deserialize_bb2_in(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_15, v_17, v_3, v_6, v_length)) [ v_6 - nondef.1 <= 0 ]
		(?, 1)    eval_id3_utf8_deserialize_9(v_15, v_17, v_3, v_6, v_length) -> Com_2(eval_id3_utf8_get_start(v_15, v_17, v_3, v_6, v_length), eval_id3_utf8_deserialize_10(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_10(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_10(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_.critedge_in(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_14(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_14(v_15, v_17, v_3, v_6, v_length) -> Com_2(eval_id3_utf8_length_start(v_15, v_17, v_3, v_6, v_length), eval_id3_utf8_deserialize_15(nondef.3, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_15(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_17(v_15, 8*v_15 + 8, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_17(v_15, v_17, v_3, v_6, v_length) -> Com_2(eval_malloc_start(v_15, v_17, v_3, v_6, v_length), eval_id3_utf8_deserialize_18(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_18(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_19(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_18(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_19(v_15, v_17, v_3, v_6, v_length) -> Com_2(eval_id3_utf8_decode_start(v_15, v_17, v_3, v_6, v_length), eval_id3_utf8_deserialize_20(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_20(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_bb6_in(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_21(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_21(v_15, v_17, v_3, v_6, v_length) -> Com_2(eval_free_start(v_15, v_17, v_3, v_6, v_length), eval_id3_utf8_deserialize_22(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_22(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_15, v_17, v_3, v_6, v_length))
		(?, 1)    eval_id3_utf8_deserialize_bb7_in(v_15, v_17, v_3, v_6, v_length) -> Com_1(eval_id3_utf8_deserialize_stop(v_15, v_17, v_3, v_6, v_length))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_6].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_21(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(?, 1)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_1(eval_id3_utf8_deserialize_21(v_6))
		(?, 1)    eval_id3_utf8_deserialize_20(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(?, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_19(v_6))
		(?, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(?, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(?, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(?, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(?, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(?, 1)    eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(?, 1)    eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(?, 1)    eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)    eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_21(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(?, 1)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_1(eval_id3_utf8_deserialize_21(v_6))
		(?, 1)    eval_id3_utf8_deserialize_20(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(?, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_19(v_6))
		(?, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(?, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(?, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(?, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(?, 1)    eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(?, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 1)    eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)    eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)    eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)    eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)    eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_id3_utf8_deserialize_bb7_in) = 1
	Pol(eval_id3_utf8_deserialize_stop) = 0
	Pol(eval_id3_utf8_deserialize_22) = 2
	Pol(eval_id3_utf8_deserialize_21) = 3
	Pol(eval_free_start) = 0
	Pol(eval_id3_utf8_deserialize_bb6_in) = 4
	Pol(eval_id3_utf8_deserialize_20) = 5
	Pol(eval_id3_utf8_deserialize_19) = 6
	Pol(eval_id3_utf8_decode_start) = 0
	Pol(eval_id3_utf8_deserialize_18) = 7
	Pol(eval_id3_utf8_deserialize_17) = 8
	Pol(eval_malloc_start) = 0
	Pol(eval_id3_utf8_deserialize_15) = 9
	Pol(eval_id3_utf8_deserialize_14) = 10
	Pol(eval_id3_utf8_length_start) = 0
	Pol(eval_id3_utf8_deserialize_.critedge_in) = 11
	Pol(eval_id3_utf8_deserialize_10) = 12
	Pol(eval_id3_utf8_deserialize_bb2_in) = 12
	Pol(eval_id3_utf8_deserialize_9) = 12
	Pol(eval_id3_utf8_get_start) = 0
	Pol(eval_id3_utf8_deserialize_3) = 12
	Pol(eval_id3_utf8_deserialize_2) = 12
	Pol(eval_id3_utf8_deserialize_bb0_in) = 12
	Pol(eval_id3_utf8_deserialize_start) = 12
orients all transitions weakly and the transitions
	eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
	eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_1(eval_id3_utf8_deserialize_21(v_6))
	eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
	eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
	eval_id3_utf8_deserialize_21(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
	eval_id3_utf8_deserialize_20(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
	eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
	eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
	eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_19(v_6))
	eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
	eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
	eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
	eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
	eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
strictly and produces the following problem:
4:	T:
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 1)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_21(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_1(eval_id3_utf8_deserialize_21(v_6))
		(12, 1)    eval_id3_utf8_deserialize_20(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_19(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6)) with all transitions in problem 4, the following new transition is obtained:
	eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
We thus obtain the following problem:
5:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 1)    eval_id3_utf8_deserialize_21(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_1(eval_id3_utf8_deserialize_21(v_6))
		(12, 1)    eval_id3_utf8_deserialize_20(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_19(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_1(eval_id3_utf8_deserialize_21(v_6)) with all transitions in problem 5, the following new transition is obtained:
	eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
We thus obtain the following problem:
6:	T:
		(12, 2)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 1)    eval_id3_utf8_deserialize_21(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 1)    eval_id3_utf8_deserialize_20(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_19(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_id3_utf8_deserialize_21(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
We thus obtain the following problem:
7:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 1)    eval_id3_utf8_deserialize_20(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_19(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_20(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6)) with all transitions in problem 7, the following new transition is obtained:
	eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
We thus obtain the following problem:
8:	T:
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 1)    eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_19(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_19(v_6)) with all transitions in problem 8, the following new transition is obtained:
	eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
We thus obtain the following problem:
9:	T:
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 1)    eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_id3_utf8_deserialize_19(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
We thus obtain the following problem:
10:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 1)    eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_18(v_6) -> Com_1(eval_id3_utf8_deserialize_bb6_in(v_6)) with all transitions in problem 10, the following new transition is obtained:
	eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
We thus obtain the following problem:
11:	T:
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_id3_utf8_deserialize_bb6_in(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
We thus obtain the following problem:
12:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 1)    eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_15(v_6) -> Com_1(eval_id3_utf8_deserialize_17(v_6)) with all transitions in problem 12, the following new transition is obtained:
	eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
We thus obtain the following problem:
13:	T:
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 1)    eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_id3_utf8_deserialize_17(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
We thus obtain the following problem:
14:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) with all transitions in problem 14, the following new transition is obtained:
	eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
We thus obtain the following problem:
15:	T:
		(12, 2)    eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6)) with all transitions in problem 15, the following new transition is obtained:
	eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
We thus obtain the following problem:
16:	T:
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_1(eval_id3_utf8_deserialize_14(v_6)) with all transitions in problem 16, the following new transition is obtained:
	eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
We thus obtain the following problem:
17:	T:
		(12, 2)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_id3_utf8_deserialize_14(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
We thus obtain the following problem:
18:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 2)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 1)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_9(v_6)) [ v_6 - nondef.1 > 0 ] with all transitions in problem 18, the following new transition is obtained:
	eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
We thus obtain the following problem:
19:	T:
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(?, 1)     eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
		(12, 2)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_id3_utf8_deserialize_9(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6))
We thus obtain the following problem:
20:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 2)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 1)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_1(eval_id3_utf8_deserialize_.critedge_in(v_6)) [ v_6 - nondef.1 <= 0 ] with all transitions in problem 20, the following new transition is obtained:
	eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
We thus obtain the following problem:
21:	T:
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 2)    eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 21:
	eval_id3_utf8_deserialize_.critedge_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
We thus obtain the following problem:
22:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb7_in(v_6)) with all transitions in problem 22, the following new transition is obtained:
	eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
We thus obtain the following problem:
23:	T:
		(1, 2)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 1)    eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 23:
	eval_id3_utf8_deserialize_bb7_in(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
We thus obtain the following problem:
24:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 2)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_1(eval_id3_utf8_deserialize_2(v_6)) with all transitions in problem 24, the following new transition is obtained:
	eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
We thus obtain the following problem:
25:	T:
		(1, 2)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 2)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 1)     eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 25:
	eval_id3_utf8_deserialize_2(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
We thus obtain the following problem:
26:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 2)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 2)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(1, 1)     eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_start(v_6) -> Com_1(eval_id3_utf8_deserialize_bb0_in(v_6)) with all transitions in problem 26, the following new transition is obtained:
	eval_id3_utf8_deserialize_start(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
We thus obtain the following problem:
27:	T:
		(1, 3)     eval_id3_utf8_deserialize_start(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 2)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 2)     eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 27:
	eval_id3_utf8_deserialize_bb0_in(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
We thus obtain the following problem:
28:	T:
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(?, 1)     eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 2)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 3)     eval_id3_utf8_deserialize_start(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

By chaining the transition eval_id3_utf8_deserialize_10(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(v_6)) with all transitions in problem 28, the following new transitions are obtained:
	eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
	eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
We thus obtain the following problem:
29:	T:
		(?, 4)     eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 3)     eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 2)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 3)     eval_id3_utf8_deserialize_start(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 29 produces the following problem:
30:	T:
		(?, 4)     eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 3)     eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 2)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 3)     eval_id3_utf8_deserialize_start(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_id3_utf8_deserialize_10) = 1
	Pol(eval_id3_utf8_length_start) = 0
	Pol(eval_id3_utf8_deserialize_15) = 0
	Pol(eval_id3_utf8_get_start) = 0
	Pol(eval_id3_utf8_deserialize_22) = 0
	Pol(eval_id3_utf8_deserialize_stop) = 0
	Pol(eval_id3_utf8_deserialize_20) = 0
	Pol(eval_free_start) = 0
	Pol(eval_id3_utf8_deserialize_18) = 0
	Pol(eval_id3_utf8_decode_start) = 0
	Pol(eval_malloc_start) = 0
	Pol(eval_id3_utf8_deserialize_bb2_in) = 1
	Pol(eval_id3_utf8_deserialize_3) = 1
	Pol(eval_id3_utf8_deserialize_start) = 1
orients all transitions weakly and the transition
	eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
strictly and produces the following problem:
31:	T:
		(1, 4)     eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(?, 3)     eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(12, 2)    eval_id3_utf8_deserialize_22(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(12, 3)    eval_id3_utf8_deserialize_20(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 3)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_free_start(v_6), eval_id3_utf8_deserialize_22(v_6))
		(12, 2)    eval_id3_utf8_deserialize_18(v_6) -> Com_2(eval_id3_utf8_decode_start(v_6), eval_id3_utf8_deserialize_20(v_6))
		(12, 2)    eval_id3_utf8_deserialize_15(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_18(v_6))
		(12, 3)    eval_id3_utf8_deserialize_10(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6))
		(12, 3)    eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_length_start(v_6), eval_id3_utf8_deserialize_15(v_6)) [ v_6 - nondef.1 <= 0 ]
		(1, 2)     eval_id3_utf8_deserialize_bb2_in(v_6) -> Com_2(eval_id3_utf8_get_start(v_6), eval_id3_utf8_deserialize_10(v_6)) [ v_6 - nondef.1 > 0 ]
		(1, 2)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_stop(v_6))
		(1, 1)     eval_id3_utf8_deserialize_3(v_6) -> Com_1(eval_id3_utf8_deserialize_bb2_in(nondef.0))
		(1, 3)     eval_id3_utf8_deserialize_start(v_6) -> Com_2(eval_malloc_start(v_6), eval_id3_utf8_deserialize_3(v_6))
	start location:	eval_id3_utf8_deserialize_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.929 sec (SMT: 0.739 sec)
