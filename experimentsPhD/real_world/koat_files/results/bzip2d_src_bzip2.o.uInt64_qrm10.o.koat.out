YES(?, 27)

Initial complexity problem:
1:	T:
		(1, 1)    eval_uInt64_qrm10_start(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0)
		(?, 1)    eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(7, 0)
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ 256*v_rem.0 + nondef.0 = 0 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ 256*v_rem.0 + nondef.0 = 0 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_stop(v_i.0, v_rem.0) [ v_i.0 < 0 ]
	start location:	eval_uInt64_qrm10_start
	leaf cost:	0

Testing for unsatisfiable constraints removes the following transitions from problem 1:
	eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
	eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
	eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ 256*v_rem.0 + nondef.0 = 0 ]
	eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
	eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ 256*v_rem.0 + nondef.0 = 0 ]
	eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
We thus obtain the following problem:
2:	T:
		(1, 1)    eval_uInt64_qrm10_start(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0)
		(?, 1)    eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(7, 0)
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_stop(v_i.0, v_rem.0) [ v_i.0 < 0 ]
	start location:	eval_uInt64_qrm10_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_uInt64_qrm10_start(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0)
		(?, 1)    eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(7, 0)
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
	start location:	eval_uInt64_qrm10_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(1, 1)    eval_uInt64_qrm10_start(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0)
		(1, 1)    eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(7, 0)
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
		(?, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
	start location:	eval_uInt64_qrm10_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_uInt64_qrm10_start) = 8
	Pol(eval_uInt64_qrm10_bb0_in) = 8
	Pol(eval_uInt64_qrm10_bb1_in) = V_1 + 1
orients all transitions weakly and the transitions
	eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
	eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
	eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 ]
strictly and produces the following problem:
5:	T:
		(1, 1)    eval_uInt64_qrm10_start(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0)
		(1, 1)    eval_uInt64_qrm10_bb0_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(7, 0)
		(8, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, 0) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 = 0 ]
		(8, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 > 0 /\ nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 >= 0 /\ 256*v_rem.0 + nondef.0 - 10*nondef.1 < 10 /\ nondef.2 >= 0 /\ nondef.2 < 10 ]
		(8, 1)    eval_uInt64_qrm10_bb1_in(v_i.0, v_rem.0) -> eval_uInt64_qrm10_bb1_in(v_i.0 - 1, nondef.2) [ v_i.0 >= 0 /\ 256*v_rem.0 + nondef.0 < 0 /\ nondef.1 <= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 >= 0 /\ -256*v_rem.0 - nondef.0 + 10*nondef.1 < 10 /\ nondef.2 <= 0 /\ nondef.2 > -10 ]
	start location:	eval_uInt64_qrm10_start
	leaf cost:	1

Complexity upper bound 27

Time: 0.129 sec (SMT: 0.121 sec)
