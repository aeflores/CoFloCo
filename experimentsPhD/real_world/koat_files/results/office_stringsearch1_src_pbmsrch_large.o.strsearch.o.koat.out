MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_strsearch_start(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb0_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb0_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, v_20, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_20, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_pos.0 < v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3))
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_15(v_'len, v_0, v_2, v_'len, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_20, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_15(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_20, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_20, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2))
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1))
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3))
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_pos.0 < v_3 ]
		(?, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2))
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1))
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3))
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_strsearch_bb9_in) = 1
	Pol(eval_strsearch_stop) = 0
	Pol(eval_strsearch_16) = 2
	Pol(eval_strsearch_bb1_in) = 2
	Pol(eval_strsearch_15) = 2
	Pol(eval_strncmp_start) = 0
	Pol(eval_strsearch_bb4_in) = 2
	Pol(eval_strsearch_bb2_in) = 2
	Pol(eval_strsearch_4) = 2
	Pol(eval_strsearch_3) = 2
	Pol(eval_strlen_start) = 0
	Pol(eval_strsearch_bb0_in) = 2
	Pol(eval_strsearch_start) = 2
orients all transitions weakly and the transitions
	eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_pos.0 >= v_3 ]
	eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
strictly and produces the following problem:
4:	T:
		(2, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2))
		(2, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2))
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1))
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3))
		(2, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_strsearch_15: X_4 - X_5 - 1 >= 0 /\ X_1 - X_3 - 1 >= 0 /\ -X_1 + X_3 + 1 >= 0
  For symbol eval_strsearch_16: X_4 - X_5 - 1 >= 0 /\ X_1 - X_3 - 1 >= 0 /\ -X_1 + X_3 + 1 >= 0
  For symbol eval_strsearch_3: X_1 - X_3 - 1 >= 0 /\ -X_1 + X_3 + 1 >= 0
  For symbol eval_strsearch_4: X_1 - X_3 - 1 >= 0 /\ -X_1 + X_3 + 1 >= 0
  For symbol eval_strsearch_bb1_in: X_1 - X_3 - 1 >= 0 /\ -X_1 + X_3 + 1 >= 0
  For symbol eval_strsearch_bb2_in: X_4 - X_5 - 1 >= 0 /\ X_1 - X_3 - 1 >= 0 /\ -X_1 + X_3 + 1 >= 0
  For symbol eval_strsearch_bb4_in: X_4 - X_5 - 1 >= 0 /\ X_1 - X_3 - 1 >= 0 /\ -X_1 + X_3 + 1 >= 0
  For symbol eval_strsearch_bb9_in: X_1 - X_3 - 1 >= 0 /\ -X_1 + X_3 + 1 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(2, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) with all transitions in problem 5, the following new transition is obtained:
	eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(2, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_strsearch_bb0_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 2)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
We thus obtain the following problem:
8:	T:
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 2)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 2)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_strsearch_15(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
We thus obtain the following problem:
10:	T:
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 2)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ] with all transitions in problem 10, the following new transition is obtained:
	eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
We thus obtain the following problem:
11:	T:
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 1)    eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 2)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_strsearch_bb9_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
We thus obtain the following problem:
12:	T:
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 2)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2))
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_3(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) with all transitions in problem 12, the following new transition is obtained:
	eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
We thus obtain the following problem:
13:	T:
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_strsearch_3(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, v_0, v_2, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
We thus obtain the following problem:
14:	T:
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ] with all transitions in problem 14, the following new transitions are obtained:
	eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
	eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 ]
We thus obtain the following problem:
15:	T:
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(?, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_strsearch_16) = 1
	Pol(eval_strsearch_stop) = V_1 - V_3 - 1
	Pol(eval_strsearch_bb2_in) = 1
	Pol(eval_strsearch_bb4_in) = 1
	Pol(eval_strncmp_start) = 0
	Pol(eval_strsearch_bb1_in) = V_1 - V_3
	Pol(eval_strsearch_4) = 1
	Pol(eval_strsearch_start) = 1
	Pol(eval_strlen_start) = 0
orients all transitions weakly and the transition
	eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
strictly and produces the following problem:
16:	T:
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(?, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 ] with all transitions in problem 16, the following new transitions are obtained:
	eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
	eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
We thus obtain the following problem:
17:	T:
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ] with all transitions in problem 17, the following new transitions are obtained:
	eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
	eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 ]
We thus obtain the following problem:
18:	T:
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(?, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 18 produces the following problem:
19:	T:
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(1, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_strsearch_bb4_in) = 1
	Pol(eval_strsearch_stop) = 0
	Pol(eval_strsearch_bb2_in) = 1
	Pol(eval_strsearch_16) = V_1 - V_3
	Pol(eval_strncmp_start) = -V_1 + V_3
	Pol(eval_strsearch_bb1_in) = 1
	Pol(eval_strsearch_4) = 1
	Pol(eval_strsearch_start) = 1
	Pol(eval_strlen_start) = 0
orients all transitions weakly and the transition
	eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
strictly and produces the following problem:
20:	T:
		(1, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(1, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 ] with all transitions in problem 20, the following new transitions are obtained:
	eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
	eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
We thus obtain the following problem:
21:	T:
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(1, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(1, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ] with all transitions in problem 21, the following new transitions are obtained:
	eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
	eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
We thus obtain the following problem:
22:	T:
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(1, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(1, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 22 produces the following problem:
23:	T:
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(1, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(1, 1)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

By chaining the transition eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 ] with all transitions in problem 23, the following new transitions are obtained:
	eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.0)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 /\ v_3 - v_pos.0 - 1 >= 0 ]
	eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, nondef.3)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 /\ v_3 - v_pos.0 - 1 >= 0 ]
We thus obtain the following problem:
24:	T:
		(1, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.0)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 /\ v_3 - v_pos.0 - 1 >= 0 ]
		(1, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, nondef.3)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 /\ v_3 - v_pos.0 - 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(1, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 1)    eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 24:
	eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.1)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
	eval_strsearch_bb2_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
We thus obtain the following problem:
25:	T:
		(1, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 >= v_3 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(?, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1 + 1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 < v_3 /\ v_3 - v_pos.1 - 2 >= 0 ]
		(1, 3)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.1 + 1, v_pos.1, v_shift.2, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 + 1 >= v_3 ]
		(2, 2)    eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1 + v_shift.2, v_shift.0, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, nondef.3)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(?, 3)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.1, v_pos.1, v_shift.2, v_shift.2, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.1 < v_3 /\ v_3 - v_pos.1 - 1 >= 0 ]
		(?, 2)    eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strncmp_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_16(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_3 - v_pos.0 - 1 >= 0 /\ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, nondef.3)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 /\ v_3 - v_pos.0 - 1 >= 0 ]
		(1, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb4_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.0, v_shift.0, v_shift.0, v_shift.0)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 < v_3 /\ v_3 - v_pos.0 - 1 >= 0 ]
		(2, 2)    eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_stop(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 /\ v_pos.0 >= v_3 ]
		(1, 1)    eval_strsearch_4(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_1(eval_strsearch_bb1_in(v_'len, v_0, v_2, v_3, v_2, v_pos.1, v_0, v_shift.1, v_shift.2)) [ v_'len - v_2 - 1 >= 0 /\ -v_'len + v_2 + 1 >= 0 ]
		(1, 3)    eval_strsearch_start(v_'len, v_0, v_2, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2) -> Com_2(eval_strlen_start(v_'len, nondef.0, v_'len - 1, v_3, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2), eval_strsearch_4(v_'len, nondef.0, v_'len - 1, nondef.1, v_pos.0, v_pos.1, v_shift.0, v_shift.1, v_shift.2)) [ 0 >= 0 ]
	start location:	eval_strsearch_start
	leaf cost:	0

Complexity upper bound ?

Time: 3.990 sec (SMT: 2.459 sec)
