MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb19_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb19_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 < 64 ]
		(?, 1)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2, v_bs)
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb19_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.4 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.4 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb19_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.4 < 8 ]
		(?, 1)    eval_find1span_bb19_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_stop(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 < 64 ]
		(?, 1)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2, v_bs)
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.4 >= 8 ]
	start location:	eval_find1span_start
	leaf cost:	5

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 < 64 ]
		(?, 1)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2, v_bs)
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.4 >= 8 ]
	start location:	eval_find1span_start
	leaf cost:	5

A polynomial rank function with
	Pol(eval_find1span_start) = 3
	Pol(eval_find1span_bb0_in) = 3
	Pol(eval_find1span_bb4_in) = 3
	Pol(eval_find1span_bb5_in) = 3
	Pol(eval_find1span_bb13_in) = 0
	Pol(eval_find1span_bb10_in) = 2
	Pol(eval_find1span_.critedge_in) = 1
orients all transitions weakly and the transitions
	eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs)
	eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 < 64 ]
	eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 >= 64 ]
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2, v_bs)
strictly and produces the following problem:
4:	T:
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs)
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs)
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2, v_bs)
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.4 >= 8 ]
	start location:	eval_find1span_start
	leaf cost:	5

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_find1span_.critedge_in: X_3 - X_4 >= 0 /\ X_2 - X_4 >= 0 /\ X_2 - X_3 >= 0
  For symbol eval_find1span_bb10_in: X_3 - X_4 >= 0 /\ X_2 - X_4 >= 0 /\ X_2 - X_3 >= 0
  For symbol eval_find1span_bb13_in: X_2 - X_5 >= 0
  For symbol eval_find1span_bb5_in: X_2 - X_3 >= 0


This yielded the following problem:
5:	T:
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 8, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 ]
We thus obtain the following problem:
6:	T:
		(3, 2)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 8, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 8, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 ] with all transitions in problem 6, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 16, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 ]
We thus obtain the following problem:
7:	T:
		(3, 3)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 16, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 16, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 ] with all transitions in problem 7, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 24, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 ]
We thus obtain the following problem:
8:	T:
		(3, 4)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 24, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 24, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 ] with all transitions in problem 8, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 32, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 ]
We thus obtain the following problem:
9:	T:
		(3, 5)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 32, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 32, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 ] with all transitions in problem 9, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 40, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 ]
We thus obtain the following problem:
10:	T:
		(3, 6)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 40, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 40, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 ] with all transitions in problem 10, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 48, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 ]
We thus obtain the following problem:
11:	T:
		(3, 7)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 48, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 48, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 ] with all transitions in problem 11, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 56, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 ]
We thus obtain the following problem:
12:	T:
		(3, 8)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 56, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 56, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 ] with all transitions in problem 12, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 64, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 ]
We thus obtain the following problem:
13:	T:
		(3, 9)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 64, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 ]
		(?, 1)    eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)    eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)    eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)    eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)    eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 64, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 ] with all transitions in problem 13, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 72, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 ]
We thus obtain the following problem:
14:	T:
		(3, 10)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 72, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 ]
		(?, 1)     eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 72, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 ] with all transitions in problem 14, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 80, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 ]
We thus obtain the following problem:
15:	T:
		(3, 11)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 80, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 ]
		(?, 1)     eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 80, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 ] with all transitions in problem 15, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 88, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 ]
We thus obtain the following problem:
16:	T:
		(3, 12)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 88, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 ]
		(?, 1)     eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 88, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 ] with all transitions in problem 16, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 96, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 ]
We thus obtain the following problem:
17:	T:
		(3, 13)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 96, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 ]
		(?, 1)     eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 96, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 ] with all transitions in problem 17, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 104, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 /\ v_bits.0 - v_bits.2 + 96 >= 0 /\ v_bits.2 - 96 >= 8 ]
We thus obtain the following problem:
18:	T:
		(3, 14)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 104, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 /\ v_bits.0 - v_bits.2 + 96 >= 0 /\ v_bits.2 - 96 >= 8 ]
		(?, 1)     eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 104, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 /\ v_bits.0 - v_bits.2 + 96 >= 0 /\ v_bits.2 - 96 >= 8 ] with all transitions in problem 18, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 112, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 /\ v_bits.0 - v_bits.2 + 96 >= 0 /\ v_bits.2 - 96 >= 8 /\ v_bits.0 - v_bits.2 + 104 >= 0 /\ v_bits.2 - 104 >= 8 ]
We thus obtain the following problem:
19:	T:
		(3, 15)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 112, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 /\ v_bits.0 - v_bits.2 + 96 >= 0 /\ v_bits.2 - 96 >= 8 /\ v_bits.0 - v_bits.2 + 104 >= 0 /\ v_bits.2 - 104 >= 8 ]
		(?, 1)     eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

By chaining the transition eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 112, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 /\ v_bits.0 - v_bits.2 + 96 >= 0 /\ v_bits.2 - 96 >= 8 /\ v_bits.0 - v_bits.2 + 104 >= 0 /\ v_bits.2 - 104 >= 8 ] with all transitions in problem 19, the following new transition is obtained:
	eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 120, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 /\ v_bits.0 - v_bits.2 + 96 >= 0 /\ v_bits.2 - 96 >= 8 /\ v_bits.0 - v_bits.2 + 104 >= 0 /\ v_bits.2 - 104 >= 8 /\ v_bits.0 - v_bits.2 + 112 >= 0 /\ v_bits.2 - 112 >= 8 ]
We thus obtain the following problem:
20:	T:
		(3, 16)    eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.2 - 120, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 8 /\ v_bits.0 - v_bits.2 + 8 >= 0 /\ v_bits.2 - 8 >= 8 /\ v_bits.0 - v_bits.2 + 16 >= 0 /\ v_bits.2 - 16 >= 8 /\ v_bits.0 - v_bits.2 + 24 >= 0 /\ v_bits.2 - 24 >= 8 /\ v_bits.0 - v_bits.2 + 32 >= 0 /\ v_bits.2 - 32 >= 8 /\ v_bits.0 - v_bits.2 + 40 >= 0 /\ v_bits.2 - 40 >= 8 /\ v_bits.0 - v_bits.2 + 48 >= 0 /\ v_bits.2 - 48 >= 8 /\ v_bits.0 - v_bits.2 + 56 >= 0 /\ v_bits.2 - 56 >= 8 /\ v_bits.0 - v_bits.2 + 64 >= 0 /\ v_bits.2 - 64 >= 8 /\ v_bits.0 - v_bits.2 + 72 >= 0 /\ v_bits.2 - 72 >= 8 /\ v_bits.0 - v_bits.2 + 80 >= 0 /\ v_bits.2 - 80 >= 8 /\ v_bits.0 - v_bits.2 + 88 >= 0 /\ v_bits.2 - 88 >= 8 /\ v_bits.0 - v_bits.2 + 96 >= 0 /\ v_bits.2 - 96 >= 8 /\ v_bits.0 - v_bits.2 + 104 >= 0 /\ v_bits.2 - 104 >= 8 /\ v_bits.0 - v_bits.2 + 112 >= 0 /\ v_bits.2 - 112 >= 8 ]
		(?, 1)     eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4 - 8, v_bs) [ v_bits.0 - v_bits.4 >= 0 /\ v_bits.4 >= 8 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 < 64 ]
		(3, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_.critedge_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(?, 1)     eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.2 - 64, v_bits.4, v_bs) [ v_bits.1 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.2 >= 0 /\ v_bits.0 - v_bits.1 >= 0 /\ v_bits.2 >= 64 ]
		(3, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb10_in(v_be, v_bits.0, v_bits.1, v_bits.1, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(?, 1)     eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.1 - 8, v_bits.2, v_bits.4, v_bs) [ v_bits.0 - v_bits.1 >= 0 ]
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb13_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.0, v_bs)
		(4, 1)     eval_find1span_bb4_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb5_in(v_be, v_bits.0, v_bits.0, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs - nondef.5, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, v_be - v_bs + nondef.1 - 8, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb4_in(v_be, 0, v_bits.1, v_bits.2, v_bits.4, v_bs)
		(1, 1)     eval_find1span_start(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs) -> eval_find1span_bb0_in(v_be, v_bits.0, v_bits.1, v_bits.2, v_bits.4, v_bs)
	start location:	eval_find1span_start
	leaf cost:	5

Complexity upper bound ?

Time: 1.303 sec (SMT: 0.895 sec)
