YES(?, 2*v_numboxes + 5)

Initial complexity problem:
1:	T:
		(1, 1)    eval_find_biggest_volume_start(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes)
		(?, 1)    eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(0, v_numboxes)
		(?, 1)    eval_find_biggest_volume_bb1_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) [ v_i.0 < v_numboxes ]
		(?, 1)    eval_find_biggest_volume_bb1_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_stop(v_i.0, v_numboxes) [ v_i.0 >= v_numboxes ]
		(?, 1)    eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(v_i.0 + 1, v_numboxes)
	start location:	eval_find_biggest_volume_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_find_biggest_volume_start(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes)
		(?, 1)    eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(0, v_numboxes)
		(?, 1)    eval_find_biggest_volume_bb1_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) [ v_i.0 < v_numboxes ]
		(?, 1)    eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(v_i.0 + 1, v_numboxes)
	start location:	eval_find_biggest_volume_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_find_biggest_volume_start(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes)
		(1, 1)    eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(0, v_numboxes)
		(?, 1)    eval_find_biggest_volume_bb1_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) [ v_i.0 < v_numboxes ]
		(?, 1)    eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(v_i.0 + 1, v_numboxes)
	start location:	eval_find_biggest_volume_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_find_biggest_volume_start) = V_2 + 1
	Pol(eval_find_biggest_volume_bb0_in) = V_2 + 1
	Pol(eval_find_biggest_volume_bb1_in) = -V_1 + V_2 + 1
	Pol(eval_find_biggest_volume_bb4_in) = -V_1 + V_2
orients all transitions weakly and the transition
	eval_find_biggest_volume_bb1_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) [ v_i.0 < v_numboxes ]
strictly and produces the following problem:
4:	T:
		(1, 1)                 eval_find_biggest_volume_start(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes)
		(1, 1)                 eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(0, v_numboxes)
		(v_numboxes + 1, 1)    eval_find_biggest_volume_bb1_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) [ v_i.0 < v_numboxes ]
		(?, 1)                 eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(v_i.0 + 1, v_numboxes)
	start location:	eval_find_biggest_volume_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 4 produces the following problem:
5:	T:
		(1, 1)                 eval_find_biggest_volume_start(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes)
		(1, 1)                 eval_find_biggest_volume_bb0_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(0, v_numboxes)
		(v_numboxes + 1, 1)    eval_find_biggest_volume_bb1_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) [ v_i.0 < v_numboxes ]
		(v_numboxes + 1, 1)    eval_find_biggest_volume_bb4_in(v_i.0, v_numboxes) -> eval_find_biggest_volume_bb1_in(v_i.0 + 1, v_numboxes)
	start location:	eval_find_biggest_volume_start
	leaf cost:	1

Complexity upper bound 2*v_numboxes + 5

Time: 0.017 sec (SMT: 0.016 sec)
