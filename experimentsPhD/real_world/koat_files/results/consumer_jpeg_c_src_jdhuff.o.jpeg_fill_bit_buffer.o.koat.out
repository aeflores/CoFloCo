MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left, v_get_buffer, v_nbits) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left, v_get_buffer, v_nbits) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left, v_get_buffer, v_nbits) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb16_in(v_.02, v_bits_left, v_get_buffer, v_nbits) [ v_.02 >= 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb17_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb17_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb16_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb16_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_bb17_in(v_.02, v_bits_left, v_get_buffer, v_nbits)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb17_in(v_.02, v_bits_left, v_get_buffer, v_nbits) -> eval_jpeg_fill_bit_buffer_stop(v_.02, v_bits_left, v_get_buffer, v_nbits)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.02, v_bits_left].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_jpeg_fill_bit_buffer_bb17_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_stop(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb16_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb17_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb16_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb17_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb17_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb16_in(v_.02, v_bits_left) [ v_.02 >= 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
		(1, 1)    eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
		(1, 1)    eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(?, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left)
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 < 25 ]
		(?, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(1, 1)    eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
		(1, 1)    eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

A polynomial rank function with
	Pol(eval_jpeg_fill_bit_buffer_bb15_in) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_bb1_in) = -V_1 + 25
	Pol(eval_jpeg_fill_bit_buffer_26) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_25) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_bb12_in) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_NewDefault_in) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_bb10_in) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_bb7_in) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_13) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_12) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_bb6_in) = -V_1 + 17
	Pol(eval_jpeg_fill_bit_buffer_5) = -V_1 + 24
	Pol(eval_jpeg_fill_bit_buffer_4) = -V_1 + 24
	Pol(eval_jpeg_fill_bit_buffer_bb0_in) = -V_2 + 25
	Pol(eval_jpeg_fill_bit_buffer_start) = -V_2 + 25
orients all transitions weakly and the transitions
	eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 < 25 ]
	eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 < 25 ]
	eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 < 25 ]
strictly and produces the following problem:
5:	T:
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left)
		(?, 1)                   eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left)
		(v_bits_left + 25, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(v_bits_left + 25, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 < 25 ]
		(v_bits_left + 25, 1)    eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(1, 1)                   eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
		(1, 1)                   eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Repeatedly propagating knowledge in problem 5 produces the following problem:
6:	T:
		(?, 1)                     eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)                     eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left)
		(2*v_bits_left + 50, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(2*v_bits_left + 50, 1)    eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(v_bits_left + 25, 1)      eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left)
		(v_bits_left + 25, 1)      eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left)
		(v_bits_left + 25, 1)      eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(v_bits_left + 25, 1)      eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 < 25 ]
		(v_bits_left + 25, 1)      eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(1, 1)                     eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
		(1, 1)                     eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

A polynomial rank function with
	Pol(eval_jpeg_fill_bit_buffer_bb7_in) = 6
	Pol(eval_jpeg_fill_bit_buffer_bb10_in) = 6
	Pol(eval_jpeg_fill_bit_buffer_12) = 6
	Pol(eval_jpeg_fill_bit_buffer_bb15_in) = 1
	Pol(eval_jpeg_fill_bit_buffer_bb1_in) = 0
	Pol(eval_jpeg_fill_bit_buffer_bb12_in) = 4
	Pol(eval_jpeg_fill_bit_buffer_25) = 3
	Pol(eval_jpeg_fill_bit_buffer_NewDefault_in) = 5
	Pol(eval_jpeg_fill_bit_buffer_26) = 2
	Pol(eval_jpeg_fill_bit_buffer_13) = 6
and size complexities
	S("eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left)", 0-0) = v_.02
	S("eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)", 0-0) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 < 25 ]", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 < 25 ]", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 < 25 ]", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 < 25 ]", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 < 25 ]", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 < 25 ]", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)", 0-1) = v_bits_left
	S("eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)", 0-0) = ?
	S("eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)", 0-1) = v_bits_left
orients the transitions
	eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left)
weakly and the transitions
	eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
	eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)
strictly and produces the following problem:
7:	T:
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left)
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left)
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left)
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left)
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left)
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(?, 1)                       eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left)
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left)
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left)
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left)
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left)
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left)
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left)
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 < 25 ]
		(1, 1)                       eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
		(1, 1)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Applied AI with 'oct' on problem 7 to obtain the following invariants:
  For symbol eval_jpeg_fill_bit_buffer_12: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_13: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_25: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_26: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_4: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_5: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_NewDefault_in: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_bb10_in: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_bb12_in: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_bb15_in: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_bb1_in: X_1 - X_2 >= 0
  For symbol eval_jpeg_fill_bit_buffer_bb6_in: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0
  For symbol eval_jpeg_fill_bit_buffer_bb7_in: -X_2 + 24 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 48 >= 0 /\ -X_1 + 24 >= 0


This yielded the following problem:
8:	T:
		(1, 1)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left)
		(1, 1)                       eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) with all transitions in problem 8, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
We thus obtain the following problem:
9:	T:
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
		(1, 1)                       eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_jpeg_fill_bit_buffer_bb0_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
We thus obtain the following problem:
10:	T:
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
11:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 11, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
12:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_jpeg_fill_bit_buffer_NewDefault_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
13:	T:
		(?, 1)                       eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 13, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
14:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 14, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
15:	T:
		(?, 2)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transition from problem 15:
	eval_jpeg_fill_bit_buffer_13(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
16:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 2)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 16, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
17:	T:
		(18*v_bits_left + 450, 3)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 2)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_jpeg_fill_bit_buffer_26(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
18:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 2)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 3)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 18, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
19:	T:
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 2)                       eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 3)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_jpeg_fill_bit_buffer_12(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
20:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 3)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 20, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
21:	T:
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 3)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 21, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
22:	T:
		(v_bits_left + 25, 2)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 3)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transition from problem 22:
	eval_jpeg_fill_bit_buffer_5(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
23:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 3)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 2)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 23, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
24:	T:
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 3)    eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 2)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transition from problem 24:
	eval_jpeg_fill_bit_buffer_25(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
25:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 2)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 25, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
26:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 1)    eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 2)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transition from problem 26:
	eval_jpeg_fill_bit_buffer_bb15_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
27:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 2)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ] with all transitions in problem 27, the following new transition is obtained:
	eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 /\ -v_bits_left + 24 >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
28:	T:
		(v_bits_left + 25, 3)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 /\ -v_bits_left + 24 >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 2)        eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transition from problem 28:
	eval_jpeg_fill_bit_buffer_4(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
29:	T:
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 3)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 /\ -v_bits_left + 24 >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 29, the following new transitions are obtained:
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
30:	T:
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 1)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 3)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 /\ -v_bits_left + 24 >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 30, the following new transitions are obtained:
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
	eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
31:	T:
		(?, 4)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 4)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 3)                       eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 3)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 /\ -v_bits_left + 24 >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Repeatedly propagating knowledge in problem 31 produces the following problem:
32:	T:
		(?, 4)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 4)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 3)      eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 3)      eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 1)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 3)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 /\ -v_bits_left + 24 >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

By chaining the transition eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ] with all transitions in problem 32, the following new transitions are obtained:
	eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
	eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
33:	T:
		(2*v_bits_left + 50, 4)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 4)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 4)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 4)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 3)      eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 3)      eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 3)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 /\ -v_bits_left + 24 >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Testing for reachability in the complexity graph removes the following transitions from problem 33:
	eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
	eval_jpeg_fill_bit_buffer_bb7_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
We thus obtain the following problem:
34:	T:
		(?, 4)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(?, 4)                       eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 4)    eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 4)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 4)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb10_in(v_.02, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(2*v_bits_left + 50, 2)      eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(18*v_bits_left + 450, 2)    eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_.02 + 8, v_bits_left) [ -v_bits_left + 24 >= 0 /\ v_.02 - v_bits_left >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 3)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 /\ -v_bits_left + 24 >= 0 /\ -v_.02 - v_bits_left + 48 >= 0 /\ -v_.02 + 24 >= 0 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb6_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(v_bits_left + 25, 1)        eval_jpeg_fill_bit_buffer_bb1_in(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb12_in(v_.02, v_bits_left) [ v_.02 - v_bits_left >= 0 /\ v_.02 < 25 ]
		(1, 2)                       eval_jpeg_fill_bit_buffer_start(v_.02, v_bits_left) -> eval_jpeg_fill_bit_buffer_bb1_in(v_bits_left, v_bits_left)
	start location:	eval_jpeg_fill_bit_buffer_start
	leaf cost:	6

Complexity upper bound ?

Time: 1.309 sec (SMT: 1.067 sec)
