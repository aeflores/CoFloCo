MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_3(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 ]
		(?, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(?, 1)    eval_ThunderDecodeRow_3(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, v_6, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s))
		(1, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_3(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 ]
		(?, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(?, 1)    eval_ThunderDecodeRow_3(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, v_6, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_ThunderDecodeRow_start) = 2
	Pol(eval_ThunderDecodeRow_bb0_in) = 2
	Pol(eval_ThunderDecodeRow_bb1_in) = 2
	Pol(eval_ThunderDecodeRow_3) = 2
	Pol(eval_ThunderDecodeRow_bb4_in) = 1
	Pol(eval_ThunderDecode_start) = 0
	Pol(eval_ThunderDecodeRow_4) = 2
	Pol(eval_ThunderDecodeRow_stop) = 0
orients all transitions weakly and the transitions
	eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s))
	eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
	eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s))
		(1, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_3(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 ]
		(2, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(?, 1)    eval_ThunderDecodeRow_3(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, v_6, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s))
		(2, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s))
		(2, 1)    eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_ThunderDecodeRow_3: X_1 - 1 >= 0
  For symbol eval_ThunderDecodeRow_4: X_1 - 1 >= 0


This yielded the following problem:
4:	T:
		(2, 1)    eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s))
		(2, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_3(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, v_6, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(2, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(?, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_3(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 ]
		(1, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(1, 1)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

By chaining the transition eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
We thus obtain the following problem:
5:	T:
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(2, 1)    eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_3(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, v_6, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(2, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(?, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_3(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 ]
		(1, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(1, 1)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

By chaining the transition eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
We thus obtain the following problem:
6:	T:
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(2, 1)    eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s))
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_3(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, v_6, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_3(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 ]
		(1, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(1, 1)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_ThunderDecodeRow_bb4_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s))
We thus obtain the following problem:
7:	T:
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_3(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, v_6, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(?, 1)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_3(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 ]
		(1, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(1, 1)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

By chaining the transition eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_3(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
We thus obtain the following problem:
8:	T:
		(?, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_3(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, v_6, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(1, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(1, 1)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_ThunderDecodeRow_3(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, v_6, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(1, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(1, 1)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

By chaining the transition eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s)) with all transitions in problem 9, the following new transition is obtained:
	eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
We thus obtain the following problem:
10:	T:
		(1, 2)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(1, 1)    eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_ThunderDecodeRow_bb0_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
We thus obtain the following problem:
11:	T:
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(1, 2)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

By chaining the transition eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ] with all transitions in problem 11, the following new transitions are obtained:
	eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01 - nondef.2, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01 - nondef.2, nondef.0, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 > 0 /\ v_.01 - nondef.2 - 1 >= 0 ]
	eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 <= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01 - nondef.2, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01 - nondef.2, nondef.0, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 > 0 /\ v_.01 - nondef.2 - 1 >= 0 ]
		(?, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 <= 0 ]
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(?, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(1, 2)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 12 produces the following problem:
13:	T:
		(?, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01 - nondef.2, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01 - nondef.2, nondef.0, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 > 0 /\ v_.01 - nondef.2 - 1 >= 0 ]
		(?, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 <= 0 ]
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(1, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(1, 2)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_ThunderDecodeRow_4) = 1
	Pol(eval_ThunderDecode_start) = 0
	Pol(eval_ThunderDecodeRow_stop) = 0
	Pol(eval_ThunderDecodeRow_bb1_in) = 1
	Pol(eval_ThunderDecodeRow_start) = 1
orients all transitions weakly and the transition
	eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 <= 0 ]
strictly and produces the following problem:
14:	T:
		(?, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01 - nondef.2, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01 - nondef.2, nondef.0, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 > 0 /\ v_.01 - nondef.2 - 1 >= 0 ]
		(1, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 <= 0 ]
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(1, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
		(1, 2)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s))
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

By chaining the transition eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_bb1_in(v_occ, v_6, v_occ, v_s)) with all transitions in problem 14, the following new transitions are obtained:
	eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_occ, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_occ, nondef.0, v_occ, v_s)) [ v_occ > 0 /\ v_occ - 1 >= 0 ]
	eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_occ, v_6, v_occ, v_s)) [ v_occ <= 0 ]
We thus obtain the following problem:
15:	T:
		(1, 4)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_occ, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_occ, nondef.0, v_occ, v_s)) [ v_occ > 0 /\ v_occ - 1 >= 0 ]
		(1, 4)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_occ, v_6, v_occ, v_s)) [ v_occ <= 0 ]
		(?, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01 - nondef.2, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01 - nondef.2, nondef.0, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 > 0 /\ v_.01 - nondef.2 - 1 >= 0 ]
		(1, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 <= 0 ]
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(1, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 15:
	eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01, nondef.0, v_occ, v_s)) [ v_.01 > 0 /\ v_.01 - 1 >= 0 ]
	eval_ThunderDecodeRow_bb1_in(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 <= 0 ]
We thus obtain the following problem:
16:	T:
		(1, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01 - nondef.2, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 <= 0 ]
		(?, 3)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_.01 - nondef.2, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_.01 - nondef.2, nondef.0, v_occ, v_s)) [ v_.01 - 1 >= 0 /\ v_.01 - nondef.2 > 0 /\ v_.01 - nondef.2 - 1 >= 0 ]
		(2, 2)    eval_ThunderDecodeRow_4(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_.01, v_6, v_occ, v_s)) [ v_.01 - 1 >= 0 ]
		(1, 4)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_1(eval_ThunderDecodeRow_stop(v_occ, v_6, v_occ, v_s)) [ v_occ <= 0 ]
		(1, 4)    eval_ThunderDecodeRow_start(v_.01, v_6, v_occ, v_s) -> Com_2(eval_ThunderDecode_start(v_occ, nondef.0, v_occ, v_s), eval_ThunderDecodeRow_4(v_occ, nondef.0, v_occ, v_s)) [ v_occ > 0 /\ v_occ - 1 >= 0 ]
	start location:	eval_ThunderDecodeRow_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.857 sec (SMT: 0.686 sec)
