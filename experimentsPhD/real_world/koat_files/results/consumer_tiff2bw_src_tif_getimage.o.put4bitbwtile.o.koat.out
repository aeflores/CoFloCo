YES(?, 15*v_h + 5*v_h*v_w + 5)

Initial complexity problem:
1:	T:
		(1, 1)    eval_put4bitbwtile_start(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) -> eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y)
		(?, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) [ v_fromskew = 0 ]
		(?, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) [ v_fromskew > 0 /\ nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) [ v_fromskew < 0 /\ nondef.0 <= 0 /\ -v_fromskew + 2*nondef.0 >= 0 /\ -v_fromskew + 2*nondef.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) -> eval_put4bitbwtile_bb2_in(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) [ v_.01 > 0 ]
		(?, 1)    eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) -> eval_put4bitbwtile_stop(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) [ v_.01 <= 0 ]
		(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) -> eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0 - 2, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) [ v__x.0 >= 2 ]
		(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) -> eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) [ v__x.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y) -> eval_put4bitbwtile_bb1_in(v_3, v_3, v__x.0, v_fromskew, v_h, v_toskew, v_w, v_x, v_y)
	start location:	eval_put4bitbwtile_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.01, v_3, v__x.0, v_fromskew, v_h, v_w].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_3, v_3, v__x.0, v_fromskew, v_h, v_w)
		(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0 - 2, v_fromskew, v_h, v_w) [ v__x.0 >= 2 ]
		(?, 1)    eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_stop(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_.01 <= 0 ]
		(?, 1)    eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w) [ v_.01 > 0 ]
		(?, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew < 0 /\ nondef.0 <= 0 /\ -v_fromskew + 2*nondef.0 >= 0 /\ -v_fromskew + 2*nondef.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew > 0 /\ nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew = 0 ]
		(1, 1)    eval_put4bitbwtile_start(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w)
	start location:	eval_put4bitbwtile_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_3, v_3, v__x.0, v_fromskew, v_h, v_w)
		(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0 - 2, v_fromskew, v_h, v_w) [ v__x.0 >= 2 ]
		(?, 1)    eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w) [ v_.01 > 0 ]
		(?, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew < 0 /\ nondef.0 <= 0 /\ -v_fromskew + 2*nondef.0 >= 0 /\ -v_fromskew + 2*nondef.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew > 0 /\ nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew = 0 ]
		(1, 1)    eval_put4bitbwtile_start(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w)
	start location:	eval_put4bitbwtile_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(?, 1)    eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_3, v_3, v__x.0, v_fromskew, v_h, v_w)
		(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 < 2 ]
		(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0 - 2, v_fromskew, v_h, v_w) [ v__x.0 >= 2 ]
		(?, 1)    eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w) [ v_.01 > 0 ]
		(1, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew < 0 /\ nondef.0 <= 0 /\ -v_fromskew + 2*nondef.0 >= 0 /\ -v_fromskew + 2*nondef.0 < 2 ]
		(1, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew > 0 /\ nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 < 2 ]
		(1, 1)    eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew = 0 ]
		(1, 1)    eval_put4bitbwtile_start(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w)
	start location:	eval_put4bitbwtile_start
	leaf cost:	1

Separating problem 4 produces the isolated subproblem
10001:	T:
		(1, 0)    inner_10000_start_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w)
		(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0 - 2, v_fromskew, v_h, v_w) [ v__x.0 >= 2 ]
	start location:	inner_10000_start_sep
	leaf cost:	0

=== begin of proof for isolated subproblem 10001 ===
	Initial complexity problem:
	10001:	T:
			(1, 0)    inner_10000_start_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w)
			(?, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0 - 2, v_fromskew, v_h, v_w) [ v__x.0 >= 2 ]
		start location:	inner_10000_start_sep
		leaf cost:	0
	
	A polynomial rank function with
		Pol(inner_10000_start_sep) = V_6
		Pol(eval_put4bitbwtile_bb2_in) = V_3
	orients all transitions weakly and the transition
		eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0 - 2, v_fromskew, v_h, v_w) [ v__x.0 >= 2 ]
	strictly and produces the following problem:
	10002:	T:
			(1, 0)      inner_10000_start_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w)
			(v_w, 1)    eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb2_in(v_.01, v_3, v__x.0 - 2, v_fromskew, v_h, v_w) [ v__x.0 >= 2 ]
		start location:	inner_10000_start_sep
		leaf cost:	0
=== end of proof for isolated subproblem 10001 ===

Applying the information from the isolated subproblem 10001 to problem 4 produces the following problem:
5:	T:
		(?, 0)      inner_10000_in_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w)
		(?, v_w)    inner_10000_in_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w)
		(?, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v_w >= 0 /\ v__x.0_sep >= 0 /\ v__x.0_sep <= v_w ]
		(?, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v_w >= 0 /\ v__x.0_sep < 0 /\ -v__x.0_sep <= v_w ]
		(?, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v_w < 0 /\ v__x.0_sep >= 0 /\ v__x.0_sep <= -v_w ]
		(?, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v_w < 0 /\ v__x.0_sep < 0 /\ -v__x.0_sep <= -v_w ]
		(?, 1)      inner_10000_out_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 < 2 ]
		(?, 1)      eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_in_sep(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w) [ v_.01 > 0 ]
		(1, 1)      eval_put4bitbwtile_start(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w)
		(1, 1)      eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew = 0 ]
		(1, 1)      eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew > 0 /\ nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 < 2 ]
		(1, 1)      eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew < 0 /\ nondef.0 <= 0 /\ -v_fromskew + 2*nondef.0 >= 0 /\ -v_fromskew + 2*nondef.0 < 2 ]
		(?, 1)      eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_3, v_3, v__x.0, v_fromskew, v_h, v_w)
	start location:	eval_put4bitbwtile_start
	leaf cost:	1

Applied AI with 'oct' on problem 5 to obtain the following invariants:
  For symbol eval_put4bitbwtile_bb1_in: -X_1 + X_5 >= 0
  For symbol eval_put4bitbwtile_bb6_in: X_5 - 1 >= 0 /\ -X_3 + X_5 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ -X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 2 >= 0 /\ -X_1 + X_5 >= 0 /\ -X_3 + 1 >= 0 /\ X_2 - X_3 + 1 >= 0 /\ X_1 - X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol inner_10000_compl_sep: X_3 - X_6 >= 0 /\ -X_3 + X_6 >= 0 /\ X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ -X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 2 >= 0 /\ -X_1 + X_5 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol inner_10000_in_sep: X_3 - X_6 >= 0 /\ -X_3 + X_6 >= 0 /\ X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ -X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 2 >= 0 /\ -X_1 + X_5 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol inner_10000_out_sep: X_5 - 1 >= 0 /\ X_2 + X_5 - 1 >= 0 /\ -X_2 + X_5 - 1 >= 0 /\ X_1 + X_5 - 2 >= 0 /\ -X_1 + X_5 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0


This yielded the following problem:
6:	T:
		(?, 1)      eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_3, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_h - 1 >= 0 /\ -v__x.0 + v_h >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ -v__x.0 + 1 >= 0 /\ v_3 - v__x.0 + 1 >= 0 /\ v_.01 - v__x.0 >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(1, 1)      eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew < 0 /\ nondef.0 <= 0 /\ -v_fromskew + 2*nondef.0 >= 0 /\ -v_fromskew + 2*nondef.0 < 2 ]
		(1, 1)      eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew > 0 /\ nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 < 2 ]
		(1, 1)      eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew = 0 ]
		(1, 1)      eval_put4bitbwtile_start(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w)
		(?, 1)      eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_in_sep(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w) [ -v_.01 + v_h >= 0 /\ v_.01 > 0 ]
		(?, 1)      inner_10000_out_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v__x.0 < 2 ]
		(?, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w < 0 /\ v__x.0_sep < 0 /\ -v__x.0_sep <= -v_w ]
		(?, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w < 0 /\ v__x.0_sep >= 0 /\ v__x.0_sep <= -v_w ]
		(?, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w >= 0 /\ v__x.0_sep < 0 /\ -v__x.0_sep <= v_w ]
		(?, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w >= 0 /\ v__x.0_sep >= 0 /\ v__x.0_sep <= v_w ]
		(?, v_w)    inner_10000_in_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(?, 0)      inner_10000_in_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	start location:	eval_put4bitbwtile_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_put4bitbwtile_bb6_in) = 5*V_2 + 1
	Pol(eval_put4bitbwtile_bb1_in) = 5*V_1
	Pol(eval_put4bitbwtile_bb0_in) = 5*V_5
	Pol(eval_put4bitbwtile_start) = 5*V_5
	Pol(inner_10000_in_sep) = 5*V_2 + 4
	Pol(inner_10000_out_sep) = 2*V_1 + 3*V_2
	Pol(inner_10000_compl_sep) = 5*V_1 - 2
orients all transitions weakly and the transitions
	inner_10000_out_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v__x.0 < 2 ]
	inner_10000_in_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	inner_10000_in_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w < 0 /\ v__x.0_sep < 0 /\ -v__x.0_sep <= -v_w ]
	inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w < 0 /\ v__x.0_sep >= 0 /\ v__x.0_sep <= -v_w ]
	inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w >= 0 /\ v__x.0_sep < 0 /\ -v__x.0_sep <= v_w ]
	inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w >= 0 /\ v__x.0_sep >= 0 /\ v__x.0_sep <= v_w ]
	eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_3, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_h - 1 >= 0 /\ -v__x.0 + v_h >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ -v__x.0 + 1 >= 0 /\ v_3 - v__x.0 + 1 >= 0 /\ v_.01 - v__x.0 >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_in_sep(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w) [ -v_.01 + v_h >= 0 /\ v_.01 > 0 ]
strictly and produces the following problem:
7:	T:
		(5*v_h, 1)      eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_3, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_h - 1 >= 0 /\ -v__x.0 + v_h >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ -v__x.0 + 1 >= 0 /\ v_3 - v__x.0 + 1 >= 0 /\ v_.01 - v__x.0 >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(1, 1)          eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew < 0 /\ nondef.0 <= 0 /\ -v_fromskew + 2*nondef.0 >= 0 /\ -v_fromskew + 2*nondef.0 < 2 ]
		(1, 1)          eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew > 0 /\ nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 >= 0 /\ v_fromskew - 2*nondef.0 < 2 ]
		(1, 1)          eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb1_in(v_h, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_fromskew = 0 ]
		(1, 1)          eval_put4bitbwtile_start(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb0_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w)
		(5*v_h, 1)      eval_put4bitbwtile_bb1_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_in_sep(v_.01, v_.01 - 1, v_w, v_fromskew, v_h, v_w) [ -v_.01 + v_h >= 0 /\ v_.01 > 0 ]
		(5*v_h, 1)      inner_10000_out_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> eval_put4bitbwtile_bb6_in(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v__x.0 < 2 ]
		(5*v_h, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w < 0 /\ v__x.0_sep < 0 /\ -v__x.0_sep <= -v_w ]
		(5*v_h, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w < 0 /\ v__x.0_sep >= 0 /\ v__x.0_sep <= -v_w ]
		(5*v_h, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w >= 0 /\ v__x.0_sep < 0 /\ -v__x.0_sep <= v_w ]
		(5*v_h, 0)      inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0_sep, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 /\ v_w >= 0 /\ v__x.0_sep >= 0 /\ v__x.0_sep <= v_w ]
		(5*v_h, v_w)    inner_10000_in_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_compl_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(5*v_h, 0)      inner_10000_in_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) -> inner_10000_out_sep(v_.01, v_3, v__x.0, v_fromskew, v_h, v_w) [ v__x.0 - v_w >= 0 /\ -v__x.0 + v_w >= 0 /\ v_h - 1 >= 0 /\ v_3 + v_h - 1 >= 0 /\ -v_3 + v_h - 1 >= 0 /\ v_.01 + v_h - 2 >= 0 /\ -v_.01 + v_h >= 0 /\ v_.01 - v_3 - 1 >= 0 /\ v_3 >= 0 /\ v_.01 + v_3 - 1 >= 0 /\ -v_.01 + v_3 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	start location:	eval_put4bitbwtile_start
	leaf cost:	1

Complexity upper bound 15*v_h + 5*v_h*v_w + 5

Time: 0.787 sec (SMT: 0.576 sec)
