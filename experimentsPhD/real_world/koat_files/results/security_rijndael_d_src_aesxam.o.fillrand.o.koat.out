YES(?, 2*v_len + 5)

Initial complexity problem:
1:	T:
		(1, 1)    eval_fillrand_start(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len)
		(?, 1)    eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, 0, v_len)
		(?, 1)    eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) [ v_i.0 < v_len ]
		(?, 1)    eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_stop(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) [ v_i.0 >= v_len ]
		(?, 1)    eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0 + 1, v_len)
	start location:	eval_fillrand_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_fillrand_start(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len)
		(?, 1)    eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, 0, v_len)
		(?, 1)    eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) [ v_i.0 < v_len ]
		(?, 1)    eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0 + 1, v_len)
	start location:	eval_fillrand_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_fillrand_start(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len)
		(1, 1)    eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, 0, v_len)
		(?, 1)    eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) [ v_i.0 < v_len ]
		(?, 1)    eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0 + 1, v_len)
	start location:	eval_fillrand_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_fillrand_start) = V_4 + 1
	Pol(eval_fillrand_bb0_in) = V_4 + 1
	Pol(eval_fillrand_bb2_in) = -V_3 + V_4 + 1
	Pol(eval_fillrand_bb5_in) = -V_3 + V_4
orients all transitions weakly and the transition
	eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) [ v_i.0 < v_len ]
strictly and produces the following problem:
4:	T:
		(1, 1)            eval_fillrand_start(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len)
		(1, 1)            eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, 0, v_len)
		(v_len + 1, 1)    eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) [ v_i.0 < v_len ]
		(?, 1)            eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0 + 1, v_len)
	start location:	eval_fillrand_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 4 produces the following problem:
5:	T:
		(1, 1)            eval_fillrand_start(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len)
		(1, 1)            eval_fillrand_bb0_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, 0, v_len)
		(v_len + 1, 1)    eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) [ v_i.0 < v_len ]
		(v_len + 1, 1)    eval_fillrand_bb5_in(v_'fillrand.count, v_'fillrand.mt, v_i.0, v_len) -> eval_fillrand_bb2_in(v_'fillrand.count, v_'fillrand.mt, v_i.0 + 1, v_len)
	start location:	eval_fillrand_start
	leaf cost:	1

Complexity upper bound 2*v_len + 5

Time: 0.072 sec (SMT: 0.062 sec)
