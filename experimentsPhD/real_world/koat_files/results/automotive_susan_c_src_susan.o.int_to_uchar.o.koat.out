YES(?, 15*v_size + 4)

Initial complexity problem:
1:	T:
		(1, 1)    eval_int_to_uchar_start(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, 0, v_i.1, nondef.0, v_max_r.1, nondef.1, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, nondef.3, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.0, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_max_r.0 - v_min_r.0, v_i.0, 0, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.0 >= v_size ]
		(?, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, nondef.5, v_size)
		(?, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.0, v_size)
		(?, 1)    eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, v_i.0 + 1, v_i.1, v_max_r.1, v_max_r.1, v_min_r.1, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ 255*nondef.6 - 255*v_min_r.0 = 0 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 <= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < -v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 <= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < -v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_stop(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 >= v_size ]
	start location:	eval_int_to_uchar_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_int_to_uchar_start(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, 0, v_i.1, nondef.0, v_max_r.1, nondef.1, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, nondef.3, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.0, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_max_r.0 - v_min_r.0, v_i.0, 0, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.0 >= v_size ]
		(?, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, nondef.5, v_size)
		(?, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.0, v_size)
		(?, 1)    eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, v_i.0 + 1, v_i.1, v_max_r.1, v_max_r.1, v_min_r.1, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ 255*nondef.6 - 255*v_min_r.0 = 0 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 <= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < -v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 <= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < -v_20 ]
	start location:	eval_int_to_uchar_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_int_to_uchar_start(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size)
		(1, 1)    eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, 0, v_i.1, nondef.0, v_max_r.1, nondef.1, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, nondef.3, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.0, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_max_r.0 - v_min_r.0, v_i.0, 0, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.0 >= v_size ]
		(?, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, nondef.5, v_size)
		(?, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.0, v_size)
		(?, 1)    eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, v_i.0 + 1, v_i.1, v_max_r.1, v_max_r.1, v_min_r.1, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ 255*nondef.6 - 255*v_min_r.0 = 0 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 <= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < -v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 <= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < -v_20 ]
	start location:	eval_int_to_uchar_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_int_to_uchar_start) = 1
	Pol(eval_int_to_uchar_bb0_in) = 1
	Pol(eval_int_to_uchar_bb1_in) = 1
	Pol(eval_int_to_uchar_bb4_in) = 1
	Pol(eval_int_to_uchar_bb8_in) = 0
	Pol(eval_int_to_uchar_bb6_in) = 1
orients all transitions weakly and the transition
	eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_max_r.0 - v_min_r.0, v_i.0, 0, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.0 >= v_size ]
strictly and produces the following problem:
4:	T:
		(1, 1)    eval_int_to_uchar_start(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size)
		(1, 1)    eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, 0, v_i.1, nondef.0, v_max_r.1, nondef.1, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, nondef.3, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(?, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.0, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(1, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_max_r.0 - v_min_r.0, v_i.0, 0, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.0 >= v_size ]
		(?, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, nondef.5, v_size)
		(?, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.0, v_size)
		(?, 1)    eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, v_i.0 + 1, v_i.1, v_max_r.1, v_max_r.1, v_min_r.1, v_min_r.1, v_size)
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ 255*nondef.6 - 255*v_min_r.0 = 0 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 <= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < -v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 <= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < v_20 ]
		(?, 1)    eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < -v_20 ]
	start location:	eval_int_to_uchar_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_int_to_uchar_start) = V_8
	Pol(eval_int_to_uchar_bb0_in) = V_8
	Pol(eval_int_to_uchar_bb1_in) = -V_2 + V_8
	Pol(eval_int_to_uchar_bb4_in) = -V_2 + V_8 - 1
	Pol(eval_int_to_uchar_bb8_in) = -V_2 - V_3 + V_8
	Pol(eval_int_to_uchar_bb6_in) = -V_2 + V_8 - 1
orients all transitions weakly and the transitions
	eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.0, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
	eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, nondef.3, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
strictly and produces the following problem:
5:	T:
		(1, 1)         eval_int_to_uchar_start(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size)
		(1, 1)         eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, 0, v_i.1, nondef.0, v_max_r.1, nondef.1, v_min_r.1, v_size)
		(v_size, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, nondef.3, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(v_size, 1)    eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.0, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(1, 1)         eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_max_r.0 - v_min_r.0, v_i.0, 0, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.0 >= v_size ]
		(?, 1)         eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, nondef.5, v_size)
		(?, 1)         eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.0, v_size)
		(?, 1)         eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, v_i.0 + 1, v_i.1, v_max_r.1, v_max_r.1, v_min_r.1, v_min_r.1, v_size)
		(?, 1)         eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ 255*nondef.6 - 255*v_min_r.0 = 0 ]
		(?, 1)         eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < v_20 ]
		(?, 1)         eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 <= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < -v_20 ]
		(?, 1)         eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 <= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < v_20 ]
		(?, 1)         eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < -v_20 ]
	start location:	eval_int_to_uchar_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 5 produces the following problem:
6:	T:
		(1, 1)           eval_int_to_uchar_start(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size)
		(1, 1)           eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, 0, v_i.1, nondef.0, v_max_r.1, nondef.1, v_min_r.1, v_size)
		(v_size, 1)      eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, nondef.3, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(v_size, 1)      eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.0, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(1, 1)           eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_max_r.0 - v_min_r.0, v_i.0, 0, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.0 >= v_size ]
		(2*v_size, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, nondef.5, v_size)
		(2*v_size, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.0, v_size)
		(4*v_size, 1)    eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, v_i.0 + 1, v_i.1, v_max_r.1, v_max_r.1, v_min_r.1, v_min_r.1, v_size)
		(?, 1)           eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ 255*nondef.6 - 255*v_min_r.0 = 0 ]
		(?, 1)           eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < v_20 ]
		(?, 1)           eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 <= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < -v_20 ]
		(?, 1)           eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 <= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < v_20 ]
		(?, 1)           eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < -v_20 ]
	start location:	eval_int_to_uchar_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_int_to_uchar_start) = V_8
	Pol(eval_int_to_uchar_bb0_in) = V_8
	Pol(eval_int_to_uchar_bb1_in) = V_8
	Pol(eval_int_to_uchar_bb4_in) = V_8
	Pol(eval_int_to_uchar_bb8_in) = -V_3 + V_8
	Pol(eval_int_to_uchar_bb6_in) = V_8
orients all transitions weakly and the transitions
	eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < -v_20 ]
	eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 <= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < -v_20 ]
	eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 <= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < v_20 ]
	eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < v_20 ]
	eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ 255*nondef.6 - 255*v_min_r.0 = 0 ]
strictly and produces the following problem:
7:	T:
		(1, 1)           eval_int_to_uchar_start(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size)
		(1, 1)           eval_int_to_uchar_bb0_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, 0, v_i.1, nondef.0, v_max_r.1, nondef.1, v_min_r.1, v_size)
		(v_size, 1)      eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, nondef.3, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(v_size, 1)      eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.0, v_min_r.0, v_min_r.1, v_size) [ v_i.0 < v_size ]
		(1, 1)           eval_int_to_uchar_bb1_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_max_r.0 - v_min_r.0, v_i.0, 0, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.0 >= v_size ]
		(2*v_size, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, nondef.5, v_size)
		(2*v_size, 1)    eval_int_to_uchar_bb4_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.0, v_size)
		(4*v_size, 1)    eval_int_to_uchar_bb6_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb1_in(v_20, v_i.0 + 1, v_i.1, v_max_r.1, v_max_r.1, v_min_r.1, v_min_r.1, v_size)
		(v_size, 1)      eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ 255*nondef.6 - 255*v_min_r.0 = 0 ]
		(v_size, 1)      eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < v_20 ]
		(v_size, 1)      eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 > 0 /\ nondef.7 <= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 >= 0 /\ 255*nondef.6 - 255*v_min_r.0 - nondef.7*v_20 < -v_20 ]
		(v_size, 1)      eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 > 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 <= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < v_20 ]
		(v_size, 1)      eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) -> eval_int_to_uchar_bb8_in(v_20, v_i.0, v_i.1 + 1, v_max_r.0, v_max_r.1, v_min_r.0, v_min_r.1, v_size) [ v_i.1 < v_size /\ v_20 < 0 /\ 255*nondef.6 - 255*v_min_r.0 < 0 /\ nondef.7 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 >= 0 /\ -255*nondef.6 + 255*v_min_r.0 + nondef.7*v_20 < -v_20 ]
	start location:	eval_int_to_uchar_start
	leaf cost:	1

Complexity upper bound 15*v_size + 4

Time: 0.267 sec (SMT: 0.175 sec)
