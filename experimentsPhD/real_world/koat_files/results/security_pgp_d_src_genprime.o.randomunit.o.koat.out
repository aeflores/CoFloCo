YES(?, 8)

Initial complexity problem:
1:	T:
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
		(?, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(?, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0))
		(?, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0))
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ v_i.0 - 1 < 0 ]
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ v_i.0 - 1 > 0 ]
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ v_i.0 - 1 = 0 ]
	start location:	eval_randomunit_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(?, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0))
		(?, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0))
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ v_i.0 - 1 < 0 ]
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ v_i.0 - 1 > 0 ]
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ v_i.0 - 1 = 0 ]
	start location:	eval_randomunit_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_randomunit_start) = 1
	Pol(eval_randomunit_bb0_in) = 1
	Pol(eval_randomunit_bb1_in) = 1
	Pol(eval_randomunit_2) = 1
	Pol(eval_trueRandByte_start) = 0
	Pol(eval_randomunit_3) = 1
	Pol(eval_randomunit_stop) = 0
orients all transitions weakly and the transition
	eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ v_i.0 - 1 = 0 ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(?, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0))
		(?, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0))
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ v_i.0 - 1 < 0 ]
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ v_i.0 - 1 > 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ v_i.0 - 1 = 0 ]
	start location:	eval_randomunit_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_randomunit_2: -X_1 + 2 >= 0
  For symbol eval_randomunit_3: -X_1 + 2 >= 0
  For symbol eval_randomunit_bb1_in: -X_1 + 2 >= 0


This yielded the following problem:
4:	T:
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 ]
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 ]
		(?, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(?, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

By chaining the transition eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_2(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_2(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 ]
		(?, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(?, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

By chaining the transition eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_2(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
We thus obtain the following problem:
6:	T:
		(?, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(?, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 ]
		(?, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(?, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

By chaining the transition eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_bb1_in(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_2(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
We thus obtain the following problem:
7:	T:
		(?, 2)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_2(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
		(?, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(?, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(?, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 7 produces the following problem:
8:	T:
		(?, 2)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_2(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
		(?, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(?, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

By chaining the transition eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_2(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
		(?, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(?, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 9 produces the following problem:
10:	T:
		(?, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(1, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

By chaining the transition eval_randomunit_bb1_in(v_i.0) -> Com_1(eval_randomunit_2(v_i.0)) [ -v_i.0 + 2 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_randomunit_bb1_in(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
We thus obtain the following problem:
11:	T:
		(1, 2)    eval_randomunit_bb1_in(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(?, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(1, 1)    eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_randomunit_2(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(1, 2)    eval_randomunit_bb1_in(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2))
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

By chaining the transition eval_randomunit_bb0_in(v_i.0) -> Com_1(eval_randomunit_bb1_in(2)) with all transitions in problem 12, the following new transition is obtained:
	eval_randomunit_bb0_in(v_i.0) -> Com_2(eval_trueRandByte_start(2), eval_randomunit_3(2)) [ 0 >= 0 ]
We thus obtain the following problem:
13:	T:
		(1, 3)    eval_randomunit_bb0_in(v_i.0) -> Com_2(eval_trueRandByte_start(2), eval_randomunit_3(2)) [ 0 >= 0 ]
		(?, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(1, 2)    eval_randomunit_bb1_in(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 13:
	eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 < 0 /\ -v_i.0 + 3 >= 0 ]
	eval_randomunit_bb1_in(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0), eval_randomunit_3(v_i.0)) [ -v_i.0 + 2 >= 0 ]
We thus obtain the following problem:
14:	T:
		(1, 1)    eval_randomunit_3(v_i.0) -> Com_1(eval_randomunit_stop(v_i.0)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 = 0 ]
		(1, 3)    eval_randomunit_3(v_i.0) -> Com_2(eval_trueRandByte_start(v_i.0 - 1), eval_randomunit_3(v_i.0 - 1)) [ -v_i.0 + 2 >= 0 /\ v_i.0 - 1 > 0 /\ -v_i.0 + 3 >= 0 ]
		(1, 3)    eval_randomunit_bb0_in(v_i.0) -> Com_2(eval_trueRandByte_start(2), eval_randomunit_3(2)) [ 0 >= 0 ]
		(1, 1)    eval_randomunit_start(v_i.0) -> Com_1(eval_randomunit_bb0_in(v_i.0))
	start location:	eval_randomunit_start
	leaf cost:	0

Complexity upper bound 8

Time: 0.186 sec (SMT: 0.162 sec)
