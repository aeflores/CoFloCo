YES(?, v_n + 3)

Initial complexity problem:
1:	T:
		(1, 1)    eval_compresssep_start(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb0_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n)
		(?, 1)    eval_compresssep_bb0_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_n, v_n)
		(?, 1)    eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04 - 1, v_n) [ v_.04 > 0 ]
		(?, 1)    eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_stop(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) [ v_.04 <= 0 ]
	start location:	eval_compresssep_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_compresssep_start(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb0_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n)
		(?, 1)    eval_compresssep_bb0_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_n, v_n)
		(?, 1)    eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04 - 1, v_n) [ v_.04 > 0 ]
	start location:	eval_compresssep_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_compresssep_start(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb0_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n)
		(1, 1)    eval_compresssep_bb0_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_n, v_n)
		(?, 1)    eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04 - 1, v_n) [ v_.04 > 0 ]
	start location:	eval_compresssep_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_compresssep_start) = V_5
	Pol(eval_compresssep_bb0_in) = V_5
	Pol(eval_compresssep_bb1_in) = V_4
orients all transitions weakly and the transition
	eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04 - 1, v_n) [ v_.04 > 0 ]
strictly and produces the following problem:
4:	T:
		(1, 1)      eval_compresssep_start(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb0_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n)
		(1, 1)      eval_compresssep_bb0_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_n, v_n)
		(v_n, 1)    eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04, v_n) -> eval_compresssep_bb1_in(v_'BLUE, v_'GREEN, v_'RED, v_.04 - 1, v_n) [ v_.04 > 0 ]
	start location:	eval_compresssep_start
	leaf cost:	1

Complexity upper bound v_n + 3

Time: 0.089 sec (SMT: 0.079 sec)
