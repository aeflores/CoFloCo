MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_fullsize_smooth_downsample_start(v_2, v_6, v_8, v_colctr.0, v_outrow.0) -> Com_1(eval_fullsize_smooth_downsample_bb0_in(v_2, v_6, v_8, v_colctr.0, v_outrow.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb0_in(v_2, v_6, v_8, v_colctr.0, v_outrow.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, nondef.1 + 2, nondef.2, v_colctr.0, v_outrow.0))
		(?, 1)    eval_fullsize_smooth_downsample_5(v_2, v_6, v_8, v_colctr.0, v_outrow.0) -> Com_2(eval_expand_right_edge_start(v_2, v_6, v_8, v_colctr.0, v_outrow.0), eval_fullsize_smooth_downsample_6(v_2, v_6, v_8, v_colctr.0, v_outrow.0))
		(?, 1)    eval_fullsize_smooth_downsample_6(v_2, v_6, v_8, v_colctr.0, v_outrow.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_6, v_8, v_colctr.0, 0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_6, v_8, v_colctr.0, v_outrow.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_6, v_8, v_2 - 2, v_outrow.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_6, v_8, v_colctr.0, v_outrow.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_6, v_8, v_colctr.0, v_outrow.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_6, v_8, v_colctr.0, v_outrow.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_6, v_8, v_colctr.0 - 1, v_outrow.0)) [ v_colctr.0 > 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_6, v_8, v_colctr.0, v_outrow.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_6, v_8, v_colctr.0, v_outrow.0 + 1)) [ v_colctr.0 <= 0 ]
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_2, v_colctr.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) [ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_colctr.0 > 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(?, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_5(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(v_2, v_colctr.0), eval_fullsize_smooth_downsample_6(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) [ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_colctr.0 > 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_5(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(v_2, v_colctr.0), eval_fullsize_smooth_downsample_6(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_fullsize_smooth_downsample_bb3_in) = 1
	Pol(eval_fullsize_smooth_downsample_bb1_in) = 1
	Pol(eval_fullsize_smooth_downsample_stop) = 0
	Pol(eval_fullsize_smooth_downsample_6) = 1
	Pol(eval_fullsize_smooth_downsample_5) = 1
	Pol(eval_expand_right_edge_start) = 0
	Pol(eval_fullsize_smooth_downsample_bb0_in) = 1
	Pol(eval_fullsize_smooth_downsample_start) = 1
orients all transitions weakly and the transition
	eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
strictly and produces the following problem:
4:	T:
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) [ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_colctr.0 > 0 ]
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_5(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(v_2, v_colctr.0), eval_fullsize_smooth_downsample_6(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_fullsize_smooth_downsample_bb3_in: X_1 - X_2 - 2 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_5(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(v_2, v_colctr.0), eval_fullsize_smooth_downsample_6(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

By chaining the transition eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0)) with all transitions in problem 5, the following new transition is obtained:
	eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_5(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(v_2, v_colctr.0), eval_fullsize_smooth_downsample_6(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_fullsize_smooth_downsample_bb0_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0))
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_5(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(v_2, v_colctr.0), eval_fullsize_smooth_downsample_6(v_2, v_colctr.0))
		(1, 2)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

By chaining the transition eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_5(8*nondef.0, v_colctr.0)) with all transitions in problem 7, the following new transition is obtained:
	eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(8*nondef.0, v_colctr.0), eval_fullsize_smooth_downsample_6(8*nondef.0, v_colctr.0))
We thus obtain the following problem:
8:	T:
		(1, 3)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(8*nondef.0, v_colctr.0), eval_fullsize_smooth_downsample_6(8*nondef.0, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_5(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(v_2, v_colctr.0), eval_fullsize_smooth_downsample_6(v_2, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_fullsize_smooth_downsample_5(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(v_2, v_colctr.0), eval_fullsize_smooth_downsample_6(v_2, v_colctr.0))
We thus obtain the following problem:
9:	T:
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(1, 3)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(8*nondef.0, v_colctr.0), eval_fullsize_smooth_downsample_6(8*nondef.0, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

By chaining the transition eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ] with all transitions in problem 9, the following new transitions are obtained:
	eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
	eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
We thus obtain the following problem:
10:	T:
		(?, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(?, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(1, 3)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(8*nondef.0, v_colctr.0), eval_fullsize_smooth_downsample_6(8*nondef.0, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 10 produces the following problem:
11:	T:
		(?, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(1, 3)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(8*nondef.0, v_colctr.0), eval_fullsize_smooth_downsample_6(8*nondef.0, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_fullsize_smooth_downsample_bb3_in) = 1
	Pol(eval_fullsize_smooth_downsample_stop) = 0
	Pol(eval_fullsize_smooth_downsample_bb1_in) = 1
	Pol(eval_fullsize_smooth_downsample_6) = 1
	Pol(eval_fullsize_smooth_downsample_start) = 1
	Pol(eval_expand_right_edge_start) = 0
orients all transitions weakly and the transition
	eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
strictly and produces the following problem:
12:	T:
		(1, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 1)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0))
		(1, 3)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(8*nondef.0, v_colctr.0), eval_fullsize_smooth_downsample_6(8*nondef.0, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

By chaining the transition eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0)) with all transitions in problem 12, the following new transitions are obtained:
	eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
	eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
We thus obtain the following problem:
13:	T:
		(1, 2)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(1, 2)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(1, 1)    eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 3)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(8*nondef.0, v_colctr.0), eval_fullsize_smooth_downsample_6(8*nondef.0, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 13:
	eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
	eval_fullsize_smooth_downsample_bb1_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
We thus obtain the following problem:
14:	T:
		(?, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(1, 2)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 <= 0 ]
		(?, 1)    eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_colctr.0 - 1)) [ v_2 - v_colctr.0 - 2 >= 0 /\ v_colctr.0 > 0 ]
		(1, 2)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_bb3_in(v_2, v_2 - 2))
		(1, 2)    eval_fullsize_smooth_downsample_6(v_2, v_colctr.0) -> Com_1(eval_fullsize_smooth_downsample_stop(v_2, v_colctr.0))
		(1, 3)    eval_fullsize_smooth_downsample_start(v_2, v_colctr.0) -> Com_2(eval_expand_right_edge_start(8*nondef.0, v_colctr.0), eval_fullsize_smooth_downsample_6(8*nondef.0, v_colctr.0))
	start location:	eval_fullsize_smooth_downsample_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.495 sec (SMT: 0.431 sec)
