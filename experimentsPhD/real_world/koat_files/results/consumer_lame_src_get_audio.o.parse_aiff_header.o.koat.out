MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_parse_aiff_header_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb0_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb0_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_0(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_1(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_2(v_'num_channels, v_'num_samples, v_'samp_freq, nondef.0, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_2(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_1, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_3(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_4(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_4(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_2))
		(?, 1)    eval_parse_aiff_header_bb2_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_chunkSize.0 - 4, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0)) [ v_chunkSize.0 > 0 ]
		(?, 1)    eval_parse_aiff_header_bb2_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0)) [ v_chunkSize.0 <= 0 ]
		(?, 1)    eval_parse_aiff_header_6(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_7(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_7(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_7(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_8(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, nondef.3, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_9(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_12, v_10 - v_12, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_11(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_12(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_13 - 2, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_15(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_16(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_17 - 4, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_19(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_20(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_20 - 2, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_23(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_24(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_26(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_23 - 10, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_26(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_27(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_27(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_14))
		(?, 1)    eval_parse_aiff_header_28(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_29(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_30(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_32(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_33(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, nondef.11, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_36(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_37(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_37(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_NewDefault_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_40(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, nondef.13, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_41(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_44, v_10 - v_44, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_43(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_44(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_44(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_46))
		(?, 1)    eval_parse_aiff_header_bb8_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb8_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_45(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_46(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb10_in(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_'num_channels, v_'num_samples, v_'samp_freq, v_1, v_10, v_12, v_13, v_14, v_17, v_2, v_20, v_23, v_26, v_40, v_44, v_45, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46))
		(?, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14))
		(?, 1)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_chunkSize.0 <= 0 ]
		(?, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_chunkSize.0 > 0 ]
		(?, 1)    eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2))
		(?, 1)    eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)    eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46))
		(?, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14))
		(?, 1)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_chunkSize.0 <= 0 ]
		(?, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_chunkSize.0 > 0 ]
		(1, 1)    eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2))
		(1, 1)    eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)    eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)    eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)    eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)    eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)    eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)    eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_parse_aiff_header_bb10_in) = 1
	Pol(eval_parse_aiff_header_stop) = 0
	Pol(eval_parse_aiff_header_46) = 2
	Pol(eval_parse_aiff_header_45) = 3
	Pol(eval_aiff_check2_start) = 0
	Pol(eval_parse_aiff_header_bb8_in) = 4
	Pol(eval_parse_aiff_header_44) = 12
	Pol(eval_parse_aiff_header_bb2_in) = 12
	Pol(eval_parse_aiff_header_43) = 12
	Pol(eval_fskip_start) = 0
	Pol(eval_parse_aiff_header_41) = 12
	Pol(eval_parse_aiff_header_40) = 12
	Pol(eval_Read32BitsHighLow_start) = 0
	Pol(eval_parse_aiff_header_NewDefault_in) = 12
	Pol(eval_parse_aiff_header_37) = 5
	Pol(eval_parse_aiff_header_36) = 6
	Pol(eval_parse_aiff_header_33) = 7
	Pol(eval_parse_aiff_header_32) = 8
	Pol(eval_parse_aiff_header_30) = 9
	Pol(eval_parse_aiff_header_29) = 10
	Pol(eval_parse_aiff_header_28) = 11
	Pol(eval_parse_aiff_header_27) = 12
	Pol(eval_parse_aiff_header_26) = 12
	Pol(eval_parse_aiff_header_24) = 12
	Pol(eval_parse_aiff_header_23) = 12
	Pol(eval_ReadIeeeExtendedHighLow_start) = 0
	Pol(eval_parse_aiff_header_20) = 12
	Pol(eval_parse_aiff_header_19) = 12
	Pol(eval_Read16BitsHighLow_start) = 0
	Pol(eval_parse_aiff_header_16) = 12
	Pol(eval_parse_aiff_header_15) = 12
	Pol(eval_parse_aiff_header_12) = 12
	Pol(eval_parse_aiff_header_11) = 12
	Pol(eval_parse_aiff_header_9) = 12
	Pol(eval_parse_aiff_header_8) = 12
	Pol(eval_parse_aiff_header_7) = 12
	Pol(eval_parse_aiff_header_6) = 12
	Pol(eval_parse_aiff_header_4) = 12
	Pol(eval_parse_aiff_header_3) = 12
	Pol(eval_parse_aiff_header_2) = 12
	Pol(eval_parse_aiff_header_1) = 12
	Pol(eval_parse_aiff_header_0) = 12
	Pol(eval_llvm.memset.p0i8.i64_start) = 0
	Pol(eval_parse_aiff_header_bb0_in) = 12
	Pol(eval_parse_aiff_header_start) = 12
orients all transitions weakly and the transitions
	eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_chunkSize.0 <= 0 ]
	eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
strictly and produces the following problem:
4:	T:
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46))
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14))
		(12, 1)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_chunkSize.0 > 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2))
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_parse_aiff_header_11: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_12: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_15: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_16: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_19: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_20: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_23: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_24: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_26: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_27: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_3 + X_4 + 3 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_28: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_29: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_3: X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0
  For symbol eval_parse_aiff_header_30: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_32: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_33: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_36: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_37: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_4: X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0
  For symbol eval_parse_aiff_header_40: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_41: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_43: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_6 + X_7 + 3 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_44: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_6 + X_7 + 3 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_45: X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0
  For symbol eval_parse_aiff_header_46: X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0
  For symbol eval_parse_aiff_header_6: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_7: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_8: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_9: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_NewDefault_in: X_2 - X_8 + 4 >= 0 /\ X_8 - 1 >= 0 /\ X_2 + X_8 + 2 >= 0 /\ -X_2 + X_8 - 4 >= 0 /\ X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0 /\ X_2 + 3 >= 0
  For symbol eval_parse_aiff_header_bb10_in: X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0
  For symbol eval_parse_aiff_header_bb2_in: X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0
  For symbol eval_parse_aiff_header_bb8_in: X_1 - X_5 >= 0 /\ -X_1 + X_5 >= 0


This yielded the following problem:
5:	T:
		(1, 1)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) with all transitions in problem 5, the following new transition is obtained:
	eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
We thus obtain the following problem:
6:	T:
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_parse_aiff_header_bb0_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
We thus obtain the following problem:
7:	T:
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
8:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_parse_aiff_header_26(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
10:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_parse_aiff_header_23(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
12:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 12, the following new transition is obtained:
	eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
13:	T:
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 13, the following new transition is obtained:
	eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
14:	T:
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 14:
	eval_parse_aiff_header_19(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
15:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 15, the following new transition is obtained:
	eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
16:	T:
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 16, the following new transition is obtained:
	eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
17:	T:
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_parse_aiff_header_36(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
18:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 18, the following new transition is obtained:
	eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
19:	T:
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_parse_aiff_header_15(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
20:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 20, the following new transition is obtained:
	eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
21:	T:
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 21:
	eval_parse_aiff_header_43(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
22:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 22, the following new transition is obtained:
	eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
23:	T:
		(12, 2)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 23:
	eval_parse_aiff_header_32(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
24:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_11(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 24, the following new transition is obtained:
	eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
25:	T:
		(?, 2)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 25:
	eval_parse_aiff_header_11(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
26:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ] with all transitions in problem 26, the following new transition is obtained:
	eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
We thus obtain the following problem:
27:	T:
		(12, 2)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 27, the following new transition is obtained:
	eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
28:	T:
		(?, 2)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 28:
	eval_parse_aiff_header_40(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
29:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

By chaining the transition eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ] with all transitions in problem 29, the following new transition is obtained:
	eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
30:	T:
		(12, 2)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 30:
	eval_parse_aiff_header_28(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
We thus obtain the following problem:
31:	T:
		(12, 2)    eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_14)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_27(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_ReadIeeeExtendedHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_24(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_20(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_12(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_16(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_12 + v_14 + 3 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_37(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_46)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_44 + v_46 + 3 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_fskip_start(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0), eval_parse_aiff_header_44(v_1, v_10, v_12, v_14, v_2, v_44, v_10 - v_44, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_33(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 2)     eval_parse_aiff_header_9(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read16BitsHighLow_start(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_12(v_1, v_10, v_12, v_10 - v_12, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_30(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 2)    eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 2)     eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_41(v_1, v_10, v_12, v_14, v_2, nondef.13, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_9(v_1, v_10, nondef.3, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_aiff_check2_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_46(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 2)    eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_29(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_NewDefault_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(?, 1)     eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_8(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_45(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(?, 1)     eval_parse_aiff_header_6(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_7(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_10 - v_chunkSize.0 + 4 >= 0 /\ v_chunkSize.0 - 1 >= 0 /\ v_10 + v_chunkSize.0 + 2 >= 0 /\ -v_10 + v_chunkSize.0 - 4 >= 0 /\ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_10 + 3 >= 0 ]
		(12, 1)    eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb8_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 <= 0 ]
		(?, 1)     eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_6(v_1, v_chunkSize.0 - 4, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 /\ v_chunkSize.0 > 0 ]
		(12, 1)    eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_stop(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb2_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_2)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_bb10_in(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_4(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0)) [ v_1 - v_2 >= 0 /\ -v_1 + v_2 >= 0 ]
		(1, 1)     eval_parse_aiff_header_2(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_3(v_1, v_10, v_12, v_14, v_1, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_Read32BitsHighLow_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_2(nondef.0, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 1)     eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0), eval_parse_aiff_header_1(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
		(1, 2)     eval_parse_aiff_header_start(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0) -> Com_1(eval_parse_aiff_header_0(v_1, v_10, v_12, v_14, v_2, v_44, v_46, v_chunkSize.0))
	start location:	eval_parse_aiff_header_start
	leaf cost:	0

Complexity upper bound ?

Time: 28.870 sec (SMT: 11.487 sec)
