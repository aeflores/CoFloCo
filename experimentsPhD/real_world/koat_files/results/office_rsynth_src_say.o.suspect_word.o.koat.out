YES(?, 30*v_n + 9)

Initial complexity problem:
1:	T:
		(1, 1)    eval_suspect_word_start(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_bb0_in(v_23, v_4, v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb0_in(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_0(v_23, v_4, v_i.0, v_n))
		(?, 1)    eval_suspect_word_0(v_23, v_4, v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_23, v_4, v_i.0, v_n), eval_suspect_word_1(v_23, v_4, v_i.0, v_n))
		(?, 1)    eval_suspect_word_1(v_23, v_4, v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_23, v_4, v_i.0, v_n), eval_suspect_word_2(v_23, v_4, v_i.0, v_n))
		(?, 1)    eval_suspect_word_2(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_23, v_4, 0, v_n))
		(?, 1)    eval_suspect_word_bb1_in(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_23, nondef.0, v_i.0, v_n)) [ v_i.0 < v_n ]
		(?, 1)    eval_suspect_word_bb1_in(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_bb10_in(v_23, v_4, v_i.0, v_n)) [ v_i.0 >= v_n ]
		(?, 1)    eval_suspect_word_bb4_in(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_4, v_4, v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb4_in(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_23, v_4, v_i.0, v_n))
		(?, 1)    eval_suspect_word_19(v_23, v_4, v_i.0, v_n) -> Com_2(eval_toupper_start(v_23, v_4, v_i.0, v_n), eval_suspect_word_20(v_23, v_4, v_i.0, v_n))
		(?, 1)    eval_suspect_word_20(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_23, v_4, v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb6_in(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_23, v_4, v_i.0 + 1, v_n))
		(?, 1)    eval_suspect_word_bb10_in(v_23, v_4, v_i.0, v_n) -> Com_1(eval_suspect_word_stop(v_23, v_4, v_i.0, v_n))
	start location:	eval_suspect_word_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_i.0, v_n].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_suspect_word_bb10_in(v_i.0, v_n) -> Com_1(eval_suspect_word_stop(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb6_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_i.0 + 1, v_n))
		(?, 1)    eval_suspect_word_20(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n))
		(?, 1)    eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb10_in(v_i.0, v_n)) [ v_i.0 >= v_n ]
		(?, 1)    eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_i.0, v_n)) [ v_i.0 < v_n ]
		(?, 1)    eval_suspect_word_2(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(0, v_n))
		(?, 1)    eval_suspect_word_1(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_2(v_i.0, v_n))
		(?, 1)    eval_suspect_word_0(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_1(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb0_in(v_i.0, v_n) -> Com_1(eval_suspect_word_0(v_i.0, v_n))
		(1, 1)    eval_suspect_word_start(v_i.0, v_n) -> Com_1(eval_suspect_word_bb0_in(v_i.0, v_n))
	start location:	eval_suspect_word_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_suspect_word_bb10_in(v_i.0, v_n) -> Com_1(eval_suspect_word_stop(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb6_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_i.0 + 1, v_n))
		(?, 1)    eval_suspect_word_20(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n))
		(?, 1)    eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb10_in(v_i.0, v_n)) [ v_i.0 >= v_n ]
		(?, 1)    eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_i.0, v_n)) [ v_i.0 < v_n ]
		(1, 1)    eval_suspect_word_2(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(0, v_n))
		(1, 1)    eval_suspect_word_1(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_2(v_i.0, v_n))
		(1, 1)    eval_suspect_word_0(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_1(v_i.0, v_n))
		(1, 1)    eval_suspect_word_bb0_in(v_i.0, v_n) -> Com_1(eval_suspect_word_0(v_i.0, v_n))
		(1, 1)    eval_suspect_word_start(v_i.0, v_n) -> Com_1(eval_suspect_word_bb0_in(v_i.0, v_n))
	start location:	eval_suspect_word_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_suspect_word_bb10_in) = 1
	Pol(eval_suspect_word_stop) = 0
	Pol(eval_suspect_word_bb6_in) = 2
	Pol(eval_suspect_word_bb1_in) = 2
	Pol(eval_suspect_word_20) = 2
	Pol(eval_suspect_word_19) = 2
	Pol(eval_toupper_start) = 0
	Pol(eval_suspect_word_bb4_in) = 2
	Pol(eval_suspect_word_2) = 2
	Pol(eval_suspect_word_1) = 2
	Pol(eval___ctype_b_loc_start) = 0
	Pol(eval_suspect_word_0) = 2
	Pol(eval_suspect_word_bb0_in) = 2
	Pol(eval_suspect_word_start) = 2
orients all transitions weakly and the transitions
	eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb10_in(v_i.0, v_n)) [ v_i.0 >= v_n ]
	eval_suspect_word_bb10_in(v_i.0, v_n) -> Com_1(eval_suspect_word_stop(v_i.0, v_n))
strictly and produces the following problem:
4:	T:
		(2, 1)    eval_suspect_word_bb10_in(v_i.0, v_n) -> Com_1(eval_suspect_word_stop(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb6_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_i.0 + 1, v_n))
		(?, 1)    eval_suspect_word_20(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n))
		(?, 1)    eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n))
		(?, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_i.0, v_n))
		(2, 1)    eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb10_in(v_i.0, v_n)) [ v_i.0 >= v_n ]
		(?, 1)    eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_i.0, v_n)) [ v_i.0 < v_n ]
		(1, 1)    eval_suspect_word_2(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(0, v_n))
		(1, 1)    eval_suspect_word_1(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_2(v_i.0, v_n))
		(1, 1)    eval_suspect_word_0(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_1(v_i.0, v_n))
		(1, 1)    eval_suspect_word_bb0_in(v_i.0, v_n) -> Com_1(eval_suspect_word_0(v_i.0, v_n))
		(1, 1)    eval_suspect_word_start(v_i.0, v_n) -> Com_1(eval_suspect_word_bb0_in(v_i.0, v_n))
	start location:	eval_suspect_word_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_suspect_word_19: X_2 - 1 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 - 1 >= 0 /\ X_1 >= 0
  For symbol eval_suspect_word_20: X_2 - 1 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 - 1 >= 0 /\ X_1 >= 0
  For symbol eval_suspect_word_bb10_in: X_1 - X_2 >= 0 /\ X_1 >= 0
  For symbol eval_suspect_word_bb1_in: X_1 >= 0
  For symbol eval_suspect_word_bb4_in: X_2 - 1 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 - 1 >= 0 /\ X_1 >= 0
  For symbol eval_suspect_word_bb6_in: X_2 - 1 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 - 1 >= 0 /\ X_1 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_suspect_word_start(v_i.0, v_n) -> Com_1(eval_suspect_word_bb0_in(v_i.0, v_n))
		(1, 1)    eval_suspect_word_bb0_in(v_i.0, v_n) -> Com_1(eval_suspect_word_0(v_i.0, v_n))
		(1, 1)    eval_suspect_word_0(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_1(v_i.0, v_n))
		(1, 1)    eval_suspect_word_1(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_2(v_i.0, v_n))
		(1, 1)    eval_suspect_word_2(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(0, v_n))
		(?, 1)    eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_i.0, v_n)) [ v_i.0 >= 0 /\ v_i.0 < v_n ]
		(2, 1)    eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb10_in(v_i.0, v_n)) [ v_i.0 >= 0 /\ v_i.0 >= v_n ]
		(?, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_suspect_word_20(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_suspect_word_bb6_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_i.0 + 1, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(2, 1)    eval_suspect_word_bb10_in(v_i.0, v_n) -> Com_1(eval_suspect_word_stop(v_i.0, v_n)) [ v_i.0 - v_n >= 0 /\ v_i.0 >= 0 ]
	start location:	eval_suspect_word_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_suspect_word_bb6_in) = -5*V_1 + 5*V_2 - 4
	Pol(eval_suspect_word_bb1_in) = -5*V_1 + 5*V_2
	Pol(eval_suspect_word_bb4_in) = -5*V_1 + 5*V_2 - 1
	Pol(eval_suspect_word_19) = -5*V_1 + 5*V_2 - 2
	Pol(eval_suspect_word_20) = -5*V_1 + 5*V_2 - 3
	Pol(eval_toupper_start) = -5*V_1
and size complexities
	S("eval_suspect_word_bb10_in(v_i.0, v_n) -> Com_1(eval_suspect_word_stop(v_i.0, v_n)) [ v_i.0 - v_n >= 0 /\\ v_i.0 >= 0 ]", 0-0) = v_n
	S("eval_suspect_word_bb10_in(v_i.0, v_n) -> Com_1(eval_suspect_word_stop(v_i.0, v_n)) [ v_i.0 - v_n >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_n
	S("eval_suspect_word_bb6_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_i.0 + 1, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-0) = v_n
	S("eval_suspect_word_bb6_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_i.0 + 1, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_n
	S("eval_suspect_word_20(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-0) = v_n
	S("eval_suspect_word_20(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_n
	S("eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-0) = v_n
	S("eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_n
	S("eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 1-0) = v_n
	S("eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 1-1) = v_n
	S("eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-0) = v_n
	S("eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_n
	S("eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-0) = v_n
	S("eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_i.0, v_n)) [ v_n - 1 >= 0 /\\ v_i.0 + v_n - 1 >= 0 /\\ -v_i.0 + v_n - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_n
	S("eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb10_in(v_i.0, v_n)) [ v_i.0 >= 0 /\\ v_i.0 >= v_n ]", 0-0) = v_n
	S("eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb10_in(v_i.0, v_n)) [ v_i.0 >= 0 /\\ v_i.0 >= v_n ]", 0-1) = v_n
	S("eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_i.0, v_n)) [ v_i.0 >= 0 /\\ v_i.0 < v_n ]", 0-0) = v_n
	S("eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_i.0, v_n)) [ v_i.0 >= 0 /\\ v_i.0 < v_n ]", 0-1) = v_n
	S("eval_suspect_word_2(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(0, v_n))", 0-0) = 0
	S("eval_suspect_word_2(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(0, v_n))", 0-1) = v_n
	S("eval_suspect_word_1(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_2(v_i.0, v_n))", 0-0) = v_i.0
	S("eval_suspect_word_1(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_2(v_i.0, v_n))", 0-1) = v_n
	S("eval_suspect_word_1(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_2(v_i.0, v_n))", 1-0) = v_i.0
	S("eval_suspect_word_1(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_2(v_i.0, v_n))", 1-1) = v_n
	S("eval_suspect_word_0(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_1(v_i.0, v_n))", 0-0) = v_i.0
	S("eval_suspect_word_0(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_1(v_i.0, v_n))", 0-1) = v_n
	S("eval_suspect_word_0(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_1(v_i.0, v_n))", 1-0) = v_i.0
	S("eval_suspect_word_0(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_1(v_i.0, v_n))", 1-1) = v_n
	S("eval_suspect_word_bb0_in(v_i.0, v_n) -> Com_1(eval_suspect_word_0(v_i.0, v_n))", 0-0) = v_i.0
	S("eval_suspect_word_bb0_in(v_i.0, v_n) -> Com_1(eval_suspect_word_0(v_i.0, v_n))", 0-1) = v_n
	S("eval_suspect_word_start(v_i.0, v_n) -> Com_1(eval_suspect_word_bb0_in(v_i.0, v_n))", 0-0) = v_i.0
	S("eval_suspect_word_start(v_i.0, v_n) -> Com_1(eval_suspect_word_bb0_in(v_i.0, v_n))", 0-1) = v_n
orients the transitions
	eval_suspect_word_bb6_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_i.0 + 1, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_i.0, v_n)) [ v_i.0 >= 0 /\ v_i.0 < v_n ]
	eval_suspect_word_20(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
weakly and the transitions
	eval_suspect_word_bb6_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_i.0 + 1, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_i.0, v_n)) [ v_i.0 >= 0 /\ v_i.0 < v_n ]
	eval_suspect_word_20(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
strictly and produces the following problem:
6:	T:
		(1, 1)        eval_suspect_word_start(v_i.0, v_n) -> Com_1(eval_suspect_word_bb0_in(v_i.0, v_n))
		(1, 1)        eval_suspect_word_bb0_in(v_i.0, v_n) -> Com_1(eval_suspect_word_0(v_i.0, v_n))
		(1, 1)        eval_suspect_word_0(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_1(v_i.0, v_n))
		(1, 1)        eval_suspect_word_1(v_i.0, v_n) -> Com_2(eval___ctype_b_loc_start(v_i.0, v_n), eval_suspect_word_2(v_i.0, v_n))
		(1, 1)        eval_suspect_word_2(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(0, v_n))
		(5*v_n, 1)    eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb4_in(v_i.0, v_n)) [ v_i.0 >= 0 /\ v_i.0 < v_n ]
		(2, 1)        eval_suspect_word_bb1_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb10_in(v_i.0, v_n)) [ v_i.0 >= 0 /\ v_i.0 >= v_n ]
		(5*v_n, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_19(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(5*v_n, 1)    eval_suspect_word_bb4_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(5*v_n, 1)    eval_suspect_word_19(v_i.0, v_n) -> Com_2(eval_toupper_start(v_i.0, v_n), eval_suspect_word_20(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(5*v_n, 1)    eval_suspect_word_20(v_i.0, v_n) -> Com_1(eval_suspect_word_bb6_in(v_i.0, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(5*v_n, 1)    eval_suspect_word_bb6_in(v_i.0, v_n) -> Com_1(eval_suspect_word_bb1_in(v_i.0 + 1, v_n)) [ v_n - 1 >= 0 /\ v_i.0 + v_n - 1 >= 0 /\ -v_i.0 + v_n - 1 >= 0 /\ v_i.0 >= 0 ]
		(2, 1)        eval_suspect_word_bb10_in(v_i.0, v_n) -> Com_1(eval_suspect_word_stop(v_i.0, v_n)) [ v_i.0 - v_n >= 0 /\ v_i.0 >= 0 ]
	start location:	eval_suspect_word_start
	leaf cost:	0

Complexity upper bound 30*v_n + 9

Time: 0.117 sec (SMT: 0.097 sec)
