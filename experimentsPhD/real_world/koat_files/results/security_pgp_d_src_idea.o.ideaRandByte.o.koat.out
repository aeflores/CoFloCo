YES(?, 213)

Initial complexity problem:
1:	T:
		(1, 1)    eval_ideaRandByte_start(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb0_in(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_2(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_2(v_i.0, v_i.1) -> Com_2(eval_randPoolGetBytes_start(v_i.0, v_i.1), eval_ideaRandByte_3(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_3(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(0, v_i.1))
		(?, 1)    eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(v_i.0 + 1, v_i.1)) [ v_i.0 < 8 ]
		(?, 1)    eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_16(v_i.0, v_i.1)) [ v_i.0 >= 8 ]
		(?, 1)    eval_ideaRandByte_16(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_17(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_17(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, 0))
		(?, 1)    eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, v_i.1 + 1)) [ v_i.1 < 8 ]
		(?, 1)    eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_30(v_i.0, v_i.1)) [ v_i.1 >= 8 ]
		(?, 1)    eval_ideaRandByte_30(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_31(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_31(v_i.0, v_i.1) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_i.0, v_i.1), eval_ideaRandByte_32(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_32(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_bb8_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_stop(v_i.0, v_i.1))
	start location:	eval_ideaRandByte_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_ideaRandByte_start(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb0_in(v_i.0, v_i.1))
		(1, 1)    eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))
		(1, 1)    eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_2(v_i.0, v_i.1))
		(1, 1)    eval_ideaRandByte_2(v_i.0, v_i.1) -> Com_2(eval_randPoolGetBytes_start(v_i.0, v_i.1), eval_ideaRandByte_3(v_i.0, v_i.1))
		(1, 1)    eval_ideaRandByte_3(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(0, v_i.1))
		(?, 1)    eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(v_i.0 + 1, v_i.1)) [ v_i.0 < 8 ]
		(?, 1)    eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_16(v_i.0, v_i.1)) [ v_i.0 >= 8 ]
		(?, 1)    eval_ideaRandByte_16(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_17(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_17(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, 0))
		(?, 1)    eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, v_i.1 + 1)) [ v_i.1 < 8 ]
		(?, 1)    eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_30(v_i.0, v_i.1)) [ v_i.1 >= 8 ]
		(?, 1)    eval_ideaRandByte_30(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_31(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_31(v_i.0, v_i.1) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_i.0, v_i.1), eval_ideaRandByte_32(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_32(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))
		(?, 1)    eval_ideaRandByte_bb8_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_stop(v_i.0, v_i.1))
	start location:	eval_ideaRandByte_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_ideaRandByte_start) = 8
	Pol(eval_ideaRandByte_bb0_in) = 8
	Pol(eval_ideaRandByte_bb8_in) = 1
	Pol(eval_ideaRandByte_2) = 8
	Pol(eval_randPoolGetBytes_start) = 0
	Pol(eval_ideaRandByte_3) = 8
	Pol(eval_ideaRandByte_bb2_in) = 8
	Pol(eval_ideaRandByte_16) = 7
	Pol(eval_ideaCipher_start) = 0
	Pol(eval_ideaRandByte_17) = 6
	Pol(eval_ideaRandByte_bb5_in) = 5
	Pol(eval_ideaRandByte_30) = 4
	Pol(eval_ideaRandByte_31) = 3
	Pol(eval_llvm.memset.p0i8.i64_start) = 0
	Pol(eval_ideaRandByte_32) = 2
	Pol(eval_ideaRandByte_stop) = 0
orients all transitions weakly and the transitions
	eval_ideaRandByte_bb8_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_stop(v_i.0, v_i.1))
	eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_30(v_i.0, v_i.1)) [ v_i.1 >= 8 ]
	eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_16(v_i.0, v_i.1)) [ v_i.0 >= 8 ]
	eval_ideaRandByte_32(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))
	eval_ideaRandByte_31(v_i.0, v_i.1) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_i.0, v_i.1), eval_ideaRandByte_32(v_i.0, v_i.1))
	eval_ideaRandByte_30(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_31(v_i.0, v_i.1))
	eval_ideaRandByte_17(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, 0))
	eval_ideaRandByte_16(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_17(v_i.0, v_i.1))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_ideaRandByte_start(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb0_in(v_i.0, v_i.1))
		(1, 1)    eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))
		(1, 1)    eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_2(v_i.0, v_i.1))
		(1, 1)    eval_ideaRandByte_2(v_i.0, v_i.1) -> Com_2(eval_randPoolGetBytes_start(v_i.0, v_i.1), eval_ideaRandByte_3(v_i.0, v_i.1))
		(1, 1)    eval_ideaRandByte_3(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(0, v_i.1))
		(?, 1)    eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(v_i.0 + 1, v_i.1)) [ v_i.0 < 8 ]
		(8, 1)    eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_16(v_i.0, v_i.1)) [ v_i.0 >= 8 ]
		(8, 1)    eval_ideaRandByte_16(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_17(v_i.0, v_i.1))
		(8, 1)    eval_ideaRandByte_17(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, 0))
		(?, 1)    eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, v_i.1 + 1)) [ v_i.1 < 8 ]
		(8, 1)    eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_30(v_i.0, v_i.1)) [ v_i.1 >= 8 ]
		(8, 1)    eval_ideaRandByte_30(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_31(v_i.0, v_i.1))
		(8, 1)    eval_ideaRandByte_31(v_i.0, v_i.1) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_i.0, v_i.1), eval_ideaRandByte_32(v_i.0, v_i.1))
		(8, 1)    eval_ideaRandByte_32(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))
		(8, 1)    eval_ideaRandByte_bb8_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_stop(v_i.0, v_i.1))
	start location:	eval_ideaRandByte_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_ideaRandByte_bb5_in) = -V_2 + 8
	Pol(eval_ideaRandByte_bb2_in) = -V_1 + 8
and size complexities
	S("eval_ideaRandByte_bb8_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_stop(v_i.0, v_i.1))", 0-0) = v_i.0 + 8
	S("eval_ideaRandByte_bb8_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_stop(v_i.0, v_i.1))", 0-1) = v_i.1 + 8
	S("eval_ideaRandByte_32(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))", 0-0) = 8
	S("eval_ideaRandByte_32(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))", 0-1) = 8
	S("eval_ideaRandByte_31(v_i.0, v_i.1) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_i.0, v_i.1), eval_ideaRandByte_32(v_i.0, v_i.1))", 0-0) = 8
	S("eval_ideaRandByte_31(v_i.0, v_i.1) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_i.0, v_i.1), eval_ideaRandByte_32(v_i.0, v_i.1))", 0-1) = 8
	S("eval_ideaRandByte_31(v_i.0, v_i.1) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_i.0, v_i.1), eval_ideaRandByte_32(v_i.0, v_i.1))", 1-0) = 8
	S("eval_ideaRandByte_31(v_i.0, v_i.1) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_i.0, v_i.1), eval_ideaRandByte_32(v_i.0, v_i.1))", 1-1) = 8
	S("eval_ideaRandByte_30(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_31(v_i.0, v_i.1))", 0-0) = 8
	S("eval_ideaRandByte_30(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_31(v_i.0, v_i.1))", 0-1) = 8
	S("eval_ideaRandByte_30(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_31(v_i.0, v_i.1))", 1-0) = 8
	S("eval_ideaRandByte_30(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_31(v_i.0, v_i.1))", 1-1) = 8
	S("eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_30(v_i.0, v_i.1)) [ v_i.1 >= 8 ]", 0-0) = 8
	S("eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_30(v_i.0, v_i.1)) [ v_i.1 >= 8 ]", 0-1) = 8
	S("eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, v_i.1 + 1)) [ v_i.1 < 8 ]", 0-0) = 8
	S("eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, v_i.1 + 1)) [ v_i.1 < 8 ]", 0-1) = 8
	S("eval_ideaRandByte_17(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, 0))", 0-0) = 8
	S("eval_ideaRandByte_17(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, 0))", 0-1) = 0
	S("eval_ideaRandByte_16(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_17(v_i.0, v_i.1))", 0-0) = 8
	S("eval_ideaRandByte_16(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_17(v_i.0, v_i.1))", 0-1) = v_i.1
	S("eval_ideaRandByte_16(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_17(v_i.0, v_i.1))", 1-0) = 8
	S("eval_ideaRandByte_16(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_17(v_i.0, v_i.1))", 1-1) = v_i.1
	S("eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_16(v_i.0, v_i.1)) [ v_i.0 >= 8 ]", 0-0) = 8
	S("eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_16(v_i.0, v_i.1)) [ v_i.0 >= 8 ]", 0-1) = v_i.1
	S("eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(v_i.0 + 1, v_i.1)) [ v_i.0 < 8 ]", 0-0) = 8
	S("eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(v_i.0 + 1, v_i.1)) [ v_i.0 < 8 ]", 0-1) = v_i.1
	S("eval_ideaRandByte_3(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(0, v_i.1))", 0-0) = 0
	S("eval_ideaRandByte_3(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(0, v_i.1))", 0-1) = v_i.1
	S("eval_ideaRandByte_2(v_i.0, v_i.1) -> Com_2(eval_randPoolGetBytes_start(v_i.0, v_i.1), eval_ideaRandByte_3(v_i.0, v_i.1))", 0-0) = v_i.0
	S("eval_ideaRandByte_2(v_i.0, v_i.1) -> Com_2(eval_randPoolGetBytes_start(v_i.0, v_i.1), eval_ideaRandByte_3(v_i.0, v_i.1))", 0-1) = v_i.1
	S("eval_ideaRandByte_2(v_i.0, v_i.1) -> Com_2(eval_randPoolGetBytes_start(v_i.0, v_i.1), eval_ideaRandByte_3(v_i.0, v_i.1))", 1-0) = v_i.0
	S("eval_ideaRandByte_2(v_i.0, v_i.1) -> Com_2(eval_randPoolGetBytes_start(v_i.0, v_i.1), eval_ideaRandByte_3(v_i.0, v_i.1))", 1-1) = v_i.1
	S("eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_2(v_i.0, v_i.1))", 0-0) = v_i.0
	S("eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_2(v_i.0, v_i.1))", 0-1) = v_i.1
	S("eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))", 0-0) = v_i.0
	S("eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))", 0-1) = v_i.1
	S("eval_ideaRandByte_start(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb0_in(v_i.0, v_i.1))", 0-0) = v_i.0
	S("eval_ideaRandByte_start(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb0_in(v_i.0, v_i.1))", 0-1) = v_i.1
orients the transitions
	eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, v_i.1 + 1)) [ v_i.1 < 8 ]
	eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(v_i.0 + 1, v_i.1)) [ v_i.0 < 8 ]
weakly and the transitions
	eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, v_i.1 + 1)) [ v_i.1 < 8 ]
	eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(v_i.0 + 1, v_i.1)) [ v_i.0 < 8 ]
strictly and produces the following problem:
4:	T:
		(1, 1)     eval_ideaRandByte_start(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb0_in(v_i.0, v_i.1))
		(1, 1)     eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))
		(1, 1)     eval_ideaRandByte_bb0_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_2(v_i.0, v_i.1))
		(1, 1)     eval_ideaRandByte_2(v_i.0, v_i.1) -> Com_2(eval_randPoolGetBytes_start(v_i.0, v_i.1), eval_ideaRandByte_3(v_i.0, v_i.1))
		(1, 1)     eval_ideaRandByte_3(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(0, v_i.1))
		(72, 1)    eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb2_in(v_i.0 + 1, v_i.1)) [ v_i.0 < 8 ]
		(8, 1)     eval_ideaRandByte_bb2_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_16(v_i.0, v_i.1)) [ v_i.0 >= 8 ]
		(8, 1)     eval_ideaRandByte_16(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_17(v_i.0, v_i.1))
		(8, 1)     eval_ideaRandByte_17(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, 0))
		(72, 1)    eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb5_in(v_i.0, v_i.1 + 1)) [ v_i.1 < 8 ]
		(8, 1)     eval_ideaRandByte_bb5_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_30(v_i.0, v_i.1)) [ v_i.1 >= 8 ]
		(8, 1)     eval_ideaRandByte_30(v_i.0, v_i.1) -> Com_2(eval_ideaCipher_start(v_i.0, v_i.1), eval_ideaRandByte_31(v_i.0, v_i.1))
		(8, 1)     eval_ideaRandByte_31(v_i.0, v_i.1) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_i.0, v_i.1), eval_ideaRandByte_32(v_i.0, v_i.1))
		(8, 1)     eval_ideaRandByte_32(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_bb8_in(v_i.0, v_i.1))
		(8, 1)     eval_ideaRandByte_bb8_in(v_i.0, v_i.1) -> Com_1(eval_ideaRandByte_stop(v_i.0, v_i.1))
	start location:	eval_ideaRandByte_start
	leaf cost:	0

Complexity upper bound 213

Time: 0.071 sec (SMT: 0.062 sec)
