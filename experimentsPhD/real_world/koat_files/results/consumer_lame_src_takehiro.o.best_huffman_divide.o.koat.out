YES(?, 51029133238509848375582634407038714930818830422679974150728018229451837697690212259579251836904254379477883160400)

Initial complexity problem:
1:	T:
		(1, 1)    eval_best_huffman_divide_start(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb0_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_0(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_1(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_ch, v_gr, 2, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb1_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_ch, v_gr, v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 < 23 ]
		(?, 1)    eval_best_huffman_divide_bb1_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 < 23 ]
		(?, 1)    eval_best_huffman_divide_bb1_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_ch, v_gr, v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 >= 23 ]
		(?, 1)    eval_best_huffman_divide_15(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_16(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_ch, v_gr, v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb4_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_ch, v_gr, v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 <= 24 ]
		(?, 1)    eval_best_huffman_divide_bb4_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_ch, v_gr, v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 > 24 ]
		(?, 1)    eval_best_huffman_divide_bb7_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 < 16 ]
		(?, 1)    eval_best_huffman_divide_bb7_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 < 16 ]
		(?, 1)    eval_best_huffman_divide_bb7_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 16 ]
		(?, 1)    eval_best_huffman_divide_31(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_32(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_32(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, 0))
		(?, 1)    eval_best_huffman_divide_bb11_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 8 ]
		(?, 1)    eval_best_huffman_divide_53(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_54(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_54(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_64(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_65(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb15_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1))
		(?, 1)    eval_best_huffman_divide_bb17_in(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_ch, v_gr, v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_r0.0, v_r0.1, v_r0.2, v_r1.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1))
		(?, 1)    eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0))
		(?, 1)    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 16 ]
		(?, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 < 16 ]
		(?, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 < 16 ]
		(?, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 > 24 ]
		(?, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 <= 24 ]
		(?, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 >= 23 ]
		(?, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 < 23 ]
		(?, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 < 23 ]
		(?, 1)    eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1))
		(?, 1)    eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0))
		(?, 1)    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 16 ]
		(?, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 < 16 ]
		(?, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 < 16 ]
		(?, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 > 24 ]
		(?, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 <= 24 ]
		(?, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 >= 23 ]
		(?, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 < 23 ]
		(?, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 < 23 ]
		(1, 1)    eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_best_huffman_divide_bb17_in) = 1
	Pol(eval_best_huffman_divide_stop) = 0
	Pol(eval_best_huffman_divide_bb15_in) = 2
	Pol(eval_best_huffman_divide_bb11_in) = 2
	Pol(eval_best_huffman_divide_65) = 2
	Pol(eval_best_huffman_divide_64) = 2
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_best_huffman_divide_54) = 2
	Pol(eval_best_huffman_divide_53) = 2
	Pol(eval_choose_table_start) = 0
	Pol(eval_best_huffman_divide_bb7_in) = 2
	Pol(eval_best_huffman_divide_32) = 2
	Pol(eval_best_huffman_divide_31) = 2
	Pol(eval_best_huffman_divide_bb4_in) = 3
	Pol(eval_best_huffman_divide_16) = 4
	Pol(eval_best_huffman_divide_bb1_in) = 4
	Pol(eval_best_huffman_divide_15) = 4
	Pol(eval_best_huffman_divide_1) = 4
	Pol(eval_best_huffman_divide_0) = 4
	Pol(eval_best_huffman_divide_bb0_in) = 4
	Pol(eval_best_huffman_divide_start) = 4
orients all transitions weakly and the transitions
	eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 < 16 ]
	eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 16 ]
	eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 > 24 ]
	eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 < 23 ]
	eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 >= 23 ]
	eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
strictly and produces the following problem:
4:	T:
		(4, 1)    eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1))
		(?, 1)    eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0))
		(4, 1)    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(4, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 16 ]
		(?, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 < 16 ]
		(4, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 < 16 ]
		(4, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 > 24 ]
		(?, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 <= 24 ]
		(?, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0))
		(?, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(4, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 >= 23 ]
		(?, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 < 23 ]
		(4, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 < 23 ]
		(1, 1)    eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_best_huffman_divide_15: -X_1 + 22 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_16: -X_1 + 22 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_31: -X_3 + 15 >= 0 /\ X_2 - X_3 - 10 >= 0 /\ X_1 - X_3 + 13 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_32: -X_3 + 15 >= 0 /\ X_2 - X_3 - 10 >= 0 /\ X_1 - X_3 + 13 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_53: -X_4 + 7 >= 0 /\ X_3 - X_4 + 7 >= 0 /\ X_2 - X_4 - 18 >= 0 /\ X_1 - X_4 + 5 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 >= 0 /\ X_2 + X_4 - 25 >= 0 /\ X_1 + X_4 - 2 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_54: -X_4 + 7 >= 0 /\ X_3 - X_4 + 7 >= 0 /\ X_2 - X_4 - 18 >= 0 /\ X_1 - X_4 + 5 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 >= 0 /\ X_2 + X_4 - 25 >= 0 /\ X_1 + X_4 - 2 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_64: -X_4 + 7 >= 0 /\ X_3 - X_4 + 7 >= 0 /\ X_2 - X_4 - 18 >= 0 /\ X_1 - X_4 + 5 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 >= 0 /\ X_2 + X_4 - 25 >= 0 /\ X_1 + X_4 - 2 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_65: -X_4 + 7 >= 0 /\ X_3 - X_4 + 7 >= 0 /\ X_2 - X_4 - 18 >= 0 /\ X_1 - X_4 + 5 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 >= 0 /\ X_2 + X_4 - 25 >= 0 /\ X_1 + X_4 - 2 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_bb11_in: X_4 >= 0 /\ X_3 + X_4 >= 0 /\ X_2 + X_4 - 25 >= 0 /\ X_1 + X_4 - 2 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_bb15_in: -X_4 + 7 >= 0 /\ X_3 - X_4 + 7 >= 0 /\ X_2 - X_4 - 18 >= 0 /\ X_1 - X_4 + 5 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 >= 0 /\ X_2 + X_4 - 25 >= 0 /\ X_1 + X_4 - 2 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_bb17_in: X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_bb1_in: X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_bb4_in: X_2 - 2 >= 0 /\ X_1 + X_2 - 4 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0
  For symbol eval_best_huffman_divide_bb7_in: X_3 >= 0 /\ X_2 + X_3 - 25 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 - 25 >= 0 /\ X_1 + X_2 - 27 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 2 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)    eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(4, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(?, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(?, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(4, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(4, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)    eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 1)    eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)    eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)    eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)    eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)    eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_best_huffman_divide_bb7_in) = 0
	Pol(eval_best_huffman_divide_31) = 0
	Pol(eval_best_huffman_divide_bb4_in) = -V_2 + 25
	Pol(eval_best_huffman_divide_bb1_in) = -3*V_1 + 69
	Pol(eval_best_huffman_divide_15) = -3*V_1 + 68
	Pol(eval_best_huffman_divide_bb15_in) = 0
	Pol(eval_best_huffman_divide_bb11_in) = 0
	Pol(eval_best_huffman_divide_53) = 0
	Pol(eval_best_huffman_divide_65) = 0
	Pol(eval_best_huffman_divide_64) = 0
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_best_huffman_divide_54) = 0
	Pol(eval_choose_table_start) = 0
	Pol(eval_best_huffman_divide_32) = 0
	Pol(eval_best_huffman_divide_16) = -3*V_1 + 67
and size complexities
	S("eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 16
	S("eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = v_r1.0 + 16
	S("eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 8
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 7
	S("eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 7
	S("eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-0) = 24
	S("eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-1) = 25
	S("eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-2) = 15
	S("eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-3) = 7
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 7
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 7
	S("eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 7
	S("eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-0) = 24
	S("eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-1) = 25
	S("eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-2) = 15
	S("eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-3) = 7
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-2) = 16
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-3) = 8
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 ]", 0-3) = 7
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 ]", 0-3) = 7
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 0
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-0) = 24
	S("eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-1) = 25
	S("eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-2) = 15
	S("eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-2) = 16
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-3) = 8
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-2) = 0
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 23
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = v_r0.1
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 22
	S("eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = v_r0.1
	S("eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-0) = 22
	S("eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-1) = v_r0.1
	S("eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-2) = v_r0.2
	S("eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-0) = 23
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-1) = 23
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 ]", 0-0) = 22
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 ]", 0-1) = v_r0.1
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 ]", 0-0) = 22
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 ]", 0-1) = 22
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-0) = 2
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-1) = v_r0.1
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-2) = v_r0.2
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-3) = v_r1.0
	S("eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-0) = v_r0.0
	S("eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-1) = v_r0.1
	S("eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-2) = v_r0.2
	S("eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-3) = v_r1.0
	S("eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-0) = v_r0.0
	S("eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-1) = v_r0.1
	S("eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-2) = v_r0.2
	S("eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-3) = v_r1.0
	S("eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-0) = v_r0.0
	S("eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-1) = v_r0.1
	S("eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-3) = v_r1.0
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-0) = v_r0.0
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-1) = v_r0.1
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-2) = v_r0.2
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-3) = v_r1.0
orients the transitions
	eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
	eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
	eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
	eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
	eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
weakly and the transitions
	eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
	eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
	eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
strictly and produces the following problem:
6:	T:
		(1, 1)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 1)      eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) with all transitions in problem 6, the following new transition is obtained:
	eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
We thus obtain the following problem:
7:	T:
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 1)      eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 7:
	eval_best_huffman_divide_bb0_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
We thus obtain the following problem:
8:	T:
		(?, 1)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ] with all transitions in problem 9, the following new transition is obtained:
	eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
We thus obtain the following problem:
10:	T:
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_best_huffman_divide_64(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ] with all transitions in problem 12, the following new transition is obtained:
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
13:	T:
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ] with all transitions in problem 13, the following new transition is obtained:
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
We thus obtain the following problem:
14:	T:
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 14:
	eval_best_huffman_divide_53(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
15:	T:
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 ] with all transitions in problem 15, the following new transition is obtained:
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
We thus obtain the following problem:
16:	T:
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 16:
	eval_best_huffman_divide_bb15_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
17:	T:
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ] with all transitions in problem 17, the following new transition is obtained:
	eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
18:	T:
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ] with all transitions in problem 18, the following new transition is obtained:
	eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
We thus obtain the following problem:
19:	T:
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_best_huffman_divide_31(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
20:	T:
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ] with all transitions in problem 20, the following new transition is obtained:
	eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
We thus obtain the following problem:
21:	T:
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 21:
	eval_best_huffman_divide_bb17_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
22:	T:
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ] with all transitions in problem 22, the following new transition is obtained:
	eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
We thus obtain the following problem:
23:	T:
		(455, 2)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 23:
	eval_best_huffman_divide_15(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
We thus obtain the following problem:
24:	T:
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 2)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 ] with all transitions in problem 24, the following new transition is obtained:
	eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 ]
We thus obtain the following problem:
25:	T:
		(4, 2)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 2)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 ] with all transitions in problem 25, the following new transition is obtained:
	eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 2, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 ]
We thus obtain the following problem:
26:	T:
		(4, 3)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 2, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 2)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 2, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 ] with all transitions in problem 26, the following new transition is obtained:
	eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 /\ v_r0.0 >= 0 /\ 2*v_r0.0 - 2 >= 0 /\ 2 >= 0 /\ v_r0.0 + 2 <= 24 ]
We thus obtain the following problem:
27:	T:
		(4, 4)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 /\ v_r0.0 >= 0 /\ 2*v_r0.0 - 2 >= 0 /\ 2 >= 0 /\ v_r0.0 + 2 <= 24 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 2)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(1, 2)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

By chaining the transition eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) with all transitions in problem 27, the following new transition is obtained:
	eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
We thus obtain the following problem:
28:	T:
		(1, 3)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
		(4, 4)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 /\ v_r0.0 >= 0 /\ 2*v_r0.0 - 2 >= 0 /\ 2 >= 0 /\ v_r0.0 + 2 <= 24 ]
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 2)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 1)      eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 28:
	eval_best_huffman_divide_0(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
We thus obtain the following problem:
29:	T:
		(?, 2)      eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)      eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(?, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)      eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)    eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 4)      eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 /\ v_r0.0 >= 0 /\ 2*v_r0.0 - 2 >= 0 /\ 2 >= 0 /\ v_r0.0 + 2 <= 24 ]
		(455, 2)    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(1, 1)      eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 3)      eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

A separated polynomial rank function for exponential bounds with
	Pol(eval_best_huffman_divide_bb7_in) = 15*V_1 - 2*V_3 + 2
	Pol(eval_choose_table_start) = 15*V_1 - 2*V_3
	Pol(eval_best_huffman_divide_32) = 15*V_1 - 2*V_3 + 1
	Pol(eval_best_huffman_divide_bb11_in) = 15*V_1 - 2*V_3
	Pol(eval_best_huffman_divide_54) = 15*V_1 - 2*V_3
	Pol(eval_best_huffman_divide_65) = 15*V_1 - 2*V_3
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 15*V_1 - 2*V_3
and size complexities
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-0) = v_r0.0
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-1) = v_r0.1
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-2) = v_r0.2
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-3) = v_r1.0
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-0) = v_r0.0
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-1) = v_r0.1
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-2) = v_r0.2
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-3) = v_r1.0
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-0) = 2
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-1) = v_r0.1
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-2) = v_r0.2
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 0-0) = 22
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 0-1) = v_r0.1
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 1-0) = 22
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 1-1) = v_r0.1
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 1-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 1-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ 2*v_r0.0 - 4 >= 0 /\\ 0 >= 0 /\\ v_r0.0 <= 24 /\\ v_r0.0 - 1 >= 0 /\\ 2*v_r0.0 - 3 >= 0 /\\ 1 >= 0 /\\ v_r0.0 + 1 <= 24 /\\ v_r0.0 >= 0 /\\ 2*v_r0.0 - 2 >= 0 /\\ 2 >= 0 /\\ v_r0.0 + 2 <= 24 ]", 0-0) = 22
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ 2*v_r0.0 - 4 >= 0 /\\ 0 >= 0 /\\ v_r0.0 <= 24 /\\ v_r0.0 - 1 >= 0 /\\ 2*v_r0.0 - 3 >= 0 /\\ 1 >= 0 /\\ v_r0.0 + 1 <= 24 /\\ v_r0.0 >= 0 /\\ 2*v_r0.0 - 2 >= 0 /\\ 2 >= 0 /\\ v_r0.0 + 2 <= 24 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ 2*v_r0.0 - 4 >= 0 /\\ 0 >= 0 /\\ v_r0.0 <= 24 /\\ v_r0.0 - 1 >= 0 /\\ 2*v_r0.0 - 3 >= 0 /\\ 1 >= 0 /\\ v_r0.0 + 1 <= 24 /\\ v_r0.0 >= 0 /\\ 2*v_r0.0 - 2 >= 0 /\\ 2 >= 0 /\\ v_r0.0 + 2 <= 24 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ 2*v_r0.0 - 4 >= 0 /\\ 0 >= 0 /\\ v_r0.0 <= 24 /\\ v_r0.0 - 1 >= 0 /\\ 2*v_r0.0 - 3 >= 0 /\\ 1 >= 0 /\\ v_r0.0 + 1 <= 24 /\\ v_r0.0 >= 0 /\\ 2*v_r0.0 - 2 >= 0 /\\ 2 >= 0 /\\ v_r0.0 + 2 <= 24 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 23
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = v_r0.1
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-2) = 0
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-0) = 23
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-1) = 23
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 1-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 1-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 1-2) = 15
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 1-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 0
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-3) = 7
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 1-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 1-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 1-2) = 15
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 1-3) = 7
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-3) = 8
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 7
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-0) = 24
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-1) = 25
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-2) = 15
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-3) = 7
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 8
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-2) = 16
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-3) = 8
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-2) = 16
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-3) = 8
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 8
orients the transitions
	eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
	eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
weakly and the transitions
	eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
	eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
strictly and produces the following problem:
30:	T:
		(?, 2)                                                                                                                 eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)                                                                                                                 eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)                                                                                                                 eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(?, 2)                                                                                                                 eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)                                                                                                                 eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(?, 2)                                                                                                                 eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(?, 2)                                                                                                                 eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)                                                                                                                 eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232, 1)    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)                                                                                                                 eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232, 2)    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)                                                                                                                 eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)                                                                                                                 eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)                                                                                                               eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)                                                                                                               eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 4)                                                                                                                 eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 /\ v_r0.0 >= 0 /\ 2*v_r0.0 - 2 >= 0 /\ 2 >= 0 /\ v_r0.0 + 2 <= 24 ]
		(455, 2)                                                                                                               eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(1, 1)                                                                                                                 eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 3)                                                                                                                 eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_best_huffman_divide_bb11_in) = -7*V_4 + 52
	Pol(eval_choose_table_start) = -7*V_4
	Pol(eval_best_huffman_divide_54) = -7*V_4 + 51
	Pol(eval_best_huffman_divide_bb7_in) = -7*V_4
	Pol(eval_best_huffman_divide_65) = -7*V_4 + 50
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = -7*V_4
and size complexities
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-0) = v_r0.0
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-1) = v_r0.1
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-2) = v_r0.2
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 0-3) = v_r1.0
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-0) = v_r0.0
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-1) = v_r0.1
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-2) = v_r0.2
	S("eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))", 1-3) = v_r1.0
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-0) = 2
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-1) = v_r0.1
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-2) = v_r0.2
	S("eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 0-0) = 22
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 0-1) = v_r0.1
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 1-0) = 22
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 1-1) = v_r0.1
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 1-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ -v_r0.0 + 22 >= 0 ]", 1-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ 2*v_r0.0 - 4 >= 0 /\\ 0 >= 0 /\\ v_r0.0 <= 24 /\\ v_r0.0 - 1 >= 0 /\\ 2*v_r0.0 - 3 >= 0 /\\ 1 >= 0 /\\ v_r0.0 + 1 <= 24 /\\ v_r0.0 >= 0 /\\ 2*v_r0.0 - 2 >= 0 /\\ 2 >= 0 /\\ v_r0.0 + 2 <= 24 ]", 0-0) = 22
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ 2*v_r0.0 - 4 >= 0 /\\ 0 >= 0 /\\ v_r0.0 <= 24 /\\ v_r0.0 - 1 >= 0 /\\ 2*v_r0.0 - 3 >= 0 /\\ 1 >= 0 /\\ v_r0.0 + 1 <= 24 /\\ v_r0.0 >= 0 /\\ 2*v_r0.0 - 2 >= 0 /\\ 2 >= 0 /\\ v_r0.0 + 2 <= 24 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ 2*v_r0.0 - 4 >= 0 /\\ 0 >= 0 /\\ v_r0.0 <= 24 /\\ v_r0.0 - 1 >= 0 /\\ 2*v_r0.0 - 3 >= 0 /\\ 1 >= 0 /\\ v_r0.0 + 1 <= 24 /\\ v_r0.0 >= 0 /\\ 2*v_r0.0 - 2 >= 0 /\\ 2 >= 0 /\\ v_r0.0 + 2 <= 24 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 < 23 /\\ 2*v_r0.0 - 4 >= 0 /\\ 0 >= 0 /\\ v_r0.0 <= 24 /\\ v_r0.0 - 1 >= 0 /\\ 2*v_r0.0 - 3 >= 0 /\\ 1 >= 0 /\\ v_r0.0 + 1 <= 24 /\\ v_r0.0 >= 0 /\\ 2*v_r0.0 - 2 >= 0 /\\ 2 >= 0 /\\ v_r0.0 + 2 <= 24 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 23
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = v_r0.1
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 <= 24 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-2) = 0
	S("eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\\ v_r0.0 + v_r0.1 - 4 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.1 > 24 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-0) = 23
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-1) = 23
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-2) = v_r0.2
	S("eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\\ v_r0.0 >= 23 ]", 0-3) = v_r1.0
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 1-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 1-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 1-2) = 15
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 /\\ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 ]", 1-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 < 16 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 0
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\\ v_r0.1 - v_r0.2 - 10 >= 0 /\\ v_r0.0 - v_r0.2 + 13 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = v_r1.0 + 8
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-3) = 7
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 1-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 1-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 1-2) = 15
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 1-3) = 7
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 < 8 /\\ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 ]", 0-3) = 8
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 7
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-0) = 24
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-1) = 25
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-2) = 15
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 1-3) = 7
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 8
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-2) = 16
	S("eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r1.0 >= 8 ]", 0-3) = 8
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-0) = 24
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-1) = 25
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-2) = 16
	S("eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 /\\ v_r0.2 >= 16 ]", 0-3) = 8
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-0) = 24
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-1) = 25
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-2) = 15
	S("eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\\ v_r0.2 - v_r1.0 + 7 >= 0 /\\ v_r0.1 - v_r1.0 - 18 >= 0 /\\ v_r0.0 - v_r1.0 + 5 >= 0 /\\ v_r1.0 >= 0 /\\ v_r0.2 + v_r1.0 >= 0 /\\ v_r0.1 + v_r1.0 - 25 >= 0 /\\ v_r0.0 + v_r1.0 - 2 >= 0 /\\ v_r0.2 >= 0 /\\ v_r0.1 + v_r0.2 - 25 >= 0 /\\ v_r0.0 + v_r0.2 - 2 >= 0 /\\ v_r0.1 - 25 >= 0 /\\ v_r0.0 + v_r0.1 - 27 >= 0 /\\ -v_r0.0 + v_r0.1 >= 0 /\\ v_r0.0 - 2 >= 0 ]", 0-3) = 8
orients the transitions
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
	eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
weakly and the transitions
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
	eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
	eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
	eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
strictly and produces the following problem:
31:	T:
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)    eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)                                                                                                                   eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(?, 1)                                                                                                                   eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)    eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)                                                                                                                   eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232, 1)      eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)                                                                                                                   eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232, 2)      eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)                                                                                                                   eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)                                                                                                                   eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)                                                                                                                 eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)                                                                                                                 eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 4)                                                                                                                   eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 /\ v_r0.0 >= 0 /\ 2*v_r0.0 - 2 >= 0 /\ 2 >= 0 /\ v_r0.0 + 2 <= 24 ]
		(455, 2)                                                                                                                 eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(1, 1)                                                                                                                   eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 3)                                                                                                                   eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 31 produces the following problem:
32:	T:
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)     eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)                                                                                                                    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 >= 16 ]
		(11723924573206975473624287139172370440659407284150332794570796529888787453372125349770785399936765365535419400192, 1)    eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2 + 1, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 >= 8 ]
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)     eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)     eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_65(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 /\ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)     eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0 + 1)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(3907974857735658491208095713057456813553135761383444264856932176629595817790708449923595133312255121845139800064, 2)     eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_54(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r1.0 >= 0 /\ v_r0.2 + v_r1.0 >= 0 /\ v_r0.1 + v_r1.0 - 25 >= 0 /\ v_r0.0 + v_r1.0 - 2 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r1.0 < 8 /\ -v_r1.0 + 7 >= 0 /\ v_r0.2 - v_r1.0 + 7 >= 0 /\ v_r0.1 - v_r1.0 - 18 >= 0 /\ v_r0.0 - v_r1.0 + 5 >= 0 ]
		(4, 2)                                                                                                                    eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232, 1)       eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb11_in(v_r0.0, v_r0.1, v_r0.2, 0)) [ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 /\ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 2)                                                                                                                    eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_stop(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 ]
		(75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232, 2)       eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_32(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.2 >= 0 /\ v_r0.1 + v_r0.2 - 25 >= 0 /\ v_r0.0 + v_r0.2 - 2 >= 0 /\ v_r0.1 - 25 >= 0 /\ v_r0.0 + v_r0.1 - 27 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.2 < 16 /\ -v_r0.2 + 15 >= 0 /\ v_r0.1 - v_r0.2 - 10 >= 0 /\ v_r0.0 - v_r0.2 + 13 >= 0 ]
		(4, 1)                                                                                                                    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 >= 23 ]
		(4, 1)                                                                                                                    eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb7_in(v_r0.0, v_r0.1, 0, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 > 24 ]
		(455, 1)                                                                                                                  eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.1 + 1, v_r0.2, v_r1.0)) [ v_r0.1 - 2 >= 0 /\ v_r0.0 + v_r0.1 - 4 >= 0 /\ -v_r0.0 + v_r0.1 >= 0 /\ v_r0.0 - 2 >= 0 /\ v_r0.1 <= 24 ]
		(455, 1)                                                                                                                  eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(v_r0.0 + 1, v_r0.1, v_r0.2, v_r1.0)) [ -v_r0.0 + 22 >= 0 /\ v_r0.0 - 2 >= 0 ]
		(4, 4)                                                                                                                    eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb4_in(v_r0.0, v_r0.0 + 3, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ 2*v_r0.0 - 4 >= 0 /\ 0 >= 0 /\ v_r0.0 <= 24 /\ v_r0.0 - 1 >= 0 /\ 2*v_r0.0 - 3 >= 0 /\ 1 >= 0 /\ v_r0.0 + 1 <= 24 /\ v_r0.0 >= 0 /\ 2*v_r0.0 - 2 >= 0 /\ 2 >= 0 /\ v_r0.0 + 2 <= 24 ]
		(455, 2)                                                                                                                  eval_best_huffman_divide_bb1_in(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_choose_table_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_16(v_r0.0, v_r0.1, v_r0.2, v_r1.0)) [ v_r0.0 - 2 >= 0 /\ v_r0.0 < 23 /\ -v_r0.0 + 22 >= 0 ]
		(1, 1)                                                                                                                    eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_1(eval_best_huffman_divide_bb1_in(2, v_r0.1, v_r0.2, v_r1.0))
		(1, 3)                                                                                                                    eval_best_huffman_divide_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_r0.0, v_r0.1, v_r0.2, v_r1.0), eval_best_huffman_divide_1(v_r0.0, v_r0.1, v_r0.2, v_r1.0))
	start location:	eval_best_huffman_divide_start
	leaf cost:	0

Complexity upper bound 51029133238509848375582634407038714930818830422679974150728018229451837697690212259579251836904254379477883160400

Time: 6.865 sec (SMT: 4.943 sec)
