MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_cmd_write_buffer_start(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0) -> Com_1(eval_cmd_write_buffer_bb0_in(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0))
		(?, 1)    eval_cmd_write_buffer_bb0_in(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, nondef.1, nondef.2, v_7, v_band.0, v_cmd_end, v_code.0))
		(?, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, v_3, v_5, nondef.3, v_band.0, v_cmd_end, v_code.0))
		(?, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_3, v_5, v_7, 0, v_cmd_end, v_7))
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0) -> Com_1(eval_cmd_write_buffer_5(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0)) [ v_code.0 >= 0 /\ v_band.0 < v_1 ]
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0)) [ v_code.0 < 0 ]
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0)) [ v_band.0 >= v_1 ]
		(?, 1)    eval_cmd_write_buffer_5(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0))
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_3, v_5, v_7, v_band.0, v_cmd_end, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_3, v_5, v_7, v_band.0 + 1, v_cmd_end, v_13))
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_1, v_13, v_7, v_band.0, v_code.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13))
		(?, 1)    eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0))
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= v_1 ]
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_code.0 < 0 ]
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_code.0 >= 0 /\ v_band.0 < v_1 ]
		(?, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(?, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
		(?, 1)    eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0))
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13))
		(?, 1)    eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0))
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= v_1 ]
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_code.0 < 0 ]
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_code.0 >= 0 /\ v_band.0 < v_1 ]
		(1, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(1, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0))
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_cmd_write_buffer_6) = 1
	Pol(eval_cmd_write_buffer_bb1_in) = 1
	Pol(eval_cmd_write_buffer_5) = 1
	Pol(eval_cmd_write_band_start) = 0
	Pol(eval_cmd_write_buffer_stop) = 0
	Pol(eval_cmd_write_buffer_4) = 1
	Pol(eval_cmd_write_buffer_3) = 1
	Pol(eval_cmd_write_buffer_bb0_in) = 1
	Pol(eval_cmd_write_buffer_start) = 1
orients all transitions weakly and the transitions
	eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_code.0 < 0 ]
	eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= v_1 ]
strictly and produces the following problem:
4:	T:
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13))
		(?, 1)    eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= v_1 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_code.0 < 0 ]
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_code.0 >= 0 /\ v_band.0 < v_1 ]
		(1, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(1, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0))
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_cmd_write_buffer_5: X_5 >= 0 /\ X_4 + X_5 >= 0 /\ X_1 + X_5 - 1 >= 0 /\ X_1 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_cmd_write_buffer_6: X_5 >= 0 /\ X_4 + X_5 >= 0 /\ X_1 + X_5 - 1 >= 0 /\ X_1 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_cmd_write_buffer_bb1_in: X_4 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 >= 0 /\ v_band.0 < v_1 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 < 0 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_band.0 >= v_1 ]
		(?, 1)    eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

By chaining the transition eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0)) with all transitions in problem 5, the following new transition is obtained:
	eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
		(1, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 >= 0 /\ v_band.0 < v_1 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 < 0 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_band.0 >= v_1 ]
		(?, 1)    eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_cmd_write_buffer_bb0_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(?, 1)    eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_band.0 >= v_1 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 < 0 ]
		(?, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 >= 0 /\ v_band.0 < v_1 ]
		(1, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(1, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
		(1, 2)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

By chaining the transition eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 >= 0 /\ v_band.0 < v_1 ] with all transitions in problem 7, the following new transition is obtained:
	eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 >= 0 /\ v_band.0 < v_1 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
We thus obtain the following problem:
8:	T:
		(?, 2)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 >= 0 /\ v_band.0 < v_1 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(?, 1)    eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_band.0 >= v_1 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 < 0 ]
		(1, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(1, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
		(1, 2)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_cmd_write_buffer_5(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(?, 2)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 >= 0 /\ v_band.0 < v_1 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_band.0 >= v_1 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 < 0 ]
		(1, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(1, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
		(1, 2)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0))
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

By chaining the transition eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_3(nondef.0, v_13, v_7, v_band.0, v_code.0)) with all transitions in problem 9, the following new transition is obtained:
	eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(nondef.0, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(nondef.0, v_13, nondef.3, v_band.0, v_code.0))
We thus obtain the following problem:
10:	T:
		(1, 3)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(nondef.0, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(nondef.0, v_13, nondef.3, v_band.0, v_code.0))
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(?, 2)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 >= 0 /\ v_band.0 < v_1 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_band.0 >= v_1 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 < 0 ]
		(1, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(1, 1)    eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_cmd_write_buffer_3(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(v_1, v_13, nondef.3, v_band.0, v_code.0))
We thus obtain the following problem:
11:	T:
		(?, 1)    eval_cmd_write_buffer_6(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0 + 1, v_13)) [ v_code.0 >= 0 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_band.0 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(?, 2)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(v_1, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_6(v_1, nondef.4, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 >= 0 /\ v_band.0 < v_1 /\ v_band.0 + v_code.0 >= 0 /\ v_1 + v_code.0 - 1 >= 0 /\ v_1 - v_band.0 - 1 >= 0 /\ v_1 + v_band.0 - 1 >= 0 /\ v_1 - 1 >= 0 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_band.0 >= v_1 ]
		(1, 1)    eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_stop(v_1, v_13, v_7, v_band.0, v_code.0)) [ v_band.0 >= 0 /\ v_code.0 < 0 ]
		(1, 1)    eval_cmd_write_buffer_4(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_1(eval_cmd_write_buffer_bb1_in(v_1, v_13, v_7, 0, v_7))
		(1, 3)    eval_cmd_write_buffer_start(v_1, v_13, v_7, v_band.0, v_code.0) -> Com_2(eval_cmd_write_band_start(nondef.0, v_13, v_7, v_band.0, v_code.0), eval_cmd_write_buffer_4(nondef.0, v_13, nondef.3, v_band.0, v_code.0))
	start location:	eval_cmd_write_buffer_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.336 sec (SMT: 0.247 sec)
