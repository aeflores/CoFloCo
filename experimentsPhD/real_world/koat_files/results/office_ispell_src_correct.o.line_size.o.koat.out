MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb0_in(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_bb0_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
		(?, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_9(v_1, v_1 - nondef.2, v_12, v_width.0))
		(?, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_9(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_11, v_12, v_width.0), eval_line_size_10(v_1, v_11, nondef.3, v_width.0))
		(?, 1)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12))
		(?, 1)    eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
	start location:	eval_line_size_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb0_in(v_1, v_11, v_12, v_width.0))
		(1, 1)    eval_line_size_bb0_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
		(?, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_9(v_1, v_1 - nondef.2, v_12, v_width.0))
		(?, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_9(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_11, v_12, v_width.0), eval_line_size_10(v_1, v_11, nondef.3, v_width.0))
		(?, 1)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12))
		(?, 1)    eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
	start location:	eval_line_size_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_line_size_start) = 2
	Pol(eval_line_size_bb0_in) = 2
	Pol(eval_line_size_bb1_in) = 2
	Pol(eval_line_size_9) = 2
	Pol(eval_line_size_bb4_in) = 1
	Pol(eval_show_char_start) = 0
	Pol(eval_line_size_10) = 2
	Pol(eval_line_size_stop) = 0
orients all transitions weakly and the transitions
	eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
	eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb0_in(v_1, v_11, v_12, v_width.0))
		(1, 1)    eval_line_size_bb0_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
		(?, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_9(v_1, v_1 - nondef.2, v_12, v_width.0))
		(2, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_9(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_11, v_12, v_width.0), eval_line_size_10(v_1, v_11, nondef.3, v_width.0))
		(?, 1)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12))
		(2, 1)    eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
	start location:	eval_line_size_start
	leaf cost:	0

By chaining the transition eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb0_in(v_1, v_11, v_12, v_width.0)) with all transitions in problem 3, the following new transition is obtained:
	eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
We thus obtain the following problem:
4:	T:
		(1, 2)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
		(1, 1)    eval_line_size_bb0_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
		(?, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_9(v_1, v_1 - nondef.2, v_12, v_width.0))
		(2, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_9(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_11, v_12, v_width.0), eval_line_size_10(v_1, v_11, nondef.3, v_width.0))
		(?, 1)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12))
		(2, 1)    eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
	start location:	eval_line_size_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 4:
	eval_line_size_bb0_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
We thus obtain the following problem:
5:	T:
		(?, 1)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12))
		(2, 1)    eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_9(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_11, v_12, v_width.0), eval_line_size_10(v_1, v_11, nondef.3, v_width.0))
		(2, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_9(v_1, v_1 - nondef.2, v_12, v_width.0))
		(1, 2)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
	start location:	eval_line_size_start
	leaf cost:	0

By chaining the transition eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0)) with all transitions in problem 5, the following new transition is obtained:
	eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
We thus obtain the following problem:
6:	T:
		(2, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12))
		(2, 1)    eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_9(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_11, v_12, v_width.0), eval_line_size_10(v_1, v_11, nondef.3, v_width.0))
		(?, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_9(v_1, v_1 - nondef.2, v_12, v_width.0))
		(1, 2)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
	start location:	eval_line_size_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_line_size_bb4_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12))
		(?, 1)    eval_line_size_9(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_11, v_12, v_width.0), eval_line_size_10(v_1, v_11, nondef.3, v_width.0))
		(2, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
		(?, 1)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_9(v_1, v_1 - nondef.2, v_12, v_width.0))
		(1, 2)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
	start location:	eval_line_size_start
	leaf cost:	0

By chaining the transition eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_9(v_1, v_1 - nondef.2, v_12, v_width.0)) with all transitions in problem 7, the following new transition is obtained:
	eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0))
We thus obtain the following problem:
8:	T:
		(?, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0))
		(?, 1)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12))
		(?, 1)    eval_line_size_9(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_11, v_12, v_width.0), eval_line_size_10(v_1, v_11, nondef.3, v_width.0))
		(2, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
		(1, 2)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
	start location:	eval_line_size_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_line_size_9(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_11, v_12, v_width.0), eval_line_size_10(v_1, v_11, nondef.3, v_width.0))
We thus obtain the following problem:
9:	T:
		(?, 1)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12))
		(?, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0))
		(2, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
		(1, 2)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
	start location:	eval_line_size_start
	leaf cost:	0

By chaining the transition eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0 + v_12)) with all transitions in problem 9, the following new transitions are obtained:
	eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0 + v_12), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0 + v_12))
	eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0 + v_12))
We thus obtain the following problem:
10:	T:
		(?, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0 + v_12), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0 + v_12))
		(?, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0 + v_12))
		(?, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0))
		(2, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
		(1, 2)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
	start location:	eval_line_size_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 10 produces the following problem:
11:	T:
		(?, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0 + v_12), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0 + v_12))
		(?, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0 + v_12))
		(1, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0))
		(2, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
		(1, 2)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
	start location:	eval_line_size_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_line_size_10) = 1
	Pol(eval_show_char_start) = 0
	Pol(eval_line_size_stop) = 0
	Pol(eval_line_size_bb1_in) = 1
	Pol(eval_line_size_start) = 1
orients all transitions weakly and the transition
	eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0 + v_12))
strictly and produces the following problem:
12:	T:
		(?, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0 + v_12), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0 + v_12))
		(1, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0 + v_12))
		(1, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0))
		(2, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
		(1, 2)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0))
	start location:	eval_line_size_start
	leaf cost:	0

By chaining the transition eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_bb1_in(nondef.0, v_11, v_12, 0)) with all transitions in problem 12, the following new transitions are obtained:
	eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(nondef.0, nondef.0 - nondef.2, v_12, 0), eval_line_size_10(nondef.0, nondef.0 - nondef.2, nondef.3, 0))
	eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(nondef.0, v_11, v_12, 0))
We thus obtain the following problem:
13:	T:
		(1, 4)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(nondef.0, nondef.0 - nondef.2, v_12, 0), eval_line_size_10(nondef.0, nondef.0 - nondef.2, nondef.3, 0))
		(1, 4)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(nondef.0, v_11, v_12, 0))
		(?, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0 + v_12), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0 + v_12))
		(1, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0 + v_12))
		(1, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0))
		(2, 2)    eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
	start location:	eval_line_size_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 13:
	eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0))
	eval_line_size_bb1_in(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0))
We thus obtain the following problem:
14:	T:
		(1, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(v_1, v_11, v_12, v_width.0 + v_12))
		(?, 3)    eval_line_size_10(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(v_1, v_1 - nondef.2, v_12, v_width.0 + v_12), eval_line_size_10(v_1, v_1 - nondef.2, nondef.3, v_width.0 + v_12))
		(1, 4)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_1(eval_line_size_stop(nondef.0, v_11, v_12, 0))
		(1, 4)    eval_line_size_start(v_1, v_11, v_12, v_width.0) -> Com_2(eval_show_char_start(nondef.0, nondef.0 - nondef.2, v_12, 0), eval_line_size_10(nondef.0, nondef.0 - nondef.2, nondef.3, 0))
	start location:	eval_line_size_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.799 sec (SMT: 0.675 sec)
