MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_longest_match_start(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb0_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
		(?, 1)    eval_longest_match_bb0_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb2_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
		(?, 1)    eval_longest_match_bb2_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb3_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb9_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb5_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, -1)
		(?, 1)    eval_longest_match_bb5_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb5_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_.critedge_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_.critedge_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 1)    eval_longest_match_.critedge_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb12_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
		(?, 1)    eval_longest_match_.critedge_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb9_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
		(?, 1)    eval_longest_match_bb9_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb11_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
		(?, 1)    eval_longest_match_bb11_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb3_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
		(?, 1)    eval_longest_match_bb11_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_bb12_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
		(?, 1)    eval_longest_match_bb12_in(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0) -> eval_longest_match_stop(v_'good_match, v_'match_start, v_'max_chain_length, v_'prev_length, v_'strstart, v_cur_match, v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_len.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_longest_match_bb12_in(v_len.0) -> eval_longest_match_stop(v_len.0)
		(?, 1)    eval_longest_match_bb11_in(v_len.0) -> eval_longest_match_bb12_in(v_len.0)
		(?, 1)    eval_longest_match_bb11_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb11_in(v_len.0)
		(?, 1)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb12_in(v_len.0)
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_longest_match_bb11_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb11_in(v_len.0)
		(?, 1)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(?, 1)    eval_longest_match_bb11_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb11_in(v_len.0)
		(?, 1)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

By chaining the transition eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb11_in(v_len.0) with all transitions in problem 4, the following new transition is obtained:
	eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb11_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 5:
	eval_longest_match_bb11_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
6:	T:
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 1)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 2)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

By chaining the transition eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 >= 255 ] with all transitions in problem 6, the following new transition is obtained:
	eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0) [ v_len.0 + 4 >= 255 ]
We thus obtain the following problem:
7:	T:
		(?, 2)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 1)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 2)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

By chaining the transition eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0) [ v_len.0 + 4 >= 255 ] with all transitions in problem 7, the following new transition is obtained:
	eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
We thus obtain the following problem:
8:	T:
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 1)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 2)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

By chaining the transition eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0) with all transitions in problem 8, the following new transition is obtained:
	eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
9:	T:
		(?, 3)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 2)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

By chaining the transition eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_.critedge_in(v_len.0) [ v_len.0 + 4 < 255 ] with all transitions in problem 9, the following new transition is obtained:
	eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 < 255 ]
We thus obtain the following problem:
10:	T:
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 3)    eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 2)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_longest_match_.critedge_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
11:	T:
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 2)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

By chaining the transition eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb9_in(v_len.0) with all transitions in problem 11, the following new transition is obtained:
	eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
12:	T:
		(?, 3)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 2)    eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_longest_match_bb9_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
13:	T:
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 3)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

By chaining the transition eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb2_in(v_len.0) with all transitions in problem 13, the following new transition is obtained:
	eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
14:	T:
		(1, 2)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 3)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 1)    eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 14:
	eval_longest_match_bb2_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
15:	T:
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 3)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 2)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(1, 1)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

By chaining the transition eval_longest_match_start(v_len.0) -> eval_longest_match_bb0_in(v_len.0) with all transitions in problem 15, the following new transition is obtained:
	eval_longest_match_start(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
16:	T:
		(1, 3)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 3)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 2)    eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 16:
	eval_longest_match_bb0_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
We thus obtain the following problem:
17:	T:
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 >= 255 ]
		(?, 4)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0) [ v_len.0 + 4 < 255 ]
		(?, 1)    eval_longest_match_bb5_in(v_len.0) -> eval_longest_match_bb5_in(v_len.0 + 4) [ v_len.0 + 4 < 255 ]
		(?, 3)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
		(?, 1)    eval_longest_match_bb3_in(v_len.0) -> eval_longest_match_bb5_in(-1)
		(1, 3)    eval_longest_match_start(v_len.0) -> eval_longest_match_bb3_in(v_len.0)
	start location:	eval_longest_match_start
	leaf cost:	3

Complexity upper bound ?

Time: 0.535 sec (SMT: 0.454 sec)
