MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)
		(?, 1)    eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
		(?, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
		(?, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_stop(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) [ v_row.0 >= v_num_rows ]
		(?, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(?, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]
		(?, 1)    eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(?, 1)    eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
	start location:	eval_color_quantize_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)
		(?, 1)    eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
		(?, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
		(?, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(?, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]
		(?, 1)    eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(?, 1)    eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
	start location:	eval_color_quantize_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)
		(1, 1)    eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
		(?, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
		(?, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(?, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]
		(?, 1)    eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(?, 1)    eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
	start location:	eval_color_quantize_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_color_quantize_start) = V_5 + 1
	Pol(eval_color_quantize_bb0_in) = V_5 + 1
	Pol(eval_color_quantize_bb1_in) = V_5 - V_6 + 1
	Pol(eval_color_quantize_bb3_in) = V_5 - V_6
	Pol(eval_color_quantize_bb4_in) = V_5 - V_6
orients all transitions weakly and the transition
	eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
strictly and produces the following problem:
4:	T:
		(1, 1)                 eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)
		(1, 1)                 eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
		(v_num_rows + 1, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
	start location:	eval_color_quantize_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_color_quantize_bb4_in) = 1
	Pol(eval_color_quantize_bb3_in) = 1
	Pol(eval_color_quantize_bb1_in) = 0
and size complexities
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]", 0-0) = ?
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]", 0-1) = ?
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]", 0-2) = ?
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]", 0-3) = ?
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]", 0-4) = v_num_rows
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]", 0-5) = ?
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]", 0-0) = ?
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]", 0-1) = ?
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]", 0-2) = ?
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]", 0-3) = ?
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]", 0-4) = v_num_rows
	S("eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]", 0-5) = ?
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]", 0-0) = ?
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]", 0-1) = ?
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]", 0-2) = ?
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]", 0-3) = ?
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]", 0-4) = v_num_rows
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]", 0-5) = ?
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]", 0-0) = ?
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]", 0-1) = ?
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]", 0-2) = 0
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]", 0-3) = ?
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]", 0-4) = v_num_rows
	S("eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]", 0-5) = ?
	S("eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]", 0-0) = ?
	S("eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]", 0-1) = ?
	S("eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]", 0-2) = ?
	S("eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]", 0-3) = ?
	S("eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]", 0-4) = v_num_rows
	S("eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]", 0-5) = ?
	S("eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)", 0-0) = ?
	S("eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)", 0-1) = ?
	S("eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)", 0-2) = v_ci.0
	S("eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)", 0-3) = v_col.0
	S("eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)", 0-4) = v_num_rows
	S("eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)", 0-5) = 0
	S("eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)", 0-0) = v_6
	S("eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)", 0-1) = v_8
	S("eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)", 0-2) = v_ci.0
	S("eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)", 0-3) = v_col.0
	S("eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)", 0-4) = v_num_rows
	S("eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)", 0-5) = v_row.0
orients the transitions
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
	eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
	eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]
weakly and the transition
	eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]
strictly and produces the following problem:
5:	T:
		(1, 1)                 eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0)
		(1, 1)                 eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
		(v_num_rows + 1, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(v_num_rows + 1, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) with all transitions in problem 5, the following new transition is obtained:
	eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
We thus obtain the following problem:
6:	T:
		(1, 2)                 eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
		(1, 1)                 eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
		(v_num_rows + 1, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(v_num_rows + 1, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
	start location:	eval_color_quantize_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_color_quantize_bb0_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
We thus obtain the following problem:
7:	T:
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(v_num_rows + 1, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
		(1, 2)                 eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
We thus obtain the following problem:
8:	T:
		(v_num_rows + 1, 2)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(v_num_rows + 1, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
		(1, 2)                 eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0) with all transitions in problem 8, the following new transition is obtained:
	eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
We thus obtain the following problem:
9:	T:
		(1, 3)                 eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
		(v_num_rows + 1, 2)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(v_num_rows + 1, 1)    eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_color_quantize_bb1_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0) [ v_row.0 < v_num_rows ]
We thus obtain the following problem:
10:	T:
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                 eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 ] with all transitions in problem 10, the following new transitions are obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows ]
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
We thus obtain the following problem:
11:	T:
		(?, 3)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(?, 2)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                 eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_color_quantize_bb4_in) = V_5 - V_6
	Pol(eval_color_quantize_bb3_in) = V_5 - V_6
	Pol(eval_color_quantize_start) = V_5
orients all transitions weakly and the transition
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows ]
strictly and produces the following problem:
12:	T:
		(v_num_rows, 3)        eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(?, 2)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                 eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(?, 1)                 eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                 eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 12 produces the following problem:
13:	T:
		(v_num_rows, 3)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows ] with all transitions in problem 13, the following new transitions are obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 2) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows ]
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
We thus obtain the following problem:
14:	T:
		(v_num_rows, 5)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 2) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 2) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows ] with all transitions in problem 14, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 3) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows ]
We thus obtain the following problem:
15:	T:
		(v_num_rows, 7)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 3) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 3) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows ] with all transitions in problem 15, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 4) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows ]
We thus obtain the following problem:
16:	T:
		(v_num_rows, 9)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 4) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 4) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows ] with all transitions in problem 16, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 5) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows ]
We thus obtain the following problem:
17:	T:
		(v_num_rows, 11)         eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 5) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 5) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows ] with all transitions in problem 17, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 6) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows ]
We thus obtain the following problem:
18:	T:
		(v_num_rows, 13)         eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 6) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 6) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows ] with all transitions in problem 18, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 7) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows ]
We thus obtain the following problem:
19:	T:
		(v_num_rows, 15)         eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 7) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 7) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows ] with all transitions in problem 19, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 8) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows ]
We thus obtain the following problem:
20:	T:
		(v_num_rows, 17)         eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 8) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 8) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows ] with all transitions in problem 20, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 9) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows ]
We thus obtain the following problem:
21:	T:
		(v_num_rows, 19)         eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 9) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 9) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows ] with all transitions in problem 21, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 10) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows /\ v_row.0 + 10 < v_num_rows ]
We thus obtain the following problem:
22:	T:
		(v_num_rows, 21)         eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 10) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows /\ v_row.0 + 10 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 10) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows /\ v_row.0 + 10 < v_num_rows ] with all transitions in problem 22, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 11) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows /\ v_row.0 + 10 < v_num_rows /\ v_row.0 + 11 < v_num_rows ]
We thus obtain the following problem:
23:	T:
		(v_num_rows, 23)         eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 11) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows /\ v_row.0 + 10 < v_num_rows /\ v_row.0 + 11 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

By chaining the transition eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 11) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows /\ v_row.0 + 10 < v_num_rows /\ v_row.0 + 11 < v_num_rows ] with all transitions in problem 23, the following new transition is obtained:
	eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 12) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows /\ v_row.0 + 10 < v_num_rows /\ v_row.0 + 11 < v_num_rows /\ v_row.0 + 12 < v_num_rows ]
We thus obtain the following problem:
24:	T:
		(v_num_rows, 25)         eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 12) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 <= 0 /\ v_row.0 + 2 < v_num_rows /\ v_row.0 + 3 < v_num_rows /\ v_row.0 + 4 < v_num_rows /\ v_row.0 + 5 < v_num_rows /\ v_row.0 + 6 < v_num_rows /\ v_row.0 + 7 < v_num_rows /\ v_row.0 + 8 < v_num_rows /\ v_row.0 + 9 < v_num_rows /\ v_row.0 + 10 < v_num_rows /\ v_row.0 + 11 < v_num_rows /\ v_row.0 + 12 < v_num_rows ]
		(v_num_rows, 4)          eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_6, v_num_rows, v_row.0 + 1) [ v_ci.0 >= v_8 /\ v_col.0 - 1 <= 0 /\ v_row.0 + 1 < v_num_rows /\ v_6 > 0 ]
		(?, 2)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0 - 1, v_num_rows, v_row.0) [ v_ci.0 >= v_8 /\ v_col.0 - 1 > 0 ]
		(?, 1)                   eval_color_quantize_bb4_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0) [ v_ci.0 < v_8 ]
		(v_num_rows + 1, 2)      eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_6, v_num_rows, v_row.0 + 1) [ v_col.0 <= 0 /\ v_row.0 + 1 < v_num_rows ]
		(2*v_num_rows + 2, 1)    eval_color_quantize_bb3_in(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb4_in(v_6, v_8, 0, v_col.0, v_num_rows, v_row.0) [ v_col.0 > 0 ]
		(1, 3)                   eval_color_quantize_start(v_6, v_8, v_ci.0, v_col.0, v_num_rows, v_row.0) -> eval_color_quantize_bb3_in(nondef.0, nondef.1, v_ci.0, nondef.0, v_num_rows, 0) [ 0 < v_num_rows ]
	start location:	eval_color_quantize_start
	leaf cost:	1

Complexity upper bound ?

Time: 3.137 sec (SMT: 2.422 sec)
