MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_5(v_i.0, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb8_in(v_i.0, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ v_i.0 < 0 ]
		(?, 1)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ v_i.0 > 0 ]
		(?, 1)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb8_in(v_i.0, v_index, v_new_size) [ v_i.0 = 0 ]
		(?, 1)    eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_bb8_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_stop(v_i.0, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_5(v_i.0, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ v_i.0 < 0 ]
		(?, 1)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ v_i.0 > 0 ]
		(?, 1)    eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
		(1, 1)    eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(1, 1)    eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_5(v_i.0, v_index, v_new_size)
		(1, 1)    eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(?, 1)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ v_i.0 < 0 ]
		(?, 1)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ v_i.0 > 0 ]
		(?, 1)    eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

A polynomial rank function with
	Pol(eval_scan_bos_resize_start) = V_2
	Pol(eval_scan_bos_resize_bb0_in) = V_2
	Pol(eval_scan_bos_resize_4) = V_2
	Pol(eval_scan_bos_resize_5) = V_2
	Pol(eval_scan_bos_resize_bb3_in) = V_1
	Pol(eval_scan_bos_resize_bb7_in) = V_1 - 1
orients all transitions weakly and the transition
	eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ v_i.0 > 0 ]
strictly and produces the following problem:
4:	T:
		(1, 1)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_5(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(?, 1)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ v_i.0 < 0 ]
		(v_index, 1)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ v_i.0 > 0 ]
		(?, 1)          eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_scan_bos_resize_bb3_in: -X_1 + X_2 >= 0
  For symbol eval_scan_bos_resize_bb7_in: -X_1 + X_2 >= 0


This yielded the following problem:
5:	T:
		(?, 1)          eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 ]
		(v_index, 1)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(?, 1)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(1, 1)          eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_5(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
We thus obtain the following problem:
6:	T:
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(?, 1)          eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 ]
		(?, 1)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(1, 1)          eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_5(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
We thus obtain the following problem:
7:	T:
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(?, 1)          eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 ]
		(1, 1)          eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_5(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 7:
	eval_scan_bos_resize_bb7_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 ]
We thus obtain the following problem:
8:	T:
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(1, 1)          eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_5(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) with all transitions in problem 8, the following new transition is obtained:
	eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
We thus obtain the following problem:
9:	T:
		(1, 2)          eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(1, 1)          eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_scan_bos_resize_5(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
We thus obtain the following problem:
10:	T:
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(1, 2)          eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) with all transitions in problem 10, the following new transition is obtained:
	eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
We thus obtain the following problem:
11:	T:
		(1, 3)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(1, 2)          eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_scan_bos_resize_4(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
We thus obtain the following problem:
12:	T:
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(1, 3)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(1, 1)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) with all transitions in problem 12, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
We thus obtain the following problem:
13:	T:
		(1, 4)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(1, 3)          eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_scan_bos_resize_bb0_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
We thus obtain the following problem:
14:	T:
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
		(1, 4)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size)
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index, v_index, v_new_size) with all transitions in problem 14, the following new transitions are obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 ]
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
We thus obtain the following problem:
15:	T:
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 ] with all transitions in problem 15, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 2, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 ]
We thus obtain the following problem:
16:	T:
		(1, 8)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 2, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 2, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 ] with all transitions in problem 16, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 3, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 ]
We thus obtain the following problem:
17:	T:
		(1, 10)         eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 3, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 3, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 ] with all transitions in problem 17, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 4, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 ]
We thus obtain the following problem:
18:	T:
		(1, 12)         eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 4, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 4, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 ] with all transitions in problem 18, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 5, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 ]
We thus obtain the following problem:
19:	T:
		(1, 14)         eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 5, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 5, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 ] with all transitions in problem 19, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 6, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 ]
We thus obtain the following problem:
20:	T:
		(1, 16)         eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 6, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 6, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 ] with all transitions in problem 20, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 7, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 ]
We thus obtain the following problem:
21:	T:
		(1, 18)         eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 7, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 7, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 ] with all transitions in problem 21, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 8, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 /\ 7 >= 0 /\ v_index - 7 < 0 ]
We thus obtain the following problem:
22:	T:
		(1, 20)         eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 8, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 /\ 7 >= 0 /\ v_index - 7 < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 8, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 /\ 7 >= 0 /\ v_index - 7 < 0 ] with all transitions in problem 22, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 9, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 /\ 7 >= 0 /\ v_index - 7 < 0 /\ 8 >= 0 /\ v_index - 8 < 0 ]
We thus obtain the following problem:
23:	T:
		(1, 22)         eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 9, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 /\ 7 >= 0 /\ v_index - 7 < 0 /\ 8 >= 0 /\ v_index - 8 < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

By chaining the transition eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 9, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 /\ 7 >= 0 /\ v_index - 7 < 0 /\ 8 >= 0 /\ v_index - 8 < 0 ] with all transitions in problem 23, the following new transition is obtained:
	eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 10, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 /\ 7 >= 0 /\ v_index - 7 < 0 /\ 8 >= 0 /\ v_index - 8 < 0 /\ 9 >= 0 /\ v_index - 9 < 0 ]
We thus obtain the following problem:
24:	T:
		(1, 24)         eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 10, v_index, v_new_size) [ 0 >= 0 /\ v_index < 0 /\ 1 >= 0 /\ v_index - 1 < 0 /\ 2 >= 0 /\ v_index - 2 < 0 /\ 3 >= 0 /\ v_index - 3 < 0 /\ 4 >= 0 /\ v_index - 4 < 0 /\ 5 >= 0 /\ v_index - 5 < 0 /\ 6 >= 0 /\ v_index - 6 < 0 /\ 7 >= 0 /\ v_index - 7 < 0 /\ 8 >= 0 /\ v_index - 8 < 0 /\ 9 >= 0 /\ v_index - 9 < 0 ]
		(1, 6)          eval_scan_bos_resize_start(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_index - 1, v_index, v_new_size) [ 0 >= 0 /\ v_index > 0 ]
		(?, 2)          eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 < 0 ]
		(v_index, 2)    eval_scan_bos_resize_bb3_in(v_i.0, v_index, v_new_size) -> eval_scan_bos_resize_bb3_in(v_i.0 - 1, v_index, v_new_size) [ -v_i.0 + v_index >= 0 /\ v_i.0 > 0 ]
	start location:	eval_scan_bos_resize_start
	leaf cost:	3

Complexity upper bound ?

Time: 0.348 sec (SMT: 0.291 sec)
