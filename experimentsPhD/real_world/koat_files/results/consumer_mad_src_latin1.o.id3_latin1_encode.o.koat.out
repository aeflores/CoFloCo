MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb0_in(v_0))
		(?, 1)    eval_id3_latin1_encode_bb0_in(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(?, 1)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(?, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(?, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(?, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb0_in(v_0))
		(1, 1)    eval_id3_latin1_encode_bb0_in(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(?, 1)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(?, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(?, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(?, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_id3_latin1_encode_start) = 1
	Pol(eval_id3_latin1_encode_bb0_in) = 1
	Pol(eval_id3_latin1_encode_bb1_in) = 1
	Pol(eval_id3_latin1_encode_1) = 1
	Pol(eval_id3_latin1_encodechar_start) = 0
	Pol(eval_id3_latin1_encode_2) = 1
	Pol(eval_id3_latin1_encode_stop) = 0
orients all transitions weakly and the transition
	eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb0_in(v_0))
		(1, 1)    eval_id3_latin1_encode_bb0_in(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(?, 1)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(?, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(?, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

By chaining the transition eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb0_in(v_0)) with all transitions in problem 3, the following new transition is obtained:
	eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
We thus obtain the following problem:
4:	T:
		(1, 2)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(1, 1)    eval_id3_latin1_encode_bb0_in(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(?, 1)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(?, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(?, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 4:
	eval_id3_latin1_encode_bb0_in(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
We thus obtain the following problem:
5:	T:
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
		(?, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
		(?, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(?, 1)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(1, 2)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

By chaining the transition eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0)) with all transitions in problem 5, the following new transition is obtained:
	eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
We thus obtain the following problem:
6:	T:
		(?, 2)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
		(?, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(?, 1)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(1, 2)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 6 produces the following problem:
7:	T:
		(?, 2)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
		(?, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(1, 1)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(1, 2)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

By chaining the transition eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0)) with all transitions in problem 7, the following new transition is obtained:
	eval_id3_latin1_encode_2(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
We thus obtain the following problem:
8:	T:
		(?, 3)    eval_id3_latin1_encode_2(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
		(?, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(1, 1)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(1, 2)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 8 produces the following problem:
9:	T:
		(?, 3)    eval_id3_latin1_encode_2(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
		(1, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(1, 1)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0))
		(1, 2)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

By chaining the transition eval_id3_latin1_encode_bb1_in(v_0) -> Com_1(eval_id3_latin1_encode_1(nondef.0)) with all transitions in problem 9, the following new transition is obtained:
	eval_id3_latin1_encode_bb1_in(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
We thus obtain the following problem:
10:	T:
		(1, 2)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
		(?, 3)    eval_id3_latin1_encode_2(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
		(1, 1)    eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
		(1, 2)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_id3_latin1_encode_1(v_0) -> Com_2(eval_id3_latin1_encodechar_start(v_0), eval_id3_latin1_encode_2(v_0))
We thus obtain the following problem:
11:	T:
		(?, 3)    eval_id3_latin1_encode_2(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
		(1, 2)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
		(1, 2)    eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

By chaining the transition eval_id3_latin1_encode_start(v_0) -> Com_1(eval_id3_latin1_encode_bb1_in(v_0)) with all transitions in problem 11, the following new transition is obtained:
	eval_id3_latin1_encode_start(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
We thus obtain the following problem:
12:	T:
		(1, 4)    eval_id3_latin1_encode_start(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
		(?, 3)    eval_id3_latin1_encode_2(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
		(1, 2)    eval_id3_latin1_encode_bb1_in(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_id3_latin1_encode_bb1_in(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
We thus obtain the following problem:
13:	T:
		(?, 3)    eval_id3_latin1_encode_2(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
		(1, 1)    eval_id3_latin1_encode_2(v_0) -> Com_1(eval_id3_latin1_encode_stop(v_0))
		(1, 4)    eval_id3_latin1_encode_start(v_0) -> Com_2(eval_id3_latin1_encodechar_start(nondef.0), eval_id3_latin1_encode_2(nondef.0))
	start location:	eval_id3_latin1_encode_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.069 sec (SMT: 0.059 sec)
