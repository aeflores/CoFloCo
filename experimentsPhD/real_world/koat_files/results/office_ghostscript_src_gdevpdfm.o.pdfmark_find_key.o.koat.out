YES(?, 9*v_count + 28)

Initial complexity problem:
1:	T:
		(1, 1)    eval_pdfmark_find_key_start(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb0_in(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_bb0_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, 0))
		(?, 1)    eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_1(v_count, v_i.0)) [ v_i.0 < v_count ]
		(?, 1)    eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0)) [ v_i.0 >= v_count ]
		(?, 1)    eval_pdfmark_find_key_1(v_count, v_i.0) -> Com_2(eval_pdf_key_eq_start(v_count, v_i.0), eval_pdfmark_find_key_2(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_5(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, v_i.0 + 2))
		(?, 1)    eval_pdfmark_find_key_5(v_count, v_i.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_count, v_i.0), eval_pdfmark_find_key_6(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_6(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_bb6_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_stop(v_count, v_i.0))
	start location:	eval_pdfmark_find_key_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_pdfmark_find_key_start(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb0_in(v_count, v_i.0))
		(1, 1)    eval_pdfmark_find_key_bb0_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, 0))
		(?, 1)    eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_1(v_count, v_i.0)) [ v_i.0 < v_count ]
		(?, 1)    eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0)) [ v_i.0 >= v_count ]
		(?, 1)    eval_pdfmark_find_key_1(v_count, v_i.0) -> Com_2(eval_pdf_key_eq_start(v_count, v_i.0), eval_pdfmark_find_key_2(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_5(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, v_i.0 + 2))
		(?, 1)    eval_pdfmark_find_key_5(v_count, v_i.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_count, v_i.0), eval_pdfmark_find_key_6(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_6(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_bb6_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_stop(v_count, v_i.0))
	start location:	eval_pdfmark_find_key_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_pdfmark_find_key_start) = 4
	Pol(eval_pdfmark_find_key_bb0_in) = 4
	Pol(eval_pdfmark_find_key_bb1_in) = 4
	Pol(eval_pdfmark_find_key_1) = 4
	Pol(eval_pdfmark_find_key_bb6_in) = 1
	Pol(eval_pdf_key_eq_start) = 0
	Pol(eval_pdfmark_find_key_2) = 4
	Pol(eval_pdfmark_find_key_5) = 3
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_pdfmark_find_key_6) = 2
	Pol(eval_pdfmark_find_key_stop) = 0
orients all transitions weakly and the transitions
	eval_pdfmark_find_key_bb6_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_stop(v_count, v_i.0))
	eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0)) [ v_i.0 >= v_count ]
	eval_pdfmark_find_key_6(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0))
	eval_pdfmark_find_key_5(v_count, v_i.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_count, v_i.0), eval_pdfmark_find_key_6(v_count, v_i.0))
	eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_5(v_count, v_i.0))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_pdfmark_find_key_start(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb0_in(v_count, v_i.0))
		(1, 1)    eval_pdfmark_find_key_bb0_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, 0))
		(?, 1)    eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_1(v_count, v_i.0)) [ v_i.0 < v_count ]
		(4, 1)    eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0)) [ v_i.0 >= v_count ]
		(?, 1)    eval_pdfmark_find_key_1(v_count, v_i.0) -> Com_2(eval_pdf_key_eq_start(v_count, v_i.0), eval_pdfmark_find_key_2(v_count, v_i.0))
		(4, 1)    eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_5(v_count, v_i.0))
		(?, 1)    eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, v_i.0 + 2))
		(4, 1)    eval_pdfmark_find_key_5(v_count, v_i.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_count, v_i.0), eval_pdfmark_find_key_6(v_count, v_i.0))
		(4, 1)    eval_pdfmark_find_key_6(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0))
		(4, 1)    eval_pdfmark_find_key_bb6_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_stop(v_count, v_i.0))
	start location:	eval_pdfmark_find_key_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_pdfmark_find_key_1: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_pdfmark_find_key_2: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_pdfmark_find_key_5: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_pdfmark_find_key_6: X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_pdfmark_find_key_bb1_in: X_2 >= 0
  For symbol eval_pdfmark_find_key_bb6_in: X_2 >= 0


This yielded the following problem:
4:	T:
		(4, 1)    eval_pdfmark_find_key_bb6_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_stop(v_count, v_i.0)) [ v_i.0 >= 0 ]
		(4, 1)    eval_pdfmark_find_key_6(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(4, 1)    eval_pdfmark_find_key_5(v_count, v_i.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_count, v_i.0), eval_pdfmark_find_key_6(v_count, v_i.0)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(?, 1)    eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, v_i.0 + 2)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(4, 1)    eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_5(v_count, v_i.0)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(?, 1)    eval_pdfmark_find_key_1(v_count, v_i.0) -> Com_2(eval_pdf_key_eq_start(v_count, v_i.0), eval_pdfmark_find_key_2(v_count, v_i.0)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(4, 1)    eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_count ]
		(?, 1)    eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_1(v_count, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_count ]
		(1, 1)    eval_pdfmark_find_key_bb0_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, 0))
		(1, 1)    eval_pdfmark_find_key_start(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb0_in(v_count, v_i.0))
	start location:	eval_pdfmark_find_key_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_pdfmark_find_key_bb6_in) = 3*V_1 - 3*V_2 - 2
	Pol(eval_pdfmark_find_key_stop) = 3*V_1 - 3*V_2 - 2
	Pol(eval_pdfmark_find_key_6) = 3*V_1 - 3*V_2 - 2
	Pol(eval_pdfmark_find_key_5) = 3*V_1 - 3*V_2 - 2
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = -3*V_2
	Pol(eval_pdfmark_find_key_2) = 3*V_1 - 3*V_2 - 2
	Pol(eval_pdfmark_find_key_bb1_in) = 3*V_1 - 3*V_2 + 2
	Pol(eval_pdfmark_find_key_1) = 3*V_1 - 3*V_2
	Pol(eval_pdf_key_eq_start) = -3*V_2
	Pol(eval_pdfmark_find_key_bb0_in) = 3*V_1 + 2
	Pol(eval_pdfmark_find_key_start) = 3*V_1 + 2
orients all transitions weakly and the transitions
	eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_1(v_count, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_count ]
	eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, v_i.0 + 2)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
	eval_pdfmark_find_key_1(v_count, v_i.0) -> Com_2(eval_pdf_key_eq_start(v_count, v_i.0), eval_pdfmark_find_key_2(v_count, v_i.0)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
strictly and produces the following problem:
5:	T:
		(4, 1)                eval_pdfmark_find_key_bb6_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_stop(v_count, v_i.0)) [ v_i.0 >= 0 ]
		(4, 1)                eval_pdfmark_find_key_6(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(4, 1)                eval_pdfmark_find_key_5(v_count, v_i.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_count, v_i.0), eval_pdfmark_find_key_6(v_count, v_i.0)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(3*v_count + 2, 1)    eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, v_i.0 + 2)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(4, 1)                eval_pdfmark_find_key_2(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_5(v_count, v_i.0)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(3*v_count + 2, 1)    eval_pdfmark_find_key_1(v_count, v_i.0) -> Com_2(eval_pdf_key_eq_start(v_count, v_i.0), eval_pdfmark_find_key_2(v_count, v_i.0)) [ v_count - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_count + v_i.0 - 1 >= 0 /\ v_count - 1 >= 0 ]
		(4, 1)                eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb6_in(v_count, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_count ]
		(3*v_count + 2, 1)    eval_pdfmark_find_key_bb1_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_1(v_count, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_count ]
		(1, 1)                eval_pdfmark_find_key_bb0_in(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb1_in(v_count, 0))
		(1, 1)                eval_pdfmark_find_key_start(v_count, v_i.0) -> Com_1(eval_pdfmark_find_key_bb0_in(v_count, v_i.0))
	start location:	eval_pdfmark_find_key_start
	leaf cost:	0

Complexity upper bound 9*v_count + 28

Time: 0.085 sec (SMT: 0.073 sec)
