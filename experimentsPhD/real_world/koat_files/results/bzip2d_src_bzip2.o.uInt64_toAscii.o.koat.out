MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(?, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_7)) [ v_8 = 0 ]
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_8 < 0 ]
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_8 > 0 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_i.0 < v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_i.0 >= v_7 ]
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(?, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_7)) [ v_8 = 0 ]
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_8 < 0 ]
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_8 > 0 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_i.0 < v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_i.0 >= v_7 ]
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_uInt64_toAscii_start) = 2
	Pol(eval_uInt64_toAscii_bb0_in) = 2
	Pol(eval_uInt64_toAscii_0) = 2
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_uInt64_toAscii_1) = 2
	Pol(eval_uInt64_toAscii_bb1_in) = 2
	Pol(eval_uInt64_toAscii_2) = 2
	Pol(eval_uInt64_qrm10_start) = 0
	Pol(eval_uInt64_toAscii_3) = 2
	Pol(eval_uInt64_toAscii_8) = 2
	Pol(eval_uInt64_isZero_start) = 0
	Pol(eval_uInt64_toAscii_9) = 2
	Pol(eval_uInt64_toAscii_bb3_in) = 1
	Pol(eval_uInt64_toAscii_stop) = 0
orients all transitions weakly and the transitions
	eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_i.0 >= v_7 ]
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_8 < 0 ]
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_8 > 0 ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(?, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_7)) [ v_8 = 0 ]
		(2, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_8 < 0 ]
		(2, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_8 > 0 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_i.0 >= v_7 ]
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_uInt64_toAscii_2: X_4 >= 0
  For symbol eval_uInt64_toAscii_3: X_4 >= 0
  For symbol eval_uInt64_toAscii_8: X_1 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ -X_1 + X_4 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_uInt64_toAscii_9: X_1 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ -X_1 + X_4 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_uInt64_toAscii_bb1_in: X_4 >= 0
  For symbol eval_uInt64_toAscii_bb3_in: X_1 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_3 + X_4 >= 0 /\ X_1 + X_4 - 1 >= 0 /\ -X_1 + X_4 + 1 >= 0 /\ X_3 >= 0 /\ X_1 + X_3 - 1 >= 0 /\ X_1 - 1 >= 0


This yielded the following problem:
4:	T:
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 ]
		(2, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 ]
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 ]
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
We thus obtain the following problem:
5:	T:
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 ]
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 ]
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
We thus obtain the following problem:
6:	T:
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(?, 1)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 ]
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
We thus obtain the following problem:
7:	T:
		(?, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 7 produces the following problem:
8:	T:
		(?, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 9 produces the following problem:
10:	T:
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_8(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(?, 1)    eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_uInt64_toAscii_8(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_7, nondef.1, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ] with all transitions in problem 12, the following new transition is obtained:
	eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
We thus obtain the following problem:
13:	T:
		(1, 2)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_uInt64_toAscii_2(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
We thus obtain the following problem:
14:	T:
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 2)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0))
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, 0)) with all transitions in problem 14, the following new transition is obtained:
	eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
We thus obtain the following problem:
15:	T:
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 2)    eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 15:
	eval_uInt64_toAscii_bb1_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 ]
We thus obtain the following problem:
16:	T:
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0)) with all transitions in problem 16, the following new transition is obtained:
	eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
We thus obtain the following problem:
17:	T:
		(1, 2)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 1)    eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_uInt64_toAscii_0(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
We thus obtain the following problem:
18:	T:
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 2)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(1, 1)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0)) with all transitions in problem 18, the following new transition is obtained:
	eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
We thus obtain the following problem:
19:	T:
		(1, 3)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 2)    eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_uInt64_toAscii_bb0_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
We thus obtain the following problem:
20:	T:
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 ] with all transitions in problem 20, the following new transitions are obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 2, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 ]
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 >= v_7 ]
We thus obtain the following problem:
21:	T:
		(2, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 2, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 ]
		(2, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 2, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 ] with all transitions in problem 21, the following new transitions are obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 3, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 ]
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 2, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 >= v_7 ]
We thus obtain the following problem:
22:	T:
		(2, 4)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 3, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 ]
		(2, 4)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 2, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 >= v_7 ]
		(2, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 3, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 ] with all transitions in problem 22, the following new transitions are obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 4, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 ]
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 3, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 >= v_7 ]
We thus obtain the following problem:
23:	T:
		(2, 5)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 4, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 ]
		(2, 5)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 3, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 >= v_7 ]
		(2, 4)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 2, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 >= v_7 ]
		(2, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 4, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 ] with all transitions in problem 23, the following new transitions are obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 5, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 ]
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 4, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 >= v_7 ]
We thus obtain the following problem:
24:	T:
		(2, 6)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 5, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 ]
		(2, 6)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 4, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 >= v_7 ]
		(2, 5)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 3, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 >= v_7 ]
		(2, 4)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 2, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 >= v_7 ]
		(2, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 5, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 ] with all transitions in problem 24, the following new transitions are obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 6, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 < v_7 ]
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 5, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 >= v_7 ]
We thus obtain the following problem:
25:	T:
		(2, 7)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 6, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 < v_7 ]
		(2, 7)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 5, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 >= v_7 ]
		(2, 6)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 4, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 >= v_7 ]
		(2, 5)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 3, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 >= v_7 ]
		(2, 4)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 2, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 >= v_7 ]
		(2, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

By chaining the transition eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 6, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 < v_7 ] with all transitions in problem 25, the following new transitions are obtained:
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 7, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 < v_7 /\ v_nBuf.0 + 6 >= 0 /\ 6 >= 0 /\ v_7 + 5 >= 0 /\ 6 < v_7 ]
	eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 6, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 < v_7 /\ v_nBuf.0 + 6 >= 0 /\ 6 >= 0 /\ v_7 + 5 >= 0 /\ 6 >= v_7 ]
We thus obtain the following problem:
26:	T:
		(2, 8)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 7, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 < v_7 /\ v_nBuf.0 + 6 >= 0 /\ 6 >= 0 /\ v_7 + 5 >= 0 /\ 6 < v_7 ]
		(2, 8)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 6, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 < v_7 /\ v_nBuf.0 + 6 >= 0 /\ 6 >= 0 /\ v_7 + 5 >= 0 /\ 6 >= v_7 ]
		(2, 7)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 5, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 < v_7 /\ v_nBuf.0 + 5 >= 0 /\ 5 >= 0 /\ v_7 + 4 >= 0 /\ 5 >= v_7 ]
		(2, 6)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 4, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 < v_7 /\ v_nBuf.0 + 4 >= 0 /\ 4 >= 0 /\ v_7 + 3 >= 0 /\ 4 >= v_7 ]
		(2, 5)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 3, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 < v_7 /\ v_nBuf.0 + 3 >= 0 /\ 3 >= 0 /\ v_7 + 2 >= 0 /\ 3 >= v_7 ]
		(2, 4)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 2, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 < v_7 /\ v_nBuf.0 + 2 >= 0 /\ 2 >= 0 /\ v_7 + 1 >= 0 /\ 2 >= v_7 ]
		(2, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 < 0 /\ 0 >= 0 /\ 0 < v_7 /\ v_nBuf.0 + 1 >= 0 /\ 1 >= 0 /\ v_7 >= 0 /\ 1 >= v_7 ]
		(?, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0 + 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 < v_7 ]
		(2, 1)    eval_uInt64_toAscii_bb3_in(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_stop(v_7, v_8, v_i.0, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_i.0 + v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_i.0 >= 0 /\ v_7 + v_i.0 - 1 >= 0 /\ v_7 - 1 >= 0 /\ v_i.0 >= v_7 ]
		(?, 3)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, v_7), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_7)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 = 0 /\ v_7 >= 0 ]
		(2, 2)    eval_uInt64_toAscii_9(v_7, v_8, v_i.0, v_nBuf.0) -> Com_1(eval_uInt64_toAscii_bb3_in(v_7, v_8, 1, v_nBuf.0)) [ v_7 - v_nBuf.0 - 1 >= 0 /\ v_nBuf.0 >= 0 /\ v_7 + v_nBuf.0 - 1 >= 0 /\ -v_7 + v_nBuf.0 + 1 >= 0 /\ v_7 - 1 >= 0 /\ v_8 > 0 /\ 0 >= 0 /\ 0 < v_7 ]
		(?, 2)    eval_uInt64_toAscii_3(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_isZero_start(v_nBuf.0 + 1, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_9(v_nBuf.0 + 1, nondef.1, v_i.0, v_nBuf.0)) [ v_nBuf.0 >= 0 /\ 0 >= 0 /\ 2*v_nBuf.0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_uInt64_qrm10_start(v_7, v_8, v_i.0, 0), eval_uInt64_toAscii_3(v_7, v_8, v_i.0, 0)) [ 0 >= 0 ]
		(1, 3)    eval_uInt64_toAscii_start(v_7, v_8, v_i.0, v_nBuf.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_7, v_8, v_i.0, v_nBuf.0), eval_uInt64_toAscii_1(v_7, v_8, v_i.0, v_nBuf.0))
	start location:	eval_uInt64_toAscii_start
	leaf cost:	0

Complexity upper bound ?

Time: 1.273 sec (SMT: 0.915 sec)
