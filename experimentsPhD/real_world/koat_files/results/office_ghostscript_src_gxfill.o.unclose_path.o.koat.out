MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
		(?, 1)    eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ v_.0 < 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ v_.0 > 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ v_.0 < 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ v_.0 > 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_stop(v_.0, v_.1, v_count) [ v_.0 = 0 ]
		(?, 1)    eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0 - 1, v_count)
		(?, 1)    eval_unclose_path_bb6_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.1, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
		(?, 1)    eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ v_.0 < 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ v_.0 > 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ v_.0 < 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ v_.0 > 0 ]
		(?, 1)    eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0 - 1, v_count)
		(?, 1)    eval_unclose_path_bb6_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.1, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
		(1, 1)    eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ v_.0 < 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ v_.0 > 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ v_.0 < 0 ]
		(?, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ v_.0 > 0 ]
		(?, 1)    eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0 - 1, v_count)
		(?, 1)    eval_unclose_path_bb6_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.1, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_unclose_path_start) = V_3
	Pol(eval_unclose_path_bb0_in) = V_3
	Pol(eval_unclose_path_bb1_in) = V_1
	Pol(eval_unclose_path_bb5_in) = V_1 - 1
	Pol(eval_unclose_path_bb6_in) = V_2
orients all transitions weakly and the transition
	eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ v_.0 > 0 ]
strictly and produces the following problem:
4:	T:
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ v_.0 < 0 ]
		(v_count, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ v_.0 > 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ v_.0 < 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ v_.0 > 0 ]
		(?, 1)          eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0 - 1, v_count)
		(?, 1)          eval_unclose_path_bb6_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.1, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_unclose_path_bb1_in: -X_1 + X_3 >= 0
  For symbol eval_unclose_path_bb5_in: -X_1 + X_3 >= 0
  For symbol eval_unclose_path_bb6_in: -X_2 + X_3 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 + X_2 + 1 >= 0


This yielded the following problem:
5:	T:
		(?, 1)          eval_unclose_path_bb6_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.1, v_.1, v_count) [ -v_.1 + v_count >= 0 /\ -v_.0 + v_count >= 0 /\ v_.0 - v_.1 >= 0 /\ -v_.0 + v_.1 + 1 >= 0 ]
		(?, 1)          eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ]
		(v_count, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

By chaining the transition eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
We thus obtain the following problem:
6:	T:
		(?, 2)          eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 1)          eval_unclose_path_bb6_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.1, v_.1, v_count) [ -v_.1 + v_count >= 0 /\ -v_.0 + v_count >= 0 /\ v_.0 - v_.1 >= 0 /\ -v_.0 + v_.1 + 1 >= 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ]
		(v_count, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

By chaining the transition eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
We thus obtain the following problem:
7:	T:
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 1)          eval_unclose_path_bb6_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.1, v_.1, v_count) [ -v_.1 + v_count >= 0 /\ -v_.0 + v_count >= 0 /\ v_.0 - v_.1 >= 0 /\ -v_.0 + v_.1 + 1 >= 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ]
		(v_count, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

By chaining the transition eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb6_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ 0 >= 0 /\ 1 >= 0 ]
We thus obtain the following problem:
8:	T:
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 1)          eval_unclose_path_bb6_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.1, v_.1, v_count) [ -v_.1 + v_count >= 0 /\ -v_.0 + v_count >= 0 /\ v_.0 - v_.1 >= 0 /\ -v_.0 + v_.1 + 1 >= 0 ]
		(v_count, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_unclose_path_bb6_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.1, v_.1, v_count) [ -v_.1 + v_count >= 0 /\ -v_.0 + v_count >= 0 /\ v_.0 - v_.1 >= 0 /\ -v_.0 + v_.1 + 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)          eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 1)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ]
		(v_count, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

By chaining the transition eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 ] with all transitions in problem 9, the following new transition is obtained:
	eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
We thus obtain the following problem:
10:	T:
		(?, 3)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 2)          eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(v_count, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 10 produces the following problem:
11:	T:
		(?, 3)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(v_count, 2)    eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(v_count, 1)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

By chaining the transition eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb5_in(v_.0, v_.1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 ] with all transitions in problem 11, the following new transition is obtained:
	eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
We thus obtain the following problem:
12:	T:
		(v_count, 3)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 3)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(v_count, 2)    eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_unclose_path_bb5_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
We thus obtain the following problem:
13:	T:
		(v_count, 3)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 3)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(1, 1)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

By chaining the transition eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb0_in(v_.0, v_.1, v_count) with all transitions in problem 13, the following new transition is obtained:
	eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
We thus obtain the following problem:
14:	T:
		(1, 2)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
		(v_count, 3)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 3)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(1, 1)          eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 14:
	eval_unclose_path_bb0_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
We thus obtain the following problem:
15:	T:
		(v_count, 3)    eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 3)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0 - 1, v_.0 - 1, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ -v_.0 + v_count + 1 >= 0 /\ 1 >= 0 /\ 0 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 < 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(?, 2)          eval_unclose_path_bb1_in(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_.0, v_.0, v_count) [ -v_.0 + v_count >= 0 /\ v_.0 > 0 /\ 0 >= 0 /\ 1 >= 0 ]
		(1, 2)          eval_unclose_path_start(v_.0, v_.1, v_count) -> eval_unclose_path_bb1_in(v_count, v_.1, v_count)
	start location:	eval_unclose_path_start
	leaf cost:	1

Complexity upper bound ?

Time: 0.328 sec (SMT: 0.277 sec)
