MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_debug_dump_refs_start(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_11, v_15, v_3, v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_bb0_in(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_1(v_11, v_15, nondef.0, v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_bb0_in(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_11, v_15, v_3, v_6, v_size, v_size))
		(?, 1)    eval_debug_dump_refs_1(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_11, v_15, v_3, v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_11, v_15, v_3, v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_2(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_11, v_15, v_3, v_6, v_size, v_size))
		(?, 1)    eval_debug_dump_refs_bb2_in(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(nondef.3, nondef.4, v_3, v_count.0 - 1, v_count.0, v_size)) [ v_count.0 < 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(nondef.3, nondef.4, v_3, v_count.0 - 1, v_count.0, v_size)) [ v_count.0 > 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_11, v_15, v_3, v_6, v_count.0, v_size)) [ v_count.0 = 0 ]
		(?, 1)    eval_debug_dump_refs_10(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_11, v_15, v_3, v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_11, v_15, v_3, v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_11(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_11, v_15, v_3, v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_11, v_15, v_3, v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_12(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_11, v_15, v_3, v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_11, v_15, v_3, v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_13(v_11, v_15, v_3, v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_11, v_15, v_3, v_6, v_6, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_6, v_count.0, v_size].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size))
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_10(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ v_count.0 = 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ v_count.0 > 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ v_count.0 < 0 ]
		(?, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(?, 1)    eval_debug_dump_refs_1(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(?, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_1(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size))
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_10(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ v_count.0 = 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ v_count.0 > 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ v_count.0 < 0 ]
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_1(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_1(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_debug_dump_refs_13) = 1
	Pol(eval_debug_dump_refs_bb2_in) = 1
	Pol(eval_debug_dump_refs_12) = 1
	Pol(eval_fprintf_start) = 0
	Pol(eval_debug_dump_refs_11) = 1
	Pol(eval_debug_dump_one_ref_start) = 0
	Pol(eval_debug_dump_refs_10) = 1
	Pol(eval_debug_dump_refs_stop) = 0
	Pol(eval_debug_dump_refs_2) = 1
	Pol(eval_debug_dump_refs_1) = 1
	Pol(eval_debug_dump_refs_bb0_in) = 1
	Pol(eval_debug_dump_refs_start) = 1
orients all transitions weakly and the transition
	eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ v_count.0 = 0 ]
strictly and produces the following problem:
4:	T:
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size))
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size))
		(?, 1)    eval_debug_dump_refs_10(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ v_count.0 = 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ v_count.0 > 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ v_count.0 < 0 ]
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_1(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_1(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_debug_dump_refs_10: -X_2 + X_3 >= 0 /\ -X_1 + X_3 - 1 >= 0 /\ X_1 - X_2 + 1 >= 0 /\ -X_1 + X_2 - 1 >= 0
  For symbol eval_debug_dump_refs_11: -X_2 + X_3 >= 0 /\ -X_1 + X_3 - 1 >= 0 /\ X_1 - X_2 + 1 >= 0 /\ -X_1 + X_2 - 1 >= 0
  For symbol eval_debug_dump_refs_12: -X_2 + X_3 >= 0 /\ -X_1 + X_3 - 1 >= 0 /\ X_1 - X_2 + 1 >= 0 /\ -X_1 + X_2 - 1 >= 0
  For symbol eval_debug_dump_refs_13: -X_2 + X_3 >= 0 /\ -X_1 + X_3 - 1 >= 0 /\ X_1 - X_2 + 1 >= 0 /\ -X_1 + X_2 - 1 >= 0
  For symbol eval_debug_dump_refs_bb2_in: -X_2 + X_3 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_1(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_1(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 ]
		(1, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 = 0 ]
		(?, 1)    eval_debug_dump_refs_10(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

By chaining the transition eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_1(v_6, v_count.0, v_size)) with all transitions in problem 5, the following new transition is obtained:
	eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_1(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 ]
		(1, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 = 0 ]
		(?, 1)    eval_debug_dump_refs_10(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_debug_dump_refs_1(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_10(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 = 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 ]
		(1, 2)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

By chaining the transition eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 /\ 0 >= 0 ]
We thus obtain the following problem:
8:	T:
		(?, 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 /\ 0 >= 0 ]
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_10(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 = 0 ]
		(?, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 ]
		(1, 2)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

By chaining the transition eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_10(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 /\ 0 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 /\ 0 >= 0 ]
		(?, 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 /\ 0 >= 0 ]
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_10(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 = 0 ]
		(1, 2)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_debug_dump_refs_10(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_11(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
We thus obtain the following problem:
10:	T:
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(?, 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 /\ 0 >= 0 ]
		(?, 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 /\ 0 >= 0 ]
		(1, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 = 0 ]
		(1, 2)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 1)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

By chaining the transition eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size)) with all transitions in problem 10, the following new transitions are obtained:
	eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
	eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
We thus obtain the following problem:
11:	T:
		(1, 3)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 2)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(?, 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 /\ 0 >= 0 ]
		(?, 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 /\ 0 >= 0 ]
		(1, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 = 0 ]
		(1, 2)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
		(1, 1)    eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 11:
	eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
	eval_debug_dump_refs_bb0_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
We thus obtain the following problem:
12:	T:
		(?, 1)    eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)    eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 /\ 0 >= 0 ]
		(?, 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 /\ 0 >= 0 ]
		(1, 1)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 = 0 ]
		(1, 1)    eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 2)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 3)    eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

A separated polynomial rank function for exponential bounds with
	Pol(eval_debug_dump_refs_bb2_in) = V_2 + 1
	Pol(eval_fprintf_start) = V_2
	Pol(eval_debug_dump_refs_11) = V_2
	Pol(eval_debug_dump_refs_13) = V_2
	Pol(eval_debug_dump_refs_12) = V_2
	Pol(eval_debug_dump_one_ref_start) = V_2
and size complexities
	S("eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))", 0-0) = v_6
	S("eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))", 0-1) = v_count.0
	S("eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))", 0-2) = v_size
	S("eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))", 1-0) = v_6
	S("eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))", 1-1) = v_count.0
	S("eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))", 1-2) = v_size
	S("eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))", 0-0) = v_6
	S("eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))", 0-1) = v_size
	S("eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))", 0-2) = v_size
	S("eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))", 0-0) = v_6
	S("eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))", 0-1) = v_size
	S("eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))", 0-2) = v_size
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 = 0 ]", 0-0) = ?
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 = 0 ]", 0-1) = 0
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 = 0 ]", 0-2) = v_size
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 > 0 /\\ 0 >= 0 ]", 0-0) = ?
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 > 0 /\\ 0 >= 0 ]", 0-1) = ?
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 > 0 /\\ 0 >= 0 ]", 0-2) = v_size
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 > 0 /\\ 0 >= 0 ]", 1-0) = ?
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 > 0 /\\ 0 >= 0 ]", 1-1) = ?
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 > 0 /\\ 0 >= 0 ]", 1-2) = v_size
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 < 0 /\\ 0 >= 0 ]", 0-0) = ?
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 < 0 /\\ 0 >= 0 ]", 0-1) = ?
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 < 0 /\\ 0 >= 0 ]", 0-2) = v_size
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 < 0 /\\ 0 >= 0 ]", 1-0) = ?
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 < 0 /\\ 0 >= 0 ]", 1-1) = ?
	S("eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ v_count.0 < 0 /\\ 0 >= 0 ]", 1-2) = v_size
	S("eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 0-0) = ?
	S("eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 0-1) = ?
	S("eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 0-2) = v_size
	S("eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 1-0) = ?
	S("eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 1-1) = ?
	S("eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 1-2) = v_size
	S("eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 0-0) = ?
	S("eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 0-1) = ?
	S("eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 0-2) = v_size
	S("eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 1-0) = ?
	S("eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 1-1) = ?
	S("eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 1-2) = v_size
	S("eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 0-0) = ?
	S("eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 0-1) = ?
	S("eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\\ -v_6 + v_size - 1 >= 0 /\\ v_6 - v_count.0 + 1 >= 0 /\\ -v_6 + v_count.0 - 1 >= 0 ]", 0-2) = v_size
orients the transitions
	eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 /\ 0 >= 0 ]
	eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 /\ 0 >= 0 ]
	eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
	eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
	eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
weakly and the transition
	eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 /\ 0 >= 0 ]
strictly and produces the following problem:
13:	T:
		(?, 1)                         eval_debug_dump_refs_13(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_6, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)                         eval_debug_dump_refs_12(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_13(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 1)                         eval_debug_dump_refs_11(v_6, v_count.0, v_size) -> Com_2(eval_debug_dump_one_ref_start(v_6, v_count.0, v_size), eval_debug_dump_refs_12(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ -v_6 + v_size - 1 >= 0 /\ v_6 - v_count.0 + 1 >= 0 /\ -v_6 + v_count.0 - 1 >= 0 ]
		(?, 2)                         eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 < 0 /\ 0 >= 0 ]
		(2 * pow(2, v_size + 2), 2)    eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_count.0 - 1, v_count.0, v_size), eval_debug_dump_refs_11(v_count.0 - 1, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 > 0 /\ 0 >= 0 ]
		(1, 1)                         eval_debug_dump_refs_bb2_in(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_stop(v_6, v_count.0, v_size)) [ -v_count.0 + v_size >= 0 /\ v_count.0 = 0 ]
		(1, 1)                         eval_debug_dump_refs_2(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 2)                         eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_1(eval_debug_dump_refs_bb2_in(v_6, v_size, v_size))
		(1, 3)                         eval_debug_dump_refs_start(v_6, v_count.0, v_size) -> Com_2(eval_fprintf_start(v_6, v_count.0, v_size), eval_debug_dump_refs_2(v_6, v_count.0, v_size))
	start location:	eval_debug_dump_refs_start
	leaf cost:	0

Complexity upper bound ?

Time: 1.513 sec (SMT: 1.230 sec)
