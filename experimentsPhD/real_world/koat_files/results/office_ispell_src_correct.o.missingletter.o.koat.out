MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1))
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_37(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_37(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1))
		(?, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1))
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_37(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_37(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1))
		(?, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_missingletter_start) = 3
	Pol(eval_missingletter_bb0_in) = 3
	Pol(eval_missingletter_0) = 3
	Pol(eval_strcpy_start) = 0
	Pol(eval_missingletter_1) = 3
	Pol(eval_missingletter_bb1_in) = 3
	Pol(eval_missingletter_bb2_in) = 3
	Pol(eval_missingletter_bb9_in) = 2
	Pol(eval_missingletter_bb6_in) = 3
	Pol(eval_missingletter_16) = 3
	Pol(eval_good_start) = 0
	Pol(eval_missingletter_17) = 3
	Pol(eval_missingletter_18) = 3
	Pol(eval_ins_cap_start) = 0
	Pol(eval_missingletter_19) = 3
	Pol(eval_missingletter_bb14_in) = 1
	Pol(eval_missingletter_bb13_in) = 2
	Pol(eval_missingletter_35) = 2
	Pol(eval_missingletter_36) = 2
	Pol(eval_missingletter_37) = 2
	Pol(eval_missingletter_38) = 2
	Pol(eval_missingletter_stop) = 0
orients all transitions weakly and the transitions
	eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= v_'Trynum ]
	eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
	eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
	eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1))
	eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1))
		(3, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1))
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_37(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_37(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1))
		(3, 1)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1))
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_missingletter_16: X_2 >= 0
  For symbol eval_missingletter_17: X_2 >= 0
  For symbol eval_missingletter_18: X_2 >= 0
  For symbol eval_missingletter_19: X_2 >= 0
  For symbol eval_missingletter_35: X_3 >= 0
  For symbol eval_missingletter_36: X_3 >= 0
  For symbol eval_missingletter_37: X_3 >= 0
  For symbol eval_missingletter_38: X_3 >= 0
  For symbol eval_missingletter_bb13_in: X_3 >= 0
  For symbol eval_missingletter_bb2_in: X_2 >= 0
  For symbol eval_missingletter_bb6_in: X_2 >= 0
  For symbol eval_missingletter_bb9_in: X_3 >= 0


This yielded the following problem:
4:	T:
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_37(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_37(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_37(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_37(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
We thus obtain the following problem:
6:	T:
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_37(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_37(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
We thus obtain the following problem:
7:	T:
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_37(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_37(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_37(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
We thus obtain the following problem:
8:	T:
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_37(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_missingletter_37(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(3, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ] with all transitions in problem 9, the following new transition is obtained:
	eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
We thus obtain the following problem:
10:	T:
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_18(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ] with all transitions in problem 11, the following new transition is obtained:
	eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_missingletter_18(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
We thus obtain the following problem:
13:	T:
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ] with all transitions in problem 13, the following new transition is obtained:
	eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
We thus obtain the following problem:
14:	T:
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ] with all transitions in problem 14, the following new transition is obtained:
	eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
We thus obtain the following problem:
15:	T:
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 15:
	eval_missingletter_bb6_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
We thus obtain the following problem:
16:	T:
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_16(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ] with all transitions in problem 16, the following new transition is obtained:
	eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
We thus obtain the following problem:
17:	T:
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_missingletter_16(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_17(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
We thus obtain the following problem:
18:	T:
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ] with all transitions in problem 18, the following new transition is obtained:
	eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
We thus obtain the following problem:
19:	T:
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_missingletter_bb13_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
We thus obtain the following problem:
20:	T:
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_35(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ] with all transitions in problem 20, the following new transition is obtained:
	eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.12, v_i.0, v_i.1), eval_missingletter_36(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
We thus obtain the following problem:
21:	T:
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.12, v_i.0, v_i.1), eval_missingletter_36(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 1)    eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 21:
	eval_missingletter_35(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_36(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
We thus obtain the following problem:
22:	T:
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.12, v_i.0, v_i.1), eval_missingletter_36(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(3, 1)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ] with all transitions in problem 22, the following new transition is obtained:
	eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
We thus obtain the following problem:
23:	T:
		(3, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 1)    eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.12, v_i.0, v_i.1), eval_missingletter_36(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 23:
	eval_missingletter_bb14_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1))
We thus obtain the following problem:
24:	T:
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(3, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.12, v_i.0, v_i.1), eval_missingletter_36(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_0(v_'Trynum, v_i.0, v_i.1)) with all transitions in problem 24, the following new transition is obtained:
	eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
We thus obtain the following problem:
25:	T:
		(1, 2)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(3, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.12, v_i.0, v_i.1), eval_missingletter_36(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 25:
	eval_missingletter_0(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
We thus obtain the following problem:
26:	T:
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(3, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.12, v_i.0, v_i.1), eval_missingletter_36(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 2)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(1, 1)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

By chaining the transition eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1)) with all transitions in problem 26, the following new transition is obtained:
	eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
We thus obtain the following problem:
27:	T:
		(1, 3)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(3, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.12, v_i.0, v_i.1), eval_missingletter_36(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 2)    eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 27:
	eval_missingletter_bb0_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
We thus obtain the following problem:
28:	T:
		(?, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_19(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(3, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_38(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_38(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_36(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_17(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_ins_cap_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_19(v_'Trynum, v_i.0, v_i.1)) [ v_i.0 >= 0 ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.4, v_i.0, v_i.1), eval_missingletter_17(nondef.4, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, v_i.0 + 1, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb2_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(nondef.8, v_i.0, v_i.1)) [ v_i.0 >= 0 /\ v_i.0 >= v_'Trynum ]
		(3, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_stop(v_'Trynum, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 >= v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_good_start(nondef.12, v_i.0, v_i.1), eval_missingletter_36(nondef.12, v_i.0, v_i.1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 2)    eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, v_i.1 + 1)) [ v_i.1 >= 0 /\ v_i.1 < v_'Trynum ]
		(?, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb2_in(v_'Trynum, 0, v_i.1))
		(3, 1)    eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb9_in(v_'Trynum, v_i.0, 0))
		(1, 1)    eval_missingletter_1(v_'Trynum, v_i.0, v_i.1) -> Com_1(eval_missingletter_bb1_in(v_'Trynum, v_i.0, v_i.1))
		(1, 3)    eval_missingletter_start(v_'Trynum, v_i.0, v_i.1) -> Com_2(eval_strcpy_start(v_'Trynum, v_i.0, v_i.1), eval_missingletter_1(v_'Trynum, v_i.0, v_i.1))
	start location:	eval_missingletter_start
	leaf cost:	0

Complexity upper bound ?

Time: 3.264 sec (SMT: 2.362 sec)
