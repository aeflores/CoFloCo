MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
		(?, 1)    eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 < 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 > 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 < 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 > 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 = 0 ]
		(?, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 < 100 ]
		(?, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_.critedge_in(v_ch.0, v_index.0, v_index.1) [ v_index.1 < 100 ]
		(?, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_.critedge_in(v_ch.0, v_index.0, v_index.1) [ v_index.1 >= 100 ]
		(?, 1)    eval_extractToken_.critedge_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_stop(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
		(?, 1)    eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 < 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 > 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 < 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 > 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 = 0 ]
		(?, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 < 100 ]
	start location:	eval_extractToken_start
	leaf cost:	3

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
		(1, 1)    eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 < 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 > 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 < 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 > 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 = 0 ]
		(?, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 < 100 ]
	start location:	eval_extractToken_start
	leaf cost:	3

A polynomial rank function with
	Pol(eval_extractToken_start) = 1
	Pol(eval_extractToken_bb0_in) = 1
	Pol(eval_extractToken_bb1_in) = 1
	Pol(eval_extractToken_bb4_in) = 0
orients all transitions weakly and the transitions
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 < 0 ]
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 > 0 ]
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 = 0 ]
strictly and produces the following problem:
4:	T:
		(1, 1)    eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
		(1, 1)    eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 < 0 ]
		(?, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 > 0 ]
		(1, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 < 0 ]
		(1, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 > 0 ]
		(1, 1)    eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 = 0 ]
		(?, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 < 100 ]
	start location:	eval_extractToken_start
	leaf cost:	3

A polynomial rank function with
	Pol(eval_extractToken_start) = 100
	Pol(eval_extractToken_bb0_in) = 100
	Pol(eval_extractToken_bb1_in) = -V_2 + 100
	Pol(eval_extractToken_bb4_in) = -V_3 + 100
orients all transitions weakly and the transition
	eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 < 100 ]
strictly and produces the following problem:
5:	T:
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_ch.0 = 0 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 < 100 ]
	start location:	eval_extractToken_start
	leaf cost:	3

Applied AI with 'oct' on problem 5 to obtain the following invariants:
  For symbol eval_extractToken_bb1_in: X_2 >= 0
  For symbol eval_extractToken_bb4_in: X_3 >= 0 /\ X_2 + X_3 >= 0 /\ -X_2 + X_3 >= 0 /\ X_2 >= 0


This yielded the following problem:
6:	T:
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 = 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 = 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 1) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 ]
We thus obtain the following problem:
7:	T:
		(1, 2)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 1) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 1) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 ] with all transitions in problem 7, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 2) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 ]
We thus obtain the following problem:
8:	T:
		(1, 3)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 2) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 2) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 ] with all transitions in problem 8, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 3) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 ]
We thus obtain the following problem:
9:	T:
		(1, 4)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 3) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 3) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 ] with all transitions in problem 9, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 4) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 ]
We thus obtain the following problem:
10:	T:
		(1, 5)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 4) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 4) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 ] with all transitions in problem 10, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 5) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 ]
We thus obtain the following problem:
11:	T:
		(1, 6)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 5) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 5) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 ] with all transitions in problem 11, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 6) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 ]
We thus obtain the following problem:
12:	T:
		(1, 7)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 6) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 6) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 ] with all transitions in problem 12, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 7) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 ]
We thus obtain the following problem:
13:	T:
		(1, 8)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 7) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 7) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 ] with all transitions in problem 13, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 8) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 ]
We thus obtain the following problem:
14:	T:
		(1, 9)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 8) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 8) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 ] with all transitions in problem 14, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 9) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 ]
We thus obtain the following problem:
15:	T:
		(1, 10)     eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 9) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 9) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 ] with all transitions in problem 15, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 10) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 ]
We thus obtain the following problem:
16:	T:
		(1, 11)     eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 10) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 10) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 ] with all transitions in problem 16, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 11) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 ]
We thus obtain the following problem:
17:	T:
		(1, 12)     eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 11) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 11) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 ] with all transitions in problem 17, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 12) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 ]
We thus obtain the following problem:
18:	T:
		(1, 13)     eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 12) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 12) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 ] with all transitions in problem 18, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 13) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 /\ v_index.0 + 12 >= 0 /\ 2*v_index.0 + 12 >= 0 /\ 12 >= 0 /\ v_index.0 + 12 < 100 ]
We thus obtain the following problem:
19:	T:
		(1, 14)     eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 13) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 /\ v_index.0 + 12 >= 0 /\ 2*v_index.0 + 12 >= 0 /\ 12 >= 0 /\ v_index.0 + 12 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 13) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 /\ v_index.0 + 12 >= 0 /\ 2*v_index.0 + 12 >= 0 /\ 12 >= 0 /\ v_index.0 + 12 < 100 ] with all transitions in problem 19, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 14) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 /\ v_index.0 + 12 >= 0 /\ 2*v_index.0 + 12 >= 0 /\ 12 >= 0 /\ v_index.0 + 12 < 100 /\ v_index.0 + 13 >= 0 /\ 2*v_index.0 + 13 >= 0 /\ 13 >= 0 /\ v_index.0 + 13 < 100 ]
We thus obtain the following problem:
20:	T:
		(1, 15)     eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 14) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 /\ v_index.0 + 12 >= 0 /\ 2*v_index.0 + 12 >= 0 /\ 12 >= 0 /\ v_index.0 + 12 < 100 /\ v_index.0 + 13 >= 0 /\ 2*v_index.0 + 13 >= 0 /\ 13 >= 0 /\ v_index.0 + 13 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

By chaining the transition eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 14) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 /\ v_index.0 + 12 >= 0 /\ 2*v_index.0 + 12 >= 0 /\ 12 >= 0 /\ v_index.0 + 12 < 100 /\ v_index.0 + 13 >= 0 /\ 2*v_index.0 + 13 >= 0 /\ 13 >= 0 /\ v_index.0 + 13 < 100 ] with all transitions in problem 20, the following new transition is obtained:
	eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 15) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 /\ v_index.0 + 12 >= 0 /\ 2*v_index.0 + 12 >= 0 /\ 12 >= 0 /\ v_index.0 + 12 < 100 /\ v_index.0 + 13 >= 0 /\ 2*v_index.0 + 13 >= 0 /\ 13 >= 0 /\ v_index.0 + 13 < 100 /\ v_index.0 + 14 >= 0 /\ 2*v_index.0 + 14 >= 0 /\ 14 >= 0 /\ v_index.0 + 14 < 100 ]
We thus obtain the following problem:
21:	T:
		(1, 16)     eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0 + 15) [ v_index.0 >= 0 /\ v_ch.0 = 0 /\ 2*v_index.0 >= 0 /\ 0 >= 0 /\ v_index.0 < 100 /\ v_index.0 + 1 >= 0 /\ 2*v_index.0 + 1 >= 0 /\ 1 >= 0 /\ v_index.0 + 1 < 100 /\ v_index.0 + 2 >= 0 /\ 2*v_index.0 + 2 >= 0 /\ 2 >= 0 /\ v_index.0 + 2 < 100 /\ v_index.0 + 3 >= 0 /\ 2*v_index.0 + 3 >= 0 /\ 3 >= 0 /\ v_index.0 + 3 < 100 /\ v_index.0 + 4 >= 0 /\ 2*v_index.0 + 4 >= 0 /\ 4 >= 0 /\ v_index.0 + 4 < 100 /\ v_index.0 + 5 >= 0 /\ 2*v_index.0 + 5 >= 0 /\ 5 >= 0 /\ v_index.0 + 5 < 100 /\ v_index.0 + 6 >= 0 /\ 2*v_index.0 + 6 >= 0 /\ 6 >= 0 /\ v_index.0 + 6 < 100 /\ v_index.0 + 7 >= 0 /\ 2*v_index.0 + 7 >= 0 /\ 7 >= 0 /\ v_index.0 + 7 < 100 /\ v_index.0 + 8 >= 0 /\ 2*v_index.0 + 8 >= 0 /\ 8 >= 0 /\ v_index.0 + 8 < 100 /\ v_index.0 + 9 >= 0 /\ 2*v_index.0 + 9 >= 0 /\ 9 >= 0 /\ v_index.0 + 9 < 100 /\ v_index.0 + 10 >= 0 /\ 2*v_index.0 + 10 >= 0 /\ 10 >= 0 /\ v_index.0 + 10 < 100 /\ v_index.0 + 11 >= 0 /\ 2*v_index.0 + 11 >= 0 /\ 11 >= 0 /\ v_index.0 + 11 < 100 /\ v_index.0 + 12 >= 0 /\ 2*v_index.0 + 12 >= 0 /\ 12 >= 0 /\ v_index.0 + 12 < 100 /\ v_index.0 + 13 >= 0 /\ 2*v_index.0 + 13 >= 0 /\ 13 >= 0 /\ v_index.0 + 13 < 100 /\ v_index.0 + 14 >= 0 /\ 2*v_index.0 + 14 >= 0 /\ 14 >= 0 /\ v_index.0 + 14 < 100 ]
		(100, 1)    eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.1 + 1) [ v_index.1 >= 0 /\ v_index.0 + v_index.1 >= 0 /\ -v_index.0 + v_index.1 >= 0 /\ v_index.0 >= 0 /\ v_index.1 < 100 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(1, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb4_in(v_ch.0, v_index.0, v_index.0) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 > 0 ]
		(?, 1)      eval_extractToken_bb1_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.1, v_index.0 + 1, v_index.1) [ v_index.0 >= 0 /\ v_ch.0 < 0 ]
		(1, 1)      eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb1_in(nondef.0, 0, v_index.1)
		(1, 1)      eval_extractToken_start(v_ch.0, v_index.0, v_index.1) -> eval_extractToken_bb0_in(v_ch.0, v_index.0, v_index.1)
	start location:	eval_extractToken_start
	leaf cost:	3

Complexity upper bound ?

Time: 1.970 sec (SMT: 1.633 sec)
