MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_array_param_read_start() -> eval_array_param_read_bb0_in()
		(?, 1)    eval_array_param_read_bb0_in() -> eval_array_param_read_bb1_in()
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb6_in() [ nondef.1 - nondef.2 = 0 ]
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb6_in() [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb6_in() [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb5_in()
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb6_in()
		(?, 1)    eval_array_param_read_bb5_in() -> eval_array_param_read_bb1_in()
		(?, 1)    eval_array_param_read_bb6_in() -> eval_array_param_read_stop()
	start location:	eval_array_param_read_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_array_param_read_start() -> eval_array_param_read_bb0_in()
		(?, 1)    eval_array_param_read_bb0_in() -> eval_array_param_read_bb1_in()
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb5_in()
		(?, 1)    eval_array_param_read_bb5_in() -> eval_array_param_read_bb1_in()
	start location:	eval_array_param_read_start
	leaf cost:	5

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_array_param_read_start() -> eval_array_param_read_bb0_in()
		(1, 1)    eval_array_param_read_bb0_in() -> eval_array_param_read_bb1_in()
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb5_in()
		(?, 1)    eval_array_param_read_bb5_in() -> eval_array_param_read_bb1_in()
	start location:	eval_array_param_read_start
	leaf cost:	5

By chaining the transition eval_array_param_read_start() -> eval_array_param_read_bb0_in() with all transitions in problem 3, the following new transition is obtained:
	eval_array_param_read_start() -> eval_array_param_read_bb1_in()
We thus obtain the following problem:
4:	T:
		(1, 2)    eval_array_param_read_start() -> eval_array_param_read_bb1_in()
		(1, 1)    eval_array_param_read_bb0_in() -> eval_array_param_read_bb1_in()
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb5_in()
		(?, 1)    eval_array_param_read_bb5_in() -> eval_array_param_read_bb1_in()
	start location:	eval_array_param_read_start
	leaf cost:	5

Testing for reachability in the complexity graph removes the following transition from problem 4:
	eval_array_param_read_bb0_in() -> eval_array_param_read_bb1_in()
We thus obtain the following problem:
5:	T:
		(?, 1)    eval_array_param_read_bb5_in() -> eval_array_param_read_bb1_in()
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb5_in()
		(1, 2)    eval_array_param_read_start() -> eval_array_param_read_bb1_in()
	start location:	eval_array_param_read_start
	leaf cost:	5

By chaining the transition eval_array_param_read_bb5_in() -> eval_array_param_read_bb1_in() with all transitions in problem 5, the following new transition is obtained:
	eval_array_param_read_bb5_in() -> eval_array_param_read_bb5_in()
We thus obtain the following problem:
6:	T:
		(?, 2)    eval_array_param_read_bb5_in() -> eval_array_param_read_bb5_in()
		(?, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb5_in()
		(1, 2)    eval_array_param_read_start() -> eval_array_param_read_bb1_in()
	start location:	eval_array_param_read_start
	leaf cost:	5

Repeatedly propagating knowledge in problem 6 produces the following problem:
7:	T:
		(?, 2)    eval_array_param_read_bb5_in() -> eval_array_param_read_bb5_in()
		(1, 1)    eval_array_param_read_bb1_in() -> eval_array_param_read_bb5_in()
		(1, 2)    eval_array_param_read_start() -> eval_array_param_read_bb1_in()
	start location:	eval_array_param_read_start
	leaf cost:	5

Complexity upper bound ?

Time: 0.037 sec (SMT: 0.033 sec)
