YES(?, 777)

Initial complexity problem:
1:	T:
		(1, 1)    eval_init_error_limit_start(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_0(v_in.0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_0(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_1(v_in.0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_1(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(v_in.0 + 1, v_in.1, v_in.2) [ v_in.0 < 16 ]
		(?, 1)    eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.0, v_in.2) [ v_in.0 >= 16 ]
		(?, 1)    eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.1 + 1, v_in.2) [ v_in.1 < 48 ]
		(?, 1)    eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.1) [ v_in.1 >= 48 ]
		(?, 1)    eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2 + 1) [ v_in.2 <= 255 ]
		(?, 1)    eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_stop(v_in.0, v_in.1, v_in.2) [ v_in.2 > 255 ]
	start location:	eval_init_error_limit_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_init_error_limit_start(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_0(v_in.0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_0(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_1(v_in.0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_1(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(v_in.0 + 1, v_in.1, v_in.2) [ v_in.0 < 16 ]
		(?, 1)    eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.0, v_in.2) [ v_in.0 >= 16 ]
		(?, 1)    eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.1 + 1, v_in.2) [ v_in.1 < 48 ]
		(?, 1)    eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.1) [ v_in.1 >= 48 ]
		(?, 1)    eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2 + 1) [ v_in.2 <= 255 ]
	start location:	eval_init_error_limit_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_init_error_limit_start(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2)
		(1, 1)    eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_0(v_in.0, v_in.1, v_in.2)
		(1, 1)    eval_init_error_limit_0(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_1(v_in.0, v_in.1, v_in.2)
		(1, 1)    eval_init_error_limit_1(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(v_in.0 + 1, v_in.1, v_in.2) [ v_in.0 < 16 ]
		(?, 1)    eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.0, v_in.2) [ v_in.0 >= 16 ]
		(?, 1)    eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.1 + 1, v_in.2) [ v_in.1 < 48 ]
		(?, 1)    eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.1) [ v_in.1 >= 48 ]
		(?, 1)    eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2 + 1) [ v_in.2 <= 255 ]
	start location:	eval_init_error_limit_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_init_error_limit_start) = 2
	Pol(eval_init_error_limit_bb0_in) = 2
	Pol(eval_init_error_limit_0) = 2
	Pol(eval_init_error_limit_1) = 2
	Pol(eval_init_error_limit_bb1_in) = 2
	Pol(eval_init_error_limit_bb3_in) = 1
	Pol(eval_init_error_limit_bb5_in) = 0
orients all transitions weakly and the transitions
	eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.1) [ v_in.1 >= 48 ]
	eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.0, v_in.2) [ v_in.0 >= 16 ]
strictly and produces the following problem:
4:	T:
		(1, 1)    eval_init_error_limit_start(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2)
		(1, 1)    eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_0(v_in.0, v_in.1, v_in.2)
		(1, 1)    eval_init_error_limit_0(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_1(v_in.0, v_in.1, v_in.2)
		(1, 1)    eval_init_error_limit_1(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(0, v_in.1, v_in.2)
		(?, 1)    eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(v_in.0 + 1, v_in.1, v_in.2) [ v_in.0 < 16 ]
		(2, 1)    eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.0, v_in.2) [ v_in.0 >= 16 ]
		(?, 1)    eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.1 + 1, v_in.2) [ v_in.1 < 48 ]
		(2, 1)    eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.1) [ v_in.1 >= 48 ]
		(?, 1)    eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2 + 1) [ v_in.2 <= 255 ]
	start location:	eval_init_error_limit_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_init_error_limit_start) = 256
	Pol(eval_init_error_limit_bb0_in) = 256
	Pol(eval_init_error_limit_0) = 256
	Pol(eval_init_error_limit_1) = 256
	Pol(eval_init_error_limit_bb1_in) = -V_1 + 256
	Pol(eval_init_error_limit_bb3_in) = -V_2 + 256
	Pol(eval_init_error_limit_bb5_in) = -V_3 + 256
orients all transitions weakly and the transitions
	eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2 + 1) [ v_in.2 <= 255 ]
	eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.1 + 1, v_in.2) [ v_in.1 < 48 ]
	eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(v_in.0 + 1, v_in.1, v_in.2) [ v_in.0 < 16 ]
strictly and produces the following problem:
5:	T:
		(1, 1)      eval_init_error_limit_start(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2)
		(1, 1)      eval_init_error_limit_bb0_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_0(v_in.0, v_in.1, v_in.2)
		(1, 1)      eval_init_error_limit_0(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_1(v_in.0, v_in.1, v_in.2)
		(1, 1)      eval_init_error_limit_1(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(0, v_in.1, v_in.2)
		(256, 1)    eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb1_in(v_in.0 + 1, v_in.1, v_in.2) [ v_in.0 < 16 ]
		(2, 1)      eval_init_error_limit_bb1_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.0, v_in.2) [ v_in.0 >= 16 ]
		(256, 1)    eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb3_in(v_in.0, v_in.1 + 1, v_in.2) [ v_in.1 < 48 ]
		(2, 1)      eval_init_error_limit_bb3_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.1) [ v_in.1 >= 48 ]
		(256, 1)    eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2) -> eval_init_error_limit_bb5_in(v_in.0, v_in.1, v_in.2 + 1) [ v_in.2 <= 255 ]
	start location:	eval_init_error_limit_start
	leaf cost:	1

Complexity upper bound 777

Time: 0.211 sec (SMT: 0.193 sec)
