MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_insert_x_new_start() -> eval_insert_x_new_bb0_in()
		(?, 1)    eval_insert_x_new_bb0_in() -> eval_insert_x_new_.critedge1_in()
		(?, 1)    eval_insert_x_new_.critedge1_in() -> eval_insert_x_new_.critedge1_in()
		(?, 1)    eval_insert_x_new_.critedge1_in() -> eval_insert_x_new_.critedge_in()
		(?, 1)    eval_insert_x_new_.critedge_in() -> eval_insert_x_new_bb6_in()
		(?, 1)    eval_insert_x_new_bb6_in() -> eval_insert_x_new_stop()
	start location:	eval_insert_x_new_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_insert_x_new_start() -> eval_insert_x_new_bb0_in()
		(?, 1)    eval_insert_x_new_bb0_in() -> eval_insert_x_new_.critedge1_in()
		(?, 1)    eval_insert_x_new_.critedge1_in() -> eval_insert_x_new_.critedge1_in()
	start location:	eval_insert_x_new_start
	leaf cost:	3

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_insert_x_new_start() -> eval_insert_x_new_bb0_in()
		(1, 1)    eval_insert_x_new_bb0_in() -> eval_insert_x_new_.critedge1_in()
		(?, 1)    eval_insert_x_new_.critedge1_in() -> eval_insert_x_new_.critedge1_in()
	start location:	eval_insert_x_new_start
	leaf cost:	3

By chaining the transition eval_insert_x_new_start() -> eval_insert_x_new_bb0_in() with all transitions in problem 3, the following new transition is obtained:
	eval_insert_x_new_start() -> eval_insert_x_new_.critedge1_in()
We thus obtain the following problem:
4:	T:
		(1, 2)    eval_insert_x_new_start() -> eval_insert_x_new_.critedge1_in()
		(1, 1)    eval_insert_x_new_bb0_in() -> eval_insert_x_new_.critedge1_in()
		(?, 1)    eval_insert_x_new_.critedge1_in() -> eval_insert_x_new_.critedge1_in()
	start location:	eval_insert_x_new_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 4:
	eval_insert_x_new_bb0_in() -> eval_insert_x_new_.critedge1_in()
We thus obtain the following problem:
5:	T:
		(?, 1)    eval_insert_x_new_.critedge1_in() -> eval_insert_x_new_.critedge1_in()
		(1, 2)    eval_insert_x_new_start() -> eval_insert_x_new_.critedge1_in()
	start location:	eval_insert_x_new_start
	leaf cost:	3

Complexity upper bound ?

Time: 0.056 sec (SMT: 0.053 sec)
