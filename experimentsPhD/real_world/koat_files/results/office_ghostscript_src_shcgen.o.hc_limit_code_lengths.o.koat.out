MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_hc_limit_code_lengths_start(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb0_in(v_24, v_max_length, v_needed.0, v_num_values)
		(?, 1)    eval_hc_limit_code_lengths_bb0_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_max_length, v_needed.0, v_num_values)
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_max_length, v_needed.0, v_num_values)
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_max_length, v_needed.0, v_num_values) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_max_length, v_needed.0, v_num_values) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_max_length, v_needed.0, v_num_values) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_max_length, v_needed.0, v_num_values)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_max_length, v_24, v_num_values)
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_max_length, v_needed.0, v_num_values) [ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_max_length, v_needed.0, v_num_values) [ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_stop(v_24, v_max_length, v_needed.0, v_num_values) [ v_needed.0 <= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_max_length, v_needed.0, v_num_values)
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_max_length, v_needed.0, v_num_values) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_max_length, v_needed.0 - 1, v_num_values)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_24, v_needed.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1)
		(?, 1)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_stop(v_24, v_needed.0) [ v_needed.0 <= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) [ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 1)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1)
		(?, 1)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) [ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 1)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1)
		(?, 1)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) [ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 1)    eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 1)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_hc_limit_code_lengths_bb11_in) = 0
	Pol(eval_hc_limit_code_lengths_bb6_in) = 0
	Pol(eval_hc_limit_code_lengths_NewDefault_in) = 0
	Pol(eval_hc_limit_code_lengths_bb4_in) = 1
	Pol(eval_hc_limit_code_lengths_bb1_in) = 2
	Pol(eval_hc_limit_code_lengths_bb0_in) = 2
	Pol(eval_hc_limit_code_lengths_start) = 2
orients all transitions weakly and the transitions
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
	eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
	eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
	eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
strictly and produces the following problem:
5:	T:
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1)
		(?, 1)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) [ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_needed.0 > 0 ]
		(2, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 1)    eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 1)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

Applied AI with 'oct' on problem 5 to obtain the following invariants:
  For symbol eval_hc_limit_code_lengths_NewDefault_in: X_1 - X_2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_hc_limit_code_lengths_bb11_in: X_1 - X_2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_hc_limit_code_lengths_bb6_in: X_1 - X_2 >= 0


This yielded the following problem:
6:	T:
		(1, 1)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0)
		(1, 1)    eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0) with all transitions in problem 6, the following new transition is obtained:
	eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
We thus obtain the following problem:
7:	T:
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 1)    eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 7:
	eval_hc_limit_code_lengths_bb0_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
We thus obtain the following problem:
8:	T:
		(?, 1)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(2, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(2, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ] with all transitions in problem 9, the following new transition is obtained:
	eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
We thus obtain the following problem:
10:	T:
		(?, 3)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(2, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_hc_limit_code_lengths_NewDefault_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 3)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ]
		(2, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 ] with all transitions in problem 11, the following new transition is obtained:
	eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(2, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_hc_limit_code_lengths_bb11_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
We thus obtain the following problem:
13:	T:
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(2, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24)
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24) with all transitions in problem 13, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 1) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 1) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 ]
We thus obtain the following problem:
14:	T:
		(2, 3)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 1) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 ]
		(2, 3)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 1) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 1) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 ] with all transitions in problem 14, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 2) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 2) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 ]
We thus obtain the following problem:
15:	T:
		(2, 5)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 2) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 ]
		(2, 5)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 2) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 2) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 ] with all transitions in problem 15, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 3) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 3) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 ]
We thus obtain the following problem:
16:	T:
		(2, 7)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 3) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 ]
		(2, 7)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 3) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 3) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 ] with all transitions in problem 16, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 4) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 4) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 ]
We thus obtain the following problem:
17:	T:
		(2, 9)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 4) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 ]
		(2, 9)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 4) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)    eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)    eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)    eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 4) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 ] with all transitions in problem 17, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 5) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 5) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 ]
We thus obtain the following problem:
18:	T:
		(2, 11)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 5) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 ]
		(2, 11)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 5) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)     eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 5) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 ] with all transitions in problem 18, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 6) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 6) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 ]
We thus obtain the following problem:
19:	T:
		(2, 13)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 6) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 ]
		(2, 13)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 6) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)     eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 6) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 ] with all transitions in problem 19, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 7) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 7) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 ]
We thus obtain the following problem:
20:	T:
		(2, 15)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 7) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 ]
		(2, 15)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 7) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)     eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 7) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 ] with all transitions in problem 20, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 8) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 8) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 ]
We thus obtain the following problem:
21:	T:
		(2, 17)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 8) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 ]
		(2, 17)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 8) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)     eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 8) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 ] with all transitions in problem 21, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 9) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 9) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 ]
We thus obtain the following problem:
22:	T:
		(2, 19)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 9) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 ]
		(2, 19)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 9) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)     eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 9) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 ] with all transitions in problem 22, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 10) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 /\ 9 >= 0 /\ v_24 - 9 > 0 /\ v_24 - 10 >= 0 /\ 2*v_24 - 11 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 10) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 /\ 9 >= 0 /\ v_24 - 9 > 0 /\ v_24 - 10 >= 0 /\ 2*v_24 - 11 >= 0 ]
We thus obtain the following problem:
23:	T:
		(2, 21)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 10) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 /\ 9 >= 0 /\ v_24 - 9 > 0 /\ v_24 - 10 >= 0 /\ 2*v_24 - 11 >= 0 ]
		(2, 21)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 10) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 /\ 9 >= 0 /\ v_24 - 9 > 0 /\ v_24 - 10 >= 0 /\ 2*v_24 - 11 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)     eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

By chaining the transition eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 10) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 /\ 9 >= 0 /\ v_24 - 9 > 0 /\ v_24 - 10 >= 0 /\ 2*v_24 - 11 >= 0 ] with all transitions in problem 23, the following new transitions are obtained:
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 11) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 /\ 9 >= 0 /\ v_24 - 9 > 0 /\ v_24 - 10 >= 0 /\ 2*v_24 - 11 >= 0 /\ 10 >= 0 /\ v_24 - 10 > 0 /\ v_24 - 11 >= 0 /\ 2*v_24 - 12 >= 0 ]
	eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 11) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 /\ 9 >= 0 /\ v_24 - 9 > 0 /\ v_24 - 10 >= 0 /\ 2*v_24 - 11 >= 0 /\ 10 >= 0 /\ v_24 - 10 > 0 /\ v_24 - 11 >= 0 /\ 2*v_24 - 12 >= 0 ]
We thus obtain the following problem:
24:	T:
		(2, 23)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 11) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 /\ 9 >= 0 /\ v_24 - 9 > 0 /\ v_24 - 10 >= 0 /\ 2*v_24 - 11 >= 0 /\ 10 >= 0 /\ v_24 - 10 > 0 /\ v_24 - 11 >= 0 /\ 2*v_24 - 12 >= 0 ]
		(2, 23)    eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_24 - 11) [ 0 >= 0 /\ v_24 > 0 /\ v_24 - 1 >= 0 /\ 2*v_24 - 2 >= 0 /\ 1 >= 0 /\ v_24 - 1 > 0 /\ v_24 - 2 >= 0 /\ 2*v_24 - 3 >= 0 /\ 2 >= 0 /\ v_24 - 2 > 0 /\ v_24 - 3 >= 0 /\ 2*v_24 - 4 >= 0 /\ 3 >= 0 /\ v_24 - 3 > 0 /\ v_24 - 4 >= 0 /\ 2*v_24 - 5 >= 0 /\ 4 >= 0 /\ v_24 - 4 > 0 /\ v_24 - 5 >= 0 /\ 2*v_24 - 6 >= 0 /\ 5 >= 0 /\ v_24 - 5 > 0 /\ v_24 - 6 >= 0 /\ 2*v_24 - 7 >= 0 /\ 6 >= 0 /\ v_24 - 6 > 0 /\ v_24 - 7 >= 0 /\ 2*v_24 - 8 >= 0 /\ 7 >= 0 /\ v_24 - 7 > 0 /\ v_24 - 8 >= 0 /\ 2*v_24 - 9 >= 0 /\ 8 >= 0 /\ v_24 - 8 > 0 /\ v_24 - 9 >= 0 /\ 2*v_24 - 10 >= 0 /\ 9 >= 0 /\ v_24 - 9 > 0 /\ v_24 - 10 >= 0 /\ 2*v_24 - 11 >= 0 /\ 10 >= 0 /\ v_24 - 10 > 0 /\ v_24 - 11 >= 0 /\ 2*v_24 - 12 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 2)     eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb6_in(v_24, v_needed.0 - 1) [ v_24 - v_needed.0 >= 0 /\ v_needed.0 > 0 /\ v_needed.0 - 1 >= 0 /\ v_24 + v_needed.0 - 2 >= 0 /\ v_24 - 1 >= 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(v_24, v_needed.0)
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 < 0 /\ nondef.5 <= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 >= 0 /\ -nondef.3 + nondef.4 + 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(nondef.5 - nondef.6, v_needed.0) [ nondef.3 - nondef.4 > 0 /\ nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 >= 0 /\ nondef.3 - nondef.4 - 40*nondef.5 < 40 ]
		(2, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb4_in(-nondef.6, v_needed.0) [ nondef.3 - nondef.4 = 0 ]
		(?, 1)     eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
		(1, 2)     eval_hc_limit_code_lengths_start(v_24, v_needed.0) -> eval_hc_limit_code_lengths_bb1_in(v_24, v_needed.0)
	start location:	eval_hc_limit_code_lengths_start
	leaf cost:	1

Complexity upper bound ?

Time: 1.059 sec (SMT: 0.850 sec)
