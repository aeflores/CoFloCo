YES(?, 9*v_len + 11)

Initial complexity problem:
1:	T:
		(1, 1)    eval_debug_print_string_start(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb0_in(v_5, v_i.0, v_len))
		(?, 1)    eval_debug_print_string_bb0_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, 0, v_len))
		(?, 1)    eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 < v_len ]
		(?, 1)    eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_6(v_5, v_i.0, v_len)) [ v_i.0 >= v_len ]
		(?, 1)    eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len))
		(?, 1)    eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len))
		(?, 1)    eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len))
		(?, 1)    eval_debug_print_string_7(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_stop(v_5, v_i.0, v_len))
	start location:	eval_debug_print_string_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_debug_print_string_start(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb0_in(v_5, v_i.0, v_len))
		(1, 1)    eval_debug_print_string_bb0_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, 0, v_len))
		(?, 1)    eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 < v_len ]
		(?, 1)    eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_6(v_5, v_i.0, v_len)) [ v_i.0 >= v_len ]
		(?, 1)    eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len))
		(?, 1)    eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len))
		(?, 1)    eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len))
		(?, 1)    eval_debug_print_string_7(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_stop(v_5, v_i.0, v_len))
	start location:	eval_debug_print_string_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_debug_print_string_start) = 3
	Pol(eval_debug_print_string_bb0_in) = 3
	Pol(eval_debug_print_string_bb1_in) = 3
	Pol(eval_debug_print_string_3) = 3
	Pol(eval_debug_print_string_6) = 2
	Pol(eval_fprintf_start) = 0
	Pol(eval_debug_print_string_4) = 3
	Pol(eval_fflush_start) = 0
	Pol(eval_debug_print_string_7) = 1
	Pol(eval_debug_print_string_stop) = 0
orients all transitions weakly and the transitions
	eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_6(v_5, v_i.0, v_len)) [ v_i.0 >= v_len ]
	eval_debug_print_string_7(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_stop(v_5, v_i.0, v_len))
	eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_debug_print_string_start(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb0_in(v_5, v_i.0, v_len))
		(1, 1)    eval_debug_print_string_bb0_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, 0, v_len))
		(?, 1)    eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 < v_len ]
		(3, 1)    eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_6(v_5, v_i.0, v_len)) [ v_i.0 >= v_len ]
		(?, 1)    eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len))
		(?, 1)    eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len))
		(3, 1)    eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len))
		(3, 1)    eval_debug_print_string_7(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_stop(v_5, v_i.0, v_len))
	start location:	eval_debug_print_string_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_debug_print_string_3: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_2 >= 0
  For symbol eval_debug_print_string_4: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_2 >= 0
  For symbol eval_debug_print_string_6: X_2 - X_3 >= 0 /\ X_2 >= 0
  For symbol eval_debug_print_string_7: X_2 - X_3 >= 0 /\ X_2 >= 0
  For symbol eval_debug_print_string_bb1_in: X_2 >= 0


This yielded the following problem:
4:	T:
		(3, 1)    eval_debug_print_string_7(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_stop(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\ v_i.0 >= 0 ]
		(3, 1)    eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len)) [ v_len - 1 >= 0 /\ v_i.0 + v_len - 1 >= 0 /\ -v_i.0 + v_len - 1 >= 0 /\ v_i.0 >= 0 ]
		(?, 1)    eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\ v_i.0 + v_len - 1 >= 0 /\ -v_i.0 + v_len - 1 >= 0 /\ v_i.0 >= 0 ]
		(3, 1)    eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_6(v_5, v_i.0, v_len)) [ v_i.0 >= 0 /\ v_i.0 >= v_len ]
		(?, 1)    eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 >= 0 /\ v_i.0 < v_len ]
		(1, 1)    eval_debug_print_string_bb0_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, 0, v_len))
		(1, 1)    eval_debug_print_string_start(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb0_in(v_5, v_i.0, v_len))
	start location:	eval_debug_print_string_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_debug_print_string_bb1_in) = -3*V_2 + 3*V_3
	Pol(eval_debug_print_string_3) = -3*V_2 + 3*V_3 - 1
	Pol(eval_debug_print_string_4) = -3*V_2 + 3*V_3 - 2
	Pol(eval_fprintf_start) = -3*V_2
and size complexities
	S("eval_debug_print_string_start(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb0_in(v_5, v_i.0, v_len))", 0-0) = v_5
	S("eval_debug_print_string_start(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb0_in(v_5, v_i.0, v_len))", 0-1) = v_i.0
	S("eval_debug_print_string_start(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb0_in(v_5, v_i.0, v_len))", 0-2) = v_len
	S("eval_debug_print_string_bb0_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, 0, v_len))", 0-0) = v_5
	S("eval_debug_print_string_bb0_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, 0, v_len))", 0-1) = 0
	S("eval_debug_print_string_bb0_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, 0, v_len))", 0-2) = v_len
	S("eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 >= 0 /\\ v_i.0 < v_len ]", 0-0) = ?
	S("eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 >= 0 /\\ v_i.0 < v_len ]", 0-1) = v_len
	S("eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 >= 0 /\\ v_i.0 < v_len ]", 0-2) = v_len
	S("eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_6(v_5, v_i.0, v_len)) [ v_i.0 >= 0 /\\ v_i.0 >= v_len ]", 0-0) = ?
	S("eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_6(v_5, v_i.0, v_len)) [ v_i.0 >= 0 /\\ v_i.0 >= v_len ]", 0-1) = v_len
	S("eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_6(v_5, v_i.0, v_len)) [ v_i.0 >= 0 /\\ v_i.0 >= v_len ]", 0-2) = v_len
	S("eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\\ v_i.0 + v_len - 1 >= 0 /\\ -v_i.0 + v_len - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-0) = ?
	S("eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\\ v_i.0 + v_len - 1 >= 0 /\\ -v_i.0 + v_len - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_len
	S("eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\\ v_i.0 + v_len - 1 >= 0 /\\ -v_i.0 + v_len - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-2) = v_len
	S("eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\\ v_i.0 + v_len - 1 >= 0 /\\ -v_i.0 + v_len - 1 >= 0 /\\ v_i.0 >= 0 ]", 1-0) = ?
	S("eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\\ v_i.0 + v_len - 1 >= 0 /\\ -v_i.0 + v_len - 1 >= 0 /\\ v_i.0 >= 0 ]", 1-1) = v_len
	S("eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\\ v_i.0 + v_len - 1 >= 0 /\\ -v_i.0 + v_len - 1 >= 0 /\\ v_i.0 >= 0 ]", 1-2) = v_len
	S("eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len)) [ v_len - 1 >= 0 /\\ v_i.0 + v_len - 1 >= 0 /\\ -v_i.0 + v_len - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-0) = ?
	S("eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len)) [ v_len - 1 >= 0 /\\ v_i.0 + v_len - 1 >= 0 /\\ -v_i.0 + v_len - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_len
	S("eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len)) [ v_len - 1 >= 0 /\\ v_i.0 + v_len - 1 >= 0 /\\ -v_i.0 + v_len - 1 >= 0 /\\ v_i.0 >= 0 ]", 0-2) = v_len
	S("eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\\ v_i.0 >= 0 ]", 0-0) = ?
	S("eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_len
	S("eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\\ v_i.0 >= 0 ]", 0-2) = v_len
	S("eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\\ v_i.0 >= 0 ]", 1-0) = ?
	S("eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\\ v_i.0 >= 0 ]", 1-1) = v_len
	S("eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\\ v_i.0 >= 0 ]", 1-2) = v_len
	S("eval_debug_print_string_7(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_stop(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\\ v_i.0 >= 0 ]", 0-0) = ?
	S("eval_debug_print_string_7(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_stop(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\\ v_i.0 >= 0 ]", 0-1) = v_len
	S("eval_debug_print_string_7(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_stop(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\\ v_i.0 >= 0 ]", 0-2) = v_len
orients the transitions
	eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 >= 0 /\ v_i.0 < v_len ]
	eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len)) [ v_len - 1 >= 0 /\ v_i.0 + v_len - 1 >= 0 /\ -v_i.0 + v_len - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\ v_i.0 + v_len - 1 >= 0 /\ -v_i.0 + v_len - 1 >= 0 /\ v_i.0 >= 0 ]
weakly and the transitions
	eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 >= 0 /\ v_i.0 < v_len ]
	eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len)) [ v_len - 1 >= 0 /\ v_i.0 + v_len - 1 >= 0 /\ -v_i.0 + v_len - 1 >= 0 /\ v_i.0 >= 0 ]
	eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\ v_i.0 + v_len - 1 >= 0 /\ -v_i.0 + v_len - 1 >= 0 /\ v_i.0 >= 0 ]
strictly and produces the following problem:
5:	T:
		(3, 1)          eval_debug_print_string_7(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_stop(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\ v_i.0 >= 0 ]
		(3, 1)          eval_debug_print_string_6(v_5, v_i.0, v_len) -> Com_2(eval_fflush_start(v_5, v_i.0, v_len), eval_debug_print_string_7(v_5, v_i.0, v_len)) [ v_i.0 - v_len >= 0 /\ v_i.0 >= 0 ]
		(3*v_len, 1)    eval_debug_print_string_4(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, v_i.0 + 1, v_len)) [ v_len - 1 >= 0 /\ v_i.0 + v_len - 1 >= 0 /\ -v_i.0 + v_len - 1 >= 0 /\ v_i.0 >= 0 ]
		(3*v_len, 1)    eval_debug_print_string_3(v_5, v_i.0, v_len) -> Com_2(eval_fprintf_start(v_5, v_i.0, v_len), eval_debug_print_string_4(v_5, v_i.0, v_len)) [ v_len - 1 >= 0 /\ v_i.0 + v_len - 1 >= 0 /\ -v_i.0 + v_len - 1 >= 0 /\ v_i.0 >= 0 ]
		(3, 1)          eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_6(v_5, v_i.0, v_len)) [ v_i.0 >= 0 /\ v_i.0 >= v_len ]
		(3*v_len, 1)    eval_debug_print_string_bb1_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_3(nondef.0, v_i.0, v_len)) [ v_i.0 >= 0 /\ v_i.0 < v_len ]
		(1, 1)          eval_debug_print_string_bb0_in(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb1_in(v_5, 0, v_len))
		(1, 1)          eval_debug_print_string_start(v_5, v_i.0, v_len) -> Com_1(eval_debug_print_string_bb0_in(v_5, v_i.0, v_len))
	start location:	eval_debug_print_string_start
	leaf cost:	0

Complexity upper bound 9*v_len + 11

Time: 0.099 sec (SMT: 0.086 sec)
