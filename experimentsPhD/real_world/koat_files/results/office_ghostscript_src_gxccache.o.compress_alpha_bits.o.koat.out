MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb11_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_h.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb11_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_h.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_w.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_w.1 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb11_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_stop(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_h.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_w.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_w.1 = 0 ]
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_h.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_w.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_w.1 = 0 ]
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_compress_alpha_bits_bb1_in: X_3 - X_4 >= 0
  For symbol eval_compress_alpha_bits_bb2_in: X_2 - X_5 >= 0 /\ X_3 - X_4 >= 0
  For symbol eval_compress_alpha_bits_bb5_in: X_2 - X_5 >= 0 /\ X_3 - X_4 >= 0
  For symbol eval_compress_alpha_bits_bb8_in: X_1 - X_6 >= 0 /\ -X_5 >= 0 /\ X_2 - X_5 >= 0 /\ X_5 >= 0 /\ X_2 + X_5 >= 0 /\ X_3 - X_4 >= 0 /\ X_2 >= 0


This yielded the following problem:
4:	T:
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)    eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)    eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ] with all transitions in problem 5, the following new transition is obtained:
	eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
We thus obtain the following problem:
6:	T:
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)    eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_compress_alpha_bits_bb5_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 ]
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 1)    eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) with all transitions in problem 7, the following new transition is obtained:
	eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
We thus obtain the following problem:
8:	T:
		(1, 2)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 1)    eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_compress_alpha_bits_20(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
We thus obtain the following problem:
9:	T:
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 2)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_19(nondef.7 - nondef.8, nondef.0, nondef.1, v_h.0, v_w.0, v_w.1) with all transitions in problem 9, the following new transition is obtained:
	eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
We thus obtain the following problem:
10:	T:
		(1, 3)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 2)    eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_compress_alpha_bits_19(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_7, v_w.0, v_w.1)
We thus obtain the following problem:
11:	T:
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 3)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
		(1, 1)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) with all transitions in problem 11, the following new transition is obtained:
	eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
We thus obtain the following problem:
12:	T:
		(1, 4)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 3)    eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_compress_alpha_bits_bb0_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
We thus obtain the following problem:
13:	T:
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0 - 1, v_w.0, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 ] with all transitions in problem 13, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
We thus obtain the following problem:
14:	T:
		(?, 2)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

Repeatedly propagating knowledge in problem 14 produces the following problem:
15:	T:
		(?, 2)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 ] with all transitions in problem 15, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
We thus obtain the following problem:
16:	T:
		(?, 4)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 ]
		(?, 3)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 ] with all transitions in problem 16, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 = 0 ]
We thus obtain the following problem:
17:	T:
		(?, 6)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 ]
		(?, 5)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 = 0 ]
		(?, 3)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 ] with all transitions in problem 17, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 = 0 ]
We thus obtain the following problem:
18:	T:
		(?, 8)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 ]
		(?, 7)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 = 0 ]
		(?, 5)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 = 0 ]
		(?, 3)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
		(?, 2)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)    eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)    eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)    eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 ] with all transitions in problem 18, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 = 0 ]
We thus obtain the following problem:
19:	T:
		(?, 10)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 ]
		(?, 9)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 = 0 ]
		(?, 7)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 = 0 ]
		(?, 5)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 = 0 ]
		(?, 3)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
		(?, 2)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)     eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 ] with all transitions in problem 19, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 5, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 = 0 ]
We thus obtain the following problem:
20:	T:
		(?, 12)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 5, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 ]
		(?, 11)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 = 0 ]
		(?, 9)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 = 0 ]
		(?, 7)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 = 0 ]
		(?, 5)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 = 0 ]
		(?, 3)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
		(?, 2)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)     eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 5, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 ] with all transitions in problem 20, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 6, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 5, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 = 0 ]
We thus obtain the following problem:
21:	T:
		(?, 14)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 6, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 ]
		(?, 13)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 5, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 = 0 ]
		(?, 11)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 = 0 ]
		(?, 9)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 = 0 ]
		(?, 7)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 = 0 ]
		(?, 5)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 = 0 ]
		(?, 3)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
		(?, 2)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)     eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 6, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 ] with all transitions in problem 21, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 7, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 6, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 = 0 ]
We thus obtain the following problem:
22:	T:
		(?, 16)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 7, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 ]
		(?, 15)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 6, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 = 0 ]
		(?, 13)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 5, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 = 0 ]
		(?, 11)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 = 0 ]
		(?, 9)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 = 0 ]
		(?, 7)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 = 0 ]
		(?, 5)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 = 0 ]
		(?, 3)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
		(?, 2)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)     eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 7, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 ] with all transitions in problem 22, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 8, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 > 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 7, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 = 0 ]
We thus obtain the following problem:
23:	T:
		(?, 18)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 8, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 > 0 ]
		(?, 17)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 7, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 = 0 ]
		(?, 15)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 6, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 = 0 ]
		(?, 13)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 5, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 = 0 ]
		(?, 11)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 = 0 ]
		(?, 9)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 = 0 ]
		(?, 7)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 = 0 ]
		(?, 5)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 = 0 ]
		(?, 3)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
		(?, 2)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)     eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

By chaining the transition eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 8, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 > 0 ] with all transitions in problem 23, the following new transitions are obtained:
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 9, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 > 0 /\ 8 >= 0 /\ v_4 - 8 > 0 ]
	eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 8, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 > 0 /\ 8 >= 0 /\ v_4 - 8 = 0 ]
We thus obtain the following problem:
24:	T:
		(?, 20)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 9, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 > 0 /\ 8 >= 0 /\ v_4 - 8 > 0 ]
		(?, 19)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 8, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 > 0 /\ 8 >= 0 /\ v_4 - 8 = 0 ]
		(?, 17)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 7, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 > 0 /\ 7 >= 0 /\ v_4 - 7 = 0 ]
		(?, 15)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 6, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 > 0 /\ 6 >= 0 /\ v_4 - 6 = 0 ]
		(?, 13)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 5, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 > 0 /\ 5 >= 0 /\ v_4 - 5 = 0 ]
		(?, 11)    eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 > 0 /\ 4 >= 0 /\ v_4 - 4 = 0 ]
		(?, 9)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 3, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 > 0 /\ 3 >= 0 /\ v_4 - 3 = 0 ]
		(?, 7)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 2, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 > 0 /\ 2 >= 0 /\ v_4 - 2 = 0 ]
		(?, 5)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4 - 1, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 > 0 /\ 1 >= 0 /\ v_4 - 1 = 0 ]
		(?, 3)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_24) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 < 0 /\ 0 >= 0 /\ v_4 = 0 ]
		(?, 2)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0 - 1, v_4, v_w.1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 = 0 /\ v_7 - v_h.0 + 1 >= 0 /\ v_h.0 - 1 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 < 0 ]
		(?, 1)     eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1 - 1) [ v_24 - v_w.1 >= 0 /\ -v_w.0 >= 0 /\ v_4 - v_w.0 >= 0 /\ v_w.0 >= 0 /\ v_4 + v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_4 >= 0 /\ v_w.1 > 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 < 0 ]
		(?, 2)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0 - 1, v_w.1) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 > 0 ]
		(?, 1)     eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb8_in(v_24, v_4, v_7, v_h.0, v_w.0, v_24) [ v_4 - v_w.0 >= 0 /\ v_7 - v_h.0 >= 0 /\ v_w.0 = 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 < 0 ]
		(1, 1)     eval_compress_alpha_bits_bb1_in(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb2_in(v_24, v_4, v_7, v_h.0, v_4, v_w.1) [ v_7 - v_h.0 >= 0 /\ v_h.0 > 0 ]
		(1, 4)     eval_compress_alpha_bits_start(v_24, v_4, v_7, v_h.0, v_w.0, v_w.1) -> eval_compress_alpha_bits_bb1_in(nondef.7 - nondef.8, nondef.0, nondef.1, nondef.1, v_w.0, v_w.1)
	start location:	eval_compress_alpha_bits_start
	leaf cost:	3

Complexity upper bound ?

Time: 7.260 sec (SMT: 5.515 sec)
