MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_reg2mpi_start(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb0_in(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_bb0_in(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_0(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0), eval_reg2mpi_1(v_'global_precision, nondef.0, v_1, v_13, v_17, v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_1(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(v_'global_precision, v_0, v_0, nondef.2, v_17, nondef.1, v_bytecount.0))
		(?, 1)    eval_reg2mpi_10(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0), eval_reg2mpi_11(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_11(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_'global_precision, v_0, v_1, v_13, nondef.3, v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_15(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0), eval_reg2mpi_16(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_16(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_22(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0), eval_reg2mpi_23(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_23(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_5))
		(?, 1)    eval_reg2mpi_bb1_in(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(nondef.6, v_0, v_1, v_13, v_17, v_5, v_bytecount.0 - 1)) [ v_bytecount.0 < 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(nondef.6, v_0, v_1, v_13, v_17, v_5, v_bytecount.0 - 1)) [ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_29(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
		(?, 1)    eval_reg2mpi_29(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0), eval_reg2mpi_30(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_30(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_'global_precision, v_0, v_1, v_13, v_17, v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_5, v_bytecount.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_29(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_29(v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 < 0 ]
		(?, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(?, 1)    eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(?, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb0_in(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_29(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0))
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_29(v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 1)    eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb0_in(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_reg2mpi_30) = 1
	Pol(eval_reg2mpi_stop) = 0
	Pol(eval_reg2mpi_29) = 2
	Pol(eval_mp_init_start) = 0
	Pol(eval_reg2mpi_bb1_in) = 3
	Pol(eval_reg2mpi_23) = 3
	Pol(eval_reg2mpi_22) = 3
	Pol(eval_put_word16_start) = 0
	Pol(eval_reg2mpi_16) = 3
	Pol(eval_reg2mpi_15) = 3
	Pol(eval_hiloswap_start) = 0
	Pol(eval_reg2mpi_11) = 3
	Pol(eval_reg2mpi_10) = 3
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_reg2mpi_1) = 3
	Pol(eval_reg2mpi_0) = 3
	Pol(eval_countbits_start) = 0
	Pol(eval_reg2mpi_bb0_in) = 3
	Pol(eval_reg2mpi_start) = 3
orients all transitions weakly and the transitions
	eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_29(v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
	eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0))
	eval_reg2mpi_29(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0))
strictly and produces the following problem:
4:	T:
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0))
		(3, 1)    eval_reg2mpi_29(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0))
		(3, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_29(v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 1)    eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb0_in(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_reg2mpi_29: -X_2 >= 0 /\ X_1 - X_2 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 >= 0 /\ X_1 >= 0
  For symbol eval_reg2mpi_30: -X_2 >= 0 /\ X_1 - X_2 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 >= 0 /\ X_1 >= 0
  For symbol eval_reg2mpi_bb1_in: X_1 - X_2 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb0_in(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(3, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_29(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ]
		(3, 1)    eval_reg2mpi_29(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
	start location:	eval_reg2mpi_start
	leaf cost:	0

By chaining the transition eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb0_in(v_5, v_bytecount.0)) with all transitions in problem 5, the following new transition is obtained:
	eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(3, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_29(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ]
		(3, 1)    eval_reg2mpi_29(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
	start location:	eval_reg2mpi_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_reg2mpi_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
We thus obtain the following problem:
7:	T:
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 1)    eval_reg2mpi_29(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_29(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 1)    eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

By chaining the transition eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_29(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
We thus obtain the following problem:
8:	T:
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 1)    eval_reg2mpi_29(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 1)    eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_reg2mpi_29(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
We thus obtain the following problem:
9:	T:
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 1)    eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

By chaining the transition eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_22(v_5, v_bytecount.0)) with all transitions in problem 9, the following new transition is obtained:
	eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
We thus obtain the following problem:
10:	T:
		(1, 2)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 1)    eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_reg2mpi_22(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
We thus obtain the following problem:
11:	T:
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 2)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

By chaining the transition eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_15(v_5, v_bytecount.0)) with all transitions in problem 11, the following new transition is obtained:
	eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
We thus obtain the following problem:
12:	T:
		(1, 2)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 2)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_reg2mpi_15(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
We thus obtain the following problem:
13:	T:
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 2)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

By chaining the transition eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_10(nondef.1, v_bytecount.0)) with all transitions in problem 13, the following new transition is obtained:
	eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(nondef.1, v_bytecount.0), eval_reg2mpi_11(nondef.1, v_bytecount.0))
We thus obtain the following problem:
14:	T:
		(1, 2)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(nondef.1, v_bytecount.0), eval_reg2mpi_11(nondef.1, v_bytecount.0))
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 2)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 14:
	eval_reg2mpi_10(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_reg2mpi_11(v_5, v_bytecount.0))
We thus obtain the following problem:
15:	T:
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 2)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(nondef.1, v_bytecount.0), eval_reg2mpi_11(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

By chaining the transition eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_0(v_5, v_bytecount.0)) with all transitions in problem 15, the following new transition is obtained:
	eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
We thus obtain the following problem:
16:	T:
		(1, 3)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 2)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(nondef.1, v_bytecount.0), eval_reg2mpi_11(nondef.1, v_bytecount.0))
		(1, 1)    eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 16:
	eval_reg2mpi_0(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
We thus obtain the following problem:
17:	T:
		(3, 1)    eval_reg2mpi_30(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(3, 2)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_reg2mpi_30(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_reg2mpi_bb1_in(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_reg2mpi_23(v_5, v_bytecount.0) -> Com_1(eval_reg2mpi_bb1_in(v_5, v_5))
		(1, 2)    eval_reg2mpi_16(v_5, v_bytecount.0) -> Com_2(eval_put_word16_start(v_5, v_bytecount.0), eval_reg2mpi_23(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_11(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_reg2mpi_16(v_5, v_bytecount.0))
		(1, 2)    eval_reg2mpi_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(nondef.1, v_bytecount.0), eval_reg2mpi_11(nondef.1, v_bytecount.0))
		(1, 3)    eval_reg2mpi_start(v_5, v_bytecount.0) -> Com_2(eval_countbits_start(v_5, v_bytecount.0), eval_reg2mpi_1(v_5, v_bytecount.0))
	start location:	eval_reg2mpi_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.317 sec (SMT: 0.248 sec)
