YES(?, 2*v_n + 4)

Initial complexity problem:
1:	T:
		(1, 1)    eval_TIFFReverseBits_start(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n)
		(?, 1)    eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_n, v_.12, v_n)
		(?, 1)    eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_.01 - 8, v_.12, v_n) [ v_.01 > 8 ]
		(?, 1)    eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.01, v_n) [ v_.01 <= 8 ]
		(?, 1)    eval_TIFFReverseBits_bb3_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.12 - 1, v_n) [ v_.12 > 0 ]
		(?, 1)    eval_TIFFReverseBits_bb3_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_stop(v_.01, v_.12, v_n) [ v_.12 <= 0 ]
	start location:	eval_TIFFReverseBits_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_TIFFReverseBits_start(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n)
		(?, 1)    eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_n, v_.12, v_n)
		(?, 1)    eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_.01 - 8, v_.12, v_n) [ v_.01 > 8 ]
		(?, 1)    eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.01, v_n) [ v_.01 <= 8 ]
		(?, 1)    eval_TIFFReverseBits_bb3_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.12 - 1, v_n) [ v_.12 > 0 ]
	start location:	eval_TIFFReverseBits_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_TIFFReverseBits_start(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n)
		(1, 1)    eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_n, v_.12, v_n)
		(?, 1)    eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_.01 - 8, v_.12, v_n) [ v_.01 > 8 ]
		(?, 1)    eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.01, v_n) [ v_.01 <= 8 ]
		(?, 1)    eval_TIFFReverseBits_bb3_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.12 - 1, v_n) [ v_.12 > 0 ]
	start location:	eval_TIFFReverseBits_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_TIFFReverseBits_start) = 1
	Pol(eval_TIFFReverseBits_bb0_in) = 1
	Pol(eval_TIFFReverseBits_bb1_in) = 1
	Pol(eval_TIFFReverseBits_bb3_in) = 0
orients all transitions weakly and the transition
	eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.01, v_n) [ v_.01 <= 8 ]
strictly and produces the following problem:
4:	T:
		(1, 1)    eval_TIFFReverseBits_start(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n)
		(1, 1)    eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_n, v_.12, v_n)
		(?, 1)    eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_.01 - 8, v_.12, v_n) [ v_.01 > 8 ]
		(1, 1)    eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.01, v_n) [ v_.01 <= 8 ]
		(?, 1)    eval_TIFFReverseBits_bb3_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.12 - 1, v_n) [ v_.12 > 0 ]
	start location:	eval_TIFFReverseBits_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_TIFFReverseBits_start) = V_3
	Pol(eval_TIFFReverseBits_bb0_in) = V_3
	Pol(eval_TIFFReverseBits_bb1_in) = V_1
	Pol(eval_TIFFReverseBits_bb3_in) = V_2
orients all transitions weakly and the transitions
	eval_TIFFReverseBits_bb3_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.12 - 1, v_n) [ v_.12 > 0 ]
	eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_.01 - 8, v_.12, v_n) [ v_.01 > 8 ]
strictly and produces the following problem:
5:	T:
		(1, 1)      eval_TIFFReverseBits_start(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n)
		(1, 1)      eval_TIFFReverseBits_bb0_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_n, v_.12, v_n)
		(v_n, 1)    eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb1_in(v_.01 - 8, v_.12, v_n) [ v_.01 > 8 ]
		(1, 1)      eval_TIFFReverseBits_bb1_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.01, v_n) [ v_.01 <= 8 ]
		(v_n, 1)    eval_TIFFReverseBits_bb3_in(v_.01, v_.12, v_n) -> eval_TIFFReverseBits_bb3_in(v_.01, v_.12 - 1, v_n) [ v_.12 > 0 ]
	start location:	eval_TIFFReverseBits_start
	leaf cost:	1

Complexity upper bound 2*v_n + 4

Time: 0.048 sec (SMT: 0.044 sec)
