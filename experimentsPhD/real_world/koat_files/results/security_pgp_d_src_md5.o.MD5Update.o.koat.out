MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_MD5Update_start(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len, v_50, v_len))
		(?, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_28, v_50, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_28, v_50, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_28, v_50, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_26(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len - v_25, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_28, v_50, v_len)) [ v_.12 >= 64 ]
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_28, v_.12, v_len)) [ v_.12 < 64 ]
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_28, v_50, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_28, v_50, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_28, v_50, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_36(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_28, v_50, v_len))
		(?, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_28, v_50, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_28, v_50, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.01, v_.12, v_25, v_len].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len))
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.12 < 64 ]
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.12 >= 64 ]
		(?, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(?, 1)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len - v_25, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(?, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len))
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.12 < 64 ]
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.12 >= 64 ]
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len - v_25, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_MD5Update_bb10_in) = 1
	Pol(eval_MD5Update_stop) = 0
	Pol(eval_MD5Update_36) = 2
	Pol(eval_MD5Update_35) = 3
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_MD5Update_32) = 4
	Pol(eval_MD5Update_bb7_in) = 4
	Pol(eval_MD5Update_31) = 4
	Pol(eval_MD5Transform_start) = 0
	Pol(eval_MD5Update_30) = 4
	Pol(eval_MD5Update_bb6_in) = 4
	Pol(eval_MD5Update_26) = 4
	Pol(eval_MD5Update_25) = 4
	Pol(eval_MD5Update_24) = 4
	Pol(eval_MD5Update_23) = 1
	Pol(eval_MD5Update_22) = 1
	Pol(eval_MD5Update_bb2_in) = 4
	Pol(eval_MD5Update_bb0_in) = 4
	Pol(eval_MD5Update_start) = 4
orients all transitions weakly and the transitions
	eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.12 < 64 ]
	eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
	eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
	eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len))
strictly and produces the following problem:
4:	T:
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(4, 1)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(4, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len))
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len))
		(4, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.12 < 64 ]
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.12 >= 64 ]
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len - v_25, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_MD5Update_30: X_1 - X_2 >= 0 /\ X_2 - 64 >= 0 /\ X_1 + X_2 - 128 >= 0 /\ X_1 - 64 >= 0
  For symbol eval_MD5Update_31: X_1 - X_2 >= 0 /\ X_2 - 64 >= 0 /\ X_1 + X_2 - 128 >= 0 /\ X_1 - 64 >= 0
  For symbol eval_MD5Update_32: X_1 - X_2 >= 0 /\ X_2 - 64 >= 0 /\ X_1 + X_2 - 128 >= 0 /\ X_1 - 64 >= 0
  For symbol eval_MD5Update_35: -X_2 + 63 >= 0 /\ X_1 - X_2 >= 0
  For symbol eval_MD5Update_36: -X_2 + 63 >= 0 /\ X_1 - X_2 >= 0
  For symbol eval_MD5Update_bb7_in: X_1 - X_2 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len - v_25, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 ]
		(4, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 ]
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(4, 1)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len)) with all transitions in problem 5, the following new transition is obtained:
	eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len - v_25, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 ]
		(4, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 ]
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(4, 1)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_MD5Update_bb0_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 1)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(1, 1)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len - v_25, v_.12, v_25, v_len))
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(4, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 ]
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
We thus obtain the following problem:
8:	T:
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(1, 1)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len - v_25, v_.12, v_25, v_len))
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(4, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 ]
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len - v_25, v_.12, v_25, v_len)) with all transitions in problem 8, the following new transition is obtained:
	eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
We thus obtain the following problem:
9:	T:
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(4, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 ]
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_35(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 ] with all transitions in problem 9, the following new transition is obtained:
	eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
We thus obtain the following problem:
10:	T:
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 1)    eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_MD5Update_35(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(?, 1)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_30(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 ] with all transitions in problem 11, the following new transition is obtained:
	eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_MD5Update_30(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
We thus obtain the following problem:
13:	T:
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len)) with all transitions in problem 13, the following new transition is obtained:
	eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
We thus obtain the following problem:
14:	T:
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(4, 1)    eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 14:
	eval_MD5Update_bb10_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
We thus obtain the following problem:
15:	T:
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb6_in(v_len, v_.12, v_25, v_len)) with all transitions in problem 15, the following new transition is obtained:
	eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
We thus obtain the following problem:
16:	T:
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(2, 1)    eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 16:
	eval_MD5Update_bb6_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.01, v_25, v_len))
We thus obtain the following problem:
17:	T:
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_24(v_.01, v_.12, -nondef.6 + 64, v_len)) with all transitions in problem 17, the following new transition is obtained:
	eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
We thus obtain the following problem:
18:	T:
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 1)    eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 18:
	eval_MD5Update_24(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_25(v_.01, v_.12, v_25, v_len))
We thus obtain the following problem:
19:	T:
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(1, 1)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_22(v_.01, v_.12, v_25, v_len)) with all transitions in problem 19, the following new transition is obtained:
	eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
We thus obtain the following problem:
20:	T:
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 1)    eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 20:
	eval_MD5Update_22(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
We thus obtain the following problem:
21:	T:
		(?, 1)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ] with all transitions in problem 21, the following new transitions are obtained:
	eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_31(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 >= 64 /\ v_.12 - 128 >= 0 /\ v_.01 + v_.12 - 192 >= 0 ]
	eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_36(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 < 64 /\ -v_.12 + 127 >= 0 ]
We thus obtain the following problem:
22:	T:
		(?, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_31(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 >= 64 /\ v_.12 - 128 >= 0 /\ v_.01 + v_.12 - 192 >= 0 ]
		(?, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_36(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 < 64 /\ -v_.12 + 127 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(?, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 22 produces the following problem:
23:	T:
		(?, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_31(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 >= 64 /\ v_.12 - 128 >= 0 /\ v_.01 + v_.12 - 192 >= 0 ]
		(?, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_36(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 < 64 /\ -v_.12 + 127 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(2, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_MD5Update_32) = 1
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_MD5Update_31) = 1
	Pol(eval_MD5Update_36) = 0
	Pol(eval_MD5Transform_start) = 0
	Pol(eval_MD5Update_stop) = 0
	Pol(eval_MD5Update_26) = 1
	Pol(eval_MD5Update_bb7_in) = 1
	Pol(eval_MD5Update_23) = 0
	Pol(eval_MD5Update_25) = 1
	Pol(eval_MD5Update_bb2_in) = 1
	Pol(eval_MD5Update_start) = 1
orients all transitions weakly and the transition
	eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_36(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 < 64 /\ -v_.12 + 127 >= 0 ]
strictly and produces the following problem:
24:	T:
		(?, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_31(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 >= 64 /\ v_.12 - 128 >= 0 /\ v_.01 + v_.12 - 192 >= 0 ]
		(1, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_36(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 < 64 /\ -v_.12 + 127 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len))
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(2, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len - v_25, v_len - v_25, v_25, v_len)) with all transitions in problem 24, the following new transitions are obtained:
	eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len - v_25, v_len - v_25, v_25, v_len), eval_MD5Update_31(v_len - v_25, v_len - v_25, v_25, v_len)) [ 0 >= 0 /\ v_len - v_25 >= 64 /\ v_len - v_25 - 64 >= 0 /\ 2*v_len - 2*v_25 - 128 >= 0 ]
	eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len - v_25, v_len - v_25, v_25, v_len), eval_MD5Update_36(v_len - v_25, v_len - v_25, v_25, v_len)) [ 0 >= 0 /\ v_len - v_25 < 64 /\ -v_len + v_25 + 63 >= 0 ]
We thus obtain the following problem:
25:	T:
		(1, 4)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len - v_25, v_len - v_25, v_25, v_len), eval_MD5Update_31(v_len - v_25, v_len - v_25, v_25, v_len)) [ 0 >= 0 /\ v_len - v_25 >= 64 /\ v_len - v_25 - 64 >= 0 /\ 2*v_len - 2*v_25 - 128 >= 0 ]
		(1, 4)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len - v_25, v_len - v_25, v_25, v_len), eval_MD5Update_36(v_len - v_25, v_len - v_25, v_25, v_len)) [ 0 >= 0 /\ v_len - v_25 < 64 /\ -v_len + v_25 + 63 >= 0 ]
		(?, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_31(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 >= 64 /\ v_.12 - 128 >= 0 /\ v_.01 + v_.12 - 192 >= 0 ]
		(1, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_36(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 < 64 /\ -v_.12 + 127 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(2, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

By chaining the transition eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb7_in(v_len, v_len, v_25, v_len)) with all transitions in problem 25, the following new transitions are obtained:
	eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len, v_len, v_25, v_len), eval_MD5Update_31(v_len, v_len, v_25, v_len)) [ 0 >= 0 /\ v_len >= 64 /\ v_len - 64 >= 0 /\ 2*v_len - 128 >= 0 ]
	eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len, v_len, v_25, v_len), eval_MD5Update_36(v_len, v_len, v_25, v_len)) [ 0 >= 0 /\ v_len < 64 /\ -v_len + 63 >= 0 ]
We thus obtain the following problem:
26:	T:
		(1, 4)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len, v_len, v_25, v_len), eval_MD5Update_31(v_len, v_len, v_25, v_len)) [ 0 >= 0 /\ v_len >= 64 /\ v_len - 64 >= 0 /\ 2*v_len - 128 >= 0 ]
		(1, 4)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len, v_len, v_25, v_len), eval_MD5Update_36(v_len, v_len, v_25, v_len)) [ 0 >= 0 /\ v_len < 64 /\ -v_len + 63 >= 0 ]
		(1, 4)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len - v_25, v_len - v_25, v_25, v_len), eval_MD5Update_31(v_len - v_25, v_len - v_25, v_25, v_len)) [ 0 >= 0 /\ v_len - v_25 >= 64 /\ v_len - v_25 - 64 >= 0 /\ 2*v_len - 2*v_25 - 128 >= 0 ]
		(1, 4)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len - v_25, v_len - v_25, v_25, v_len), eval_MD5Update_36(v_len - v_25, v_len - v_25, v_25, v_len)) [ 0 >= 0 /\ v_len - v_25 < 64 /\ -v_len + v_25 + 63 >= 0 ]
		(?, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_31(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 >= 64 /\ v_.12 - 128 >= 0 /\ v_.01 + v_.12 - 192 >= 0 ]
		(1, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_36(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 < 64 /\ -v_.12 + 127 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(2, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(4, 2)    eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 26:
	eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_31(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 >= 64 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
	eval_MD5Update_bb7_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_36(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 < 64 /\ -v_.12 + 63 >= 0 ]
We thus obtain the following problem:
27:	T:
		(1, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_36(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 < 64 /\ -v_.12 + 127 >= 0 ]
		(?, 3)    eval_MD5Update_32(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12 - 64, v_25, v_len), eval_MD5Update_31(v_.01, v_.12 - 64, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 /\ v_.01 - v_.12 + 64 >= 0 /\ v_.12 - 64 >= 64 /\ v_.12 - 128 >= 0 /\ v_.01 + v_.12 - 192 >= 0 ]
		(1, 4)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len - v_25, v_len - v_25, v_25, v_len), eval_MD5Update_36(v_len - v_25, v_len - v_25, v_25, v_len)) [ 0 >= 0 /\ v_len - v_25 < 64 /\ -v_len + v_25 + 63 >= 0 ]
		(1, 4)    eval_MD5Update_26(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len - v_25, v_len - v_25, v_25, v_len), eval_MD5Update_31(v_len - v_25, v_len - v_25, v_25, v_len)) [ 0 >= 0 /\ v_len - v_25 >= 64 /\ v_len - v_25 - 64 >= 0 /\ 2*v_len - 2*v_25 - 128 >= 0 ]
		(4, 2)    eval_MD5Update_36(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len)) [ -v_.12 + 63 >= 0 /\ v_.01 - v_.12 >= 0 ]
		(?, 1)    eval_MD5Update_31(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_32(v_.01, v_.12, v_25, v_len)) [ v_.01 - v_.12 >= 0 /\ v_.12 - 64 >= 0 /\ v_.01 + v_.12 - 128 >= 0 /\ v_.01 - 64 >= 0 ]
		(1, 2)    eval_MD5Update_23(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_stop(v_.01, v_.12, v_25, v_len))
		(1, 1)    eval_MD5Update_25(v_.01, v_.12, v_25, v_len) -> Com_2(eval_MD5Transform_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_26(v_.01, v_.12, v_25, v_len))
		(1, 4)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len, v_len, v_25, v_len), eval_MD5Update_36(v_len, v_len, v_25, v_len)) [ 0 >= 0 /\ v_len < 64 /\ -v_len + 63 >= 0 ]
		(1, 4)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_len, v_len, v_25, v_len), eval_MD5Update_31(v_len, v_len, v_25, v_len)) [ 0 >= 0 /\ v_len >= 64 /\ v_len - 64 >= 0 /\ 2*v_len - 128 >= 0 ]
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, v_25, v_len), eval_MD5Update_23(v_.01, v_.12, v_25, v_len))
		(1, 2)    eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_.12, -nondef.6 + 64, v_len), eval_MD5Update_25(v_.01, v_.12, -nondef.6 + 64, v_len))
		(1, 2)    eval_MD5Update_start(v_.01, v_.12, v_25, v_len) -> Com_1(eval_MD5Update_bb2_in(v_.01, v_.12, v_25, v_len))
	start location:	eval_MD5Update_start
	leaf cost:	0

Complexity upper bound ?

Time: 2.043 sec (SMT: 1.423 sec)
