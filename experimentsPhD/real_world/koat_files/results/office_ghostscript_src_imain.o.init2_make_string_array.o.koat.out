MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb0_in())
		(?, 1)    eval_init2_make_string_array_bb0_in() -> Com_1(eval_init2_make_string_array_bb1_in())
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0())
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 = 0 ]
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(?, 1)    eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
		(?, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb0_in())
		(1, 1)    eval_init2_make_string_array_bb0_in() -> Com_1(eval_init2_make_string_array_bb1_in())
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0())
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 = 0 ]
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(?, 1)    eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
		(?, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_init2_make_string_array_start) = 3
	Pol(eval_init2_make_string_array_bb0_in) = 3
	Pol(eval_init2_make_string_array_bb1_in) = 3
	Pol(eval_init2_make_string_array_0) = 3
	Pol(eval_init2_make_string_array_12) = 2
	Pol(eval_strlen_start) = 0
	Pol(eval_init2_make_string_array_1) = 3
	Pol(eval_initial_enter_name_start) = 0
	Pol(eval_init2_make_string_array_13) = 1
	Pol(eval_init2_make_string_array_stop) = 0
orients all transitions weakly and the transitions
	eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
	eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
	eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 = 0 ]
	eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
	eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb0_in())
		(1, 1)    eval_init2_make_string_array_bb0_in() -> Com_1(eval_init2_make_string_array_bb1_in())
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0())
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 = 0 ]
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(3, 1)    eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
		(3, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

By chaining the transition eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb0_in()) with all transitions in problem 3, the following new transition is obtained:
	eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb1_in())
We thus obtain the following problem:
4:	T:
		(1, 2)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb1_in())
		(1, 1)    eval_init2_make_string_array_bb0_in() -> Com_1(eval_init2_make_string_array_bb1_in())
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0())
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 = 0 ]
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(3, 1)    eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
		(3, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 4:
	eval_init2_make_string_array_bb0_in() -> Com_1(eval_init2_make_string_array_bb1_in())
We thus obtain the following problem:
5:	T:
		(3, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(3, 1)    eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 = 0 ]
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0())
		(1, 2)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb1_in())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

By chaining the transition eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ] with all transitions in problem 5, the following new transition is obtained:
	eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
We thus obtain the following problem:
6:	T:
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(3, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(3, 1)    eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 = 0 ]
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0())
		(1, 2)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb1_in())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

By chaining the transition eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ] with all transitions in problem 6, the following new transition is obtained:
	eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
We thus obtain the following problem:
7:	T:
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(3, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(3, 1)    eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(3, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 = 0 ]
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0())
		(1, 2)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb1_in())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

By chaining the transition eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_12()) [ nondef.1 - nondef.2 = 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 = 0 ]
We thus obtain the following problem:
8:	T:
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 = 0 ]
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(3, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(3, 1)    eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0())
		(1, 2)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb1_in())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_init2_make_string_array_12() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13())
We thus obtain the following problem:
9:	T:
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(3, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 = 0 ]
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(?, 1)    eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0())
		(1, 2)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb1_in())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

By chaining the transition eval_init2_make_string_array_bb1_in() -> Com_1(eval_init2_make_string_array_0()) with all transitions in problem 9, the following new transition is obtained:
	eval_init2_make_string_array_bb1_in() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
We thus obtain the following problem:
10:	T:
		(?, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(3, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
		(?, 1)    eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 = 0 ]
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(1, 2)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb1_in())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_init2_make_string_array_0() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
We thus obtain the following problem:
11:	T:
		(?, 1)    eval_init2_make_string_array_1() -> Com_1(eval_init2_make_string_array_bb1_in())
		(3, 1)    eval_init2_make_string_array_13() -> Com_1(eval_init2_make_string_array_stop())
		(?, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_strlen_start(), eval_init2_make_string_array_1())
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 = 0 ]
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 > 0 /\ nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 >= 0 /\ nondef.1 - nondef.2 - 16*nondef.3 < 16 ]
		(3, 2)    eval_init2_make_string_array_bb1_in() -> Com_2(eval_initial_enter_name_start(), eval_init2_make_string_array_13()) [ nondef.1 - nondef.2 < 0 /\ nondef.3 <= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 >= 0 /\ -nondef.1 + nondef.2 + 16*nondef.3 < 16 ]
		(1, 2)    eval_init2_make_string_array_start() -> Com_1(eval_init2_make_string_array_bb1_in())
	start location:	eval_init2_make_string_array_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.084 sec (SMT: 0.075 sec)
