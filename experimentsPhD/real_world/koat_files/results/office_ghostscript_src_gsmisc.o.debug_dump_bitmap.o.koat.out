YES(?, 9*v_height + 6)

Initial complexity problem:
1:	T:
		(1, 1)    eval_debug_dump_bitmap_start(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0))
		(?, 1)    eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, 0))
		(?, 1)    eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0)) [ v_y.0 < v_height ]
		(?, 1)    eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_stop(v_height, v_raster, v_y.0)) [ v_y.0 >= v_height ]
		(?, 1)    eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0) -> Com_2(eval_debug_dump_bytes_start(v_height, v_raster, v_y.0), eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0))
		(?, 1)    eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0 + 1))
	start location:	eval_debug_dump_bitmap_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_debug_dump_bitmap_start(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0))
		(1, 1)    eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, 0))
		(?, 1)    eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0)) [ v_y.0 < v_height ]
		(?, 1)    eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_stop(v_height, v_raster, v_y.0)) [ v_y.0 >= v_height ]
		(?, 1)    eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0) -> Com_2(eval_debug_dump_bytes_start(v_height, v_raster, v_y.0), eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0))
		(?, 1)    eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0 + 1))
	start location:	eval_debug_dump_bitmap_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_debug_dump_bitmap_start) = 1
	Pol(eval_debug_dump_bitmap_bb0_in) = 1
	Pol(eval_debug_dump_bitmap_bb1_in) = 1
	Pol(eval_debug_dump_bitmap_3) = 1
	Pol(eval_debug_dump_bitmap_stop) = 0
	Pol(eval_debug_dump_bytes_start) = 0
	Pol(eval_debug_dump_bitmap_4) = 1
orients all transitions weakly and the transition
	eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_stop(v_height, v_raster, v_y.0)) [ v_y.0 >= v_height ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_debug_dump_bitmap_start(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0))
		(1, 1)    eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, 0))
		(?, 1)    eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0)) [ v_y.0 < v_height ]
		(1, 1)    eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_stop(v_height, v_raster, v_y.0)) [ v_y.0 >= v_height ]
		(?, 1)    eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0) -> Com_2(eval_debug_dump_bytes_start(v_height, v_raster, v_y.0), eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0))
		(?, 1)    eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0 + 1))
	start location:	eval_debug_dump_bitmap_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_debug_dump_bitmap_3: X_1 - X_3 - 1 >= 0 /\ X_3 >= 0 /\ X_1 + X_3 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_debug_dump_bitmap_4: X_1 - X_3 - 1 >= 0 /\ X_3 >= 0 /\ X_1 + X_3 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_debug_dump_bitmap_bb1_in: X_3 >= 0


This yielded the following problem:
4:	T:
		(?, 1)    eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0 + 1)) [ v_height - v_y.0 - 1 >= 0 /\ v_y.0 >= 0 /\ v_height + v_y.0 - 1 >= 0 /\ v_height - 1 >= 0 ]
		(?, 1)    eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0) -> Com_2(eval_debug_dump_bytes_start(v_height, v_raster, v_y.0), eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0)) [ v_height - v_y.0 - 1 >= 0 /\ v_y.0 >= 0 /\ v_height + v_y.0 - 1 >= 0 /\ v_height - 1 >= 0 ]
		(1, 1)    eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_stop(v_height, v_raster, v_y.0)) [ v_y.0 >= 0 /\ v_y.0 >= v_height ]
		(?, 1)    eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0)) [ v_y.0 >= 0 /\ v_y.0 < v_height ]
		(1, 1)    eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, 0))
		(1, 1)    eval_debug_dump_bitmap_start(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0))
	start location:	eval_debug_dump_bitmap_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_debug_dump_bitmap_4) = 3*V_1 - 3*V_3 - 1
	Pol(eval_debug_dump_bitmap_bb1_in) = 3*V_1 - 3*V_3 + 1
	Pol(eval_debug_dump_bitmap_3) = 3*V_1 - 3*V_3
	Pol(eval_debug_dump_bytes_start) = -3*V_3
	Pol(eval_debug_dump_bitmap_stop) = 3*V_1 - 3*V_3
	Pol(eval_debug_dump_bitmap_bb0_in) = 3*V_1 + 1
	Pol(eval_debug_dump_bitmap_start) = 3*V_1 + 1
orients all transitions weakly and the transitions
	eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0)) [ v_y.0 >= 0 /\ v_y.0 < v_height ]
	eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0 + 1)) [ v_height - v_y.0 - 1 >= 0 /\ v_y.0 >= 0 /\ v_height + v_y.0 - 1 >= 0 /\ v_height - 1 >= 0 ]
	eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0) -> Com_2(eval_debug_dump_bytes_start(v_height, v_raster, v_y.0), eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0)) [ v_height - v_y.0 - 1 >= 0 /\ v_y.0 >= 0 /\ v_height + v_y.0 - 1 >= 0 /\ v_height - 1 >= 0 ]
strictly and produces the following problem:
5:	T:
		(3*v_height + 1, 1)    eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0 + 1)) [ v_height - v_y.0 - 1 >= 0 /\ v_y.0 >= 0 /\ v_height + v_y.0 - 1 >= 0 /\ v_height - 1 >= 0 ]
		(3*v_height + 1, 1)    eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0) -> Com_2(eval_debug_dump_bytes_start(v_height, v_raster, v_y.0), eval_debug_dump_bitmap_4(v_height, v_raster, v_y.0)) [ v_height - v_y.0 - 1 >= 0 /\ v_y.0 >= 0 /\ v_height + v_y.0 - 1 >= 0 /\ v_height - 1 >= 0 ]
		(1, 1)                 eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_stop(v_height, v_raster, v_y.0)) [ v_y.0 >= 0 /\ v_y.0 >= v_height ]
		(3*v_height + 1, 1)    eval_debug_dump_bitmap_bb1_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_3(v_height, v_raster, v_y.0)) [ v_y.0 >= 0 /\ v_y.0 < v_height ]
		(1, 1)                 eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb1_in(v_height, v_raster, 0))
		(1, 1)                 eval_debug_dump_bitmap_start(v_height, v_raster, v_y.0) -> Com_1(eval_debug_dump_bitmap_bb0_in(v_height, v_raster, v_y.0))
	start location:	eval_debug_dump_bitmap_start
	leaf cost:	0

Complexity upper bound 9*v_height + 6

Time: 0.076 sec (SMT: 0.067 sec)
