YES(?, 9*v_n + 3)

Initial complexity problem:
1:	T:
		(1, 1)    eval_WriteBytes_start(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n))
		(?, 1)    eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_n, v_0, v_4, v_n))
		(?, 1)    eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_4(v_.01, v_.01 - 1, nondef.0, v_n)) [ v_.01 > 0 ]
		(?, 1)    eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_stop(v_.01, v_0, v_4, v_n)) [ v_.01 <= 0 ]
		(?, 1)    eval_WriteBytes_4(v_.01, v_0, v_4, v_n) -> Com_2(eval__IO_putc_start(v_.01, v_0, v_4, v_n), eval_WriteBytes_5(v_.01, v_0, v_4, v_n))
		(?, 1)    eval_WriteBytes_5(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_0, v_0, v_4, v_n))
	start location:	eval_WriteBytes_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_WriteBytes_start(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n))
		(1, 1)    eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_n, v_0, v_4, v_n))
		(?, 1)    eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_4(v_.01, v_.01 - 1, nondef.0, v_n)) [ v_.01 > 0 ]
		(?, 1)    eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_stop(v_.01, v_0, v_4, v_n)) [ v_.01 <= 0 ]
		(?, 1)    eval_WriteBytes_4(v_.01, v_0, v_4, v_n) -> Com_2(eval__IO_putc_start(v_.01, v_0, v_4, v_n), eval_WriteBytes_5(v_.01, v_0, v_4, v_n))
		(?, 1)    eval_WriteBytes_5(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_0, v_0, v_4, v_n))
	start location:	eval_WriteBytes_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_WriteBytes_start) = 1
	Pol(eval_WriteBytes_bb0_in) = 1
	Pol(eval_WriteBytes_bb1_in) = 1
	Pol(eval_WriteBytes_4) = 1
	Pol(eval_WriteBytes_stop) = 0
	Pol(eval__IO_putc_start) = 0
	Pol(eval_WriteBytes_5) = 1
orients all transitions weakly and the transition
	eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_stop(v_.01, v_0, v_4, v_n)) [ v_.01 <= 0 ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_WriteBytes_start(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n))
		(1, 1)    eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_n, v_0, v_4, v_n))
		(?, 1)    eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_4(v_.01, v_.01 - 1, nondef.0, v_n)) [ v_.01 > 0 ]
		(1, 1)    eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_stop(v_.01, v_0, v_4, v_n)) [ v_.01 <= 0 ]
		(?, 1)    eval_WriteBytes_4(v_.01, v_0, v_4, v_n) -> Com_2(eval__IO_putc_start(v_.01, v_0, v_4, v_n), eval_WriteBytes_5(v_.01, v_0, v_4, v_n))
		(?, 1)    eval_WriteBytes_5(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_0, v_0, v_4, v_n))
	start location:	eval_WriteBytes_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_WriteBytes_4: X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ -X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 2 >= 0 /\ -X_1 + X_4 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_WriteBytes_5: X_4 - 1 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ -X_2 + X_4 - 1 >= 0 /\ X_1 + X_4 - 2 >= 0 /\ -X_1 + X_4 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_WriteBytes_bb1_in: -X_1 + X_4 >= 0


This yielded the following problem:
4:	T:
		(?, 1)    eval_WriteBytes_5(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_0, v_0, v_4, v_n)) [ v_n - 1 >= 0 /\ v_0 + v_n - 1 >= 0 /\ -v_0 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.01 + v_0 - 1 >= 0 /\ -v_.01 + v_0 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(?, 1)    eval_WriteBytes_4(v_.01, v_0, v_4, v_n) -> Com_2(eval__IO_putc_start(v_.01, v_0, v_4, v_n), eval_WriteBytes_5(v_.01, v_0, v_4, v_n)) [ v_n - 1 >= 0 /\ v_0 + v_n - 1 >= 0 /\ -v_0 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.01 + v_0 - 1 >= 0 /\ -v_.01 + v_0 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(1, 1)    eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_stop(v_.01, v_0, v_4, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 <= 0 ]
		(?, 1)    eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_4(v_.01, v_.01 - 1, nondef.0, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
		(1, 1)    eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_n, v_0, v_4, v_n))
		(1, 1)    eval_WriteBytes_start(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n))
	start location:	eval_WriteBytes_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_WriteBytes_5) = 3*V_2 + 1
	Pol(eval_WriteBytes_bb1_in) = 3*V_1
	Pol(eval_WriteBytes_4) = 2*V_1 + V_2
	Pol(eval__IO_putc_start) = 2*V_1 - 2*V_2 - 2
	Pol(eval_WriteBytes_stop) = 3*V_1
	Pol(eval_WriteBytes_bb0_in) = 3*V_4
	Pol(eval_WriteBytes_start) = 3*V_4
orients all transitions weakly and the transitions
	eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_4(v_.01, v_.01 - 1, nondef.0, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
	eval_WriteBytes_5(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_0, v_0, v_4, v_n)) [ v_n - 1 >= 0 /\ v_0 + v_n - 1 >= 0 /\ -v_0 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.01 + v_0 - 1 >= 0 /\ -v_.01 + v_0 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	eval_WriteBytes_4(v_.01, v_0, v_4, v_n) -> Com_2(eval__IO_putc_start(v_.01, v_0, v_4, v_n), eval_WriteBytes_5(v_.01, v_0, v_4, v_n)) [ v_n - 1 >= 0 /\ v_0 + v_n - 1 >= 0 /\ -v_0 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.01 + v_0 - 1 >= 0 /\ -v_.01 + v_0 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
strictly and produces the following problem:
5:	T:
		(3*v_n, 1)    eval_WriteBytes_5(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_0, v_0, v_4, v_n)) [ v_n - 1 >= 0 /\ v_0 + v_n - 1 >= 0 /\ -v_0 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.01 + v_0 - 1 >= 0 /\ -v_.01 + v_0 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(3*v_n, 1)    eval_WriteBytes_4(v_.01, v_0, v_4, v_n) -> Com_2(eval__IO_putc_start(v_.01, v_0, v_4, v_n), eval_WriteBytes_5(v_.01, v_0, v_4, v_n)) [ v_n - 1 >= 0 /\ v_0 + v_n - 1 >= 0 /\ -v_0 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.01 + v_0 - 1 >= 0 /\ -v_.01 + v_0 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(1, 1)        eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_stop(v_.01, v_0, v_4, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 <= 0 ]
		(3*v_n, 1)    eval_WriteBytes_bb1_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_4(v_.01, v_.01 - 1, nondef.0, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
		(1, 1)        eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb1_in(v_n, v_0, v_4, v_n))
		(1, 1)        eval_WriteBytes_start(v_.01, v_0, v_4, v_n) -> Com_1(eval_WriteBytes_bb0_in(v_.01, v_0, v_4, v_n))
	start location:	eval_WriteBytes_start
	leaf cost:	0

Complexity upper bound 9*v_n + 3

Time: 0.099 sec (SMT: 0.086 sec)
