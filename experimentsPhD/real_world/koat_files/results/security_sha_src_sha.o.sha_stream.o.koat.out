MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
		(?, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(?, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(?, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(?, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(?, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3))
		(?, 1)    eval_sha_stream_6(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(?, 1)    eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3))
		(?, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(?, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(?, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3))
		(?, 1)    eval_sha_stream_6(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(?, 1)    eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3))
		(?, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_sha_stream_start) = 3
	Pol(eval_sha_stream_bb0_in) = 3
	Pol(eval_sha_stream_0) = 3
	Pol(eval_sha_init_start) = 0
	Pol(eval_sha_stream_1) = 3
	Pol(eval_sha_stream_bb1_in) = 3
	Pol(eval_sha_stream_2) = 3
	Pol(eval_fread_start) = 0
	Pol(eval_sha_stream_3) = 3
	Pol(eval_sha_stream_5) = 3
	Pol(eval_sha_stream_7) = 2
	Pol(eval_sha_update_start) = 0
	Pol(eval_sha_stream_6) = 3
	Pol(eval_sha_final_start) = 0
	Pol(eval_sha_stream_8) = 1
	Pol(eval_sha_stream_stop) = 0
orients all transitions weakly and the transitions
	eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3))
	eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3))
	eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ]
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(?, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(?, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(3, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3))
		(?, 1)    eval_sha_stream_6(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(3, 1)    eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3))
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_sha_stream_5: X_1 - X_2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_sha_stream_6: X_1 - X_2 >= 0 /\ X_2 - 1 >= 0 /\ X_1 + X_2 - 2 >= 0 /\ -X_1 + X_2 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_sha_stream_7: -X_1 >= 0
  For symbol eval_sha_stream_8: -X_1 >= 0


This yielded the following problem:
4:	T:
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(3, 1)    eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 1)    eval_sha_stream_6(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ]
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(?, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(?, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

By chaining the transition eval_sha_stream_6(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ] with all transitions in problem 4, the following new transition is obtained:
	eval_sha_stream_6(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_sha_stream_6(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(3, 1)    eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ]
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(?, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(?, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 5 produces the following problem:
6:	T:
		(?, 2)    eval_sha_stream_6(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(3, 1)    eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ]
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(?, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

By chaining the transition eval_sha_stream_6(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ] with all transitions in problem 6, the following new transition is obtained:
	eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
We thus obtain the following problem:
7:	T:
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(3, 1)    eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ]
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(?, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 7 produces the following problem:
8:	T:
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(3, 1)    eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ]
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(1, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

By chaining the transition eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_7(v_2, v_3)) [ v_2 <= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
We thus obtain the following problem:
9:	T:
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(3, 1)    eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(1, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_sha_stream_7(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ -v_2 >= 0 ]
We thus obtain the following problem:
10:	T:
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(?, 1)    eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ]
		(1, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

By chaining the transition eval_sha_stream_3(v_2, v_3) -> Com_1(eval_sha_stream_5(v_2, v_2)) [ v_2 > 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 1)    eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_sha_stream_5(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_3), eval_sha_stream_6(v_2, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

By chaining the transition eval_sha_stream_bb1_in(v_2, v_3) -> Com_1(eval_sha_stream_2(v_2, v_3)) with all transitions in problem 12, the following new transition is obtained:
	eval_sha_stream_bb1_in(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
We thus obtain the following problem:
13:	T:
		(1, 2)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 1)    eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_sha_stream_2(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
We thus obtain the following problem:
14:	T:
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 2)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

By chaining the transition eval_sha_stream_1(v_2, v_3) -> Com_1(eval_sha_stream_bb1_in(v_2, v_3)) with all transitions in problem 14, the following new transition is obtained:
	eval_sha_stream_1(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
We thus obtain the following problem:
15:	T:
		(1, 3)    eval_sha_stream_1(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 2)    eval_sha_stream_bb1_in(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 15:
	eval_sha_stream_bb1_in(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
We thus obtain the following problem:
16:	T:
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 3)    eval_sha_stream_1(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

By chaining the transition eval_sha_stream_bb0_in(v_2, v_3) -> Com_1(eval_sha_stream_0(v_2, v_3)) with all transitions in problem 16, the following new transition is obtained:
	eval_sha_stream_bb0_in(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
We thus obtain the following problem:
17:	T:
		(1, 2)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 3)    eval_sha_stream_1(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 1)    eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_sha_stream_0(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
We thus obtain the following problem:
18:	T:
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 3)    eval_sha_stream_1(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 2)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(1, 1)    eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

By chaining the transition eval_sha_stream_start(v_2, v_3) -> Com_1(eval_sha_stream_bb0_in(v_2, v_3)) with all transitions in problem 18, the following new transition is obtained:
	eval_sha_stream_start(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
We thus obtain the following problem:
19:	T:
		(1, 3)    eval_sha_stream_start(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 3)    eval_sha_stream_1(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 2)    eval_sha_stream_bb0_in(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_sha_stream_bb0_in(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
We thus obtain the following problem:
20:	T:
		(?, 3)    eval_sha_stream_6(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3)) [ v_2 - v_3 >= 0 /\ v_3 - 1 >= 0 /\ v_2 + v_3 - 2 >= 0 /\ -v_2 + v_3 >= 0 /\ v_2 - 1 >= 0 ]
		(3, 1)    eval_sha_stream_8(v_2, v_3) -> Com_1(eval_sha_stream_stop(v_2, v_3)) [ -v_2 >= 0 ]
		(?, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_update_start(v_2, v_2), eval_sha_stream_6(v_2, v_2)) [ v_2 > 0 /\ 0 >= 0 /\ v_2 - 1 >= 0 /\ 2*v_2 - 2 >= 0 ]
		(3, 2)    eval_sha_stream_3(v_2, v_3) -> Com_2(eval_sha_final_start(v_2, v_3), eval_sha_stream_8(v_2, v_3)) [ v_2 <= 0 /\ -v_2 >= 0 ]
		(1, 3)    eval_sha_stream_1(v_2, v_3) -> Com_2(eval_fread_start(v_2, v_3), eval_sha_stream_3(nondef.0, v_3))
		(1, 3)    eval_sha_stream_start(v_2, v_3) -> Com_2(eval_sha_init_start(v_2, v_3), eval_sha_stream_1(v_2, v_3))
	start location:	eval_sha_stream_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.335 sec (SMT: 0.271 sec)
