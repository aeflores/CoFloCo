MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_cryptRandWriteFile_start(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb0_in(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb0_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_0(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_18, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_1(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_1(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_18, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_18, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_18, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_18, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_18, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_18, v_8, v_bytes, v_i.0)) [ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_18, v_8, v_bytes, v_i.0)) [ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_18, v_8, v_bytes, v_i.0)) [ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_18, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_18, v_8, v_bytes, v_i.0 + 1))
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_18, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_18, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_20(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_18, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_21(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_18, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_18, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_18, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.01, v_8, v_bytes, v_i.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1))
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1))
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_cryptRandWriteFile_bb10_in) = 1
	Pol(eval_cryptRandWriteFile_stop) = 0
	Pol(eval_cryptRandWriteFile_21) = 2
	Pol(eval_cryptRandWriteFile_20) = 3
	Pol(eval_fclose_start) = 0
	Pol(eval_cryptRandWriteFile_bb9_in) = 4
	Pol(eval_cryptRandWriteFile_16) = 5
	Pol(eval_cryptRandWriteFile_bb1_in) = 5
	Pol(eval_cryptRandWriteFile_15) = 5
	Pol(eval_fwrite_start) = 0
	Pol(eval_cryptRandWriteFile_bb7_in) = 5
	Pol(eval_cryptRandWriteFile_13) = 5
	Pol(eval_cryptRandWriteFile_12) = 5
	Pol(eval_ideaCfbEncrypt_start) = 0
	Pol(eval_cryptRandWriteFile_8) = 5
	Pol(eval_cryptRandWriteFile_bb3_in) = 5
	Pol(eval_cryptRandWriteFile_7) = 5
	Pol(eval_ideaRandByte_start) = 0
	Pol(eval_cryptRandWriteFile_1) = 5
	Pol(eval_cryptRandWriteFile_0) = 5
	Pol(eval_fopen_start) = 0
	Pol(eval_cryptRandWriteFile_bb0_in) = 5
	Pol(eval_cryptRandWriteFile_start) = 5
orients all transitions weakly and the transitions
	eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
	eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
	eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
	eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
	eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
	eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0))
strictly and produces the following problem:
4:	T:
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1))
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 < v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_cryptRandWriteFile_12: X_4 >= 0 /\ -X_2 + X_4 >= 0
  For symbol eval_cryptRandWriteFile_13: X_4 >= 0 /\ -X_2 + X_4 >= 0
  For symbol eval_cryptRandWriteFile_15: X_4 >= 0 /\ -X_2 + X_4 >= 0
  For symbol eval_cryptRandWriteFile_16: X_4 >= 0 /\ -X_2 + X_4 >= 0
  For symbol eval_cryptRandWriteFile_7: X_2 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_2 - 1 >= 0
  For symbol eval_cryptRandWriteFile_8: X_2 - X_4 - 1 >= 0 /\ X_4 >= 0 /\ X_2 + X_4 - 1 >= 0 /\ X_2 - 1 >= 0
  For symbol eval_cryptRandWriteFile_bb3_in: X_4 >= 0
  For symbol eval_cryptRandWriteFile_bb7_in: X_4 >= 0 /\ -X_2 + X_4 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0)) with all transitions in problem 5, the following new transition is obtained:
	eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_cryptRandWriteFile_bb0_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
8:	T:
		(5, 2)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
9:	T:
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0)) with all transitions in problem 9, the following new transition is obtained:
	eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
We thus obtain the following problem:
10:	T:
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
11:	T:
		(?, 2)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ] with all transitions in problem 11, the following new transition is obtained:
	eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ] with all transitions in problem 12, the following new transition is obtained:
	eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
13:	T:
		(?, 2)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_cryptRandWriteFile_15(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
14:	T:
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0)) with all transitions in problem 14, the following new transition is obtained:
	eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
We thus obtain the following problem:
15:	T:
		(5, 2)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 15:
	eval_cryptRandWriteFile_20(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
We thus obtain the following problem:
16:	T:
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 ] with all transitions in problem 16, the following new transition is obtained:
	eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
We thus obtain the following problem:
17:	T:
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_cryptRandWriteFile_7(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
We thus obtain the following problem:
18:	T:
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ] with all transitions in problem 18, the following new transition is obtained:
	eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
19:	T:
		(?, 3)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_cryptRandWriteFile_bb7_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
20:	T:
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 ] with all transitions in problem 20, the following new transition is obtained:
	eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
21:	T:
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 21:
	eval_cryptRandWriteFile_12(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
We thus obtain the following problem:
22:	T:
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 2)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ] with all transitions in problem 22, the following new transition is obtained:
	eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
We thus obtain the following problem:
23:	T:
		(5, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 2)    eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 23:
	eval_cryptRandWriteFile_bb9_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0))
We thus obtain the following problem:
24:	T:
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 ] with all transitions in problem 24, the following new transition is obtained:
	eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, 256, v_bytes, 0), eval_cryptRandWriteFile_8(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 /\ 0 >= 0 /\ 0 < 256 /\ 255 >= 0 ]
We thus obtain the following problem:
25:	T:
		(?, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, 256, v_bytes, 0), eval_cryptRandWriteFile_8(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 /\ 0 >= 0 /\ 0 < 256 /\ 255 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 ] with all transitions in problem 25, the following new transition is obtained:
	eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, 256, v_bytes, 0), eval_cryptRandWriteFile_8(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 /\ 0 >= 0 /\ 0 < 256 /\ 255 >= 0 ]
We thus obtain the following problem:
26:	T:
		(?, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, 256, v_bytes, 0), eval_cryptRandWriteFile_8(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 /\ 0 >= 0 /\ 0 < 256 /\ 255 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, 256, v_bytes, 0), eval_cryptRandWriteFile_8(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 /\ 0 >= 0 /\ 0 < 256 /\ 255 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

By chaining the transition eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 ] with all transitions in problem 26, the following new transition is obtained:
	eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_.01, v_bytes, 0), eval_cryptRandWriteFile_8(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 /\ 0 >= 0 /\ 0 < v_.01 /\ v_.01 - 1 >= 0 ]
We thus obtain the following problem:
27:	T:
		(?, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_.01, v_bytes, 0), eval_cryptRandWriteFile_8(v_.01, v_.01, v_bytes, 0)) [ v_.01 > 0 /\ 0 >= 0 /\ 0 < v_.01 /\ v_.01 - 1 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, 256, v_bytes, 0), eval_cryptRandWriteFile_8(v_.01, 256, v_bytes, 0)) [ v_.01 < 0 /\ 0 >= 0 /\ 0 < 256 /\ 255 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, 256, v_bytes, 0), eval_cryptRandWriteFile_8(v_.01, 256, v_bytes, 0)) [ v_.01 > 0 /\ 0 >= 0 /\ 0 < 256 /\ 255 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(5, 3)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_.01 - v_8, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ -v_8 + v_i.0 >= 0 ]
		(?, 1)    eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0 + 1)) [ v_8 - v_i.0 - 1 >= 0 /\ v_i.0 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(5, 2)    eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaRandByte_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_8(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 < v_8 /\ v_8 - v_i.0 - 1 >= 0 /\ v_8 + v_i.0 - 1 >= 0 /\ v_8 - 1 >= 0 ]
		(?, 2)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_ideaCfbEncrypt_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_13(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(?, 3)    eval_cryptRandWriteFile_bb3_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fwrite_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_16(v_.01, v_8, v_bytes, v_i.0)) [ v_i.0 >= 0 /\ v_i.0 >= v_8 /\ -v_8 + v_i.0 >= 0 ]
		(5, 1)    eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_stop(v_.01, v_8, v_bytes, v_i.0))
		(5, 3)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fclose_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_21(v_.01, v_8, v_bytes, v_i.0)) [ v_.01 = 0 ]
		(?, 1)    eval_cryptRandWriteFile_bb1_in(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb3_in(v_.01, v_.01, v_bytes, 0)) [ v_.01 < 0 ]
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb10_in(v_.01, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_bb1_in(v_bytes, v_8, v_bytes, v_i.0))
		(1, 1)    eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0) -> Com_2(eval_fopen_start(v_.01, v_8, v_bytes, v_i.0), eval_cryptRandWriteFile_1(v_.01, v_8, v_bytes, v_i.0))
		(1, 2)    eval_cryptRandWriteFile_start(v_.01, v_8, v_bytes, v_i.0) -> Com_1(eval_cryptRandWriteFile_0(v_.01, v_8, v_bytes, v_i.0))
	start location:	eval_cryptRandWriteFile_start
	leaf cost:	0

Complexity upper bound ?

Time: 5.393 sec (SMT: 3.564 sec)
