MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_send_io_start(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_fd, v_len))
		(?, 1)    eval_send_io_bb0_in(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_fd, v_len))
		(?, 1)    eval_send_io_0(v_.01, v_2, v_fd, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_fd, v_len), eval_send_io_1(v_.01, v_2, v_fd, v_len))
		(?, 1)    eval_send_io_1(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_fd, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_fd, v_len)) [ v_.01 < 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_fd, v_len)) [ v_.01 > 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_fd, v_len)) [ v_.01 = 0 ]
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_fd, v_len))
		(?, 1)    eval_send_io_2(v_.01, v_2, v_fd, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_fd, v_len), eval_send_io_3(v_.01, nondef.0, v_fd, v_len))
		(?, 1)    eval_send_io_3(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_fd, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_fd, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_fd, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_fd, v_len)) [ v_2 < -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_fd, v_len)) [ v_2 > -1 ]
		(?, 1)    eval_send_io_bb4_in(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_fd, v_len))
		(?, 1)    eval_send_io_bb5_in(v_.01, v_2, v_fd, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_fd, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.01, v_2, v_len].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb4_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len))
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 > -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 < -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(?, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(?, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb4_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len))
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 > -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 < -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_send_io_bb5_in) = 1
	Pol(eval_send_io_stop) = 0
	Pol(eval_send_io_bb4_in) = 2
	Pol(eval_send_io_bb1_in) = 2
	Pol(eval_send_io_3) = 2
	Pol(eval_send_io_bb2_in) = 2
	Pol(eval_send_io_2) = 2
	Pol(eval_write_start) = 0
	Pol(eval_send_io_1) = 2
	Pol(eval_send_io_0) = 2
	Pol(eval___errno_location_start) = 0
	Pol(eval_send_io_bb0_in) = 2
	Pol(eval_send_io_start) = 2
orients all transitions weakly and the transitions
	eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
	eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
	eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
strictly and produces the following problem:
4:	T:
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb4_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len))
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 > -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 < -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(2, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 > -1 ] with all transitions in problem 4, the following new transition is obtained:
	eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb4_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len))
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 < -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(2, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 < -1 ] with all transitions in problem 5, the following new transition is obtained:
	eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
We thus obtain the following problem:
6:	T:
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb4_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len))
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(2, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb4_in(v_.01, v_2, v_len)) [ v_2 = -1 ] with all transitions in problem 6, the following new transition is obtained:
	eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
We thus obtain the following problem:
7:	T:
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb4_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len))
		(2, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 7:
	eval_send_io_bb4_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len))
We thus obtain the following problem:
8:	T:
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(?, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(2, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_2 = -1 ] with all transitions in problem 8, the following new transition is obtained:
	eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len)) [ v_2 = -1 ]
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len)) [ v_2 = -1 ] with all transitions in problem 9, the following new transition is obtained:
	eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
We thus obtain the following problem:
10:	T:
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 1)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_2 = -1 ] with all transitions in problem 10, the following new transition is obtained:
	eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
We thus obtain the following problem:
11:	T:
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(?, 1)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len))
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_2(v_.01, v_2, v_len)) with all transitions in problem 11, the following new transition is obtained:
	eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
We thus obtain the following problem:
12:	T:
		(?, 2)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(?, 1)    eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_send_io_2(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
We thus obtain the following problem:
13:	T:
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(?, 2)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ]
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 < 0 ] with all transitions in problem 13, the following new transition is obtained:
	eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
We thus obtain the following problem:
14:	T:
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(?, 2)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ]
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb2_in(v_.01, v_2, v_len)) [ v_.01 > 0 ] with all transitions in problem 14, the following new transition is obtained:
	eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 > 0 ]
We thus obtain the following problem:
15:	T:
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 > 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(?, 2)    eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 15:
	eval_send_io_bb2_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len))
We thus obtain the following problem:
16:	T:
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 > 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
		(2, 1)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb5_in(v_.01, v_2, v_len)) [ v_.01 = 0 ] with all transitions in problem 16, the following new transition is obtained:
	eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_.01 = 0 ]
We thus obtain the following problem:
17:	T:
		(2, 2)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 1)    eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 > 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_send_io_bb5_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len))
We thus obtain the following problem:
18:	T:
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 2)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 > 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_0(v_.01, v_2, v_len)) with all transitions in problem 18, the following new transition is obtained:
	eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
We thus obtain the following problem:
19:	T:
		(1, 2)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 2)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 > 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 1)    eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 19:
	eval_send_io_0(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
We thus obtain the following problem:
20:	T:
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 2)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 > 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 2)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(1, 1)    eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

By chaining the transition eval_send_io_start(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb0_in(v_.01, v_2, v_len)) with all transitions in problem 20, the following new transition is obtained:
	eval_send_io_start(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
We thus obtain the following problem:
21:	T:
		(1, 3)    eval_send_io_start(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 2)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 > 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 2)    eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 21:
	eval_send_io_bb0_in(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
We thus obtain the following problem:
22:	T:
		(2, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_2 = -1 ]
		(?, 3)    eval_send_io_3(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 = -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 < -1 ]
		(?, 2)    eval_send_io_3(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_.01 - v_2, v_2, v_len)) [ v_2 > -1 ]
		(2, 2)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_1(eval_send_io_stop(v_.01, v_2, v_len)) [ v_.01 = 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 > 0 ]
		(?, 3)    eval_send_io_bb1_in(v_.01, v_2, v_len) -> Com_2(eval_write_start(v_.01, v_2, v_len), eval_send_io_3(v_.01, nondef.0, v_len)) [ v_.01 < 0 ]
		(1, 1)    eval_send_io_1(v_.01, v_2, v_len) -> Com_1(eval_send_io_bb1_in(v_len, v_2, v_len))
		(1, 3)    eval_send_io_start(v_.01, v_2, v_len) -> Com_2(eval___errno_location_start(v_.01, v_2, v_len), eval_send_io_1(v_.01, v_2, v_len))
	start location:	eval_send_io_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.692 sec (SMT: 0.524 sec)
