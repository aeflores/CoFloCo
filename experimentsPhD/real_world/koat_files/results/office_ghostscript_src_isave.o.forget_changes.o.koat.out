MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_forget_changes_start() -> eval_forget_changes_bb0_in()
		(?, 1)    eval_forget_changes_bb0_in() -> eval_forget_changes_bb1_in()
		(?, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(?, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_stop()
		(?, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(?, 1)    eval_forget_changes_10() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_forget_changes_start() -> eval_forget_changes_bb0_in()
		(?, 1)    eval_forget_changes_bb0_in() -> eval_forget_changes_bb1_in()
		(?, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(?, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(?, 1)    eval_forget_changes_10() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_forget_changes_start() -> eval_forget_changes_bb0_in()
		(1, 1)    eval_forget_changes_bb0_in() -> eval_forget_changes_bb1_in()
		(?, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(?, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(?, 1)    eval_forget_changes_10() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

By chaining the transition eval_forget_changes_start() -> eval_forget_changes_bb0_in() with all transitions in problem 3, the following new transition is obtained:
	eval_forget_changes_start() -> eval_forget_changes_bb1_in()
We thus obtain the following problem:
4:	T:
		(1, 2)    eval_forget_changes_start() -> eval_forget_changes_bb1_in()
		(1, 1)    eval_forget_changes_bb0_in() -> eval_forget_changes_bb1_in()
		(?, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(?, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(?, 1)    eval_forget_changes_10() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

Testing for reachability in the complexity graph removes the following transition from problem 4:
	eval_forget_changes_bb0_in() -> eval_forget_changes_bb1_in()
We thus obtain the following problem:
5:	T:
		(?, 1)    eval_forget_changes_10() -> eval_forget_changes_bb1_in()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(?, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(?, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(1, 2)    eval_forget_changes_start() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

By chaining the transition eval_forget_changes_10() -> eval_forget_changes_bb1_in() with all transitions in problem 5, the following new transition is obtained:
	eval_forget_changes_10() -> eval_forget_changes_bb4_in()
We thus obtain the following problem:
6:	T:
		(?, 2)    eval_forget_changes_10() -> eval_forget_changes_bb4_in()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(?, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(?, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(1, 2)    eval_forget_changes_start() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 6 produces the following problem:
7:	T:
		(?, 2)    eval_forget_changes_10() -> eval_forget_changes_bb4_in()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(?, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(1, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(1, 2)    eval_forget_changes_start() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

By chaining the transition eval_forget_changes_10() -> eval_forget_changes_bb4_in() with all transitions in problem 7, the following new transition is obtained:
	eval_forget_changes_10() -> eval_forget_changes_9()
We thus obtain the following problem:
8:	T:
		(?, 3)    eval_forget_changes_10() -> eval_forget_changes_9()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(?, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(1, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(1, 2)    eval_forget_changes_start() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 8 produces the following problem:
9:	T:
		(?, 3)    eval_forget_changes_10() -> eval_forget_changes_9()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(1, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(1, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(1, 2)    eval_forget_changes_start() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

By chaining the transition eval_forget_changes_10() -> eval_forget_changes_9() with all transitions in problem 9, the following new transition is obtained:
	eval_forget_changes_10() -> eval_forget_changes_10()
We thus obtain the following problem:
10:	T:
		(?, 4)    eval_forget_changes_10() -> eval_forget_changes_10()
		(?, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(1, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(1, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(1, 2)    eval_forget_changes_start() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 10 produces the following problem:
11:	T:
		(?, 4)    eval_forget_changes_10() -> eval_forget_changes_10()
		(1, 1)    eval_forget_changes_9() -> eval_forget_changes_10()
		(1, 1)    eval_forget_changes_bb4_in() -> eval_forget_changes_9()
		(1, 1)    eval_forget_changes_bb1_in() -> eval_forget_changes_bb4_in()
		(1, 2)    eval_forget_changes_start() -> eval_forget_changes_bb1_in()
	start location:	eval_forget_changes_start
	leaf cost:	1

Complexity upper bound ?

Time: 0.144 sec (SMT: 0.133 sec)
