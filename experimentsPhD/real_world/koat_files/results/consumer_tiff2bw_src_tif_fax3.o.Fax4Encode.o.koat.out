MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_Fax4Encode_start(v_.02, v_18, v_22, v_cc, v_s) -> Com_1(eval_Fax4Encode_bb0_in(v_.02, v_18, v_22, v_cc, v_s))
		(?, 1)    eval_Fax4Encode_bb0_in(v_.02, v_18, v_22, v_cc, v_s) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_18, v_22, v_cc, v_s))
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_18, v_22, v_cc, v_s) -> Com_1(eval_Fax4Encode_3(v_.02, nondef.0, v_22, v_cc, v_s)) [ v_.02 > 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_18, v_22, v_cc, v_s) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_18, v_22, v_cc, v_s)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_3(v_.02, v_18, v_22, v_cc, v_s) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_18, v_22, v_cc, v_s), eval_Fax4Encode_4(v_.02, v_18, v_22, v_cc, v_s))
		(?, 1)    eval_Fax4Encode_4(v_.02, v_18, v_22, v_cc, v_s) -> Com_1(eval_Fax4Encode_6(v_.02, v_18, nondef.2, v_cc, v_s))
		(?, 1)    eval_Fax4Encode_4(v_.02, v_18, v_22, v_cc, v_s) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_18, v_22, v_cc, v_s))
		(?, 1)    eval_Fax4Encode_6(v_.02, v_18, v_22, v_cc, v_s) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_18, v_22, v_cc, v_s), eval_Fax4Encode_7(v_.02, v_18, v_22, v_cc, v_s))
		(?, 1)    eval_Fax4Encode_7(v_.02, v_18, v_22, v_cc, v_s) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_18, v_22, v_cc, v_s))
		(?, 1)    eval_Fax4Encode_bb5_in(v_.02, v_18, v_22, v_cc, v_s) -> Com_1(eval_Fax4Encode_stop(v_.02, v_18, v_22, v_cc, v_s))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.02, v_cc].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc))
		(?, 1)    eval_Fax4Encode_6(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_6(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(?, 1)    eval_Fax4Encode_bb0_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
		(1, 1)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb0_in(v_.02, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc))
		(?, 1)    eval_Fax4Encode_6(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_6(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(1, 1)    eval_Fax4Encode_bb0_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
		(1, 1)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb0_in(v_.02, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_Fax4Encode_bb5_in) = 1
	Pol(eval_Fax4Encode_stop) = 0
	Pol(eval_Fax4Encode_7) = 2
	Pol(eval_Fax4Encode_bb1_in) = 2
	Pol(eval_Fax4Encode_6) = 2
	Pol(eval__TIFFmemcpy_start) = 0
	Pol(eval_Fax4Encode_4) = 2
	Pol(eval_Fax4Encode_3) = 2
	Pol(eval_Fax3Encode2DRow_start) = 0
	Pol(eval_Fax4Encode_bb0_in) = 2
	Pol(eval_Fax4Encode_start) = 2
orients all transitions weakly and the transitions
	eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
	eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
	eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc))
strictly and produces the following problem:
4:	T:
		(2, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc))
		(?, 1)    eval_Fax4Encode_6(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc))
		(2, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_6(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc))
		(2, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(1, 1)    eval_Fax4Encode_bb0_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
		(1, 1)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb0_in(v_.02, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_Fax4Encode_3: X_1 - 1 >= 0
  For symbol eval_Fax4Encode_4: X_1 - 1 >= 0
  For symbol eval_Fax4Encode_6: X_1 - 1 >= 0
  For symbol eval_Fax4Encode_7: X_1 - 1 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb0_in(v_.02, v_cc))
		(1, 1)    eval_Fax4Encode_bb0_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(2, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_6(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_6(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

By chaining the transition eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb0_in(v_.02, v_cc)) with all transitions in problem 5, the following new transition is obtained:
	eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
		(1, 1)    eval_Fax4Encode_bb0_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(2, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_6(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_6(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_Fax4Encode_bb0_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_6(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_6(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

By chaining the transition eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 - 1 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
8:	T:
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_6(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_6(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

By chaining the transition eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_6(v_.02, v_cc)) [ v_.02 - 1 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_6(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_Fax4Encode_6(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
10:	T:
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

By chaining the transition eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb5_in(v_.02, v_cc)) [ v_.02 <= 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
We thus obtain the following problem:
11:	T:
		(2, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 1)    eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_Fax4Encode_bb5_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc))
We thus obtain the following problem:
12:	T:
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
		(?, 1)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

By chaining the transition eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_3(v_.02, v_cc)) [ v_.02 > 0 ] with all transitions in problem 12, the following new transition is obtained:
	eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 > 0 /\ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
13:	T:
		(?, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 > 0 /\ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 1)    eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_Fax4Encode_3(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
We thus obtain the following problem:
14:	T:
		(?, 1)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 > 0 /\ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

By chaining the transition eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 ] with all transitions in problem 14, the following new transitions are obtained:
	eval_Fax4Encode_7(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02 - nondef.4, v_cc), eval_Fax4Encode_4(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 > 0 /\ v_.02 - nondef.4 - 1 >= 0 ]
	eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 <= 0 ]
We thus obtain the following problem:
15:	T:
		(?, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02 - nondef.4, v_cc), eval_Fax4Encode_4(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 > 0 /\ v_.02 - nondef.4 - 1 >= 0 ]
		(?, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 <= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(?, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 > 0 /\ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 15 produces the following problem:
16:	T:
		(?, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02 - nondef.4, v_cc), eval_Fax4Encode_4(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 > 0 /\ v_.02 - nondef.4 - 1 >= 0 ]
		(?, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 <= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(1, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 > 0 /\ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_Fax4Encode_7) = 1
	Pol(eval_Fax3Encode2DRow_start) = 0
	Pol(eval_Fax4Encode_4) = 1
	Pol(eval_Fax4Encode_stop) = 0
	Pol(eval__TIFFmemcpy_start) = 0
	Pol(eval_Fax4Encode_bb1_in) = 1
	Pol(eval_Fax4Encode_start) = 1
orients all transitions weakly and the transition
	eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 <= 0 ]
strictly and produces the following problem:
17:	T:
		(?, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02 - nondef.4, v_cc), eval_Fax4Encode_4(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 > 0 /\ v_.02 - nondef.4 - 1 >= 0 ]
		(1, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 <= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(1, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 > 0 /\ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
		(1, 2)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc))
	start location:	eval_Fax4Encode_start
	leaf cost:	0

By chaining the transition eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_bb1_in(v_cc, v_cc)) with all transitions in problem 17, the following new transitions are obtained:
	eval_Fax4Encode_start(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_cc, v_cc), eval_Fax4Encode_4(v_cc, v_cc)) [ v_cc > 0 /\ v_cc - 1 >= 0 ]
	eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_cc, v_cc)) [ v_cc <= 0 ]
We thus obtain the following problem:
18:	T:
		(1, 4)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_cc, v_cc), eval_Fax4Encode_4(v_cc, v_cc)) [ v_cc > 0 /\ v_cc - 1 >= 0 ]
		(1, 4)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_cc, v_cc)) [ v_cc <= 0 ]
		(?, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02 - nondef.4, v_cc), eval_Fax4Encode_4(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 > 0 /\ v_.02 - nondef.4 - 1 >= 0 ]
		(1, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 <= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(1, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 > 0 /\ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 18:
	eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02, v_cc), eval_Fax4Encode_4(v_.02, v_cc)) [ v_.02 > 0 /\ v_.02 - 1 >= 0 ]
	eval_Fax4Encode_bb1_in(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 <= 0 ]
We thus obtain the following problem:
19:	T:
		(1, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 <= 0 ]
		(?, 3)    eval_Fax4Encode_7(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_.02 - nondef.4, v_cc), eval_Fax4Encode_4(v_.02 - nondef.4, v_cc)) [ v_.02 - 1 >= 0 /\ v_.02 - nondef.4 > 0 /\ v_.02 - nondef.4 - 1 >= 0 ]
		(?, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_2(eval__TIFFmemcpy_start(v_.02, v_cc), eval_Fax4Encode_7(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(2, 2)    eval_Fax4Encode_4(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_.02, v_cc)) [ v_.02 - 1 >= 0 ]
		(1, 4)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_1(eval_Fax4Encode_stop(v_cc, v_cc)) [ v_cc <= 0 ]
		(1, 4)    eval_Fax4Encode_start(v_.02, v_cc) -> Com_2(eval_Fax3Encode2DRow_start(v_cc, v_cc), eval_Fax4Encode_4(v_cc, v_cc)) [ v_cc > 0 /\ v_cc - 1 >= 0 ]
	start location:	eval_Fax4Encode_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.815 sec (SMT: 0.689 sec)
