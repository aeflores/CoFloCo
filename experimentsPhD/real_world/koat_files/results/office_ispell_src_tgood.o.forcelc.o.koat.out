YES(?, v_len + 3)

Initial complexity problem:
1:	T:
		(1, 1)    eval_forcelc_start(v_.01, v_len) -> eval_forcelc_bb0_in(v_.01, v_len)
		(?, 1)    eval_forcelc_bb0_in(v_.01, v_len) -> eval_forcelc_bb1_in(v_len, v_len)
		(?, 1)    eval_forcelc_bb1_in(v_.01, v_len) -> eval_forcelc_bb1_in(v_.01 - 1, v_len) [ v_.01 - 1 >= 0 ]
		(?, 1)    eval_forcelc_bb1_in(v_.01, v_len) -> eval_forcelc_stop(v_.01, v_len) [ v_.01 - 1 < 0 ]
	start location:	eval_forcelc_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_forcelc_start(v_.01, v_len) -> eval_forcelc_bb0_in(v_.01, v_len)
		(?, 1)    eval_forcelc_bb0_in(v_.01, v_len) -> eval_forcelc_bb1_in(v_len, v_len)
		(?, 1)    eval_forcelc_bb1_in(v_.01, v_len) -> eval_forcelc_bb1_in(v_.01 - 1, v_len) [ v_.01 - 1 >= 0 ]
	start location:	eval_forcelc_start
	leaf cost:	1

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_forcelc_start(v_.01, v_len) -> eval_forcelc_bb0_in(v_.01, v_len)
		(1, 1)    eval_forcelc_bb0_in(v_.01, v_len) -> eval_forcelc_bb1_in(v_len, v_len)
		(?, 1)    eval_forcelc_bb1_in(v_.01, v_len) -> eval_forcelc_bb1_in(v_.01 - 1, v_len) [ v_.01 - 1 >= 0 ]
	start location:	eval_forcelc_start
	leaf cost:	1

A polynomial rank function with
	Pol(eval_forcelc_start) = V_2
	Pol(eval_forcelc_bb0_in) = V_2
	Pol(eval_forcelc_bb1_in) = V_1
orients all transitions weakly and the transition
	eval_forcelc_bb1_in(v_.01, v_len) -> eval_forcelc_bb1_in(v_.01 - 1, v_len) [ v_.01 - 1 >= 0 ]
strictly and produces the following problem:
4:	T:
		(1, 1)        eval_forcelc_start(v_.01, v_len) -> eval_forcelc_bb0_in(v_.01, v_len)
		(1, 1)        eval_forcelc_bb0_in(v_.01, v_len) -> eval_forcelc_bb1_in(v_len, v_len)
		(v_len, 1)    eval_forcelc_bb1_in(v_.01, v_len) -> eval_forcelc_bb1_in(v_.01 - 1, v_len) [ v_.01 - 1 >= 0 ]
	start location:	eval_forcelc_start
	leaf cost:	1

Complexity upper bound v_len + 3

Time: 0.062 sec (SMT: 0.059 sec)
