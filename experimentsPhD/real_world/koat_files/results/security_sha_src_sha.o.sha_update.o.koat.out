YES(?, 25*v_count + 327)

Initial complexity problem:
1:	T:
		(1, 1)    eval_sha_update_start(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb0_in(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_bb0_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb2_in(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_bb2_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_count, v_30, v_count))
		(?, 1)    eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ v_.01 >= 64 ]
		(?, 1)    eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_27(v_.01, v_.01, v_count)) [ v_.01 < 64 ]
		(?, 1)    eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count))
		(?, 1)    eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_28(v_.01, v_30, v_count) -> Com_1(eval_sha_update_stop(v_.01, v_30, v_count))
	start location:	eval_sha_update_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_sha_update_start(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb0_in(v_.01, v_30, v_count))
		(1, 1)    eval_sha_update_bb0_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb2_in(v_.01, v_30, v_count))
		(1, 1)    eval_sha_update_bb2_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_count, v_30, v_count))
		(?, 1)    eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ v_.01 >= 64 ]
		(?, 1)    eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_27(v_.01, v_.01, v_count)) [ v_.01 < 64 ]
		(?, 1)    eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count))
		(?, 1)    eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_28(v_.01, v_30, v_count) -> Com_1(eval_sha_update_stop(v_.01, v_30, v_count))
	start location:	eval_sha_update_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_sha_update_start) = 3
	Pol(eval_sha_update_bb0_in) = 3
	Pol(eval_sha_update_bb2_in) = 3
	Pol(eval_sha_update_bb3_in) = 3
	Pol(eval_sha_update_21) = 3
	Pol(eval_sha_update_27) = 2
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_sha_update_22) = 3
	Pol(eval_byte_reverse_start) = 0
	Pol(eval_sha_update_23) = 3
	Pol(eval_sha_transform_start) = 0
	Pol(eval_sha_update_24) = 3
	Pol(eval_sha_update_28) = 1
	Pol(eval_sha_update_stop) = 0
orients all transitions weakly and the transitions
	eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_27(v_.01, v_.01, v_count)) [ v_.01 < 64 ]
	eval_sha_update_28(v_.01, v_30, v_count) -> Com_1(eval_sha_update_stop(v_.01, v_30, v_count))
	eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_sha_update_start(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb0_in(v_.01, v_30, v_count))
		(1, 1)    eval_sha_update_bb0_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb2_in(v_.01, v_30, v_count))
		(1, 1)    eval_sha_update_bb2_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_count, v_30, v_count))
		(?, 1)    eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ v_.01 >= 64 ]
		(3, 1)    eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_27(v_.01, v_.01, v_count)) [ v_.01 < 64 ]
		(?, 1)    eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count))
		(?, 1)    eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count))
		(3, 1)    eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count))
		(3, 1)    eval_sha_update_28(v_.01, v_30, v_count) -> Com_1(eval_sha_update_stop(v_.01, v_30, v_count))
	start location:	eval_sha_update_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_sha_update_21: X_3 - 64 >= 0 /\ X_1 + X_3 - 128 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - 64 >= 0
  For symbol eval_sha_update_22: X_3 - 64 >= 0 /\ X_1 + X_3 - 128 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - 64 >= 0
  For symbol eval_sha_update_23: X_3 - 64 >= 0 /\ X_1 + X_3 - 128 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - 64 >= 0
  For symbol eval_sha_update_24: X_3 - 64 >= 0 /\ X_1 + X_3 - 128 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - 64 >= 0
  For symbol eval_sha_update_27: -X_2 + X_3 >= 0 /\ -X_1 + X_3 >= 0 /\ -X_2 + 63 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 126 >= 0 /\ -X_1 + X_2 >= 0 /\ -X_1 + 63 >= 0
  For symbol eval_sha_update_28: -X_2 + X_3 >= 0 /\ -X_1 + X_3 >= 0 /\ -X_2 + 63 >= 0 /\ X_1 - X_2 >= 0 /\ -X_1 - X_2 + 126 >= 0 /\ -X_1 + X_2 >= 0 /\ -X_1 + 63 >= 0
  For symbol eval_sha_update_bb3_in: -X_1 + X_3 >= 0


This yielded the following problem:
4:	T:
		(3, 1)    eval_sha_update_28(v_.01, v_30, v_count) -> Com_1(eval_sha_update_stop(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\ -v_.01 + v_count >= 0 /\ -v_30 + 63 >= 0 /\ v_.01 - v_30 >= 0 /\ -v_.01 - v_30 + 126 >= 0 /\ -v_.01 + v_30 >= 0 /\ -v_.01 + 63 >= 0 ]
		(3, 1)    eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\ -v_.01 + v_count >= 0 /\ -v_30 + 63 >= 0 /\ v_.01 - v_30 >= 0 /\ -v_.01 - v_30 + 126 >= 0 /\ -v_.01 + v_30 >= 0 /\ -v_.01 + 63 >= 0 ]
		(?, 1)    eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
		(?, 1)    eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
		(3, 1)    eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_27(v_.01, v_.01, v_count)) [ -v_.01 + v_count >= 0 /\ v_.01 < 64 ]
		(?, 1)    eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ -v_.01 + v_count >= 0 /\ v_.01 >= 64 ]
		(1, 1)    eval_sha_update_bb2_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_count, v_30, v_count))
		(1, 1)    eval_sha_update_bb0_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb2_in(v_.01, v_30, v_count))
		(1, 1)    eval_sha_update_start(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb0_in(v_.01, v_30, v_count))
	start location:	eval_sha_update_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_sha_update_bb3_in) = 5*V_1 - 63
	Pol(eval_sha_update_21) = 5*V_1 - 127
	Pol(eval_sha_update_24) = 5*V_1 - 319
	Pol(eval_sha_update_23) = 5*V_1 - 255
	Pol(eval_sha_transform_start) = 63
	Pol(eval_sha_update_22) = 5*V_1 - 191
	Pol(eval_byte_reverse_start) = 63
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 63
and size complexities
	S("eval_sha_update_start(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb0_in(v_.01, v_30, v_count))", 0-0) = v_.01
	S("eval_sha_update_start(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb0_in(v_.01, v_30, v_count))", 0-1) = v_30
	S("eval_sha_update_start(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb0_in(v_.01, v_30, v_count))", 0-2) = v_count
	S("eval_sha_update_bb0_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb2_in(v_.01, v_30, v_count))", 0-0) = v_.01
	S("eval_sha_update_bb0_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb2_in(v_.01, v_30, v_count))", 0-1) = v_30
	S("eval_sha_update_bb0_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb2_in(v_.01, v_30, v_count))", 0-2) = v_count
	S("eval_sha_update_bb2_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_count, v_30, v_count))", 0-0) = v_count
	S("eval_sha_update_bb2_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_count, v_30, v_count))", 0-1) = v_30
	S("eval_sha_update_bb2_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_count, v_30, v_count))", 0-2) = v_count
	S("eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ -v_.01 + v_count >= 0 /\\ v_.01 >= 64 ]", 0-0) = v_count
	S("eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ -v_.01 + v_count >= 0 /\\ v_.01 >= 64 ]", 0-1) = v_30
	S("eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ -v_.01 + v_count >= 0 /\\ v_.01 >= 64 ]", 0-2) = v_count
	S("eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_27(v_.01, v_.01, v_count)) [ -v_.01 + v_count >= 0 /\\ v_.01 < 64 ]", 0-0) = v_count
	S("eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_27(v_.01, v_.01, v_count)) [ -v_.01 + v_count >= 0 /\\ v_.01 < 64 ]", 0-1) = v_count
	S("eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_27(v_.01, v_.01, v_count)) [ -v_.01 + v_count >= 0 /\\ v_.01 < 64 ]", 0-2) = v_count
	S("eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-0) = v_count
	S("eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-1) = v_30
	S("eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-2) = v_count
	S("eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 1-0) = v_count
	S("eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 1-1) = v_30
	S("eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 1-2) = v_count
	S("eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-0) = v_count
	S("eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-1) = v_30
	S("eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-2) = v_count
	S("eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 1-0) = v_count
	S("eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 1-1) = v_30
	S("eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 1-2) = v_count
	S("eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-0) = v_count
	S("eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-1) = v_30
	S("eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-2) = v_count
	S("eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 1-0) = v_count
	S("eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 1-1) = v_30
	S("eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 1-2) = v_count
	S("eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-0) = v_count
	S("eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-1) = v_30
	S("eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count)) [ v_count - 64 >= 0 /\\ v_.01 + v_count - 128 >= 0 /\\ -v_.01 + v_count >= 0 /\\ v_.01 - 64 >= 0 ]", 0-2) = v_count
	S("eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\\ -v_.01 + v_count >= 0 /\\ -v_30 + 63 >= 0 /\\ v_.01 - v_30 >= 0 /\\ -v_.01 - v_30 + 126 >= 0 /\\ -v_.01 + v_30 >= 0 /\\ -v_.01 + 63 >= 0 ]", 0-0) = v_count
	S("eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\\ -v_.01 + v_count >= 0 /\\ -v_30 + 63 >= 0 /\\ v_.01 - v_30 >= 0 /\\ -v_.01 - v_30 + 126 >= 0 /\\ -v_.01 + v_30 >= 0 /\\ -v_.01 + 63 >= 0 ]", 0-1) = v_count
	S("eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\\ -v_.01 + v_count >= 0 /\\ -v_30 + 63 >= 0 /\\ v_.01 - v_30 >= 0 /\\ -v_.01 - v_30 + 126 >= 0 /\\ -v_.01 + v_30 >= 0 /\\ -v_.01 + 63 >= 0 ]", 0-2) = v_count
	S("eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\\ -v_.01 + v_count >= 0 /\\ -v_30 + 63 >= 0 /\\ v_.01 - v_30 >= 0 /\\ -v_.01 - v_30 + 126 >= 0 /\\ -v_.01 + v_30 >= 0 /\\ -v_.01 + 63 >= 0 ]", 1-0) = v_count
	S("eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\\ -v_.01 + v_count >= 0 /\\ -v_30 + 63 >= 0 /\\ v_.01 - v_30 >= 0 /\\ -v_.01 - v_30 + 126 >= 0 /\\ -v_.01 + v_30 >= 0 /\\ -v_.01 + 63 >= 0 ]", 1-1) = v_count
	S("eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\\ -v_.01 + v_count >= 0 /\\ -v_30 + 63 >= 0 /\\ v_.01 - v_30 >= 0 /\\ -v_.01 - v_30 + 126 >= 0 /\\ -v_.01 + v_30 >= 0 /\\ -v_.01 + 63 >= 0 ]", 1-2) = v_count
	S("eval_sha_update_28(v_.01, v_30, v_count) -> Com_1(eval_sha_update_stop(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\\ -v_.01 + v_count >= 0 /\\ -v_30 + 63 >= 0 /\\ v_.01 - v_30 >= 0 /\\ -v_.01 - v_30 + 126 >= 0 /\\ -v_.01 + v_30 >= 0 /\\ -v_.01 + 63 >= 0 ]", 0-0) = v_count
	S("eval_sha_update_28(v_.01, v_30, v_count) -> Com_1(eval_sha_update_stop(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\\ -v_.01 + v_count >= 0 /\\ -v_30 + 63 >= 0 /\\ v_.01 - v_30 >= 0 /\\ -v_.01 - v_30 + 126 >= 0 /\\ -v_.01 + v_30 >= 0 /\\ -v_.01 + 63 >= 0 ]", 0-1) = v_count
	S("eval_sha_update_28(v_.01, v_30, v_count) -> Com_1(eval_sha_update_stop(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\\ -v_.01 + v_count >= 0 /\\ -v_30 + 63 >= 0 /\\ v_.01 - v_30 >= 0 /\\ -v_.01 - v_30 + 126 >= 0 /\\ -v_.01 + v_30 >= 0 /\\ -v_.01 + 63 >= 0 ]", 0-2) = v_count
orients the transitions
	eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ -v_.01 + v_count >= 0 /\ v_.01 >= 64 ]
	eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
	eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
	eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
	eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
weakly and the transitions
	eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ -v_.01 + v_count >= 0 /\ v_.01 >= 64 ]
	eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
	eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
	eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
	eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
strictly and produces the following problem:
5:	T:
		(3, 1)                 eval_sha_update_28(v_.01, v_30, v_count) -> Com_1(eval_sha_update_stop(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\ -v_.01 + v_count >= 0 /\ -v_30 + 63 >= 0 /\ v_.01 - v_30 >= 0 /\ -v_.01 - v_30 + 126 >= 0 /\ -v_.01 + v_30 >= 0 /\ -v_.01 + 63 >= 0 ]
		(3, 1)                 eval_sha_update_27(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_28(v_.01, v_30, v_count)) [ -v_30 + v_count >= 0 /\ -v_.01 + v_count >= 0 /\ -v_30 + 63 >= 0 /\ v_.01 - v_30 >= 0 /\ -v_.01 - v_30 + 126 >= 0 /\ -v_.01 + v_30 >= 0 /\ -v_.01 + 63 >= 0 ]
		(5*v_count + 63, 1)    eval_sha_update_24(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_.01 - 64, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
		(5*v_count + 63, 1)    eval_sha_update_23(v_.01, v_30, v_count) -> Com_2(eval_sha_transform_start(v_.01, v_30, v_count), eval_sha_update_24(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
		(5*v_count + 63, 1)    eval_sha_update_22(v_.01, v_30, v_count) -> Com_2(eval_byte_reverse_start(v_.01, v_30, v_count), eval_sha_update_23(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
		(5*v_count + 63, 1)    eval_sha_update_21(v_.01, v_30, v_count) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_.01, v_30, v_count), eval_sha_update_22(v_.01, v_30, v_count)) [ v_count - 64 >= 0 /\ v_.01 + v_count - 128 >= 0 /\ -v_.01 + v_count >= 0 /\ v_.01 - 64 >= 0 ]
		(3, 1)                 eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_27(v_.01, v_.01, v_count)) [ -v_.01 + v_count >= 0 /\ v_.01 < 64 ]
		(5*v_count + 63, 1)    eval_sha_update_bb3_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_21(v_.01, v_30, v_count)) [ -v_.01 + v_count >= 0 /\ v_.01 >= 64 ]
		(1, 1)                 eval_sha_update_bb2_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb3_in(v_count, v_30, v_count))
		(1, 1)                 eval_sha_update_bb0_in(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb2_in(v_.01, v_30, v_count))
		(1, 1)                 eval_sha_update_start(v_.01, v_30, v_count) -> Com_1(eval_sha_update_bb0_in(v_.01, v_30, v_count))
	start location:	eval_sha_update_start
	leaf cost:	0

Complexity upper bound 25*v_count + 327

Time: 0.146 sec (SMT: 0.121 sec)
