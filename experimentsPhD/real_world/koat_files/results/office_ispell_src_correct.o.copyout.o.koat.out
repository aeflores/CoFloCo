YES(?, 20*v_cnt + 8)

Initial complexity problem:
1:	T:
		(1, 1)    eval_copyout_start(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_1(eval_copyout_bb0_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt))
		(?, 1)    eval_copyout_bb0_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_1(eval_copyout_bb1_in(v_'aflag, v_'lflag, v_cnt, v_0, v_12, v_cnt))
		(?, 1)    eval_copyout_bb1_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_1(eval_copyout_bb6_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt)) [ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_1(eval_copyout_bb5_in(v_'aflag, v_'lflag, v_.0, v_.0 - 1, v_12, v_cnt)) [ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_1(eval_copyout_10(v_'aflag, v_'lflag, v_.0, v_.0 - 1, nondef.1, v_cnt)) [ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_1(eval_copyout_bb6_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt)) [ v_.0 - 1 < 0 ]
		(?, 1)    eval_copyout_10(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_2(eval__IO_putc_start(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt), eval_copyout_11(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt))
		(?, 1)    eval_copyout_11(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_1(eval_copyout_bb5_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt))
		(?, 1)    eval_copyout_bb5_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_1(eval_copyout_bb1_in(nondef.3, nondef.4, v_0, v_0, v_12, v_cnt))
		(?, 1)    eval_copyout_bb6_in(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt) -> Com_1(eval_copyout_stop(v_'aflag, v_'lflag, v_.0, v_0, v_12, v_cnt))
	start location:	eval_copyout_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.0, v_0, v_cnt].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_copyout_bb6_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_stop(v_.0, v_0, v_cnt))
		(?, 1)    eval_copyout_bb5_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_0, v_0, v_cnt))
		(?, 1)    eval_copyout_11(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_0, v_cnt))
		(?, 1)    eval_copyout_10(v_.0, v_0, v_cnt) -> Com_2(eval__IO_putc_start(v_.0, v_0, v_cnt), eval_copyout_11(v_.0, v_0, v_cnt))
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ v_.0 - 1 < 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_10(v_.0, v_.0 - 1, v_cnt)) [ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_.0 - 1, v_cnt)) [ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb0_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_cnt, v_0, v_cnt))
		(1, 1)    eval_copyout_start(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb0_in(v_.0, v_0, v_cnt))
	start location:	eval_copyout_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_copyout_bb6_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_stop(v_.0, v_0, v_cnt))
		(?, 1)    eval_copyout_bb5_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_0, v_0, v_cnt))
		(?, 1)    eval_copyout_11(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_0, v_cnt))
		(?, 1)    eval_copyout_10(v_.0, v_0, v_cnt) -> Com_2(eval__IO_putc_start(v_.0, v_0, v_cnt), eval_copyout_11(v_.0, v_0, v_cnt))
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ v_.0 - 1 < 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_10(v_.0, v_.0 - 1, v_cnt)) [ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_.0 - 1, v_cnt)) [ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ v_.0 - 1 >= 0 ]
		(1, 1)    eval_copyout_bb0_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_cnt, v_0, v_cnt))
		(1, 1)    eval_copyout_start(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb0_in(v_.0, v_0, v_cnt))
	start location:	eval_copyout_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_copyout_bb6_in) = 1
	Pol(eval_copyout_stop) = 0
	Pol(eval_copyout_bb5_in) = 2
	Pol(eval_copyout_bb1_in) = 2
	Pol(eval_copyout_11) = 2
	Pol(eval_copyout_10) = 2
	Pol(eval__IO_putc_start) = 0
	Pol(eval_copyout_bb0_in) = 2
	Pol(eval_copyout_start) = 2
orients all transitions weakly and the transitions
	eval_copyout_bb6_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_stop(v_.0, v_0, v_cnt))
	eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ v_.0 - 1 < 0 ]
	eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ v_.0 - 1 >= 0 ]
strictly and produces the following problem:
4:	T:
		(2, 1)    eval_copyout_bb6_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_stop(v_.0, v_0, v_cnt))
		(?, 1)    eval_copyout_bb5_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_0, v_0, v_cnt))
		(?, 1)    eval_copyout_11(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_0, v_cnt))
		(?, 1)    eval_copyout_10(v_.0, v_0, v_cnt) -> Com_2(eval__IO_putc_start(v_.0, v_0, v_cnt), eval_copyout_11(v_.0, v_0, v_cnt))
		(2, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ v_.0 - 1 < 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_10(v_.0, v_.0 - 1, v_cnt)) [ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_.0 - 1, v_cnt)) [ v_.0 - 1 >= 0 ]
		(2, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ v_.0 - 1 >= 0 ]
		(1, 1)    eval_copyout_bb0_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_cnt, v_0, v_cnt))
		(1, 1)    eval_copyout_start(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb0_in(v_.0, v_0, v_cnt))
	start location:	eval_copyout_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_copyout_10: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_copyout_11: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_copyout_bb1_in: -X_1 + X_3 >= 0
  For symbol eval_copyout_bb5_in: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_copyout_bb6_in: -X_1 + X_3 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_copyout_start(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb0_in(v_.0, v_0, v_cnt))
		(1, 1)    eval_copyout_bb0_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_cnt, v_0, v_cnt))
		(2, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_.0 - 1, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_10(v_.0, v_.0 - 1, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 >= 0 ]
		(2, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 < 0 ]
		(?, 1)    eval_copyout_10(v_.0, v_0, v_cnt) -> Com_2(eval__IO_putc_start(v_.0, v_0, v_cnt), eval_copyout_11(v_.0, v_0, v_cnt)) [ v_cnt - 1 >= 0 /\ v_0 + v_cnt - 1 >= 0 /\ -v_0 + v_cnt - 1 >= 0 /\ v_.0 + v_cnt - 2 >= 0 /\ -v_.0 + v_cnt >= 0 /\ v_.0 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.0 + v_0 - 1 >= 0 /\ -v_.0 + v_0 + 1 >= 0 /\ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_11(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_0, v_cnt)) [ v_cnt - 1 >= 0 /\ v_0 + v_cnt - 1 >= 0 /\ -v_0 + v_cnt - 1 >= 0 /\ v_.0 + v_cnt - 2 >= 0 /\ -v_.0 + v_cnt >= 0 /\ v_.0 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.0 + v_0 - 1 >= 0 /\ -v_.0 + v_0 + 1 >= 0 /\ v_.0 - 1 >= 0 ]
		(?, 1)    eval_copyout_bb5_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_0, v_0, v_cnt)) [ v_cnt - 1 >= 0 /\ v_0 + v_cnt - 1 >= 0 /\ -v_0 + v_cnt - 1 >= 0 /\ v_.0 + v_cnt - 2 >= 0 /\ -v_.0 + v_cnt >= 0 /\ v_.0 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.0 + v_0 - 1 >= 0 /\ -v_.0 + v_0 + 1 >= 0 /\ v_.0 - 1 >= 0 ]
		(2, 1)    eval_copyout_bb6_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_stop(v_.0, v_0, v_cnt)) [ -v_.0 + v_cnt >= 0 ]
	start location:	eval_copyout_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_copyout_start) = 4*V_3
	Pol(eval_copyout_bb0_in) = 4*V_3
	Pol(eval_copyout_bb1_in) = 4*V_1
	Pol(eval_copyout_bb6_in) = 4*V_1
	Pol(eval_copyout_bb5_in) = V_1 + 3*V_2
	Pol(eval_copyout_10) = 4*V_2 + 3
	Pol(eval__IO_putc_start) = -V_1
	Pol(eval_copyout_11) = V_1 + 3*V_2 + 1
	Pol(eval_copyout_stop) = 4*V_1
orients all transitions weakly and the transitions
	eval_copyout_bb5_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_0, v_0, v_cnt)) [ v_cnt - 1 >= 0 /\ v_0 + v_cnt - 1 >= 0 /\ -v_0 + v_cnt - 1 >= 0 /\ v_.0 + v_cnt - 2 >= 0 /\ -v_.0 + v_cnt >= 0 /\ v_.0 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.0 + v_0 - 1 >= 0 /\ -v_.0 + v_0 + 1 >= 0 /\ v_.0 - 1 >= 0 ]
	eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_.0 - 1, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 >= 0 ]
	eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_10(v_.0, v_.0 - 1, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 >= 0 ]
	eval_copyout_11(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_0, v_cnt)) [ v_cnt - 1 >= 0 /\ v_0 + v_cnt - 1 >= 0 /\ -v_0 + v_cnt - 1 >= 0 /\ v_.0 + v_cnt - 2 >= 0 /\ -v_.0 + v_cnt >= 0 /\ v_.0 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.0 + v_0 - 1 >= 0 /\ -v_.0 + v_0 + 1 >= 0 /\ v_.0 - 1 >= 0 ]
	eval_copyout_10(v_.0, v_0, v_cnt) -> Com_2(eval__IO_putc_start(v_.0, v_0, v_cnt), eval_copyout_11(v_.0, v_0, v_cnt)) [ v_cnt - 1 >= 0 /\ v_0 + v_cnt - 1 >= 0 /\ -v_0 + v_cnt - 1 >= 0 /\ v_.0 + v_cnt - 2 >= 0 /\ -v_.0 + v_cnt >= 0 /\ v_.0 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.0 + v_0 - 1 >= 0 /\ -v_.0 + v_0 + 1 >= 0 /\ v_.0 - 1 >= 0 ]
strictly and produces the following problem:
6:	T:
		(1, 1)          eval_copyout_start(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb0_in(v_.0, v_0, v_cnt))
		(1, 1)          eval_copyout_bb0_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_cnt, v_0, v_cnt))
		(2, 1)          eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 >= 0 ]
		(4*v_cnt, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_.0 - 1, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 >= 0 ]
		(4*v_cnt, 1)    eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_10(v_.0, v_.0 - 1, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 >= 0 ]
		(2, 1)          eval_copyout_bb1_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb6_in(v_.0, v_0, v_cnt)) [ -v_.0 + v_cnt >= 0 /\ v_.0 - 1 < 0 ]
		(4*v_cnt, 1)    eval_copyout_10(v_.0, v_0, v_cnt) -> Com_2(eval__IO_putc_start(v_.0, v_0, v_cnt), eval_copyout_11(v_.0, v_0, v_cnt)) [ v_cnt - 1 >= 0 /\ v_0 + v_cnt - 1 >= 0 /\ -v_0 + v_cnt - 1 >= 0 /\ v_.0 + v_cnt - 2 >= 0 /\ -v_.0 + v_cnt >= 0 /\ v_.0 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.0 + v_0 - 1 >= 0 /\ -v_.0 + v_0 + 1 >= 0 /\ v_.0 - 1 >= 0 ]
		(4*v_cnt, 1)    eval_copyout_11(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb5_in(v_.0, v_0, v_cnt)) [ v_cnt - 1 >= 0 /\ v_0 + v_cnt - 1 >= 0 /\ -v_0 + v_cnt - 1 >= 0 /\ v_.0 + v_cnt - 2 >= 0 /\ -v_.0 + v_cnt >= 0 /\ v_.0 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.0 + v_0 - 1 >= 0 /\ -v_.0 + v_0 + 1 >= 0 /\ v_.0 - 1 >= 0 ]
		(4*v_cnt, 1)    eval_copyout_bb5_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_bb1_in(v_0, v_0, v_cnt)) [ v_cnt - 1 >= 0 /\ v_0 + v_cnt - 1 >= 0 /\ -v_0 + v_cnt - 1 >= 0 /\ v_.0 + v_cnt - 2 >= 0 /\ -v_.0 + v_cnt >= 0 /\ v_.0 - v_0 - 1 >= 0 /\ v_0 >= 0 /\ v_.0 + v_0 - 1 >= 0 /\ -v_.0 + v_0 + 1 >= 0 /\ v_.0 - 1 >= 0 ]
		(2, 1)          eval_copyout_bb6_in(v_.0, v_0, v_cnt) -> Com_1(eval_copyout_stop(v_.0, v_0, v_cnt)) [ -v_.0 + v_cnt >= 0 ]
	start location:	eval_copyout_start
	leaf cost:	0

Complexity upper bound 20*v_cnt + 8

Time: 0.139 sec (SMT: 0.121 sec)
