YES(?, v_count + 9)

Initial complexity problem:
1:	T:
		(1, 1)    eval_z1_push_proc_start(v_count, v_i.0) -> eval_z1_push_proc_bb0_in(v_count, v_i.0)
		(?, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb4_in(v_count, v_i.0) [ nondef.0 - nondef.1 = 0 ]
		(?, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb4_in(v_count, v_i.0) [ nondef.0 - nondef.1 > 0 /\ nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 < 16 ]
		(?, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb4_in(v_count, v_i.0) [ nondef.0 - nondef.1 < 0 /\ nondef.2 <= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 >= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 < 16 ]
		(?, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 = 0 ]
		(?, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 > 0 /\ nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 < 16 ]
		(?, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 < 0 /\ nondef.2 <= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 >= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 < 16 ]
		(?, 1)    eval_z1_push_proc_bb2_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, v_i.0 + 1) [ v_i.0 < v_count ]
		(?, 1)    eval_z1_push_proc_bb2_in(v_count, v_i.0) -> eval_z1_push_proc_bb4_in(v_count, v_i.0) [ v_i.0 >= v_count ]
		(?, 1)    eval_z1_push_proc_bb4_in(v_count, v_i.0) -> eval_z1_push_proc_stop(v_count, v_i.0)
	start location:	eval_z1_push_proc_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_z1_push_proc_start(v_count, v_i.0) -> eval_z1_push_proc_bb0_in(v_count, v_i.0)
		(?, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 = 0 ]
		(?, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 > 0 /\ nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 < 16 ]
		(?, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 < 0 /\ nondef.2 <= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 >= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 < 16 ]
		(?, 1)    eval_z1_push_proc_bb2_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, v_i.0 + 1) [ v_i.0 < v_count ]
	start location:	eval_z1_push_proc_start
	leaf cost:	5

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_z1_push_proc_start(v_count, v_i.0) -> eval_z1_push_proc_bb0_in(v_count, v_i.0)
		(1, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 = 0 ]
		(1, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 > 0 /\ nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 < 16 ]
		(1, 1)    eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 < 0 /\ nondef.2 <= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 >= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 < 16 ]
		(?, 1)    eval_z1_push_proc_bb2_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, v_i.0 + 1) [ v_i.0 < v_count ]
	start location:	eval_z1_push_proc_start
	leaf cost:	5

A polynomial rank function with
	Pol(eval_z1_push_proc_start) = V_1
	Pol(eval_z1_push_proc_bb0_in) = V_1
	Pol(eval_z1_push_proc_bb2_in) = V_1 - V_2
orients all transitions weakly and the transition
	eval_z1_push_proc_bb2_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, v_i.0 + 1) [ v_i.0 < v_count ]
strictly and produces the following problem:
4:	T:
		(1, 1)          eval_z1_push_proc_start(v_count, v_i.0) -> eval_z1_push_proc_bb0_in(v_count, v_i.0)
		(1, 1)          eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 = 0 ]
		(1, 1)          eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 > 0 /\ nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 >= 0 /\ nondef.0 - nondef.1 - 16*nondef.2 < 16 ]
		(1, 1)          eval_z1_push_proc_bb0_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, 0) [ nondef.0 - nondef.1 < 0 /\ nondef.2 <= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 >= 0 /\ -nondef.0 + nondef.1 + 16*nondef.2 < 16 ]
		(v_count, 1)    eval_z1_push_proc_bb2_in(v_count, v_i.0) -> eval_z1_push_proc_bb2_in(v_count, v_i.0 + 1) [ v_i.0 < v_count ]
	start location:	eval_z1_push_proc_start
	leaf cost:	5

Complexity upper bound v_count + 9

Time: 0.032 sec (SMT: 0.028 sec)
