MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_transposedletter_start() -> Com_1(eval_transposedletter_bb0_in())
		(?, 1)    eval_transposedletter_bb0_in() -> Com_1(eval_transposedletter_0())
		(?, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(?, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_11())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_bb4_in() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
	start location:	eval_transposedletter_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_transposedletter_start() -> Com_1(eval_transposedletter_bb0_in())
		(1, 1)    eval_transposedletter_bb0_in() -> Com_1(eval_transposedletter_0())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_11())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_bb4_in() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
	start location:	eval_transposedletter_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_transposedletter_start) = 2
	Pol(eval_transposedletter_bb0_in) = 2
	Pol(eval_transposedletter_0) = 2
	Pol(eval_strcpy_start) = 0
	Pol(eval_transposedletter_1) = 2
	Pol(eval_transposedletter_bb1_in) = 2
	Pol(eval_transposedletter_9) = 2
	Pol(eval_transposedletter_bb5_in) = 1
	Pol(eval_good_start) = 0
	Pol(eval_transposedletter_10) = 2
	Pol(eval_transposedletter_11) = 2
	Pol(eval_transposedletter_bb4_in) = 2
	Pol(eval_ins_cap_start) = 0
	Pol(eval_transposedletter_12) = 2
	Pol(eval_transposedletter_stop) = 0
orients all transitions weakly and the transitions
	eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
	eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
	eval_transposedletter_12() -> Com_1(eval_transposedletter_bb5_in())
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_transposedletter_start() -> Com_1(eval_transposedletter_bb0_in())
		(1, 1)    eval_transposedletter_bb0_in() -> Com_1(eval_transposedletter_0())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(2, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_11())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(2, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_bb4_in() -> Com_1(eval_transposedletter_bb1_in())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_start() -> Com_1(eval_transposedletter_bb0_in()) with all transitions in problem 3, the following new transition is obtained:
	eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
We thus obtain the following problem:
4:	T:
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
		(1, 1)    eval_transposedletter_bb0_in() -> Com_1(eval_transposedletter_0())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(2, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_11())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(2, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_bb4_in() -> Com_1(eval_transposedletter_bb1_in())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
	start location:	eval_transposedletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 4:
	eval_transposedletter_bb0_in() -> Com_1(eval_transposedletter_0())
We thus obtain the following problem:
5:	T:
		(?, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb4_in())
		(2, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_bb4_in() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_11())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_12() -> Com_1(eval_transposedletter_bb4_in()) with all transitions in problem 5, the following new transition is obtained:
	eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
We thus obtain the following problem:
6:	T:
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(2, 1)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_bb4_in() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_11())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_12() -> Com_1(eval_transposedletter_bb5_in()) with all transitions in problem 6, the following new transition is obtained:
	eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
We thus obtain the following problem:
7:	T:
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_bb4_in() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb4_in())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_11())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_10() -> Com_1(eval_transposedletter_bb4_in()) with all transitions in problem 7, the following new transition is obtained:
	eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
We thus obtain the following problem:
8:	T:
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_bb4_in() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_11())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_transposedletter_bb4_in() -> Com_1(eval_transposedletter_bb1_in())
We thus obtain the following problem:
9:	T:
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_10() -> Com_1(eval_transposedletter_11())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_10() -> Com_1(eval_transposedletter_11()) with all transitions in problem 9, the following new transition is obtained:
	eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
We thus obtain the following problem:
10:	T:
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_transposedletter_11() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
We thus obtain the following problem:
11:	T:
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_bb5_in()) with all transitions in problem 11, the following new transition is obtained:
	eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
We thus obtain the following problem:
12:	T:
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(2, 1)    eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 12:
	eval_transposedletter_bb5_in() -> Com_1(eval_transposedletter_stop())
We thus obtain the following problem:
13:	T:
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(?, 1)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_9()) with all transitions in problem 13, the following new transition is obtained:
	eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
We thus obtain the following problem:
14:	T:
		(?, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(?, 1)    eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 14:
	eval_transposedletter_9() -> Com_2(eval_good_start(), eval_transposedletter_10())
We thus obtain the following problem:
15:	T:
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(1, 2)    eval_transposedletter_start() -> Com_1(eval_transposedletter_0())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_start() -> Com_1(eval_transposedletter_0()) with all transitions in problem 15, the following new transition is obtained:
	eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
We thus obtain the following problem:
16:	T:
		(1, 3)    eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 1)    eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
	start location:	eval_transposedletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 16:
	eval_transposedletter_0() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
We thus obtain the following problem:
17:	T:
		(2, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 3)    eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_12() -> Com_1(eval_transposedletter_bb1_in()) with all transitions in problem 17, the following new transitions are obtained:
	eval_transposedletter_12() -> Com_2(eval_good_start(), eval_transposedletter_10())
	eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
We thus obtain the following problem:
18:	T:
		(?, 4)    eval_transposedletter_12() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(?, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 3)    eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
	start location:	eval_transposedletter_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_transposedletter_12) = 1
	Pol(eval_good_start) = 0
	Pol(eval_transposedletter_10) = 1
	Pol(eval_transposedletter_stop) = 0
	Pol(eval_ins_cap_start) = 0
	Pol(eval_transposedletter_bb1_in) = 1
	Pol(eval_transposedletter_1) = 1
	Pol(eval_transposedletter_start) = 1
	Pol(eval_strcpy_start) = 0
orients all transitions weakly and the transition
	eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
strictly and produces the following problem:
19:	T:
		(?, 4)    eval_transposedletter_12() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in())
		(?, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 3)    eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_10() -> Com_1(eval_transposedletter_bb1_in()) with all transitions in problem 19, the following new transitions are obtained:
	eval_transposedletter_10() -> Com_2(eval_good_start(), eval_transposedletter_10())
	eval_transposedletter_10() -> Com_1(eval_transposedletter_stop())
We thus obtain the following problem:
20:	T:
		(?, 4)    eval_transposedletter_10() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(?, 4)    eval_transposedletter_10() -> Com_1(eval_transposedletter_stop())
		(?, 4)    eval_transposedletter_12() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(?, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 3)    eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
	start location:	eval_transposedletter_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 20 produces the following problem:
21:	T:
		(?, 4)    eval_transposedletter_10() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(?, 4)    eval_transposedletter_10() -> Com_1(eval_transposedletter_stop())
		(?, 4)    eval_transposedletter_12() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(1, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 3)    eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
	start location:	eval_transposedletter_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_transposedletter_10) = 1
	Pol(eval_good_start) = 0
	Pol(eval_transposedletter_stop) = 0
	Pol(eval_transposedletter_12) = 1
	Pol(eval_ins_cap_start) = 0
	Pol(eval_transposedletter_bb1_in) = 1
	Pol(eval_transposedletter_1) = 1
	Pol(eval_transposedletter_start) = 1
	Pol(eval_strcpy_start) = 0
orients all transitions weakly and the transition
	eval_transposedletter_10() -> Com_1(eval_transposedletter_stop())
strictly and produces the following problem:
22:	T:
		(?, 4)    eval_transposedletter_10() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 4)    eval_transposedletter_10() -> Com_1(eval_transposedletter_stop())
		(?, 4)    eval_transposedletter_12() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(1, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 1)    eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in())
		(1, 3)    eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
	start location:	eval_transposedletter_start
	leaf cost:	0

By chaining the transition eval_transposedletter_1() -> Com_1(eval_transposedletter_bb1_in()) with all transitions in problem 22, the following new transitions are obtained:
	eval_transposedletter_1() -> Com_2(eval_good_start(), eval_transposedletter_10())
	eval_transposedletter_1() -> Com_1(eval_transposedletter_stop())
We thus obtain the following problem:
23:	T:
		(1, 3)    eval_transposedletter_1() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 3)    eval_transposedletter_1() -> Com_1(eval_transposedletter_stop())
		(?, 4)    eval_transposedletter_10() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 4)    eval_transposedletter_10() -> Com_1(eval_transposedletter_stop())
		(?, 4)    eval_transposedletter_12() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(1, 2)    eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(2, 2)    eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
		(1, 3)    eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
	start location:	eval_transposedletter_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 23:
	eval_transposedletter_bb1_in() -> Com_2(eval_good_start(), eval_transposedletter_10())
	eval_transposedletter_bb1_in() -> Com_1(eval_transposedletter_stop())
We thus obtain the following problem:
24:	T:
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(?, 4)    eval_transposedletter_12() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 4)    eval_transposedletter_12() -> Com_1(eval_transposedletter_stop())
		(1, 4)    eval_transposedletter_10() -> Com_1(eval_transposedletter_stop())
		(?, 4)    eval_transposedletter_10() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(?, 2)    eval_transposedletter_10() -> Com_2(eval_ins_cap_start(), eval_transposedletter_12())
		(1, 3)    eval_transposedletter_1() -> Com_1(eval_transposedletter_stop())
		(1, 3)    eval_transposedletter_1() -> Com_2(eval_good_start(), eval_transposedletter_10())
		(1, 3)    eval_transposedletter_start() -> Com_2(eval_strcpy_start(), eval_transposedletter_1())
	start location:	eval_transposedletter_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.129 sec (SMT: 0.116 sec)
