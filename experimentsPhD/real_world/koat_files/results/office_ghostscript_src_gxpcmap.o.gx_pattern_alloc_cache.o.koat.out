YES(?, v_num_tiles + 11)

Initial complexity problem:
1:	T:
		(1, 1)    eval_gx_pattern_alloc_cache_start(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb0_in(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_bb0_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_0(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_0(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_1(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_1(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_2(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_2(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_3(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_2(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb3_in(0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_3(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_4(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_4(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_5(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_5(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb5_in(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_bb3_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb3_in(v_i.0 + 1, v_max_bits, v_num_tiles) [ v_i.0 < v_num_tiles ]
		(?, 1)    eval_gx_pattern_alloc_cache_bb3_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb5_in(v_i.0, v_max_bits, v_num_tiles) [ v_i.0 >= v_num_tiles ]
		(?, 1)    eval_gx_pattern_alloc_cache_bb5_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_stop(v_i.0, v_max_bits, v_num_tiles)
	start location:	eval_gx_pattern_alloc_cache_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_gx_pattern_alloc_cache_start(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb0_in(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_bb0_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_0(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_0(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_1(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_1(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_2(v_i.0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_2(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb3_in(0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_bb3_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb3_in(v_i.0 + 1, v_max_bits, v_num_tiles) [ v_i.0 < v_num_tiles ]
	start location:	eval_gx_pattern_alloc_cache_start
	leaf cost:	6

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(1, 1)    eval_gx_pattern_alloc_cache_start(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb0_in(v_i.0, v_max_bits, v_num_tiles)
		(1, 1)    eval_gx_pattern_alloc_cache_bb0_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_0(v_i.0, v_max_bits, v_num_tiles)
		(1, 1)    eval_gx_pattern_alloc_cache_0(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_1(v_i.0, v_max_bits, v_num_tiles)
		(1, 1)    eval_gx_pattern_alloc_cache_1(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_2(v_i.0, v_max_bits, v_num_tiles)
		(1, 1)    eval_gx_pattern_alloc_cache_2(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb3_in(0, v_max_bits, v_num_tiles)
		(?, 1)    eval_gx_pattern_alloc_cache_bb3_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb3_in(v_i.0 + 1, v_max_bits, v_num_tiles) [ v_i.0 < v_num_tiles ]
	start location:	eval_gx_pattern_alloc_cache_start
	leaf cost:	6

A polynomial rank function with
	Pol(eval_gx_pattern_alloc_cache_start) = V_3
	Pol(eval_gx_pattern_alloc_cache_bb0_in) = V_3
	Pol(eval_gx_pattern_alloc_cache_0) = V_3
	Pol(eval_gx_pattern_alloc_cache_1) = V_3
	Pol(eval_gx_pattern_alloc_cache_2) = V_3
	Pol(eval_gx_pattern_alloc_cache_bb3_in) = -V_1 + V_3
orients all transitions weakly and the transition
	eval_gx_pattern_alloc_cache_bb3_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb3_in(v_i.0 + 1, v_max_bits, v_num_tiles) [ v_i.0 < v_num_tiles ]
strictly and produces the following problem:
4:	T:
		(1, 1)              eval_gx_pattern_alloc_cache_start(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb0_in(v_i.0, v_max_bits, v_num_tiles)
		(1, 1)              eval_gx_pattern_alloc_cache_bb0_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_0(v_i.0, v_max_bits, v_num_tiles)
		(1, 1)              eval_gx_pattern_alloc_cache_0(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_1(v_i.0, v_max_bits, v_num_tiles)
		(1, 1)              eval_gx_pattern_alloc_cache_1(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_2(v_i.0, v_max_bits, v_num_tiles)
		(1, 1)              eval_gx_pattern_alloc_cache_2(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb3_in(0, v_max_bits, v_num_tiles)
		(v_num_tiles, 1)    eval_gx_pattern_alloc_cache_bb3_in(v_i.0, v_max_bits, v_num_tiles) -> eval_gx_pattern_alloc_cache_bb3_in(v_i.0 + 1, v_max_bits, v_num_tiles) [ v_i.0 < v_num_tiles ]
	start location:	eval_gx_pattern_alloc_cache_start
	leaf cost:	6

Complexity upper bound v_num_tiles + 11

Time: 0.095 sec (SMT: 0.083 sec)
