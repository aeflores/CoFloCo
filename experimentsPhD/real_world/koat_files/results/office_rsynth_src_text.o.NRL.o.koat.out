YES(?, 35*v_n + 37)

Initial complexity problem:
1:	T:
		(1, 1)    eval_NRL_start(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_bb0_in(v_.01, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_bb0_in(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_3(v_.01, v_19, v_n + 3, v_7, v_n))
		(?, 1)    eval_NRL_3(v_.01, v_19, v_3, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_19, v_3, v_7, v_n), eval_NRL_4(v_.01, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_4(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_5(v_.01, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_5(v_.01, v_19, v_3, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_19, v_3, v_7, v_n), eval_NRL_6(v_.01, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_6(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_n, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_bb1_in(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, nondef.1, v_3, v_.01 - 1, v_n)) [ v_.01 > 0 ]
		(?, 1)    eval_NRL_bb1_in(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_19, v_3, v_.01 - 1, v_n)) [ v_.01 > 0 ]
		(?, 1)    eval_NRL_bb1_in(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_19, v_3, v_7, v_n)) [ v_.01 <= 0 ]
		(?, 1)    eval_NRL_17(v_.01, v_19, v_3, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_19, v_3, v_7, v_n), eval_NRL_18(v_.01, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_18(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_bb4_in(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_24(v_.01, v_19, v_3, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_19, v_3, v_7, v_n), eval_NRL_25(v_.01, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_25(v_.01, v_19, v_3, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_19, v_3, v_7, v_n), eval_NRL_26(v_.01, v_19, v_3, v_7, v_n))
		(?, 1)    eval_NRL_26(v_.01, v_19, v_3, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_19, v_3, v_7, v_n))
	start location:	eval_NRL_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_.01, v_7, v_n].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_NRL_26(v_.01, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n))
		(?, 1)    eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_7, v_n)) [ v_.01 <= 0 ]
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ v_.01 > 0 ]
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ v_.01 > 0 ]
		(?, 1)    eval_NRL_6(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_n, v_7, v_n))
		(?, 1)    eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_4(v_.01, v_7, v_n) -> Com_1(eval_NRL_5(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_bb0_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_3(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_start(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb0_in(v_.01, v_7, v_n))
	start location:	eval_NRL_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_NRL_26(v_.01, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n))
		(?, 1)    eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_7, v_n)) [ v_.01 <= 0 ]
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ v_.01 > 0 ]
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ v_.01 > 0 ]
		(1, 1)    eval_NRL_6(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_n, v_7, v_n))
		(1, 1)    eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_4(v_.01, v_7, v_n) -> Com_1(eval_NRL_5(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_bb0_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_3(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_start(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb0_in(v_.01, v_7, v_n))
	start location:	eval_NRL_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_NRL_26) = 1
	Pol(eval_NRL_stop) = 0
	Pol(eval_NRL_25) = 2
	Pol(eval_free_start) = 0
	Pol(eval_NRL_24) = 3
	Pol(eval_guess_word_start) = 0
	Pol(eval_NRL_bb4_in) = 4
	Pol(eval_NRL_bb1_in) = 4
	Pol(eval_NRL_18) = 4
	Pol(eval_NRL_17) = 4
	Pol(eval_toupper_start) = 0
	Pol(eval_NRL_6) = 4
	Pol(eval_NRL_5) = 4
	Pol(eval___ctype_b_loc_start) = 0
	Pol(eval_NRL_4) = 4
	Pol(eval_NRL_3) = 4
	Pol(eval_malloc_start) = 0
	Pol(eval_NRL_bb0_in) = 4
	Pol(eval_NRL_start) = 4
orients all transitions weakly and the transitions
	eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_7, v_n)) [ v_.01 <= 0 ]
	eval_NRL_26(v_.01, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_7, v_n))
	eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n))
	eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n))
strictly and produces the following problem:
4:	T:
		(4, 1)    eval_NRL_26(v_.01, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_7, v_n))
		(4, 1)    eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n))
		(4, 1)    eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n))
		(?, 1)    eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n))
		(?, 1)    eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n))
		(4, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_7, v_n)) [ v_.01 <= 0 ]
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ v_.01 > 0 ]
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ v_.01 > 0 ]
		(1, 1)    eval_NRL_6(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_n, v_7, v_n))
		(1, 1)    eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_4(v_.01, v_7, v_n) -> Com_1(eval_NRL_5(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_bb0_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_3(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_start(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb0_in(v_.01, v_7, v_n))
	start location:	eval_NRL_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_NRL_17: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_NRL_18: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_NRL_24: -X_1 + X_3 >= 0 /\ -X_1 >= 0
  For symbol eval_NRL_25: -X_1 + X_3 >= 0 /\ -X_1 >= 0
  For symbol eval_NRL_26: -X_1 + X_3 >= 0 /\ -X_1 >= 0
  For symbol eval_NRL_bb1_in: -X_1 + X_3 >= 0
  For symbol eval_NRL_bb4_in: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ -X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ -X_1 + X_3 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ -X_1 + X_2 + 1 >= 0 /\ X_1 - 1 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_NRL_start(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb0_in(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_bb0_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_3(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_4(v_.01, v_7, v_n) -> Com_1(eval_NRL_5(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))
		(1, 1)    eval_NRL_6(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_n, v_7, v_n))
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
		(?, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
		(4, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 <= 0 ]
		(?, 1)    eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(?, 1)    eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(?, 1)    eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(4, 1)    eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\ -v_.01 >= 0 ]
		(4, 1)    eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\ -v_.01 >= 0 ]
		(4, 1)    eval_NRL_26(v_.01, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\ -v_.01 >= 0 ]
	start location:	eval_NRL_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_NRL_bb4_in) = 4*V_2 + 3*V_3 - 2
	Pol(eval_NRL_bb1_in) = 4*V_1 + 3*V_3 - 3
	Pol(eval_NRL_17) = 4*V_2 + 3*V_3
	Pol(eval_NRL_18) = -V_1 + 5*V_2 + 3*V_3
	Pol(eval_toupper_start) = V_1 - V_2 - 1
and size complexities
	S("eval_NRL_26(v_.01, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 0-0) = v_n
	S("eval_NRL_26(v_.01, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 0-1) = v_7 + v_n
	S("eval_NRL_26(v_.01, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 0-2) = v_n
	S("eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 0-0) = v_n
	S("eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 0-1) = v_7 + v_n
	S("eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 0-2) = v_n
	S("eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 1-0) = v_n
	S("eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 1-1) = v_7 + v_n
	S("eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 1-2) = v_n
	S("eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 0-0) = v_n
	S("eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 0-1) = v_7 + v_n
	S("eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 0-2) = v_n
	S("eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 1-0) = v_n
	S("eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 1-1) = v_7 + v_n
	S("eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ -v_.01 >= 0 ]", 1-2) = v_n
	S("eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 0-0) = v_n
	S("eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 0-1) = v_n
	S("eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 0-2) = v_n
	S("eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 0-0) = v_n
	S("eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 0-1) = v_n
	S("eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 0-2) = v_n
	S("eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 0-0) = v_n
	S("eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 0-1) = v_n
	S("eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 0-2) = v_n
	S("eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 1-0) = v_n
	S("eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 1-1) = v_n
	S("eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\\ v_7 + v_n - 1 >= 0 /\\ -v_7 + v_n - 1 >= 0 /\\ v_.01 + v_n - 2 >= 0 /\\ -v_.01 + v_n >= 0 /\\ v_.01 - v_7 - 1 >= 0 /\\ v_7 >= 0 /\\ v_.01 + v_7 - 1 >= 0 /\\ -v_.01 + v_7 + 1 >= 0 /\\ v_.01 - 1 >= 0 ]", 1-2) = v_n
	S("eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ v_.01 <= 0 ]", 0-0) = v_n
	S("eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ v_.01 <= 0 ]", 0-1) = v_7 + v_n
	S("eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\\ v_.01 <= 0 ]", 0-2) = v_n
	S("eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\\ v_.01 > 0 ]", 0-0) = v_n
	S("eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\\ v_.01 > 0 ]", 0-1) = v_n
	S("eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\\ v_.01 > 0 ]", 0-2) = v_n
	S("eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\\ v_.01 > 0 ]", 0-0) = v_n
	S("eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\\ v_.01 > 0 ]", 0-1) = v_n
	S("eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\\ v_.01 > 0 ]", 0-2) = v_n
	S("eval_NRL_6(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_n, v_7, v_n))", 0-0) = v_n
	S("eval_NRL_6(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_n, v_7, v_n))", 0-1) = v_7
	S("eval_NRL_6(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_n, v_7, v_n))", 0-2) = v_n
	S("eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))", 0-0) = v_.01
	S("eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))", 0-1) = v_7
	S("eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))", 0-2) = v_n
	S("eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))", 1-0) = v_.01
	S("eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))", 1-1) = v_7
	S("eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))", 1-2) = v_n
	S("eval_NRL_4(v_.01, v_7, v_n) -> Com_1(eval_NRL_5(v_.01, v_7, v_n))", 0-0) = v_.01
	S("eval_NRL_4(v_.01, v_7, v_n) -> Com_1(eval_NRL_5(v_.01, v_7, v_n))", 0-1) = v_7
	S("eval_NRL_4(v_.01, v_7, v_n) -> Com_1(eval_NRL_5(v_.01, v_7, v_n))", 0-2) = v_n
	S("eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))", 0-0) = v_.01
	S("eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))", 0-1) = v_7
	S("eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))", 0-2) = v_n
	S("eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))", 1-0) = v_.01
	S("eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))", 1-1) = v_7
	S("eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))", 1-2) = v_n
	S("eval_NRL_bb0_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_3(v_.01, v_7, v_n))", 0-0) = v_.01
	S("eval_NRL_bb0_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_3(v_.01, v_7, v_n))", 0-1) = v_7
	S("eval_NRL_bb0_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_3(v_.01, v_7, v_n))", 0-2) = v_n
	S("eval_NRL_start(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb0_in(v_.01, v_7, v_n))", 0-0) = v_.01
	S("eval_NRL_start(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb0_in(v_.01, v_7, v_n))", 0-1) = v_7
	S("eval_NRL_start(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb0_in(v_.01, v_7, v_n))", 0-2) = v_n
orients the transitions
	eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
	eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
	eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
weakly and the transitions
	eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
	eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
	eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
	eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
strictly and produces the following problem:
6:	T:
		(1, 1)            eval_NRL_start(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb0_in(v_.01, v_7, v_n))
		(1, 1)            eval_NRL_bb0_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_3(v_.01, v_7, v_n))
		(1, 1)            eval_NRL_3(v_.01, v_7, v_n) -> Com_2(eval_malloc_start(v_.01, v_7, v_n), eval_NRL_4(v_.01, v_7, v_n))
		(1, 1)            eval_NRL_4(v_.01, v_7, v_n) -> Com_1(eval_NRL_5(v_.01, v_7, v_n))
		(1, 1)            eval_NRL_5(v_.01, v_7, v_n) -> Com_2(eval___ctype_b_loc_start(v_.01, v_7, v_n), eval_NRL_6(v_.01, v_7, v_n))
		(1, 1)            eval_NRL_6(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_n, v_7, v_n))
		(7*v_n + 3, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_17(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
		(7*v_n + 3, 1)    eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_.01 - 1, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 > 0 ]
		(4, 1)            eval_NRL_bb1_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_24(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\ v_.01 <= 0 ]
		(7*v_n + 3, 1)    eval_NRL_17(v_.01, v_7, v_n) -> Com_2(eval_toupper_start(v_.01, v_7, v_n), eval_NRL_18(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(7*v_n + 3, 1)    eval_NRL_18(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb4_in(v_.01, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(7*v_n + 3, 1)    eval_NRL_bb4_in(v_.01, v_7, v_n) -> Com_1(eval_NRL_bb1_in(v_7, v_7, v_n)) [ v_n - 1 >= 0 /\ v_7 + v_n - 1 >= 0 /\ -v_7 + v_n - 1 >= 0 /\ v_.01 + v_n - 2 >= 0 /\ -v_.01 + v_n >= 0 /\ v_.01 - v_7 - 1 >= 0 /\ v_7 >= 0 /\ v_.01 + v_7 - 1 >= 0 /\ -v_.01 + v_7 + 1 >= 0 /\ v_.01 - 1 >= 0 ]
		(4, 1)            eval_NRL_24(v_.01, v_7, v_n) -> Com_2(eval_guess_word_start(v_.01, v_7, v_n), eval_NRL_25(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\ -v_.01 >= 0 ]
		(4, 1)            eval_NRL_25(v_.01, v_7, v_n) -> Com_2(eval_free_start(v_.01, v_7, v_n), eval_NRL_26(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\ -v_.01 >= 0 ]
		(4, 1)            eval_NRL_26(v_.01, v_7, v_n) -> Com_1(eval_NRL_stop(v_.01, v_7, v_n)) [ -v_.01 + v_n >= 0 /\ -v_.01 >= 0 ]
	start location:	eval_NRL_start
	leaf cost:	0

Complexity upper bound 35*v_n + 37

Time: 0.368 sec (SMT: 0.304 sec)
