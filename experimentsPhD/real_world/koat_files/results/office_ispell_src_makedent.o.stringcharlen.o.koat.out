MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_stringcharlen_start(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb0_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, nondef.0 - 1, 0)
		(?, 1)    eval_stringcharlen_bb1_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_'defdupchar, v_'laststringch, nondef.1, v_canonical, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb1_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb16_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 > v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb3_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb6_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb6_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb16_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb6_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb10_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_8 - 1, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb10_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_8 + 1)
		(?, 1)    eval_stringcharlen_bb10_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_8 - 1, v_8 + 1)
		(?, 1)    eval_stringcharlen_bb10_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb16_in(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_stop(v_'defdupchar, v_'laststringch, v_8, v_canonical, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_8, v_highstringno.0, v_lowstringno.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_stringcharlen_bb16_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_stop(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_8 - 1, v_8 + 1)
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_8 + 1)
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_8 - 1, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb16_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb16_in(v_8, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 > v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0)
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	0

Repeatedly removing leaves of the complexity graph in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_8 + 1)
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_8 - 1, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0)
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

Repeatedly propagating knowledge in problem 3 produces the following problem:
4:	T:
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_8 + 1)
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_8 - 1, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(1, 1)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0)
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

By chaining the transition eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) with all transitions in problem 4, the following new transition is obtained:
	eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
We thus obtain the following problem:
5:	T:
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_8 + 1)
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_8 - 1, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(1, 1)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0)
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

By chaining the transition eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_8 + 1) with all transitions in problem 5, the following new transition is obtained:
	eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
We thus obtain the following problem:
6:	T:
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_8 - 1, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(1, 1)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0)
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

By chaining the transition eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, v_8 - 1, v_lowstringno.0) with all transitions in problem 6, the following new transition is obtained:
	eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_8 - 1, v_lowstringno.0) [ v_lowstringno.0 <= v_8 - 1 ]
We thus obtain the following problem:
7:	T:
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_8 - 1, v_lowstringno.0) [ v_lowstringno.0 <= v_8 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(1, 1)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0)
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

Repeatedly propagating knowledge in problem 7 produces the following problem:
8:	T:
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_8 - 1, v_lowstringno.0) [ v_lowstringno.0 <= v_8 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0)
		(1, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(1, 1)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0)
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

By chaining the transition eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) with all transitions in problem 8, the following new transition is obtained:
	eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
We thus obtain the following problem:
9:	T:
		(?, 2)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_8 - 1, v_lowstringno.0) [ v_lowstringno.0 <= v_8 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 1)    eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(1, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(1, 1)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0)
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_stringcharlen_bb6_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
We thus obtain the following problem:
10:	T:
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_8 - 1, v_lowstringno.0) [ v_lowstringno.0 <= v_8 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(1, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(1, 1)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0)
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

By chaining the transition eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb1_in(v_8, nondef.0 - 1, 0) with all transitions in problem 10, the following new transition is obtained:
	eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, nondef.0 - 1, 0) [ 0 <= nondef.0 - 1 ]
We thus obtain the following problem:
11:	T:
		(1, 2)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, nondef.0 - 1, 0) [ 0 <= nondef.0 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_8 - 1, v_lowstringno.0) [ v_lowstringno.0 <= v_8 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(1, 1)    eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_stringcharlen_bb1_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
We thus obtain the following problem:
12:	T:
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_8 - 1, v_lowstringno.0) [ v_lowstringno.0 <= v_8 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(1, 2)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, nondef.0 - 1, 0) [ 0 <= nondef.0 - 1 ]
		(1, 1)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0)
	start location:	eval_stringcharlen_start
	leaf cost:	4

By chaining the transition eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) with all transitions in problem 12, the following new transition is obtained:
	eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, nondef.0 - 1, 0) [ 0 <= nondef.0 - 1 ]
We thus obtain the following problem:
13:	T:
		(1, 3)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, nondef.0 - 1, 0) [ 0 <= nondef.0 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_8 - 1, v_lowstringno.0) [ v_lowstringno.0 <= v_8 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(1, 2)    eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, nondef.0 - 1, 0) [ 0 <= nondef.0 - 1 ]
	start location:	eval_stringcharlen_start
	leaf cost:	4

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_stringcharlen_bb0_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, nondef.0 - 1, 0) [ 0 <= nondef.0 - 1 ]
We thus obtain the following problem:
14:	T:
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_8 - 1, v_lowstringno.0) [ v_lowstringno.0 <= v_8 - 1 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_8 + 1) [ v_8 + 1 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, v_highstringno.0, v_lowstringno.0) [ v_lowstringno.0 <= v_highstringno.0 ]
		(?, 2)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb10_in(v_8, v_highstringno.0, v_lowstringno.0)
		(?, 1)    eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(v_8, v_highstringno.0, v_lowstringno.0)
		(1, 3)    eval_stringcharlen_start(v_8, v_highstringno.0, v_lowstringno.0) -> eval_stringcharlen_bb3_in(nondef.1, nondef.0 - 1, 0) [ 0 <= nondef.0 - 1 ]
	start location:	eval_stringcharlen_start
	leaf cost:	4

Complexity upper bound ?

Time: 0.904 sec (SMT: 0.729 sec)
