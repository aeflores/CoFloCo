YES(?, 5993)

Initial complexity problem:
1:	T:
		(1, 1)    eval_toutword_start(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_1(0, v_10, v_bit.0))
		(?, 1)    eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_2(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, 0))
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 < 26 ]
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 < 26 ]
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_13(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 26 ]
		(?, 1)    eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1))
		(?, 1)    eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_14(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_stop(v_'has_marker, v_10, v_bit.0))
	start location:	eval_toutword_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(1, 1)    eval_toutword_start(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0))
		(1, 1)    eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_1(0, v_10, v_bit.0))
		(1, 1)    eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0))
		(1, 1)    eval_toutword_2(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, 0))
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 < 26 ]
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 < 26 ]
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_13(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 26 ]
		(?, 1)    eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1))
		(?, 1)    eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_14(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_stop(v_'has_marker, v_10, v_bit.0))
	start location:	eval_toutword_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_toutword_start) = 3
	Pol(eval_toutword_bb0_in) = 3
	Pol(eval_toutword_1) = 3
	Pol(eval_fprintf_start) = 0
	Pol(eval_toutword_2) = 3
	Pol(eval_toutword_bb1_in) = 3
	Pol(eval_toutword_9) = 3
	Pol(eval_toutword_bb4_in) = 3
	Pol(eval_toutword_13) = 2
	Pol(eval_flagout_start) = 0
	Pol(eval_toutword_10) = 3
	Pol(eval_toutword_14) = 1
	Pol(eval_toutword_stop) = 0
orients all transitions weakly and the transitions
	eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_13(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 26 ]
	eval_toutword_14(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_stop(v_'has_marker, v_10, v_bit.0))
	eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0))
strictly and produces the following problem:
3:	T:
		(1, 1)    eval_toutword_start(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0))
		(1, 1)    eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_1(0, v_10, v_bit.0))
		(1, 1)    eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0))
		(1, 1)    eval_toutword_2(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, 0))
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 < 26 ]
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 < 26 ]
		(3, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_13(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 26 ]
		(?, 1)    eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0))
		(?, 1)    eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1))
		(3, 1)    eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0))
		(3, 1)    eval_toutword_14(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_stop(v_'has_marker, v_10, v_bit.0))
	start location:	eval_toutword_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval_toutword_1: -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_toutword_10: -X_3 + 25 >= 0 /\ X_2 - X_3 - 65 >= 0 /\ -X_2 - X_3 + 115 >= 0 /\ X_1 - X_3 + 25 >= 0 /\ -X_1 - X_3 + 25 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 65 >= 0 /\ -X_2 + X_3 + 65 >= 0 /\ X_1 + X_3 >= 0 /\ -X_1 + X_3 >= 0 /\ -X_2 + 90 >= 0 /\ X_1 - X_2 + 90 >= 0 /\ -X_1 - X_2 + 90 >= 0 /\ X_2 - 65 >= 0 /\ X_1 + X_2 - 65 >= 0 /\ -X_1 + X_2 - 65 >= 0 /\ -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_toutword_13: X_3 - 26 >= 0 /\ X_1 + X_3 - 26 >= 0 /\ -X_1 + X_3 - 26 >= 0 /\ -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_toutword_14: X_3 - 26 >= 0 /\ X_1 + X_3 - 26 >= 0 /\ -X_1 + X_3 - 26 >= 0 /\ -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_toutword_2: -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_toutword_9: -X_3 + 25 >= 0 /\ X_2 - X_3 - 65 >= 0 /\ -X_2 - X_3 + 115 >= 0 /\ X_1 - X_3 + 25 >= 0 /\ -X_1 - X_3 + 25 >= 0 /\ X_3 >= 0 /\ X_2 + X_3 - 65 >= 0 /\ -X_2 + X_3 + 65 >= 0 /\ X_1 + X_3 >= 0 /\ -X_1 + X_3 >= 0 /\ -X_2 + 90 >= 0 /\ X_1 - X_2 + 90 >= 0 /\ -X_1 - X_2 + 90 >= 0 /\ X_2 - 65 >= 0 /\ X_1 + X_2 - 65 >= 0 /\ -X_1 + X_2 - 65 >= 0 /\ -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_toutword_bb1_in: X_3 >= 0 /\ X_1 + X_3 >= 0 /\ -X_1 + X_3 >= 0 /\ -X_1 >= 0 /\ X_1 >= 0
  For symbol eval_toutword_bb4_in: -X_3 + 25 >= 0 /\ X_1 - X_3 + 25 >= 0 /\ -X_1 - X_3 + 25 >= 0 /\ X_3 >= 0 /\ X_1 + X_3 >= 0 /\ -X_1 + X_3 >= 0 /\ -X_1 >= 0 /\ X_1 >= 0


This yielded the following problem:
4:	T:
		(3, 1)    eval_toutword_14(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_stop(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\ v_'has_marker + v_bit.0 - 26 >= 0 /\ -v_'has_marker + v_bit.0 - 26 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(3, 1)    eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\ v_'has_marker + v_bit.0 - 26 >= 0 /\ -v_'has_marker + v_bit.0 - 26 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(?, 1)    eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1)) [ -v_bit.0 + 25 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(?, 1)    eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\ v_10 - v_bit.0 - 65 >= 0 /\ -v_10 - v_bit.0 + 115 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_10 + v_bit.0 - 65 >= 0 /\ -v_10 + v_bit.0 + 65 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_10 + 90 >= 0 /\ v_'has_marker - v_10 + 90 >= 0 /\ -v_'has_marker - v_10 + 90 >= 0 /\ v_10 - 65 >= 0 /\ v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(?, 1)    eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\ v_10 - v_bit.0 - 65 >= 0 /\ -v_10 - v_bit.0 + 115 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_10 + v_bit.0 - 65 >= 0 /\ -v_10 + v_bit.0 + 65 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_10 + 90 >= 0 /\ v_'has_marker - v_10 + 90 >= 0 /\ -v_'has_marker - v_10 + 90 >= 0 /\ v_10 - 65 >= 0 /\ v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(3, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_13(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 >= 26 ]
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 < 26 ]
		(?, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 < 26 ]
		(1, 1)    eval_toutword_2(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, 0)) [ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(1, 1)    eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0)) [ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(1, 1)    eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_1(0, v_10, v_bit.0))
		(1, 1)    eval_toutword_start(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0))
	start location:	eval_toutword_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_toutword_bb4_in) = -44*V_3 + 1165
	Pol(eval_toutword_bb1_in) = -44*V_3 + 1196
	Pol(eval_toutword_9) = -44*V_3 + 1183
	Pol(eval_flagout_start) = -18*V_2 - 44*V_3
	Pol(eval_toutword_10) = 18*V_2 - 62*V_3
and size complexities
	S("eval_toutword_start(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0))", 0-0) = v_'has_marker
	S("eval_toutword_start(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0))", 0-1) = v_10
	S("eval_toutword_start(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0))", 0-2) = v_bit.0
	S("eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_1(0, v_10, v_bit.0))", 0-0) = 0
	S("eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_1(0, v_10, v_bit.0))", 0-1) = v_10
	S("eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_1(0, v_10, v_bit.0))", 0-2) = v_bit.0
	S("eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0)) [ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-0) = 0
	S("eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0)) [ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-1) = v_10
	S("eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0)) [ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-2) = v_bit.0
	S("eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0)) [ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 1-0) = 0
	S("eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0)) [ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 1-1) = v_10
	S("eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0)) [ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 1-2) = v_bit.0
	S("eval_toutword_2(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, 0)) [ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-0) = 0
	S("eval_toutword_2(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, 0)) [ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-1) = v_10
	S("eval_toutword_2(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, 0)) [ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-2) = 0
	S("eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 /\\ v_bit.0 < 26 ]", 0-0) = 0
	S("eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 /\\ v_bit.0 < 26 ]", 0-1) = 90
	S("eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 /\\ v_bit.0 < 26 ]", 0-2) = 25
	S("eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 /\\ v_bit.0 < 26 ]", 0-0) = 0
	S("eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 /\\ v_bit.0 < 26 ]", 0-1) = v_10 + 90
	S("eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 /\\ v_bit.0 < 26 ]", 0-2) = 25
	S("eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_13(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 /\\ v_bit.0 >= 26 ]", 0-0) = 0
	S("eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_13(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 /\\ v_bit.0 >= 26 ]", 0-1) = v_10 + 90
	S("eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_13(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 /\\ v_bit.0 >= 26 ]", 0-2) = 26
	S("eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\\ v_10 - v_bit.0 - 65 >= 0 /\\ -v_10 - v_bit.0 + 115 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_10 + v_bit.0 - 65 >= 0 /\\ -v_10 + v_bit.0 + 65 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_10 + 90 >= 0 /\\ v_'has_marker - v_10 + 90 >= 0 /\\ -v_'has_marker - v_10 + 90 >= 0 /\\ v_10 - 65 >= 0 /\\ v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-0) = 0
	S("eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\\ v_10 - v_bit.0 - 65 >= 0 /\\ -v_10 - v_bit.0 + 115 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_10 + v_bit.0 - 65 >= 0 /\\ -v_10 + v_bit.0 + 65 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_10 + 90 >= 0 /\\ v_'has_marker - v_10 + 90 >= 0 /\\ -v_'has_marker - v_10 + 90 >= 0 /\\ v_10 - 65 >= 0 /\\ v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-1) = 90
	S("eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\\ v_10 - v_bit.0 - 65 >= 0 /\\ -v_10 - v_bit.0 + 115 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_10 + v_bit.0 - 65 >= 0 /\\ -v_10 + v_bit.0 + 65 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_10 + 90 >= 0 /\\ v_'has_marker - v_10 + 90 >= 0 /\\ -v_'has_marker - v_10 + 90 >= 0 /\\ v_10 - 65 >= 0 /\\ v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-2) = 25
	S("eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\\ v_10 - v_bit.0 - 65 >= 0 /\\ -v_10 - v_bit.0 + 115 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_10 + v_bit.0 - 65 >= 0 /\\ -v_10 + v_bit.0 + 65 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_10 + 90 >= 0 /\\ v_'has_marker - v_10 + 90 >= 0 /\\ -v_'has_marker - v_10 + 90 >= 0 /\\ v_10 - 65 >= 0 /\\ v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 1-0) = 0
	S("eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\\ v_10 - v_bit.0 - 65 >= 0 /\\ -v_10 - v_bit.0 + 115 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_10 + v_bit.0 - 65 >= 0 /\\ -v_10 + v_bit.0 + 65 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_10 + 90 >= 0 /\\ v_'has_marker - v_10 + 90 >= 0 /\\ -v_'has_marker - v_10 + 90 >= 0 /\\ v_10 - 65 >= 0 /\\ v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 1-1) = 90
	S("eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\\ v_10 - v_bit.0 - 65 >= 0 /\\ -v_10 - v_bit.0 + 115 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_10 + v_bit.0 - 65 >= 0 /\\ -v_10 + v_bit.0 + 65 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_10 + 90 >= 0 /\\ v_'has_marker - v_10 + 90 >= 0 /\\ -v_'has_marker - v_10 + 90 >= 0 /\\ v_10 - 65 >= 0 /\\ v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 1-2) = 25
	S("eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\\ v_10 - v_bit.0 - 65 >= 0 /\\ -v_10 - v_bit.0 + 115 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_10 + v_bit.0 - 65 >= 0 /\\ -v_10 + v_bit.0 + 65 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_10 + 90 >= 0 /\\ v_'has_marker - v_10 + 90 >= 0 /\\ -v_'has_marker - v_10 + 90 >= 0 /\\ v_10 - 65 >= 0 /\\ v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-0) = 0
	S("eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\\ v_10 - v_bit.0 - 65 >= 0 /\\ -v_10 - v_bit.0 + 115 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_10 + v_bit.0 - 65 >= 0 /\\ -v_10 + v_bit.0 + 65 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_10 + 90 >= 0 /\\ v_'has_marker - v_10 + 90 >= 0 /\\ -v_'has_marker - v_10 + 90 >= 0 /\\ v_10 - 65 >= 0 /\\ v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-1) = 90
	S("eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\\ v_10 - v_bit.0 - 65 >= 0 /\\ -v_10 - v_bit.0 + 115 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_10 + v_bit.0 - 65 >= 0 /\\ -v_10 + v_bit.0 + 65 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_10 + 90 >= 0 /\\ v_'has_marker - v_10 + 90 >= 0 /\\ -v_'has_marker - v_10 + 90 >= 0 /\\ v_10 - 65 >= 0 /\\ v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker + v_10 - 65 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-2) = 25
	S("eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1)) [ -v_bit.0 + 25 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-0) = 0
	S("eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1)) [ -v_bit.0 + 25 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-1) = v_10 + 90
	S("eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1)) [ -v_bit.0 + 25 >= 0 /\\ v_'has_marker - v_bit.0 + 25 >= 0 /\\ -v_'has_marker - v_bit.0 + 25 >= 0 /\\ v_bit.0 >= 0 /\\ v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker + v_bit.0 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-2) = 26
	S("eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\\ v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-0) = 0
	S("eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\\ v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-1) = v_10 + 90
	S("eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\\ v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-2) = 26
	S("eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\\ v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 1-0) = 0
	S("eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\\ v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 1-1) = v_10 + 90
	S("eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\\ v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 1-2) = 26
	S("eval_toutword_14(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_stop(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\\ v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-0) = 0
	S("eval_toutword_14(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_stop(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\\ v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-1) = v_10 + 90
	S("eval_toutword_14(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_stop(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\\ v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker + v_bit.0 - 26 >= 0 /\\ -v_'has_marker >= 0 /\\ v_'has_marker >= 0 ]", 0-2) = 26
orients the transitions
	eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1)) [ -v_bit.0 + 25 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
	eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 < 26 ]
	eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 < 26 ]
	eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\ v_10 - v_bit.0 - 65 >= 0 /\ -v_10 - v_bit.0 + 115 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_10 + v_bit.0 - 65 >= 0 /\ -v_10 + v_bit.0 + 65 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_10 + 90 >= 0 /\ v_'has_marker - v_10 + 90 >= 0 /\ -v_'has_marker - v_10 + 90 >= 0 /\ v_10 - 65 >= 0 /\ v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
	eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\ v_10 - v_bit.0 - 65 >= 0 /\ -v_10 - v_bit.0 + 115 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_10 + v_bit.0 - 65 >= 0 /\ -v_10 + v_bit.0 + 65 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_10 + 90 >= 0 /\ v_'has_marker - v_10 + 90 >= 0 /\ -v_'has_marker - v_10 + 90 >= 0 /\ v_10 - 65 >= 0 /\ v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
weakly and the transitions
	eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1)) [ -v_bit.0 + 25 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
	eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 < 26 ]
	eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 < 26 ]
	eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\ v_10 - v_bit.0 - 65 >= 0 /\ -v_10 - v_bit.0 + 115 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_10 + v_bit.0 - 65 >= 0 /\ -v_10 + v_bit.0 + 65 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_10 + 90 >= 0 /\ v_'has_marker - v_10 + 90 >= 0 /\ -v_'has_marker - v_10 + 90 >= 0 /\ v_10 - 65 >= 0 /\ v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
	eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\ v_10 - v_bit.0 - 65 >= 0 /\ -v_10 - v_bit.0 + 115 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_10 + v_bit.0 - 65 >= 0 /\ -v_10 + v_bit.0 + 65 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_10 + 90 >= 0 /\ v_'has_marker - v_10 + 90 >= 0 /\ -v_'has_marker - v_10 + 90 >= 0 /\ v_10 - 65 >= 0 /\ v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
strictly and produces the following problem:
5:	T:
		(3, 1)       eval_toutword_14(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_stop(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\ v_'has_marker + v_bit.0 - 26 >= 0 /\ -v_'has_marker + v_bit.0 - 26 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(3, 1)       eval_toutword_13(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_14(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 - 26 >= 0 /\ v_'has_marker + v_bit.0 - 26 >= 0 /\ -v_'has_marker + v_bit.0 - 26 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(1196, 1)    eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0 + 1)) [ -v_bit.0 + 25 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(1196, 1)    eval_toutword_10(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\ v_10 - v_bit.0 - 65 >= 0 /\ -v_10 - v_bit.0 + 115 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_10 + v_bit.0 - 65 >= 0 /\ -v_10 + v_bit.0 + 65 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_10 + 90 >= 0 /\ v_'has_marker - v_10 + 90 >= 0 /\ -v_'has_marker - v_10 + 90 >= 0 /\ v_10 - 65 >= 0 /\ v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(1196, 1)    eval_toutword_9(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_flagout_start(v_'has_marker, v_10, v_bit.0), eval_toutword_10(v_'has_marker, v_10, v_bit.0)) [ -v_bit.0 + 25 >= 0 /\ v_10 - v_bit.0 - 65 >= 0 /\ -v_10 - v_bit.0 + 115 >= 0 /\ v_'has_marker - v_bit.0 + 25 >= 0 /\ -v_'has_marker - v_bit.0 + 25 >= 0 /\ v_bit.0 >= 0 /\ v_10 + v_bit.0 - 65 >= 0 /\ -v_10 + v_bit.0 + 65 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_10 + 90 >= 0 /\ v_'has_marker - v_10 + 90 >= 0 /\ -v_'has_marker - v_10 + 90 >= 0 /\ v_10 - 65 >= 0 /\ v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker + v_10 - 65 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(3, 1)       eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_13(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 >= 26 ]
		(1196, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb4_in(v_'has_marker, v_10, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 < 26 ]
		(1196, 1)    eval_toutword_bb1_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_9(v_'has_marker, v_bit.0 + 65, v_bit.0)) [ v_bit.0 >= 0 /\ v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker + v_bit.0 >= 0 /\ -v_'has_marker >= 0 /\ v_'has_marker >= 0 /\ v_bit.0 < 26 ]
		(1, 1)       eval_toutword_2(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb1_in(v_'has_marker, v_10, 0)) [ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(1, 1)       eval_toutword_1(v_'has_marker, v_10, v_bit.0) -> Com_2(eval_fprintf_start(v_'has_marker, v_10, v_bit.0), eval_toutword_2(v_'has_marker, v_10, v_bit.0)) [ -v_'has_marker >= 0 /\ v_'has_marker >= 0 ]
		(1, 1)       eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_1(0, v_10, v_bit.0))
		(1, 1)       eval_toutword_start(v_'has_marker, v_10, v_bit.0) -> Com_1(eval_toutword_bb0_in(v_'has_marker, v_10, v_bit.0))
	start location:	eval_toutword_start
	leaf cost:	0

Complexity upper bound 5993

Time: 0.970 sec (SMT: 0.863 sec)
