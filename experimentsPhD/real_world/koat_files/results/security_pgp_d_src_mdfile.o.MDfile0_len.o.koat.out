MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_MDfile0_len_start(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_bb0_in(v_.0, v_.1, v_4, v_5, v_6, v_longcount))
		(?, 1)    eval_MDfile0_len_bb0_in(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_0(v_.0, v_.1, v_4, v_5, v_6, v_longcount))
		(?, 1)    eval_MDfile0_len_0(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_2(eval_MD5Init_start(v_.0, v_.1, v_4, v_5, v_6, v_longcount), eval_MDfile0_len_1(v_.0, v_.1, v_4, v_5, v_6, v_longcount))
		(?, 1)    eval_MDfile0_len_1(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_bb1_in(v_longcount, v_.1, v_4, v_5, v_6, v_longcount))
		(?, 1)    eval_MDfile0_len_bb1_in(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_5(v_.0, v_.1, v_.0, v_5, v_6, v_longcount))
		(?, 1)    eval_MDfile0_len_bb1_in(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_5(v_.0, v_.1, 1024, v_5, v_6, v_longcount))
		(?, 1)    eval_MDfile0_len_5(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_2(eval_fread_start(v_.0, v_.1, v_4, v_5, v_6, v_longcount), eval_MDfile0_len_6(v_.0, v_.1, v_4, nondef.0, v_6, v_longcount))
		(?, 1)    eval_MDfile0_len_6(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_8(v_.0, v_.1, v_4, v_5, v_5, v_longcount))
		(?, 1)    eval_MDfile0_len_6(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_bb3_in(v_.0, v_.0, v_4, v_5, v_5, v_longcount))
		(?, 1)    eval_MDfile0_len_8(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_2(eval_MD5Update_start(v_.0, v_.1, v_4, v_5, v_6, v_longcount), eval_MDfile0_len_9(v_.0, v_.1, v_4, v_5, v_6, v_longcount))
		(?, 1)    eval_MDfile0_len_9(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_bb3_in(v_.0, v_.0 - v_6, v_4, v_5, v_6, v_longcount))
		(?, 1)    eval_MDfile0_len_bb3_in(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_bb1_in(v_.1, v_.1, v_4, v_5, v_6, v_longcount)) [ v_6 = 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_stop(v_.0, v_.1, v_4, v_5, v_6, v_longcount)) [ v_6 < 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_.0, v_.1, v_4, v_5, v_6, v_longcount) -> Com_1(eval_MDfile0_len_stop(v_.0, v_.1, v_4, v_5, v_6, v_longcount)) [ v_6 > 1024 ]
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_5, v_6].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_6 > 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_6 < 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_6 = 1024 ]
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6))
		(?, 1)    eval_MDfile0_len_8(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_6), eval_MDfile0_len_9(v_5, v_6))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_8(v_5, v_5))
		(?, 1)    eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(?, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb0_in(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
		(1, 1)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_bb0_in(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_6 > 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_6 < 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_6 = 1024 ]
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6))
		(?, 1)    eval_MDfile0_len_8(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_6), eval_MDfile0_len_9(v_5, v_6))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_8(v_5, v_5))
		(?, 1)    eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 1)    eval_MDfile0_len_bb0_in(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
		(1, 1)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_bb0_in(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_MDfile0_len_bb3_in) = 1
	Pol(eval_MDfile0_len_stop) = 0
	Pol(eval_MDfile0_len_bb1_in) = 1
	Pol(eval_MDfile0_len_9) = 1
	Pol(eval_MDfile0_len_8) = 1
	Pol(eval_MD5Update_start) = 0
	Pol(eval_MDfile0_len_6) = 1
	Pol(eval_MDfile0_len_5) = 1
	Pol(eval_fread_start) = 0
	Pol(eval_MDfile0_len_1) = 1
	Pol(eval_MDfile0_len_0) = 1
	Pol(eval_MD5Init_start) = 0
	Pol(eval_MDfile0_len_bb0_in) = 1
	Pol(eval_MDfile0_len_start) = 1
orients all transitions weakly and the transitions
	eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_6 < 1024 ]
	eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_6 > 1024 ]
strictly and produces the following problem:
4:	T:
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_6 < 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_6 = 1024 ]
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6))
		(?, 1)    eval_MDfile0_len_8(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_6), eval_MDfile0_len_9(v_5, v_6))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_8(v_5, v_5))
		(?, 1)    eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 1)    eval_MDfile0_len_bb0_in(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
		(1, 1)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_bb0_in(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_MDfile0_len_8: X_1 - X_2 >= 0 /\ -X_1 + X_2 >= 0
  For symbol eval_MDfile0_len_9: X_1 - X_2 >= 0 /\ -X_1 + X_2 >= 0
  For symbol eval_MDfile0_len_bb3_in: X_1 - X_2 >= 0 /\ -X_1 + X_2 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_bb0_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_bb0_in(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_8(v_5, v_5))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 1)    eval_MDfile0_len_8(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_6), eval_MDfile0_len_9(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
	start location:	eval_MDfile0_len_start
	leaf cost:	0

By chaining the transition eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_bb0_in(v_5, v_6)) with all transitions in problem 5, the following new transition is obtained:
	eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
		(1, 1)    eval_MDfile0_len_bb0_in(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_8(v_5, v_5))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 1)    eval_MDfile0_len_8(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_6), eval_MDfile0_len_9(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_MDfile0_len_bb0_in(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
We thus obtain the following problem:
7:	T:
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(?, 1)    eval_MDfile0_len_8(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_6), eval_MDfile0_len_9(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_8(v_5, v_5))
		(?, 1)    eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

By chaining the transition eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_8(v_5, v_5)) with all transitions in problem 7, the following new transition is obtained:
	eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
We thus obtain the following problem:
8:	T:
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(?, 1)    eval_MDfile0_len_8(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_6), eval_MDfile0_len_9(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 1)    eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 8:
	eval_MDfile0_len_8(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_6), eval_MDfile0_len_9(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 1)    eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(?, 1)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

By chaining the transition eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_1(eval_MDfile0_len_5(v_5, v_6)) with all transitions in problem 9, the following new transition is obtained:
	eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
We thus obtain the following problem:
10:	T:
		(?, 2)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 1)    eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 10:
	eval_MDfile0_len_5(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
We thus obtain the following problem:
11:	T:
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 2)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

By chaining the transition eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ] with all transitions in problem 11, the following new transition is obtained:
	eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
We thus obtain the following problem:
12:	T:
		(?, 3)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(?, 2)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 12 produces the following problem:
13:	T:
		(?, 3)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(1, 2)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(1, 1)    eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

By chaining the transition eval_MDfile0_len_1(v_5, v_6) -> Com_1(eval_MDfile0_len_bb1_in(v_5, v_6)) with all transitions in problem 13, the following new transition is obtained:
	eval_MDfile0_len_1(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
We thus obtain the following problem:
14:	T:
		(1, 3)    eval_MDfile0_len_1(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(?, 3)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(1, 2)    eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 14:
	eval_MDfile0_len_bb1_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
We thus obtain the following problem:
15:	T:
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(?, 3)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(1, 3)    eval_MDfile0_len_1(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(1, 2)    eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

By chaining the transition eval_MDfile0_len_start(v_5, v_6) -> Com_1(eval_MDfile0_len_0(v_5, v_6)) with all transitions in problem 15, the following new transition is obtained:
	eval_MDfile0_len_start(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
We thus obtain the following problem:
16:	T:
		(1, 3)    eval_MDfile0_len_start(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(?, 3)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(1, 3)    eval_MDfile0_len_1(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(1, 1)    eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 16:
	eval_MDfile0_len_0(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
We thus obtain the following problem:
17:	T:
		(?, 1)    eval_MDfile0_len_9(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 ]
		(?, 3)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 = 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 > 1024 ]
		(1, 1)    eval_MDfile0_len_bb3_in(v_5, v_6) -> Com_1(eval_MDfile0_len_stop(v_5, v_6)) [ v_5 - v_6 >= 0 /\ -v_5 + v_6 >= 0 /\ v_6 < 1024 ]
		(?, 2)    eval_MDfile0_len_6(v_5, v_6) -> Com_2(eval_MD5Update_start(v_5, v_5), eval_MDfile0_len_9(v_5, v_5)) [ 0 >= 0 ]
		(?, 1)    eval_MDfile0_len_6(v_5, v_6) -> Com_1(eval_MDfile0_len_bb3_in(v_5, v_5))
		(1, 3)    eval_MDfile0_len_1(v_5, v_6) -> Com_2(eval_fread_start(v_5, v_6), eval_MDfile0_len_6(nondef.0, v_6))
		(1, 3)    eval_MDfile0_len_start(v_5, v_6) -> Com_2(eval_MD5Init_start(v_5, v_6), eval_MDfile0_len_1(v_5, v_6))
	start location:	eval_MDfile0_len_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.938 sec (SMT: 0.757 sec)
