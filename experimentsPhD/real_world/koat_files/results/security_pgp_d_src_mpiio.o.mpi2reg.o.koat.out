MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_mpi2reg_start(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb0_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_bb0_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_0(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0), eval_mpi2reg_1(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_1(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_1(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(v_'global_precision, nondef.3 - nondef.1, v_33, v_41, nondef.1, v_bytecount.0))
		(?, 1)    eval_mpi2reg_20(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0), eval_mpi2reg_21(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_21(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_'global_precision, v_21, v_33, v_41, v_5, v_5))
		(?, 1)    eval_mpi2reg_bb2_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0 - 1)) [ v_bytecount.0 < 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0 - 1)) [ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_'global_precision, v_21, nondef.5, v_41, v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
		(?, 1)    eval_mpi2reg_33(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0), eval_mpi2reg_34(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_34(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_'global_precision, v_21, v_33, nondef.6, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_38(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0), eval_mpi2reg_39(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_39(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0), eval_mpi2reg_40(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_40(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_bb5_in(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_'global_precision, v_21, v_33, v_41, v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_5, v_bytecount.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 < 0 ]
		(?, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(?, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(?, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb0_in(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0))
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb0_in(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_mpi2reg_bb5_in) = 1
	Pol(eval_mpi2reg_stop) = 0
	Pol(eval_mpi2reg_40) = 2
	Pol(eval_mpi2reg_39) = 3
	Pol(eval_mp_init_start) = 0
	Pol(eval_mpi2reg_38) = 4
	Pol(eval_llvm.memcpy.p0i8.p0i8.i64_start) = 0
	Pol(eval_mpi2reg_34) = 5
	Pol(eval_mpi2reg_33) = 6
	Pol(eval_hiloswap_start) = 0
	Pol(eval_mpi2reg_bb2_in) = 7
	Pol(eval_mpi2reg_21) = 7
	Pol(eval_mpi2reg_20) = 7
	Pol(eval_llvm.memset.p0i8.i64_start) = 0
	Pol(eval_mpi2reg_1) = 7
	Pol(eval_mpi2reg_0) = 7
	Pol(eval_fetch_word16_start) = 0
	Pol(eval_mpi2reg_bb0_in) = 7
	Pol(eval_mpi2reg_start) = 7
orients all transitions weakly and the transitions
	eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
	eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
	eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
	eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0))
	eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0))
	eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_5, v_bytecount.0))
	eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0))
strictly and produces the following problem:
4:	T:
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_bytecount.0 = 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb0_in(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_mpi2reg_33: -X_2 >= 0 /\ X_1 - X_2 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 >= 0 /\ X_1 >= 0
  For symbol eval_mpi2reg_34: -X_2 >= 0 /\ X_1 - X_2 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 >= 0 /\ X_1 >= 0
  For symbol eval_mpi2reg_38: -X_2 >= 0 /\ X_1 - X_2 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 >= 0 /\ X_1 >= 0
  For symbol eval_mpi2reg_39: -X_2 >= 0 /\ X_1 - X_2 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 >= 0 /\ X_1 >= 0
  For symbol eval_mpi2reg_40: -X_2 >= 0 /\ X_1 - X_2 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 >= 0 /\ X_1 >= 0
  For symbol eval_mpi2reg_bb2_in: X_1 - X_2 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb0_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(7, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ]
		(7, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

By chaining the transition eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb0_in(v_5, v_bytecount.0)) with all transitions in problem 5, the following new transition is obtained:
	eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
We thus obtain the following problem:
6:	T:
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(7, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ]
		(7, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 6:
	eval_mpi2reg_bb0_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
We thus obtain the following problem:
7:	T:
		(7, 1)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

By chaining the transition eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ] with all transitions in problem 7, the following new transition is obtained:
	eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
We thus obtain the following problem:
8:	T:
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

By chaining the transition eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_38(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ] with all transitions in problem 8, the following new transition is obtained:
	eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
We thus obtain the following problem:
9:	T:
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_mpi2reg_38(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
We thus obtain the following problem:
10:	T:
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

By chaining the transition eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_33(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 ] with all transitions in problem 10, the following new transition is obtained:
	eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
We thus obtain the following problem:
11:	T:
		(7, 2)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_mpi2reg_33(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
We thus obtain the following problem:
12:	T:
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

By chaining the transition eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_20(nondef.1, v_bytecount.0)) with all transitions in problem 12, the following new transition is obtained:
	eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(nondef.1, v_bytecount.0), eval_mpi2reg_21(nondef.1, v_bytecount.0))
We thus obtain the following problem:
13:	T:
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(nondef.1, v_bytecount.0), eval_mpi2reg_21(nondef.1, v_bytecount.0))
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 1)    eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 13:
	eval_mpi2reg_20(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_21(v_5, v_bytecount.0))
We thus obtain the following problem:
14:	T:
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(nondef.1, v_bytecount.0), eval_mpi2reg_21(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

By chaining the transition eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb5_in(v_5, v_bytecount.0)) with all transitions in problem 14, the following new transition is obtained:
	eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
We thus obtain the following problem:
15:	T:
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(7, 1)    eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(nondef.1, v_bytecount.0), eval_mpi2reg_21(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 15:
	eval_mpi2reg_bb5_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
We thus obtain the following problem:
16:	T:
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(nondef.1, v_bytecount.0), eval_mpi2reg_21(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

By chaining the transition eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_0(v_5, v_bytecount.0)) with all transitions in problem 16, the following new transition is obtained:
	eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
We thus obtain the following problem:
17:	T:
		(1, 3)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(nondef.1, v_bytecount.0), eval_mpi2reg_21(nondef.1, v_bytecount.0))
		(1, 1)    eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 17:
	eval_mpi2reg_0(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
We thus obtain the following problem:
18:	T:
		(7, 2)    eval_mpi2reg_40(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 1)    eval_mpi2reg_39(v_5, v_bytecount.0) -> Com_2(eval_mp_init_start(v_5, v_bytecount.0), eval_mpi2reg_40(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_34(v_5, v_bytecount.0) -> Com_2(eval_llvm.memcpy.p0i8.p0i8.i64_start(v_5, v_bytecount.0), eval_mpi2reg_39(v_5, v_bytecount.0)) [ -v_bytecount.0 >= 0 /\ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(7, 2)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_2(eval_hiloswap_start(v_5, v_bytecount.0), eval_mpi2reg_34(v_5, v_bytecount.0)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 = 0 /\ -v_bytecount.0 >= 0 /\ v_bytecount.0 >= 0 /\ v_5 + v_bytecount.0 >= 0 /\ v_5 >= 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 > 0 ]
		(?, 1)    eval_mpi2reg_bb2_in(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_bytecount.0 - 1)) [ v_5 - v_bytecount.0 >= 0 /\ v_bytecount.0 < 0 ]
		(1, 1)    eval_mpi2reg_21(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_bb2_in(v_5, v_5))
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_1(eval_mpi2reg_stop(v_5, v_bytecount.0))
		(1, 2)    eval_mpi2reg_1(v_5, v_bytecount.0) -> Com_2(eval_llvm.memset.p0i8.i64_start(nondef.1, v_bytecount.0), eval_mpi2reg_21(nondef.1, v_bytecount.0))
		(1, 3)    eval_mpi2reg_start(v_5, v_bytecount.0) -> Com_2(eval_fetch_word16_start(v_5, v_bytecount.0), eval_mpi2reg_1(v_5, v_bytecount.0))
	start location:	eval_mpi2reg_start
	leaf cost:	0

Complexity upper bound ?

Time: 0.401 sec (SMT: 0.321 sec)
