MAYBE

Initial complexity problem:
1:	T:
		(1, 1)    eval_quantize_fs_dither_start(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb0_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_bb0_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_19, nondef.0, nondef.1, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
		(?, 1)    eval_quantize_fs_dither_bb1_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_9, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 < v_num_rows ]
		(?, 1)    eval_quantize_fs_dither_bb1_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= v_num_rows ]
		(?, 1)    eval_quantize_fs_dither_6(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_7(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_19, v_4, v_6, v_9, 0, v_col.0, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb7_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_ci.0 < v_4 ]
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_ci.0 >= v_4 ]
		(?, 1)    eval_quantize_fs_dither_bb7_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_19, v_4, v_6, v_9, v_ci.0, v_6, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_col.0 > 0 ]
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_19, v_4, v_6, v_9, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_19, v_4, v_6, v_9, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_col.0 <= 0 ]
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

Slicing away variables that do not contribute to conditions from problem 1 leaves variables [v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0].
We thus obtain the following problem:
2:	T:
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_col.0 <= 0 ]
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_col.0 > 0 ]
		(?, 1)    eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_ci.0 >= v_4 ]
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_ci.0 < v_4 ]
		(?, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= v_num_rows ]
		(?, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 < v_num_rows ]
		(?, 1)    eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
		(1, 1)    eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_col.0 <= 0 ]
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_col.0 > 0 ]
		(?, 1)    eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_ci.0 >= v_4 ]
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_ci.0 < v_4 ]
		(?, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= v_num_rows ]
		(?, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 < v_num_rows ]
		(1, 1)    eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
		(1, 1)    eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_quantize_fs_dither_bb8_in) = 1
	Pol(eval_quantize_fs_dither_bb3_in) = 1
	Pol(eval_quantize_fs_dither_bb7_in) = 1
	Pol(eval_quantize_fs_dither_bb1_in) = 1
	Pol(eval_quantize_fs_dither_7) = 1
	Pol(eval_quantize_fs_dither_6) = 1
	Pol(eval_jzero_far_start) = 0
	Pol(eval_quantize_fs_dither_stop) = 0
	Pol(eval_quantize_fs_dither_bb0_in) = 1
	Pol(eval_quantize_fs_dither_start) = 1
orients all transitions weakly and the transition
	eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= v_num_rows ]
strictly and produces the following problem:
4:	T:
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_col.0 <= 0 ]
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_col.0 > 0 ]
		(?, 1)    eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_ci.0 >= v_4 ]
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_ci.0 < v_4 ]
		(?, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0))
		(?, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0))
		(1, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= v_num_rows ]
		(?, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 < v_num_rows ]
		(1, 1)    eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
		(1, 1)    eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

Applied AI with 'oct' on problem 4 to obtain the following invariants:
  For symbol eval_quantize_fs_dither_6: X_5 - X_6 - 1 >= 0 /\ X_6 >= 0 /\ X_5 + X_6 - 1 >= 0 /\ X_5 - 1 >= 0
  For symbol eval_quantize_fs_dither_7: X_5 - X_6 - 1 >= 0 /\ X_6 >= 0 /\ X_5 + X_6 - 1 >= 0 /\ X_5 - 1 >= 0
  For symbol eval_quantize_fs_dither_bb1_in: X_6 >= 0
  For symbol eval_quantize_fs_dither_bb3_in: X_5 - X_6 - 1 >= 0 /\ X_6 >= 0 /\ X_5 + X_6 - 1 >= 0 /\ X_3 + X_6 >= 0 /\ X_5 - 1 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_3 >= 0
  For symbol eval_quantize_fs_dither_bb7_in: X_5 - X_6 - 1 >= 0 /\ X_6 >= 0 /\ X_5 + X_6 - 1 >= 0 /\ X_3 + X_6 >= 0 /\ X_1 + X_6 - 1 >= 0 /\ X_5 - 1 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_1 + X_5 - 2 >= 0 /\ X_1 - X_3 - 1 >= 0 /\ X_3 >= 0 /\ X_1 + X_3 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol eval_quantize_fs_dither_bb8_in: X_5 - X_6 - 1 >= 0 /\ X_6 >= 0 /\ X_5 + X_6 - 1 >= 0 /\ X_3 + X_6 >= 0 /\ X_1 + X_6 - 1 >= 0 /\ X_5 - 1 >= 0 /\ X_3 + X_5 - 1 >= 0 /\ X_1 + X_5 - 2 >= 0 /\ X_2 - X_4 >= 0 /\ X_1 - X_3 - 1 >= 0 /\ X_3 >= 0 /\ X_1 + X_3 - 1 >= 0 /\ X_1 - 1 >= 0


This yielded the following problem:
5:	T:
		(1, 1)    eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0))
		(1, 1)    eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
		(?, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows ]
		(1, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(?, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(?, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 ]
		(?, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(?, 1)    eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(?, 1)    eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 ]
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_quantize_fs_dither_start) = 4*V_5
	Pol(eval_quantize_fs_dither_bb0_in) = 4*V_5
	Pol(eval_quantize_fs_dither_bb1_in) = 4*V_5 - 4*V_6
	Pol(eval_quantize_fs_dither_6) = 4*V_5 - 4*V_6 - 1
	Pol(eval_quantize_fs_dither_stop) = 4*V_5 - 4*V_6
	Pol(eval_jzero_far_start) = -4*V_6
	Pol(eval_quantize_fs_dither_7) = 4*V_5 - 4*V_6 - 2
	Pol(eval_quantize_fs_dither_bb3_in) = 4*V_5 - 4*V_6 - 3
	Pol(eval_quantize_fs_dither_bb7_in) = 4*V_5 - 4*V_6 - 3
	Pol(eval_quantize_fs_dither_bb8_in) = 4*V_5 - 4*V_6 - 3
orients all transitions weakly and the transitions
	eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
	eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows ]
	eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
	eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
strictly and produces the following problem:
6:	T:
		(1, 1)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0))
		(1, 1)               eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(?, 1)               eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 ]
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

By chaining the transition eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) with all transitions in problem 6, the following new transition is obtained:
	eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
We thus obtain the following problem:
7:	T:
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
		(1, 1)               eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(?, 1)               eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 ]
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 7:
	eval_quantize_fs_dither_bb0_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
We thus obtain the following problem:
8:	T:
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(?, 1)               eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(?, 1)               eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

By chaining the transition eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 ] with all transitions in problem 8, the following new transition is obtained:
	eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(?, 2)               eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(?, 1)               eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 9:
	eval_quantize_fs_dither_bb7_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
We thus obtain the following problem:
10:	T:
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(?, 2)               eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

By chaining the transition eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows ] with all transitions in problem 10, the following new transition is obtained:
	eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
We thus obtain the following problem:
11:	T:
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(?, 2)               eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 11:
	eval_quantize_fs_dither_6(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
We thus obtain the following problem:
12:	T:
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(?, 2)               eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

By chaining the transition eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 ] with all transitions in problem 12, the following new transitions are obtained:
	eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0 + 1, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 < v_4 /\ v_4 - v_ci.0 - 2 >= 0 /\ v_4 + v_ci.0 >= 0 ]
	eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 ]
We thus obtain the following problem:
13:	T:
		(?, 3)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0 + 1, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 < v_4 /\ v_4 - v_ci.0 - 2 >= 0 /\ v_4 + v_ci.0 >= 0 ]
		(?, 2)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(?, 2)               eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 13 produces the following problem:
14:	T:
		(?, 3)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0 + 1, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 < v_4 /\ v_4 - v_ci.0 - 2 >= 0 /\ v_4 + v_ci.0 >= 0 ]
		(?, 2)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval_quantize_fs_dither_bb8_in) = V_5 - V_6
	Pol(eval_quantize_fs_dither_bb1_in) = V_5 - V_6
	Pol(eval_quantize_fs_dither_bb3_in) = V_5 - V_6
	Pol(eval_quantize_fs_dither_7) = V_5 - V_6
	Pol(eval_jzero_far_start) = -V_6
	Pol(eval_quantize_fs_dither_stop) = V_5 - V_6
	Pol(eval_quantize_fs_dither_start) = V_5
orients all transitions weakly and the transition
	eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 ]
strictly and produces the following problem:
15:	T:
		(?, 3)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0 + 1, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 < v_4 /\ v_4 - v_ci.0 - 2 >= 0 /\ v_4 + v_ci.0 >= 0 ]
		(v_num_rows, 2)      eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

By chaining the transition eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 ] with all transitions in problem 15, the following new transitions are obtained:
	eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 < v_num_rows /\ v_num_rows - v_row.0 - 2 >= 0 /\ v_num_rows + v_row.0 >= 0 ]
	eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 >= v_num_rows ]
We thus obtain the following problem:
16:	T:
		(v_num_rows, 4)      eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 < v_num_rows /\ v_num_rows - v_row.0 - 2 >= 0 /\ v_num_rows + v_row.0 >= 0 ]
		(v_num_rows, 3)      eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 >= v_num_rows ]
		(?, 3)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0 + 1, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 < v_4 /\ v_4 - v_ci.0 - 2 >= 0 /\ v_4 + v_ci.0 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

By chaining the transition eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 ] with all transitions in problem 16, the following new transitions are obtained:
	eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 < v_num_rows /\ v_num_rows - v_row.0 - 2 >= 0 /\ v_num_rows + v_row.0 >= 0 ]
	eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 >= v_num_rows ]
We thus obtain the following problem:
17:	T:
		(4*v_num_rows, 3)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 < v_num_rows /\ v_num_rows - v_row.0 - 2 >= 0 /\ v_num_rows + v_row.0 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 >= v_num_rows ]
		(v_num_rows, 4)      eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 < v_num_rows /\ v_num_rows - v_row.0 - 2 >= 0 /\ v_num_rows + v_row.0 >= 0 ]
		(v_num_rows, 3)      eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 >= v_num_rows ]
		(?, 3)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0 + 1, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 < v_4 /\ v_4 - v_ci.0 - 2 >= 0 /\ v_4 + v_ci.0 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
		(1, 2)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0))
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

By chaining the transition eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb1_in(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)) with all transitions in problem 17, the following new transitions are obtained:
	eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0), eval_quantize_fs_dither_7(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)) [ 0 >= 0 /\ 0 < v_num_rows /\ v_num_rows - 1 >= 0 ]
	eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)) [ 0 >= 0 /\ 0 >= v_num_rows ]
We thus obtain the following problem:
18:	T:
		(1, 4)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0), eval_quantize_fs_dither_7(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)) [ 0 >= 0 /\ 0 < v_num_rows /\ v_num_rows - 1 >= 0 ]
		(1, 3)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)) [ 0 >= 0 /\ 0 >= v_num_rows ]
		(4*v_num_rows, 3)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 < v_num_rows /\ v_num_rows - v_row.0 - 2 >= 0 /\ v_num_rows + v_row.0 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 >= v_num_rows ]
		(v_num_rows, 4)      eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 < v_num_rows /\ v_num_rows - v_row.0 - 2 >= 0 /\ v_num_rows + v_row.0 >= 0 ]
		(v_num_rows, 3)      eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 >= v_num_rows ]
		(?, 3)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0 + 1, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 < v_4 /\ v_4 - v_ci.0 - 2 >= 0 /\ v_4 + v_ci.0 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 1)               eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 18:
	eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 < v_num_rows /\ v_num_rows - v_row.0 - 1 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
	eval_quantize_fs_dither_bb1_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0)) [ v_row.0 >= 0 /\ v_row.0 >= v_num_rows ]
We thus obtain the following problem:
19:	T:
		(v_num_rows, 3)      eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 >= v_num_rows ]
		(v_num_rows, 4)      eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0 + 1, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 < v_num_rows /\ v_num_rows - v_row.0 - 2 >= 0 /\ v_num_rows + v_row.0 >= 0 ]
		(?, 3)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0 + 1, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 <= 0 /\ v_ci.0 + v_row.0 + 1 >= 0 /\ v_ci.0 + v_num_rows >= 0 /\ v_ci.0 + 1 >= 0 /\ v_ci.0 + 1 < v_4 /\ v_4 - v_ci.0 - 2 >= 0 /\ v_4 + v_ci.0 >= 0 ]
		(?, 1)               eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_col.0 - 1, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_4 + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_6 - v_col.0 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_ci.0 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 /\ v_col.0 > 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 >= v_num_rows ]
		(4*v_num_rows, 3)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1), eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0 + 1)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 >= v_4 /\ v_row.0 + 1 >= 0 /\ v_row.0 + 1 < v_num_rows /\ v_num_rows - v_row.0 - 2 >= 0 /\ v_num_rows + v_row.0 >= 0 ]
		(4*v_num_rows, 2)    eval_quantize_fs_dither_bb3_in(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb8_in(v_4, v_6, v_ci.0, v_6, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_ci.0 + v_row.0 >= 0 /\ v_num_rows - 1 >= 0 /\ v_ci.0 + v_num_rows - 1 >= 0 /\ v_ci.0 >= 0 /\ v_ci.0 < v_4 /\ v_4 + v_row.0 - 1 >= 0 /\ v_4 + v_num_rows - 2 >= 0 /\ v_4 - v_ci.0 - 1 >= 0 /\ v_4 + v_ci.0 - 1 >= 0 /\ v_4 - 1 >= 0 ]
		(4*v_num_rows, 1)    eval_quantize_fs_dither_7(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_bb3_in(v_4, v_6, 0, v_col.0, v_num_rows, v_row.0)) [ v_num_rows - v_row.0 - 1 >= 0 /\ v_row.0 >= 0 /\ v_num_rows + v_row.0 - 1 >= 0 /\ v_num_rows - 1 >= 0 ]
		(1, 3)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_1(eval_quantize_fs_dither_stop(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)) [ 0 >= 0 /\ 0 >= v_num_rows ]
		(1, 4)               eval_quantize_fs_dither_start(v_4, v_6, v_ci.0, v_col.0, v_num_rows, v_row.0) -> Com_2(eval_jzero_far_start(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0), eval_quantize_fs_dither_7(nondef.0, nondef.1, v_ci.0, v_col.0, v_num_rows, 0)) [ 0 >= 0 /\ 0 < v_num_rows /\ v_num_rows - 1 >= 0 ]
	start location:	eval_quantize_fs_dither_start
	leaf cost:	0

Complexity upper bound ?

Time: 4.228 sec (SMT: 3.081 sec)
